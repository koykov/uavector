// Code generated by "uaxplc -module=device -input=~/dev/php/device-detector/regexes/device -target=/home/maxl/kadam/uaxpl/device_repo.go". DO NOT EDIT.

package uaxpl

import (
	"regexp"
)

var (
	__dr_idx = [8][]deviceTuple{
		// cameras.yml
		{
			deviceTuple{type64: 0x50000000b, brand64: 0x00000005, matchRI: -0x0001, match64: 0xb00000018, modelSI: 0x0000, models64: 0x00000000},
			deviceTuple{type64: 0x50000000b, brand64: 0x180000001f, matchRI: 0x0000, match64: 0x00000000, modelSI: -0x0001, models64: 0x100000006},
		},
		// car_browsers.yml
		{
			deviceTuple{type64: 0x8e00000099, brand64: 0x8b0000008e, matchRI: 0x0002, match64: 0x00000000, modelSI: -0x0001, models64: 0x600000007},
			deviceTuple{type64: 0x8e00000099, brand64: 0xa3000000a7, matchRI: 0x0004, match64: 0x00000000, modelSI: -0x0001, models64: 0x700000008},
			deviceTuple{type64: 0x8e00000099, brand64: 0xaf000000b8, matchRI: -0x0001, match64: 0xb8000000c6, modelSI: -0x0001, models64: 0x800000009},
			deviceTuple{type64: 0x8e00000099, brand64: 0xcf000000d4, matchRI: 0x0006, match64: 0x00000000, modelSI: -0x0001, models64: 0x90000000b},
			deviceTuple{type64: 0x8e00000099, brand64: 0xe7000000ed, matchRI: -0x0001, match64: 0xed000000fd, modelSI: -0x0001, models64: 0xb0000000c},
		},
		// consoles.yml
		{
			deviceTuple{type64: 0x1060000010d, brand64: 0x10000000106, matchRI: 0x0008, match64: 0x00000000, modelSI: 0x000c, models64: 0x00000000},
			deviceTuple{type64: 0x1060000010d, brand64: 0x1170000011a, matchRI: -0x0001, match64: 0x11a00000126, modelSI: 0x000d, models64: 0x00000000},
			deviceTuple{type64: 0x1060000010d, brand64: 0x12f00000138, matchRI: -0x0001, match64: 0x1380000013c, modelSI: -0x0001, models64: 0xe00000013},
			deviceTuple{type64: 0x1060000010d, brand64: 0x17800000180, matchRI: 0x0009, match64: 0x00000000, modelSI: 0x0013, models64: 0x00000000},
			deviceTuple{type64: 0x1060000010d, brand64: 0x18200000186, matchRI: -0x0001, match64: 0x18200000186, modelSI: 0x0014, models64: 0x00000000},
			deviceTuple{type64: 0x1060000010d, brand64: 0x18600000194, matchRI: -0x0001, match64: 0x18600000194, modelSI: -0x0001, models64: 0x1500000017},
			deviceTuple{type64: 0x1060000010d, brand64: 0x1b4000001b9, matchRI: -0x0001, match64: 0x1b9000001c4, modelSI: 0x0017, models64: 0x00000000},
			deviceTuple{type64: 0x1060000010d, brand64: 0x1cb000001cf, matchRI: 0x000b, match64: 0x00000000, modelSI: -0x0001, models64: 0x180000001a},
			deviceTuple{type64: 0x1060000010d, brand64: 0x1ee000001f2, matchRI: 0x000c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a0000001e},
		},
		// mobiles.yml
		{
			deviceTuple{type64: 0x24300000245, brand64: 0x23c00000243, matchRI: 0x0010, match64: 0x00000000, modelSI: 0x001e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x24500000247, matchRI: 0x0011, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f00000021},
			deviceTuple{type64: 0x24700000251, brand64: 0x2680000026b, matchRI: 0x0014, match64: 0x00000000, modelSI: -0x0001, models64: 0x210000002d},
			deviceTuple{type64: 0x24700000251, brand64: 0x29d000002a2, matchRI: 0x0021, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d0000002f},
			deviceTuple{type64: 0x24700000251, brand64: 0x2a6000002a9, matchRI: 0x0024, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f00000030},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2b7000002b9, matchRI: 0x0026, match64: 0x00000000, modelSI: -0x0001, models64: 0x3000000038},
			deviceTuple{type64: 0x24700000251, brand64: 0x31000000315, matchRI: 0x002e, match64: 0x00000000, modelSI: -0x0001, models64: 0x380000003f},
			deviceTuple{type64: 0x24300000245, brand64: 0x34100000345, matchRI: 0x0035, match64: 0x00000000, modelSI: 0x003f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x34500000349, matchRI: 0x0036, match64: 0x00000000, modelSI: 0x0040, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x3520000035a, matchRI: 0x0037, match64: 0x00000000, modelSI: -0x0001, models64: 0x4100000045},
			deviceTuple{type64: 0x24700000251, brand64: 0x37d00000381, matchRI: 0x0038, match64: 0x00000000, modelSI: 0x0045, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x38100000384, matchRI: 0x0039, match64: 0x00000000, modelSI: 0x0046, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x39100000393, matchRI: 0x003a, match64: 0x00000000, modelSI: -0x0001, models64: 0x470000004c},
			deviceTuple{type64: 0x24300000245, brand64: 0x3c6000003ca, matchRI: -0x0001, match64: 0x3c6000003ca, modelSI: -0x0001, models64: 0x4c00000055},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x43200000436, matchRI: 0x003f, match64: 0x00000000, modelSI: 0x0055, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x4390000043e, matchRI: 0x0040, match64: 0x00000000, modelSI: 0x0056, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x43e00000443, matchRI: 0x0041, match64: 0x00000000, modelSI: -0x0001, models64: 0x5700000058},
			deviceTuple{type64: 0x24700000251, brand64: 0x45f00000468, matchRI: 0x0042, match64: 0x00000000, modelSI: 0x0058, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x4680000046b, matchRI: 0x0043, match64: 0x00000000, modelSI: -0x0001, models64: 0x5900000060},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x48b00000491, matchRI: 0x004b, match64: 0x00000000, modelSI: -0x0001, models64: 0x6000000063},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x4b1000004b6, matchRI: 0x004d, match64: 0x00000000, modelSI: 0x0063, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x4c4000004c7, matchRI: 0x004e, match64: 0x00000000, modelSI: -0x0001, models64: 0x6400000066},
			deviceTuple{type64: 0x24300000245, brand64: 0x4fa00000503, matchRI: 0x004f, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x5030000050c, matchRI: 0x0050, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x50c00000517, matchRI: 0x0051, match64: 0x00000000, modelSI: 0x0066, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x51c0000051f, matchRI: 0x0052, match64: 0x00000000, modelSI: 0x0067, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x51f00000523, matchRI: 0x0053, match64: 0x00000000, modelSI: 0x0068, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x52300000528, matchRI: 0x0054, match64: 0x00000000, modelSI: -0x0001, models64: 0x6900000078},
			deviceTuple{type64: 0x1060000010d, brand64: 0x59a000005a2, matchRI: 0x0057, match64: 0x00000000, modelSI: 0x0078, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5a2000005a7, matchRI: -0x0001, match64: 0x5a2000005a7, modelSI: -0x0001, models64: 0x790000007a},
			deviceTuple{type64: 0x24700000251, brand64: 0x5a7000005aa, matchRI: 0x0059, match64: 0x00000000, modelSI: -0x0001, models64: 0x7a0000007d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5c4000005cb, matchRI: 0x005a, match64: 0x00000000, modelSI: 0x007d, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x5cb000005ce, matchRI: 0x005b, match64: 0x00000000, modelSI: -0x0001, models64: 0x7e00000080},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5ce000005d5, matchRI: -0x0001, match64: 0x5ce000005d5, modelSI: -0x0001, models64: 0x8000000081},
			deviceTuple{type64: 0x5da000005e7, brand64: 0x5d5000005da, matchRI: 0x005f, match64: 0x00000000, modelSI: 0x0081, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x5ef000005f4, matchRI: -0x0001, match64: 0x5ef000005f4, modelSI: -0x0001, models64: 0x8200000084},
			deviceTuple{type64: 0x24700000251, brand64: 0x5f4000005f8, matchRI: 0x0062, match64: 0x00000000, modelSI: 0x0084, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x5f8000005fc, matchRI: 0x0063, match64: 0x00000000, modelSI: -0x0001, models64: 0x8500000098},
			deviceTuple{type64: 0x24700000251, brand64: 0x6b6000006bb, matchRI: 0x0076, match64: 0x00000000, modelSI: 0x0098, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x6bb000006c0, matchRI: 0x0077, match64: 0x00000000, modelSI: 0x0099, models64: 0x00000000},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x6c5000006c9, matchRI: 0x0078, match64: 0x00000000, modelSI: -0x0001, models64: 0x9a0000009d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7070000070b, matchRI: 0x007a, match64: 0x00000000, modelSI: -0x0001, models64: 0x9d0000009e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7160000071b, matchRI: 0x007c, match64: 0x00000000, modelSI: 0x009e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x71b0000071e, matchRI: 0x007d, match64: 0x00000000, modelSI: 0x009f, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x71e00000721, matchRI: 0x007e, match64: 0x00000000, modelSI: -0x0001, models64: 0xa0000000a4},
			deviceTuple{type64: 0x24300000245, brand64: 0x7470000074b, matchRI: 0x0083, match64: 0x00000000, modelSI: -0x0001, models64: 0xa4000000a5},
			deviceTuple{type64: 0x24700000251, brand64: 0x74b0000074f, matchRI: 0x0085, match64: 0x00000000, modelSI: -0x0001, models64: 0xa5000000a7},
			deviceTuple{type64: 0x24700000251, brand64: 0x74f00000753, matchRI: 0x0088, match64: 0x00000000, modelSI: -0x0001, models64: 0xa7000000a9},
			deviceTuple{type64: 0x24700000251, brand64: 0x76200000768, matchRI: 0x008a, match64: 0x00000000, modelSI: -0x0001, models64: 0xa9000000b5},
			deviceTuple{type64: 0x24300000245, brand64: 0x7e1000007eb, matchRI: 0x0097, match64: 0x00000000, modelSI: 0x00b5, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7eb000007ee, matchRI: 0x0098, match64: 0x00000000, modelSI: -0x0001, models64: 0xb6000000c2},
			deviceTuple{type64: 0x24300000245, brand64: 0x88d00000894, matchRI: 0x00a2, match64: 0x00000000, modelSI: 0x00c2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x89400000898, matchRI: 0x00a3, match64: 0x00000000, modelSI: -0x0001, models64: 0xc30000010b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xba200000ba8, matchRI: 0x00df, match64: 0x00000000, modelSI: -0x0001, models64: 0x10b0000010d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xbc400000bcb, matchRI: 0x00e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x10d0000010f},
			deviceTuple{type64: 0x24700000251, brand64: 0xbd800000bdd, matchRI: 0x00e3, match64: 0x00000000, modelSI: -0x0001, models64: 0x10f00000122},
			deviceTuple{type64: 0x24700000251, brand64: 0xc5600000c5d, matchRI: 0x00f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x12200000128},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xc9900000ca6, matchRI: 0x00f8, match64: 0x00000000, modelSI: 0x0128, models64: 0x00000000},
			deviceTuple{type64: 0xcad00000cb4, brand64: 0xca600000cad, matchRI: 0x00f9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1290000012d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xcd800000cdd, matchRI: 0x00fe, match64: 0x00000000, modelSI: -0x0001, models64: 0x12d00000140},
			deviceTuple{type64: 0x8e00000099, brand64: 0xe2100000e29, matchRI: -0x0001, match64: 0xe2900000e3d, modelSI: -0x0001, models64: 0x14000000141},
			deviceTuple{type64: 0x24700000251, brand64: 0xe5b00000e60, matchRI: 0x0108, match64: 0x00000000, modelSI: -0x0001, models64: 0x14100000143},
			deviceTuple{type64: 0x38400000391, brand64: 0xe7200000e79, matchRI: 0x010a, match64: 0x00000000, modelSI: 0x0143, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xe7900000e7f, matchRI: 0x010b, match64: 0x00000000, modelSI: -0x0001, models64: 0x14400000145},
			deviceTuple{type64: 0x24700000251, brand64: 0xe8900000e8f, matchRI: 0x010d, match64: 0x00000000, modelSI: -0x0001, models64: 0x14500000147},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xea900000eae, matchRI: 0x010f, match64: 0x00000000, modelSI: 0x0147, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xeae00000eb2, matchRI: 0x0110, match64: 0x00000000, modelSI: -0x0001, models64: 0x1480000014e},
			deviceTuple{type64: 0x24700000251, brand64: 0xed300000ed7, matchRI: -0x0001, match64: 0xed700000edc, modelSI: -0x0001, models64: 0x14e00000150},
			deviceTuple{type64: 0x24700000251, brand64: 0xee000000ee4, matchRI: 0x0118, match64: 0x00000000, modelSI: -0x0001, models64: 0x1500000015d},
			deviceTuple{type64: 0x24700000251, brand64: 0xf5700000f5b, matchRI: 0x0122, match64: 0x00000000, modelSI: -0x0001, models64: 0x15d00000161},
			deviceTuple{type64: 0x24700000251, brand64: 0xf7700000f7e, matchRI: 0x0125, match64: 0x00000000, modelSI: -0x0001, models64: 0x16100000230},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1b7200001b77, matchRI: 0x01a6, match64: 0x00000000, modelSI: 0x0230, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1b7700001b7f, matchRI: 0x01a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x23100000234},
			deviceTuple{type64: 0x24700000251, brand64: 0x1b8600001b8e, matchRI: 0x01ab, match64: 0x00000000, modelSI: -0x0001, models64: 0x23400000236},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ba000001ba7, matchRI: 0x01ad, match64: 0x00000000, modelSI: -0x0001, models64: 0x23600000243},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1c4500001c4e, matchRI: 0x01b3, match64: 0x00000000, modelSI: -0x0001, models64: 0x24300000256},
			deviceTuple{type64: 0x24700000251, brand64: 0x1cf000001cf7, matchRI: 0x01c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x256000002ab},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x22520000225b, matchRI: 0x01ea, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ab000002b5},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x233400002338, matchRI: 0x01ed, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b5000002b7},
			deviceTuple{type64: 0x24700000251, brand64: 0x23380000233e, matchRI: 0x01f0, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b7000002b9},
			deviceTuple{type64: 0x24300000245, brand64: 0x233e00002344, matchRI: 0x01f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x234400002349, matchRI: 0x01f4, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x23490000234f, matchRI: 0x01f5, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b9000002f4},
			deviceTuple{type64: 0x24300000245, brand64: 0x272300002730, matchRI: 0x022e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f4000002f6},
			deviceTuple{type64: 0x24700000251, brand64: 0x274f00002755, matchRI: 0x0231, match64: 0x00000000, modelSI: 0x02f6, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x27550000275a, matchRI: 0x0232, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f7000002f9},
			deviceTuple{type64: 0x24700000251, brand64: 0x27760000277a, matchRI: 0x0233, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f900000300},
			deviceTuple{type64: 0x24300000245, brand64: 0x27a8000027ae, matchRI: 0x0238, match64: 0x00000000, modelSI: 0x0300, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x27ae000027b7, matchRI: 0x0239, match64: 0x00000000, modelSI: 0x0301, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x27ba000027c3, matchRI: 0x023a, match64: 0x00000000, modelSI: -0x0001, models64: 0x30200000304},
			deviceTuple{type64: 0x24300000245, brand64: 0x27ca000027cf, matchRI: 0x023d, match64: 0x00000000, modelSI: -0x0001, models64: 0x30400000307},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x27fc00002800, matchRI: 0x0241, match64: 0x00000000, modelSI: 0x0307, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x280000002805, matchRI: 0x0242, match64: 0x00000000, modelSI: 0x0308, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x28050000280b, matchRI: 0x0243, match64: 0x00000000, modelSI: -0x0001, models64: 0x3090000030a},
			deviceTuple{type64: 0x24700000251, brand64: 0x280e00002812, matchRI: 0x0245, match64: 0x00000000, modelSI: 0x030a, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x281200002817, matchRI: 0x0246, match64: 0x00000000, modelSI: -0x0001, models64: 0x30b00000310},
			deviceTuple{type64: 0x2700000027, brand64: 0x283f00002844, matchRI: 0x024c, match64: 0x00000000, modelSI: -0x0001, models64: 0x31000000405},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x37970000379f, matchRI: -0x0001, match64: 0x37970000379f, modelSI: -0x0001, models64: 0x40500000409},
			deviceTuple{type64: 0x24700000251, brand64: 0x10000000106, matchRI: 0x033c, match64: 0x00000000, modelSI: -0x0001, models64: 0x40900000429},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x39830000398e, matchRI: -0x0001, match64: 0x39830000398e, modelSI: -0x0001, models64: 0x4290000042d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x39c4000039ca, matchRI: 0x0355, match64: 0x00000000, modelSI: 0x042d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x39d5000039d8, matchRI: 0x0356, match64: 0x00000000, modelSI: -0x0001, models64: 0x42e00000437},
			deviceTuple{type64: 0x24700000251, brand64: 0x3a2c00003a34, matchRI: 0x0360, match64: 0x00000000, modelSI: 0x0437, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x3a3400003a3a, matchRI: 0x0361, match64: 0x00000000, modelSI: -0x0001, models64: 0x43800000456},
			deviceTuple{type64: 0x24300000245, brand64: 0x3b7300003b7a, matchRI: 0x0367, match64: 0x00000000, modelSI: 0x0456, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x3b7a00003b7f, matchRI: 0x0368, match64: 0x00000000, modelSI: -0x0001, models64: 0x45700000463},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x3bb000003bb8, matchRI: 0x0375, match64: 0x00000000, modelSI: -0x0001, models64: 0x46300000466},
			deviceTuple{type64: 0x24300000245, brand64: 0x3bc500003bcd, matchRI: -0x0001, match64: 0x3bcd00003bd4, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x3bd400003bd9, matchRI: 0x0379, match64: 0x00000000, modelSI: -0x0001, models64: 0x46600000467},
			deviceTuple{type64: 0x24700000251, brand64: 0x3be300003be9, matchRI: 0x037b, match64: 0x00000000, modelSI: -0x0001, models64: 0x46700000469},
			deviceTuple{type64: 0x24700000251, brand64: 0x3bf000003bf3, matchRI: 0x037e, match64: 0x00000000, modelSI: -0x0001, models64: 0x4690000046b},
			deviceTuple{type64: 0x24700000251, brand64: 0x3bfb00003c01, matchRI: 0x0381, match64: 0x00000000, modelSI: -0x0001, models64: 0x46b0000046e},
			deviceTuple{type64: 0x24700000251, brand64: 0x3c0b00003c14, matchRI: 0x0385, match64: 0x00000000, modelSI: -0x0001, models64: 0x46e00000484},
			deviceTuple{type64: 0x24700000251, brand64: 0x3c9500003c9a, matchRI: 0x039c, match64: 0x00000000, modelSI: 0x0484, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x3c9a00003c9e, matchRI: 0x039d, match64: 0x00000000, modelSI: -0x0001, models64: 0x48500000500},
			deviceTuple{type64: 0x24700000251, brand64: 0x432000004326, matchRI: 0x040d, match64: 0x00000000, modelSI: -0x0001, models64: 0x50000000501},
			deviceTuple{type64: 0x24300000245, brand64: 0x432600004337, matchRI: -0x0001, match64: 0x43370000433e, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x433e00004342, matchRI: 0x040f, match64: 0x00000000, modelSI: 0x0501, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x434200004348, matchRI: 0x0410, match64: 0x00000000, modelSI: 0x0502, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x43480000434e, matchRI: 0x0411, match64: 0x00000000, modelSI: -0x0001, models64: 0x50300000506},
			deviceTuple{type64: 0x24700000251, brand64: 0x43740000437a, matchRI: 0x0413, match64: 0x00000000, modelSI: 0x0506, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x437a0000437f, matchRI: 0x0414, match64: 0x00000000, modelSI: 0x0507, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x437f00004387, matchRI: 0x0415, match64: 0x00000000, modelSI: -0x0001, models64: 0x5080000050c},
			deviceTuple{type64: 0x285a00002862, brand64: 0x438d00004392, matchRI: 0x041a, match64: 0x00000000, modelSI: -0x0001, models64: 0x50c0000050d},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x439200004397, matchRI: 0x041c, match64: 0x00000000, modelSI: 0x050d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x43a3000043a9, matchRI: 0x041d, match64: 0x00000000, modelSI: -0x0001, models64: 0x50e00000510},
			deviceTuple{type64: 0x24700000251, brand64: 0x43bd000043c2, matchRI: 0x0420, match64: 0x00000000, modelSI: -0x0001, models64: 0x51000000515},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x440500004409, matchRI: 0x0423, match64: 0x00000000, modelSI: -0x0001, models64: 0x51500000516},
			deviceTuple{type64: 0x24700000251, brand64: 0x44090000440e, matchRI: 0x0425, match64: 0x00000000, modelSI: -0x0001, models64: 0x5160000051a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x444100004447, matchRI: 0x0429, match64: 0x00000000, modelSI: -0x0001, models64: 0x51a0000051b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x444e00004454, matchRI: 0x042b, match64: 0x00000000, modelSI: 0x051b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x445400004460, matchRI: 0x042c, match64: 0x00000000, modelSI: -0x0001, models64: 0x51c00000526},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x44d3000044d9, matchRI: -0x0001, match64: 0x44d3000044d9, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x44d9000044dd, matchRI: 0x0433, match64: 0x00000000, modelSI: -0x0001, models64: 0x52600000528},
			deviceTuple{type64: 0x24700000251, brand64: 0x44ea000044f0, matchRI: -0x0001, match64: 0x44f0000044f6, modelSI: -0x0001, models64: 0x52800000529},
			deviceTuple{type64: 0x24700000251, brand64: 0x44ff00004503, matchRI: 0x0437, match64: 0x00000000, modelSI: 0x0529, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x450300004508, matchRI: 0x0438, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x450800004511, matchRI: 0x0439, match64: 0x00000000, modelSI: -0x0001, models64: 0x52a00000535},
			deviceTuple{type64: 0x24300000245, brand64: 0x460500004608, matchRI: 0x0445, match64: 0x00000000, modelSI: -0x0001, models64: 0x53500000538},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x46280000462b, matchRI: 0x0449, match64: 0x00000000, modelSI: -0x0001, models64: 0x5380000053c},
			deviceTuple{type64: 0x24700000251, brand64: 0x463e00004641, matchRI: 0x044d, match64: 0x00000000, modelSI: -0x0001, models64: 0x53c0000053e},
			deviceTuple{type64: 0x24700000251, brand64: 0x465a00004663, matchRI: -0x0001, match64: 0x46630000466c, modelSI: 0x053e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x466c0000466f, matchRI: 0x044e, match64: 0x00000000, modelSI: -0x0001, models64: 0x53f00000544},
			deviceTuple{type64: 0x24700000251, brand64: 0x469000004695, matchRI: 0x0452, match64: 0x00000000, modelSI: -0x0001, models64: 0x54400000545},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x46950000469a, matchRI: 0x0454, match64: 0x00000000, modelSI: -0x0001, models64: 0x54500000547},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x46a4000046a8, matchRI: 0x0456, match64: 0x00000000, modelSI: -0x0001, models64: 0x5470000054a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x46ce000046d2, matchRI: 0x045a, match64: 0x00000000, modelSI: -0x0001, models64: 0x54a0000054c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x46d2000046d7, matchRI: 0x045d, match64: 0x00000000, modelSI: 0x054c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x46d7000046db, matchRI: 0x045e, match64: 0x00000000, modelSI: 0x054d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x46db000046e4, matchRI: 0x045f, match64: 0x00000000, modelSI: -0x0001, models64: 0x54e0000054f},
			deviceTuple{type64: 0x8e00000099, brand64: 0x46eb000046ee, matchRI: -0x0001, match64: 0x46ee000046fa, modelSI: 0x054f, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x470000004706, matchRI: 0x0461, match64: 0x00000000, modelSI: -0x0001, models64: 0x55000000551},
			deviceTuple{type64: 0x24700000251, brand64: 0x471100004719, matchRI: 0x0463, match64: 0x00000000, modelSI: 0x0551, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x471900004727, matchRI: 0x0464, match64: 0x00000000, modelSI: -0x0001, models64: 0x55200000555},
			deviceTuple{type64: 0x24700000251, brand64: 0x472e00004734, matchRI: 0x0468, match64: 0x00000000, modelSI: -0x0001, models64: 0x55500000557},
			deviceTuple{type64: 0x38400000391, brand64: 0x473f00004745, matchRI: 0x046b, match64: 0x00000000, modelSI: 0x0557, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x47450000474c, matchRI: 0x046c, match64: 0x00000000, modelSI: -0x0001, models64: 0x55800000564},
			deviceTuple{type64: 0x24300000245, brand64: 0x479000004797, matchRI: 0x0477, match64: 0x00000000, modelSI: -0x0001, models64: 0x5640000056c},
			deviceTuple{type64: 0x38400000391, brand64: 0x47ce000047d4, matchRI: 0x0480, match64: 0x00000000, modelSI: 0x056c, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x47d4000047da, matchRI: 0x0481, match64: 0x00000000, modelSI: 0x056d, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x47da000047de, matchRI: 0x0482, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x47de000047e7, matchRI: 0x0483, match64: 0x00000000, modelSI: 0x056e, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x47f4000047f8, matchRI: 0x0484, match64: 0x00000000, modelSI: -0x0001, models64: 0x56f00000571},
			deviceTuple{type64: 0x38400000391, brand64: 0x47f800004804, matchRI: 0x0487, match64: 0x00000000, modelSI: 0x0571, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x48040000480a, matchRI: 0x0488, match64: 0x00000000, modelSI: -0x0001, models64: 0x57200000574},
			deviceTuple{type64: 0x24700000251, brand64: 0x481000004815, matchRI: 0x048b, match64: 0x00000000, modelSI: -0x0001, models64: 0x5740000057e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x486f00004876, matchRI: 0x048c, match64: 0x00000000, modelSI: 0x057e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x48760000487b, matchRI: 0x048d, match64: 0x00000000, modelSI: -0x0001, models64: 0x57f00000581},
			deviceTuple{type64: 0x24700000251, brand64: 0x488d00004893, matchRI: 0x048f, match64: 0x00000000, modelSI: -0x0001, models64: 0x58100000584},
			deviceTuple{type64: 0x24700000251, brand64: 0x48b2000048b8, matchRI: 0x0492, match64: 0x00000000, modelSI: 0x0584, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x48b8000048be, matchRI: 0x0493, match64: 0x00000000, modelSI: 0x0585, models64: 0x00000000},
			deviceTuple{type64: 0xb6500000b6c, brand64: 0x48c9000048d2, matchRI: 0x0494, match64: 0x00000000, modelSI: 0x0586, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x48e0000048e7, matchRI: 0x0495, match64: 0x00000000, modelSI: 0x0587, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x48f3000048f9, matchRI: 0x0496, match64: 0x00000000, modelSI: 0x0588, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x48f900004902, matchRI: 0x0497, match64: 0x00000000, modelSI: -0x0001, models64: 0x5890000058b},
			deviceTuple{type64: 0x38400000391, brand64: 0x491d00004921, matchRI: 0x0499, match64: 0x00000000, modelSI: -0x0001, models64: 0x58b0000058e},
			deviceTuple{type64: 0x24700000251, brand64: 0x492100004926, matchRI: 0x049d, match64: 0x00000000, modelSI: -0x0001, models64: 0x58e00000591},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x492b00004932, matchRI: 0x04a1, match64: 0x00000000, modelSI: -0x0001, models64: 0x59100000594},
			deviceTuple{type64: 0x24700000251, brand64: 0x495100004958, matchRI: -0x0001, match64: 0x495100004958, modelSI: -0x0001, models64: 0x59400000595},
			deviceTuple{type64: 0x24700000251, brand64: 0x49660000496a, matchRI: 0x04a6, match64: 0x00000000, modelSI: 0x0595, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x49730000497d, matchRI: 0x04a7, match64: 0x00000000, modelSI: 0x0596, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x497d00004986, matchRI: -0x0001, match64: 0x497d00004986, modelSI: -0x0001, models64: 0x59700000598},
			deviceTuple{type64: 0x24700000251, brand64: 0x498c00004995, matchRI: 0x04a9, match64: 0x00000000, modelSI: -0x0001, models64: 0x598000005a9},
			deviceTuple{type64: 0x24300000245, brand64: 0x4a4e00004a56, matchRI: 0x04ae, match64: 0x00000000, modelSI: 0x05a9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x4a5b00004a64, matchRI: 0x04af, match64: 0x00000000, modelSI: -0x0001, models64: 0x5aa000005c8},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x4b4600004b4f, matchRI: 0x04c3, match64: 0x00000000, modelSI: -0x0001, models64: 0x5c8000005d8},
			deviceTuple{type64: 0x24700000251, brand64: 0xbbf00000bc4, matchRI: 0x04cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x5d8000005da},
			deviceTuple{type64: 0x24700000251, brand64: 0x4c3500004c3a, matchRI: 0x04d1, match64: 0x00000000, modelSI: 0x05da, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x4c3a00004c3e, matchRI: 0x04d2, match64: 0x00000000, modelSI: -0x0001, models64: 0x5db000005e2},
			deviceTuple{type64: 0x24700000251, brand64: 0x4d0100004d04, matchRI: 0x04d4, match64: 0x00000000, modelSI: -0x0001, models64: 0x5e20000063a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x518800005190, matchRI: 0x04fd, match64: 0x00000000, modelSI: 0x063a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x51a5000051ab, matchRI: 0x04fe, match64: 0x00000000, modelSI: -0x0001, models64: 0x63b00000647},
			deviceTuple{type64: 0x24700000251, brand64: 0x51f8000051ff, matchRI: 0x0505, match64: 0x00000000, modelSI: 0x0647, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x52040000520c, matchRI: 0x0506, match64: 0x00000000, modelSI: 0x0648, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x520c00005213, matchRI: 0x0507, match64: 0x00000000, modelSI: -0x0001, models64: 0x6490000064b},
			deviceTuple{type64: 0x24700000251, brand64: 0x52130000521b, matchRI: -0x0001, match64: 0x521b00005223, modelSI: -0x0001, models64: 0x64b0000064c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x52250000522d, matchRI: 0x050a, match64: 0x00000000, modelSI: -0x0001, models64: 0x64c00000651},
			deviceTuple{type64: 0x24700000251, brand64: 0x527b00005282, matchRI: 0x050c, match64: 0x00000000, modelSI: -0x0001, models64: 0x65100000663},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x52fa00005301, matchRI: 0x051b, match64: 0x00000000, modelSI: 0x0663, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x53070000530c, matchRI: 0x051c, match64: 0x00000000, modelSI: 0x0664, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x53150000531c, matchRI: 0x051d, match64: 0x00000000, modelSI: 0x0665, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x531c00005321, matchRI: 0x051e, match64: 0x00000000, modelSI: -0x0001, models64: 0x66600000669},
			deviceTuple{type64: 0x24300000245, brand64: 0x53360000533c, matchRI: 0x0521, match64: 0x00000000, modelSI: 0x0669, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x534100005346, matchRI: 0x0522, match64: 0x00000000, modelSI: -0x0001, models64: 0x66a0000066d},
			deviceTuple{type64: 0x24700000251, brand64: 0x53460000534f, matchRI: 0x0526, match64: 0x00000000, modelSI: -0x0001, models64: 0x66d0000066f},
			deviceTuple{type64: 0x24700000251, brand64: 0x537000005376, matchRI: 0x0527, match64: 0x00000000, modelSI: -0x0001, models64: 0x66f00000671},
			deviceTuple{type64: 0x24700000251, brand64: 0x53890000538f, matchRI: 0x0529, match64: 0x00000000, modelSI: -0x0001, models64: 0x67100000693},
			deviceTuple{type64: 0x24300000245, brand64: 0x55640000556e, matchRI: -0x0001, match64: 0x55640000556e, modelSI: -0x0001, models64: 0x69300000694},
			deviceTuple{type64: 0x24700000251, brand64: 0x556e00005576, matchRI: -0x0001, match64: 0x55760000557b, modelSI: -0x0001, models64: 0x69400000695},
			deviceTuple{type64: 0x24700000251, brand64: 0x558b00005591, matchRI: 0x0537, match64: 0x00000000, modelSI: -0x0001, models64: 0x695000006a1},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x56230000562c, matchRI: 0x0543, match64: 0x00000000, modelSI: 0x06a1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x562c00005631, matchRI: 0x0544, match64: 0x00000000, modelSI: -0x0001, models64: 0x6a2000006a5},
			deviceTuple{type64: 0x24700000251, brand64: 0x566b0000566f, matchRI: 0x0547, match64: 0x00000000, modelSI: -0x0001, models64: 0x6a5000006ad},
			deviceTuple{type64: 0x24300000245, brand64: 0x56b6000056bc, matchRI: 0x054e, match64: 0x00000000, modelSI: 0x06ad, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x56bc000056c2, matchRI: 0x054f, match64: 0x00000000, modelSI: -0x0001, models64: 0x6ae000006b0},
			deviceTuple{type64: 0x24700000251, brand64: 0x56cd000056d6, matchRI: 0x0552, match64: 0x00000000, modelSI: -0x0001, models64: 0x6b0000006b4},
			deviceTuple{type64: 0x24300000245, brand64: 0x57190000571f, matchRI: 0x0553, match64: 0x00000000, modelSI: -0x0001, models64: 0x6b4000006b5},
			deviceTuple{type64: 0x24700000251, brand64: 0x571f00005723, matchRI: -0x0001, match64: 0x572300005728, modelSI: -0x0001, models64: 0x6b5000006b7},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x573200005736, matchRI: 0x0556, match64: 0x00000000, modelSI: -0x0001, models64: 0x6b7000006bb},
			deviceTuple{type64: 0x24300000245, brand64: 0x575000005756, matchRI: 0x055b, match64: 0x00000000, modelSI: 0x06bb, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x575b00005761, matchRI: 0x055c, match64: 0x00000000, modelSI: 0x06bc, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x57610000576a, matchRI: 0x055d, match64: 0x00000000, modelSI: -0x0001, models64: 0x6bd000006c2},
			deviceTuple{type64: 0x24700000251, brand64: 0x579c0000579f, matchRI: 0x0563, match64: 0x00000000, modelSI: 0x06c2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x579f000057a5, matchRI: 0x0564, match64: 0x00000000, modelSI: -0x0001, models64: 0x6c3000006c4},
			deviceTuple{type64: 0x24700000251, brand64: 0x57a5000057af, matchRI: 0x0566, match64: 0x00000000, modelSI: -0x0001, models64: 0x6c4000006c7},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x57bc000057c4, matchRI: 0x056a, match64: 0x00000000, modelSI: -0x0001, models64: 0x6c7000006c8},
			deviceTuple{type64: 0x24300000245, brand64: 0x57d3000057d9, matchRI: -0x0001, match64: 0x57d3000057d9, modelSI: -0x0001, models64: 0x6c8000006c9},
			deviceTuple{type64: 0x24700000251, brand64: 0x57e2000057e6, matchRI: 0x056c, match64: 0x00000000, modelSI: -0x0001, models64: 0x6c9000006d0},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x58060000580c, matchRI: 0x0574, match64: 0x00000000, modelSI: -0x0001, models64: 0x6d0000006d1},
			deviceTuple{type64: 0x24700000251, brand64: 0x582000005825, matchRI: 0x0575, match64: 0x00000000, modelSI: -0x0001, models64: 0x6d1000006f9},
			deviceTuple{type64: 0x24300000245, brand64: 0x5a2d00005a31, matchRI: 0x058a, match64: 0x00000000, modelSI: 0x06f9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x5a3100005a38, matchRI: 0x058b, match64: 0x00000000, modelSI: -0x0001, models64: 0x6fa000006fd},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5a4500005a4c, matchRI: 0x058e, match64: 0x00000000, modelSI: -0x0001, models64: 0x6fd000006fe},
			deviceTuple{type64: 0x24300000245, brand64: 0x5a4c00005a59, matchRI: 0x0590, match64: 0x00000000, modelSI: 0x06fe, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x5a6100005a67, matchRI: -0x0001, match64: 0x5a6700005a71, modelSI: -0x0001, models64: 0x6ff00000700},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5a7700005a7e, matchRI: 0x0592, match64: 0x00000000, modelSI: 0x0700, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x5a7e00005a85, matchRI: 0x0593, match64: 0x00000000, modelSI: 0x0701, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5a8500005a8c, matchRI: 0x0594, match64: 0x00000000, modelSI: 0x0702, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x5a9200005a9f, matchRI: -0x0001, match64: 0x5a9f00005aaf, modelSI: 0x0703, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5aba00005ac3, matchRI: 0x0595, match64: 0x00000000, modelSI: -0x0001, models64: 0x70400000707},
			deviceTuple{type64: 0x24700000251, brand64: 0x5add00005ae2, matchRI: 0x0598, match64: 0x00000000, modelSI: -0x0001, models64: 0x7070000070a},
			deviceTuple{type64: 0x24700000251, brand64: 0x5b1400005b1a, matchRI: 0x059c, match64: 0x00000000, modelSI: -0x0001, models64: 0x70a00000712},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5b5100005b54, matchRI: 0x05a4, match64: 0x00000000, modelSI: -0x0001, models64: 0x7120000071c},
			deviceTuple{type64: 0x24700000251, brand64: 0x5b7c00005b82, matchRI: 0x05ab, match64: 0x00000000, modelSI: -0x0001, models64: 0x71c00000726},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5c3800005c3e, matchRI: 0x05b2, match64: 0x00000000, modelSI: -0x0001, models64: 0x7260000072b},
			deviceTuple{type64: 0x24300000245, brand64: 0x5c8200005c88, matchRI: 0x05b4, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x5c8800005c8e, matchRI: 0x05b5, match64: 0x00000000, modelSI: -0x0001, models64: 0x72b00000737},
			deviceTuple{type64: 0x24700000251, brand64: 0x5cd800005cde, matchRI: 0x05bf, match64: 0x00000000, modelSI: -0x0001, models64: 0x7370000073b},
			deviceTuple{type64: 0x24700000251, brand64: 0x5cfd00005d07, matchRI: 0x05c3, match64: 0x00000000, modelSI: -0x0001, models64: 0x73b0000073e},
			deviceTuple{type64: 0x24700000251, brand64: 0x5d2f00005d37, matchRI: 0x05c5, match64: 0x00000000, modelSI: -0x0001, models64: 0x73e00000741},
			deviceTuple{type64: 0x24700000251, brand64: 0x5d4c00005d55, matchRI: 0x05c9, match64: 0x00000000, modelSI: -0x0001, models64: 0x74100000744},
			deviceTuple{type64: 0x24700000251, brand64: 0x5d6e00005d75, matchRI: 0x05cb, match64: 0x00000000, modelSI: -0x0001, models64: 0x7440000074a},
			deviceTuple{type64: 0x24700000251, brand64: 0x5d8000005d88, matchRI: 0x05d2, match64: 0x00000000, modelSI: -0x0001, models64: 0x74a0000074b},
			deviceTuple{type64: 0x24700000251, brand64: 0x5d8800005d91, matchRI: 0x05d4, match64: 0x00000000, modelSI: -0x0001, models64: 0x74b00000751},
			deviceTuple{type64: 0x24700000251, brand64: 0x5daf00005dbc, matchRI: 0x05d9, match64: 0x00000000, modelSI: -0x0001, models64: 0x75100000788},
			deviceTuple{type64: 0x24700000251, brand64: 0x60e7000060f3, matchRI: 0x05f8, match64: 0x00000000, modelSI: -0x0001, models64: 0x7880000079a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x624b00006255, matchRI: 0x05fb, match64: 0x00000000, modelSI: -0x0001, models64: 0x79a0000079b},
			deviceTuple{type64: 0x24700000251, brand64: 0x625f0000626b, matchRI: 0x05fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x79b000007a0},
			deviceTuple{type64: 0x24700000251, brand64: 0x628c00006299, matchRI: 0x05ff, match64: 0x00000000, modelSI: -0x0001, models64: 0x7a0000007a7},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x632a0000632f, matchRI: 0x0600, match64: 0x00000000, modelSI: -0x0001, models64: 0x7a7000007bf},
			deviceTuple{type64: 0x24700000251, brand64: 0x63d0000063d9, matchRI: 0x0619, match64: 0x00000000, modelSI: 0x07bf, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x63d9000063e1, matchRI: 0x061a, match64: 0x00000000, modelSI: 0x07c0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x63e1000063e9, matchRI: 0x061b, match64: 0x00000000, modelSI: -0x0001, models64: 0x7c1000007c4},
			deviceTuple{type64: 0x24700000251, brand64: 0x63f4000063fb, matchRI: 0x061f, match64: 0x00000000, modelSI: -0x0001, models64: 0x7c4000007c8},
			deviceTuple{type64: 0x24700000251, brand64: 0x64200000642a, matchRI: -0x0001, match64: 0x64200000642a, modelSI: -0x0001, models64: 0x7c8000007c9},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x642a00006434, matchRI: 0x0622, match64: 0x00000000, modelSI: -0x0001, models64: 0x7c9000007cf},
			deviceTuple{type64: 0x24700000251, brand64: 0x648f00006494, matchRI: 0x0626, match64: 0x00000000, modelSI: -0x0001, models64: 0x7cf000007d2},
			deviceTuple{type64: 0x24700000251, brand64: 0x64b4000064bd, matchRI: 0x0629, match64: 0x00000000, modelSI: -0x0001, models64: 0x7d2000007e3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x65860000658e, matchRI: 0x0637, match64: 0x00000000, modelSI: -0x0001, models64: 0x7e3000007e5},
			deviceTuple{type64: 0x24700000251, brand64: 0x65990000659e, matchRI: 0x063a, match64: 0x00000000, modelSI: -0x0001, models64: 0x7e5000007ec},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x65e3000065ec, matchRI: 0x0642, match64: 0x00000000, modelSI: 0x07ec, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x65ec000065ef, matchRI: -0x0001, match64: 0x65ef000065f3, modelSI: -0x0001, models64: 0x7ed000007ee},
			deviceTuple{type64: 0x24700000251, brand64: 0x65fe00006604, matchRI: 0x0644, match64: 0x00000000, modelSI: -0x0001, models64: 0x7ee000007f1},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x661600006620, matchRI: 0x0648, match64: 0x00000000, modelSI: 0x07f1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x662000006626, matchRI: 0x0649, match64: 0x00000000, modelSI: -0x0001, models64: 0x7f2000007f9},
			deviceTuple{type64: 0x24700000251, brand64: 0x665600006664, matchRI: 0x0651, match64: 0x00000000, modelSI: -0x0001, models64: 0x7f900000813},
			deviceTuple{type64: 0x24700000251, brand64: 0x676200006767, matchRI: 0x0663, match64: 0x00000000, modelSI: -0x0001, models64: 0x81300000817},
			deviceTuple{type64: 0x38400000391, brand64: 0x67880000678e, matchRI: 0x0665, match64: 0x00000000, modelSI: 0x0817, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x678e00006794, matchRI: 0x0666, match64: 0x00000000, modelSI: -0x0001, models64: 0x8180000081a},
			deviceTuple{type64: 0x24700000251, brand64: 0x67940000679c, matchRI: 0x0669, match64: 0x00000000, modelSI: -0x0001, models64: 0x81a0000081e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x67a6000067af, matchRI: 0x066e, match64: 0x00000000, modelSI: 0x081e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x67af000067b6, matchRI: 0x066f, match64: 0x00000000, modelSI: -0x0001, models64: 0x81f00000825},
			deviceTuple{type64: 0x24700000251, brand64: 0x68160000681c, matchRI: 0x0671, match64: 0x00000000, modelSI: -0x0001, models64: 0x82500000863},
			deviceTuple{type64: 0x24700000251, brand64: 0x6a7c00006a85, matchRI: 0x06a1, match64: 0x00000000, modelSI: 0x0863, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x6a9300006a99, matchRI: 0x06a2, match64: 0x00000000, modelSI: -0x0001, models64: 0x86400000866},
			deviceTuple{type64: 0x24700000251, brand64: 0x6ab800006ac0, matchRI: 0x06a4, match64: 0x00000000, modelSI: -0x0001, models64: 0x86600000868},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x6ad000006ad7, matchRI: 0x06a6, match64: 0x00000000, modelSI: -0x0001, models64: 0x86800000873},
			deviceTuple{type64: 0x24700000251, brand64: 0x6b6300006b6a, matchRI: 0x06b2, match64: 0x00000000, modelSI: -0x0001, models64: 0x873000008a0},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x6c9a00006ca1, matchRI: 0x06db, match64: 0x00000000, modelSI: 0x08a0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x6ca100006ca8, matchRI: -0x0001, match64: 0x6ca100006ca8, modelSI: -0x0001, models64: 0x8a1000008a3},
			deviceTuple{type64: 0x24700000251, brand64: 0x6cc600006ccb, matchRI: 0x06dd, match64: 0x00000000, modelSI: 0x08a3, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x6ccb00006cd3, matchRI: 0x06de, match64: 0x00000000, modelSI: -0x0001, models64: 0x8a4000008a7},
			deviceTuple{type64: 0x24700000251, brand64: 0x6cf200006cf9, matchRI: 0x06e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x8a7000008ba},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x6e0400006e0d, matchRI: 0x06e2, match64: 0x00000000, modelSI: 0x08ba, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x6e0d00006e12, matchRI: 0x06e3, match64: 0x00000000, modelSI: 0x08bb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x6e1600006e1f, matchRI: 0x06e4, match64: 0x00000000, modelSI: -0x0001, models64: 0x8bc000008c6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x6e9000006e95, matchRI: 0x06ed, match64: 0x00000000, modelSI: -0x0001, models64: 0x8c6000008c8},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x6eac00006eb3, matchRI: 0x06ef, match64: 0x00000000, modelSI: -0x0001, models64: 0x8c8000008c9},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x42f2000042f6, matchRI: 0x06f0, match64: 0x00000000, modelSI: -0x0001, models64: 0x8c9000008df},
			deviceTuple{type64: 0x24700000251, brand64: 0x6f9200006f97, matchRI: -0x0001, match64: 0x6f9700006f9c, modelSI: -0x0001, models64: 0x8df000008e0},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x6fa600006fae, matchRI: 0x0701, match64: 0x00000000, modelSI: -0x0001, models64: 0x8e0000008e1},
			deviceTuple{type64: 0x24700000251, brand64: 0x6fae00006fb3, matchRI: 0x0703, match64: 0x00000000, modelSI: -0x0001, models64: 0x8e1000008e5},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x6fc000006fc6, matchRI: 0x0708, match64: 0x00000000, modelSI: 0x08e5, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x6fc600006fcc, matchRI: 0x0709, match64: 0x00000000, modelSI: -0x0001, models64: 0x8e6000008e9},
			deviceTuple{type64: 0x24700000251, brand64: 0x6fe100006fe5, matchRI: 0x070c, match64: 0x00000000, modelSI: 0x08e9, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x6fe500006fec, matchRI: 0x070d, match64: 0x00000000, modelSI: 0x08ea, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x6fec00006ff0, matchRI: 0x070e, match64: 0x00000000, modelSI: -0x0001, models64: 0x8eb00000906},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x70cc000070d0, matchRI: 0x0727, match64: 0x00000000, modelSI: 0x0906, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x70d0000070d2, matchRI: 0x0728, match64: 0x00000000, modelSI: -0x0001, models64: 0x9070000090b},
			deviceTuple{type64: 0x24700000251, brand64: 0x710b00007110, matchRI: 0x072a, match64: 0x00000000, modelSI: -0x0001, models64: 0x90b0000090c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x711a0000711f, matchRI: 0x072c, match64: 0x00000000, modelSI: 0x090c, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x71270000712e, matchRI: 0x072d, match64: 0x00000000, modelSI: -0x0001, models64: 0x90d0000090f},
			deviceTuple{type64: 0x24300000245, brand64: 0x71320000713a, matchRI: 0x0730, match64: 0x00000000, modelSI: 0x090f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x713a00007141, matchRI: 0x0731, match64: 0x00000000, modelSI: -0x0001, models64: 0x91000000912},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x715100007155, matchRI: 0x0733, match64: 0x00000000, modelSI: 0x0912, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x71550000715e, matchRI: 0x0734, match64: 0x00000000, modelSI: 0x0913, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x715e00007162, matchRI: 0x0735, match64: 0x00000000, modelSI: -0x0001, models64: 0x91400000918},
			deviceTuple{type64: 0x24700000251, brand64: 0x71960000719b, matchRI: 0x0739, match64: 0x00000000, modelSI: -0x0001, models64: 0x9180000091e},
			deviceTuple{type64: 0x24700000251, brand64: 0x71d1000071d3, matchRI: 0x073d, match64: 0x00000000, modelSI: -0x0001, models64: 0x91e00000923},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x721e00007223, matchRI: 0x0741, match64: 0x00000000, modelSI: -0x0001, models64: 0x92300000924},
			deviceTuple{type64: 0x24700000251, brand64: 0x722300007226, matchRI: 0x0743, match64: 0x00000000, modelSI: -0x0001, models64: 0x92400000928},
			deviceTuple{type64: 0x24700000251, brand64: 0x72340000723b, matchRI: 0x0748, match64: 0x00000000, modelSI: 0x0928, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x723b0000723e, matchRI: 0x0749, match64: 0x00000000, modelSI: -0x0001, models64: 0x9290000092b},
			deviceTuple{type64: 0x24300000245, brand64: 0x724a00007250, matchRI: 0x074b, match64: 0x00000000, modelSI: 0x092b, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x725000007259, matchRI: 0x074c, match64: 0x00000000, modelSI: 0x092c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x72590000725d, matchRI: 0x074d, match64: 0x00000000, modelSI: 0x092d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x725d00007269, matchRI: 0x074e, match64: 0x00000000, modelSI: -0x0001, models64: 0x92e00000930},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x72690000726f, matchRI: 0x0751, match64: 0x00000000, modelSI: -0x0001, models64: 0x93000000933},
			deviceTuple{type64: 0x24700000251, brand64: 0x72790000727e, matchRI: 0x0755, match64: 0x00000000, modelSI: -0x0001, models64: 0x93300000937},
			deviceTuple{type64: 0x24300000245, brand64: 0x72af000072b8, matchRI: -0x0001, match64: 0x72af000072b8, modelSI: -0x0001, models64: 0x93700000938},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x72be000072c2, matchRI: 0x0759, match64: 0x00000000, modelSI: -0x0001, models64: 0x9380000093a},
			deviceTuple{type64: 0x24700000251, brand64: 0x72d8000072dd, matchRI: 0x075b, match64: 0x00000000, modelSI: 0x093a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x72dd000072e6, matchRI: 0x075c, match64: 0x00000000, modelSI: 0x093b, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x72ee000072f6, matchRI: 0x075d, match64: 0x00000000, modelSI: 0x093c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x72f6000072fc, matchRI: -0x0001, match64: 0x72fc00007302, modelSI: -0x0001, models64: 0x93d0000093f},
			deviceTuple{type64: 0x24700000251, brand64: 0x73020000730a, matchRI: 0x0760, match64: 0x00000000, modelSI: -0x0001, models64: 0x93f00000941},
			deviceTuple{type64: 0x24700000251, brand64: 0x732e00007334, matchRI: -0x0001, match64: 0x73340000733a, modelSI: -0x0001, models64: 0x94100000943},
			deviceTuple{type64: 0x24700000251, brand64: 0x735c00007361, matchRI: -0x0001, match64: 0x736100007366, modelSI: -0x0001, models64: 0x94300000944},
			deviceTuple{type64: 0x24700000251, brand64: 0x73680000736f, matchRI: -0x0001, match64: 0x736f00007376, modelSI: 0x0944, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x737e00007383, matchRI: 0x0762, match64: 0x00000000, modelSI: 0x0945, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x738300007388, matchRI: 0x0763, match64: 0x00000000, modelSI: -0x0001, models64: 0x9460000094f},
			deviceTuple{type64: 0x24700000251, brand64: 0x73e1000073e7, matchRI: 0x0768, match64: 0x00000000, modelSI: 0x094f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x73e7000073eb, matchRI: 0x0769, match64: 0x00000000, modelSI: -0x0001, models64: 0x9500000095d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x74260000742c, matchRI: 0x0776, match64: 0x00000000, modelSI: 0x095d, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x74340000743a, matchRI: 0x0777, match64: 0x00000000, modelSI: -0x0001, models64: 0x95e00000962},
			deviceTuple{type64: 0x24700000251, brand64: 0x74460000744b, matchRI: -0x0001, match64: 0x74460000744b, modelSI: -0x0001, models64: 0x96200000964},
			deviceTuple{type64: 0x24700000251, brand64: 0x744b00007451, matchRI: 0x077e, match64: 0x00000000, modelSI: -0x0001, models64: 0x96400000966},
			deviceTuple{type64: 0x38400000391, brand64: 0x745100007456, matchRI: 0x0781, match64: 0x00000000, modelSI: 0x0966, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x74560000745a, matchRI: 0x0782, match64: 0x00000000, modelSI: 0x0967, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x745a00007461, matchRI: 0x0783, match64: 0x00000000, modelSI: -0x0001, models64: 0x9680000096e},
			deviceTuple{type64: 0x24700000251, brand64: 0x7499000074a3, matchRI: 0x0787, match64: 0x00000000, modelSI: -0x0001, models64: 0x96e0000096f},
			deviceTuple{type64: 0x24300000245, brand64: 0x74a3000074ab, matchRI: 0x0789, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x74ab000074b3, matchRI: 0x078a, match64: 0x00000000, modelSI: -0x0001, models64: 0x96f00000973},
			deviceTuple{type64: 0x24700000251, brand64: 0x74ba000074c1, matchRI: 0x078e, match64: 0x00000000, modelSI: -0x0001, models64: 0x9730000097b},
			deviceTuple{type64: 0x24700000251, brand64: 0x74fb00007500, matchRI: 0x0797, match64: 0x00000000, modelSI: -0x0001, models64: 0x97b000009c6},
			deviceTuple{type64: 0x24300000245, brand64: 0x79460000794e, matchRI: -0x0001, match64: 0x794e00007956, modelSI: -0x0001, models64: 0x9c6000009c7},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x79560000795b, matchRI: 0x07b6, match64: 0x00000000, modelSI: 0x09c7, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x796300007969, matchRI: 0x07b7, match64: 0x00000000, modelSI: -0x0001, models64: 0x9c8000009ca},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x797b00007982, matchRI: 0x07b9, match64: 0x00000000, modelSI: 0x09ca, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x798200007986, matchRI: 0x07ba, match64: 0x00000000, modelSI: 0x09cb, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x79860000798e, matchRI: -0x0001, match64: 0x79860000798e, modelSI: -0x0001, models64: 0x9cc000009cd},
			deviceTuple{type64: 0x24300000245, brand64: 0x79980000799f, matchRI: 0x07bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x9cd000009d1},
			deviceTuple{type64: 0x38400000391, brand64: 0x79c3000079c9, matchRI: 0x07c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x9d1000009d5},
			deviceTuple{type64: 0x24300000245, brand64: 0x79c9000079d0, matchRI: 0x07c5, match64: 0x00000000, modelSI: 0x09d5, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x79d0000079d7, matchRI: 0x07c6, match64: 0x00000000, modelSI: 0x09d6, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x79d7000079dd, matchRI: 0x07c7, match64: 0x00000000, modelSI: 0x09d7, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x79dd000079e3, matchRI: 0x07c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x9d800000a13},
			deviceTuple{type64: 0x24700000251, brand64: 0x7c2400007c2a, matchRI: 0x07e9, match64: 0x00000000, modelSI: 0x0a13, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7c2c00007c30, matchRI: 0x07ea, match64: 0x00000000, modelSI: -0x0001, models64: 0xa1400000a18},
			deviceTuple{type64: 0x38400000391, brand64: 0x7c4200007c47, matchRI: 0x07ef, match64: 0x00000000, modelSI: 0x0a18, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7c4700007c4d, matchRI: -0x0001, match64: 0x7c4d00007c54, modelSI: -0x0001, models64: 0xa1900000a1b},
			deviceTuple{type64: 0x24700000251, brand64: 0x7c5900007c5d, matchRI: 0x07f2, match64: 0x00000000, modelSI: -0x0001, models64: 0xa1b00000a20},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7c6a00007c76, matchRI: 0x07f8, match64: 0x00000000, modelSI: -0x0001, models64: 0xa2000000a23},
			deviceTuple{type64: 0x24300000245, brand64: 0x7c9000007c99, matchRI: -0x0001, match64: 0x7c9900007ca2, modelSI: -0x0001, models64: 0xa2300000a24},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7ca200007caa, matchRI: 0x07fb, match64: 0x00000000, modelSI: 0x0a24, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7caa00007cb3, matchRI: 0x07fc, match64: 0x00000000, modelSI: -0x0001, models64: 0xa2500000a26},
			deviceTuple{type64: 0x24300000245, brand64: 0x7cb900007cc3, matchRI: 0x07fe, match64: 0x00000000, modelSI: 0x0a26, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7cc300007cc9, matchRI: 0x07ff, match64: 0x00000000, modelSI: 0x0a27, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7cc900007ccd, matchRI: 0x0800, match64: 0x00000000, modelSI: 0x0a28, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x7cd500007cdc, matchRI: 0x0801, match64: 0x00000000, modelSI: -0x0001, models64: 0xa2900000a2c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7ce300007ceb, matchRI: 0x0805, match64: 0x00000000, modelSI: 0x0a2c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7ceb00007cf1, matchRI: 0x0806, match64: 0x00000000, modelSI: 0x0a2d, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x7cf100007cf9, matchRI: 0x0807, match64: 0x00000000, modelSI: 0x0a2e, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x7d0900007d0d, matchRI: 0x0808, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7d0d00007d13, matchRI: 0x0809, match64: 0x00000000, modelSI: -0x0001, models64: 0xa2f00000a33},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7d2900007d30, matchRI: 0x080d, match64: 0x00000000, modelSI: -0x0001, models64: 0xa3300000a35},
			deviceTuple{type64: 0x24700000251, brand64: 0x7d4700007d4c, matchRI: 0x0810, match64: 0x00000000, modelSI: -0x0001, models64: 0xa3500000a39},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7d6000007d64, matchRI: 0x0815, match64: 0x00000000, modelSI: 0x0a39, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7d6400007d69, matchRI: -0x0001, match64: 0x7d6400007d69, modelSI: -0x0001, models64: 0xa3a00000a3c},
			deviceTuple{type64: 0x24300000245, brand64: 0x7d6900007d6d, matchRI: 0x0818, match64: 0x00000000, modelSI: 0x0a3c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7d6d00007d71, matchRI: 0x0819, match64: 0x00000000, modelSI: -0x0001, models64: 0xa3d00000a40},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7d8200007d85, matchRI: 0x081d, match64: 0x00000000, modelSI: -0x0001, models64: 0xa4000000a44},
			deviceTuple{type64: 0x24700000251, brand64: 0x7d9700007d99, matchRI: 0x0822, match64: 0x00000000, modelSI: -0x0001, models64: 0xa4400000a47},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x7d9d00007da0, matchRI: 0x0826, match64: 0x00000000, modelSI: 0x0a47, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7da000007da3, matchRI: -0x0001, match64: 0x7da300007dab, modelSI: -0x0001, models64: 0xa4800000a49},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7db000007db6, matchRI: 0x0827, match64: 0x00000000, modelSI: 0x0a49, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7db600007dbc, matchRI: 0x0828, match64: 0x00000000, modelSI: -0x0001, models64: 0xa4a00000a4b},
			deviceTuple{type64: 0x24700000251, brand64: 0x7dcc00007dcf, matchRI: 0x0829, match64: 0x00000000, modelSI: -0x0001, models64: 0xa4b00000a4f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7df700007dfa, matchRI: 0x082d, match64: 0x00000000, modelSI: -0x0001, models64: 0xa4f00000a51},
			deviceTuple{type64: 0x285a00002862, brand64: 0x7dff00007e04, matchRI: 0x0830, match64: 0x00000000, modelSI: 0x0a51, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7e0f00007e15, matchRI: 0x0831, match64: 0x00000000, modelSI: 0x0a52, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7e1500007e19, matchRI: 0x0832, match64: 0x00000000, modelSI: -0x0001, models64: 0xa5300000a55},
			deviceTuple{type64: 0x24300000245, brand64: 0x7e2400007e28, matchRI: 0x0834, match64: 0x00000000, modelSI: 0x0a55, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x7e2d00007e32, matchRI: 0x0835, match64: 0x00000000, modelSI: -0x0001, models64: 0xa5600000a59},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7e5600007e5a, matchRI: 0x0838, match64: 0x00000000, modelSI: -0x0001, models64: 0xa5900000a5b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7e8800007e8e, matchRI: 0x0839, match64: 0x00000000, modelSI: 0x0a5b, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7e8e00007e91, matchRI: 0x083a, match64: 0x00000000, modelSI: -0x0001, models64: 0xa5c00000a5e},
			deviceTuple{type64: 0x24700000251, brand64: 0x7e9f00007ea2, matchRI: 0x083d, match64: 0x00000000, modelSI: 0x0a5e, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x7ea200007ea7, matchRI: 0x083e, match64: 0x00000000, modelSI: 0x0a5f, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7ea700007eb0, matchRI: 0x083f, match64: 0x00000000, modelSI: 0x0a60, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7eb000007eb7, matchRI: 0x0840, match64: 0x00000000, modelSI: -0x0001, models64: 0xa6100000a63},
			deviceTuple{type64: 0x24700000251, brand64: 0x7ec100007ecd, matchRI: 0x0843, match64: 0x00000000, modelSI: -0x0001, models64: 0xa6300000a68},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7f0a00007f12, matchRI: 0x0847, match64: 0x00000000, modelSI: 0x0a68, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7f1200007f1e, matchRI: 0x0848, match64: 0x00000000, modelSI: -0x0001, models64: 0xa6900000a6b},
			deviceTuple{type64: 0x24700000251, brand64: 0x7f2d00007f34, matchRI: 0x084a, match64: 0x00000000, modelSI: 0x0a6b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7f3f00007f4a, matchRI: 0x084b, match64: 0x00000000, modelSI: 0x0a6c, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x7f4a00007f50, matchRI: 0x084c, match64: 0x00000000, modelSI: -0x0001, models64: 0xa6d00000a71},
			deviceTuple{type64: 0x24300000245, brand64: 0x7fa600007fad, matchRI: 0x0851, match64: 0x00000000, modelSI: 0x0a71, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7fbe00007fc6, matchRI: 0x0852, match64: 0x00000000, modelSI: -0x0001, models64: 0xa7200000a74},
			deviceTuple{type64: 0x24700000251, brand64: 0x7fc600007fce, matchRI: 0x0855, match64: 0x00000000, modelSI: -0x0001, models64: 0xa7400000a86},
			deviceTuple{type64: 0x24700000251, brand64: 0x80270000802e, matchRI: 0x0868, match64: 0x00000000, modelSI: -0x0001, models64: 0xa8600000a89},
			deviceTuple{type64: 0x24700000251, brand64: 0x80410000804d, matchRI: 0x086c, match64: 0x00000000, modelSI: 0x0a89, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x804d00008052, matchRI: 0x086d, match64: 0x00000000, modelSI: -0x0001, models64: 0xa8a00000a8d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x80680000806e, matchRI: 0x0871, match64: 0x00000000, modelSI: 0x0a8d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x806e00008075, matchRI: 0x0872, match64: 0x00000000, modelSI: -0x0001, models64: 0xa8e00000a91},
			deviceTuple{type64: 0x24700000251, brand64: 0x808f00008098, matchRI: 0x0874, match64: 0x00000000, modelSI: -0x0001, models64: 0xa9100000a99},
			deviceTuple{type64: 0x24700000251, brand64: 0x80fa00008107, matchRI: 0x087b, match64: 0x00000000, modelSI: -0x0001, models64: 0xa9900000a9d},
			deviceTuple{type64: 0x24300000245, brand64: 0x813d00008142, matchRI: 0x087f, match64: 0x00000000, modelSI: 0x0a9d, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x814200008146, matchRI: 0x0880, match64: 0x00000000, modelSI: 0x0a9e, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x81460000814c, matchRI: 0x0881, match64: 0x00000000, modelSI: 0x0a9f, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x81550000815c, matchRI: 0x0882, match64: 0x00000000, modelSI: 0x0aa0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x816a00008170, matchRI: 0x0883, match64: 0x00000000, modelSI: -0x0001, models64: 0xaa100000aa3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x81860000818a, matchRI: 0x0884, match64: 0x00000000, modelSI: 0x0aa3, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x818a00008192, matchRI: 0x0885, match64: 0x00000000, modelSI: -0x0001, models64: 0xaa400000abd},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x82b0000082b5, matchRI: 0x0886, match64: 0x00000000, modelSI: 0x0abd, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x82c8000082cf, matchRI: 0x0887, match64: 0x00000000, modelSI: 0x0abe, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x82d3000082d7, matchRI: 0x0888, match64: 0x00000000, modelSI: -0x0001, models64: 0xabf00000adf},
			deviceTuple{type64: 0x38400000391, brand64: 0x84530000845b, matchRI: 0x0898, match64: 0x00000000, modelSI: -0x0001, models64: 0xadf00000ae1},
			deviceTuple{type64: 0x38400000391, brand64: 0x845f00008464, matchRI: 0x089b, match64: 0x00000000, modelSI: 0x0ae1, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x84640000846b, matchRI: 0x089c, match64: 0x00000000, modelSI: 0x0ae2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x846b00008474, matchRI: 0x089d, match64: 0x00000000, modelSI: -0x0001, models64: 0xae300000ae4},
			deviceTuple{type64: 0x24700000251, brand64: 0x847800008482, matchRI: 0x089e, match64: 0x00000000, modelSI: -0x0001, models64: 0xae400000ae7},
			deviceTuple{type64: 0x24700000251, brand64: 0x849f000084a3, matchRI: -0x0001, match64: 0x849f000084a3, modelSI: -0x0001, models64: 0xae700000ae9},
			deviceTuple{type64: 0x24700000251, brand64: 0x84a3000084aa, matchRI: 0x08a4, match64: 0x00000000, modelSI: -0x0001, models64: 0xae900000aeb},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x84aa000084b2, matchRI: 0x08a7, match64: 0x00000000, modelSI: -0x0001, models64: 0xaeb00000aec},
			deviceTuple{type64: 0x24700000251, brand64: 0x84df000084e7, matchRI: 0x08a8, match64: 0x00000000, modelSI: -0x0001, models64: 0xaec00000af0},
			deviceTuple{type64: 0x24700000251, brand64: 0x850000008508, matchRI: 0x08ac, match64: 0x00000000, modelSI: -0x0001, models64: 0xaf000000af9},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x853f00008546, matchRI: 0x08b5, match64: 0x00000000, modelSI: -0x0001, models64: 0xaf900000afa},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x855300008559, matchRI: 0x08b7, match64: 0x00000000, modelSI: 0x0afa, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x856000008566, matchRI: 0x08b8, match64: 0x00000000, modelSI: 0x0afb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x85660000856d, matchRI: 0x08b9, match64: 0x00000000, modelSI: -0x0001, models64: 0xafc00000b04},
			deviceTuple{type64: 0x24700000251, brand64: 0x85b2000085b8, matchRI: 0x08c1, match64: 0x00000000, modelSI: -0x0001, models64: 0xb0400000b07},
			deviceTuple{type64: 0x24700000251, brand64: 0x85d9000085e0, matchRI: 0x08c3, match64: 0x00000000, modelSI: -0x0001, models64: 0xb0700000b0f},
			deviceTuple{type64: 0x24700000251, brand64: 0x866e00008672, matchRI: 0x08c9, match64: 0x00000000, modelSI: 0x0b0f, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x86720000867b, matchRI: 0x08ca, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1000000b16},
			deviceTuple{type64: 0x24700000251, brand64: 0x871d00008725, matchRI: 0x08cb, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1600000b18},
			deviceTuple{type64: 0x24700000251, brand64: 0x87360000873c, matchRI: 0x08ce, match64: 0x00000000, modelSI: 0x0b18, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x873c00008742, matchRI: 0x08cf, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1900000b35},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x88210000882a, matchRI: 0x08e8, match64: 0x00000000, modelSI: 0x0b35, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x883c00008842, matchRI: 0x08e9, match64: 0x00000000, modelSI: -0x0001, models64: 0xb3600000b38},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x885b00008861, matchRI: -0x0001, match64: 0x88610000886d, modelSI: 0x0b38, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x887a0000887e, matchRI: 0x08eb, match64: 0x00000000, modelSI: 0x0b39, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x887e00008882, matchRI: 0x08ec, match64: 0x00000000, modelSI: -0x0001, models64: 0xb3a00000b3c},
			deviceTuple{type64: 0x24700000251, brand64: 0x888600008888, matchRI: 0x08ef, match64: 0x00000000, modelSI: -0x0001, models64: 0xb3c00000b40},
			deviceTuple{type64: 0x24700000251, brand64: 0x88980000889c, matchRI: 0x08f3, match64: 0x00000000, modelSI: -0x0001, models64: 0xb4000000b45},
			deviceTuple{type64: 0x24700000251, brand64: 0x88b3000088bc, matchRI: 0x08f8, match64: 0x00000000, modelSI: -0x0001, models64: 0xb4500000b4c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x892300008929, matchRI: 0x08fa, match64: 0x00000000, modelSI: 0x0b4c, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x892900008936, matchRI: 0x08fb, match64: 0x00000000, modelSI: 0x0b4d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x893e00008943, matchRI: 0x08fc, match64: 0x00000000, modelSI: 0x0b4e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x895100008955, matchRI: -0x0001, match64: 0x89550000895a, modelSI: -0x0001, models64: 0xb4f00000b50},
			deviceTuple{type64: 0x24300000245, brand64: 0x896300008968, matchRI: 0x08fe, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x89680000896e, matchRI: -0x0001, match64: 0x89680000896e, modelSI: -0x0001, models64: 0xb5000000b52},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x898100008988, matchRI: 0x0901, match64: 0x00000000, modelSI: 0x0b52, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x89880000898b, matchRI: 0x0902, match64: 0x00000000, modelSI: -0x0001, models64: 0xb5300000b5c},
			deviceTuple{type64: 0x24700000251, brand64: 0x8a1300008a16, matchRI: 0x0904, match64: 0x00000000, modelSI: -0x0001, models64: 0xb5c00000b61},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8a4500008a48, matchRI: 0x0905, match64: 0x00000000, modelSI: -0x0001, models64: 0xb6100000b66},
			deviceTuple{type64: 0x24700000251, brand64: 0x8a9200008a97, matchRI: 0x0909, match64: 0x00000000, modelSI: 0x0b66, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x8a9700008a9c, matchRI: 0x090a, match64: 0x00000000, modelSI: -0x0001, models64: 0xb6700000b69},
			deviceTuple{type64: 0x24700000251, brand64: 0x8aa300008aab, matchRI: 0x090d, match64: 0x00000000, modelSI: -0x0001, models64: 0xb6900000b6d},
			deviceTuple{type64: 0x24700000251, brand64: 0x8abd00008ac0, matchRI: 0x0911, match64: 0x00000000, modelSI: 0x0b6d, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8ac000008ac9, matchRI: 0x0912, match64: 0x00000000, modelSI: 0x0b6e, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x8ac900008ad1, matchRI: -0x0001, match64: 0x8ad100008ad9, modelSI: 0x0b6f, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8ae200008ae9, matchRI: 0x0913, match64: 0x00000000, modelSI: -0x0001, models64: 0xb7000000b73},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8af400008afa, matchRI: 0x0917, match64: 0x00000000, modelSI: 0x0b73, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x8b0100008b0a, matchRI: 0x0918, match64: 0x00000000, modelSI: 0x0b74, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x8b0a00008b10, matchRI: 0x0919, match64: 0x00000000, modelSI: 0x0b75, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x8b1000008b16, matchRI: 0x091a, match64: 0x00000000, modelSI: -0x0001, models64: 0xb7600000b7b},
			deviceTuple{type64: 0x24700000251, brand64: 0x8b4a00008b50, matchRI: 0x091d, match64: 0x00000000, modelSI: 0x0b7b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x8b5500008b5f, matchRI: 0x091e, match64: 0x00000000, modelSI: 0x0b7c, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8b5f00008b67, matchRI: 0x091f, match64: 0x00000000, modelSI: 0x0b7d, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8b6700008b70, matchRI: 0x0920, match64: 0x00000000, modelSI: 0x0b7e, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x8b7000008b76, matchRI: -0x0001, match64: 0x8b7600008b7c, modelSI: -0x0001, models64: 0xb7f00000b80},
			deviceTuple{type64: 0x24700000251, brand64: 0x8b7c00008b80, matchRI: 0x0922, match64: 0x00000000, modelSI: -0x0001, models64: 0xb8000000b87},
			deviceTuple{type64: 0x24700000251, brand64: 0x8bd700008bdb, matchRI: 0x0925, match64: 0x00000000, modelSI: -0x0001, models64: 0xb8700000b94},
			deviceTuple{type64: 0x24700000251, brand64: 0x8ca900008cad, matchRI: 0x0928, match64: 0x00000000, modelSI: -0x0001, models64: 0xb9400000b9f},
			deviceTuple{type64: 0x24700000251, brand64: 0x8cf800008cff, matchRI: -0x0001, match64: 0x8cf800008cff, modelSI: -0x0001, models64: 0xb9f00000ba0},
			deviceTuple{type64: 0x24300000245, brand64: 0x8cff00008d05, matchRI: -0x0001, match64: 0x8cff00008d05, modelSI: -0x0001, models64: 0xba000000ba1},
			deviceTuple{type64: 0x24700000251, brand64: 0x8d0b00008d14, matchRI: 0x0932, match64: 0x00000000, modelSI: -0x0001, models64: 0xba100000ba3},
			deviceTuple{type64: 0x24300000245, brand64: 0x8d1400008d1a, matchRI: -0x0001, match64: 0x8d1a00008d20, modelSI: -0x0001, models64: 0xba300000ba4},
			deviceTuple{type64: 0x24700000251, brand64: 0x8d2000008d2e, matchRI: 0x0936, match64: 0x00000000, modelSI: -0x0001, models64: 0xba400000bc1},
			deviceTuple{type64: 0x24700000251, brand64: 0x8e9f00008ea3, matchRI: 0x0953, match64: 0x00000000, modelSI: -0x0001, models64: 0xbc100000bc3},
			deviceTuple{type64: 0x24700000251, brand64: 0x8eb700008eba, matchRI: 0x0954, match64: 0x00000000, modelSI: -0x0001, models64: 0xbc300000c33},
			deviceTuple{type64: 0x24300000245, brand64: 0x931b00009320, matchRI: -0x0001, match64: 0x932000009326, modelSI: -0x0001, models64: 0xc3300000c34},
			deviceTuple{type64: 0x24700000251, brand64: 0x933100009336, matchRI: 0x099b, match64: 0x00000000, modelSI: -0x0001, models64: 0xc3400000c37},
			deviceTuple{type64: 0x24700000251, brand64: 0x93360000933b, matchRI: 0x099f, match64: 0x00000000, modelSI: -0x0001, models64: 0xc3700000c39},
			deviceTuple{type64: 0x24300000245, brand64: 0x933d00009345, matchRI: 0x09a2, match64: 0x00000000, modelSI: -0x0001, models64: 0xc3900000c3b},
			deviceTuple{type64: 0x24700000251, brand64: 0x935000009357, matchRI: 0x09a5, match64: 0x00000000, modelSI: -0x0001, models64: 0xc3b00000c3c},
			deviceTuple{type64: 0x24700000251, brand64: 0x936100009367, matchRI: 0x09a7, match64: 0x00000000, modelSI: 0x0c3c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x936700009372, matchRI: 0x09a8, match64: 0x00000000, modelSI: 0x0c3d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x937900009384, matchRI: 0x09a9, match64: 0x00000000, modelSI: -0x0001, models64: 0xc3e00000c44},
			deviceTuple{type64: 0x24700000251, brand64: 0x93c6000093cc, matchRI: 0x09ad, match64: 0x00000000, modelSI: -0x0001, models64: 0xc4400000c45},
			deviceTuple{type64: 0x24700000251, brand64: 0x93da000093e1, matchRI: 0x09af, match64: 0x00000000, modelSI: -0x0001, models64: 0xc4500000c46},
			deviceTuple{type64: 0x24700000251, brand64: 0x93ec000093f1, matchRI: 0x09b1, match64: 0x00000000, modelSI: 0x0c46, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x93f1000093f9, matchRI: 0x09b2, match64: 0x00000000, modelSI: -0x0001, models64: 0xc4700000c4b},
			deviceTuple{type64: 0x24700000251, brand64: 0x942100009428, matchRI: 0x09b3, match64: 0x00000000, modelSI: -0x0001, models64: 0xc4b00000c61},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x954f00009555, matchRI: 0x09bc, match64: 0x00000000, modelSI: 0x0c61, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x55d00000562, matchRI: 0x09bd, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x95550000955c, matchRI: 0x09be, match64: 0x00000000, modelSI: -0x0001, models64: 0xc6200000c95},
			deviceTuple{type64: 0x24300000245, brand64: 0x986d00009872, matchRI: 0x09f0, match64: 0x00000000, modelSI: -0x0001, models64: 0xc9500000c96},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x98830000988a, matchRI: 0x09f2, match64: 0x00000000, modelSI: -0x0001, models64: 0xc9600000c9b},
			deviceTuple{type64: 0x24700000251, brand64: 0x98aa000098c2, matchRI: 0x09f8, match64: 0x00000000, modelSI: 0x0c9b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x98c2000098c7, matchRI: 0x09f9, match64: 0x00000000, modelSI: 0x0c9c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x98cd000098d3, matchRI: 0x09fa, match64: 0x00000000, modelSI: -0x0001, models64: 0xc9d00000ca4},
			deviceTuple{type64: 0x24700000251, brand64: 0x99050000990c, matchRI: 0x09fe, match64: 0x00000000, modelSI: -0x0001, models64: 0xca400000ca6},
			deviceTuple{type64: 0x24700000251, brand64: 0x991b0000991e, matchRI: 0x0a01, match64: 0x00000000, modelSI: 0x0ca6, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x991e00009924, matchRI: 0x0a02, match64: 0x00000000, modelSI: 0x0ca7, models64: 0x00000000},
			deviceTuple{type64: 0x285a00002862, brand64: 0x99290000992f, matchRI: 0x0a03, match64: 0x00000000, modelSI: 0x0ca8, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x992f00009934, matchRI: 0x0a04, match64: 0x00000000, modelSI: -0x0001, models64: 0xca900000cb6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x9a0d00009a15, matchRI: 0x0a0d, match64: 0x00000000, modelSI: 0x0cb6, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x9a1900009a1f, matchRI: 0x0a0e, match64: 0x00000000, modelSI: 0x0cb7, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x9a2800009a2b, matchRI: 0x0a0f, match64: 0x00000000, modelSI: -0x0001, models64: 0xcb800000cbe},
			deviceTuple{type64: 0x24700000251, brand64: 0x9a5600009a5e, matchRI: 0x0a13, match64: 0x00000000, modelSI: -0x0001, models64: 0xcbe00000cd6},
			deviceTuple{type64: 0x24700000251, brand64: 0x9b7400009b7c, matchRI: 0x0a27, match64: 0x00000000, modelSI: -0x0001, models64: 0xcd600000cd7},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x9b8a00009b91, matchRI: 0x0a28, match64: 0x00000000, modelSI: -0x0001, models64: 0xcd700000cd9},
			deviceTuple{type64: 0x24300000245, brand64: 0x9b9c00009ba0, matchRI: 0x0a2a, match64: 0x00000000, modelSI: 0x0cd9, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x9ba000009ba7, matchRI: 0x0a2b, match64: 0x00000000, modelSI: 0x0cda, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x9ba700009baa, matchRI: 0x0a2c, match64: 0x00000000, modelSI: 0x0cdb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x9bb100009bb9, matchRI: 0x0a2d, match64: 0x00000000, modelSI: 0x0cdc, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x9bb900009bcb, matchRI: 0x0a2e, match64: 0x00000000, modelSI: -0x0001, models64: 0xcdd00000ce0},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x9bf500009bfa, matchRI: 0x0a2f, match64: 0x00000000, modelSI: 0x0ce0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x9bfa00009c05, matchRI: 0x0a30, match64: 0x00000000, modelSI: -0x0001, models64: 0xce100000ce4},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x9c1200009c19, matchRI: 0x0a34, match64: 0x00000000, modelSI: -0x0001, models64: 0xce400000ce5},
			deviceTuple{type64: 0x24300000245, brand64: 0x9c2300009c28, matchRI: -0x0001, match64: 0x9c2800009c30, modelSI: 0x0ce5, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x9c3800009c3e, matchRI: 0x0a36, match64: 0x00000000, modelSI: 0x0ce6, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x9c3e00009c43, matchRI: 0x0a37, match64: 0x00000000, modelSI: 0x0ce7, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x9c4300009c4e, matchRI: 0x0a38, match64: 0x00000000, modelSI: 0x0ce8, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x9c4e00009c54, matchRI: 0x0a39, match64: 0x00000000, modelSI: 0x0ce9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x9c5400009c62, matchRI: 0x0a3a, match64: 0x00000000, modelSI: -0x0001, models64: 0xcea00000d08},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x9daf00009db6, matchRI: 0x0a42, match64: 0x00000000, modelSI: 0x0d08, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x9db600009dbc, matchRI: 0x0a43, match64: 0x00000000, modelSI: -0x0001, models64: 0xd0900000d0c},
			deviceTuple{type64: 0x24300000245, brand64: 0x9dc500009dcb, matchRI: 0x0a46, match64: 0x00000000, modelSI: 0x0d0c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x9dcb00009dd2, matchRI: 0x0a47, match64: 0x00000000, modelSI: 0x0d0d, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x9dd200009dd7, matchRI: 0x0a48, match64: 0x00000000, modelSI: 0x0d0e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x9dd700009ddb, matchRI: 0x0a49, match64: 0x00000000, modelSI: -0x0001, models64: 0xd0f00000d24},
			deviceTuple{type64: 0x24700000251, brand64: 0x9efa00009eff, matchRI: 0x0a50, match64: 0x00000000, modelSI: 0x0d24, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x9eff00009f04, matchRI: 0x0a51, match64: 0x00000000, modelSI: -0x0001, models64: 0xd2500000d26},
			deviceTuple{type64: 0x24700000251, brand64: 0x9f0700009f0f, matchRI: 0x0a53, match64: 0x00000000, modelSI: -0x0001, models64: 0xd2600000d2b},
			deviceTuple{type64: 0x24700000251, brand64: 0x9f3d00009f44, matchRI: 0x0a57, match64: 0x00000000, modelSI: -0x0001, models64: 0xd2b00000d3c},
			deviceTuple{type64: 0x24700000251, brand64: 0x9ffa00009ffe, matchRI: 0x0a5e, match64: 0x00000000, modelSI: -0x0001, models64: 0xd3c00000d41},
			deviceTuple{type64: 0x24700000251, brand64: 0xa0100000a016, matchRI: 0x0a63, match64: 0x00000000, modelSI: -0x0001, models64: 0xd4100000d45},
			deviceTuple{type64: 0x24700000251, brand64: 0xa0210000a027, matchRI: 0x0a68, match64: 0x00000000, modelSI: -0x0001, models64: 0xd4500000d66},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa11c0000a122, matchRI: 0x0a7b, match64: 0x00000000, modelSI: -0x0001, models64: 0xd6600000d69},
			deviceTuple{type64: 0x24300000245, brand64: 0xa12b0000a133, matchRI: 0x0a7f, match64: 0x00000000, modelSI: 0x0d69, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa1330000a13b, matchRI: 0x0a80, match64: 0x00000000, modelSI: -0x0001, models64: 0xd6a00000d6c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa1590000a163, matchRI: -0x0001, match64: 0xa1630000a169, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa1690000a171, matchRI: 0x0a81, match64: 0x00000000, modelSI: -0x0001, models64: 0xd6c00000d71},
			deviceTuple{type64: 0x285a00002862, brand64: 0xa1bb0000a1c2, matchRI: -0x0001, match64: 0xa1c20000a1ce, modelSI: 0x0d71, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa1d00000a1da, matchRI: 0x0a83, match64: 0x00000000, modelSI: -0x0001, models64: 0xd7200000d76},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa2160000a220, matchRI: 0x0a84, match64: 0x00000000, modelSI: -0x0001, models64: 0xd7600000d7b},
			deviceTuple{type64: 0x24300000245, brand64: 0xa2580000a260, matchRI: 0x0a87, match64: 0x00000000, modelSI: 0x0d7b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa2600000a264, matchRI: 0x0a88, match64: 0x00000000, modelSI: -0x0001, models64: 0xd7c00000d7e},
			deviceTuple{type64: 0x24700000251, brand64: 0xa2640000a268, matchRI: 0x0a8b, match64: 0x00000000, modelSI: -0x0001, models64: 0xd7e00000d89},
			deviceTuple{type64: 0x24700000251, brand64: 0xa2800000a286, matchRI: 0x0a97, match64: 0x00000000, modelSI: -0x0001, models64: 0xd8900000db8},
			deviceTuple{type64: 0x24700000251, brand64: 0xa4560000a45e, matchRI: 0x0ab2, match64: 0x00000000, modelSI: -0x0001, models64: 0xdb800000dc0},
			deviceTuple{type64: 0x24700000251, brand64: 0xa4820000a489, matchRI: 0x0abb, match64: 0x00000000, modelSI: -0x0001, models64: 0xdc000000dc2},
			deviceTuple{type64: 0x24700000251, brand64: 0xa4890000a48e, matchRI: 0x0abd, match64: 0x00000000, modelSI: -0x0001, models64: 0xdc200000dc7},
			deviceTuple{type64: 0x38400000391, brand64: 0xa4b10000a4ba, matchRI: -0x0001, match64: 0xa4ba0000a4c3, modelSI: -0x0001, models64: 0xdc700000dc9},
			deviceTuple{type64: 0x24300000245, brand64: 0xa4c30000a4c9, matchRI: 0x0ac2, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa4c90000a4ce, matchRI: 0x0ac3, match64: 0x00000000, modelSI: 0x0dc9, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa4d50000a4df, matchRI: 0x0ac4, match64: 0x00000000, modelSI: 0x0dca, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa4df0000a4e3, matchRI: 0x0ac5, match64: 0x00000000, modelSI: -0x0001, models64: 0xdcb00000dce},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa4ff0000a509, matchRI: 0x0ac7, match64: 0x00000000, modelSI: -0x0001, models64: 0xdce00000dd0},
			deviceTuple{type64: 0x24700000251, brand64: 0xa51b0000a527, matchRI: 0x0aca, match64: 0x00000000, modelSI: -0x0001, models64: 0xdd000000dd1},
			deviceTuple{type64: 0x24700000251, brand64: 0xa5340000a53c, matchRI: 0x0acb, match64: 0x00000000, modelSI: -0x0001, models64: 0xdd100000dd2},
			deviceTuple{type64: 0x24700000251, brand64: 0xa5480000a54e, matchRI: 0x0acd, match64: 0x00000000, modelSI: -0x0001, models64: 0xdd200000dd4},
			deviceTuple{type64: 0x24700000251, brand64: 0xa5630000a569, matchRI: 0x0acf, match64: 0x00000000, modelSI: -0x0001, models64: 0xdd400000dd6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa5690000a573, matchRI: 0x0ad2, match64: 0x00000000, modelSI: 0x0dd6, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xa5730000a57a, matchRI: 0x0ad3, match64: 0x00000000, modelSI: -0x0001, models64: 0xdd700000dde},
			deviceTuple{type64: 0x24700000251, brand64: 0xa5c60000a5ca, matchRI: 0x0ad8, match64: 0x00000000, modelSI: -0x0001, models64: 0xdde00000de4},
			deviceTuple{type64: 0x24700000251, brand64: 0xa6110000a619, matchRI: 0x0ade, match64: 0x00000000, modelSI: 0x0de4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa6190000a61d, matchRI: 0x0adf, match64: 0x00000000, modelSI: -0x0001, models64: 0xde500000de6},
			deviceTuple{type64: 0x24300000245, brand64: 0xa6250000a628, matchRI: 0x0ae1, match64: 0x00000000, modelSI: -0x0001, models64: 0xde600000deb},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa6410000a647, matchRI: 0x0ae7, match64: 0x00000000, modelSI: 0x0deb, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa6470000a64c, matchRI: 0x0ae8, match64: 0x00000000, modelSI: 0x0dec, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa64c0000a64f, matchRI: 0x0ae9, match64: 0x00000000, modelSI: -0x0001, models64: 0xded00000dee},
			deviceTuple{type64: 0x24300000245, brand64: 0xa65d0000a660, matchRI: -0x0001, match64: 0xa6600000a671, modelSI: 0x0dee, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa67a0000a67e, matchRI: 0x0aea, match64: 0x00000000, modelSI: -0x0001, models64: 0xdef00000df0},
			deviceTuple{type64: 0x24300000245, brand64: 0xa6840000a689, matchRI: 0x0aec, match64: 0x00000000, modelSI: -0x0001, models64: 0xdf000000df4},
			deviceTuple{type64: 0x24300000245, brand64: 0xa6b60000a6b9, matchRI: -0x0001, match64: 0xa6b90000a6bd, modelSI: -0x0001, models64: 0xdf400000df5},
			deviceTuple{type64: 0x24300000245, brand64: 0xa6cb0000a6d0, matchRI: 0x0af1, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa6d00000a6d4, matchRI: 0x0af2, match64: 0x00000000, modelSI: 0x0df5, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa6d40000a6d7, matchRI: 0x0af3, match64: 0x00000000, modelSI: -0x0001, models64: 0xdf600000df9},
			deviceTuple{type64: 0x24300000245, brand64: 0xa6f50000a6fe, matchRI: 0x0af4, match64: 0x00000000, modelSI: 0x0df9, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa7080000a710, matchRI: 0x0af5, match64: 0x00000000, modelSI: 0x0dfa, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa7100000a718, matchRI: -0x0001, match64: 0xa7100000a718, modelSI: -0x0001, models64: 0xdfb00000dfc},
			deviceTuple{type64: 0x24700000251, brand64: 0xa7270000a729, matchRI: 0x0af7, match64: 0x00000000, modelSI: -0x0001, models64: 0xdfc00000e0f},
			deviceTuple{type64: 0x24700000251, brand64: 0xa8150000a818, matchRI: 0x0b03, match64: 0x00000000, modelSI: -0x0001, models64: 0xe0f00000e6a},
			deviceTuple{type64: 0x24700000251, brand64: 0xab310000ab37, matchRI: 0x0b56, match64: 0x00000000, modelSI: -0x0001, models64: 0xe6a00000e6c},
			deviceTuple{type64: 0x24700000251, brand64: 0xab3b0000ab40, matchRI: 0x0b59, match64: 0x00000000, modelSI: -0x0001, models64: 0xe6c00000e88},
			deviceTuple{type64: 0x24700000251, brand64: 0xac5d0000ac63, matchRI: -0x0001, match64: 0xac5d0000ac63, modelSI: -0x0001, models64: 0xe8800000e89},
			deviceTuple{type64: 0x24700000251, brand64: 0xac6b0000ac70, matchRI: 0x0b67, match64: 0x00000000, modelSI: 0x0e89, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xac700000ac76, matchRI: 0x0b68, match64: 0x00000000, modelSI: -0x0001, models64: 0xe8a00000e8b},
			deviceTuple{type64: 0x24700000251, brand64: 0xac820000ac88, matchRI: 0x0b6a, match64: 0x00000000, modelSI: -0x0001, models64: 0xe8b00000e9c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xad3e0000ad46, matchRI: 0x0b79, match64: 0x00000000, modelSI: -0x0001, models64: 0xe9c00000e9e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xad460000ad4f, matchRI: 0x0b7c, match64: 0x00000000, modelSI: -0x0001, models64: 0xe9e00000ea5},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xad850000ad8b, matchRI: 0x0b7f, match64: 0x00000000, modelSI: 0x0ea5, models64: 0x00000000},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0xad8b0000ad95, matchRI: 0x0b80, match64: 0x00000000, modelSI: 0x0ea6, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xad9e0000ada4, matchRI: 0x0b81, match64: 0x00000000, modelSI: -0x0001, models64: 0xea700000ea9},
			deviceTuple{type64: 0x24300000245, brand64: 0xada40000adab, matchRI: 0x0b84, match64: 0x00000000, modelSI: -0x0001, models64: 0xea900000eaa},
			deviceTuple{type64: 0x24700000251, brand64: 0xadb20000adb7, matchRI: -0x0001, match64: 0xadb20000adb7, modelSI: -0x0001, models64: 0xeaa00000eac},
			deviceTuple{type64: 0x24300000245, brand64: 0xadb70000adbe, matchRI: 0x0b88, match64: 0x00000000, modelSI: 0x0eac, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xadbe0000adc6, matchRI: 0x0b89, match64: 0x00000000, modelSI: -0x0001, models64: 0xead00000eb0},
			deviceTuple{type64: 0x24300000245, brand64: 0xadd70000addd, matchRI: 0x0b8d, match64: 0x00000000, modelSI: 0x0eb0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xaddd0000ade2, matchRI: 0x0b8e, match64: 0x00000000, modelSI: 0x0eb1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xade20000adea, matchRI: 0x0b8f, match64: 0x00000000, modelSI: 0x0eb2, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xadec0000adf2, matchRI: 0x0b90, match64: 0x00000000, modelSI: 0x0eb3, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xadf20000adf4, matchRI: 0x0b91, match64: 0x00000000, modelSI: -0x0001, models64: 0xeb400000ebb},
			deviceTuple{type64: 0x24700000251, brand64: 0xae280000ae2f, matchRI: 0x0b98, match64: 0x00000000, modelSI: -0x0001, models64: 0xebb00000ec3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xae850000ae8d, matchRI: 0x0b9a, match64: 0x00000000, modelSI: 0x0ec3, models64: 0x00000000},
			deviceTuple{type64: 0xae980000aead, brand64: 0xae940000ae98, matchRI: 0x0b9b, match64: 0x00000000, modelSI: 0x0ec4, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xaeb70000aebe, matchRI: 0x0b9c, match64: 0x00000000, modelSI: 0x0ec5, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xaebe0000aec2, matchRI: -0x0001, match64: 0xaec20000aec7, modelSI: -0x0001, models64: 0xec600000ec7},
			deviceTuple{type64: 0x24700000251, brand64: 0xaed20000aed8, matchRI: 0x0b9e, match64: 0x00000000, modelSI: -0x0001, models64: 0xec700000eca},
			deviceTuple{type64: 0x24700000251, brand64: 0xaee10000aee6, matchRI: 0x0ba1, match64: 0x00000000, modelSI: -0x0001, models64: 0xeca00000ecc},
			deviceTuple{type64: 0x24300000245, brand64: 0xaef60000aefc, matchRI: 0x0ba4, match64: 0x00000000, modelSI: -0x0001, models64: 0xecc00000ed0},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xaf130000af19, matchRI: 0x0ba9, match64: 0x00000000, modelSI: 0x0ed0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xaf190000af23, matchRI: 0x0baa, match64: 0x00000000, modelSI: -0x0001, models64: 0xed100000efb},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb09e0000b0a7, matchRI: 0x0bd1, match64: 0x00000000, modelSI: -0x0001, models64: 0xefb00000efe},
			deviceTuple{type64: 0x24300000245, brand64: 0xb0a70000b0ae, matchRI: 0x0bd5, match64: 0x00000000, modelSI: -0x0001, models64: 0xefe00000f00},
			deviceTuple{type64: 0x24700000251, brand64: 0xb0c30000b0ca, matchRI: 0x0bd8, match64: 0x00000000, modelSI: -0x0001, models64: 0xf0000000f3f},
			deviceTuple{type64: 0x24300000245, brand64: 0xb2f10000b2f8, matchRI: 0x0c02, match64: 0x00000000, modelSI: -0x0001, models64: 0xf3f00000f40},
			deviceTuple{type64: 0x24700000251, brand64: 0xb2f80000b2fe, matchRI: 0x0c04, match64: 0x00000000, modelSI: 0x0f40, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xb2fe0000b306, matchRI: 0x0c05, match64: 0x00000000, modelSI: -0x0001, models64: 0xf4100000f44},
			deviceTuple{type64: 0x24300000245, brand64: 0xb30a0000b312, matchRI: 0x0c09, match64: 0x00000000, modelSI: 0x0f44, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb3120000b31a, matchRI: 0x0c0a, match64: 0x00000000, modelSI: -0x0001, models64: 0xf4500000f49},
			deviceTuple{type64: 0x24700000251, brand64: 0xb3370000b33d, matchRI: 0x0c0f, match64: 0x00000000, modelSI: -0x0001, models64: 0xf4900000f4e},
			deviceTuple{type64: 0x24700000251, brand64: 0xb3530000b35c, matchRI: 0x0c13, match64: 0x00000000, modelSI: -0x0001, models64: 0xf4e00000f52},
			deviceTuple{type64: 0x24300000245, brand64: 0xb3820000b389, matchRI: -0x0001, match64: 0xb3820000b389, modelSI: -0x0001, models64: 0xf5200000f53},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb3a30000b3a8, matchRI: 0x0c17, match64: 0x00000000, modelSI: -0x0001, models64: 0xf5300000f57},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0xb3ab0000b3b3, matchRI: 0x0c1c, match64: 0x00000000, modelSI: -0x0001, models64: 0xf5700000f58},
			deviceTuple{type64: 0x24300000245, brand64: 0xb3b70000b3bf, matchRI: 0x0c1e, match64: 0x00000000, modelSI: 0x0f58, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xb3bf0000b3c4, matchRI: 0x0c1f, match64: 0x00000000, modelSI: -0x0001, models64: 0xf5900000f5b},
			deviceTuple{type64: 0x24700000251, brand64: 0xb3c40000b3ce, matchRI: 0x0c22, match64: 0x00000000, modelSI: -0x0001, models64: 0xf5b00000f61},
			deviceTuple{type64: 0x24700000251, brand64: 0xb40d0000b413, matchRI: 0x0c23, match64: 0x00000000, modelSI: -0x0001, models64: 0xf6100000f76},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb4c60000b4c9, matchRI: 0x0c32, match64: 0x00000000, modelSI: -0x0001, models64: 0xf7600000f79},
			deviceTuple{type64: 0x24700000251, brand64: 0xb4de0000b4e4, matchRI: 0x0c36, match64: 0x00000000, modelSI: -0x0001, models64: 0xf7900000f7b},
			deviceTuple{type64: 0x24700000251, brand64: 0xb4e80000b4ee, matchRI: 0x0c39, match64: 0x00000000, modelSI: -0x0001, models64: 0xf7b00000f7c},
			deviceTuple{type64: 0x24700000251, brand64: 0xb4ee0000b4f3, matchRI: 0x0c3b, match64: 0x00000000, modelSI: -0x0001, models64: 0xf7c00000f7e},
			deviceTuple{type64: 0x24700000251, brand64: 0xb5120000b518, matchRI: 0x0c3e, match64: 0x00000000, modelSI: -0x0001, models64: 0xf7e000011db},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xd4be0000d4c6, matchRI: 0x0e10, match64: 0x00000000, modelSI: -0x0001, models64: 0x11db000011dd},
			deviceTuple{type64: 0x24300000245, brand64: 0xd4da0000d4df, matchRI: 0x0e12, match64: 0x00000000, modelSI: -0x0001, models64: 0x11dd000011e0},
			deviceTuple{type64: 0x24700000251, brand64: 0xd4df0000d4e8, matchRI: 0x0e16, match64: 0x00000000, modelSI: -0x0001, models64: 0x11e0000011f4},
			deviceTuple{type64: 0x24700000251, brand64: 0xd5870000d58d, matchRI: 0x0e1b, match64: 0x00000000, modelSI: -0x0001, models64: 0x11f4000011f6},
			deviceTuple{type64: 0x24700000251, brand64: 0xd59b0000d5a1, matchRI: 0x0e1d, match64: 0x00000000, modelSI: 0x11f6, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xd5a90000d5af, matchRI: -0x0001, match64: 0xd5af0000d5bd, modelSI: 0x11f7, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xd5c40000d5ca, matchRI: 0x0e1e, match64: 0x00000000, modelSI: -0x0001, models64: 0x11f8000011f9},
			deviceTuple{type64: 0x24700000251, brand64: 0xd5ca0000d5d1, matchRI: 0x0e20, match64: 0x00000000, modelSI: -0x0001, models64: 0x11f900001223},
			deviceTuple{type64: 0x24700000251, brand64: 0xd7ff0000d803, matchRI: 0x0e2f, match64: 0x00000000, modelSI: -0x0001, models64: 0x122300001225},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xd8190000d81e, matchRI: 0x0e30, match64: 0x00000000, modelSI: 0x1225, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xd8320000d838, matchRI: 0x0e31, match64: 0x00000000, modelSI: -0x0001, models64: 0x122600001228},
			deviceTuple{type64: 0x24700000251, brand64: 0xd8400000d84a, matchRI: 0x0e33, match64: 0x00000000, modelSI: -0x0001, models64: 0x12280000122d},
			deviceTuple{type64: 0x24700000251, brand64: 0xd8880000d892, matchRI: 0x0e36, match64: 0x00000000, modelSI: -0x0001, models64: 0x122d00001231},
			deviceTuple{type64: 0x24700000251, brand64: 0xd8970000d8a1, matchRI: 0x0e3b, match64: 0x00000000, modelSI: -0x0001, models64: 0x123100001245},
			deviceTuple{type64: 0x8e00000099, brand64: 0xd9350000d93a, matchRI: 0x0e50, match64: 0x00000000, modelSI: 0x1245, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0xd93a0000d93d, matchRI: 0x0e51, match64: 0x00000000, modelSI: -0x0001, models64: 0x124600001248},
			deviceTuple{type64: 0x24700000251, brand64: 0xd93d0000d942, matchRI: 0x0e54, match64: 0x00000000, modelSI: -0x0001, models64: 0x12480000124c},
			deviceTuple{type64: 0x24300000245, brand64: 0xd96d0000d972, matchRI: 0x0e56, match64: 0x00000000, modelSI: 0x124c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xd9790000d97c, matchRI: 0x0e57, match64: 0x00000000, modelSI: -0x0001, models64: 0x124d00001250},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xd9890000d98c, matchRI: 0x0e5b, match64: 0x00000000, modelSI: -0x0001, models64: 0x125000001252},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xd99d0000d99f, matchRI: 0x0e5d, match64: 0x00000000, modelSI: -0x0001, models64: 0x125200001254},
			deviceTuple{type64: 0x24700000251, brand64: 0xd9b40000d9b8, matchRI: 0x0e5f, match64: 0x00000000, modelSI: -0x0001, models64: 0x125400001255},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xd9b80000d9bf, matchRI: 0x0e61, match64: 0x00000000, modelSI: -0x0001, models64: 0x12550000126d},
			deviceTuple{type64: 0x24300000245, brand64: 0xdc1d0000dc21, matchRI: -0x0001, match64: 0xdc210000dc25, modelSI: -0x0001, models64: 0x126d0000126e},
			deviceTuple{type64: 0x24700000251, brand64: 0xdc2a0000dc2f, matchRI: -0x0001, match64: 0xdc2f0000dc35, modelSI: 0x126e, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xdc350000dc3f, matchRI: 0x0e65, match64: 0x00000000, modelSI: -0x0001, models64: 0x126f00001274},
			deviceTuple{type64: 0x24700000251, brand64: 0xdc510000dc58, matchRI: 0x0e6b, match64: 0x00000000, modelSI: -0x0001, models64: 0x12740000127f},
			deviceTuple{type64: 0x24700000251, brand64: 0xdcc70000dccd, matchRI: 0x0e6f, match64: 0x00000000, modelSI: -0x0001, models64: 0x127f00001282},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xdcfb0000dcff, matchRI: 0x0e71, match64: 0x00000000, modelSI: -0x0001, models64: 0x128200001284},
			deviceTuple{type64: 0x24700000251, brand64: 0xdd020000dd06, matchRI: 0x0e74, match64: 0x00000000, modelSI: -0x0001, models64: 0x12840000128b},
			deviceTuple{type64: 0x24700000251, brand64: 0xdd420000dd4b, matchRI: 0x0e79, match64: 0x00000000, modelSI: -0x0001, models64: 0x128b0000128e},
			deviceTuple{type64: 0x24700000251, brand64: 0xdd6d0000dd74, matchRI: -0x0001, match64: 0xdd6d0000dd74, modelSI: -0x0001, models64: 0x128e00001326},
			deviceTuple{type64: 0x24300000245, brand64: 0xe2150000e21c, matchRI: 0x0f12, match64: 0x00000000, modelSI: 0x1326, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xe21c0000e223, matchRI: 0x0f13, match64: 0x00000000, modelSI: 0x1327, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xe2230000e228, matchRI: 0x0f14, match64: 0x00000000, modelSI: 0x1328, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xe2280000e22c, matchRI: 0x0f15, match64: 0x00000000, modelSI: 0x1329, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xe2340000e239, matchRI: 0x0f16, match64: 0x00000000, modelSI: 0x132a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xe2390000e23f, matchRI: 0x0f17, match64: 0x00000000, modelSI: -0x0001, models64: 0x132b00001344},
			deviceTuple{type64: 0x24700000251, brand64: 0xe3870000e38c, matchRI: 0x0f24, match64: 0x00000000, modelSI: 0x1344, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0xe38c0000e396, matchRI: 0x0f25, match64: 0x00000000, modelSI: 0x1345, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xe39c0000e3a0, matchRI: 0x0f26, match64: 0x00000000, modelSI: -0x0001, models64: 0x134600001356},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xe42b0000e433, matchRI: 0x0f32, match64: 0x00000000, modelSI: -0x0001, models64: 0x13560000135e},
			deviceTuple{type64: 0xb6500000b6c, brand64: 0xe4b20000e4b7, matchRI: -0x0001, match64: 0xe4b70000e4c1, modelSI: -0x0001, models64: 0x135e0000135f},
			deviceTuple{type64: 0x24700000251, brand64: 0xe4c70000e4cc, matchRI: 0x0f35, match64: 0x00000000, modelSI: -0x0001, models64: 0x135f00001381},
			deviceTuple{type64: 0x24700000251, brand64: 0xe6550000e65b, matchRI: 0x0f56, match64: 0x00000000, modelSI: -0x0001, models64: 0x138100001383},
			deviceTuple{type64: 0x24300000245, brand64: 0xe65b0000e660, matchRI: 0x0f59, match64: 0x00000000, modelSI: -0x0001, models64: 0x138300001386},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xe66d0000e672, matchRI: 0x0f5c, match64: 0x00000000, modelSI: -0x0001, models64: 0x138600001389},
			deviceTuple{type64: 0x24700000251, brand64: 0xe6720000e676, matchRI: 0x0f60, match64: 0x00000000, modelSI: -0x0001, models64: 0x13890000139a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xe7610000e769, matchRI: 0x0f68, match64: 0x00000000, modelSI: -0x0001, models64: 0x139a0000139f},
			deviceTuple{type64: 0x24700000251, brand64: 0xe7a80000e7ad, matchRI: 0x0f6d, match64: 0x00000000, modelSI: 0x139f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xe7ad0000e7b0, matchRI: 0x0f6e, match64: 0x00000000, modelSI: 0x13a0, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xe7b00000e7b4, matchRI: 0x0f6f, match64: 0x00000000, modelSI: 0x13a1, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xe7b40000e7b8, matchRI: 0x0f70, match64: 0x00000000, modelSI: 0x13a2, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xe7b80000e7bb, matchRI: 0x0f71, match64: 0x00000000, modelSI: -0x0001, models64: 0x13a3000013aa},
			deviceTuple{type64: 0xb6500000b6c, brand64: 0xe7ee0000e7f2, matchRI: 0x0f79, match64: 0x00000000, modelSI: -0x0001, models64: 0x13aa000013ac},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xe8050000e809, matchRI: 0x0f7a, match64: 0x00000000, modelSI: -0x0001, models64: 0x13ac000013ae},
			deviceTuple{type64: 0x24700000251, brand64: 0xe8160000e81a, matchRI: 0x0f7d, match64: 0x00000000, modelSI: -0x0001, models64: 0x13ae000013b0},
			deviceTuple{type64: 0x24700000251, brand64: 0xe8280000e82d, matchRI: 0x0f7f, match64: 0x00000000, modelSI: 0x13b0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xe8320000e837, matchRI: 0x0f80, match64: 0x00000000, modelSI: -0x0001, models64: 0x13b1000013b4},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0xe8410000e847, matchRI: 0x0f84, match64: 0x00000000, modelSI: 0x13b4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xe8470000e84c, matchRI: 0x0f85, match64: 0x00000000, modelSI: -0x0001, models64: 0x13b5000013cc},
			deviceTuple{type64: 0x24700000251, brand64: 0xe8ea0000e8ed, matchRI: 0x0f9d, match64: 0x00000000, modelSI: -0x0001, models64: 0x13cc000013cd},
			deviceTuple{type64: 0x24700000251, brand64: 0xe8fa0000e8fe, matchRI: 0x0f9f, match64: 0x00000000, modelSI: -0x0001, models64: 0x13cd000013d5},
			deviceTuple{type64: 0x24700000251, brand64: 0xe95c0000e961, matchRI: -0x0001, match64: 0xe95c0000e961, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xe9610000e964, matchRI: 0x0fa6, match64: 0x00000000, modelSI: -0x0001, models64: 0x13d5000013d6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xe9640000e96b, matchRI: 0x0fa8, match64: 0x00000000, modelSI: 0x13d6, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xe96f0000e975, matchRI: 0x0fa9, match64: 0x00000000, modelSI: 0x13d7, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xe97d0000e98c, matchRI: -0x0001, match64: 0xe98c0000e995, modelSI: -0x0001, models64: 0x13d8000013d9},
			deviceTuple{type64: 0x24700000251, brand64: 0xe9a10000e9a6, matchRI: 0x0faa, match64: 0x00000000, modelSI: -0x0001, models64: 0x13d9000013e1},
			deviceTuple{type64: 0x24700000251, brand64: 0xea010000ea07, matchRI: -0x0001, match64: 0xea070000ea18, modelSI: -0x0001, models64: 0x13e1000013e2},
			deviceTuple{type64: 0x24700000251, brand64: 0xea290000ea30, matchRI: 0x0faf, match64: 0x00000000, modelSI: -0x0001, models64: 0x13e2000013ec},
			deviceTuple{type64: 0x24300000245, brand64: 0xeaa90000eaae, matchRI: 0x0fb2, match64: 0x00000000, modelSI: 0x13ec, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0xeaae0000eab2, matchRI: 0x0fb3, match64: 0x00000000, modelSI: -0x0001, models64: 0x13ed000013f1},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xeacc0000ead2, matchRI: 0x0fb8, match64: 0x00000000, modelSI: -0x0001, models64: 0x13f1000013f4},
			deviceTuple{type64: 0x24700000251, brand64: 0xeaed0000eaf5, matchRI: 0x0fba, match64: 0x00000000, modelSI: -0x0001, models64: 0x13f4000013f6},
			deviceTuple{type64: 0x24700000251, brand64: 0xeafd0000eb06, matchRI: 0x0fbd, match64: 0x00000000, modelSI: 0x13f6, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xeb060000eb0a, matchRI: 0x0fbe, match64: 0x00000000, modelSI: -0x0001, models64: 0x13f7000013f9},
			deviceTuple{type64: 0x24700000251, brand64: 0xeb0a0000eb0e, matchRI: 0x0fc1, match64: 0x00000000, modelSI: -0x0001, models64: 0x13f9000013fb},
			deviceTuple{type64: 0x24700000251, brand64: 0xeb0e0000eb12, matchRI: 0x0fc4, match64: 0x00000000, modelSI: -0x0001, models64: 0x13fb000013fc},
			deviceTuple{type64: 0x24700000251, brand64: 0xeb150000eb1a, matchRI: 0x0fc6, match64: 0x00000000, modelSI: -0x0001, models64: 0x13fc00001402},
			deviceTuple{type64: 0x24700000251, brand64: 0xeb650000eb6c, matchRI: 0x0fc9, match64: 0x00000000, modelSI: 0x1402, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xeb6c0000eb72, matchRI: -0x0001, match64: 0xeb720000eb79, modelSI: -0x0001, models64: 0x140300001404},
			deviceTuple{type64: 0x24700000251, brand64: 0xeb820000eb85, matchRI: 0x0fca, match64: 0x00000000, modelSI: 0x1404, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xeb850000eb89, matchRI: 0x0fcb, match64: 0x00000000, modelSI: 0x1405, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xeb890000eb8f, matchRI: 0x0fcc, match64: 0x00000000, modelSI: 0x1406, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xeb9a0000eba0, matchRI: 0x0fcd, match64: 0x00000000, modelSI: -0x0001, models64: 0x140700001417},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xec930000ec98, matchRI: 0x0fd5, match64: 0x00000000, modelSI: -0x0001, models64: 0x14170000141e},
			deviceTuple{type64: 0x24700000251, brand64: 0xecd50000ecdb, matchRI: 0x0fdb, match64: 0x00000000, modelSI: 0x141e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xecdb0000ece2, matchRI: 0x0fdc, match64: 0x00000000, modelSI: -0x0001, models64: 0x141f0000144e},
			deviceTuple{type64: 0x24700000251, brand64: 0xef5d0000ef61, matchRI: 0x0fef, match64: 0x00000000, modelSI: -0x0001, models64: 0x144e00001453},
			deviceTuple{type64: 0x24700000251, brand64: 0xef700000ef75, matchRI: 0x0ff5, match64: 0x00000000, modelSI: -0x0001, models64: 0x145300001458},
			deviceTuple{type64: 0x24700000251, brand64: 0xefa60000efac, matchRI: -0x0001, match64: 0xefac0000efb3, modelSI: -0x0001, models64: 0x145800001459},
			deviceTuple{type64: 0x24700000251, brand64: 0xefbf0000efd0, matchRI: 0x0ff9, match64: 0x00000000, modelSI: -0x0001, models64: 0x145900001463},
			deviceTuple{type64: 0x24700000251, brand64: 0xf04f0000f054, matchRI: 0x0ffe, match64: 0x00000000, modelSI: -0x0001, models64: 0x146300001466},
			deviceTuple{type64: 0x24700000251, brand64: 0xf0690000f070, matchRI: 0x1000, match64: 0x00000000, modelSI: -0x0001, models64: 0x14660000146d},
			deviceTuple{type64: 0x24700000251, brand64: 0xf07f0000f087, matchRI: 0x1008, match64: 0x00000000, modelSI: 0x146d, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xf09a0000f0a0, matchRI: 0x1009, match64: 0x00000000, modelSI: 0x146e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf0a00000f0a5, matchRI: 0x100a, match64: 0x00000000, modelSI: -0x0001, models64: 0x146f00001477},
			deviceTuple{type64: 0x24300000245, brand64: 0xf1140000f11b, matchRI: -0x0001, match64: 0xf1140000f11b, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf11b0000f123, matchRI: -0x0001, match64: 0xf11b0000f123, modelSI: -0x0001, models64: 0x147700001478},
			deviceTuple{type64: 0x24700000251, brand64: 0xf1230000f12a, matchRI: 0x1013, match64: 0x00000000, modelSI: -0x0001, models64: 0x14780000147a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf12a0000f132, matchRI: 0x1016, match64: 0x00000000, modelSI: 0x147a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf1320000f137, matchRI: 0x1017, match64: 0x00000000, modelSI: -0x0001, models64: 0x147b0000147d},
			deviceTuple{type64: 0x24300000245, brand64: 0xf1510000f155, matchRI: 0x1019, match64: 0x00000000, modelSI: -0x0001, models64: 0x147d00001480},
			deviceTuple{type64: 0x24700000251, brand64: 0xf15b0000f161, matchRI: 0x101d, match64: 0x00000000, modelSI: -0x0001, models64: 0x148000001484},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf17a0000f180, matchRI: 0x1021, match64: 0x00000000, modelSI: -0x0001, models64: 0x148400001493},
			deviceTuple{type64: 0x24700000251, brand64: 0xf1ab0000f1b0, matchRI: 0x1031, match64: 0x00000000, modelSI: -0x0001, models64: 0x149300001499},
			deviceTuple{type64: 0x24700000251, brand64: 0xf1e30000f1e8, matchRI: 0x1037, match64: 0x00000000, modelSI: -0x0001, models64: 0x1499000014a1},
			deviceTuple{type64: 0x24700000251, brand64: 0xf2230000f227, matchRI: 0x103c, match64: 0x00000000, modelSI: -0x0001, models64: 0x14a1000014a3},
			deviceTuple{type64: 0x24700000251, brand64: 0xf2270000f22c, matchRI: 0x103f, match64: 0x00000000, modelSI: -0x0001, models64: 0x14a3000014ac},
			deviceTuple{type64: 0x24700000251, brand64: 0xf2840000f28a, matchRI: 0x1043, match64: 0x00000000, modelSI: -0x0001, models64: 0x14ac000014bc},
			deviceTuple{type64: 0x24700000251, brand64: 0xf2eb0000f2f1, matchRI: 0x1054, match64: 0x00000000, modelSI: -0x0001, models64: 0x14bc000014c1},
			deviceTuple{type64: 0x24700000251, brand64: 0xf3020000f309, matchRI: 0x1059, match64: 0x00000000, modelSI: 0x14c1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf3090000f30f, matchRI: 0x105a, match64: 0x00000000, modelSI: 0x14c2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf31a0000f320, matchRI: 0x105b, match64: 0x00000000, modelSI: 0x14c3, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf3200000f326, matchRI: 0x105c, match64: 0x00000000, modelSI: 0x14c4, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xf3260000f32b, matchRI: 0x105d, match64: 0x00000000, modelSI: 0x14c5, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf3310000f33d, matchRI: 0x105e, match64: 0x00000000, modelSI: -0x0001, models64: 0x14c6000014e2},
			deviceTuple{type64: 0x24700000251, brand64: 0xf45c0000f462, matchRI: 0x1078, match64: 0x00000000, modelSI: 0x14e2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf4620000f466, matchRI: 0x1079, match64: 0x00000000, modelSI: 0x14e3, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf4660000f46b, matchRI: 0x107a, match64: 0x00000000, modelSI: -0x0001, models64: 0x14e4000014e6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf46b0000f470, matchRI: 0x107d, match64: 0x00000000, modelSI: -0x0001, models64: 0x14e6000014e9},
			deviceTuple{type64: 0x24700000251, brand64: 0xf4810000f488, matchRI: 0x1081, match64: 0x00000000, modelSI: -0x0001, models64: 0x14e90000153b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf7ae0000f7b4, matchRI: 0x10cb, match64: 0x00000000, modelSI: 0x153b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf7b40000f7b8, matchRI: 0x10cc, match64: 0x00000000, modelSI: -0x0001, models64: 0x153c00001543},
			deviceTuple{type64: 0x24700000251, brand64: 0xf8100000f815, matchRI: 0x10ce, match64: 0x00000000, modelSI: -0x0001, models64: 0x154300001545},
			deviceTuple{type64: 0x24700000251, brand64: 0xf82c0000f830, matchRI: 0x10d1, match64: 0x00000000, modelSI: -0x0001, models64: 0x154500001546},
			deviceTuple{type64: 0x38400000391, brand64: 0xf8300000f833, matchRI: 0x10d3, match64: 0x00000000, modelSI: 0x1546, models64: 0x00000000},
			deviceTuple{type64: 0x285a00002862, brand64: 0xf8330000f838, matchRI: 0x10d4, match64: 0x00000000, modelSI: -0x0001, models64: 0x154700001549},
			deviceTuple{type64: 0x24700000251, brand64: 0xf8380000f83a, matchRI: 0x10d7, match64: 0x00000000, modelSI: -0x0001, models64: 0x154900001691},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1041b00010421, matchRI: 0x11bc, match64: 0x00000000, modelSI: 0x1691, models64: 0x00000000},
			deviceTuple{type64: 0x285a00002862, brand64: 0x1042100010427, matchRI: 0x11bd, match64: 0x00000000, modelSI: 0x1692, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x104270001042c, matchRI: -0x0001, match64: 0x1042c00010435, modelSI: -0x0001, models64: 0x169300001694},
			deviceTuple{type64: 0x24700000251, brand64: 0x1044900010452, matchRI: 0x11be, match64: 0x00000000, modelSI: -0x0001, models64: 0x1694000016a9},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1048e00010490, matchRI: 0x11d3, match64: 0x00000000, modelSI: 0x16a9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1049000010493, matchRI: 0x11d4, match64: 0x00000000, modelSI: -0x0001, models64: 0x16aa000016cb},
			deviceTuple{type64: 0x24700000251, brand64: 0x1064b00010655, matchRI: 0x11d8, match64: 0x00000000, modelSI: -0x0001, models64: 0x16cb000016cf},
			deviceTuple{type64: 0x24700000251, brand64: 0x106740001067a, matchRI: 0x11dc, match64: 0x00000000, modelSI: -0x0001, models64: 0x16cf000016d1},
			deviceTuple{type64: 0x24700000251, brand64: 0x1068c00010691, matchRI: 0x11de, match64: 0x00000000, modelSI: 0x16d1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1069100010696, matchRI: 0x11df, match64: 0x00000000, modelSI: -0x0001, models64: 0x16d2000016dc},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1070a0001070e, matchRI: 0x11e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x16dc000016ec},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1080000010805, matchRI: 0x11f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x16ec000016ed},
			deviceTuple{type64: 0x24700000251, brand64: 0x1081400010818, matchRI: 0x11f5, match64: 0x00000000, modelSI: -0x0001, models64: 0x16ed00001742},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x10ab800010abe, matchRI: 0x1239, match64: 0x00000000, modelSI: -0x0001, models64: 0x174200001746},
			deviceTuple{type64: 0x24700000251, brand64: 0x10ae000010ae6, matchRI: 0x123d, match64: 0x00000000, modelSI: 0x1746, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x10ae600010aeb, matchRI: 0x123e, match64: 0x00000000, modelSI: -0x0001, models64: 0x174700001759},
			deviceTuple{type64: 0x24700000251, brand64: 0x10b5f00010b6b, matchRI: 0x124f, match64: 0x00000000, modelSI: -0x0001, models64: 0x175900001767},
			deviceTuple{type64: 0x24700000251, brand64: 0x10c4600010c4c, matchRI: 0x1252, match64: 0x00000000, modelSI: -0x0001, models64: 0x176700001779},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x10d0700010d0e, matchRI: 0x1260, match64: 0x00000000, modelSI: 0x1779, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x10d1800010d1f, matchRI: 0x1261, match64: 0x00000000, modelSI: -0x0001, models64: 0x177a0000177c},
			deviceTuple{type64: 0x24300000245, brand64: 0x10d3b00010d42, matchRI: 0x1264, match64: 0x00000000, modelSI: -0x0001, models64: 0x177c0000177d},
			deviceTuple{type64: 0x24300000245, brand64: 0x10d4200010d46, matchRI: 0x1266, match64: 0x00000000, modelSI: 0x177d, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x10d4600010d4c, matchRI: 0x1267, match64: 0x00000000, modelSI: 0x177e, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x10d4c00010d50, matchRI: 0x1268, match64: 0x00000000, modelSI: 0x177f, models64: 0x00000000},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x10d5600010d5b, matchRI: 0x1269, match64: 0x00000000, modelSI: 0x1780, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x10d5b00010d62, matchRI: -0x0001, match64: 0x10d5b00010d62, modelSI: -0x0001, models64: 0x178100001782},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x10d6200010d67, matchRI: 0x126b, match64: 0x00000000, modelSI: -0x0001, models64: 0x178200001785},
			deviceTuple{type64: 0x24700000251, brand64: 0x10d8900010d8f, matchRI: 0x126d, match64: 0x00000000, modelSI: -0x0001, models64: 0x178500001841},
			deviceTuple{type64: 0x24700000251, brand64: 0x1156e00011574, matchRI: 0x1304, match64: 0x00000000, modelSI: -0x0001, models64: 0x184100001848},
			deviceTuple{type64: 0x24700000251, brand64: 0x115e7000115ee, matchRI: 0x1307, match64: 0x00000000, modelSI: -0x0001, models64: 0x18480000184c},
			deviceTuple{type64: 0x24700000251, brand64: 0x115fa000115ff, matchRI: 0x130b, match64: 0x00000000, modelSI: 0x184c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x116070001160d, matchRI: 0x130c, match64: 0x00000000, modelSI: -0x0001, models64: 0x184d0000185c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1169e000116a6, matchRI: 0x1311, match64: 0x00000000, modelSI: -0x0001, models64: 0x185c00001873},
			deviceTuple{type64: 0x24300000245, brand64: 0x118870001188f, matchRI: 0x1314, match64: 0x00000000, modelSI: 0x1873, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1188f00011897, matchRI: 0x1315, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x118970001189b, matchRI: 0x1316, match64: 0x00000000, modelSI: -0x0001, models64: 0x187400001876},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x118a5000118ab, matchRI: 0x1318, match64: 0x00000000, modelSI: -0x0001, models64: 0x187600001877},
			deviceTuple{type64: 0x24700000251, brand64: 0x118c2000118c9, matchRI: 0x1319, match64: 0x00000000, modelSI: -0x0001, models64: 0x187700001879},
			deviceTuple{type64: 0x24700000251, brand64: 0x118c9000118cf, matchRI: 0x131c, match64: 0x00000000, modelSI: 0x1879, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x118d4000118da, matchRI: 0x131d, match64: 0x00000000, modelSI: -0x0001, models64: 0x187a0000187c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x118da000118df, matchRI: 0x1320, match64: 0x00000000, modelSI: 0x187c, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x118e8000118ed, matchRI: 0x1321, match64: 0x00000000, modelSI: -0x0001, models64: 0x187d0000187e},
			deviceTuple{type64: 0x24700000251, brand64: 0x118f6000118fb, matchRI: 0x1322, match64: 0x00000000, modelSI: -0x0001, models64: 0x187e00001884},
			deviceTuple{type64: 0x24700000251, brand64: 0x1190c0001191c, matchRI: 0x1329, match64: 0x00000000, modelSI: -0x0001, models64: 0x188400001888},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1195100011958, matchRI: 0x132b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1888000018be},
			deviceTuple{type64: 0x24300000245, brand64: 0x11bb300011bb8, matchRI: 0x1350, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x11bb800011bbd, matchRI: 0x1351, match64: 0x00000000, modelSI: 0x18be, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x11bbd00011bc4, matchRI: 0x1352, match64: 0x00000000, modelSI: 0x18bf, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x11bc400011bcb, matchRI: 0x1353, match64: 0x00000000, modelSI: 0x18c0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x11bcb00011bd0, matchRI: 0x1354, match64: 0x00000000, modelSI: -0x0001, models64: 0x18c1000018c5},
			deviceTuple{type64: 0x24700000251, brand64: 0x11be100011be5, matchRI: 0x1359, match64: 0x00000000, modelSI: -0x0001, models64: 0x18c5000018c7},
			deviceTuple{type64: 0x24300000245, brand64: 0x11be500011bea, matchRI: 0x135c, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x11bea00011bf0, matchRI: 0x135d, match64: 0x00000000, modelSI: 0x18c7, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x11bf000011bf7, matchRI: 0x135e, match64: 0x00000000, modelSI: -0x0001, models64: 0x18c8000018cc},
			deviceTuple{type64: 0x24700000251, brand64: 0x11c1d00011c23, matchRI: 0x1361, match64: 0x00000000, modelSI: -0x0001, models64: 0x18cc000018d6},
			deviceTuple{type64: 0x24700000251, brand64: 0x11c8000011c86, matchRI: 0x1367, match64: 0x00000000, modelSI: -0x0001, models64: 0x18d6000018d9},
			deviceTuple{type64: 0x24700000251, brand64: 0x11c9c00011ca5, matchRI: 0x136a, match64: 0x00000000, modelSI: -0x0001, models64: 0x18d9000018db},
			deviceTuple{type64: 0x24700000251, brand64: 0x11cbf00011cc4, matchRI: 0x136b, match64: 0x00000000, modelSI: -0x0001, models64: 0x18db000018f4},
			deviceTuple{type64: 0x24300000245, brand64: 0x11dde00011de1, matchRI: 0x136f, match64: 0x00000000, modelSI: 0x18f4, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x11de100011de6, matchRI: 0x1370, match64: 0x00000000, modelSI: 0x18f5, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x11de600011deb, matchRI: 0x1371, match64: 0x00000000, modelSI: -0x0001, models64: 0x18f6000018fa},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x11e0500011e09, matchRI: 0x1375, match64: 0x00000000, modelSI: 0x18fa, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x11e0900011e0c, matchRI: 0x1376, match64: 0x00000000, modelSI: 0x18fb, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x11e0c00011e0f, matchRI: 0x1377, match64: 0x00000000, modelSI: 0x18fc, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x11e0f00011e13, matchRI: 0x1378, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x11e1300011e1c, matchRI: 0x1379, match64: 0x00000000, modelSI: -0x0001, models64: 0x18fd00001902},
			deviceTuple{type64: 0x24300000245, brand64: 0x11e3900011e3d, matchRI: 0x137d, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x11e3d00011e41, matchRI: 0x137e, match64: 0x00000000, modelSI: -0x0001, models64: 0x190200001904},
			deviceTuple{type64: 0x24300000245, brand64: 0x11e4100011e44, matchRI: 0x1381, match64: 0x00000000, modelSI: 0x1904, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x11e4400011e47, matchRI: 0x1382, match64: 0x00000000, modelSI: 0x1905, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x11e4700011e4b, matchRI: 0x1383, match64: 0x00000000, modelSI: -0x0001, models64: 0x190600001908},
			deviceTuple{type64: 0x24700000251, brand64: 0x11e5900011e5f, matchRI: 0x1386, match64: 0x00000000, modelSI: 0x1908, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x11e5f00011e63, matchRI: 0x1387, match64: 0x00000000, modelSI: -0x0001, models64: 0x19090000190b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x11e6300011e67, matchRI: 0x138a, match64: 0x00000000, modelSI: -0x0001, models64: 0x190b0000190c},
			deviceTuple{type64: 0x24700000251, brand64: 0x11e6f00011e74, matchRI: 0x138c, match64: 0x00000000, modelSI: -0x0001, models64: 0x190c0000190e},
			deviceTuple{type64: 0x24700000251, brand64: 0x11e7400011e77, matchRI: 0x138f, match64: 0x00000000, modelSI: -0x0001, models64: 0x190e0000194a},
			deviceTuple{type64: 0x24300000245, brand64: 0x120c8000120cb, matchRI: 0x13cc, match64: 0x00000000, modelSI: 0x194a, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x120cb000120d2, matchRI: 0x13cd, match64: 0x00000000, modelSI: 0x194b, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x120d2000120d5, matchRI: 0x13ce, match64: 0x00000000, modelSI: -0x0001, models64: 0x194c0000194f},
			deviceTuple{type64: 0x24300000245, brand64: 0x120dd000120e2, matchRI: 0x13d1, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x120e2000120e5, matchRI: 0x13d2, match64: 0x00000000, modelSI: -0x0001, models64: 0x194f00001961},
			deviceTuple{type64: 0x24700000251, brand64: 0x121be000121c1, matchRI: 0x13e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x196100001967},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1220b00012210, matchRI: -0x0001, match64: 0x1221000012217, modelSI: 0x1967, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1222000012226, matchRI: 0x13e5, match64: 0x00000000, modelSI: 0x1968, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1223000012234, matchRI: 0x13e6, match64: 0x00000000, modelSI: -0x0001, models64: 0x19690000196b},
			deviceTuple{type64: 0x24300000245, brand64: 0x122470001224f, matchRI: 0x13e8, match64: 0x00000000, modelSI: -0x0001, models64: 0x196b0000196e},
			deviceTuple{type64: 0x24700000251, brand64: 0x1227200012278, matchRI: 0x13ea, match64: 0x00000000, modelSI: -0x0001, models64: 0x196e00001970},
			deviceTuple{type64: 0x24700000251, brand64: 0x1228b00012293, matchRI: 0x13ed, match64: 0x00000000, modelSI: -0x0001, models64: 0x19700000197f},
			deviceTuple{type64: 0x24700000251, brand64: 0x122fc00012302, matchRI: 0x13fb, match64: 0x00000000, modelSI: 0x197f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1230200012307, matchRI: 0x13fc, match64: 0x00000000, modelSI: 0x1980, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x123070001230b, matchRI: 0x13fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x198100001983},
			deviceTuple{type64: 0x24700000251, brand64: 0x1230b0001231b, matchRI: 0x1400, match64: 0x00000000, modelSI: -0x0001, models64: 0x19830000198d},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x1239c000123a2, matchRI: 0x1403, match64: 0x00000000, modelSI: 0x198d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x123a2000123a6, matchRI: 0x1404, match64: 0x00000000, modelSI: 0x198e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x123a6000123ad, matchRI: 0x1405, match64: 0x00000000, modelSI: -0x0001, models64: 0x198f00001991},
			deviceTuple{type64: 0x24700000251, brand64: 0x123b2000123b8, matchRI: 0x1408, match64: 0x00000000, modelSI: 0x1991, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x123b8000123be, matchRI: 0x1409, match64: 0x00000000, modelSI: -0x0001, models64: 0x199200001994},
			deviceTuple{type64: 0x24700000251, brand64: 0x123c3000123ca, matchRI: 0x140c, match64: 0x00000000, modelSI: -0x0001, models64: 0x19940000199f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1242000012428, matchRI: 0x1417, match64: 0x00000000, modelSI: 0x199f, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1243600012440, matchRI: 0x1418, match64: 0x00000000, modelSI: -0x0001, models64: 0x19a0000019a2},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x124400001244b, matchRI: 0x141b, match64: 0x00000000, modelSI: 0x19a2, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1244b00012451, matchRI: 0x141c, match64: 0x00000000, modelSI: -0x0001, models64: 0x19a3000019a6},
			deviceTuple{type64: 0x24300000245, brand64: 0x1246d00012475, matchRI: 0x141f, match64: 0x00000000, modelSI: 0x19a6, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x124750001247b, matchRI: 0x1420, match64: 0x00000000, modelSI: -0x0001, models64: 0x19a7000019ac},
			deviceTuple{type64: 0x24700000251, brand64: 0x1249a000124a1, matchRI: 0x1425, match64: 0x00000000, modelSI: 0x19ac, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x124a1000124a8, matchRI: 0x1426, match64: 0x00000000, modelSI: -0x0001, models64: 0x19ad000019b1},
			deviceTuple{type64: 0x24700000251, brand64: 0x124b7000124be, matchRI: 0x142a, match64: 0x00000000, modelSI: -0x0001, models64: 0x19b1000019b4},
			deviceTuple{type64: 0x24300000245, brand64: 0x124c3000124ca, matchRI: 0x142e, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x124ca000124d1, matchRI: 0x142f, match64: 0x00000000, modelSI: -0x0001, models64: 0x19b4000019c7},
			deviceTuple{type64: 0x24700000251, brand64: 0x125d1000125d5, matchRI: 0x143c, match64: 0x00000000, modelSI: -0x0001, models64: 0x19c7000019ca},
			deviceTuple{type64: 0x24700000251, brand64: 0x125dc000125e6, matchRI: 0x1440, match64: 0x00000000, modelSI: -0x0001, models64: 0x19ca000019cc},
			deviceTuple{type64: 0x24700000251, brand64: 0x125ec000125f4, matchRI: 0x1443, match64: 0x00000000, modelSI: 0x19cc, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x125fc00012601, matchRI: 0x1444, match64: 0x00000000, modelSI: -0x0001, models64: 0x19cd000019d7},
			deviceTuple{type64: 0x24300000245, brand64: 0x126dd000126e3, matchRI: 0x144b, match64: 0x00000000, modelSI: -0x0001, models64: 0x19d7000019e6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x127470001274f, matchRI: 0x145b, match64: 0x00000000, modelSI: -0x0001, models64: 0x19e600001a29},
			deviceTuple{type64: 0x24700000251, brand64: 0x12bd600012bdc, matchRI: 0x149c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a2900001a30},
			deviceTuple{type64: 0x24700000251, brand64: 0x12bed00012bf4, matchRI: 0x14a4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a3000001a38},
			deviceTuple{type64: 0x24300000245, brand64: 0x12c2c00012c35, matchRI: 0x14ab, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a3800001a39},
			deviceTuple{type64: 0x24700000251, brand64: 0x12c4800012c4d, matchRI: 0x14ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a3900001a44},
			deviceTuple{type64: 0x24700000251, brand64: 0x12c5800012c5d, matchRI: 0x14b8, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a4400001a6f},
			deviceTuple{type64: 0x24700000251, brand64: 0x12d1400012d1b, matchRI: 0x14e3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a6f00001a72},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x12d3600012d3b, matchRI: 0x14e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a7200001a76},
			deviceTuple{type64: 0x285a00002862, brand64: 0x12d7100012d75, matchRI: 0x14ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a7600001a7c},
			deviceTuple{type64: 0x24300000245, brand64: 0x12da600012daa, matchRI: -0x0001, match64: 0x12daa00012db4, modelSI: 0x1a7c, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x12db400012db9, matchRI: 0x14ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a7d00001a81},
			deviceTuple{type64: 0x24700000251, brand64: 0x12dda00012de2, matchRI: 0x14f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a8100001ac1},
			deviceTuple{type64: 0x24700000251, brand64: 0x12f00000138, matchRI: 0x1521, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ac100001adf},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x132960001329f, matchRI: 0x1530, match64: 0x00000000, modelSI: -0x0001, models64: 0x1adf00001ae1},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x132ba000132c2, matchRI: 0x1532, match64: 0x00000000, modelSI: 0x1ae1, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x132c2000132c7, matchRI: 0x1533, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ae200001aed},
			deviceTuple{type64: 0x24700000251, brand64: 0x12c2100012c25, matchRI: 0x153f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1aed00001af2},
			deviceTuple{type64: 0x24700000251, brand64: 0x1333e00013343, matchRI: 0x1544, match64: 0x00000000, modelSI: -0x0001, models64: 0x1af200001af7},
			deviceTuple{type64: 0x24700000251, brand64: 0x133690001336c, matchRI: 0x154a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1af700001afa},
			deviceTuple{type64: 0x24700000251, brand64: 0x133a0000133a5, matchRI: 0x154d, match64: 0x00000000, modelSI: -0x0001, models64: 0x1afa00001b02},
			deviceTuple{type64: 0x24700000251, brand64: 0x133e9000133ee, matchRI: 0x1553, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b0200001b05},
			deviceTuple{type64: 0x24300000245, brand64: 0x1340d0001341d, matchRI: 0x1556, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1341d00013421, matchRI: 0x1557, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b0500001b09},
			deviceTuple{type64: 0x38400000391, brand64: 0x134300001343a, matchRI: 0x155c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b0900001b0c},
			deviceTuple{type64: 0x24700000251, brand64: 0x1343a00013440, matchRI: 0x1560, match64: 0x00000000, modelSI: 0x1b0c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1344000013446, matchRI: 0x1561, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b0d00001b0f},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x134540001345b, matchRI: 0x1563, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b0f00001b11},
			deviceTuple{type64: 0x24700000251, brand64: 0x134730001347b, matchRI: 0x1566, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b1100001b16},
			deviceTuple{type64: 0x24700000251, brand64: 0x134a6000134ad, matchRI: 0x1569, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b1600001b55},
			deviceTuple{type64: 0x24700000251, brand64: 0x1377c00013785, matchRI: 0x1577, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b5500001b72},
			deviceTuple{type64: 0x24700000251, brand64: 0x1393600013944, matchRI: 0x158b, match64: 0x00000000, modelSI: 0x1b72, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1395000013957, matchRI: 0x158c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b7300001b82},
			deviceTuple{type64: 0x24700000251, brand64: 0x13a4500013a4d, matchRI: 0x158e, match64: 0x00000000, modelSI: 0x1b82, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x13a4d00013a51, matchRI: 0x158f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b8300001b84},
			deviceTuple{type64: 0x285a00002862, brand64: 0x13a5100013a57, matchRI: 0x1591, match64: 0x00000000, modelSI: 0x1b84, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x13a6200013a69, matchRI: 0x1592, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b8500001b8b},
			deviceTuple{type64: 0x24700000251, brand64: 0x13aa100013aa6, matchRI: -0x0001, match64: 0x13aa100013aa6, modelSI: -0x0001, models64: 0x1b8b00001b8d},
			deviceTuple{type64: 0x24700000251, brand64: 0x13aa600013aae, matchRI: 0x159a, match64: 0x00000000, modelSI: 0x1b8d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x13ab400013abc, matchRI: 0x159b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b8e00001b8f},
			deviceTuple{type64: 0x24700000251, brand64: 0x13ac800013acd, matchRI: 0x159c, match64: 0x00000000, modelSI: 0x1b8f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x13acd00013ad5, matchRI: 0x159d, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b9000001c68},
			deviceTuple{type64: 0x24700000251, brand64: 0x1451c00014521, matchRI: 0x164b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c6800001c6b},
			deviceTuple{type64: 0x24700000251, brand64: 0x145260001452d, matchRI: 0x164e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c6b00001c6c},
			deviceTuple{type64: 0x24700000251, brand64: 0x1452d00014532, matchRI: 0x1650, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c6c00001c6e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x145450001454a, matchRI: 0x1652, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c6e00001c73},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x1455f00014567, matchRI: 0x1658, match64: 0x00000000, modelSI: 0x1c73, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1456700014571, matchRI: 0x1659, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c7400001c93},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x146830001468e, matchRI: 0x1676, match64: 0x00000000, modelSI: 0x1c93, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1468e00014694, matchRI: 0x1677, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c9400001c97},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x146cf000146d7, matchRI: 0x167a, match64: 0x00000000, modelSI: 0x1c97, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x146d7000146e3, matchRI: 0x167b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c9800001ca6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1475a0001475f, matchRI: 0x1687, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ca600001ca9},
			deviceTuple{type64: 0x24700000251, brand64: 0x1476f00014775, matchRI: -0x0001, match64: 0x147750001477c, modelSI: -0x0001, models64: 0x1ca900001cac},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1479b000147a1, matchRI: 0x168c, match64: 0x00000000, modelSI: 0x1cac, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x147a1000147a7, matchRI: 0x168d, match64: 0x00000000, modelSI: 0x1cad, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x147a7000147ac, matchRI: 0x168e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cae00001cb5},
			deviceTuple{type64: 0x24700000251, brand64: 0x147f6000147fb, matchRI: 0x1692, match64: 0x00000000, modelSI: 0x1cb5, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x147fb00014802, matchRI: 0x1693, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cb600001cb8},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x148080001480d, matchRI: 0x1696, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cb800001cbd},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x148380001483d, matchRI: 0x169b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cbd00001cbf},
			deviceTuple{type64: 0x24700000251, brand64: 0x1485b0001485e, matchRI: 0x169c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cbf00001ccc},
			deviceTuple{type64: 0x24300000245, brand64: 0x148fa000148fe, matchRI: 0x16aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ccc00001ccd},
			deviceTuple{type64: 0x24300000245, brand64: 0x1490300014909, matchRI: 0x16ac, match64: 0x00000000, modelSI: 0x1ccd, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x149090001490e, matchRI: 0x16ad, match64: 0x00000000, modelSI: 0x1cce, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1490e00014914, matchRI: 0x16ae, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ccf00001cd2},
			deviceTuple{type64: 0x24300000245, brand64: 0x149360001493b, matchRI: 0x16b0, match64: 0x00000000, modelSI: 0x1cd2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1493b0001493f, matchRI: 0x16b1, match64: 0x00000000, modelSI: 0x1cd3, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1493f00014948, matchRI: 0x16b2, match64: 0x00000000, modelSI: 0x1cd4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x149480001494b, matchRI: 0x16b3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cd500001cdc},
			deviceTuple{type64: 0x24300000245, brand64: 0x1498d00014992, matchRI: 0x16b9, match64: 0x00000000, modelSI: 0x1cdc, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1499200014999, matchRI: -0x0001, match64: 0x1499200014999, modelSI: -0x0001, models64: 0x1cdd00001cdf},
			deviceTuple{type64: 0x24700000251, brand64: 0x149b6000149c0, matchRI: 0x16ba, match64: 0x00000000, modelSI: 0x1cdf, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x149c0000149c3, matchRI: 0x16bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ce000001cf4},
			deviceTuple{type64: 0x24700000251, brand64: 0x14a6700014a6c, matchRI: 0x16cb, match64: 0x00000000, modelSI: 0x1cf4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x14a7a00014a7e, matchRI: 0x16cc, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cf500001cfa},
			deviceTuple{type64: 0x24700000251, brand64: 0x14ab200014ab6, matchRI: 0x16d1, match64: 0x00000000, modelSI: 0x1cfa, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x14ab600014abe, matchRI: 0x16d2, match64: 0x00000000, modelSI: 0x1cfb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x14acb00014ad5, matchRI: 0x16d3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cfc00001d0e},
			deviceTuple{type64: 0x24700000251, brand64: 0x14b4c00014b56, matchRI: 0x16d9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d0e00001d26},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x14c4400014c48, matchRI: 0x16dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d2600001d2c},
			deviceTuple{type64: 0x24700000251, brand64: 0x14cc900014cce, matchRI: 0x16e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d2c00001d2d},
			deviceTuple{type64: 0x24700000251, brand64: 0x14cd200014cdd, matchRI: 0x16e2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d2d00001d2f},
			deviceTuple{type64: 0x24300000245, brand64: 0x14ce800014cf0, matchRI: 0x16e5, match64: 0x00000000, modelSI: 0x1d2f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x14cf000014cf7, matchRI: 0x16e6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d3000001d35},
			deviceTuple{type64: 0x24700000251, brand64: 0x14d5000014d57, matchRI: 0x16e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d3500001d36},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x14d6800014d70, matchRI: 0x16e8, match64: 0x00000000, modelSI: 0x1d36, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x14d7000014d77, matchRI: 0x16e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d3700001d3c},
			deviceTuple{type64: 0x24700000251, brand64: 0x14d9100014d96, matchRI: 0x16ef, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d3c00001d52},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x14eb300014eb9, matchRI: 0x1705, match64: 0x00000000, modelSI: 0x1d52, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x14eb900014ec2, matchRI: 0x1706, match64: 0x00000000, modelSI: 0x1d53, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x14ec200014ec8, matchRI: 0x1707, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d5400001d58},
			deviceTuple{type64: 0x24300000245, brand64: 0x136990001369c, matchRI: 0x170b, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x14edc00014ee2, matchRI: 0x170c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d5800001d5b},
			deviceTuple{type64: 0x24700000251, brand64: 0x14ee400014ee9, matchRI: 0x1710, match64: 0x00000000, modelSI: 0x1d5b, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x14ee900014ef0, matchRI: 0x1711, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d5c00001d5f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x14f1800014f21, matchRI: 0x1714, match64: 0x00000000, modelSI: 0x1d5f, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x14f2700014f2d, matchRI: -0x0001, match64: 0x14f2d00014f33, modelSI: -0x0001, models64: 0x1d6000001d62},
			deviceTuple{type64: 0x24300000245, brand64: 0x14f3a00014f41, matchRI: -0x0001, match64: 0x14f4100014f47, modelSI: -0x0001, models64: 0x1d6200001d63},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x14f5200014f58, matchRI: 0x1717, match64: 0x00000000, modelSI: 0x1d63, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x14f6000014f68, matchRI: -0x0001, match64: 0x14f6800014f6c, modelSI: -0x0001, models64: 0x1d6400001d65},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x14f6c00014f72, matchRI: 0x1719, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d6500001d66},
			deviceTuple{type64: 0x285a00002862, brand64: 0x14f7200014f7d, matchRI: 0x171b, match64: 0x00000000, modelSI: 0x1d66, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x14f7d00014f87, matchRI: 0x171c, match64: 0x00000000, modelSI: 0x1d67, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x14f8700014f8c, matchRI: 0x171d, match64: 0x00000000, modelSI: 0x1d68, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x14f8c00014f92, matchRI: 0x171e, match64: 0x00000000, modelSI: 0x1d69, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x14f9200014f99, matchRI: 0x171f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d6a00001d6d},
			deviceTuple{type64: 0x24700000251, brand64: 0x14fd800014fde, matchRI: 0x1720, match64: 0x00000000, modelSI: 0x1d6d, models64: 0x00000000},
			deviceTuple{type64: 0x8e00000099, brand64: 0x14fde00014fe4, matchRI: 0x1721, match64: 0x00000000, modelSI: 0x1d6e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x14fe400014feb, matchRI: 0x1722, match64: 0x00000000, modelSI: 0x1d6f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x14feb00014fef, matchRI: 0x1723, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d7000001d72},
			deviceTuple{type64: 0x24700000251, brand64: 0x14fef00014ff5, matchRI: 0x1726, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d7200001d74},
			deviceTuple{type64: 0x24300000245, brand64: 0x14ff500015004, matchRI: 0x1729, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d7400001d78},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1502e00015036, matchRI: 0x172b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d7800001d88},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x151240001512b, matchRI: 0x172e, match64: 0x00000000, modelSI: 0x1d88, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1512b00015132, matchRI: 0x172f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d8900001d8a},
			deviceTuple{type64: 0x24700000251, brand64: 0x1513200015137, matchRI: -0x0001, match64: 0x151370001513c, modelSI: -0x0001, models64: 0x1d8a00001d8c},
			deviceTuple{type64: 0x24700000251, brand64: 0x1513c00015141, matchRI: 0x1733, match64: 0x00000000, modelSI: 0x1d8c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1514100015147, matchRI: 0x1734, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d8d00001d91},
			deviceTuple{type64: 0x24700000251, brand64: 0x151470001514c, matchRI: 0x1739, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d9100001de2},
			deviceTuple{type64: 0x24700000251, brand64: 0x1542a0001542e, matchRI: 0x176e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1de200001e17},
			deviceTuple{type64: 0x24700000251, brand64: 0x155ad000155b1, matchRI: 0x17a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e1700001e1e},
			deviceTuple{type64: 0x24300000245, brand64: 0x155bf000155c6, matchRI: -0x0001, match64: 0x155c6000155ce, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x155ce000155d7, matchRI: 0x17ab, match64: 0x00000000, modelSI: 0x1e1e, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x155d7000155e0, matchRI: 0x17ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e1f00001e20},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x155e0000155e9, matchRI: 0x17ae, match64: 0x00000000, modelSI: 0x1e20, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x155f7000155fa, matchRI: 0x17af, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e2100001e27},
			deviceTuple{type64: 0x24700000251, brand64: 0x1561800015625, matchRI: 0x17b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e2700001e2a},
			deviceTuple{type64: 0x24700000251, brand64: 0x1562f00015633, matchRI: 0x17b8, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e2a00001e2c},
			deviceTuple{type64: 0x24300000245, brand64: 0x1563900015640, matchRI: -0x0001, match64: 0x1564000015649, modelSI: -0x0001, models64: 0x1e2c00001e2e},
			deviceTuple{type64: 0x24300000245, brand64: 0x1566400015669, matchRI: 0x17bd, match64: 0x00000000, modelSI: 0x1e2e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x156690001566e, matchRI: 0x17be, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e2f00001e33},
			deviceTuple{type64: 0x24700000251, brand64: 0x156860001568d, matchRI: 0x17c1, match64: 0x00000000, modelSI: 0x1e33, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1568d00015692, matchRI: 0x17c2, match64: 0x00000000, modelSI: 0x1e34, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1569e000156a6, matchRI: 0x17c3, match64: 0x00000000, modelSI: 0x1e35, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x156a6000156ab, matchRI: 0x17c4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e3600001e6f},
			deviceTuple{type64: 0x24700000251, brand64: 0x1596000015964, matchRI: 0x17cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e6f00001e72},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x159680001596e, matchRI: 0x17d3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e7200001e79},
			deviceTuple{type64: 0x24700000251, brand64: 0x159f9000159fb, matchRI: 0x17d7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e7900001e83},
			deviceTuple{type64: 0x24700000251, brand64: 0x15a4800015a4a, matchRI: 0x17e2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8300001e89},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x15a4a00015a4f, matchRI: 0x17e9, match64: 0x00000000, modelSI: 0x1e89, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x15a4f00015a54, matchRI: 0x17ea, match64: 0x00000000, modelSI: 0x1e8a, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x15a5400015a58, matchRI: 0x17eb, match64: 0x00000000, modelSI: 0x1e8b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x15a5800015a5c, matchRI: 0x17ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8c00001e8e},
			deviceTuple{type64: 0x24300000245, brand64: 0x15a6800015a6c, matchRI: 0x17ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8e00001e8f},
			deviceTuple{type64: 0x24700000251, brand64: 0x15a6c00015a70, matchRI: 0x17f0, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8f00001e91},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x15a7800015a7b, matchRI: 0x17f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e9100001e94},
			deviceTuple{type64: 0x24300000245, brand64: 0x15a9100015a95, matchRI: 0x17f5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e9400001e97},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x15aab00015ab4, matchRI: 0x17f8, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e9700001eab},
			deviceTuple{type64: 0x24700000251, brand64: 0x15bed00015bf1, matchRI: 0x17fe, match64: 0x00000000, modelSI: -0x0001, models64: 0x1eab00001fc6},
			deviceTuple{type64: 0x24700000251, brand64: 0x164450001644a, matchRI: 0x18de, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fc600001fcf},
			deviceTuple{type64: 0x24700000251, brand64: 0x1649a0001649e, matchRI: 0x18e2, match64: 0x00000000, modelSI: 0x1fcf, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1649e000164a3, matchRI: -0x0001, match64: 0x1649e000164a3, modelSI: -0x0001, models64: 0x1fd000001fd4},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x164c8000164ce, matchRI: 0x18e5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fd400001fd5},
			deviceTuple{type64: 0x24700000251, brand64: 0x164d7000164dc, matchRI: 0x18e7, match64: 0x00000000, modelSI: 0x1fd5, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x164dc000164e0, matchRI: 0x18e8, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fd600001fd8},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x164e7000164ed, matchRI: 0x18eb, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fd800001fda},
			deviceTuple{type64: 0x24700000251, brand64: 0x164ed000164f3, matchRI: 0x18ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fda00001fdc},
			deviceTuple{type64: 0x24700000251, brand64: 0x164fd00016501, matchRI: 0x18f0, match64: 0x00000000, modelSI: 0x1fdc, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1650100016504, matchRI: 0x18f1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fdd00001fee},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1656000016567, matchRI: 0x1903, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fee00001ff0},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x165870001658b, matchRI: 0x1906, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ff00000202d},
			deviceTuple{type64: 0x24300000245, brand64: 0x16a4700016a49, matchRI: 0x191b, match64: 0x00000000, modelSI: 0x202d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x16a5200016a58, matchRI: 0x191c, match64: 0x00000000, modelSI: -0x0001, models64: 0x202e00002033},
			deviceTuple{type64: 0x24700000251, brand64: 0x16a7000016a75, matchRI: 0x1922, match64: 0x00000000, modelSI: -0x0001, models64: 0x203300002035},
			deviceTuple{type64: 0x24700000251, brand64: 0x16a8700016a8b, matchRI: 0x1924, match64: 0x00000000, modelSI: -0x0001, models64: 0x203500002037},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x16a9b00016aa0, matchRI: 0x1927, match64: 0x00000000, modelSI: 0x2037, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x16aa000016aa5, matchRI: 0x1928, match64: 0x00000000, modelSI: 0x2038, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x16aad00016ab4, matchRI: 0x1929, match64: 0x00000000, modelSI: -0x0001, models64: 0x20390000203a},
			deviceTuple{type64: 0x24700000251, brand64: 0x16ab800016abc, matchRI: 0x192b, match64: 0x00000000, modelSI: -0x0001, models64: 0x203a00002051},
			deviceTuple{type64: 0x24700000251, brand64: 0x16c1600016c1e, matchRI: 0x193d, match64: 0x00000000, modelSI: -0x0001, models64: 0x205100002054},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x16c4f00016c56, matchRI: 0x1940, match64: 0x00000000, modelSI: 0x2054, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x16c5600016c5d, matchRI: 0x1941, match64: 0x00000000, modelSI: -0x0001, models64: 0x20550000209a},
			deviceTuple{type64: 0x24700000251, brand64: 0x16e2200016e27, matchRI: 0x1985, match64: 0x00000000, modelSI: -0x0001, models64: 0x209a0000209d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x16e3500016e39, matchRI: 0x1989, match64: 0x00000000, modelSI: -0x0001, models64: 0x209d000020a0},
			deviceTuple{type64: 0x24700000251, brand64: 0x16e4500016e4a, matchRI: 0x198d, match64: 0x00000000, modelSI: -0x0001, models64: 0x20a0000020a2},
			deviceTuple{type64: 0x24700000251, brand64: 0x16e4a00016e4f, matchRI: -0x0001, match64: 0x16e4f00016e57, modelSI: 0x20a2, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x16e5700016e5e, matchRI: 0x1990, match64: 0x00000000, modelSI: 0x20a3, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x16e5e00016e68, matchRI: 0x1991, match64: 0x00000000, modelSI: -0x0001, models64: 0x20a4000020a8},
			deviceTuple{type64: 0x24300000245, brand64: 0x16ecf00016ed6, matchRI: 0x1992, match64: 0x00000000, modelSI: -0x0001, models64: 0x20a8000020b0},
			deviceTuple{type64: 0x24700000251, brand64: 0x16f4100016f47, matchRI: 0x1998, match64: 0x00000000, modelSI: -0x0001, models64: 0x20b0000020b3},
			deviceTuple{type64: 0x24700000251, brand64: 0x16f7500016f7b, matchRI: 0x199a, match64: 0x00000000, modelSI: -0x0001, models64: 0x20b3000020b7},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x16f8300016f89, matchRI: 0x199f, match64: 0x00000000, modelSI: -0x0001, models64: 0x20b7000020b8},
			deviceTuple{type64: 0x24700000251, brand64: 0x16f9800016f9e, matchRI: 0x19a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x20b8000020c9},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x170720001707b, matchRI: 0x19a8, match64: 0x00000000, modelSI: 0x20c9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1707b00017080, matchRI: 0x19a9, match64: 0x00000000, modelSI: -0x0001, models64: 0x20ca000020d2},
			deviceTuple{type64: 0x24300000245, brand64: 0x170ce000170d4, matchRI: 0x19aa, match64: 0x00000000, modelSI: 0x20d2, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x170d4000170dc, matchRI: 0x19ab, match64: 0x00000000, modelSI: -0x0001, models64: 0x20d3000020d4},
			deviceTuple{type64: 0x24700000251, brand64: 0x170dc000170e5, matchRI: 0x19ad, match64: 0x00000000, modelSI: 0x20d4, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x133390001333e, matchRI: 0x19ae, match64: 0x00000000, modelSI: -0x0001, models64: 0x20d5000020d7},
			deviceTuple{type64: 0x24700000251, brand64: 0x170ee000170f2, matchRI: 0x19b1, match64: 0x00000000, modelSI: -0x0001, models64: 0x20d7000020dc},
			deviceTuple{type64: 0x24700000251, brand64: 0x170fa00017101, matchRI: 0x19b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x20dc000020eb},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1715200017159, matchRI: 0x19c3, match64: 0x00000000, modelSI: -0x0001, models64: 0x20eb000020f4},
			deviceTuple{type64: 0x24700000251, brand64: 0x171c6000171ca, matchRI: -0x0001, match64: 0x171ca000171d2, modelSI: 0x20f4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x171d2000171d6, matchRI: 0x19c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x20f5000020f7},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x171e1000171e8, matchRI: 0x19cb, match64: 0x00000000, modelSI: -0x0001, models64: 0x20f700002105},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x172560001725a, matchRI: 0x19d7, match64: 0x00000000, modelSI: 0x2105, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1726000017267, matchRI: 0x19d8, match64: 0x00000000, modelSI: 0x2106, models64: 0x00000000},
			deviceTuple{type64: 0xcad00000cb4, brand64: 0x172670001726b, matchRI: 0x19d9, match64: 0x00000000, modelSI: -0x0001, models64: 0x21070000210a},
			deviceTuple{type64: 0x24700000251, brand64: 0x1728a00017291, matchRI: 0x19dd, match64: 0x00000000, modelSI: 0x210a, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1729100017297, matchRI: 0x19de, match64: 0x00000000, modelSI: -0x0001, models64: 0x210b0000210c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1729f000172a7, matchRI: -0x0001, match64: 0x172a7000172b4, modelSI: 0x210c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x172c1000172c6, matchRI: 0x19e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x210d00002115},
			deviceTuple{type64: 0x24700000251, brand64: 0x173370001733a, matchRI: 0x19e3, match64: 0x00000000, modelSI: -0x0001, models64: 0x211500002117},
			deviceTuple{type64: 0x24700000251, brand64: 0x1734e0001735b, matchRI: 0x19e5, match64: 0x00000000, modelSI: -0x0001, models64: 0x211700002119},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1735b0001735f, matchRI: 0x19e8, match64: 0x00000000, modelSI: -0x0001, models64: 0x21190000211a},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x1736500017369, matchRI: 0x19ea, match64: 0x00000000, modelSI: 0x211a, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1736900017370, matchRI: 0x19eb, match64: 0x00000000, modelSI: -0x0001, models64: 0x211b0000211f},
			deviceTuple{type64: 0x24700000251, brand64: 0x173a4000173aa, matchRI: 0x19ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x211f00002120},
			deviceTuple{type64: 0x24700000251, brand64: 0x173b0000173b4, matchRI: 0x19ef, match64: 0x00000000, modelSI: -0x0001, models64: 0x21200000214e},
			deviceTuple{type64: 0x24700000251, brand64: 0x174b6000174bc, matchRI: 0x1a18, match64: 0x00000000, modelSI: -0x0001, models64: 0x214e00002150},
			deviceTuple{type64: 0x24700000251, brand64: 0x174c5000174c9, matchRI: 0x1a1b, match64: 0x00000000, modelSI: 0x2150, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x174c9000174ce, matchRI: 0x1a1c, match64: 0x00000000, modelSI: 0x2151, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x174ce000174d5, matchRI: 0x1a1d, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x174d5000174da, matchRI: 0x1a1e, match64: 0x00000000, modelSI: -0x0001, models64: 0x215200002155},
			deviceTuple{type64: 0x24300000245, brand64: 0x174da000174df, matchRI: -0x0001, match64: 0x174df000174eb, modelSI: 0x2155, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x174f10001750a, matchRI: -0x0001, match64: 0x1750a00017519, modelSI: 0x2156, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1751900017525, matchRI: 0x1a22, match64: 0x00000000, modelSI: -0x0001, models64: 0x21570000215c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x175780001757e, matchRI: -0x0001, match64: 0x1757e00017588, modelSI: 0x215c, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x175940001759b, matchRI: -0x0001, match64: 0x1759b000175a5, modelSI: 0x215d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x175a5000175a9, matchRI: 0x1a24, match64: 0x00000000, modelSI: -0x0001, models64: 0x215e00002164},
			deviceTuple{type64: 0x24700000251, brand64: 0x175c4000175cb, matchRI: -0x0001, match64: 0x175cb000175d2, modelSI: -0x0001, models64: 0x216400002165},
			deviceTuple{type64: 0x24700000251, brand64: 0x175d2000175db, matchRI: 0x1a29, match64: 0x00000000, modelSI: -0x0001, models64: 0x21650000217e},
			deviceTuple{type64: 0x24300000245, brand64: 0x1768f00017696, matchRI: -0x0001, match64: 0x1768f00017696, modelSI: -0x0001, models64: 0x217e0000217f},
			deviceTuple{type64: 0x24700000251, brand64: 0x176960001769a, matchRI: 0x1a41, match64: 0x00000000, modelSI: 0x217f, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1769a000176a1, matchRI: 0x1a42, match64: 0x00000000, modelSI: 0x2180, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x176a1000176aa, matchRI: 0x1a43, match64: 0x00000000, modelSI: 0x2181, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x176aa000176b1, matchRI: 0x1a44, match64: 0x00000000, modelSI: -0x0001, models64: 0x21820000218d},
			deviceTuple{type64: 0x24700000251, brand64: 0x176ed000176fa, matchRI: 0x1a4c, match64: 0x00000000, modelSI: 0x218d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x176fa00017708, matchRI: 0x1a4d, match64: 0x00000000, modelSI: -0x0001, models64: 0x218e00002190},
			deviceTuple{type64: 0x24700000251, brand64: 0x177160001771c, matchRI: 0x1a4f, match64: 0x00000000, modelSI: -0x0001, models64: 0x219000002192},
			deviceTuple{type64: 0x24300000245, brand64: 0x177440001774a, matchRI: 0x1a50, match64: 0x00000000, modelSI: -0x0001, models64: 0x219200002199},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1776e00017773, matchRI: 0x1a56, match64: 0x00000000, modelSI: -0x0001, models64: 0x21990000219b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x17797000177a0, matchRI: 0x1a57, match64: 0x00000000, modelSI: -0x0001, models64: 0x219b000021a1},
			deviceTuple{type64: 0x24300000245, brand64: 0x177cd000177d3, matchRI: -0x0001, match64: 0x177cd000177d3, modelSI: -0x0001, models64: 0x21a1000021a4},
			deviceTuple{type64: 0x24700000251, brand64: 0x1781000017817, matchRI: 0x1a5e, match64: 0x00000000, modelSI: -0x0001, models64: 0x21a4000021aa},
			deviceTuple{type64: 0x24700000251, brand64: 0x178450001784b, matchRI: 0x1a65, match64: 0x00000000, modelSI: -0x0001, models64: 0x21aa000021b1},
			deviceTuple{type64: 0x24700000251, brand64: 0x178750001787c, matchRI: 0x1a6c, match64: 0x00000000, modelSI: -0x0001, models64: 0x21b1000021c5},
			deviceTuple{type64: 0x24700000251, brand64: 0x178fa00017902, matchRI: 0x1a80, match64: 0x00000000, modelSI: -0x0001, models64: 0x21c5000021ca},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1791500017919, matchRI: 0x1a86, match64: 0x00000000, modelSI: -0x0001, models64: 0x21ca000021cd},
			deviceTuple{type64: 0x285a00002862, brand64: 0x1792200017926, matchRI: 0x1a89, match64: 0x00000000, modelSI: -0x0001, models64: 0x21cd000021cf},
			deviceTuple{type64: 0x24700000251, brand64: 0x1793900017940, matchRI: 0x1a8b, match64: 0x00000000, modelSI: -0x0001, models64: 0x21cf000021d7},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1795e0001796f, matchRI: 0x1a92, match64: 0x00000000, modelSI: 0x21d7, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1796f00017975, matchRI: 0x1a93, match64: 0x00000000, modelSI: 0x21d8, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x179800001798a, matchRI: 0x1a94, match64: 0x00000000, modelSI: 0x21d9, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1798a0001798f, matchRI: 0x1a95, match64: 0x00000000, modelSI: -0x0001, models64: 0x21da000021ee},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x17a2d00017a3d, matchRI: 0x1aa4, match64: 0x00000000, modelSI: -0x0001, models64: 0x21ee000021f0},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x17a4600017a4d, matchRI: 0x1aa7, match64: 0x00000000, modelSI: 0x21f0, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x17a4d00017a55, matchRI: -0x0001, match64: 0x17a5500017a5e, modelSI: -0x0001, models64: 0x21f1000021f2},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x17a6600017a6c, matchRI: 0x1aa9, match64: 0x00000000, modelSI: -0x0001, models64: 0x21f2000021f5},
			deviceTuple{type64: 0x24700000251, brand64: 0x17aa100017aa5, matchRI: 0x1aab, match64: 0x00000000, modelSI: -0x0001, models64: 0x21f5000021fd},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x17b0500017b0e, matchRI: 0x1aac, match64: 0x00000000, modelSI: 0x21fd, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x17b0e00017b13, matchRI: 0x1aad, match64: 0x00000000, modelSI: 0x21fe, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x17b1300017b1d, matchRI: 0x1aae, match64: 0x00000000, modelSI: -0x0001, models64: 0x21ff00002206},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x17b4b00017b57, matchRI: -0x0001, match64: 0x17b5700017b5b, modelSI: -0x0001, models64: 0x220600002207},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x17b5b00017b68, matchRI: 0x1ab6, match64: 0x00000000, modelSI: -0x0001, models64: 0x220700002214},
			deviceTuple{type64: 0x24300000245, brand64: 0x17c8e00017c93, matchRI: 0x1abb, match64: 0x00000000, modelSI: -0x0001, models64: 0x221400002215},
			deviceTuple{type64: 0x24300000245, brand64: 0x17c9300017c9c, matchRI: 0x1abd, match64: 0x00000000, modelSI: 0x2215, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x17c9c00017ca4, matchRI: 0x1abe, match64: 0x00000000, modelSI: -0x0001, models64: 0x221600002238},
			deviceTuple{type64: 0x8e00000099, brand64: 0x17e3f00017e47, matchRI: 0x1ac8, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x17e4700017e4e, matchRI: 0x1ac9, match64: 0x00000000, modelSI: -0x0001, models64: 0x22380000223a},
			deviceTuple{type64: 0x24700000251, brand64: 0x17e4e00017e56, matchRI: 0x1acc, match64: 0x00000000, modelSI: -0x0001, models64: 0x223a00002261},
			deviceTuple{type64: 0x24700000251, brand64: 0x1801400018018, matchRI: 0x1ae6, match64: 0x00000000, modelSI: -0x0001, models64: 0x226100002263},
			deviceTuple{type64: 0x24700000251, brand64: 0x180180001801e, matchRI: -0x0001, match64: 0x1801e00018027, modelSI: 0x2263, models64: 0x00000000},
			deviceTuple{type64: 0x8e00000099, brand64: 0x180270001802e, matchRI: -0x0001, match64: 0x1802e0001804d, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1804d00018056, matchRI: 0x1ae9, match64: 0x00000000, modelSI: 0x2264, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x180560001805e, matchRI: 0x1aea, match64: 0x00000000, modelSI: -0x0001, models64: 0x226500002271},
			deviceTuple{type64: 0x24700000251, brand64: 0x180da000180e6, matchRI: 0x1aee, match64: 0x00000000, modelSI: -0x0001, models64: 0x227100002281},
			deviceTuple{type64: 0x24700000251, brand64: 0xfddd0000fde4, matchRI: 0x1aff, match64: 0x00000000, modelSI: -0x0001, models64: 0x228100002282},
			deviceTuple{type64: 0x24700000251, brand64: 0x1818100018187, matchRI: 0x1b00, match64: 0x00000000, modelSI: -0x0001, models64: 0x22820000228b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x181ec000181f5, matchRI: 0x1b03, match64: 0x00000000, modelSI: -0x0001, models64: 0x228b000022d6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1873b00018743, matchRI: 0x1b15, match64: 0x00000000, modelSI: -0x0001, models64: 0x22d6000022d8},
			deviceTuple{type64: 0x24700000251, brand64: 0x1875300018759, matchRI: 0x1b18, match64: 0x00000000, modelSI: -0x0001, models64: 0x22d8000022e3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1879f000187a5, matchRI: 0x1b24, match64: 0x00000000, modelSI: -0x0001, models64: 0x22e3000022ea},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x187fc00018803, matchRI: 0x1b26, match64: 0x00000000, modelSI: -0x0001, models64: 0x22ea000022ec},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x188030001880a, matchRI: 0x1b29, match64: 0x00000000, modelSI: -0x0001, models64: 0x22ec000022ee},
			deviceTuple{type64: 0x24300000245, brand64: 0x188150001881e, matchRI: 0x1b2c, match64: 0x00000000, modelSI: 0x22ee, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1881e00018825, matchRI: 0x1b2d, match64: 0x00000000, modelSI: -0x0001, models64: 0x22ef000022f2},
			deviceTuple{type64: 0x8e00000099, brand64: 0x1883a00018841, matchRI: 0x1b30, match64: 0x00000000, modelSI: 0x22f2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1884100018849, matchRI: 0x1b31, match64: 0x00000000, modelSI: 0x22f3, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x188490001884e, matchRI: 0x1b32, match64: 0x00000000, modelSI: 0x22f4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1884e00018854, matchRI: -0x0001, match64: 0x188540001885c, modelSI: -0x0001, models64: 0x22f5000022f6},
			deviceTuple{type64: 0x24300000245, brand64: 0x1885c00018861, matchRI: 0x1b33, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1886100018868, matchRI: 0x1b34, match64: 0x00000000, modelSI: -0x0001, models64: 0x22f6000022f7},
			deviceTuple{type64: 0x24700000251, brand64: 0x188680001886e, matchRI: 0x1b36, match64: 0x00000000, modelSI: -0x0001, models64: 0x22f7000022f9},
			deviceTuple{type64: 0x24700000251, brand64: 0x1887600018879, matchRI: 0x1b38, match64: 0x00000000, modelSI: 0x22f9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x188790001887c, matchRI: 0x1b39, match64: 0x00000000, modelSI: -0x0001, models64: 0x22fa000022fc},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1887c00018881, matchRI: 0x1b3c, match64: 0x00000000, modelSI: -0x0001, models64: 0x22fc000022fd},
			deviceTuple{type64: 0x24700000251, brand64: 0x1888a00018891, matchRI: 0x1b3e, match64: 0x00000000, modelSI: -0x0001, models64: 0x22fd00002334},
			deviceTuple{type64: 0x24700000251, brand64: 0x18af900018afe, matchRI: 0x1b57, match64: 0x00000000, modelSI: -0x0001, models64: 0x233400002335},
			deviceTuple{type64: 0x24300000245, brand64: 0x18b0400018b09, matchRI: 0x1b59, match64: 0x00000000, modelSI: 0x2335, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x18b0900018b0f, matchRI: 0x1b5a, match64: 0x00000000, modelSI: -0x0001, models64: 0x233600002350},
			deviceTuple{type64: 0x24700000251, brand64: 0x18c5500018c60, matchRI: 0x1b62, match64: 0x00000000, modelSI: -0x0001, models64: 0x235000002357},
			deviceTuple{type64: 0x24700000251, brand64: 0x18ca900018cad, matchRI: 0x1b69, match64: 0x00000000, modelSI: 0x2357, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x18cad00018cb4, matchRI: 0x1b6a, match64: 0x00000000, modelSI: -0x0001, models64: 0x235800002362},
			deviceTuple{type64: 0x24700000251, brand64: 0x18cf300018cf9, matchRI: 0x1b75, match64: 0x00000000, modelSI: 0x2362, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x18cf900018cfd, matchRI: 0x1b76, match64: 0x00000000, modelSI: -0x0001, models64: 0x236300002367},
			deviceTuple{type64: 0x24700000251, brand64: 0x18d1500018d1c, matchRI: -0x0001, match64: 0x18d1c00018d2b, modelSI: 0x2367, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x598a0000598f, matchRI: 0x1b7a, match64: 0x00000000, modelSI: -0x0001, models64: 0x236800002369},
			deviceTuple{type64: 0x24700000251, brand64: 0x18d3700018d3d, matchRI: 0x1b7b, match64: 0x00000000, modelSI: -0x0001, models64: 0x23690000236a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x18d4200018d46, matchRI: 0x1b7d, match64: 0x00000000, modelSI: -0x0001, models64: 0x236a0000236f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x18d6300018d68, matchRI: 0x1b83, match64: 0x00000000, modelSI: -0x0001, models64: 0x236f00002374},
			deviceTuple{type64: 0x24300000245, brand64: 0x18d9c00018da0, matchRI: 0x1b85, match64: 0x00000000, modelSI: 0x2374, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x18da600018db1, matchRI: 0x1b86, match64: 0x00000000, modelSI: -0x0001, models64: 0x237500002384},
			deviceTuple{type64: 0x24700000251, brand64: 0x18ea000018ea3, matchRI: 0x1b8f, match64: 0x00000000, modelSI: 0x2384, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x18eaf00018eb4, matchRI: 0x1b90, match64: 0x00000000, modelSI: -0x0001, models64: 0x238500002388},
			deviceTuple{type64: 0x24700000251, brand64: 0x18ec300018ec6, matchRI: 0x1b93, match64: 0x00000000, modelSI: -0x0001, models64: 0x23880000239f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x18faf00018fb6, matchRI: 0x1ba2, match64: 0x00000000, modelSI: -0x0001, models64: 0x239f000023a0},
			deviceTuple{type64: 0x24300000245, brand64: 0x18fc400018fc8, matchRI: 0x1ba3, match64: 0x00000000, modelSI: 0x23a0, models64: 0x00000000},
			deviceTuple{type64: 0x8e00000099, brand64: 0x18fc800018fcc, matchRI: 0x1ba4, match64: 0x00000000, modelSI: 0x23a1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x18fcc00018fd6, matchRI: 0x1ba5, match64: 0x00000000, modelSI: -0x0001, models64: 0x23a2000023a4},
			deviceTuple{type64: 0x24700000251, brand64: 0x18fed00018ff0, matchRI: 0x1ba7, match64: 0x00000000, modelSI: 0x23a4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x18ff700018ffe, matchRI: 0x1ba8, match64: 0x00000000, modelSI: -0x0001, models64: 0x23a5000023aa},
			deviceTuple{type64: 0x24700000251, brand64: 0x1903000019035, matchRI: 0x1ba9, match64: 0x00000000, modelSI: -0x0001, models64: 0x23aa000023af},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x1905700019060, matchRI: 0x1bad, match64: 0x00000000, modelSI: 0x23af, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1906000019065, matchRI: 0x1bae, match64: 0x00000000, modelSI: 0x23b0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x190650001906d, matchRI: 0x1baf, match64: 0x00000000, modelSI: -0x0001, models64: 0x23b1000023b2},
			deviceTuple{type64: 0x24700000251, brand64: 0x190850001908a, matchRI: 0x1bb0, match64: 0x00000000, modelSI: -0x0001, models64: 0x23b2000023b4},
			deviceTuple{type64: 0x24700000251, brand64: 0x190a5000190aa, matchRI: 0x1bb1, match64: 0x00000000, modelSI: 0x23b4, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x190aa000190b1, matchRI: 0x1bb2, match64: 0x00000000, modelSI: -0x0001, models64: 0x23b5000023b8},
			deviceTuple{type64: 0x24700000251, brand64: 0x190bf000190c5, matchRI: 0x1bb6, match64: 0x00000000, modelSI: -0x0001, models64: 0x23b800002464},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x196c6000196cd, matchRI: 0x1c0b, match64: 0x00000000, modelSI: 0x2464, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x196cd000196d4, matchRI: 0x1c0c, match64: 0x00000000, modelSI: 0x2465, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x196d4000196da, matchRI: 0x1c0d, match64: 0x00000000, modelSI: -0x0001, models64: 0x246600002467},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x196ea000196f0, matchRI: 0x1c0f, match64: 0x00000000, modelSI: -0x0001, models64: 0x24670000246a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x197170001971d, matchRI: 0x1c10, match64: 0x00000000, modelSI: -0x0001, models64: 0x246a00002488},
			deviceTuple{type64: 0x24700000251, brand64: 0x1990b00019911, matchRI: 0x1c18, match64: 0x00000000, modelSI: 0x2488, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1991100019918, matchRI: 0x1c19, match64: 0x00000000, modelSI: 0x2489, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x199180001991e, matchRI: 0x1c1a, match64: 0x00000000, modelSI: -0x0001, models64: 0x248a0000248b},
			deviceTuple{type64: 0x24300000245, brand64: 0x1992200019928, matchRI: 0x1c1c, match64: 0x00000000, modelSI: 0x248b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x199280001992c, matchRI: 0x1c1d, match64: 0x00000000, modelSI: -0x0001, models64: 0x248c0000248e},
			deviceTuple{type64: 0x24700000251, brand64: 0x1994000019949, matchRI: 0x1c1f, match64: 0x00000000, modelSI: -0x0001, models64: 0x248e0000248f},
			deviceTuple{type64: 0x24700000251, brand64: 0x1995100019956, matchRI: 0x1c20, match64: 0x00000000, modelSI: 0x248f, models64: 0x00000000},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x1995d00019962, matchRI: -0x0001, match64: 0x1996200019968, modelSI: -0x0001, models64: 0x249000002491},
			deviceTuple{type64: 0x24300000245, brand64: 0x1997800019981, matchRI: 0x1c21, match64: 0x00000000, modelSI: 0x2491, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1998500019992, matchRI: -0x0001, match64: 0x199920001999f, modelSI: -0x0001, models64: 0x249200002493},
			deviceTuple{type64: 0x24700000251, brand64: 0x199b4000199b9, matchRI: 0x1c22, match64: 0x00000000, modelSI: 0x2493, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x199b9000199bf, matchRI: 0x1c23, match64: 0x00000000, modelSI: -0x0001, models64: 0x249400002496},
			deviceTuple{type64: 0x24700000251, brand64: 0x199cb000199d3, matchRI: 0x1c26, match64: 0x00000000, modelSI: 0x2496, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x199d8000199df, matchRI: 0x1c27, match64: 0x00000000, modelSI: -0x0001, models64: 0x249700002498},
			deviceTuple{type64: 0x24700000251, brand64: 0x199df000199e3, matchRI: 0x1c29, match64: 0x00000000, modelSI: -0x0001, models64: 0x24980000249d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19a2f00019a35, matchRI: 0x1c2d, match64: 0x00000000, modelSI: 0x249d, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19a3500019a3e, matchRI: -0x0001, match64: 0x19a3e00019a51, modelSI: 0x249e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19a5a00019a62, matchRI: 0x1c2e, match64: 0x00000000, modelSI: 0x249f, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x82390000823f, matchRI: 0x1c2f, match64: 0x00000000, modelSI: 0x24a0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19a6200019a67, matchRI: 0x1c30, match64: 0x00000000, modelSI: -0x0001, models64: 0x24a1000024a5},
			deviceTuple{type64: 0x24300000245, brand64: 0x19a7f00019a83, matchRI: 0x1c31, match64: 0x00000000, modelSI: -0x0001, models64: 0x24a5000024a8},
			deviceTuple{type64: 0x24300000245, brand64: 0x19ab100019ab8, matchRI: 0x1c32, match64: 0x00000000, modelSI: -0x0001, models64: 0x24a8000024ac},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19ade00019ae7, matchRI: 0x1c36, match64: 0x00000000, modelSI: 0x24ac, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x19aee00019af3, matchRI: 0x1c37, match64: 0x00000000, modelSI: 0x24ad, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19af300019afb, matchRI: 0x1c38, match64: 0x00000000, modelSI: -0x0001, models64: 0x24ae000024b3},
			deviceTuple{type64: 0x24700000251, brand64: 0x19b1d00019b25, matchRI: 0x1c3e, match64: 0x00000000, modelSI: -0x0001, models64: 0x24b3000024b6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19b3700019b3d, matchRI: -0x0001, match64: 0x19b3700019b3d, modelSI: -0x0001, models64: 0x24b6000024b8},
			deviceTuple{type64: 0x24700000251, brand64: 0x19b4d00019b54, matchRI: 0x1c41, match64: 0x00000000, modelSI: -0x0001, models64: 0x24b8000024ba},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19b5900019b62, matchRI: 0x1c43, match64: 0x00000000, modelSI: -0x0001, models64: 0x24ba000024bb},
			deviceTuple{type64: 0x24700000251, brand64: 0x19b6200019b68, matchRI: 0x1c45, match64: 0x00000000, modelSI: -0x0001, models64: 0x24bb000024bc},
			deviceTuple{type64: 0x24700000251, brand64: 0x19b7300019b77, matchRI: 0x1c47, match64: 0x00000000, modelSI: -0x0001, models64: 0x24bc000024c0},
			deviceTuple{type64: 0x24700000251, brand64: 0x19b8400019b89, matchRI: 0x1c4b, match64: 0x00000000, modelSI: -0x0001, models64: 0x24c0000024c3},
			deviceTuple{type64: 0x24300000245, brand64: 0x19b9500019b99, matchRI: -0x0001, match64: 0x19b9900019ba4, modelSI: 0x24c3, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19ba400019ba8, matchRI: 0x1c4d, match64: 0x00000000, modelSI: -0x0001, models64: 0x24c4000024c6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19ba800019baf, matchRI: 0x1c50, match64: 0x00000000, modelSI: 0x24c6, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19baf00019bb5, matchRI: 0x1c51, match64: 0x00000000, modelSI: -0x0001, models64: 0x24c7000024c9},
			deviceTuple{type64: 0x24700000251, brand64: 0x19bb500019bba, matchRI: 0x1c54, match64: 0x00000000, modelSI: -0x0001, models64: 0x24c9000024ca},
			deviceTuple{type64: 0x24700000251, brand64: 0x19bba00019bbf, matchRI: 0x1c56, match64: 0x00000000, modelSI: 0x24ca, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19bc600019bca, matchRI: -0x0001, match64: 0x19bca00019bd1, modelSI: -0x0001, models64: 0x24cb000024cd},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19be200019be7, matchRI: 0x1c57, match64: 0x00000000, modelSI: 0x24cd, models64: 0x00000000},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x19be700019bec, matchRI: 0x1c58, match64: 0x00000000, modelSI: 0x24ce, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x19bec00019bef, matchRI: 0x1c59, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19bef00019bf7, matchRI: 0x1c5a, match64: 0x00000000, modelSI: -0x0001, models64: 0x24cf000024d3},
			deviceTuple{type64: 0x24300000245, brand64: 0x19c0f00019c14, matchRI: 0x1c5f, match64: 0x00000000, modelSI: 0x24d3, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19c1400019c17, matchRI: 0x1c60, match64: 0x00000000, modelSI: -0x0001, models64: 0x24d4000024ef},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19d2c00019d30, matchRI: 0x1c7b, match64: 0x00000000, modelSI: 0x24ef, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x19d3300019d3f, matchRI: 0x1c7c, match64: 0x00000000, modelSI: -0x0001, models64: 0x24f0000024f2},
			deviceTuple{type64: 0x24700000251, brand64: 0x19d5b00019d5e, matchRI: 0x1c7f, match64: 0x00000000, modelSI: 0x24f2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19d5e00019d68, matchRI: 0x1c80, match64: 0x00000000, modelSI: -0x0001, models64: 0x24f3000024f7},
			deviceTuple{type64: 0x24700000251, brand64: 0x19dc200019dc9, matchRI: 0x1c81, match64: 0x00000000, modelSI: -0x0001, models64: 0x24f7000024f9},
			deviceTuple{type64: 0x24700000251, brand64: 0x19ddc00019de7, matchRI: 0x1c83, match64: 0x00000000, modelSI: -0x0001, models64: 0x24f9000024fb},
			deviceTuple{type64: 0x24300000245, brand64: 0x19e0f00019e13, matchRI: 0x1c84, match64: 0x00000000, modelSI: 0x24fb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19e1300019e18, matchRI: 0x1c85, match64: 0x00000000, modelSI: 0x24fc, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19e1800019e1c, matchRI: 0x1c86, match64: 0x00000000, modelSI: 0x24fd, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19e2300019e27, matchRI: 0x1c87, match64: 0x00000000, modelSI: -0x0001, models64: 0x24fe00002501},
			deviceTuple{type64: 0x24700000251, brand64: 0x19e5900019e5d, matchRI: -0x0001, match64: 0x19e5d00019e66, modelSI: 0x2501, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19e6600019e69, matchRI: 0x1c89, match64: 0x00000000, modelSI: -0x0001, models64: 0x25020000251b},
			deviceTuple{type64: 0x24700000251, brand64: 0x19ffa00019fff, matchRI: 0x1c90, match64: 0x00000000, modelSI: -0x0001, models64: 0x251b0000251c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19fff0001a004, matchRI: 0x1c92, match64: 0x00000000, modelSI: 0x251c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a0070001a00b, matchRI: 0x1c93, match64: 0x00000000, modelSI: 0x251d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a00b0001a015, matchRI: 0x1c94, match64: 0x00000000, modelSI: -0x0001, models64: 0x251e00002528},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a0a80001a0b3, matchRI: 0x1c95, match64: 0x00000000, modelSI: 0x2528, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a0b30001a0b6, matchRI: 0x1c96, match64: 0x00000000, modelSI: -0x0001, models64: 0x252900002530},
			deviceTuple{type64: 0x24300000245, brand64: 0x1a0f60001a0fc, matchRI: 0x1c9a, match64: 0x00000000, modelSI: -0x0001, models64: 0x253000002532},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1a1030001a10a, matchRI: 0x1c9c, match64: 0x00000000, modelSI: -0x0001, models64: 0x253200002536},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a13f0001a14c, matchRI: 0x1ca0, match64: 0x00000000, modelSI: -0x0001, models64: 0x25360000253a},
			deviceTuple{type64: 0xae980000aead, brand64: 0x1a16b0001a170, matchRI: 0x1ca4, match64: 0x00000000, modelSI: -0x0001, models64: 0x253a0000253b},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a1780001a17b, matchRI: 0x1ca6, match64: 0x00000000, modelSI: 0x253b, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1a1830001a187, matchRI: -0x0001, match64: 0x1a1870001a18c, modelSI: -0x0001, models64: 0x253c0000253d},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a18c0001a195, matchRI: 0x1ca8, match64: 0x00000000, modelSI: -0x0001, models64: 0x253d00002548},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a24a0001a24f, matchRI: 0x1cab, match64: 0x00000000, modelSI: -0x0001, models64: 0x25480000254c},
			deviceTuple{type64: 0x24300000245, brand64: 0x1a24f0001a257, matchRI: 0x1cb0, match64: 0x00000000, modelSI: -0x0001, models64: 0x254c00002550},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a2570001a25c, matchRI: 0x1cb5, match64: 0x00000000, modelSI: -0x0001, models64: 0x255000002552},
			deviceTuple{type64: 0x24700000251, brand64: 0x180000001f, matchRI: 0x1cb8, match64: 0x00000000, modelSI: -0x0001, models64: 0x2552000027f3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1cbff0001cc06, matchRI: 0x1f2d, match64: 0x00000000, modelSI: 0x27f3, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1cc060001cc0d, matchRI: 0x1f2e, match64: 0x00000000, modelSI: 0x27f4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1cc0d0001cc12, matchRI: 0x1f2f, match64: 0x00000000, modelSI: -0x0001, models64: 0x27f5000027f9},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1cc210001cc27, matchRI: -0x0001, match64: 0x1cc270001cc30, modelSI: 0x27f9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1cc3a0001cc40, matchRI: 0x1f31, match64: 0x00000000, modelSI: -0x0001, models64: 0x27fa000027fc},
			deviceTuple{type64: 0x24700000251, brand64: 0x1cc470001cc4d, matchRI: 0x1f33, match64: 0x00000000, modelSI: -0x0001, models64: 0x27fc00002811},
			deviceTuple{type64: 0x38400000391, brand64: 0x1b4000001b9, matchRI: 0x1f49, match64: 0x00000000, modelSI: -0x0001, models64: 0x281100002816},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ccf90001ccfe, matchRI: 0x1f4f, match64: 0x00000000, modelSI: 0x2816, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ccfe0001cd02, matchRI: 0x1f50, match64: 0x00000000, modelSI: 0x2817, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1cd020001cd0b, matchRI: 0x1f51, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1cd0b0001cd10, matchRI: 0x1f52, match64: 0x00000000, modelSI: -0x0001, models64: 0x28180000281a},
			deviceTuple{type64: 0x24300000245, brand64: 0x1cd460001cd4c, matchRI: 0x1f53, match64: 0x00000000, modelSI: 0x281a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1cd4c0001cd53, matchRI: 0x1f54, match64: 0x00000000, modelSI: 0x281b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1cd530001cd59, matchRI: -0x0001, match64: 0x1cd530001cd59, modelSI: -0x0001, models64: 0x281c0000281d},
			deviceTuple{type64: 0x24700000251, brand64: 0x1cd590001cd5f, matchRI: 0x1f56, match64: 0x00000000, modelSI: -0x0001, models64: 0x281d0000281f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1cd5f0001cd68, matchRI: 0x1f59, match64: 0x00000000, modelSI: -0x0001, models64: 0x281f00002821},
			deviceTuple{type64: 0x24300000245, brand64: 0x1cd680001cd6f, matchRI: -0x0001, match64: 0x1cd680001cd6f, modelSI: -0x0001, models64: 0x282100002822},
			deviceTuple{type64: 0x24700000251, brand64: 0x1cd6f0001cd75, matchRI: -0x0001, match64: 0x1cd750001cd7b, modelSI: -0x0001, models64: 0x282200002829},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ce3c0001ce42, matchRI: 0x1f5d, match64: 0x00000000, modelSI: -0x0001, models64: 0x282900002838},
			deviceTuple{type64: 0x38400000391, brand64: 0x1cede0001cee3, matchRI: 0x1f6d, match64: 0x00000000, modelSI: 0x2838, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1cee30001ceeb, matchRI: 0x1f6e, match64: 0x00000000, modelSI: -0x0001, models64: 0x28390000283b},
			deviceTuple{type64: 0x24700000251, brand64: 0x1cf040001cf0b, matchRI: 0x1f70, match64: 0x00000000, modelSI: 0x283b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1cf0b0001cf10, matchRI: 0x1f71, match64: 0x00000000, modelSI: -0x0001, models64: 0x283c0000284a},
			deviceTuple{type64: 0x24700000251, brand64: 0x1cf420001cf47, matchRI: 0x1f80, match64: 0x00000000, modelSI: -0x0001, models64: 0x284a0000284c},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x1cf500001cf55, matchRI: 0x1f83, match64: 0x00000000, modelSI: 0x284c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1cf550001cf5a, matchRI: 0x1f84, match64: 0x00000000, modelSI: -0x0001, models64: 0x284d000028bd},
			deviceTuple{type64: 0x24700000251, brand64: 0x1d4440001d450, matchRI: 0x1fed, match64: 0x00000000, modelSI: 0x28bd, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1d4500001d457, matchRI: 0x1fee, match64: 0x00000000, modelSI: 0x28be, models64: 0x00000000},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x1d45d0001d466, matchRI: 0x1fef, match64: 0x00000000, modelSI: 0x28bf, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1d4710001d478, matchRI: 0x1ff0, match64: 0x00000000, modelSI: 0x28c0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1d4780001d47c, matchRI: 0x1ff1, match64: 0x00000000, modelSI: -0x0001, models64: 0x28c1000028d0},
			deviceTuple{type64: 0x24700000251, brand64: 0x1d50b0001d512, matchRI: 0x1ff6, match64: 0x00000000, modelSI: -0x0001, models64: 0x28d0000028d5},
			deviceTuple{type64: 0x24700000251, brand64: 0xf07a0000f07f, matchRI: 0x1ffc, match64: 0x00000000, modelSI: -0x0001, models64: 0x28d5000028dc},
			deviceTuple{type64: 0x24300000245, brand64: 0x1d5770001d57e, matchRI: 0x2003, match64: 0x00000000, modelSI: 0x28dc, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1d57e0001d58b, matchRI: -0x0001, match64: 0x1d58b0001d597, modelSI: 0x28dd, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1d5970001d59e, matchRI: 0x2004, match64: 0x00000000, modelSI: -0x0001, models64: 0x28de000028e6},
			deviceTuple{type64: 0x24700000251, brand64: 0x1d5dc0001d5e2, matchRI: 0x2007, match64: 0x00000000, modelSI: 0x28e6, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1d5e20001d5ea, matchRI: 0x2008, match64: 0x00000000, modelSI: -0x0001, models64: 0x28e7000028eb},
			deviceTuple{type64: 0x24700000251, brand64: 0x1d6030001d60a, matchRI: 0x200d, match64: 0x00000000, modelSI: -0x0001, models64: 0x28eb000028ec},
			deviceTuple{type64: 0x24700000251, brand64: 0x1d60f0001d619, matchRI: 0x200f, match64: 0x00000000, modelSI: -0x0001, models64: 0x28ec000028ee},
			deviceTuple{type64: 0x24700000251, brand64: 0x1d6290001d62f, matchRI: 0x2012, match64: 0x00000000, modelSI: 0x28ee, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x14c1100014c14, matchRI: 0x2013, match64: 0x00000000, modelSI: -0x0001, models64: 0x28ef0000291c},
			deviceTuple{type64: 0x24300000245, brand64: 0x1d8660001d86f, matchRI: 0x2030, match64: 0x00000000, modelSI: -0x0001, models64: 0x291c0000291e},
			deviceTuple{type64: 0x24300000245, brand64: 0x1d8770001d87e, matchRI: 0x2033, match64: 0x00000000, modelSI: 0x291e, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1d87e0001d886, matchRI: 0x2034, match64: 0x00000000, modelSI: -0x0001, models64: 0x291f00002923},
			deviceTuple{type64: 0x24700000251, brand64: 0x1d8a60001d8ab, matchRI: 0x2037, match64: 0x00000000, modelSI: -0x0001, models64: 0x292300002925},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1d8b90001d8bf, matchRI: 0x203a, match64: 0x00000000, modelSI: 0x2925, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xe0380000e03d, matchRI: 0x203b, match64: 0x00000000, modelSI: -0x0001, models64: 0x292600002928},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1d8d50001d8e1, matchRI: 0x203d, match64: 0x00000000, modelSI: -0x0001, models64: 0x292800002929},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1d8e70001d8f0, matchRI: 0x203f, match64: 0x00000000, modelSI: -0x0001, models64: 0x29290000292b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1d8f40001d8fb, matchRI: 0x2042, match64: 0x00000000, modelSI: 0x292b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1d8fb0001d902, matchRI: 0x2043, match64: 0x00000000, modelSI: -0x0001, models64: 0x292c0000292d},
			deviceTuple{type64: 0x24700000251, brand64: 0x1d9020001d90b, matchRI: 0x2045, match64: 0x00000000, modelSI: -0x0001, models64: 0x292d0000293c},
			deviceTuple{type64: 0x24700000251, brand64: 0x1d9e60001d9ef, matchRI: 0x204a, match64: 0x00000000, modelSI: -0x0001, models64: 0x293c0000294a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1da470001da4d, matchRI: 0x2055, match64: 0x00000000, modelSI: -0x0001, models64: 0x294a0000294c},
			deviceTuple{type64: 0x24700000251, brand64: 0x1da5c0001da69, matchRI: 0x2057, match64: 0x00000000, modelSI: -0x0001, models64: 0x294c00002953},
			deviceTuple{type64: 0x24300000245, brand64: 0x1dab30001dabd, matchRI: 0x205e, match64: 0x00000000, modelSI: 0x2953, models64: 0x00000000},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x1dabd0001dac6, matchRI: -0x0001, match64: 0x1dabd0001dac6, modelSI: -0x0001, models64: 0x295400002955},
			deviceTuple{type64: 0x24700000251, brand64: 0x1dae90001daed, matchRI: 0x205f, match64: 0x00000000, modelSI: -0x0001, models64: 0x295500002957},
			deviceTuple{type64: 0x24700000251, brand64: 0x1daf60001dafe, matchRI: 0x2061, match64: 0x00000000, modelSI: -0x0001, models64: 0x29570000295a},
			deviceTuple{type64: 0x24700000251, brand64: 0x1dafe0001db08, matchRI: 0x2065, match64: 0x00000000, modelSI: 0x295a, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1db080001db0d, matchRI: 0x2066, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1db0d0001db13, matchRI: 0x2067, match64: 0x00000000, modelSI: -0x0001, models64: 0x295b00002963},
			deviceTuple{type64: 0x24700000251, brand64: 0x1db880001db8d, matchRI: 0x206b, match64: 0x00000000, modelSI: -0x0001, models64: 0x29630000296c},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ee000001f2, matchRI: 0x2075, match64: 0x00000000, modelSI: -0x0001, models64: 0x296c00002a48},
			deviceTuple{type64: 0x24300000245, brand64: 0x1e5030001e50b, matchRI: 0x2141, match64: 0x00000000, modelSI: 0x2a48, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1e50b0001e513, matchRI: 0x2142, match64: 0x00000000, modelSI: 0x2a49, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e5130001e518, matchRI: 0x2143, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a4a00002a4d},
			deviceTuple{type64: 0x24700000251, brand64: 0x550b00005510, matchRI: 0x2145, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a4d00002a4e},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e52d0001e532, matchRI: 0x2146, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a4e00002a57},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e57a0001e585, matchRI: 0x214a, match64: 0x00000000, modelSI: 0x2a57, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e5850001e58d, matchRI: 0x214b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a5800002a5c},
			deviceTuple{type64: 0x24700000251, brand64: 0x13b0d00013b12, matchRI: 0x2150, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a5c00002a68},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x179bd000179c3, matchRI: 0x2159, match64: 0x00000000, modelSI: 0x2a68, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e6590001e65d, matchRI: 0x215a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a6900002a6b},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e6620001e66b, matchRI: 0x215c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a6b00002a76},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e7330001e73d, matchRI: 0x215e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a7600002a7c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1e76c0001e773, matchRI: 0x2165, match64: 0x00000000, modelSI: 0x2a7c, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1e7800001e788, matchRI: 0x2166, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a7d00002a7e},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e7900001e796, matchRI: 0x2168, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a7e00002a80},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1e7960001e79c, matchRI: 0x216b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a8000002a82},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e7bb0001e7c5, matchRI: 0x216d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a8200002a83},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e7c50001e7cb, matchRI: 0x216f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a8300002a85},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e7d10001e7d6, matchRI: 0x2172, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a8500002aaf},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e9c00001e9c5, matchRI: 0x217f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2aaf00002ab1},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e9c50001e9ca, matchRI: 0x2182, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ab100002ab6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1e9d80001e9e1, matchRI: 0x2188, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ab600002ab8},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e9e10001e9e7, matchRI: 0x218b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ab800002aba},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e9e70001e9ed, matchRI: 0x218e, match64: 0x00000000, modelSI: 0x2aba, models64: 0x00000000},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x1e9ed0001e9f2, matchRI: 0x218f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2abb00002abe},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ea0c0001ea11, matchRI: 0x2192, match64: 0x00000000, modelSI: -0x0001, models64: 0x2abe00002ac3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ea1f0001ea27, matchRI: 0x2198, match64: 0x00000000, modelSI: 0x2ac3, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ea270001ea2e, matchRI: 0x2199, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ac400002ac8},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ea450001ea52, matchRI: 0x219e, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ea520001ea5a, matchRI: 0x219f, match64: 0x00000000, modelSI: 0x2ac8, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ea600001ea6a, matchRI: 0x21a0, match64: 0x00000000, modelSI: 0x2ac9, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ea6a0001ea72, matchRI: 0x21a1, match64: 0x00000000, modelSI: -0x0001, models64: 0x2aca00002acc},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ea790001ea7e, matchRI: 0x21a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x2acc00002ace},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ea7e0001ea85, matchRI: 0x21a6, match64: 0x00000000, modelSI: 0x2ace, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ea850001ea8a, matchRI: 0x21a7, match64: 0x00000000, modelSI: 0x2acf, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ea910001ea97, matchRI: 0x21a8, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ad000002ad2},
			deviceTuple{type64: 0x24300000245, brand64: 0x1eab00001eab5, matchRI: 0x21aa, match64: 0x00000000, modelSI: 0x2ad2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1eab50001eaba, matchRI: 0x21ab, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ad300002ad9},
			deviceTuple{type64: 0x24700000251, brand64: 0x1eaf10001eafa, matchRI: 0x21af, match64: 0x00000000, modelSI: 0x2ad9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1eafa0001eb00, matchRI: 0x21b0, match64: 0x00000000, modelSI: 0x2ada, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1eb090001eb0d, matchRI: 0x21b1, match64: 0x00000000, modelSI: -0x0001, models64: 0x2adb00002adc},
			deviceTuple{type64: 0x24700000251, brand64: 0x1eb130001eb1b, matchRI: 0x21b2, match64: 0x00000000, modelSI: -0x0001, models64: 0x2adc00002aea},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1eb820001eb87, matchRI: 0x21bb, match64: 0x00000000, modelSI: 0x2aea, models64: 0x00000000},
			deviceTuple{type64: 0xb6500000b6c, brand64: 0x1eb870001eb8f, matchRI: -0x0001, match64: 0x1eb870001eb8f, modelSI: -0x0001, models64: 0x2aeb00002aec},
			deviceTuple{type64: 0x24700000251, brand64: 0x1eb990001eba1, matchRI: 0x21bd, match64: 0x00000000, modelSI: -0x0001, models64: 0x2aec00002b04},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ecaf0001ecb2, matchRI: 0x21d0, match64: 0x00000000, modelSI: 0x2b04, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ecb20001ecb8, matchRI: -0x0001, match64: 0x1ecb20001ecb8, modelSI: -0x0001, models64: 0x2b0500002b06},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ecb80001ecc0, matchRI: 0x21d2, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b0600002b09},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ece40001ece9, matchRI: 0x21d5, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ece90001ecf1, matchRI: 0x21d6, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b0900002b0a},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ecf90001ecfc, matchRI: 0x21d8, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b0a00002b75},
			deviceTuple{type64: 0x24300000245, brand64: 0x1efe30001efed, matchRI: 0x2233, match64: 0x00000000, modelSI: 0x2b75, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1efed0001eff4, matchRI: 0x2234, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b7600002b79},
			deviceTuple{type64: 0x24300000245, brand64: 0x1f0120001f01b, matchRI: 0x2235, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b7900002b7b},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f02a0001f02f, matchRI: -0x0001, match64: 0x1f02a0001f02f, modelSI: -0x0001, models64: 0x2b7b00002b7c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1f02f0001f036, matchRI: 0x2238, match64: 0x00000000, modelSI: 0x2b7c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f0360001f03a, matchRI: 0x2239, match64: 0x00000000, modelSI: 0x2b7d, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x1f03a0001f040, matchRI: -0x0001, match64: 0x1f03a0001f040, modelSI: -0x0001, models64: 0x2b7e00002b80},
			deviceTuple{type64: 0x24300000245, brand64: 0x1f0400001f049, matchRI: 0x223c, match64: 0x00000000, modelSI: 0x2b80, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1f0490001f04c, matchRI: 0x223d, match64: 0x00000000, modelSI: 0x2b81, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1f05b0001f05e, matchRI: 0x223e, match64: 0x00000000, modelSI: 0x2b82, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f05e0001f063, matchRI: 0x223f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b8300002b84},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x1f0630001f069, matchRI: 0x2241, match64: 0x00000000, modelSI: 0x2b84, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1f0690001f071, matchRI: 0x2242, match64: 0x00000000, modelSI: 0x2b85, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1f0710001f078, matchRI: 0x2243, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b8600002b88},
			deviceTuple{type64: 0x24300000245, brand64: 0x1f07c0001f07f, matchRI: -0x0001, match64: 0x1f07f0001f083, modelSI: 0x2b88, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1f0830001f086, matchRI: 0x2246, match64: 0x00000000, modelSI: 0x2b89, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1f0860001f08a, matchRI: 0x2247, match64: 0x00000000, modelSI: 0x2b8a, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1f08a0001f090, matchRI: -0x0001, match64: 0x1f0900001f09b, modelSI: 0x2b8b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f0a10001f0a7, matchRI: -0x0001, match64: 0x1f0a10001f0a7, modelSI: -0x0001, models64: 0x2b8c00002b8d},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f0ab0001f0ae, matchRI: 0x2249, match64: 0x00000000, modelSI: 0x2b8d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f0bc0001f0bf, matchRI: 0x224a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b8e00002b91},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f0d40001f0d7, matchRI: 0x224e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b9100002b94},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1f0eb0001f0ee, matchRI: 0x2251, match64: 0x00000000, modelSI: 0x2b94, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f0ee0001f0fa, matchRI: 0x2252, match64: 0x00000000, modelSI: 0x2b95, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1f1060001f10c, matchRI: 0x2253, match64: 0x00000000, modelSI: 0x2b96, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f10c0001f112, matchRI: 0x2254, match64: 0x00000000, modelSI: 0x2b97, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f1120001f117, matchRI: 0x2255, match64: 0x00000000, modelSI: 0x2b98, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1f1170001f11c, matchRI: 0x2256, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b9900002b9e},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x1f1380001f142, matchRI: 0x225b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b9e00002b9f},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f1420001f148, matchRI: 0x225d, match64: 0x00000000, modelSI: 0x2b9f, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1f1500001f157, matchRI: 0x225e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ba000002baf},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f1d90001f1e2, matchRI: 0x2267, match64: 0x00000000, modelSI: -0x0001, models64: 0x2baf00002bb0},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f1e20001f1eb, matchRI: 0x2269, match64: 0x00000000, modelSI: 0x2bb0, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1f1f80001f200, matchRI: 0x226a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2bb100002bb3},
			deviceTuple{type64: 0x24300000245, brand64: 0x1f21a0001f223, matchRI: 0x226d, match64: 0x00000000, modelSI: 0x2bb3, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1f22c0001f234, matchRI: -0x0001, match64: 0x1f22c0001f234, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1f2340001f23b, matchRI: 0x226e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2bb400002bdd},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f34c0001f358, matchRI: 0x2288, match64: 0x00000000, modelSI: -0x0001, models64: 0x2bdd00002c91},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fa130001fa1a, matchRI: 0x2338, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c9100002c93},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fa380001fa3d, matchRI: 0x233a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c9300002c98},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fa4b0001fa55, matchRI: 0x2340, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c9800002ca2},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fabb0001fac1, matchRI: 0x2346, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ca200002ca6},
			deviceTuple{type64: 0x24700000251, brand64: 0x1faf50001fafc, matchRI: 0x2348, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ca600002ca8},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fafc0001fb01, matchRI: -0x0001, match64: 0x1fb010001fb0a, modelSI: 0x2ca8, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x1fb0a0001fb0f, matchRI: -0x0001, match64: 0x1fb0a0001fb0f, modelSI: -0x0001, models64: 0x2ca900002cab},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fb0f0001fb15, matchRI: 0x234d, match64: 0x00000000, modelSI: 0x2cab, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fb150001fb1a, matchRI: -0x0001, match64: 0x1fb1a0001fb20, modelSI: -0x0001, models64: 0x2cac00002cad},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fb260001fb2b, matchRI: 0x234e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cad00002cb3},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fb650001fb70, matchRI: 0x2352, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cb300002cb5},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x1fb770001fb7c, matchRI: 0x2354, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cb500002cb6},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fb810001fb89, matchRI: -0x0001, match64: 0x1fb810001fb89, modelSI: -0x0001, models64: 0x2cb600002cb7},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fb890001fb8e, matchRI: 0x2357, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cb700002cb9},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fb9e0001fba6, matchRI: 0x235a, match64: 0x00000000, modelSI: 0x2cb9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fbb00001fbb3, matchRI: 0x235b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cba00002cc1},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fbc90001fbd0, matchRI: 0x2362, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cc100002cd4},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fc950001fc9c, matchRI: 0x236e, match64: 0x00000000, modelSI: 0x2cd4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fc9c0001fca3, matchRI: 0x236f, match64: 0x00000000, modelSI: 0x2cd5, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fca30001fca7, matchRI: 0x2370, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cd600002cda},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fcc40001fcca, matchRI: 0x2373, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cda00002cdb},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fcd60001fcdc, matchRI: 0x2375, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cdb00002cde},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fcf70001fcfc, matchRI: 0x2379, match64: 0x00000000, modelSI: 0x2cde, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fd040001fd0a, matchRI: 0x237a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cdf00002ced},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fdc90001fdce, matchRI: 0x2380, match64: 0x00000000, modelSI: 0x2ced, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fdce0001fdd3, matchRI: 0x2381, match64: 0x00000000, modelSI: 0x2cee, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fdd30001fdd8, matchRI: 0x2382, match64: 0x00000000, modelSI: 0x2cef, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fdd80001fdde, matchRI: 0x2383, match64: 0x00000000, modelSI: 0x2cf0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fdeb0001fdef, matchRI: 0x2384, match64: 0x00000000, modelSI: 0x2cf1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fdef0001fdf4, matchRI: -0x0001, match64: 0x1fdf40001fdf9, modelSI: -0x0001, models64: 0x2cf200002cf4},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fe000001fe09, matchRI: 0x2387, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cf400002cf8},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fe3a0001fe43, matchRI: 0x2388, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cf800002cfe},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fe7b0001fe84, matchRI: 0x238a, match64: 0x00000000, modelSI: 0x2cfe, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x1fe960001fe9c, matchRI: 0x238b, match64: 0x00000000, modelSI: 0x2cff, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fe9c0001fea3, matchRI: 0x238c, match64: 0x00000000, modelSI: 0x2d00, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fea70001feac, matchRI: 0x238d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d0100002d05},
			deviceTuple{type64: 0x24700000251, brand64: 0xf5e20000f5e8, matchRI: 0x2392, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d0500002d0c},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ff050001ff0c, matchRI: 0x2396, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d0c00002d27},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2004a00020054, matchRI: 0x23a3, match64: 0x00000000, modelSI: 0x2d27, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x200540002005d, matchRI: 0x23a4, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d2800002d2d},
			deviceTuple{type64: 0x24300000245, brand64: 0x200940002009d, matchRI: 0x23a8, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d2d00002d2f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x200ab000200b3, matchRI: 0x23ab, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d2f00002d39},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x201470002014c, matchRI: 0x23b2, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d3900002d46},
			deviceTuple{type64: 0x24300000245, brand64: 0x201e9000201f1, matchRI: 0x23bf, match64: 0x00000000, modelSI: 0x2d46, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x201f1000201f8, matchRI: 0x23c0, match64: 0x00000000, modelSI: 0x2d47, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x201f8000201ff, matchRI: 0x23c1, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d4800002d4b},
			deviceTuple{type64: 0x24700000251, brand64: 0x2024100020245, matchRI: 0x23c2, match64: 0x00000000, modelSI: 0x2d4b, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2024a00020253, matchRI: 0x23c3, match64: 0x00000000, modelSI: 0x2d4c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2025300020257, matchRI: 0x23c4, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d4d00002d61},
			deviceTuple{type64: 0x24700000251, brand64: 0x204210002042a, matchRI: 0x23d1, match64: 0x00000000, modelSI: 0x2d61, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2042a0002042f, matchRI: 0x23d2, match64: 0x00000000, modelSI: 0x2d62, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2042f0002043e, matchRI: 0x23d3, match64: 0x00000000, modelSI: 0x2d63, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x91cf000091d4, matchRI: 0x23d4, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d6400002d6c},
			deviceTuple{type64: 0x24700000251, brand64: 0x2048000020487, matchRI: 0x23dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d6c00002d87},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x205ab000205b4, matchRI: 0x23ef, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d8700002d8a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x205d4000205dc, matchRI: 0x23f2, match64: 0x00000000, modelSI: 0x2d8a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x205dc000205e4, matchRI: 0x23f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d8b00002d90},
			deviceTuple{type64: 0x24300000245, brand64: 0x2060e00020613, matchRI: 0x23f9, match64: 0x00000000, modelSI: 0x2d90, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x206130002061a, matchRI: 0x23fa, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d9100002d93},
			deviceTuple{type64: 0x24700000251, brand64: 0x2061a0002061e, matchRI: 0x23fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d9300002d95},
			deviceTuple{type64: 0x24700000251, brand64: 0x2061e00020623, matchRI: 0x2400, match64: 0x00000000, modelSI: 0x2d95, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2062300020630, matchRI: -0x0001, match64: 0x206300002063c, modelSI: -0x0001, models64: 0x2d9600002d97},
			deviceTuple{type64: 0x24700000251, brand64: 0x2064100020648, matchRI: 0x2402, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d9700002d9b},
			deviceTuple{type64: 0x24700000251, brand64: 0x206610002066e, matchRI: -0x0001, match64: 0x2066e00020673, modelSI: -0x0001, models64: 0x2d9b00002d9d},
			deviceTuple{type64: 0x24300000245, brand64: 0x2068e00020690, matchRI: 0x2408, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d9d00002da0},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x206ac000206ae, matchRI: -0x0001, match64: 0x206ae000206b6, modelSI: 0x2da0, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x206bb000206c0, matchRI: 0x240c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2da100002da2},
			deviceTuple{type64: 0x24700000251, brand64: 0x206c0000206c7, matchRI: 0x240e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2da200002dd5},
			deviceTuple{type64: 0x24700000251, brand64: 0x2085300020858, matchRI: 0x242a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2dd500002dd7},
			deviceTuple{type64: 0x24700000251, brand64: 0x208580002085c, matchRI: 0x242d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2dd700002dd8},
			deviceTuple{type64: 0x24700000251, brand64: 0x2085c00020862, matchRI: -0x0001, match64: 0x2085c00020862, modelSI: -0x0001, models64: 0x2dd800002dd9},
			deviceTuple{type64: 0x24700000251, brand64: 0x2086200020866, matchRI: 0x2430, match64: 0x00000000, modelSI: -0x0001, models64: 0x2dd900002ddd},
			deviceTuple{type64: 0x38400000391, brand64: 0x2087e00020887, matchRI: 0x2433, match64: 0x00000000, modelSI: 0x2ddd, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x208870002088c, matchRI: 0x2434, match64: 0x00000000, modelSI: 0x2dde, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2088c00020895, matchRI: 0x2435, match64: 0x00000000, modelSI: 0x2ddf, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2089f000208a4, matchRI: 0x2436, match64: 0x00000000, modelSI: -0x0001, models64: 0x2de000002de3},
			deviceTuple{type64: 0x24700000251, brand64: 0x208ac000208b1, matchRI: 0x243a, match64: 0x00000000, modelSI: 0x2de3, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x208b1000208b7, matchRI: 0x243b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2de400002dea},
			deviceTuple{type64: 0x24700000251, brand64: 0x208c9000208d0, matchRI: 0x243f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2dea00002e13},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20a2200020a26, matchRI: 0x2462, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e1300002e1e},
			deviceTuple{type64: 0x24300000245, brand64: 0x20ad200020ade, matchRI: 0x246d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e1e00002e20},
			deviceTuple{type64: 0x24700000251, brand64: 0x20b0200020b08, matchRI: 0x246e, match64: 0x00000000, modelSI: 0x2e20, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x20b0800020b10, matchRI: 0x246f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e2100002e2f},
			deviceTuple{type64: 0x24700000251, brand64: 0x20bbf00020bc5, matchRI: 0x2474, match64: 0x00000000, modelSI: 0x2e2f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x20bc500020bcd, matchRI: 0x2475, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e3000002e32},
			deviceTuple{type64: 0x24700000251, brand64: 0x20bcf00020bd7, matchRI: -0x0001, match64: 0x20bcf00020bd7, modelSI: -0x0001, models64: 0x2e3200002e34},
			deviceTuple{type64: 0x24700000251, brand64: 0x20bd700020be0, matchRI: 0x247a, match64: 0x00000000, modelSI: 0x2e34, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x20be000020be7, matchRI: 0x247b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e3500002e37},
			deviceTuple{type64: 0x24300000245, brand64: 0x20bf100020bfd, matchRI: 0x247e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e3700002e39},
			deviceTuple{type64: 0x24700000251, brand64: 0x20c3a00020c41, matchRI: 0x247f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e3900002e43},
			deviceTuple{type64: 0x24700000251, brand64: 0x20c8700020c8e, matchRI: 0x2489, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e4300002e4e},
			deviceTuple{type64: 0x24700000251, brand64: 0x20cff00020d12, matchRI: 0x248a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e4e00002e4f},
			deviceTuple{type64: 0x24700000251, brand64: 0x20d1500020d1a, matchRI: 0x248c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e4f00002e52},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20d1a00020d20, matchRI: 0x2490, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e5200002e54},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20d2c00020d31, matchRI: 0x2492, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e5400002e55},
			deviceTuple{type64: 0x24700000251, brand64: 0x20d3100020d36, matchRI: 0x2494, match64: 0x00000000, modelSI: 0x2e55, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x20d3600020d3c, matchRI: 0x2495, match64: 0x00000000, modelSI: 0x2e56, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x20d3c00020d42, matchRI: 0x2496, match64: 0x00000000, modelSI: 0x2e57, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x20d4200020d46, matchRI: 0x2497, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e5800002e5a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20d5300020d57, matchRI: -0x0001, match64: 0x20d5700020d64, modelSI: 0x2e5a, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20d6c00020d71, matchRI: -0x0001, match64: 0x20d7100020d7a, modelSI: 0x2e5b, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20d8300020d8a, matchRI: -0x0001, match64: 0x20d8a00020d95, modelSI: 0x2e5c, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20da100020da7, matchRI: 0x2499, match64: 0x00000000, modelSI: 0x2e5d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x20da700020dab, matchRI: 0x249a, match64: 0x00000000, modelSI: 0x2e5e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x20dab00020dad, matchRI: 0x249b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e5f00002e62},
			deviceTuple{type64: 0x24700000251, brand64: 0x20dc600020dca, matchRI: 0x249e, match64: 0x00000000, modelSI: 0x2e62, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x20dca00020dce, matchRI: 0x249f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e6300002e65},
			deviceTuple{type64: 0x24700000251, brand64: 0x20dce00020dd3, matchRI: 0x24a2, match64: 0x00000000, modelSI: 0x2e65, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x20dd300020dda, matchRI: 0x24a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e6600002e6b},
			deviceTuple{type64: 0x24700000251, brand64: 0x20e0f00020e13, matchRI: 0x24a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e6b00002e6d},
			deviceTuple{type64: 0x24700000251, brand64: 0x20e1300020e19, matchRI: 0x24aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e6d00002e6e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20e2500020e2c, matchRI: 0x24ab, match64: 0x00000000, modelSI: 0x2e6e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x20e2c00020e33, matchRI: 0x24ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e6f00002e72},
			deviceTuple{type64: 0x24700000251, brand64: 0x20e4a00020e4f, matchRI: -0x0001, match64: 0x20e4a00020e4f, modelSI: -0x0001, models64: 0x2e7200002e75},
			deviceTuple{type64: 0x24300000245, brand64: 0x20e5700020e61, matchRI: 0x24b1, match64: 0x00000000, modelSI: 0x2e75, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20e6100020e69, matchRI: 0x24b2, match64: 0x00000000, modelSI: 0x2e76, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x20e6900020e6d, matchRI: 0x24b3, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e7700002e7c},
			deviceTuple{type64: 0x38400000391, brand64: 0x20ec400020ecd, matchRI: 0x24b5, match64: 0x00000000, modelSI: 0x2e7c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x20ed100020ed8, matchRI: 0x24b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e7d00002e81},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20edd00020eec, matchRI: 0x24bb, match64: 0x00000000, modelSI: 0x2e81, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x20ef400020ef9, matchRI: 0x24bc, match64: 0x00000000, modelSI: 0x2e82, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x20ef900020efd, matchRI: 0x24bd, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e8300002e84},
			deviceTuple{type64: 0x24300000245, brand64: 0x20f0800020f0d, matchRI: 0x24be, match64: 0x00000000, modelSI: 0x2e84, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20f0d00020f14, matchRI: 0x24bf, match64: 0x00000000, modelSI: 0x2e85, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20f1400020f1d, matchRI: -0x0001, match64: 0x20f1d00020f24, modelSI: -0x0001, models64: 0x2e8600002e87},
			deviceTuple{type64: 0x24700000251, brand64: 0x20f2400020f2b, matchRI: 0x24c1, match64: 0x00000000, modelSI: 0x2e87, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20f2d00020f33, matchRI: 0x24c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e8800002e8c},
			deviceTuple{type64: 0x24700000251, brand64: 0x20f6700020f6c, matchRI: 0x24c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e8c00002e8d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20f6c00020f74, matchRI: 0x24c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e8d00002e8f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1161100011615, matchRI: 0x24cb, match64: 0x00000000, modelSI: 0x2e8f, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x20f8100020f86, matchRI: 0x24cc, match64: 0x00000000, modelSI: 0x2e90, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x20f8600020f8b, matchRI: 0x24cd, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e9100002e93},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20f9500020f9c, matchRI: 0x24d0, match64: 0x00000000, modelSI: 0x2e93, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20f9c00020fa4, matchRI: 0x24d1, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e9400002e97},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20fcb00020fd1, matchRI: 0x24d5, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e9700002e99},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20fe800020fef, matchRI: 0x24d8, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e9900002ea0},
			deviceTuple{type64: 0x24700000251, brand64: 0x210740002107a, matchRI: 0x24db, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ea000002eac},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x210c0000210c7, matchRI: 0x24e1, match64: 0x00000000, modelSI: 0x2eac, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x210d2000210d8, matchRI: 0x24e2, match64: 0x00000000, modelSI: 0x2ead, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x210d8000210de, matchRI: 0x24e3, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eae00002eba},
			deviceTuple{type64: 0x38400000391, brand64: 0x2114c00021151, matchRI: 0x24f0, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eba00002ebf},
			deviceTuple{type64: 0x24700000251, brand64: 0x2117c00021184, matchRI: -0x0001, match64: 0x211840002118c, modelSI: -0x0001, models64: 0x2ebf00002eea},
			deviceTuple{type64: 0x24300000245, brand64: 0x212bd000212c2, matchRI: 0x2520, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eea00002eec},
			deviceTuple{type64: 0x24700000251, brand64: 0x212f1000212f7, matchRI: 0x2521, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eec00002f05},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2144d00021452, matchRI: 0x252d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f0500002f07},
			deviceTuple{type64: 0x24300000245, brand64: 0x2147100021476, matchRI: 0x252f, match64: 0x00000000, modelSI: 0x2f07, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x214760002147e, matchRI: 0x2530, match64: 0x00000000, modelSI: 0x2f08, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2148900021491, matchRI: 0x2531, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f0900002f19},
			deviceTuple{type64: 0x5da000005e7, brand64: 0x2153000021539, matchRI: 0x2541, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f1900002f20},
			deviceTuple{type64: 0x24300000245, brand64: 0x215860002158d, matchRI: -0x0001, match64: 0x215860002158d, modelSI: -0x0001, models64: 0x2f2000002f23},
			deviceTuple{type64: 0x24300000245, brand64: 0x215950002159a, matchRI: 0x254b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f2300002f2b},
			deviceTuple{type64: 0x24700000251, brand64: 0x215fd00021603, matchRI: 0x254d, match64: 0x00000000, modelSI: 0x2f2b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2160300021607, matchRI: -0x0001, match64: 0x216070002160e, modelSI: -0x0001, models64: 0x2f2c00002f2d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8a0e00008a13, matchRI: 0x254f, match64: 0x00000000, modelSI: 0x2f2d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2160e00021613, matchRI: 0x2550, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f2e00002f32},
			deviceTuple{type64: 0x24700000251, brand64: 0x2161f00021624, matchRI: 0x2555, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f3200002f34},
			deviceTuple{type64: 0x24300000245, brand64: 0x2162800021639, matchRI: 0x2558, match64: 0x00000000, modelSI: 0x2f34, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x216430002164f, matchRI: 0x2559, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f3500002f37},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2166900021674, matchRI: 0x255a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f3700002f3a},
			deviceTuple{type64: 0x38400000391, brand64: 0x216bb000216c3, matchRI: 0x255d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f3a00002f3d},
			deviceTuple{type64: 0x24300000245, brand64: 0x216c3000216c9, matchRI: 0x2561, match64: 0x00000000, modelSI: 0x2f3d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x216c9000216cf, matchRI: 0x2562, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f3e00002f44},
			deviceTuple{type64: 0x24700000251, brand64: 0x216e6000216eb, matchRI: 0x2568, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f4400002f52},
			deviceTuple{type64: 0x24700000251, brand64: 0x217480002174c, matchRI: 0x2577, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f52000030ea},
			deviceTuple{type64: 0x24300000245, brand64: 0x222b9000222be, matchRI: 0x269a, match64: 0x00000000, modelSI: -0x0001, models64: 0x30ea000030ef},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x222d2000222d7, matchRI: 0x269d, match64: 0x00000000, modelSI: -0x0001, models64: 0x30ef000030f1},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x222ec000222f3, matchRI: 0x26a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x30f1000030f3},
			deviceTuple{type64: 0x24700000251, brand64: 0x223020002230a, matchRI: 0x26a2, match64: 0x00000000, modelSI: -0x0001, models64: 0x30f300003129},
			deviceTuple{type64: 0x24700000251, brand64: 0x2260100022606, matchRI: -0x0001, match64: 0x2260600022611, modelSI: -0x0001, models64: 0x31290000312a},
			deviceTuple{type64: 0x24700000251, brand64: 0xfedf0000fee3, matchRI: 0x26ba, match64: 0x00000000, modelSI: 0x312a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2261100022617, matchRI: 0x26bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x312b00003147},
			deviceTuple{type64: 0x24300000245, brand64: 0x2270f00022715, matchRI: 0x26d4, match64: 0x00000000, modelSI: -0x0001, models64: 0x31470000314f},
			deviceTuple{type64: 0x24700000251, brand64: 0x2274a00022750, matchRI: 0x26dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x314f00003151},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x227580002275e, matchRI: 0x26df, match64: 0x00000000, modelSI: -0x0001, models64: 0x315100003155},
			deviceTuple{type64: 0x24300000245, brand64: 0x227ad000227b2, matchRI: 0x26e0, match64: 0x00000000, modelSI: 0x3155, models64: 0x00000000},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x227b2000227b8, matchRI: 0x26e1, match64: 0x00000000, modelSI: 0x3156, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xd4ee0000d4f4, matchRI: 0x26e2, match64: 0x00000000, modelSI: -0x0001, models64: 0x315700003161},
			deviceTuple{type64: 0x24700000251, brand64: 0x2280a0002280e, matchRI: 0x26e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x316100003164},
			deviceTuple{type64: 0x38400000391, brand64: 0x2280e00022814, matchRI: 0x26ed, match64: 0x00000000, modelSI: 0x3164, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2281400022818, matchRI: 0x26ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x316500003168},
			deviceTuple{type64: 0x24700000251, brand64: 0x2281e00022824, matchRI: 0x26f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x316800003173},
			deviceTuple{type64: 0x24700000251, brand64: 0x2287100022875, matchRI: 0x26fb, match64: 0x00000000, modelSI: -0x0001, models64: 0x31730000317d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x228de000228e7, matchRI: 0x2702, match64: 0x00000000, modelSI: 0x317d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xd51c0000d522, matchRI: 0x2703, match64: 0x00000000, modelSI: -0x0001, models64: 0x317e00003181},
			deviceTuple{type64: 0x24700000251, brand64: 0x228f900022900, matchRI: 0x2707, match64: 0x00000000, modelSI: -0x0001, models64: 0x318100003182},
			deviceTuple{type64: 0x285a00002862, brand64: 0x229090002290c, matchRI: 0x2709, match64: 0x00000000, modelSI: -0x0001, models64: 0x318200003184},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2292100022924, matchRI: 0x270b, match64: 0x00000000, modelSI: 0x3184, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2292400022929, matchRI: 0x270c, match64: 0x00000000, modelSI: 0x3185, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x229290002292b, matchRI: 0x270d, match64: 0x00000000, modelSI: 0x3186, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2292b0002292f, matchRI: 0x270e, match64: 0x00000000, modelSI: 0x3187, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2293e00022945, matchRI: 0x270f, match64: 0x00000000, modelSI: 0x3188, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2294500022947, matchRI: 0x2710, match64: 0x00000000, modelSI: 0x3189, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x229470002294e, matchRI: 0x2711, match64: 0x00000000, modelSI: 0x318a, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2294e00022954, matchRI: 0x2712, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x229540002295a, matchRI: 0x2713, match64: 0x00000000, modelSI: -0x0001, models64: 0x318b0000319a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x22a2700022a2e, matchRI: 0x271f, match64: 0x00000000, modelSI: 0x319a, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x22a3700022a40, matchRI: 0x2720, match64: 0x00000000, modelSI: -0x0001, models64: 0x319b0000319c},
			deviceTuple{type64: 0x24300000245, brand64: 0x22a4000022a46, matchRI: 0x2722, match64: 0x00000000, modelSI: 0x319c, models64: 0x00000000},
			deviceTuple{type64: 0x8e00000099, brand64: 0x22a4600022a4e, matchRI: 0x2723, match64: 0x00000000, modelSI: 0x319d, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x22a5600022a5c, matchRI: 0x2724, match64: 0x00000000, modelSI: 0x319e, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x22a5c00022a65, matchRI: 0x2725, match64: 0x00000000, modelSI: -0x0001, models64: 0x319f000031a0},
			deviceTuple{type64: 0x24700000251, brand64: 0x22a6500022a6b, matchRI: 0x2727, match64: 0x00000000, modelSI: -0x0001, models64: 0x31a0000031a1},
			deviceTuple{type64: 0x24700000251, brand64: 0x22a7c00022a82, matchRI: 0x2728, match64: 0x00000000, modelSI: -0x0001, models64: 0x31a1000031a3},
			deviceTuple{type64: 0x24700000251, brand64: 0x22aa400022aab, matchRI: 0x2729, match64: 0x00000000, modelSI: 0x31a3, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x22aab00022aba, matchRI: 0x272a, match64: 0x00000000, modelSI: -0x0001, models64: 0x31a4000031a5},
			deviceTuple{type64: 0x24300000245, brand64: 0x22ad500022ade, matchRI: 0x272b, match64: 0x00000000, modelSI: -0x0001, models64: 0x31a5000031a6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x22ade00022ae4, matchRI: 0x272d, match64: 0x00000000, modelSI: -0x0001, models64: 0x31a6000031af},
			deviceTuple{type64: 0x24700000251, brand64: 0x22b1300022b1f, matchRI: 0x2737, match64: 0x00000000, modelSI: -0x0001, models64: 0x31af000031b0},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x22b3200022b37, matchRI: 0x2738, match64: 0x00000000, modelSI: 0x31b0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x22b3700022b3d, matchRI: 0x2739, match64: 0x00000000, modelSI: 0x31b1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x22b3d00022b42, matchRI: 0x273a, match64: 0x00000000, modelSI: -0x0001, models64: 0x31b2000031b4},
			deviceTuple{type64: 0x24700000251, brand64: 0x22b4200022b46, matchRI: 0x273d, match64: 0x00000000, modelSI: -0x0001, models64: 0x31b40000322c},
			deviceTuple{type64: 0x24700000251, brand64: 0x22f0500022f0d, matchRI: 0x279d, match64: 0x00000000, modelSI: -0x0001, models64: 0x322c00003234},
			deviceTuple{type64: 0x24700000251, brand64: 0x22f4500022f4a, matchRI: 0x27a4, match64: 0x00000000, modelSI: -0x0001, models64: 0x323400003235},
			deviceTuple{type64: 0x24700000251, brand64: 0x22f6200022f66, matchRI: 0x27a5, match64: 0x00000000, modelSI: -0x0001, models64: 0x323500003238},
			deviceTuple{type64: 0x24700000251, brand64: 0x22f7e00022f84, matchRI: 0x27a8, match64: 0x00000000, modelSI: -0x0001, models64: 0x32380000323d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x22fa500022fac, matchRI: 0x27ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x323d00003242},
			deviceTuple{type64: 0x24700000251, brand64: 0x22fb600022fbd, matchRI: 0x27b2, match64: 0x00000000, modelSI: -0x0001, models64: 0x324200003243},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x22fbd00022fc5, matchRI: -0x0001, match64: 0x22fc500022fc9, modelSI: 0x3243, models64: 0x00000000},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x22fc900022fd0, matchRI: 0x27b4, match64: 0x00000000, modelSI: 0x3244, models64: 0x00000000},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x22fd000022fd8, matchRI: 0x27b5, match64: 0x00000000, modelSI: 0x3245, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x22fd800022fde, matchRI: 0x27b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x32460000324c},
			deviceTuple{type64: 0x24700000251, brand64: 0x230160002301e, matchRI: 0x27bd, match64: 0x00000000, modelSI: 0x324c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x230250002302a, matchRI: 0x27be, match64: 0x00000000, modelSI: -0x0001, models64: 0x324d00003253},
			deviceTuple{type64: 0x38400000391, brand64: 0x230760002307a, matchRI: 0x27bf, match64: 0x00000000, modelSI: 0x3253, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2307a0002307d, matchRI: 0x27c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x325400003256},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x230ad000230b5, matchRI: 0x27c1, match64: 0x00000000, modelSI: 0x3256, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x230c3000230c9, matchRI: 0x27c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x32570000325c},
			deviceTuple{type64: 0x24700000251, brand64: 0x230df000230e4, matchRI: 0x27c8, match64: 0x00000000, modelSI: 0x325c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x230eb000230ef, matchRI: 0x27c9, match64: 0x00000000, modelSI: 0x325d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x230ef000230f7, matchRI: 0x27ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x325e00003260},
			deviceTuple{type64: 0x24700000251, brand64: 0x231140002311a, matchRI: 0x27cb, match64: 0x00000000, modelSI: -0x0001, models64: 0x326000003272},
			deviceTuple{type64: 0x24700000251, brand64: 0x231fa00023200, matchRI: 0x27d8, match64: 0x00000000, modelSI: -0x0001, models64: 0x327200003279},
			deviceTuple{type64: 0x24300000245, brand64: 0x232a4000232a7, matchRI: -0x0001, match64: 0x232a7000232af, modelSI: 0x3279, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x232b5000232b8, matchRI: 0x27da, match64: 0x00000000, modelSI: -0x0001, models64: 0x327a00003281},
			deviceTuple{type64: 0x24300000245, brand64: 0x2332c00023330, matchRI: 0x27dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2333000023334, matchRI: 0x27de, match64: 0x00000000, modelSI: -0x0001, models64: 0x328100003283},
			deviceTuple{type64: 0x24700000251, brand64: 0x2333a00023343, matchRI: 0x27e1, match64: 0x00000000, modelSI: 0x3283, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2334300023347, matchRI: 0x27e2, match64: 0x00000000, modelSI: -0x0001, models64: 0x328400003285},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x233470002334c, matchRI: 0x27e4, match64: 0x00000000, modelSI: -0x0001, models64: 0x328500003286},
			deviceTuple{type64: 0x24700000251, brand64: 0x2335c00023361, matchRI: 0x27e5, match64: 0x00000000, modelSI: -0x0001, models64: 0x328600003287},
			deviceTuple{type64: 0x8e00000099, brand64: 0x2336e00023375, matchRI: 0x27e6, match64: 0x00000000, modelSI: 0x3287, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x233750002337a, matchRI: 0x27e7, match64: 0x00000000, modelSI: 0x3288, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2337a00023382, matchRI: 0x27e8, match64: 0x00000000, modelSI: 0x3289, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2338200023387, matchRI: 0x27e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x328a0000328f},
			deviceTuple{type64: 0x5da000005e7, brand64: 0x2339e000233a4, matchRI: 0x27ed, match64: 0x00000000, modelSI: 0x328f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x233a4000233ae, matchRI: 0x27ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x329000003299},
			deviceTuple{type64: 0x24700000251, brand64: 0x233ff00023405, matchRI: 0x27f8, match64: 0x00000000, modelSI: -0x0001, models64: 0x3299000033d4},
			deviceTuple{type64: 0x24700000251, brand64: 0x2431400024318, matchRI: 0x2915, match64: 0x00000000, modelSI: -0x0001, models64: 0x33d4000033d5},
			deviceTuple{type64: 0x24700000251, brand64: 0x2431c00024320, matchRI: 0x2917, match64: 0x00000000, modelSI: -0x0001, models64: 0x33d5000033df},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x243570002435b, matchRI: 0x2922, match64: 0x00000000, modelSI: -0x0001, models64: 0x33df000033e4},
			deviceTuple{type64: 0x24700000251, brand64: 0x2439100024398, matchRI: 0x2928, match64: 0x00000000, modelSI: 0x33e4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x243980002439e, matchRI: 0x2929, match64: 0x00000000, modelSI: -0x0001, models64: 0x33e5000033e7},
			deviceTuple{type64: 0x24700000251, brand64: 0x243aa000243b0, matchRI: 0x292b, match64: 0x00000000, modelSI: -0x0001, models64: 0x33e7000033eb},
			deviceTuple{type64: 0x24700000251, brand64: 0x243cb000243d3, matchRI: 0x292f, match64: 0x00000000, modelSI: -0x0001, models64: 0x33eb000033ef},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2440400024409, matchRI: 0x2931, match64: 0x00000000, modelSI: 0x33ef, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2441000024415, matchRI: -0x0001, match64: 0x244150002441b, modelSI: -0x0001, models64: 0x33f0000033f3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2442900024432, matchRI: 0x2935, match64: 0x00000000, modelSI: 0x33f3, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2443200024437, matchRI: 0x2936, match64: 0x00000000, modelSI: -0x0001, models64: 0x33f4000033f5},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2444b00024451, matchRI: 0x2937, match64: 0x00000000, modelSI: -0x0001, models64: 0x33f5000033f7},
			deviceTuple{type64: 0x24700000251, brand64: 0x2445100024457, matchRI: 0x293a, match64: 0x00000000, modelSI: 0x33f7, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x244570002445b, matchRI: 0x293b, match64: 0x00000000, modelSI: -0x0001, models64: 0x33f8000033fe},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x244a9000244af, matchRI: 0x293e, match64: 0x00000000, modelSI: 0x33fe, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x244af000244b5, matchRI: 0x293f, match64: 0x00000000, modelSI: 0x33ff, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x244b5000244bb, matchRI: 0x2940, match64: 0x00000000, modelSI: -0x0001, models64: 0x340000003404},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x244f7000244fd, matchRI: 0x2944, match64: 0x00000000, modelSI: -0x0001, models64: 0x340400003414},
			deviceTuple{type64: 0x24700000251, brand64: 0x246080002460b, matchRI: 0x2948, match64: 0x00000000, modelSI: -0x0001, models64: 0x341400003418},
			deviceTuple{type64: 0x24700000251, brand64: 0x2463a00024640, matchRI: 0x294a, match64: 0x00000000, modelSI: -0x0001, models64: 0x34180000341a},
			deviceTuple{type64: 0x24700000251, brand64: 0x2464000024644, matchRI: 0x294d, match64: 0x00000000, modelSI: -0x0001, models64: 0x341a0000342a},
			deviceTuple{type64: 0x24300000245, brand64: 0x246f4000246fb, matchRI: 0x2954, match64: 0x00000000, modelSI: 0x342a, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2470200024706, matchRI: 0x2955, match64: 0x00000000, modelSI: 0x342b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x247060002470a, matchRI: 0x2956, match64: 0x00000000, modelSI: -0x0001, models64: 0x342c0000342e},
			deviceTuple{type64: 0x24300000245, brand64: 0x247160002471b, matchRI: 0x2959, match64: 0x00000000, modelSI: -0x0001, models64: 0x342e0000342f},
			deviceTuple{type64: 0x24300000245, brand64: 0x2472200024728, matchRI: 0x295b, match64: 0x00000000, modelSI: -0x0001, models64: 0x342f00003430},
			deviceTuple{type64: 0x24700000251, brand64: 0x2472f00024734, matchRI: 0x295d, match64: 0x00000000, modelSI: -0x0001, models64: 0x343000003432},
			deviceTuple{type64: 0x24700000251, brand64: 0x2473400024736, matchRI: 0x2960, match64: 0x00000000, modelSI: -0x0001, models64: 0x34320000343c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2478000024787, matchRI: 0x296a, match64: 0x00000000, modelSI: -0x0001, models64: 0x343c0000343d},
			deviceTuple{type64: 0x24700000251, brand64: 0x247870002478e, matchRI: 0x296c, match64: 0x00000000, modelSI: -0x0001, models64: 0x343d0000343e},
			deviceTuple{type64: 0x24300000245, brand64: 0x247960002479a, matchRI: 0x296e, match64: 0x00000000, modelSI: -0x0001, models64: 0x343e0000343f},
			deviceTuple{type64: 0x24700000251, brand64: 0x247a0000247a5, matchRI: 0x2970, match64: 0x00000000, modelSI: -0x0001, models64: 0x343f00003442},
			deviceTuple{type64: 0x24700000251, brand64: 0x247aa000247af, matchRI: 0x2973, match64: 0x00000000, modelSI: 0x3442, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x247af000247b4, matchRI: 0x2974, match64: 0x00000000, modelSI: 0x3443, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x247b4000247b8, matchRI: 0x2975, match64: 0x00000000, modelSI: -0x0001, models64: 0x34440000345c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2490d00024912, matchRI: 0x298b, match64: 0x00000000, modelSI: -0x0001, models64: 0x345c0000345d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2491200024915, matchRI: 0x298d, match64: 0x00000000, modelSI: 0x345d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2491500024918, matchRI: 0x298e, match64: 0x00000000, modelSI: -0x0001, models64: 0x345e00003581},
			deviceTuple{type64: 0x24700000251, brand64: 0x2560f00025612, matchRI: 0x2a55, match64: 0x00000000, modelSI: -0x0001, models64: 0x3581000035a2},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2573d00025740, matchRI: 0x2a67, match64: 0x00000000, modelSI: 0x35a2, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2574000025745, matchRI: 0x2a68, match64: 0x00000000, modelSI: 0x35a3, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x257450002574c, matchRI: 0x2a69, match64: 0x00000000, modelSI: 0x35a4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2574c00025751, matchRI: 0x2a6a, match64: 0x00000000, modelSI: -0x0001, models64: 0x35a5000035ab},
			deviceTuple{type64: 0x24300000245, brand64: 0x257a4000257aa, matchRI: 0x2a6d, match64: 0x00000000, modelSI: 0x35ab, models64: 0x00000000},
			deviceTuple{type64: 0x285a00002862, brand64: 0x257aa000257b1, matchRI: 0x2a6e, match64: 0x00000000, modelSI: -0x0001, models64: 0x35ac000035ae},
			deviceTuple{type64: 0x24700000251, brand64: 0x257c8000257cd, matchRI: 0x2a70, match64: 0x00000000, modelSI: -0x0001, models64: 0x35ae000035b2},
			deviceTuple{type64: 0x24700000251, brand64: 0x257cd000257d3, matchRI: -0x0001, match64: 0x257d3000257d9, modelSI: -0x0001, models64: 0x35b2000035b3},
			deviceTuple{type64: 0x24700000251, brand64: 0x257d9000257de, matchRI: 0x2a76, match64: 0x00000000, modelSI: -0x0001, models64: 0x35b3000035b5},
			deviceTuple{type64: 0x24700000251, brand64: 0x257de000257e1, matchRI: 0x2a79, match64: 0x00000000, modelSI: -0x0001, models64: 0x35b5000035c4},
			deviceTuple{type64: 0x24700000251, brand64: 0x258950002589a, matchRI: 0x2a88, match64: 0x00000000, modelSI: -0x0001, models64: 0x35c4000035c9},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x258cf000258d8, matchRI: 0x2a89, match64: 0x00000000, modelSI: -0x0001, models64: 0x35c9000035ca},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x258e2000258e8, matchRI: 0x2a8b, match64: 0x00000000, modelSI: 0x35ca, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x258ec000258f1, matchRI: 0x2a8c, match64: 0x00000000, modelSI: 0x35cb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x258f1000258f5, matchRI: 0x2a8d, match64: 0x00000000, modelSI: -0x0001, models64: 0x35cc000035cd},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2590200025907, matchRI: 0x2a8e, match64: 0x00000000, modelSI: -0x0001, models64: 0x35cd000035cf},
			deviceTuple{type64: 0x24700000251, brand64: 0x2594000025944, matchRI: 0x2a8f, match64: 0x00000000, modelSI: -0x0001, models64: 0x35cf000035d5},
			deviceTuple{type64: 0x38400000391, brand64: 0x259780002597d, matchRI: 0x2a95, match64: 0x00000000, modelSI: -0x0001, models64: 0x35d5000035d7},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x259870002598c, matchRI: 0x2a97, match64: 0x00000000, modelSI: -0x0001, models64: 0x35d7000035d8},
			deviceTuple{type64: 0x24700000251, brand64: 0x137570001375b, matchRI: 0x2a99, match64: 0x00000000, modelSI: 0x35d8, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2598c00025995, matchRI: 0x2a9a, match64: 0x00000000, modelSI: 0x35d9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2599500025999, matchRI: 0x2a9b, match64: 0x00000000, modelSI: -0x0001, models64: 0x35da000035f4},
			deviceTuple{type64: 0x24700000251, brand64: 0x25a4d00025a51, matchRI: 0x2ab6, match64: 0x00000000, modelSI: -0x0001, models64: 0x35f400003615},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x25c0600025c0a, matchRI: 0x2ac2, match64: 0x00000000, modelSI: -0x0001, models64: 0x36150000361a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x25c1200025c17, matchRI: -0x0001, match64: 0x25c1700025c1c, modelSI: 0x361a, models64: 0x00000000},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x25c1c00025c26, matchRI: -0x0001, match64: 0x25c2600025c30, modelSI: -0x0001, models64: 0x361b0000361c},
			deviceTuple{type64: 0x24700000251, brand64: 0x25c3000025c36, matchRI: 0x2ac9, match64: 0x00000000, modelSI: -0x0001, models64: 0x361c0000361f},
			deviceTuple{type64: 0x24700000251, brand64: 0x25c4700025c4a, matchRI: 0x2acb, match64: 0x00000000, modelSI: 0x361f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x25c5300025c57, matchRI: 0x2acc, match64: 0x00000000, modelSI: -0x0001, models64: 0x362000003625},
			deviceTuple{type64: 0x24700000251, brand64: 0x25cb400025cb6, matchRI: 0x2ace, match64: 0x00000000, modelSI: -0x0001, models64: 0x3625000036f1},
			deviceTuple{type64: 0x24700000251, brand64: 0x262560002625b, matchRI: 0x2b83, match64: 0x00000000, modelSI: -0x0001, models64: 0x36f1000036f3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x262760002627b, matchRI: 0x2b85, match64: 0x00000000, modelSI: -0x0001, models64: 0x36f3000036ff},
			deviceTuple{type64: 0x24700000251, brand64: 0x2638b00026391, matchRI: 0x2b8b, match64: 0x00000000, modelSI: 0x36ff, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2639100026395, matchRI: 0x2b8c, match64: 0x00000000, modelSI: 0x3700, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2639500026399, matchRI: 0x2b8d, match64: 0x00000000, modelSI: 0x3701, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x26399000263a1, matchRI: 0x2b8e, match64: 0x00000000, modelSI: -0x0001, models64: 0x370200003704},
			deviceTuple{type64: 0x24700000251, brand64: 0x263b9000263be, matchRI: 0x2b90, match64: 0x00000000, modelSI: -0x0001, models64: 0x37040000370d},
			deviceTuple{type64: 0x38400000391, brand64: 0x263ff00026405, matchRI: 0x2b9a, match64: 0x00000000, modelSI: 0x370d, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x264050002640d, matchRI: 0x2b9b, match64: 0x00000000, modelSI: -0x0001, models64: 0x370e00003718},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2645400026459, matchRI: 0x2ba4, match64: 0x00000000, modelSI: -0x0001, models64: 0x371800003727},
			deviceTuple{type64: 0x24700000251, brand64: 0x2651000026516, matchRI: 0x2baf, match64: 0x00000000, modelSI: -0x0001, models64: 0x372700003729},
			deviceTuple{type64: 0x24700000251, brand64: 0x265160002651b, matchRI: 0x2bb2, match64: 0x00000000, modelSI: -0x0001, models64: 0x372900003733},
			deviceTuple{type64: 0x6c9000006d3, brand64: 0x265690002656e, matchRI: 0x2bba, match64: 0x00000000, modelSI: 0x3733, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2656e00026573, matchRI: 0x2bbb, match64: 0x00000000, modelSI: 0x3734, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2657d00026583, matchRI: 0x2bbc, match64: 0x00000000, modelSI: -0x0001, models64: 0x373500003738},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x265a4000265a8, matchRI: 0x2bbe, match64: 0x00000000, modelSI: -0x0001, models64: 0x37380000373a},
			deviceTuple{type64: 0x24700000251, brand64: 0x265b2000265b7, matchRI: 0x2bc1, match64: 0x00000000, modelSI: -0x0001, models64: 0x373a00003761},
			deviceTuple{type64: 0x38400000391, brand64: 0x2693100026936, matchRI: 0x2bcd, match64: 0x00000000, modelSI: 0x3761, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x269360002693a, matchRI: 0x2bce, match64: 0x00000000, modelSI: 0x3762, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2693a00026940, matchRI: 0x2bcf, match64: 0x00000000, modelSI: 0x3763, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2694b0002694e, matchRI: 0x2bd0, match64: 0x00000000, modelSI: -0x0001, models64: 0x376400003766},
			deviceTuple{type64: 0x24300000245, brand64: 0x2694e00026953, matchRI: 0x2bd3, match64: 0x00000000, modelSI: 0x3766, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2695300026958, matchRI: 0x2bd4, match64: 0x00000000, modelSI: -0x0001, models64: 0x37670000376d},
			deviceTuple{type64: 0x24700000251, brand64: 0x2698f00026992, matchRI: 0x2bd9, match64: 0x00000000, modelSI: -0x0001, models64: 0x376d00003771},
			deviceTuple{type64: 0x24700000251, brand64: 0x269c0000269c4, matchRI: 0x2bdc, match64: 0x00000000, modelSI: 0x3771, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x269c4000269c9, matchRI: 0x2bdd, match64: 0x00000000, modelSI: -0x0001, models64: 0x377200003775},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x26a0100026a05, matchRI: 0x2bde, match64: 0x00000000, modelSI: -0x0001, models64: 0x377500003777},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x26a0d00026a12, matchRI: 0x2be1, match64: 0x00000000, modelSI: 0x3777, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x26a1200026a17, matchRI: 0x2be2, match64: 0x00000000, modelSI: -0x0001, models64: 0x377800003779},
			deviceTuple{type64: 0x24700000251, brand64: 0x26a2700026a2b, matchRI: 0x2be3, match64: 0x00000000, modelSI: -0x0001, models64: 0x37790000377f},
			deviceTuple{type64: 0x24700000251, brand64: 0x26a4600026a50, matchRI: 0x2bea, match64: 0x00000000, modelSI: -0x0001, models64: 0x377f00003782},
			deviceTuple{type64: 0x24700000251, brand64: 0x26a6e00026a74, matchRI: 0x2beb, match64: 0x00000000, modelSI: -0x0001, models64: 0x378200003789},
			deviceTuple{type64: 0x24700000251, brand64: 0x26aa600026aae, matchRI: 0x2bf0, match64: 0x00000000, modelSI: 0x3789, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x26aae00026ab5, matchRI: -0x0001, match64: 0x26ab500026abc, modelSI: -0x0001, models64: 0x378a0000378b},
			deviceTuple{type64: 0x24700000251, brand64: 0x26abc00026ac0, matchRI: 0x2bf2, match64: 0x00000000, modelSI: -0x0001, models64: 0x378b000037a2},
			deviceTuple{type64: 0x24700000251, brand64: 0x26bf100026bf5, matchRI: 0x2bf9, match64: 0x00000000, modelSI: 0x37a2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x26bf500026bfd, matchRI: 0x2bfa, match64: 0x00000000, modelSI: 0x37a3, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x26c0500026c0b, matchRI: 0x2bfb, match64: 0x00000000, modelSI: 0x37a4, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x26c0b00026c10, matchRI: 0x2bfc, match64: 0x00000000, modelSI: -0x0001, models64: 0x37a5000037a8},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x26c1900026c1e, matchRI: 0x2c00, match64: 0x00000000, modelSI: -0x0001, models64: 0x37a8000037aa},
			deviceTuple{type64: 0x24700000251, brand64: 0x26c1e00026c23, matchRI: 0x2c03, match64: 0x00000000, modelSI: -0x0001, models64: 0x37aa000037b2},
			deviceTuple{type64: 0x24700000251, brand64: 0x26c3d00026c49, matchRI: 0x2c0c, match64: 0x00000000, modelSI: -0x0001, models64: 0x37b2000037b4},
			deviceTuple{type64: 0x24700000251, brand64: 0x26c4e00026c53, matchRI: 0x2c0f, match64: 0x00000000, modelSI: 0x37b4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x26c5300026c57, matchRI: 0x2c10, match64: 0x00000000, modelSI: -0x0001, models64: 0x37b500003817},
			deviceTuple{type64: 0x24700000251, brand64: 0x26f9000026f96, matchRI: 0x2c27, match64: 0x00000000, modelSI: 0x3817, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x26f9d00026fa0, matchRI: 0x2c28, match64: 0x00000000, modelSI: -0x0001, models64: 0x38180000381a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x26fa800026fad, matchRI: 0x2c2b, match64: 0x00000000, modelSI: -0x0001, models64: 0x381a0000381c},
			deviceTuple{type64: 0x24700000251, brand64: 0x26fc300026fc9, matchRI: 0x2c2d, match64: 0x00000000, modelSI: -0x0001, models64: 0x381c00003822},
			deviceTuple{type64: 0x24700000251, brand64: 0x26ffd00027005, matchRI: 0x2c31, match64: 0x00000000, modelSI: -0x0001, models64: 0x382200003823},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x270050002700b, matchRI: 0x2c33, match64: 0x00000000, modelSI: 0x3823, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2700b0002700f, matchRI: 0x2c34, match64: 0x00000000, modelSI: 0x3824, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2700f00027016, matchRI: 0x2c35, match64: 0x00000000, modelSI: -0x0001, models64: 0x382500003827},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2702f00027035, matchRI: 0x2c38, match64: 0x00000000, modelSI: 0x3827, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x270350002703a, matchRI: 0x2c39, match64: 0x00000000, modelSI: -0x0001, models64: 0x382800003829},
			deviceTuple{type64: 0x24700000251, brand64: 0x270480002704c, matchRI: 0x2c3b, match64: 0x00000000, modelSI: -0x0001, models64: 0x38290000382c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x270690002706f, matchRI: -0x0001, match64: 0x2706f00027075, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x270750002707b, matchRI: 0x2c3e, match64: 0x00000000, modelSI: 0x382c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2707b00027081, matchRI: 0x2c3f, match64: 0x00000000, modelSI: -0x0001, models64: 0x382d00003831},
			deviceTuple{type64: 0x24700000251, brand64: 0x2709500027099, matchRI: 0x2c43, match64: 0x00000000, modelSI: 0x3831, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x27099000270a5, matchRI: 0x2c44, match64: 0x00000000, modelSI: -0x0001, models64: 0x38320000384d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x272390002723d, matchRI: 0x2c55, match64: 0x00000000, modelSI: 0x384d, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2723d00027244, matchRI: 0x2c56, match64: 0x00000000, modelSI: -0x0001, models64: 0x384e00003851},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2724e00027257, matchRI: 0x2c5a, match64: 0x00000000, modelSI: -0x0001, models64: 0x385100003852},
			deviceTuple{type64: 0x24700000251, brand64: 0x272570002725f, matchRI: 0x2c5c, match64: 0x00000000, modelSI: 0x3852, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2725f00027266, matchRI: 0x2c5d, match64: 0x00000000, modelSI: -0x0001, models64: 0x385300003854},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2728300027288, matchRI: 0x2c5e, match64: 0x00000000, modelSI: -0x0001, models64: 0x385400003887},
			deviceTuple{type64: 0x24700000251, brand64: 0x275e0000275e8, matchRI: 0x2c72, match64: 0x00000000, modelSI: -0x0001, models64: 0x388700003889},
			deviceTuple{type64: 0x24700000251, brand64: 0x275ee000275f2, matchRI: 0x2c75, match64: 0x00000000, modelSI: -0x0001, models64: 0x388900003892},
		},
		// notebooks.yml
		{
			deviceTuple{type64: 0xb6500000b6c, brand64: 0x89400000898, matchRI: 0x2c7c, match64: 0x00000000, modelSI: -0x0001, models64: 0x389200003895},
			deviceTuple{type64: 0xb6500000b6c, brand64: 0x276510002765a, matchRI: 0x2c80, match64: 0x00000000, modelSI: -0x0001, models64: 0x389500003899},
			deviceTuple{type64: 0xb6500000b6c, brand64: 0x3c9a00003c9e, matchRI: 0x2c85, match64: 0x00000000, modelSI: -0x0001, models64: 0x3899000038a2},
			deviceTuple{type64: 0xb6500000b6c, brand64: 0x73e7000073eb, matchRI: 0x2c8f, match64: 0x00000000, modelSI: -0x0001, models64: 0x38a2000038a6},
			deviceTuple{type64: 0xb6500000b6c, brand64: 0xa7270000a729, matchRI: 0x2c90, match64: 0x00000000, modelSI: -0x0001, models64: 0x38a6000038b1},
			deviceTuple{type64: 0xb6500000b6c, brand64: 0x10d8900010d8f, matchRI: 0x2c93, match64: 0x00000000, modelSI: -0x0001, models64: 0x38b1000038b5},
			deviceTuple{type64: 0xb6500000b6c, brand64: 0x1cd020001cd0b, matchRI: 0x2c98, match64: 0x00000000, modelSI: 0x38b5, models64: 0x00000000},
			deviceTuple{type64: 0xb6500000b6c, brand64: 0x1fbc90001fbd0, matchRI: 0x2c99, match64: 0x00000000, modelSI: 0x38b6, models64: 0x00000000},
			deviceTuple{type64: 0xb6500000b6c, brand64: 0x1ff050001ff0c, matchRI: -0x0001, match64: 0x2790300027912, modelSI: -0x0001, models64: 0x38b7000038b9},
		},
		// portable_media_player.yml
		{
			deviceTuple{type64: 0xae980000aead, brand64: 0x283f00002844, matchRI: 0x2c9c, match64: 0x00000000, modelSI: -0x0001, models64: 0x38b9000038c1},
			deviceTuple{type64: 0xae980000aead, brand64: 0x2797200027977, matchRI: 0x2ca5, match64: 0x00000000, modelSI: 0x38c1, models64: 0x00000000},
			deviceTuple{type64: 0xae980000aead, brand64: 0x279770002797b, matchRI: -0x0001, match64: 0x279770002797b, modelSI: -0x0001, models64: 0x38c2000038c4},
			deviceTuple{type64: 0xae980000aead, brand64: 0x279870002798c, matchRI: 0x2ca7, match64: 0x00000000, modelSI: 0x38c4, models64: 0x00000000},
			deviceTuple{type64: 0xae980000aead, brand64: 0x12f00000138, matchRI: -0x0001, match64: 0x2798c0002799c, modelSI: 0x38c5, models64: 0x00000000},
			deviceTuple{type64: 0xae980000aead, brand64: 0x279a3000279a9, matchRI: 0x2ca8, match64: 0x00000000, modelSI: 0x38c6, models64: 0x00000000},
			deviceTuple{type64: 0xae980000aead, brand64: 0x175d2000175db, matchRI: 0x2ca9, match64: 0x00000000, modelSI: 0x38c7, models64: 0x00000000},
			deviceTuple{type64: 0xae980000aead, brand64: 0x279a9000279ae, matchRI: 0x2caa, match64: 0x00000000, modelSI: -0x0001, models64: 0x38c8000038d0},
			deviceTuple{type64: 0xae980000aead, brand64: 0x180000001f, matchRI: 0x2cb3, match64: 0x00000000, modelSI: -0x0001, models64: 0x38d0000038d7},
			deviceTuple{type64: 0xae980000aead, brand64: 0x27a6b00027a73, matchRI: -0x0001, match64: 0x27a7300027a7e, modelSI: -0x0001, models64: 0x38d7000038d8},
			deviceTuple{type64: 0xae980000aead, brand64: 0x27a7e00027a85, matchRI: 0x2cb6, match64: 0x00000000, modelSI: 0x38d8, models64: 0x00000000},
			deviceTuple{type64: 0xae980000aead, brand64: 0x27a8500027a8d, matchRI: 0x2cb7, match64: 0x00000000, modelSI: 0x38d9, models64: 0x00000000},
			deviceTuple{type64: 0xae980000aead, brand64: 0x27a8d00027a91, matchRI: 0x2cb8, match64: 0x00000000, modelSI: 0x38da, models64: 0x00000000},
		},
		// shell_tv.yml
		{
			deviceTuple{type64: 0x24300000245, brand64: 0x27a9100027a96, matchRI: -0x0001, match64: 0x27a9600027aa1, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x51f00000523, matchRI: -0x0001, match64: 0x27aa100027aab, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x460500004608, matchRI: -0x0001, match64: 0x27aab00027ab4, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x6fec00006ff0, matchRI: -0x0001, match64: 0x27ab400027abe, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x74fb00007500, matchRI: -0x0001, match64: 0x27abe00027ac9, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x7d6900007d6d, matchRI: -0x0001, match64: 0x27ac900027ad3, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x84640000846b, matchRI: 0x2cb9, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xadf20000adf4, matchRI: -0x0001, match64: 0x27ad300027adb, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xe7b80000e7bb, matchRI: -0x0001, match64: 0x27adb00027ae4, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x27ae400027ae9, matchRI: -0x0001, match64: 0x27ae900027af4, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x27af400027af9, matchRI: -0x0001, match64: 0x27af900027b04, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x10d4200010d46, matchRI: -0x0001, match64: 0x27b0400027b0e, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x27b0e00027b14, matchRI: -0x0001, match64: 0x27b1400027b20, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x11bcb00011bd0, matchRI: -0x0001, match64: 0x27b2000027b2b, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x147fb00014802, matchRI: -0x0001, match64: 0x27b2b00027b38, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1566400015669, matchRI: -0x0001, match64: 0x27b3800027b43, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x18da600018db1, matchRI: -0x0001, match64: 0x27b4300027b4b, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1e7800001e788, matchRI: -0x0001, match64: 0x27b4b00027b59, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ea790001ea7e, matchRI: -0x0001, match64: 0x27b5900027b64, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ecf90001ecfc, matchRI: -0x0001, match64: 0x27b6400027b6c, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fa4b0001fa55, matchRI: -0x0001, match64: 0x27b6c00027b7c, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fbc90001fbd0, matchRI: -0x0001, match64: 0x27b7c00027b85, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x247960002479a, matchRI: -0x0001, match64: 0x27b8500027b8f, modelSI: -0x0001, models64: 0x00000000},
		},
		// televisions.yml
		{
			deviceTuple{type64: 0x24300000245, brand64: 0x4fa00000503, matchRI: 0x2cba, match64: 0x00000000, modelSI: -0x0001, models64: 0x38db000038dc},
			deviceTuple{type64: 0x24300000245, brand64: 0x5030000050c, matchRI: 0x2cbc, match64: 0x00000000, modelSI: -0x0001, models64: 0x38dc000038dd},
			deviceTuple{type64: 0x24300000245, brand64: 0x5cb000005ce, matchRI: -0x0001, match64: 0x5cb000005ce, modelSI: -0x0001, models64: 0x38dd000038de},
			deviceTuple{type64: 0x24300000245, brand64: 0x5ef000005f4, matchRI: 0x2cbf, match64: 0x00000000, modelSI: -0x0001, models64: 0x38de000038df},
			deviceTuple{type64: 0x24300000245, brand64: 0x7470000074b, matchRI: -0x0001, match64: 0x27b9900027ba9, modelSI: -0x0001, models64: 0x38df000038e0},
			deviceTuple{type64: 0x24300000245, brand64: 0x27ba900027bad, matchRI: -0x0001, match64: 0x27bad00027bbc, modelSI: -0x0001, models64: 0x38e0000038e1},
			deviceTuple{type64: 0x24300000245, brand64: 0x27bbc00027bbf, matchRI: 0x2cc2, match64: 0x00000000, modelSI: -0x0001, models64: 0x38e1000038e2},
			deviceTuple{type64: 0x24300000245, brand64: 0x27bbf00027bc6, matchRI: -0x0001, match64: 0x27bbf00027bc6, modelSI: -0x0001, models64: 0x38e2000038e3},
			deviceTuple{type64: 0x24300000245, brand64: 0xeae00000eb2, matchRI: -0x0001, match64: 0x27bc600027bd1, modelSI: -0x0001, models64: 0x38e3000038e4},
			deviceTuple{type64: 0x24300000245, brand64: 0x27bd100027bdb, matchRI: -0x0001, match64: 0x27bd100027bdb, modelSI: -0x0001, models64: 0x38e4000038e5},
			deviceTuple{type64: 0x24300000245, brand64: 0x234400002349, matchRI: 0x2cc7, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x23490000234f, matchRI: 0x2cc8, match64: 0x00000000, modelSI: -0x0001, models64: 0x38e5000038e6},
			deviceTuple{type64: 0x24300000245, brand64: 0x3bc500003bcd, matchRI: -0x0001, match64: 0x3bcd00003bd4, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x27bdb00027bed, matchRI: 0x2cca, match64: 0x00000000, modelSI: -0x0001, models64: 0x38e6000038e7},
			deviceTuple{type64: 0x24300000245, brand64: 0x437a0000437f, matchRI: -0x0001, match64: 0x27bed00027bf2, modelSI: -0x0001, models64: 0x38e7000038e8},
			deviceTuple{type64: 0x24300000245, brand64: 0x27bf900027c04, matchRI: -0x0001, match64: 0x27c0400027c0f, modelSI: 0x38e8, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x47da000047de, matchRI: 0x2ccc, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x4b4600004b4f, matchRI: 0x2ccd, match64: 0x00000000, modelSI: -0x0001, models64: 0x38e9000038ea},
			deviceTuple{type64: 0x24300000245, brand64: 0x53360000533c, matchRI: 0x2cce, match64: 0x00000000, modelSI: -0x0001, models64: 0x38ea000038eb},
			deviceTuple{type64: 0x24300000245, brand64: 0x566b0000566f, matchRI: 0x2cd0, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x27c2500027c2c, matchRI: 0x2cd1, match64: 0x00000000, modelSI: -0x0001, models64: 0x38eb000038ec},
			deviceTuple{type64: 0x24300000245, brand64: 0x27c2c00027c33, matchRI: 0x2cd3, match64: 0x00000000, modelSI: -0x0001, models64: 0x38ec000038ed},
			deviceTuple{type64: 0x24300000245, brand64: 0x5c8200005c88, matchRI: 0x2cd5, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x5d8800005d91, matchRI: -0x0001, match64: 0x5d8800005d91, modelSI: -0x0001, models64: 0x38ed000038ee},
			deviceTuple{type64: 0x24300000245, brand64: 0x27c3300027c45, matchRI: 0x2cd7, match64: 0x00000000, modelSI: -0x0001, models64: 0x38ee000038ef},
			deviceTuple{type64: 0x24300000245, brand64: 0x27c4500027c4c, matchRI: -0x0001, match64: 0x27c4500027c4c, modelSI: 0x38ef, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x6e9000006e95, matchRI: 0x2cd9, match64: 0x00000000, modelSI: -0x0001, models64: 0x38f0000038f1},
			deviceTuple{type64: 0x24300000245, brand64: 0x713a00007141, matchRI: -0x0001, match64: 0x27c5200027c6b, modelSI: -0x0001, models64: 0x38f1000038f2},
			deviceTuple{type64: 0x24300000245, brand64: 0x27c6b00027c70, matchRI: 0x2cdc, match64: 0x00000000, modelSI: -0x0001, models64: 0x38f2000038f3},
			deviceTuple{type64: 0x24300000245, brand64: 0x27c7000027c75, matchRI: 0x2cde, match64: 0x00000000, modelSI: -0x0001, models64: 0x38f3000038f4},
			deviceTuple{type64: 0x24300000245, brand64: 0x27c7500027c78, matchRI: -0x0001, match64: 0x27c7500027c78, modelSI: 0x38f4, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x72690000726f, matchRI: 0x2ce0, match64: 0x00000000, modelSI: -0x0001, models64: 0x38f5000038f6},
			deviceTuple{type64: 0x24300000245, brand64: 0x74a3000074ab, matchRI: 0x2ce2, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x7d0900007d0d, matchRI: -0x0001, match64: 0x27c8000027c8e, modelSI: -0x0001, models64: 0x38f6000038f7},
			deviceTuple{type64: 0x24300000245, brand64: 0x27caa00027cb6, matchRI: 0x2ce3, match64: 0x00000000, modelSI: -0x0001, models64: 0x38f7000038f8},
			deviceTuple{type64: 0x24300000245, brand64: 0x27cb600027cc0, matchRI: 0x2ce5, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x27cc000027cc8, matchRI: 0x2ce6, match64: 0x00000000, modelSI: -0x0001, models64: 0x38f8000038f9},
			deviceTuple{type64: 0x24300000245, brand64: 0x27cc800027cd3, matchRI: 0x2ce8, match64: 0x00000000, modelSI: -0x0001, models64: 0x38f9000038fa},
			deviceTuple{type64: 0x24300000245, brand64: 0x847800008482, matchRI: 0x2cea, match64: 0x00000000, modelSI: -0x0001, models64: 0x38fa000038fb},
			deviceTuple{type64: 0x24300000245, brand64: 0x27cd300027cdf, matchRI: 0x2cec, match64: 0x00000000, modelSI: -0x0001, models64: 0x38fb000038fc},
			deviceTuple{type64: 0x24300000245, brand64: 0x27ce400027ce7, matchRI: 0x2cee, match64: 0x00000000, modelSI: -0x0001, models64: 0x38fc000038fd},
			deviceTuple{type64: 0x24300000245, brand64: 0x8d1400008d1a, matchRI: 0x2cf0, match64: 0x00000000, modelSI: -0x0001, models64: 0x38fd000038fe},
			deviceTuple{type64: 0x24300000245, brand64: 0x55d00000562, matchRI: 0x2cf2, match64: 0x00000000, modelSI: -0x0001, models64: 0x38fe000038ff},
			deviceTuple{type64: 0x24300000245, brand64: 0x27ce700027cec, matchRI: 0x2cf4, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xa5730000a57a, matchRI: 0x2cf5, match64: 0x00000000, modelSI: -0x0001, models64: 0x38ff00003901},
			deviceTuple{type64: 0x24300000245, brand64: 0x27cee00027cf3, matchRI: 0x2cf7, match64: 0x00000000, modelSI: -0x0001, models64: 0x390100003902},
			deviceTuple{type64: 0x24300000245, brand64: 0xab3b0000ab40, matchRI: 0x2cf9, match64: 0x00000000, modelSI: -0x0001, models64: 0x390200003903},
			deviceTuple{type64: 0x24300000245, brand64: 0x27cfd00027d06, matchRI: 0x2cfa, match64: 0x00000000, modelSI: -0x0001, models64: 0x390300003904},
			deviceTuple{type64: 0x24300000245, brand64: 0xae850000ae8d, matchRI: 0x2cfc, match64: 0x00000000, modelSI: -0x0001, models64: 0x390400003905},
			deviceTuple{type64: 0x24300000245, brand64: 0xb0c30000b0ca, matchRI: 0x2cfe, match64: 0x00000000, modelSI: -0x0001, models64: 0x390500003913},
			deviceTuple{type64: 0x24300000245, brand64: 0xb2f10000b2f8, matchRI: 0x2d01, match64: 0x00000000, modelSI: -0x0001, models64: 0x391300003915},
			deviceTuple{type64: 0x24300000245, brand64: 0x928000009287, matchRI: 0x2d03, match64: 0x00000000, modelSI: -0x0001, models64: 0x391500003916},
			deviceTuple{type64: 0x24300000245, brand64: 0x27d7f00027d84, matchRI: 0x2d05, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xd4da0000d4df, matchRI: 0x2d06, match64: 0x00000000, modelSI: -0x0001, models64: 0x39160000391d},
			deviceTuple{type64: 0x24300000245, brand64: 0xd5ca0000d5d1, matchRI: 0x2d09, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x27dd900027ddd, matchRI: -0x0001, match64: 0x27dd900027ddd, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x27ddd00027de2, matchRI: -0x0001, match64: 0x27ddd00027de2, modelSI: -0x0001, models64: 0x391d0000391e},
			deviceTuple{type64: 0x24300000245, brand64: 0x27de200027de9, matchRI: -0x0001, match64: 0x27de200027de9, modelSI: -0x0001, models64: 0x391e00003920},
			deviceTuple{type64: 0x24300000245, brand64: 0xe7b80000e7bb, matchRI: 0x2d0d, match64: 0x00000000, modelSI: -0x0001, models64: 0x392000003921},
			deviceTuple{type64: 0x24300000245, brand64: 0x27dfa00027dfe, matchRI: 0x2d0e, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xeb9a0000eba0, matchRI: 0x2d0f, match64: 0x00000000, modelSI: -0x0001, models64: 0x392100003922},
			deviceTuple{type64: 0x24300000245, brand64: 0x27e0500027e0a, matchRI: 0x2d10, match64: 0x00000000, modelSI: -0x0001, models64: 0x392200003923},
			deviceTuple{type64: 0x24300000245, brand64: 0x27e0a00027e0f, matchRI: 0x2d12, match64: 0x00000000, modelSI: -0x0001, models64: 0x392300003924},
			deviceTuple{type64: 0x24300000245, brand64: 0xf8380000f83a, matchRI: 0x2d14, match64: 0x00000000, modelSI: -0x0001, models64: 0x392400003936},
			deviceTuple{type64: 0x24300000245, brand64: 0x27e5b00027e61, matchRI: 0x2d20, match64: 0x00000000, modelSI: -0x0001, models64: 0x393600003937},
			deviceTuple{type64: 0x24300000245, brand64: 0x1188f00011897, matchRI: 0x2d22, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x27e6100027e67, matchRI: 0x2d23, match64: 0x00000000, modelSI: -0x0001, models64: 0x393700003938},
			deviceTuple{type64: 0x24300000245, brand64: 0x118e8000118ed, matchRI: 0x2d25, match64: 0x00000000, modelSI: -0x0001, models64: 0x39380000393b},
			deviceTuple{type64: 0x24300000245, brand64: 0x11bb300011bb8, matchRI: 0x2d27, match64: 0x00000000, modelSI: -0x0001, models64: 0x393b0000393c},
			deviceTuple{type64: 0x24300000245, brand64: 0x11be500011bea, matchRI: 0x2d29, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x27e6700027e72, matchRI: 0x2d2a, match64: 0x00000000, modelSI: -0x0001, models64: 0x393c0000393d},
			deviceTuple{type64: 0x24300000245, brand64: 0x120dd000120e2, matchRI: 0x2d2c, match64: 0x00000000, modelSI: -0x0001, models64: 0x393d0000393e},
			deviceTuple{type64: 0x24300000245, brand64: 0x120e2000120e5, matchRI: 0x2d2e, match64: 0x00000000, modelSI: -0x0001, models64: 0x393e0000393f},
			deviceTuple{type64: 0x24300000245, brand64: 0x27e8700027e90, matchRI: -0x0001, match64: 0x27e8700027e90, modelSI: -0x0001, models64: 0x393f00003940},
			deviceTuple{type64: 0x24300000245, brand64: 0x27e9000027e98, matchRI: 0x2d30, match64: 0x00000000, modelSI: -0x0001, models64: 0x394000003941},
			deviceTuple{type64: 0x24300000245, brand64: 0x12bd600012bdc, matchRI: -0x0001, match64: 0x12bd600012bdc, modelSI: -0x0001, models64: 0x394100003942},
			deviceTuple{type64: 0x24300000245, brand64: 0x12da600012daa, matchRI: -0x0001, match64: 0x12da600012daa, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x133e9000133ee, matchRI: -0x0001, match64: 0x27e9800027e9d, modelSI: -0x0001, models64: 0x394200003943},
			deviceTuple{type64: 0x24300000245, brand64: 0x1340d0001341d, matchRI: 0x2d33, match64: 0x00000000, modelSI: -0x0001, models64: 0x394300003944},
			deviceTuple{type64: 0x24300000245, brand64: 0x27ea800027eac, matchRI: 0x2d35, match64: 0x00000000, modelSI: -0x0001, models64: 0x394400003945},
			deviceTuple{type64: 0x24300000245, brand64: 0x149360001493b, matchRI: 0x2d37, match64: 0x00000000, modelSI: -0x0001, models64: 0x394500003946},
			deviceTuple{type64: 0x24300000245, brand64: 0x1493b0001493f, matchRI: 0x2d39, match64: 0x00000000, modelSI: -0x0001, models64: 0x394600003947},
			deviceTuple{type64: 0x24300000245, brand64: 0x27eac00027eb4, matchRI: 0x2d3b, match64: 0x00000000, modelSI: -0x0001, models64: 0x394700003948},
			deviceTuple{type64: 0x24300000245, brand64: 0x151470001514c, matchRI: 0x2d3d, match64: 0x00000000, modelSI: -0x0001, models64: 0x394800003949},
			deviceTuple{type64: 0x24300000245, brand64: 0x155d7000155e0, matchRI: 0x2d3f, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x27eb400027ebb, matchRI: 0x2d40, match64: 0x00000000, modelSI: -0x0001, models64: 0x39490000394a},
			deviceTuple{type64: 0x24300000245, brand64: 0x15a9100015a95, matchRI: 0x2d42, match64: 0x00000000, modelSI: -0x0001, models64: 0x394a0000394b},
			deviceTuple{type64: 0x24300000245, brand64: 0x16a4700016a49, matchRI: 0x2d44, match64: 0x00000000, modelSI: -0x0001, models64: 0x394b0000394c},
			deviceTuple{type64: 0x24300000245, brand64: 0x27ebb00027ec0, matchRI: 0x2d46, match64: 0x00000000, modelSI: -0x0001, models64: 0x394c0000394d},
			deviceTuple{type64: 0x24300000245, brand64: 0x1735b0001735f, matchRI: -0x0001, match64: 0x1735b0001735f, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x174ce000174d5, matchRI: 0x2d48, match64: 0x00000000, modelSI: -0x0001, models64: 0x394d0000394f},
			deviceTuple{type64: 0x24300000245, brand64: 0x27ec000027ec8, matchRI: 0x2d4b, match64: 0x00000000, modelSI: -0x0001, models64: 0x394f00003950},
			deviceTuple{type64: 0x24300000245, brand64: 0x175d2000175db, matchRI: -0x0001, match64: 0x175d2000175db, modelSI: -0x0001, models64: 0x395000003958},
			deviceTuple{type64: 0x24300000245, brand64: 0x178750001787c, matchRI: 0x2d54, match64: 0x00000000, modelSI: -0x0001, models64: 0x39580000395a},
			deviceTuple{type64: 0x24300000245, brand64: 0x17c9c00017ca4, matchRI: 0x2d57, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x18b0900018b0f, matchRI: 0x2d58, match64: 0x00000000, modelSI: -0x0001, models64: 0x395a0000395b},
			deviceTuple{type64: 0x24300000245, brand64: 0x18eaf00018eb4, matchRI: 0x2d5a, match64: 0x00000000, modelSI: -0x0001, models64: 0x395b0000395c},
			deviceTuple{type64: 0x24300000245, brand64: 0x27ee400027ee8, matchRI: 0x2d5c, match64: 0x00000000, modelSI: -0x0001, models64: 0x395c0000395e},
			deviceTuple{type64: 0x24300000245, brand64: 0x19bec00019bef, matchRI: 0x2d5d, match64: 0x00000000, modelSI: -0x0001, models64: 0x395e0000395f},
			deviceTuple{type64: 0x24300000245, brand64: 0x27ef600027efc, matchRI: 0x2d5f, match64: 0x00000000, modelSI: -0x0001, models64: 0x395f00003960},
			deviceTuple{type64: 0x24300000245, brand64: 0x1a1830001a187, matchRI: 0x2d61, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x27efc00027f02, matchRI: 0x2d62, match64: 0x00000000, modelSI: -0x0001, models64: 0x396000003961},
			deviceTuple{type64: 0x24300000245, brand64: 0x180000001f, matchRI: 0x2d64, match64: 0x00000000, modelSI: -0x0001, models64: 0x396100003964},
			deviceTuple{type64: 0x24300000245, brand64: 0x27f1b00027f25, matchRI: -0x0001, match64: 0x27f1b00027f25, modelSI: -0x0001, models64: 0x396400003966},
			deviceTuple{type64: 0x24300000245, brand64: 0x1cf550001cf5a, matchRI: 0x2d69, match64: 0x00000000, modelSI: -0x0001, models64: 0x39660000396e},
			deviceTuple{type64: 0x24300000245, brand64: 0x27f7000027f7f, matchRI: 0x2d6e, match64: 0x00000000, modelSI: -0x0001, models64: 0x396e0000396f},
			deviceTuple{type64: 0x24300000245, brand64: 0x27f7f00027f86, matchRI: -0x0001, match64: 0x27f8600027f98, modelSI: -0x0001, models64: 0x396f00003970},
			deviceTuple{type64: 0x24300000245, brand64: 0x1d87e0001d886, matchRI: 0x2d71, match64: 0x00000000, modelSI: -0x0001, models64: 0x397000003972},
			deviceTuple{type64: 0x24300000245, brand64: 0x27fa100027fb1, matchRI: 0x2d73, match64: 0x00000000, modelSI: -0x0001, models64: 0x397200003974},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ee000001f2, matchRI: -0x0001, match64: 0x1ee000001f2, modelSI: -0x0001, models64: 0x39740000397a},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ea0c0001ea11, matchRI: 0x2d7c, match64: 0x00000000, modelSI: -0x0001, models64: 0x397a0000397d},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ecf90001ecfc, matchRI: 0x2d80, match64: 0x00000000, modelSI: -0x0001, models64: 0x397d00003980},
			deviceTuple{type64: 0x24300000245, brand64: 0x1efe30001efed, matchRI: 0x2d84, match64: 0x00000000, modelSI: -0x0001, models64: 0x398000003981},
			deviceTuple{type64: 0x24300000245, brand64: 0x27fc200027fc7, matchRI: 0x2d86, match64: 0x00000000, modelSI: -0x0001, models64: 0x398100003982},
			deviceTuple{type64: 0x24300000245, brand64: 0x1f1e20001f1eb, matchRI: -0x0001, match64: 0x1f1e20001f1eb, modelSI: -0x0001, models64: 0x398200003983},
			deviceTuple{type64: 0x24300000245, brand64: 0x27fd200027fdd, matchRI: -0x0001, match64: 0x27fd200027fdd, modelSI: -0x0001, models64: 0x398300003984},
			deviceTuple{type64: 0x24300000245, brand64: 0x27ff100027ff9, matchRI: 0x2d88, match64: 0x00000000, modelSI: -0x0001, models64: 0x398400003985},
			deviceTuple{type64: 0x24300000245, brand64: 0x27ff900028004, matchRI: -0x0001, match64: 0x27ff900028004, modelSI: -0x0001, models64: 0x398500003986},
			deviceTuple{type64: 0x24300000245, brand64: 0x1f22c0001f234, matchRI: 0x2d8b, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fa4b0001fa55, matchRI: -0x0001, match64: 0x1fa4b0001fa55, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fbc90001fbd0, matchRI: 0x2d8c, match64: 0x00000000, modelSI: -0x0001, models64: 0x39860000398d},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ff050001ff0c, matchRI: 0x2d93, match64: 0x00000000, modelSI: -0x0001, models64: 0x398d00003990},
			deviceTuple{type64: 0x24300000245, brand64: 0x2804300028054, matchRI: 0x2d96, match64: 0x00000000, modelSI: -0x0001, models64: 0x399000003991},
			deviceTuple{type64: 0x24300000245, brand64: 0x2048000020487, matchRI: 0x2d97, match64: 0x00000000, modelSI: -0x0001, models64: 0x399100003992},
			deviceTuple{type64: 0x24300000245, brand64: 0x20c3a00020c41, matchRI: 0x2d99, match64: 0x00000000, modelSI: -0x0001, models64: 0x399200003993},
			deviceTuple{type64: 0x24300000245, brand64: 0x2805c00028064, matchRI: 0x2d9b, match64: 0x00000000, modelSI: -0x0001, models64: 0x399300003994},
			deviceTuple{type64: 0x24300000245, brand64: 0x2806400028067, matchRI: 0x2d9d, match64: 0x00000000, modelSI: -0x0001, models64: 0x399400003995},
			deviceTuple{type64: 0x24300000245, brand64: 0x212f1000212f7, matchRI: 0x2d9f, match64: 0x00000000, modelSI: -0x0001, models64: 0x399500003996},
			deviceTuple{type64: 0x24300000245, brand64: 0x280670002806f, matchRI: 0x2da1, match64: 0x00000000, modelSI: -0x0001, models64: 0x399600003998},
			deviceTuple{type64: 0x24300000245, brand64: 0x2807a00028084, matchRI: 0x2da4, match64: 0x00000000, modelSI: -0x0001, models64: 0x399800003999},
			deviceTuple{type64: 0x24300000245, brand64: 0x280840002808a, matchRI: 0x2da6, match64: 0x00000000, modelSI: -0x0001, models64: 0x39990000399a},
			deviceTuple{type64: 0x24300000245, brand64: 0x2294e00022954, matchRI: 0x2da8, match64: 0x00000000, modelSI: -0x0001, models64: 0x399a0000399b},
			deviceTuple{type64: 0x24300000245, brand64: 0x2808a00028097, matchRI: 0x2daa, match64: 0x00000000, modelSI: -0x0001, models64: 0x399b0000399e},
			deviceTuple{type64: 0x24300000245, brand64: 0x280a0000280a8, matchRI: 0x2dab, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2334300023347, matchRI: 0x2dac, match64: 0x00000000, modelSI: -0x0001, models64: 0x399e0000399f},
			deviceTuple{type64: 0x24300000245, brand64: 0x233ff00023405, matchRI: 0x2dae, match64: 0x00000000, modelSI: -0x0001, models64: 0x399f000039a1},
			deviceTuple{type64: 0x24300000245, brand64: 0x280bc000280c2, matchRI: -0x0001, match64: 0x280c2000280d3, modelSI: -0x0001, models64: 0x39a1000039a2},
		},
	}
	__dr_dm = []modelTuple{
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xb00000018},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f00000027, model64: 0x2700000030},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3000000038, model64: 0x3800000045},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x450000004d, model64: 0x4d00000064},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x640000006c, model64: 0x6c0000007b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0001, match64: 0x00000000, model64: 0x7b0000008b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0003, match64: 0x00000000, model64: 0x99000000a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0005, match64: 0x00000000, model64: 0xa7000000af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6000000ca, model64: 0xca000000cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4000000e0, model64: 0xe0000000e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0007, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed000000fd, model64: 0xfd00000100},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x10d00000117},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1260000012f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13c00000149, model64: 0x13c00000149},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14900000153, model64: 0x14900000153},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1530000015b, model64: 0x1530000015b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b00000166, model64: 0x16600000170},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1380000013c, model64: 0x17000000178},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18200000186},
		modelTuple{type64: 0x2700000027, matchRI: 0x000a, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b000001af, model64: 0x1af000001b4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1c4000001cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cf000001d8, model64: 0x1cf000001d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8000001e8, model64: 0x1e8000001ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x000d, match64: 0x00000000, model64: 0x1f2000001ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff00000210, model64: 0x21000000221},
		modelTuple{type64: 0x2700000027, matchRI: 0x000e, match64: 0x00000000, model64: 0x2210000022e},
		modelTuple{type64: 0x2700000027, matchRI: 0x000f, match64: 0x00000000, model64: 0x22e0000023c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0012, match64: 0x00000000, model64: 0x2510000025d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0013, match64: 0x00000000, model64: 0x25d00000268},
		modelTuple{type64: 0x2700000027, matchRI: 0x0015, match64: 0x00000000, model64: 0x26b0000026d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0016, match64: 0x00000000, model64: 0x26d00000274},
		modelTuple{type64: 0x2700000027, matchRI: 0x0017, match64: 0x00000000, model64: 0x2740000027a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0018, match64: 0x00000000, model64: 0x27a00000281},
		modelTuple{type64: 0x2700000027, matchRI: 0x0019, match64: 0x00000000, model64: 0x28100000283},
		modelTuple{type64: 0x2700000027, matchRI: 0x001a, match64: 0x00000000, model64: 0x28300000289},
		modelTuple{type64: 0x2700000027, matchRI: 0x001b, match64: 0x00000000, model64: 0x28900000290},
		modelTuple{type64: 0x2700000027, matchRI: 0x001c, match64: 0x00000000, model64: 0x29000000292},
		modelTuple{type64: 0x2700000027, matchRI: 0x001d, match64: 0x00000000, model64: 0x29200000294},
		modelTuple{type64: 0x2700000027, matchRI: 0x001e, match64: 0x00000000, model64: 0x29400000297},
		modelTuple{type64: 0x2700000027, matchRI: 0x001f, match64: 0x00000000, model64: 0x2970000029a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0020, match64: 0x00000000, model64: 0x29a0000029d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0022, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0023, match64: 0x00000000, model64: 0x2a2000002a6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0025, match64: 0x00000000, model64: 0x2af000002b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0027, match64: 0x00000000, model64: 0x2b9000002c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0028, match64: 0x00000000, model64: 0x2c3000002cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0029, match64: 0x00000000, model64: 0x2cd000002d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2d6000002dd, model64: 0x2dd000002e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x002a, match64: 0x00000000, model64: 0x2e9000002f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x002b, match64: 0x00000000, model64: 0x2f2000002fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x002c, match64: 0x00000000, model64: 0x2fb00000306},
		modelTuple{type64: 0x2700000027, matchRI: 0x002d, match64: 0x00000000, model64: 0x30600000310},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x002f, match64: 0x00000000, model64: 0x3150000031a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0030, match64: 0x00000000, model64: 0x31a00000322},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0031, match64: 0x00000000, model64: 0x3220000032b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0032, match64: 0x00000000, model64: 0x32b00000331},
		modelTuple{type64: 0x2700000027, matchRI: 0x0033, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x33100000339, model64: 0x33900000341},
		modelTuple{type64: 0x2700000027, matchRI: 0x0034, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x34900000352},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x35a00000360, model64: 0x35a00000360},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x36000000365, model64: 0x3650000036a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x36a00000371, model64: 0x37100000378},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3780000037d, model64: 0x3780000037d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x003b, match64: 0x00000000, model64: 0x393000003a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a0000003a8, model64: 0x3a0000003a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a8000003b0, model64: 0x3a8000003b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b0000003b9, model64: 0x3b0000003b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b9000003c1, model64: 0x3c1000003c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ca000003d3, model64: 0x3d3000003d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d7000003e3, model64: 0x3e3000003ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x003c, match64: 0x00000000, model64: 0x3ea000003ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ee000003fb, model64: 0x3fb00000404},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4040000040c, model64: 0x40c0000040f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x40f00000417, model64: 0x4170000041a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41a00000425, model64: 0x4250000042b},
		modelTuple{type64: 0x2700000027, matchRI: 0x003d, match64: 0x00000000, model64: 0x42b00000432},
		modelTuple{type64: 0x2700000027, matchRI: 0x003e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x43600000439},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x44300000451, model64: 0x4510000045f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0044, match64: 0x00000000, model64: 0x46b0000047a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0045, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0046, match64: 0x00000000, model64: 0x47a0000047c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0047, match64: 0x00000000, model64: 0x47c0000047e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0048, match64: 0x00000000, model64: 0x47e00000484},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0049, match64: 0x00000000, model64: 0x4840000048b},
		modelTuple{type64: 0x2700000027, matchRI: 0x004a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x004c, match64: 0x00000000, model64: 0x49100000499},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x499000004a1, model64: 0x4a1000004aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4aa000004b1, model64: 0x4aa000004b1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4b6000004c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c7000004ce, model64: 0x4ce000004da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4da000004e7, model64: 0x4e7000004fa},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5170000051c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5280000052d, model64: 0x52d00000535},
		modelTuple{type64: 0x2700000027, matchRI: 0x0055, match64: 0x00000000, model64: 0x53500000539},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5390000053e, model64: 0x53e00000544},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54400000549, model64: 0x5490000054e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54e00000553, model64: 0x55300000558},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5580000055d, model64: 0x55d00000562},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56200000567, model64: 0x5670000056a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56a0000056f, model64: 0x56f00000571},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57100000576, model64: 0x57600000578},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5780000057d, model64: 0x4170000041a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57d00000582, model64: 0x3d3000003d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58200000587, model64: 0x5870000058a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58a0000058f, model64: 0x39100000393},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58f00000594, model64: 0x59400000596},
		modelTuple{type64: 0x2700000027, matchRI: 0x0056, match64: 0x00000000, model64: 0x5960000059a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0058, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5aa000005ae, model64: 0x5aa000005ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ae000005b5, model64: 0x5b5000005b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5b8000005bf, model64: 0x5bf000005c4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x005c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x005d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x005e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5e7000005ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0060, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0061, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5fc00000604, model64: 0x6040000060d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0064, match64: 0x00000000, model64: 0x60d00000619},
		modelTuple{type64: 0x2700000027, matchRI: 0x0065, match64: 0x00000000, model64: 0x61900000624},
		modelTuple{type64: 0x2700000027, matchRI: 0x0066, match64: 0x00000000, model64: 0x62400000632},
		modelTuple{type64: 0x2700000027, matchRI: 0x0067, match64: 0x00000000, model64: 0x63200000636},
		modelTuple{type64: 0x2700000027, matchRI: 0x0068, match64: 0x00000000, model64: 0x6360000063d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0069, match64: 0x00000000, model64: 0x63d00000646},
		modelTuple{type64: 0x2700000027, matchRI: 0x006a, match64: 0x00000000, model64: 0x6460000064f},
		modelTuple{type64: 0x2700000027, matchRI: 0x006b, match64: 0x00000000, model64: 0x64f00000656},
		modelTuple{type64: 0x2700000027, matchRI: 0x006c, match64: 0x00000000, model64: 0x65600000661},
		modelTuple{type64: 0x2700000027, matchRI: 0x006d, match64: 0x00000000, model64: 0x6610000066d},
		modelTuple{type64: 0x2700000027, matchRI: 0x006e, match64: 0x00000000, model64: 0x66d00000676},
		modelTuple{type64: 0x2700000027, matchRI: 0x006f, match64: 0x00000000, model64: 0x67600000680},
		modelTuple{type64: 0x2700000027, matchRI: 0x0070, match64: 0x00000000, model64: 0x6800000068a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0071, match64: 0x00000000, model64: 0x68a00000694},
		modelTuple{type64: 0x2700000027, matchRI: 0x0072, match64: 0x00000000, model64: 0x694000006a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0073, match64: 0x00000000, model64: 0x6a0000006a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0074, match64: 0x00000000, model64: 0x6a5000006ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0075, match64: 0x00000000, model64: 0x6ae000006b6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x6c0000006c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d3000006de, model64: 0x6de000006e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e9000006f8, model64: 0x6f800000707},
		modelTuple{type64: 0x2700000027, matchRI: 0x0079, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x007b, match64: 0x00000000, model64: 0x70b00000716},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x007f, match64: 0x00000000, model64: 0x7210000072c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0080, match64: 0x00000000, model64: 0x72c00000734},
		modelTuple{type64: 0x2700000027, matchRI: 0x0081, match64: 0x00000000, model64: 0x73400000740},
		modelTuple{type64: 0x2700000027, matchRI: 0x0082, match64: 0x00000000, model64: 0x74000000747},
		modelTuple{type64: 0x2700000027, matchRI: 0x0084, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0086, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0087, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0089, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7530000075a, model64: 0x75a00000762},
		modelTuple{type64: 0x2700000027, matchRI: 0x008b, match64: 0x00000000, model64: 0x7680000076c},
		modelTuple{type64: 0x2700000027, matchRI: 0x008c, match64: 0x00000000, model64: 0x76c0000077d},
		modelTuple{type64: 0x2700000027, matchRI: 0x008d, match64: 0x00000000, model64: 0x77d00000785},
		modelTuple{type64: 0x2700000027, matchRI: 0x008e, match64: 0x00000000, model64: 0x78500000792},
		modelTuple{type64: 0x2700000027, matchRI: 0x008f, match64: 0x00000000, model64: 0x7920000079d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0090, match64: 0x00000000, model64: 0x79d000007aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0091, match64: 0x00000000, model64: 0x7aa000007b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0092, match64: 0x00000000, model64: 0x7b7000007c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0093, match64: 0x00000000, model64: 0x7c0000007c8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0094, match64: 0x00000000, model64: 0x7c8000007d0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0095, match64: 0x00000000, model64: 0x7d0000007d9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0096, match64: 0x00000000, model64: 0x7d9000007e1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0099, match64: 0x00000000, model64: 0x7ee000007fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x009a, match64: 0x00000000, model64: 0x7fb00000807},
		modelTuple{type64: 0x2700000027, matchRI: 0x009b, match64: 0x00000000, model64: 0x80700000814},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81400000823, model64: 0x8230000082e},
		modelTuple{type64: 0x2700000027, matchRI: 0x009c, match64: 0x00000000, model64: 0x82e00000839},
		modelTuple{type64: 0x2700000027, matchRI: 0x009d, match64: 0x00000000, model64: 0x83900000845},
		modelTuple{type64: 0x2700000027, matchRI: 0x009e, match64: 0x00000000, model64: 0x84500000851},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x85100000858, model64: 0x8580000085f},
		modelTuple{type64: 0x2700000027, matchRI: 0x009f, match64: 0x00000000, model64: 0x85f00000866},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a0, match64: 0x00000000, model64: 0x8660000086f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86f0000087a, model64: 0x87a00000885},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a1, match64: 0x00000000, model64: 0x8850000088d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x5da000005e7, matchRI: 0x00a4, match64: 0x00000000, model64: 0x898000008a0},
		modelTuple{type64: 0x5da000005e7, matchRI: 0x00a5, match64: 0x00000000, model64: 0x8a0000008a7},
		modelTuple{type64: 0x5da000005e7, matchRI: 0x00a6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x8a7000008ae, model64: 0x8ae000008b5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00a7, match64: 0x00000000, model64: 0x8b5000008c3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00a8, match64: 0x00000000, model64: 0x8c3000008cb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00a9, match64: 0x00000000, model64: 0x8cb000008d2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00aa, match64: 0x00000000, model64: 0x8d2000008db},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00ab, match64: 0x00000000, model64: 0x8db000008e2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x8e2000008ec, model64: 0x8ec000008f5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x8f5000008fb, model64: 0x8f5000008fb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00ac, match64: 0x00000000, model64: 0x8fb00000907},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00ad, match64: 0x00000000, model64: 0x90700000913},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x91300000919, model64: 0x91900000922},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00ae, match64: 0x00000000, model64: 0x9220000092f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x92f00000938, model64: 0x93800000945},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00af, match64: 0x00000000, model64: 0x9450000094e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b0, match64: 0x00000000, model64: 0x94e0000095b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b1, match64: 0x00000000, model64: 0x95b00000967},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b2, match64: 0x00000000, model64: 0x96700000970},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b3, match64: 0x00000000, model64: 0x9700000097d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b4, match64: 0x00000000, model64: 0x97d00000989},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b5, match64: 0x00000000, model64: 0x98900000996},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9960000099a, model64: 0x99a000009a1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9a1000009a5, model64: 0x9a5000009ae},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b6, match64: 0x00000000, model64: 0x9ae000009b5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9b5000009c2, model64: 0x9c2000009ca},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9ca000009d4, model64: 0x9d4000009d9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9d9000009df, model64: 0x9df000009e9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9e9000009f6, model64: 0x9f6000009fe},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9fe00000a0a, model64: 0x9fe00000a0a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b8, match64: 0x00000000, model64: 0xa0a00000a1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b9, match64: 0x00000000, model64: 0xa1a00000a25},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ba, match64: 0x00000000, model64: 0xa2500000a30},
		modelTuple{type64: 0x2700000027, matchRI: 0x00bb, match64: 0x00000000, model64: 0xa3000000a3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x00bc, match64: 0x00000000, model64: 0xa3e00000a4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x00bd, match64: 0x00000000, model64: 0xa4b00000a58},
		modelTuple{type64: 0x2700000027, matchRI: 0x00be, match64: 0x00000000, model64: 0xa5800000a61},
		modelTuple{type64: 0x2700000027, matchRI: 0x00bf, match64: 0x00000000, model64: 0xa6100000a6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c0, match64: 0x00000000, model64: 0xa6a00000a73},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c1, match64: 0x00000000, model64: 0xa7300000a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c2, match64: 0x00000000, model64: 0xa8000000a8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c3, match64: 0x00000000, model64: 0xa8d00000a9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c4, match64: 0x00000000, model64: 0xa9a00000aa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c5, match64: 0x00000000, model64: 0xaa600000ab0},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c6, match64: 0x00000000, model64: 0xab000000abb},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c7, match64: 0x00000000, model64: 0xabb00000ac8},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c8, match64: 0x00000000, model64: 0xac800000ad5},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c9, match64: 0x00000000, model64: 0xaa600000ab0},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ca, match64: 0x00000000, model64: 0xad500000ae2},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cb, match64: 0x00000000, model64: 0xae200000aed},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cc, match64: 0x00000000, model64: 0xaed00000af8},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cd, match64: 0x00000000, model64: 0xaf800000b04},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ce, match64: 0x00000000, model64: 0xb0400000b0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cf, match64: 0x00000000, model64: 0xb0f00000b1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d0, match64: 0x00000000, model64: 0xb1d00000b2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d1, match64: 0x00000000, model64: 0xb2d00000b38},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d2, match64: 0x00000000, model64: 0xb3800000b43},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb4300000b4c, model64: 0xb4c00000b51},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d3, match64: 0x00000000, model64: 0xb5100000b5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d4, match64: 0x00000000, model64: 0xb5c00000b65},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x00d5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x00d6, match64: 0x00000000, model64: 0xb6c00000b7e},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x00d7, match64: 0x00000000, model64: 0xb7e00000b8b},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x00d8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x00d9, match64: 0x00000000, model64: 0xb8b00000b94},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x00da, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00db, match64: 0x00000000, model64: 0xb9400000ba2},
		modelTuple{type64: 0x2700000027, matchRI: 0x00dc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x00dd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x00de, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xba800000bae, model64: 0xbae00000bba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbba00000bbf, model64: 0xbbf00000bc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e1, match64: 0x00000000, model64: 0xbcb00000bd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbdd00000be5, model64: 0xbe500000be7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe700000bf0, model64: 0xbf000000bf3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbf300000bf6, model64: 0xbf600000c00},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e4, match64: 0x00000000, model64: 0xc0000000c07},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e5, match64: 0x00000000, model64: 0xc0700000c0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0a00000c0d, model64: 0xc0d00000c10},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e6, match64: 0x00000000, model64: 0xc1000000c19},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e7, match64: 0x00000000, model64: 0xc1900000c21},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e8, match64: 0x00000000, model64: 0xc2100000c25},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e9, match64: 0x00000000, model64: 0xc2500000c27},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ea, match64: 0x00000000, model64: 0xc2700000c2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00eb, match64: 0x00000000, model64: 0xc2f00000c35},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ec, match64: 0x00000000, model64: 0xc3500000c3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ed, match64: 0x00000000, model64: 0xc3b00000c41},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ee, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00ef, match64: 0x00000000, model64: 0xc4100000c47},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xc4700000c4e, model64: 0xc4700000c4e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00f0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00f1, match64: 0x00000000, model64: 0xc4e00000c56},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00f3, match64: 0x00000000, model64: 0xc5d00000c62},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xc6200000c68, model64: 0xc6200000c68},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00f4, match64: 0x00000000, model64: 0xc6800000c75},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00f5, match64: 0x00000000, model64: 0xc7500000c7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f6, match64: 0x00000000, model64: 0xc7f00000c8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f7, match64: 0x00000000, model64: 0xc8d00000c99},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x00fa, match64: 0x00000000, model64: 0xcb400000cbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x00fb, match64: 0x00000000, model64: 0xcbc00000cc2},
		modelTuple{type64: 0x24700000251, matchRI: 0x00fc, match64: 0x00000000, model64: 0xcc200000ccc},
		modelTuple{type64: 0x24700000251, matchRI: 0x00fd, match64: 0x00000000, model64: 0xccc00000cd8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcdd00000ce8, model64: 0xce800000cfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ff, match64: 0x00000000, model64: 0xcfa00000d07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0700000d13, model64: 0xd1300000d20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2000000d27, model64: 0xd2700000d34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3400000d3f, model64: 0xd3f00000d4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4d00000d58, model64: 0xd5800000d65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6500000d70, model64: 0xd7000000d7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0100, match64: 0x00000000, model64: 0xd7f00000d8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0101, match64: 0x00000000, model64: 0xd8a00000d96},
		modelTuple{type64: 0x2700000027, matchRI: 0x0102, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd9600000da2, model64: 0xda200000db1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb100000dbb, model64: 0xdbb00000dc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdc700000dd0, model64: 0xdd000000de0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde000000de9, model64: 0xde900000df4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0103, match64: 0x00000000, model64: 0xdf400000e00},
		modelTuple{type64: 0x2700000027, matchRI: 0x0104, match64: 0x00000000, model64: 0xe0000000e0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0105, match64: 0x00000000, model64: 0xe0a00000e10},
		modelTuple{type64: 0x2700000027, matchRI: 0x0106, match64: 0x00000000, model64: 0xe1000000e17},
		modelTuple{type64: 0x2700000027, matchRI: 0x0107, match64: 0x00000000, model64: 0xe1700000e21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3d00000e4c, model64: 0xe4c00000e5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0109, match64: 0x00000000, model64: 0xe6000000e66},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe6600000e72, model64: 0xe6600000e72},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x010c, match64: 0x00000000, model64: 0xe7f00000e89},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe8f00000e99, model64: 0xe9900000ea2},
		modelTuple{type64: 0x2700000027, matchRI: 0x010e, match64: 0x00000000, model64: 0xea200000ea9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0111, match64: 0x00000000, model64: 0xeb200000eb7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb700000ebe, model64: 0xebe00000ec5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0112, match64: 0x00000000, model64: 0xec500000eca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0113, match64: 0x00000000, model64: 0xeca00000ecf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0114, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0115, match64: 0x00000000, model64: 0xecf00000ed3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0116, match64: 0x00000000, model64: 0xedc00000ede},
		modelTuple{type64: 0x2700000027, matchRI: 0x0117, match64: 0x00000000, model64: 0xede00000ee0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0119, match64: 0x00000000, model64: 0xee400000eea},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xeea00000ef4, model64: 0xeea00000ef4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x011a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x011b, match64: 0x00000000, model64: 0xef400000f03},
		modelTuple{type64: 0x2700000027, matchRI: 0x011c, match64: 0x00000000, model64: 0xf0300000f14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1400000f1a, model64: 0xf1a00000f26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2600000f32, model64: 0xf2600000f32},
		modelTuple{type64: 0x2700000027, matchRI: 0x011d, match64: 0x00000000, model64: 0xf3200000f3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x011e, match64: 0x00000000, model64: 0xf3a00000f40},
		modelTuple{type64: 0x24300000245, matchRI: 0x011f, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0120, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0121, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xf4d00000f57, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5b00000f62, model64: 0xf6200000f65},
		modelTuple{type64: 0x2700000027, matchRI: 0x0123, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xf6500000f6e, model64: 0xf6e00000f77},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0124, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7e00000f83, model64: 0xf8300000f8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0126, match64: 0x00000000, model64: 0xf8c00000f9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9e00000fa3, model64: 0xfa300000fb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0127, match64: 0x00000000, model64: 0xfb300000fc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0128, match64: 0x00000000, model64: 0xfc300000fdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0129, match64: 0x00000000, model64: 0xfdc00000fec},
		modelTuple{type64: 0x2700000027, matchRI: 0x012a, match64: 0x00000000, model64: 0xfec00001005},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10050000100a, model64: 0x100a00001023},
		modelTuple{type64: 0x2700000027, matchRI: 0x012b, match64: 0x00000000, model64: 0x102300001033},
		modelTuple{type64: 0x2700000027, matchRI: 0x012c, match64: 0x00000000, model64: 0x10330000104c},
		modelTuple{type64: 0x2700000027, matchRI: 0x012d, match64: 0x00000000, model64: 0x104c0000105c},
		modelTuple{type64: 0x2700000027, matchRI: 0x012e, match64: 0x00000000, model64: 0x105c0000106c},
		modelTuple{type64: 0x2700000027, matchRI: 0x012f, match64: 0x00000000, model64: 0x106c0000107c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0130, match64: 0x00000000, model64: 0x107c0000108e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0131, match64: 0x00000000, model64: 0x108e000010a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0132, match64: 0x00000000, model64: 0x10a9000010bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0133, match64: 0x00000000, model64: 0x10bd000010da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0134, match64: 0x00000000, model64: 0x10da000010ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0135, match64: 0x00000000, model64: 0x10ec00001107},
		modelTuple{type64: 0x2700000027, matchRI: 0x0136, match64: 0x00000000, model64: 0x110700001116},
		modelTuple{type64: 0x2700000027, matchRI: 0x0137, match64: 0x00000000, model64: 0x111600001128},
		modelTuple{type64: 0x2700000027, matchRI: 0x0138, match64: 0x00000000, model64: 0x11280000113c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x113c00001141, model64: 0x114100001159},
		modelTuple{type64: 0x2700000027, matchRI: 0x0139, match64: 0x00000000, model64: 0x115900001168},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11680000116d, model64: 0x116d00001185},
		modelTuple{type64: 0x2700000027, matchRI: 0x013a, match64: 0x00000000, model64: 0x118500001195},
		modelTuple{type64: 0x2700000027, matchRI: 0x013b, match64: 0x00000000, model64: 0x1195000011a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a5000011aa, model64: 0x11aa000011bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11bc000011c1, model64: 0x11c1000011d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x013c, match64: 0x00000000, model64: 0x11d5000011e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11e5000011ea, model64: 0x11ea000011fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x013d, match64: 0x00000000, model64: 0x11fa0000120a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x120a0000120f, model64: 0x120f0000121e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121e00001228, model64: 0x122800001238},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12380000123d, model64: 0x123d0000124b},
		modelTuple{type64: 0x2700000027, matchRI: 0x013e, match64: 0x00000000, model64: 0x124b00001250},
		modelTuple{type64: 0x2700000027, matchRI: 0x013f, match64: 0x00000000, model64: 0x125000001259},
		modelTuple{type64: 0x2700000027, matchRI: 0x0140, match64: 0x00000000, model64: 0x125900001262},
		modelTuple{type64: 0x2700000027, matchRI: 0x0141, match64: 0x00000000, model64: 0x126200001266},
		modelTuple{type64: 0x2700000027, matchRI: 0x0142, match64: 0x00000000, model64: 0x12660000126b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x126b00001270, model64: 0x127000001272},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127200001277, model64: 0x127700001280},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128000001285, model64: 0x12850000128c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128c00001291, model64: 0x129100001297},
		modelTuple{type64: 0x2700000027, matchRI: 0x0143, match64: 0x00000000, model64: 0x129700001299},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12990000129f, model64: 0x129f000012aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0144, match64: 0x00000000, model64: 0x12aa000012bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0145, match64: 0x00000000, model64: 0x12bc000012ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12ce000012d3, model64: 0x12d3000012e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12e6000012eb, model64: 0x12eb000012fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0146, match64: 0x00000000, model64: 0x12fa0000130f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0147, match64: 0x00000000, model64: 0x130f0000132d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0148, match64: 0x00000000, model64: 0x132d00001344},
		modelTuple{type64: 0x2700000027, matchRI: 0x0149, match64: 0x00000000, model64: 0x134400001355},
		modelTuple{type64: 0x2700000027, matchRI: 0x014a, match64: 0x00000000, model64: 0x135500001365},
		modelTuple{type64: 0x2700000027, matchRI: 0x014b, match64: 0x00000000, model64: 0x13650000137a},
		modelTuple{type64: 0x2700000027, matchRI: 0x014c, match64: 0x00000000, model64: 0x137a0000138a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138a0000138f, model64: 0x138f000013a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x014d, match64: 0x00000000, model64: 0x13a0000013b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x014e, match64: 0x00000000, model64: 0x13b0000013c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x014f, match64: 0x00000000, model64: 0x13a0000013b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0150, match64: 0x00000000, model64: 0x13c1000013d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13d2000013d7, model64: 0x13d7000013e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13e7000013ec, model64: 0x13ec000013fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13fd00001402, model64: 0x14020000140e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140e00001413, model64: 0x141300001416},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14160000141c, model64: 0x141c00001421},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142100001427, model64: 0x14270000142a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142a00001430, model64: 0x14300000143a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x143a0000143f, model64: 0x143f00001456},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14560000145c, model64: 0x145c00001474},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14740000147a, model64: 0x147a00001495},
		modelTuple{type64: 0x2700000027, matchRI: 0x0151, match64: 0x00000000, model64: 0x1495000014a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a9000014af, model64: 0x14af000014c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c3000014c9, model64: 0x14c9000014dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14dd000014e2, model64: 0x14e2000014f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0152, match64: 0x00000000, model64: 0x14f200001507},
		modelTuple{type64: 0x2700000027, matchRI: 0x0153, match64: 0x00000000, model64: 0x150700001525},
		modelTuple{type64: 0x2700000027, matchRI: 0x0154, match64: 0x00000000, model64: 0x152500001538},
		modelTuple{type64: 0x2700000027, matchRI: 0x0155, match64: 0x00000000, model64: 0x15380000154d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0156, match64: 0x00000000, model64: 0x154d00001565},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x15650000156a, model64: 0x156a0000157d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x157d00001582, model64: 0x156a0000157d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0157, match64: 0x00000000, model64: 0x158200001598},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0158, match64: 0x00000000, model64: 0x15980000159a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0159, match64: 0x00000000, model64: 0x159a0000159f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x015a, match64: 0x00000000, model64: 0x159f000015aa},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x015b, match64: 0x00000000, model64: 0x15aa000015b4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x015c, match64: 0x00000000, model64: 0x15b4000015bd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x015d, match64: 0x00000000, model64: 0x15bd000015ce},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x015e, match64: 0x00000000, model64: 0x15ce000015e6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x15e6000015eb, model64: 0x15eb000015ef},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x15ef000015f4, model64: 0x15f400001600},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x015f, match64: 0x00000000, model64: 0x160000001607},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x16070000160c, model64: 0x160c0000161f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x161f00001624, model64: 0x162400001638},
		modelTuple{type64: 0x2700000027, matchRI: 0x0160, match64: 0x00000000, model64: 0x16380000164d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0161, match64: 0x00000000, model64: 0x164d00001660},
		modelTuple{type64: 0x2700000027, matchRI: 0x0162, match64: 0x00000000, model64: 0x166000001675},
		modelTuple{type64: 0x2700000027, matchRI: 0x0163, match64: 0x00000000, model64: 0x167500001690},
		modelTuple{type64: 0x2700000027, matchRI: 0x0164, match64: 0x00000000, model64: 0x1690000016a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a6000016ab, model64: 0x16ab000016c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0165, match64: 0x00000000, model64: 0x16c0000016d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0166, match64: 0x00000000, model64: 0x16d8000016ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ee000016f3, model64: 0x16f300001709},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17090000170f, model64: 0x39100000393},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170f00001715, model64: 0x171500001718},
		modelTuple{type64: 0x2700000027, matchRI: 0x0167, match64: 0x00000000, model64: 0x17180000171c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0168, match64: 0x00000000, model64: 0x171c0000171e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0169, match64: 0x00000000, model64: 0x171e00001725},
		modelTuple{type64: 0x2700000027, matchRI: 0x016a, match64: 0x00000000, model64: 0x17250000172a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x172a0000172f, model64: 0x172f00001737},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x016b, match64: 0x00000000, model64: 0x17370000173e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x173e00001743, model64: 0x174300001749},
		modelTuple{type64: 0x2700000027, matchRI: 0x016c, match64: 0x00000000, model64: 0x17490000174b},
		modelTuple{type64: 0x2700000027, matchRI: 0x016d, match64: 0x00000000, model64: 0x174b00001751},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175100001756, model64: 0x175600001760},
		modelTuple{type64: 0x2700000027, matchRI: 0x016e, match64: 0x00000000, model64: 0x176000001762},
		modelTuple{type64: 0x2700000027, matchRI: 0x016f, match64: 0x00000000, model64: 0x176200001765},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17650000176a, model64: 0x176a00001772},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177200001777, model64: 0x177700001781},
		modelTuple{type64: 0x2700000027, matchRI: 0x0170, match64: 0x00000000, model64: 0x178100001784},
		modelTuple{type64: 0x2700000027, matchRI: 0x0171, match64: 0x00000000, model64: 0x17840000178d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x178d00001792, model64: 0x179200001797},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x17970000179c, model64: 0x179c000017b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0172, match64: 0x00000000, model64: 0x17b2000017c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0173, match64: 0x00000000, model64: 0x17c8000017e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0174, match64: 0x00000000, model64: 0x17e7000017fd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0175, match64: 0x00000000, model64: 0x17fd00001813},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x181300001818, model64: 0x18180000182e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x182e00001832, model64: 0x18320000184a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0176, match64: 0x00000000, model64: 0x184a0000185a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0177, match64: 0x00000000, model64: 0x185a0000186a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x186a0000186e, model64: 0x185a0000186a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x186e00001873, model64: 0x187300001883},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x188300001888, model64: 0x18880000189d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x189d000018a2, model64: 0x18a2000018b1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18b1000018b6, model64: 0x18b6000018c5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18c5000018ca, model64: 0x18ca000018da},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18da000018df, model64: 0x18df000018f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0178, match64: 0x00000000, model64: 0x18f000001901},
		modelTuple{type64: 0x2700000027, matchRI: 0x0179, match64: 0x00000000, model64: 0x190100001905},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19050000191b, model64: 0x191b00001921},
		modelTuple{type64: 0x2700000027, matchRI: 0x017a, match64: 0x00000000, model64: 0x192100001930},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193000001945, model64: 0x194500001952},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x195200001967, model64: 0x196700001974},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19740000198a, model64: 0x198a00001998},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1998000019ad, model64: 0x19ad000019ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ba000019c0, model64: 0x19c0000019ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ce000019d3, model64: 0x19d3000019e3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x017b, match64: 0x00000000, model64: 0x19e3000019ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x017c, match64: 0x00000000, model64: 0x19ef000019fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x017d, match64: 0x00000000, model64: 0x19ef000019fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x017e, match64: 0x00000000, model64: 0x19fa00001a04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0400001a09, model64: 0x1a0900001a0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0f00001a14, model64: 0x1a1400001a1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x017f, match64: 0x00000000, model64: 0x1a1c00001a1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0180, match64: 0x00000000, model64: 0x1a1e00001a20},
		modelTuple{type64: 0x2700000027, matchRI: 0x0181, match64: 0x00000000, model64: 0x1a2000001a25},
		modelTuple{type64: 0x2700000027, matchRI: 0x0182, match64: 0x00000000, model64: 0x1a2500001a2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2a00001a2f, model64: 0x1a2f00001a36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3600001a3b, model64: 0x1a3b00001a42},
		modelTuple{type64: 0x2700000027, matchRI: 0x0183, match64: 0x00000000, model64: 0x1a4200001a4c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a4c00001a51, model64: 0x1a5100001a60},
		modelTuple{type64: 0x2700000027, matchRI: 0x0184, match64: 0x00000000, model64: 0x1a6000001a67},
		modelTuple{type64: 0x2700000027, matchRI: 0x0185, match64: 0x00000000, model64: 0x1a6700001a6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0186, match64: 0x00000000, model64: 0x1a6a00001a72},
		modelTuple{type64: 0x2700000027, matchRI: 0x0187, match64: 0x00000000, model64: 0x1a7200001a79},
		modelTuple{type64: 0x2700000027, matchRI: 0x0188, match64: 0x00000000, model64: 0x1a7900001a7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0189, match64: 0x00000000, model64: 0x1a7a00001a7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x018a, match64: 0x00000000, model64: 0x1a7c00001a85},
		modelTuple{type64: 0x2700000027, matchRI: 0x018b, match64: 0x00000000, model64: 0x1a8500001a8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x018c, match64: 0x00000000, model64: 0x1a8e00001a97},
		modelTuple{type64: 0x2700000027, matchRI: 0x018d, match64: 0x00000000, model64: 0x1a9700001aa0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aa000001aa5, model64: 0x1aa500001aae},
		modelTuple{type64: 0x2700000027, matchRI: 0x018e, match64: 0x00000000, model64: 0x1aae00001ab7},
		modelTuple{type64: 0x2700000027, matchRI: 0x018f, match64: 0x00000000, model64: 0x1ab700001ab9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0190, match64: 0x00000000, model64: 0x1ab900001ac2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac200001ac7, model64: 0x1ac700001ad1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0191, match64: 0x00000000, model64: 0x1ad100001adb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0192, match64: 0x00000000, model64: 0x1adb00001add},
		modelTuple{type64: 0x2700000027, matchRI: 0x0193, match64: 0x00000000, model64: 0x1add00001adf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1adf00001ae4, model64: 0x1ae400001aec},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0194, match64: 0x00000000, model64: 0x1aec00001aee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0195, match64: 0x00000000, model64: 0x1aee00001aef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aef00001af4, model64: 0x1af400001afc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0196, match64: 0x00000000, model64: 0x1afc00001b05},
		modelTuple{type64: 0x2700000027, matchRI: 0x0197, match64: 0x00000000, model64: 0x1b0500001b07},
		modelTuple{type64: 0x2700000027, matchRI: 0x0198, match64: 0x00000000, model64: 0x1b0700001b09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0900001b0e, model64: 0x1b0e00001b15},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0199, match64: 0x00000000, model64: 0x129700001299},
		modelTuple{type64: 0x2700000027, matchRI: 0x019a, match64: 0x00000000, model64: 0x1b1500001b17},
		modelTuple{type64: 0x2700000027, matchRI: 0x019b, match64: 0x00000000, model64: 0x1b1700001b20},
		modelTuple{type64: 0x2700000027, matchRI: 0x019c, match64: 0x00000000, model64: 0x1b2000001b21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2100001b26, model64: 0x1b2600001b2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2d00001b32, model64: 0x1b3200001b33},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x019d, match64: 0x00000000, model64: 0x1b3300001b39},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x019e, match64: 0x00000000, model64: 0x1b3900001b41},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x019f, match64: 0x00000000, model64: 0x1b4100001b48},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01a0, match64: 0x00000000, model64: 0x1b4800001b51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b5100001b5b, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a1, match64: 0x00000000, model64: 0x1b5b00001b68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b6800001b6d, model64: 0x1b6d00001b72},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a9, match64: 0x00000000, model64: 0x1b7f00001b86},
		modelTuple{type64: 0x2700000027, matchRI: 0x01aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8e00001b93, model64: 0x1b9300001ba0},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ac, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba700001bb0, model64: 0x1bb000001bb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb900001bc5, model64: 0x1bc500001bd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bd100001bd9, model64: 0x1bd900001be1},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ae, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1be100001bed, model64: 0x1bed00001bf1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bf100001bfb, model64: 0x1bfb00001bfd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bfd00001c0a, model64: 0x1c0a00001c0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c0f00001c1e, model64: 0x1c1e00001c25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c2500001c30, model64: 0x1c3000001c33},
		modelTuple{type64: 0x2700000027, matchRI: 0x01af, match64: 0x00000000, model64: 0x1c3300001c3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b0, match64: 0x00000000, model64: 0x1c3a00001c3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b2, match64: 0x00000000, model64: 0x1c3f00001c45},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b4, match64: 0x00000000, model64: 0x1c4e00001c55},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b5, match64: 0x00000000, model64: 0x1c5500001c61},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b6, match64: 0x00000000, model64: 0x1c6100001c65},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b7, match64: 0x00000000, model64: 0x1c6500001c69},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b8, match64: 0x00000000, model64: 0x1c6900001c6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b9, match64: 0x00000000, model64: 0x1c6c00001c6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ba, match64: 0x00000000, model64: 0x1c6e00001c71},
		modelTuple{type64: 0x2700000027, matchRI: 0x01bb, match64: 0x00000000, model64: 0x1c7100001c79},
		modelTuple{type64: 0x2700000027, matchRI: 0x01bc, match64: 0x00000000, model64: 0x1c7900001c81},
		modelTuple{type64: 0x2700000027, matchRI: 0x01bd, match64: 0x00000000, model64: 0x1c8100001c93},
		modelTuple{type64: 0x2700000027, matchRI: 0x01be, match64: 0x00000000, model64: 0x1c9300001c94},
		modelTuple{type64: 0x2700000027, matchRI: 0x01bf, match64: 0x00000000, model64: 0x1c9400001c9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c0, match64: 0x00000000, model64: 0x1c9f00001cac},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c1, match64: 0x00000000, model64: 0x1cac00001cbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c2, match64: 0x00000000, model64: 0x1cbd00001cc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cc900001cd5, model64: 0x1cd500001ce2},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c3, match64: 0x00000000, model64: 0x1ce200001cea},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c4, match64: 0x00000000, model64: 0x1cea00001cf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c5, match64: 0x00000000, model64: 0x1c7100001c79},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cf700001cfc, model64: 0x1cfc00001d02},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1d0200001d0c, model64: 0x1d0c00001d16},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1d1600001d1e, model64: 0x1d1e00001d28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d2800001d2e, model64: 0x1d2e00001d34},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c7, match64: 0x00000000, model64: 0x1d3400001d3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c8, match64: 0x00000000, model64: 0x1d3e00001d46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4600001d4d, model64: 0x1d4d00001d54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5400001d5b, model64: 0x1d5b00001d62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d6200001d6c, model64: 0x1d6c00001d76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7600001d7e, model64: 0x1d7e00001d86},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c9, match64: 0x00000000, model64: 0x1d8600001d90},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ca, match64: 0x00000000, model64: 0x1d9000001d98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9800001d9f, model64: 0x1d9f00001da6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1da600001dad, model64: 0x1dad00001db4},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cb, match64: 0x00000000, model64: 0x1db400001dbb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dbb00001dc2, model64: 0x1dc200001dc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dc900001ddc, model64: 0x1ddc00001df1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1df100001dfc, model64: 0x1dfc00001e07},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cc, match64: 0x00000000, model64: 0x1e0700001e16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e1600001e23, model64: 0x1e2300001e30},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cd, match64: 0x00000000, model64: 0x1e3000001e3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ce, match64: 0x00000000, model64: 0x1e3f00001e49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e4900001e50, model64: 0x1e5000001e57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5700001e60, model64: 0x1e6000001e69},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cf, match64: 0x00000000, model64: 0x1e6900001e71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7100001e79, model64: 0x1e7900001e81},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8100001e88, model64: 0x1e8800001e8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8f00001e98, model64: 0x1e9800001ea1},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d0, match64: 0x00000000, model64: 0x1ea100001eaf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eaf00001eb9, model64: 0x1eb900001ec3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec300001ecf, model64: 0x1ecf00001edb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1edb00001eea, model64: 0x1eea00001ef9},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d1, match64: 0x00000000, model64: 0x1ef900001f04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f0400001f12, model64: 0x1f1200001f20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2000001f2d, model64: 0x1f2d00001f3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3a00001f45, model64: 0x1f4500001f50},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d2, match64: 0x00000000, model64: 0x1f5000001f5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d3, match64: 0x00000000, model64: 0x1f5f00001f72},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d4, match64: 0x00000000, model64: 0x1f7200001f87},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d5, match64: 0x00000000, model64: 0x1f8700001f94},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d6, match64: 0x00000000, model64: 0x1f9400001fa2},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d7, match64: 0x00000000, model64: 0x1fa200001faf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1faf00001fbb, model64: 0x1fbb00001fc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d8, match64: 0x00000000, model64: 0x1fc700001fd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fd300001fe5, model64: 0x1fe500001ff7},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d9, match64: 0x00000000, model64: 0x1ff700002005},
		modelTuple{type64: 0x2700000027, matchRI: 0x01da, match64: 0x00000000, model64: 0x20050000200d},
		modelTuple{type64: 0x2700000027, matchRI: 0x01db, match64: 0x00000000, model64: 0x200d00002016},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20160000201d, model64: 0x201d00002024},
		modelTuple{type64: 0x2700000027, matchRI: 0x01dc, match64: 0x00000000, model64: 0x20240000202b},
		modelTuple{type64: 0x2700000027, matchRI: 0x01dd, match64: 0x00000000, model64: 0x202b00002033},
		modelTuple{type64: 0x2700000027, matchRI: 0x01de, match64: 0x00000000, model64: 0x20330000203b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x203b00002043, model64: 0x20430000204c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x204c0000205b, model64: 0x205b00002067},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20670000206e, model64: 0x206e00002075},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20750000207b, model64: 0x207b00002081},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20810000208e, model64: 0x208e0000209d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x209d000020a9, model64: 0x20a9000020b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x01df, match64: 0x00000000, model64: 0x20b1000020b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b9000020c0, model64: 0x20c0000020c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20c7000020cf, model64: 0x20c7000020cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20cf000020da, model64: 0x20da000020e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20e3000020ed, model64: 0x20ed000020f3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01e0, match64: 0x00000000, model64: 0x20f3000020fa},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x20fa00002103, model64: 0x21030000210c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x210c0000211b, model64: 0x211b00002124},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x21240000212f, model64: 0x212f00002133},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x213300002143, model64: 0x1d0c00001d16},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x214300002153, model64: 0x215300002165},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x216500002176, model64: 0x217600002189},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01e1, match64: 0x00000000, model64: 0x21890000219e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x219e000021ab, model64: 0x21ab000021bd},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x21bd000021cc, model64: 0x21cc000021db},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x21db000021e4, model64: 0x21e4000021f2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01e2, match64: 0x00000000, model64: 0x21f2000021fe},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01e3, match64: 0x00000000, model64: 0x20f3000020fa},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01e4, match64: 0x00000000, model64: 0x21fe00002205},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01e5, match64: 0x00000000, model64: 0x22050000220a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x220a00002216, model64: 0x22050000220a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01e6, match64: 0x00000000, model64: 0x221600002223},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x22230000222a, model64: 0x222a00002232},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x223200002244, model64: 0x22440000224e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01e7, match64: 0x00000000, model64: 0x224e00002252},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x225b0000226b, model64: 0x226b0000227b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x227b0000228b, model64: 0x228b0000229b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229b000022a1, model64: 0x229b000022a1},
		modelTuple{type64: 0x8e00000099, matchRI: -0x0001, match64: 0x22a1000022ad, model64: 0x22ad000022ba},
		modelTuple{type64: 0x8e00000099, matchRI: -0x0001, match64: 0x22ba000022cd, model64: 0x22cd000022e0},
		modelTuple{type64: 0x8e00000099, matchRI: 0x01eb, match64: 0x00000000, model64: 0x22e0000022f0},
		modelTuple{type64: 0x8e00000099, matchRI: 0x01ec, match64: 0x00000000, model64: 0x22f000002300},
		modelTuple{type64: 0x8e00000099, matchRI: -0x0001, match64: 0x23000000230c, model64: 0x23000000230c},
		modelTuple{type64: 0x8e00000099, matchRI: -0x0001, match64: 0x230c0000231b, model64: 0x230c0000231b},
		modelTuple{type64: 0x8e00000099, matchRI: -0x0001, match64: 0x231b00002327, model64: 0x232700002334},
		modelTuple{type64: 0x8e00000099, matchRI: 0x01ee, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x8e00000099, matchRI: 0x01ef, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01f1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01f2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x01f6, match64: 0x00000000, model64: 0x234f00002363},
		modelTuple{type64: 0x24300000245, matchRI: 0x01f7, match64: 0x00000000, model64: 0x236300002377},
		modelTuple{type64: 0x24300000245, matchRI: 0x01f8, match64: 0x00000000, model64: 0x23770000238b},
		modelTuple{type64: 0x24300000245, matchRI: 0x01f9, match64: 0x00000000, model64: 0x238b0000239a},
		modelTuple{type64: 0x24300000245, matchRI: 0x01fa, match64: 0x00000000, model64: 0x239a000023b1},
		modelTuple{type64: 0x24300000245, matchRI: 0x01fb, match64: 0x00000000, model64: 0x23b1000023c8},
		modelTuple{type64: 0x24300000245, matchRI: 0x01fc, match64: 0x00000000, model64: 0x23c8000023db},
		modelTuple{type64: 0x24300000245, matchRI: 0x01fd, match64: 0x00000000, model64: 0x23db000023ec},
		modelTuple{type64: 0x24300000245, matchRI: 0x01fe, match64: 0x00000000, model64: 0x23ec00002402},
		modelTuple{type64: 0x24300000245, matchRI: 0x01ff, match64: 0x00000000, model64: 0x240200002411},
		modelTuple{type64: 0x24300000245, matchRI: 0x0200, match64: 0x00000000, model64: 0x241100002426},
		modelTuple{type64: 0x24300000245, matchRI: 0x0201, match64: 0x00000000, model64: 0x242600002440},
		modelTuple{type64: 0x24300000245, matchRI: 0x0202, match64: 0x00000000, model64: 0x244000002458},
		modelTuple{type64: 0x24300000245, matchRI: 0x0203, match64: 0x00000000, model64: 0x245800002465},
		modelTuple{type64: 0x24300000245, matchRI: 0x0204, match64: 0x00000000, model64: 0x246500002475},
		modelTuple{type64: 0x24300000245, matchRI: 0x0205, match64: 0x00000000, model64: 0x24750000248c},
		modelTuple{type64: 0x24300000245, matchRI: 0x0206, match64: 0x00000000, model64: 0x248c000024a0},
		modelTuple{type64: 0x24300000245, matchRI: 0x0207, match64: 0x00000000, model64: 0x24a0000024bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0208, match64: 0x00000000, model64: 0x24bb000024c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0209, match64: 0x00000000, model64: 0x24c2000024d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x020a, match64: 0x00000000, model64: 0x24d0000024de},
		modelTuple{type64: 0x2700000027, matchRI: 0x020b, match64: 0x00000000, model64: 0x24de000024f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x020c, match64: 0x00000000, model64: 0x24f60000250c},
		modelTuple{type64: 0x2700000027, matchRI: 0x020d, match64: 0x00000000, model64: 0x250c00002522},
		modelTuple{type64: 0x2700000027, matchRI: 0x020e, match64: 0x00000000, model64: 0x252200002539},
		modelTuple{type64: 0x2700000027, matchRI: 0x020f, match64: 0x00000000, model64: 0x25390000254e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0210, match64: 0x00000000, model64: 0x254e00002567},
		modelTuple{type64: 0x2700000027, matchRI: 0x0211, match64: 0x00000000, model64: 0x25670000257e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0212, match64: 0x00000000, model64: 0x257e00002589},
		modelTuple{type64: 0x2700000027, matchRI: 0x0213, match64: 0x00000000, model64: 0x258900002592},
		modelTuple{type64: 0x2700000027, matchRI: 0x0214, match64: 0x00000000, model64: 0x25920000259b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0215, match64: 0x00000000, model64: 0x259b000025a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0216, match64: 0x00000000, model64: 0x25a8000025b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0217, match64: 0x00000000, model64: 0x25b8000025c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0218, match64: 0x00000000, model64: 0x25c8000025d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0219, match64: 0x00000000, model64: 0x25d8000025e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x021a, match64: 0x00000000, model64: 0x25e8000025f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x021b, match64: 0x00000000, model64: 0x25f800002608},
		modelTuple{type64: 0x2700000027, matchRI: 0x021c, match64: 0x00000000, model64: 0x260800002618},
		modelTuple{type64: 0x2700000027, matchRI: 0x021d, match64: 0x00000000, model64: 0x261800002624},
		modelTuple{type64: 0x2700000027, matchRI: 0x021e, match64: 0x00000000, model64: 0x262400002633},
		modelTuple{type64: 0x2700000027, matchRI: 0x021f, match64: 0x00000000, model64: 0x26330000263d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0220, match64: 0x00000000, model64: 0x263d0000264e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0221, match64: 0x00000000, model64: 0x264e0000265f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0222, match64: 0x00000000, model64: 0x265f00002670},
		modelTuple{type64: 0x2700000027, matchRI: 0x0223, match64: 0x00000000, model64: 0x267000002681},
		modelTuple{type64: 0x2700000027, matchRI: 0x0224, match64: 0x00000000, model64: 0x268100002697},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x26970000269f, model64: 0x269f000026a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0225, match64: 0x00000000, model64: 0x26a9000026b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b4000026ba, model64: 0x26b4000026ba},
		modelTuple{type64: 0x26ba000026c7, matchRI: 0x0226, match64: 0x00000000, model64: 0x26c7000026cb},
		modelTuple{type64: 0x26ba000026c7, matchRI: 0x0227, match64: 0x00000000, model64: 0x26c7000026cb},
		modelTuple{type64: 0x26ba000026c7, matchRI: 0x0228, match64: 0x00000000, model64: 0x26cb000026d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0229, match64: 0x00000000, model64: 0x26d3000026df},
		modelTuple{type64: 0x26ba000026c7, matchRI: 0x022a, match64: 0x00000000, model64: 0x26df000026f0},
		modelTuple{type64: 0x26ba000026c7, matchRI: 0x022b, match64: 0x00000000, model64: 0x26f0000026fb},
		modelTuple{type64: 0x26ba000026c7, matchRI: 0x022c, match64: 0x00000000, model64: 0x26fb0000270e},
		modelTuple{type64: 0x26ba000026c7, matchRI: -0x0001, match64: 0x270e0000271e, model64: 0x271e00002723},
		modelTuple{type64: 0x24300000245, matchRI: 0x022d, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x022f, match64: 0x00000000, model64: 0x27300000273e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0230, match64: 0x00000000, model64: 0x273e0000274f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x275a00002761, model64: 0x276100002769},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27690000276f, model64: 0x276f00002776},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x277a00002787, model64: 0x277a00002787},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27870000278c, model64: 0x27870000278c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x278c0000279a, model64: 0x279a000027a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0234, match64: 0x00000000, model64: 0x8660000086f},
		modelTuple{type64: 0x38400000391, matchRI: 0x0235, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0236, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0237, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x27b7000027ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x023b, match64: 0x00000000, model64: 0x27c3000027ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x023c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x023e, match64: 0x00000000, model64: 0x27cf000027de},
		modelTuple{type64: 0x2700000027, matchRI: 0x023f, match64: 0x00000000, model64: 0x27de000027eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0240, match64: 0x00000000, model64: 0x27eb000027fc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0244, match64: 0x00000000, model64: 0x280b0000280e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0247, match64: 0x00000000, model64: 0x281700002822},
		modelTuple{type64: 0x2700000027, matchRI: 0x0248, match64: 0x00000000, model64: 0x28220000282d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0249, match64: 0x00000000, model64: 0x282d00002834},
		modelTuple{type64: 0x2700000027, matchRI: 0x024a, match64: 0x00000000, model64: 0x28340000283f},
		modelTuple{type64: 0x2700000027, matchRI: 0x024b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x26ba000026c7, matchRI: 0x024d, match64: 0x00000000, model64: 0x28440000284b},
		modelTuple{type64: 0x26ba000026c7, matchRI: -0x0001, match64: 0x284b00002852, model64: 0x2700000027},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x28520000285a, model64: 0x28620000286c},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x286c00002874, model64: 0x28740000287e},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x287e00002886, model64: 0x288600002899},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x2899000028a1, model64: 0x28a1000028b4},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x28b4000028bc, model64: 0x28bc000028cf},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x28cf000028d7, model64: 0x28d7000028ea},
		modelTuple{type64: 0x285a00002862, matchRI: 0x024e, match64: 0x00000000, model64: 0x28ea000028fd},
		modelTuple{type64: 0x285a00002862, matchRI: 0x024f, match64: 0x00000000, model64: 0x28fd00002910},
		modelTuple{type64: 0x285a00002862, matchRI: 0x0250, match64: 0x00000000, model64: 0x29100000291d},
		modelTuple{type64: 0x285a00002862, matchRI: 0x0251, match64: 0x00000000, model64: 0x291d0000292a},
		modelTuple{type64: 0x285a00002862, matchRI: 0x0252, match64: 0x00000000, model64: 0x292a0000293f},
		modelTuple{type64: 0x285a00002862, matchRI: 0x0253, match64: 0x00000000, model64: 0x293f00002954},
		modelTuple{type64: 0x285a00002862, matchRI: 0x0254, match64: 0x00000000, model64: 0x295400002967},
		modelTuple{type64: 0x285a00002862, matchRI: 0x0255, match64: 0x00000000, model64: 0x29670000297a},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x297a00002983, model64: 0x29830000298e},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x298e00002996, model64: 0x2996000029a3},
		modelTuple{type64: 0x285a00002862, matchRI: 0x0256, match64: 0x00000000, model64: 0x29a3000029b7},
		modelTuple{type64: 0x285a00002862, matchRI: 0x0257, match64: 0x00000000, model64: 0x29b7000029cb},
		modelTuple{type64: 0x285a00002862, matchRI: 0x0258, match64: 0x00000000, model64: 0x29cb000029de},
		modelTuple{type64: 0x285a00002862, matchRI: 0x0259, match64: 0x00000000, model64: 0x29de000029f1},
		modelTuple{type64: 0x285a00002862, matchRI: 0x025a, match64: 0x00000000, model64: 0x29f100002a04},
		modelTuple{type64: 0x285a00002862, matchRI: 0x025b, match64: 0x00000000, model64: 0x2a0400002a17},
		modelTuple{type64: 0x285a00002862, matchRI: 0x025c, match64: 0x00000000, model64: 0x2a1700002a1c},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x025d, match64: 0x00000000, model64: 0x2a1c00002a2a},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x025e, match64: 0x00000000, model64: 0x2a2a00002a38},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x025f, match64: 0x00000000, model64: 0x2a3800002a46},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0260, match64: 0x00000000, model64: 0x2a4600002a54},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0261, match64: 0x00000000, model64: 0x2a5400002a67},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0262, match64: 0x00000000, model64: 0x2a6700002a75},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0263, match64: 0x00000000, model64: 0x2a7500002a80},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0264, match64: 0x00000000, model64: 0x2a8000002a8f},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0265, match64: 0x00000000, model64: 0x2a8f00002a9e},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0266, match64: 0x00000000, model64: 0x2a9e00002aa9},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0267, match64: 0x00000000, model64: 0x2aa900002ab4},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0268, match64: 0x00000000, model64: 0x2ab400002abf},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0269, match64: 0x00000000, model64: 0x2ab400002abf},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x026a, match64: 0x00000000, model64: 0x2abf00002ace},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x026b, match64: 0x00000000, model64: 0x2ace00002adf},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x026c, match64: 0x00000000, model64: 0x2adf00002aee},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x026d, match64: 0x00000000, model64: 0x2aee00002aff},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x026e, match64: 0x00000000, model64: 0x2aff00002b0e},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x026f, match64: 0x00000000, model64: 0x2b0e00002b24},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0270, match64: 0x00000000, model64: 0x2b2400002b33},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0271, match64: 0x00000000, model64: 0x2b3300002b44},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0272, match64: 0x00000000, model64: 0x2b4400002b53},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0273, match64: 0x00000000, model64: 0x2b5300002b64},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0274, match64: 0x00000000, model64: 0x2b6400002b73},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0275, match64: 0x00000000, model64: 0x2b7300002b84},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0276, match64: 0x00000000, model64: 0x2b8400002b93},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0277, match64: 0x00000000, model64: 0x2b9300002ba2},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0278, match64: 0x00000000, model64: 0x2ba200002bb3},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0279, match64: 0x00000000, model64: 0x2bb300002bc2},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x027a, match64: 0x00000000, model64: 0x2bc200002bd1},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x027b, match64: 0x00000000, model64: 0x2bd100002be0},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x027c, match64: 0x00000000, model64: 0x2be000002bf3},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x027d, match64: 0x00000000, model64: 0x2bf300002c05},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x027e, match64: 0x00000000, model64: 0x2c0500002c1c},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x027f, match64: 0x00000000, model64: 0x2c1c00002c2e},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0280, match64: 0x00000000, model64: 0x2c2e00002c40},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0281, match64: 0x00000000, model64: 0x2c4000002c52},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0282, match64: 0x00000000, model64: 0x2c4000002c52},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0283, match64: 0x00000000, model64: 0x2c5200002c64},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0284, match64: 0x00000000, model64: 0x2c6400002c76},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0285, match64: 0x00000000, model64: 0x2c7600002c88},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0286, match64: 0x00000000, model64: 0x2c8800002c9e},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0287, match64: 0x00000000, model64: 0x2c9e00002cb0},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0288, match64: 0x00000000, model64: 0x2cb000002cc6},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0289, match64: 0x00000000, model64: 0x2cc600002cdc},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x028a, match64: 0x00000000, model64: 0x2cdc00002cf2},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x028b, match64: 0x00000000, model64: 0x2cf200002d08},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x028c, match64: 0x00000000, model64: 0x2d0800002d1e},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x028d, match64: 0x00000000, model64: 0x2d1e00002d34},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x028e, match64: 0x00000000, model64: 0x2d3400002d4f},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x028f, match64: 0x00000000, model64: 0x2d4f00002d6a},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0290, match64: 0x00000000, model64: 0x2d6a00002d80},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0291, match64: 0x00000000, model64: 0x2d8000002d9b},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0292, match64: 0x00000000, model64: 0x2d9b00002db1},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0293, match64: 0x00000000, model64: 0x2db100002dc7},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0294, match64: 0x00000000, model64: 0x2dc700002ddd},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0295, match64: 0x00000000, model64: 0x2dc700002ddd},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0296, match64: 0x00000000, model64: 0x2ddd00002df3},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0297, match64: 0x00000000, model64: 0x2df300002e09},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0298, match64: 0x00000000, model64: 0x2e0900002e1f},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0299, match64: 0x00000000, model64: 0x2e1f00002e35},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x029a, match64: 0x00000000, model64: 0x2e3500002e4b},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x029b, match64: 0x00000000, model64: 0x2e4b00002e61},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x029c, match64: 0x00000000, model64: 0x2e6100002e73},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x029d, match64: 0x00000000, model64: 0x2e7300002e89},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x029e, match64: 0x00000000, model64: 0x2e8900002e9f},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x029f, match64: 0x00000000, model64: 0x2e9f00002eb5},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02a0, match64: 0x00000000, model64: 0x2eb500002ecb},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02a1, match64: 0x00000000, model64: 0x2ecb00002ee1},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02a2, match64: 0x00000000, model64: 0x2ee100002ef7},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02a3, match64: 0x00000000, model64: 0x2ef700002f0d},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02a4, match64: 0x00000000, model64: 0x2f0d00002f23},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02a5, match64: 0x00000000, model64: 0x2f2300002f39},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02a6, match64: 0x00000000, model64: 0x2f3900002f4f},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02a7, match64: 0x00000000, model64: 0x2f4f00002f65},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02a8, match64: 0x00000000, model64: 0x2f6500002f7b},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02a9, match64: 0x00000000, model64: 0x2f7b00002f96},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02aa, match64: 0x00000000, model64: 0x2f9600002fb1},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02ab, match64: 0x00000000, model64: 0x2fb100002fcc},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02ac, match64: 0x00000000, model64: 0x2fcc00002fe7},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02ad, match64: 0x00000000, model64: 0x2fe700002ffd},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02ae, match64: 0x00000000, model64: 0x2ffd00003013},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02af, match64: 0x00000000, model64: 0x301300003029},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02b0, match64: 0x00000000, model64: 0x30290000303f},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02b1, match64: 0x00000000, model64: 0x303f00003055},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02b2, match64: 0x00000000, model64: 0x30550000306b},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02b3, match64: 0x00000000, model64: 0x306b00003086},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02b4, match64: 0x00000000, model64: 0x3086000030a1},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02b5, match64: 0x00000000, model64: 0x30a1000030b7},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02b6, match64: 0x00000000, model64: 0x30b7000030cd},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02b7, match64: 0x00000000, model64: 0x30cd000030e3},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02b8, match64: 0x00000000, model64: 0x30e3000030f9},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02b9, match64: 0x00000000, model64: 0x30e3000030f9},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02ba, match64: 0x00000000, model64: 0x30f90000310f},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02bb, match64: 0x00000000, model64: 0x310f00003125},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02bc, match64: 0x00000000, model64: 0x31250000313b},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02bd, match64: 0x00000000, model64: 0x313b00003156},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02be, match64: 0x00000000, model64: 0x31560000316c},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02bf, match64: 0x00000000, model64: 0x316c00003182},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02c0, match64: 0x00000000, model64: 0x31820000319d},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02c1, match64: 0x00000000, model64: 0x319d000031ac},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02c2, match64: 0x00000000, model64: 0x31ac000031bb},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02c3, match64: 0x00000000, model64: 0x31bb000031ca},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02c4, match64: 0x00000000, model64: 0x31ca000031d9},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02c5, match64: 0x00000000, model64: 0x31d9000031e8},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02c6, match64: 0x00000000, model64: 0x31e8000031f7},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02c7, match64: 0x00000000, model64: 0x31f700003206},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02c8, match64: 0x00000000, model64: 0x320600003215},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02c9, match64: 0x00000000, model64: 0x321500003224},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02ca, match64: 0x00000000, model64: 0x322400003233},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02cb, match64: 0x00000000, model64: 0x32330000324c},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02cc, match64: 0x00000000, model64: 0x324c0000326a},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02cd, match64: 0x00000000, model64: 0x326a00003278},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02ce, match64: 0x00000000, model64: 0x32780000328a},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02cf, match64: 0x00000000, model64: 0x326a00003278},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02d0, match64: 0x00000000, model64: 0x328a0000329d},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02d1, match64: 0x00000000, model64: 0x329d000032ac},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02d2, match64: 0x00000000, model64: 0x32ac000032bd},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x02d3, match64: 0x00000000, model64: 0x32bd000032ce},
		modelTuple{type64: 0x24700000251, matchRI: 0x02d4, match64: 0x00000000, model64: 0x32ce000032d4},
		modelTuple{type64: 0x24700000251, matchRI: 0x02d5, match64: 0x00000000, model64: 0x32d4000032dd},
		modelTuple{type64: 0x24700000251, matchRI: 0x02d6, match64: 0x00000000, model64: 0x32dd000032e7},
		modelTuple{type64: 0x24700000251, matchRI: 0x02d7, match64: 0x00000000, model64: 0x32e7000032ef},
		modelTuple{type64: 0x24700000251, matchRI: 0x02d8, match64: 0x00000000, model64: 0x32ef000032f8},
		modelTuple{type64: 0x24700000251, matchRI: 0x02d9, match64: 0x00000000, model64: 0x32f800003300},
		modelTuple{type64: 0x24700000251, matchRI: 0x02da, match64: 0x00000000, model64: 0x330000003309},
		modelTuple{type64: 0x24700000251, matchRI: 0x02db, match64: 0x00000000, model64: 0x330900003312},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02dc, match64: 0x00000000, model64: 0x33120000331f},
		modelTuple{type64: 0x24700000251, matchRI: 0x02dd, match64: 0x00000000, model64: 0x331f00003327},
		modelTuple{type64: 0x24700000251, matchRI: 0x02de, match64: 0x00000000, model64: 0x332700003330},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02df, match64: 0x00000000, model64: 0x33300000333e},
		modelTuple{type64: 0x24700000251, matchRI: 0x02e0, match64: 0x00000000, model64: 0x333e00003347},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02e1, match64: 0x00000000, model64: 0x334700003354},
		modelTuple{type64: 0x24700000251, matchRI: 0x02e2, match64: 0x00000000, model64: 0x33540000335c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02e3, match64: 0x00000000, model64: 0x335c00003369},
		modelTuple{type64: 0x24700000251, matchRI: 0x02e4, match64: 0x00000000, model64: 0x336900003371},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02e5, match64: 0x00000000, model64: 0x33710000337e},
		modelTuple{type64: 0x24700000251, matchRI: 0x02e6, match64: 0x00000000, model64: 0x337e00003387},
		modelTuple{type64: 0x24700000251, matchRI: 0x02e7, match64: 0x00000000, model64: 0x338700003390},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02e8, match64: 0x00000000, model64: 0x339000003398},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02e9, match64: 0x00000000, model64: 0x3398000033a9},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02ea, match64: 0x00000000, model64: 0x33a9000033b6},
		modelTuple{type64: 0x24700000251, matchRI: 0x02eb, match64: 0x00000000, model64: 0x33b6000033bf},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02ec, match64: 0x00000000, model64: 0x33bf000033cf},
		modelTuple{type64: 0x24700000251, matchRI: 0x02ed, match64: 0x00000000, model64: 0x33cf000033dd},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02ee, match64: 0x00000000, model64: 0x33dd000033ee},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02ef, match64: 0x00000000, model64: 0x33ee000033fb},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02f0, match64: 0x00000000, model64: 0x33fb00003404},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02f1, match64: 0x00000000, model64: 0x340400003415},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02f2, match64: 0x00000000, model64: 0x341500003422},
		modelTuple{type64: 0x24700000251, matchRI: 0x02f3, match64: 0x00000000, model64: 0x342200003430},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02f4, match64: 0x00000000, model64: 0x343000003439},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02f5, match64: 0x00000000, model64: 0x343900003449},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02f6, match64: 0x00000000, model64: 0x34490000345a},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02f7, match64: 0x00000000, model64: 0x345a00003467},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02f8, match64: 0x00000000, model64: 0x346700003475},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02f9, match64: 0x00000000, model64: 0x34750000347e},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02fa, match64: 0x00000000, model64: 0x347e0000348f},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02fb, match64: 0x00000000, model64: 0x348f0000349c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02fc, match64: 0x00000000, model64: 0x349c000034aa},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x02fd, match64: 0x00000000, model64: 0x34aa000034b3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x02fe, match64: 0x00000000, model64: 0x34b3000034b7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x02ff, match64: 0x00000000, model64: 0x34b7000034bd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0300, match64: 0x00000000, model64: 0x34bd000034c6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0301, match64: 0x00000000, model64: 0x34c6000034cc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0302, match64: 0x00000000, model64: 0x34cc000034d2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0303, match64: 0x00000000, model64: 0x34d2000034da},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0304, match64: 0x00000000, model64: 0x34da000034e5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0305, match64: 0x00000000, model64: 0x34e5000034f0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0306, match64: 0x00000000, model64: 0x34f0000034fb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0307, match64: 0x00000000, model64: 0x34fb00003505},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0308, match64: 0x00000000, model64: 0x350500003511},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0309, match64: 0x00000000, model64: 0x35110000351e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x030a, match64: 0x00000000, model64: 0x351e00003528},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x030b, match64: 0x00000000, model64: 0x352800003537},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x030c, match64: 0x00000000, model64: 0x353700003544},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x030d, match64: 0x00000000, model64: 0x35440000354e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x030e, match64: 0x00000000, model64: 0x354e00003559},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x030f, match64: 0x00000000, model64: 0x355900003567},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0310, match64: 0x00000000, model64: 0x35670000357a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0311, match64: 0x00000000, model64: 0x357a00003588},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0312, match64: 0x00000000, model64: 0x358800003598},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0313, match64: 0x00000000, model64: 0x3598000035ac},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0314, match64: 0x00000000, model64: 0x35ac000035bb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0315, match64: 0x00000000, model64: 0x35bb000035ca},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0316, match64: 0x00000000, model64: 0x35ca000035d5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0317, match64: 0x00000000, model64: 0x35d5000035df},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0318, match64: 0x00000000, model64: 0x35df000035eb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0319, match64: 0x00000000, model64: 0x35eb000035fc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x031a, match64: 0x00000000, model64: 0x35fc00003608},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x031b, match64: 0x00000000, model64: 0x36080000361d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x031c, match64: 0x00000000, model64: 0x361d0000362d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x031d, match64: 0x00000000, model64: 0x362d0000363c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x031e, match64: 0x00000000, model64: 0x363c00003646},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x031f, match64: 0x00000000, model64: 0x364600003655},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0320, match64: 0x00000000, model64: 0x36550000365f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0321, match64: 0x00000000, model64: 0x365f00003672},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0322, match64: 0x00000000, model64: 0x367200003680},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0323, match64: 0x00000000, model64: 0x368000003690},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0324, match64: 0x00000000, model64: 0x36900000369b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0325, match64: 0x00000000, model64: 0x369b000036ae},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0326, match64: 0x00000000, model64: 0x36ae000036bc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0327, match64: 0x00000000, model64: 0x36bc000036d1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0328, match64: 0x00000000, model64: 0x36d1000036e1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0329, match64: 0x00000000, model64: 0x36e1000036f4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x032a, match64: 0x00000000, model64: 0x36f400003702},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x032b, match64: 0x00000000, model64: 0x370200003715},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x032c, match64: 0x00000000, model64: 0x371500003723},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x032d, match64: 0x00000000, model64: 0x372300003736},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x032e, match64: 0x00000000, model64: 0x373600003744},
		modelTuple{type64: 0x24300000245, matchRI: 0x032f, match64: 0x00000000, model64: 0x37440000374e},
		modelTuple{type64: 0x24300000245, matchRI: 0x0330, match64: 0x00000000, model64: 0x374e00003758},
		modelTuple{type64: 0x24300000245, matchRI: 0x0331, match64: 0x00000000, model64: 0x375800003762},
		modelTuple{type64: 0x24300000245, matchRI: 0x0332, match64: 0x00000000, model64: 0x37620000376d},
		modelTuple{type64: 0x24300000245, matchRI: 0x0333, match64: 0x00000000, model64: 0x376d0000377f},
		modelTuple{type64: 0x24300000245, matchRI: 0x0334, match64: 0x00000000, model64: 0x377f00003787},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0335, match64: 0x00000000, model64: 0x37870000378e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0336, match64: 0x00000000, model64: 0x34b3000034b7},
		modelTuple{type64: 0x24700000251, matchRI: 0x0337, match64: 0x00000000, model64: 0x378e00003797},
		modelTuple{type64: 0x24700000251, matchRI: 0x0338, match64: 0x00000000, model64: 0x378e00003797},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0x379f000037bc, model64: 0x37bc000037d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0339, match64: 0x00000000, model64: 0x37d0000037d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x033a, match64: 0x00000000, model64: 0x37d0000037d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x033b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x033d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x37d6000037ee, model64: 0x37ee000037ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x033e, match64: 0x00000000, model64: 0x37ff0000380d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x380d00003815, model64: 0x381500003824},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x382400003830, model64: 0x38300000383c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x383c00003843, model64: 0x38430000384d},
		modelTuple{type64: 0x2700000027, matchRI: 0x033f, match64: 0x00000000, model64: 0x384d00003854},
		modelTuple{type64: 0x2700000027, matchRI: 0x0340, match64: 0x00000000, model64: 0x38540000385a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0341, match64: 0x00000000, model64: 0x1b2000001b21},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0342, match64: 0x00000000, model64: 0x385a00003868},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x386800003870, model64: 0x387000003878},
		modelTuple{type64: 0x2700000027, matchRI: 0x0343, match64: 0x00000000, model64: 0x387800003885},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0344, match64: 0x00000000, model64: 0x38850000388e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0345, match64: 0x00000000, model64: 0x388e0000389b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0346, match64: 0x00000000, model64: 0x389b000038a7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x38a7000038be, model64: 0x38be000038ce},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x38ce000038d9, model64: 0x38d9000038eb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0347, match64: 0x00000000, model64: 0x38eb000038fd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0348, match64: 0x00000000, model64: 0x38fd00003908},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0349, match64: 0x00000000, model64: 0x39080000390e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x034a, match64: 0x00000000, model64: 0x390e0000391e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x391e0000392f, model64: 0x392f0000393d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x034b, match64: 0x00000000, model64: 0x393d00003947},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x034c, match64: 0x00000000, model64: 0x39470000394e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x034d, match64: 0x00000000, model64: 0x394e00003956},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x034e, match64: 0x00000000, model64: 0x395600003961},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x034f, match64: 0x00000000, model64: 0x39610000396c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0350, match64: 0x00000000, model64: 0x396c00003976},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0351, match64: 0x00000000, model64: 0x397600003983},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0352, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0353, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0354, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x398e0000399a, model64: 0x399a0000399d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x399d000039a8, model64: 0x39a8000039aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x39aa000039b5, model64: 0x39b5000039b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x39b7000039c2, model64: 0x39c2000039c4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x39ca000039d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0357, match64: 0x00000000, model64: 0x39d8000039e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0358, match64: 0x00000000, model64: 0x39e2000039f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0359, match64: 0x00000000, model64: 0x39f1000039fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x035a, match64: 0x00000000, model64: 0x39fb00003a02},
		modelTuple{type64: 0x2700000027, matchRI: 0x035b, match64: 0x00000000, model64: 0x3a0200003a09},
		modelTuple{type64: 0x2700000027, matchRI: 0x035c, match64: 0x00000000, model64: 0x3a0900003a12},
		modelTuple{type64: 0x2700000027, matchRI: 0x035d, match64: 0x00000000, model64: 0x3a1200003a18},
		modelTuple{type64: 0x2700000027, matchRI: 0x035e, match64: 0x00000000, model64: 0x3a1800003a21},
		modelTuple{type64: 0x2700000027, matchRI: 0x035f, match64: 0x00000000, model64: 0x3a2100003a2c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a3a00003a42, model64: 0x3a4200003a46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a4600003a4c, model64: 0x3a4c00003a51},
		modelTuple{type64: 0x2700000027, matchRI: 0x0362, match64: 0x00000000, model64: 0x3a5100003a55},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a5500003a5a, model64: 0x3a5a00003a5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a5e00003a64, model64: 0x3a6400003a69},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a6900003a6f, model64: 0x3a6f00003a74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a7400003a7a, model64: 0x3a7a00003a7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a7f00003a88, model64: 0x3a8800003a90},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a9000003a96, model64: 0x3a9600003a9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a9b00003aa1, model64: 0x3aa100003aa6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3aa600003aac, model64: 0x3aac00003ab1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ab100003ab7, model64: 0x3ab700003ab8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ab800003abd, model64: 0x3abd00003ac1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ac100003ac6, model64: 0x3ac600003aca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3aca00003ad0, model64: 0x3ad000003ad5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ad500003adb, model64: 0x3adb00003ae0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ae000003ae6, model64: 0x3ae600003aeb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3aeb00003af0, model64: 0x3af000003af4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3af400003af9, model64: 0x3af900003afd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0363, match64: 0x00000000, model64: 0x3afd00003b02},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b0200003b07, model64: 0x3b0700003b09},
		modelTuple{type64: 0x2700000027, matchRI: 0x0364, match64: 0x00000000, model64: 0x3b0900003b0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0365, match64: 0x00000000, model64: 0x3b0f00003b15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b1500003b1c, model64: 0x3b1c00003b22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b2200003b29, model64: 0x3b2900003b2f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b2f00003b3a, model64: 0x3b3a00003b3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b3f00003b4b, model64: 0x3b4b00003b50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b5000003b5b, model64: 0x3b5b00003b60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b6000003b6d, model64: 0x3b6d00003b73},
		modelTuple{type64: 0x2700000027, matchRI: 0x0366, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0369, match64: 0x00000000, model64: 0x3b7f00003b85},
		modelTuple{type64: 0x2700000027, matchRI: 0x036a, match64: 0x00000000, model64: 0x3b8500003b8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x036b, match64: 0x00000000, model64: 0x3b8d00003b94},
		modelTuple{type64: 0x2700000027, matchRI: 0x036c, match64: 0x00000000, model64: 0x3b9400003b99},
		modelTuple{type64: 0x2700000027, matchRI: 0x036d, match64: 0x00000000, model64: 0x3b9900003b9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x036e, match64: 0x00000000, model64: 0x3b9c00003ba0},
		modelTuple{type64: 0x2700000027, matchRI: 0x036f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0370, match64: 0x00000000, model64: 0x3ba000003ba6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0371, match64: 0x00000000, model64: 0x3ba600003bad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0372, match64: 0x00000000, model64: 0x3bad00003bb0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0373, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x0374, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0376, match64: 0x00000000, model64: 0x3bb800003bc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0377, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x0378, match64: 0x00000000, model64: 0x3bc300003bc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x037a, match64: 0x00000000, model64: 0x3bd900003be3},
		modelTuple{type64: 0x2700000027, matchRI: 0x037c, match64: 0x00000000, model64: 0x3be900003bf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x037d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x037f, match64: 0x00000000, model64: 0x3bf300003bfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0380, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0382, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0383, match64: 0x00000000, model64: 0x3c0100003c05},
		modelTuple{type64: 0x2700000027, matchRI: 0x0384, match64: 0x00000000, model64: 0x3c0500003c0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0386, match64: 0x00000000, model64: 0x3c1400003c19},
		modelTuple{type64: 0x2700000027, matchRI: 0x0387, match64: 0x00000000, model64: 0x3c1900003c1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0388, match64: 0x00000000, model64: 0x3c1d00003c21},
		modelTuple{type64: 0x2700000027, matchRI: 0x0389, match64: 0x00000000, model64: 0x3c2100003c28},
		modelTuple{type64: 0x2700000027, matchRI: 0x038a, match64: 0x00000000, model64: 0x3c2800003c2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x038b, match64: 0x00000000, model64: 0x3c2e00003c38},
		modelTuple{type64: 0x2700000027, matchRI: 0x038c, match64: 0x00000000, model64: 0x3c3800003c3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x038d, match64: 0x00000000, model64: 0x3c3c00003c41},
		modelTuple{type64: 0x2700000027, matchRI: 0x038e, match64: 0x00000000, model64: 0x3c4100003c46},
		modelTuple{type64: 0x2700000027, matchRI: 0x038f, match64: 0x00000000, model64: 0x3c4600003c4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0390, match64: 0x00000000, model64: 0x3c4a00003c50},
		modelTuple{type64: 0x2700000027, matchRI: 0x0391, match64: 0x00000000, model64: 0x3c5000003c55},
		modelTuple{type64: 0x2700000027, matchRI: 0x0392, match64: 0x00000000, model64: 0x3c5500003c59},
		modelTuple{type64: 0x2700000027, matchRI: 0x0393, match64: 0x00000000, model64: 0x3c5900003c5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0394, match64: 0x00000000, model64: 0x3c5e00003c66},
		modelTuple{type64: 0x2700000027, matchRI: 0x0395, match64: 0x00000000, model64: 0x3c6600003c71},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0396, match64: 0x00000000, model64: 0x3c7100003c7e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0397, match64: 0x00000000, model64: 0x3c7e00003c84},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0398, match64: 0x00000000, model64: 0x3c8400003c89},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0399, match64: 0x00000000, model64: 0x3c8900003c95},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x039a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x039b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x039e, match64: 0x00000000, model64: 0x3c9e00003ca9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x039f, match64: 0x00000000, model64: 0x3ca900003cb9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03a0, match64: 0x00000000, model64: 0x3cb900003cc3},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x3cc300003cc9, model64: 0x3cc900003cd1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03a1, match64: 0x00000000, model64: 0x3cd100003ce0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03a2, match64: 0x00000000, model64: 0x3ce000003cf3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03a3, match64: 0x00000000, model64: 0x3cf300003d04},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03a4, match64: 0x00000000, model64: 0x3d0400003d0e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03a5, match64: 0x00000000, model64: 0x3d0e00003d12},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03a6, match64: 0x00000000, model64: 0x3d1200003d1e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03a7, match64: 0x00000000, model64: 0x3d1e00003d28},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03a8, match64: 0x00000000, model64: 0x3d2800003d3a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03a9, match64: 0x00000000, model64: 0x3d3a00003d47},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03aa, match64: 0x00000000, model64: 0x3d4700003d51},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03ab, match64: 0x00000000, model64: 0x3d5100003d5d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03ac, match64: 0x00000000, model64: 0x3d5d00003d73},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03ad, match64: 0x00000000, model64: 0x3d7300003d7e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03ae, match64: 0x00000000, model64: 0x3d7e00003d94},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03af, match64: 0x00000000, model64: 0x3d9400003daa},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b0, match64: 0x00000000, model64: 0x3daa00003dc1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b1, match64: 0x00000000, model64: 0x3dc100003dd7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b2, match64: 0x00000000, model64: 0x3dd700003ded},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b3, match64: 0x00000000, model64: 0x3ded00003e02},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x3e0200003e0e, model64: 0x3e0e00003e22},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b4, match64: 0x00000000, model64: 0x3e2200003e2e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x3e2e00003e38, model64: 0x3e3800003e41},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x3e4100003e45, model64: 0x3e4500003e4f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b5, match64: 0x00000000, model64: 0x3e4f00003e59},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b6, match64: 0x00000000, model64: 0x3e5900003e63},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b7, match64: 0x00000000, model64: 0x3e6300003e6d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b8, match64: 0x00000000, model64: 0x3e6d00003e79},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x3e7900003e7d, model64: 0x3e7d00003e89},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03ba, match64: 0x00000000, model64: 0x3e8900003e99},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03bb, match64: 0x00000000, model64: 0x3e9900003ea5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03bc, match64: 0x00000000, model64: 0x3ea500003eae},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x3eae00003ec1, model64: 0x3ec100003edc},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x3edc00003ee7, model64: 0x3ee700003eed},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x03bd, match64: 0x00000000, model64: 0x3eed00003ef4},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x03be, match64: 0x00000000, model64: 0x3ef400003f02},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x03bf, match64: 0x00000000, model64: 0x3f0200003f0b},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x03c0, match64: 0x00000000, model64: 0x3f0b00003f1d},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x03c1, match64: 0x00000000, model64: 0x3f1d00003f26},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c2, match64: 0x00000000, model64: 0x3f2600003f36},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c3, match64: 0x00000000, model64: 0x3f3600003f3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c4, match64: 0x00000000, model64: 0x3f3f00003f4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c5, match64: 0x00000000, model64: 0x3f4b00003f59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3f5900003f65, model64: 0x3f6500003f6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3f6e00003f7a, model64: 0x3f7a00003f8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c6, match64: 0x00000000, model64: 0x3f8a00003f94},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c7, match64: 0x00000000, model64: 0x3f9400003fa4},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c8, match64: 0x00000000, model64: 0x3fa400003fad},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c9, match64: 0x00000000, model64: 0x3fad00003fbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ca, match64: 0x00000000, model64: 0x3fbb00003fc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x03cb, match64: 0x00000000, model64: 0x3fc400003fce},
		modelTuple{type64: 0x2700000027, matchRI: 0x03cc, match64: 0x00000000, model64: 0x3fce00003fd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x03cd, match64: 0x00000000, model64: 0x3fd700003fe5},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ce, match64: 0x00000000, model64: 0x3fe500003fee},
		modelTuple{type64: 0x2700000027, matchRI: 0x03cf, match64: 0x00000000, model64: 0x3fee00003ffc},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d0, match64: 0x00000000, model64: 0x3ffc0000400e},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d1, match64: 0x00000000, model64: 0x400e0000401c},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d2, match64: 0x00000000, model64: 0x401c00004025},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d3, match64: 0x00000000, model64: 0x40250000402f},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d4, match64: 0x00000000, model64: 0x402f0000403b},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d5, match64: 0x00000000, model64: 0x403b0000404a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x404a00004050, model64: 0x40500000405f},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d6, match64: 0x00000000, model64: 0x405f0000406e},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d7, match64: 0x00000000, model64: 0x406e00004077},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d8, match64: 0x00000000, model64: 0x407700004084},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d9, match64: 0x00000000, model64: 0x408400004092},
		modelTuple{type64: 0x2700000027, matchRI: 0x03da, match64: 0x00000000, model64: 0x40920000409c},
		modelTuple{type64: 0x2700000027, matchRI: 0x03db, match64: 0x00000000, model64: 0x409c000040a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x03dc, match64: 0x00000000, model64: 0x40a5000040ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x03dd, match64: 0x00000000, model64: 0x40ae000040bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x03de, match64: 0x00000000, model64: 0x40bb000040c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x03df, match64: 0x00000000, model64: 0x40c4000040cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e0, match64: 0x00000000, model64: 0x40cf000040e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e1, match64: 0x00000000, model64: 0x3ffc0000400e},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e2, match64: 0x00000000, model64: 0x40e2000040f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e3, match64: 0x00000000, model64: 0x40f400004103},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e4, match64: 0x00000000, model64: 0x41030000410d},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e5, match64: 0x00000000, model64: 0x410d0000411a},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e6, match64: 0x00000000, model64: 0x411a00004129},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e7, match64: 0x00000000, model64: 0x41030000410d},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e8, match64: 0x00000000, model64: 0x412900004138},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e9, match64: 0x00000000, model64: 0x41380000414c},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ea, match64: 0x00000000, model64: 0x414c00004162},
		modelTuple{type64: 0x2700000027, matchRI: 0x03eb, match64: 0x00000000, model64: 0x416200004178},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ec, match64: 0x00000000, model64: 0x417800004185},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ed, match64: 0x00000000, model64: 0x418500004196},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ee, match64: 0x00000000, model64: 0x4196000041a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ef, match64: 0x00000000, model64: 0x41a4000041b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f0, match64: 0x00000000, model64: 0x41b4000041c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f1, match64: 0x00000000, model64: 0x41a4000041b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f2, match64: 0x00000000, model64: 0x41c2000041cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f3, match64: 0x00000000, model64: 0x41cb000041da},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f4, match64: 0x00000000, model64: 0x41da000041e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f5, match64: 0x00000000, model64: 0x41e9000041fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f6, match64: 0x00000000, model64: 0x41fd0000420d},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f7, match64: 0x00000000, model64: 0x406e00004077},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f8, match64: 0x00000000, model64: 0x420d0000421a},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f9, match64: 0x00000000, model64: 0x421a0000422c},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fa, match64: 0x00000000, model64: 0x422c00004239},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fb, match64: 0x00000000, model64: 0x423900004245},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fc, match64: 0x00000000, model64: 0x42450000424e},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fd, match64: 0x00000000, model64: 0x424e00004259},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fe, match64: 0x00000000, model64: 0x425900004264},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ff, match64: 0x00000000, model64: 0x42640000426f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0400, match64: 0x00000000, model64: 0x426f0000427a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0401, match64: 0x00000000, model64: 0x427a00004286},
		modelTuple{type64: 0x2700000027, matchRI: 0x0402, match64: 0x00000000, model64: 0x428600004291},
		modelTuple{type64: 0x2700000027, matchRI: 0x0403, match64: 0x00000000, model64: 0x42910000429c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0404, match64: 0x00000000, model64: 0x429c000042be},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0x42be000042c5, model64: 0x42c5000042d4},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0405, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x6c9000006d3, matchRI: 0x0406, match64: 0x00000000, model64: 0x42d4000042e2},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x42e2000042f2, model64: 0x42f2000042f6},
		modelTuple{type64: 0x285a00002862, matchRI: 0x0407, match64: 0x00000000, model64: 0x42f600004300},
		modelTuple{type64: 0x2700000027, matchRI: 0x0408, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0409, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x040a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x040b, match64: 0x00000000, model64: 0x43000000430e},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x040c, match64: 0x00000000, model64: 0x430e00004320},
		modelTuple{type64: 0x2700000027, matchRI: 0x040e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x434e00004357, model64: 0x435700004360},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43600000436a, model64: 0x436a00004374},
		modelTuple{type64: 0x2700000027, matchRI: 0x0412, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0416, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0417, match64: 0x00000000, model64: 0x43870000438d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0418, match64: 0x00000000, model64: 0x43870000438d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0419, match64: 0x00000000, model64: 0x43870000438d},
		modelTuple{type64: 0x2700000027, matchRI: 0x041b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4397000043a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x041e, match64: 0x00000000, model64: 0x43a9000043b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x041f, match64: 0x00000000, model64: 0x43b1000043bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43c2000043cb, model64: 0x43cb000043d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43d4000043dd, model64: 0x43dd000043e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43e6000043f3, model64: 0x43f300004402},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0421, match64: 0x00000000, model64: 0x440200004405},
		modelTuple{type64: 0x2700000027, matchRI: 0x0422, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0424, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0426, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0427, match64: 0x00000000, model64: 0x440e0000441a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x441a00004426, model64: 0x442600004434},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0428, match64: 0x00000000, model64: 0x443400004441},
		modelTuple{type64: 0x2700000027, matchRI: 0x042a, match64: 0x00000000, model64: 0x44470000444e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x042d, match64: 0x00000000, model64: 0x446000004465},
		modelTuple{type64: 0x2700000027, matchRI: 0x042e, match64: 0x00000000, model64: 0x44650000446c},
		modelTuple{type64: 0x2700000027, matchRI: 0x042f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0430, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x446c00004473, model64: 0x44730000447d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x447d0000448b, model64: 0x448b00004499},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4499000044a2, model64: 0x4499000044a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0431, match64: 0x00000000, model64: 0x44a2000044ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x44ab000044b9, model64: 0x44b9000044c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0432, match64: 0x00000000, model64: 0x44c7000044d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0434, match64: 0x00000000, model64: 0x44dd000044e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0435, match64: 0x00000000, model64: 0x44e4000044ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0436, match64: 0x00000000, model64: 0x44f6000044ff},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x043a, match64: 0x00000000, model64: 0x45110000452f},
		modelTuple{type64: 0x2700000027, matchRI: 0x043b, match64: 0x00000000, model64: 0x452f00004546},
		modelTuple{type64: 0x2700000027, matchRI: 0x043c, match64: 0x00000000, model64: 0x454600004563},
		modelTuple{type64: 0x2700000027, matchRI: 0x043d, match64: 0x00000000, model64: 0x45630000457e},
		modelTuple{type64: 0x2700000027, matchRI: 0x043e, match64: 0x00000000, model64: 0x457e00004596},
		modelTuple{type64: 0x2700000027, matchRI: 0x043f, match64: 0x00000000, model64: 0x4596000045ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0440, match64: 0x00000000, model64: 0x45ad000045c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0441, match64: 0x00000000, model64: 0x45c5000045e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0442, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0443, match64: 0x00000000, model64: 0x45e2000045ef},
		modelTuple{type64: 0x24700000251, matchRI: 0x0444, match64: 0x00000000, model64: 0x45ef00004605},
		modelTuple{type64: 0x2700000027, matchRI: 0x0446, match64: 0x00000000, model64: 0x460800004613},
		modelTuple{type64: 0x2700000027, matchRI: 0x0447, match64: 0x00000000, model64: 0x461300004620},
		modelTuple{type64: 0x2700000027, matchRI: 0x0448, match64: 0x00000000, model64: 0x462000004628},
		modelTuple{type64: 0x2700000027, matchRI: 0x044a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x044b, match64: 0x00000000, model64: 0x462b0000462f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x462f00004633, model64: 0x462f00004633},
		modelTuple{type64: 0x2700000027, matchRI: 0x044c, match64: 0x00000000, model64: 0x46330000463e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46410000464a, model64: 0x464a00004653},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x46530000465a, model64: 0x46530000465a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x46630000466c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x044f, match64: 0x00000000, model64: 0x466f00004672},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0450, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x46720000467b, model64: 0x467b00004684},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46840000468a, model64: 0x468a00004690},
		modelTuple{type64: 0x2700000027, matchRI: 0x0451, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0453, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x469a000046a2, model64: 0x46a2000046a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0455, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0457, match64: 0x00000000, model64: 0x46a8000046b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0458, match64: 0x00000000, model64: 0x46b5000046bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0459, match64: 0x00000000, model64: 0x46bf000046ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x045b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x045c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0460, match64: 0x00000000, model64: 0x46e4000046eb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x46fa00004700},
		modelTuple{type64: 0x2700000027, matchRI: 0x0462, match64: 0x00000000, model64: 0x470600004711},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0465, match64: 0x00000000, model64: 0x47270000472e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0466, match64: 0x00000000, model64: 0x47270000472e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0467, match64: 0x00000000, model64: 0x47270000472e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0469, match64: 0x00000000, model64: 0x47340000473f},
		modelTuple{type64: 0x2700000027, matchRI: 0x046a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x046d, match64: 0x00000000, model64: 0x474c00004752},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x046e, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x046f, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x47580000475b, model64: 0x47580000475b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0470, match64: 0x00000000, model64: 0x475b0000475e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0471, match64: 0x00000000, model64: 0x475e00004766},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x476600004770, model64: 0x476600004770},
		modelTuple{type64: 0x2700000027, matchRI: 0x0472, match64: 0x00000000, model64: 0x477000004776},
		modelTuple{type64: 0x2700000027, matchRI: 0x0473, match64: 0x00000000, model64: 0x47760000477a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0474, match64: 0x00000000, model64: 0x477a00004787},
		modelTuple{type64: 0x24300000245, matchRI: 0x0475, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0476, match64: 0x00000000, model64: 0x478700004790},
		modelTuple{type64: 0x2700000027, matchRI: 0x0478, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0479, match64: 0x00000000, model64: 0x47970000479a},
		modelTuple{type64: 0x2700000027, matchRI: 0x047a, match64: 0x00000000, model64: 0x479a000047a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x047b, match64: 0x00000000, model64: 0x47a2000047ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x047c, match64: 0x00000000, model64: 0x47ac000047b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x047d, match64: 0x00000000, model64: 0x47b7000047c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x047e, match64: 0x00000000, model64: 0x47c1000047c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x047f, match64: 0x00000000, model64: 0x47c8000047ce},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x47e7000047f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0485, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0486, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0489, match64: 0x00000000, model64: 0x480a00004810},
		modelTuple{type64: 0x2700000027, matchRI: 0x048a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48150000481b, model64: 0x481b0000481e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x481e00004824, model64: 0x482400004827},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48270000482d, model64: 0x482d00004830},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x483000004836, model64: 0x483600004839},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48390000483f, model64: 0x483f00004842},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x484200004848, model64: 0x48480000484b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x484b00004851, model64: 0x485100004854},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48540000485a, model64: 0x1bfb00001bfd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x485a00004860, model64: 0x486000004866},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48660000486c, model64: 0x486c0000486f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x487b00004884, model64: 0x48840000488d},
		modelTuple{type64: 0x2700000027, matchRI: 0x048e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0490, match64: 0x00000000, model64: 0x48930000489f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0491, match64: 0x00000000, model64: 0x489f000048a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48a7000048ac, model64: 0x48ac000048b2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x48be000048c9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x48d2000048e0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x48e7000048f3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0498, match64: 0x00000000, model64: 0x49020000490f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x490f0000491d, model64: 0x490f0000491d},
		modelTuple{type64: 0x2700000027, matchRI: 0x049a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x049b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x049c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x049e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x049f, match64: 0x00000000, model64: 0x49260000492b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a2, match64: 0x00000000, model64: 0x49320000493b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a3, match64: 0x00000000, model64: 0x493b00004946},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a4, match64: 0x00000000, model64: 0x494600004951},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a5, match64: 0x00000000, model64: 0x495800004966},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x496a00004973},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a8, match64: 0x00000000, model64: 0x49860000498c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49950000499c, model64: 0x499c000049a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x04aa, match64: 0x00000000, model64: 0x49a3000049a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ab, match64: 0x00000000, model64: 0x49a9000049b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49b0000049b7, model64: 0x49b7000049ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49ba000049c1, model64: 0x49c1000049c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49c3000049ca, model64: 0x49ca000049cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49cc000049d3, model64: 0x49d3000049d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49d5000049dc, model64: 0x49dc000049df},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ac, match64: 0x00000000, model64: 0x49df000049e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49e1000049e8, model64: 0x49e8000049ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49ef000049f6, model64: 0x49f600004a01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a0100004a08, model64: 0x4a0800004a16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a1600004a1d, model64: 0x4a1d00004a20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a2000004a27, model64: 0x4a2700004a29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a2900004a30, model64: 0x4a3000004a37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a3700004a40, model64: 0x4a4000004a48},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ad, match64: 0x00000000, model64: 0x4a4800004a4e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4a5600004a5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b0, match64: 0x00000000, model64: 0x4a6400004a6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b1, match64: 0x00000000, model64: 0x4a6b00004a6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b2, match64: 0x00000000, model64: 0x4a6e00004a74},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b3, match64: 0x00000000, model64: 0x4a7400004a78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a7800004a7e, model64: 0x176200001765},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b4, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b5, match64: 0x00000000, model64: 0x4a7e00004a85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a8500004a90, model64: 0x4a9000004a9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b6, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4aa000004aa7, model64: 0x4aa700004aae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4aae00004ab5, model64: 0x4ab500004abc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4abc00004ac3, model64: 0x4ac300004aca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4aca00004ad1, model64: 0x4ad100004ad8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ad800004ae1, model64: 0x4ae100004aeb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4aeb00004af5, model64: 0x4af500004aff},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x04b9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ba, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x04bb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x4aff00004b0b, model64: 0x4aff00004b0b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x4b0b00004b13, model64: 0x4b0b00004b13},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x4b1300004b19, model64: 0x4b1900004b1f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x04bc, match64: 0x00000000, model64: 0x4b1f00004b29},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x04bd, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x04be, match64: 0x00000000, model64: 0x4b2900004b34},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x04bf, match64: 0x00000000, model64: 0x4b3400004b3d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x04c0, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c1, match64: 0x00000000, model64: 0x4b3d00004b46},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c4, match64: 0x00000000, model64: 0x4b4f00004b5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c5, match64: 0x00000000, model64: 0x4b5c00004b6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c6, match64: 0x00000000, model64: 0x4b6d00004b7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c7, match64: 0x00000000, model64: 0x4b7c00004b8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b8a00004b97, model64: 0x4b8a00004b97},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c8, match64: 0x00000000, model64: 0x4b9700004ba3},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c9, match64: 0x00000000, model64: 0x4ba300004bad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4bad00004bbe, model64: 0x4bbe00004bcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ca, match64: 0x00000000, model64: 0x4bcf00004bda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4bda00004be2, model64: 0x4be200004bec},
		modelTuple{type64: 0x2700000027, matchRI: 0x04cb, match64: 0x00000000, model64: 0x4bec00004bf1},
		modelTuple{type64: 0x24700000251, matchRI: 0x04cc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x04cd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x4bf100004bfb, model64: 0x4bfb00004c07},
		modelTuple{type64: 0x24300000245, matchRI: 0x04ce, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x4c0700004c0f, model64: 0x4c0f00004c19},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d0, match64: 0x00000000, model64: 0x4c1900004c1e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x4c1e00004c27, model64: 0x4c2700004c35},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c3e00004c48, model64: 0x4c4800004c54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c5400004c64, model64: 0x4c6400004c76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c7600004c85, model64: 0x4c8500004c96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c9600004ca6, model64: 0x4ca600004cb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d3, match64: 0x00000000, model64: 0x4cb900004cce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4cce00004cdd, model64: 0x4cdd00004cec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4cec00004cf5, model64: 0x4cf500004d01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d0400004d0c, model64: 0x4d0400004d0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d5, match64: 0x00000000, model64: 0x4d0c00004d16},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d6, match64: 0x00000000, model64: 0x4d1600004d1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d1f00004d2c, model64: 0x4d2c00004d39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d3900004d48, model64: 0x4d4800004d59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d5900004d69, model64: 0x4d6900004d7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d7b00004d88, model64: 0x4d8800004d95},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d7, match64: 0x00000000, model64: 0x4d9500004d9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d8, match64: 0x00000000, model64: 0x4d9e00004daa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4daa00004dbb, model64: 0x4dbb00004dcc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4dcc00004dd6, model64: 0x4dd600004de0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4de000004ded, model64: 0x4ded00004dfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d9, match64: 0x00000000, model64: 0x4d9500004d9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x04da, match64: 0x00000000, model64: 0x4dfa00004e0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e0a00004e17, model64: 0x4e1700004e24},
		modelTuple{type64: 0x2700000027, matchRI: 0x04db, match64: 0x00000000, model64: 0x4e2400004e33},
		modelTuple{type64: 0x2700000027, matchRI: 0x04dc, match64: 0x00000000, model64: 0x4e3300004e46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e4600004e54, model64: 0x4e5400004e62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e6200004e6b, model64: 0x4e6b00004e74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e7400004e80, model64: 0x4e7400004e80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e8000004e89, model64: 0x4e8900004e92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e9200004e9c, model64: 0x4e9200004e9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e9c00004eab, model64: 0x4eab00004eba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4eba00004ec7, model64: 0x4ec700004ed4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ed400004edb, model64: 0x4edb00004ee2},
		modelTuple{type64: 0x2700000027, matchRI: 0x04dd, match64: 0x00000000, model64: 0x4ee200004ef1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ef100004efc, model64: 0x4efc00004f07},
		modelTuple{type64: 0x2700000027, matchRI: 0x04de, match64: 0x00000000, model64: 0x4f0700004f0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f0f00004f16, model64: 0x4f0f00004f16},
		modelTuple{type64: 0x2700000027, matchRI: 0x04df, match64: 0x00000000, model64: 0x4f1600004f1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f1d00004f26, model64: 0x4f2600004f2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e0, match64: 0x00000000, model64: 0x4f2f00004f36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f3600004f46, model64: 0x4f3600004f46},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e1, match64: 0x00000000, model64: 0x4f4600004f51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f5100004f59, model64: 0x4f5900004f61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f6100004f6b, model64: 0x4f6b00004f75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f7500004f7c, model64: 0x4f7c00004f83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f8300004f8c, model64: 0x4f8c00004f95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f9500004f9f, model64: 0x4f9f00004fa9},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e2, match64: 0x00000000, model64: 0x4fa900004faf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4faf00004fb7, model64: 0x4faf00004fb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e3, match64: 0x00000000, model64: 0x4fb700004fbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e4, match64: 0x00000000, model64: 0x4fbf00004fc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e7, match64: 0x00000000, model64: 0x4fc600004fd2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4fd200004fdd, model64: 0x4fd200004fdd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4fdd00004fe9, model64: 0x4fdd00004fe9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4fe900004ff5, model64: 0x4fe900004ff5},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e8, match64: 0x00000000, model64: 0x4ff500004ffd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ffd00005006, model64: 0x4ffd00005006},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x500600005010, model64: 0x500600005010},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x501000005018, model64: 0x501000005018},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50180000501e, model64: 0x501e00005027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50270000502e, model64: 0x502e0000503b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e9, match64: 0x00000000, model64: 0x503b00005041},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x504100005047, model64: 0x50470000504d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x504d00005053, model64: 0x505300005059},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50590000505f, model64: 0x505f00005065},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50650000506a, model64: 0x50650000506a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x506a00005070, model64: 0x506a00005070},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ea, match64: 0x00000000, model64: 0x507000005078},
		modelTuple{type64: 0x2700000027, matchRI: 0x04eb, match64: 0x00000000, model64: 0x507800005082},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ec, match64: 0x00000000, model64: 0x508200005093},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5093000050a2, model64: 0x5093000050a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50a2000050ad, model64: 0x50a2000050ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50ad000050b9, model64: 0x50b9000050c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50c5000050d1, model64: 0x50c5000050d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ed, match64: 0x00000000, model64: 0x50d1000050d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ee, match64: 0x00000000, model64: 0x50d6000050e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50e1000050e9, model64: 0x50e1000050e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50e9000050f0, model64: 0x50e9000050f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ef, match64: 0x00000000, model64: 0x50f0000050f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f0, match64: 0x00000000, model64: 0x50f4000050ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f1, match64: 0x00000000, model64: 0x50ff0000510a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x510a0000511c, model64: 0x511c00005130},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f2, match64: 0x00000000, model64: 0x51300000513c},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f3, match64: 0x00000000, model64: 0x513c00005143},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f4, match64: 0x00000000, model64: 0x51430000514a},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x514a0000515a, model64: 0x514a0000515a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x04f6, match64: 0x00000000, model64: 0x515a00005163},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x04f7, match64: 0x00000000, model64: 0x51630000516b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x04f8, match64: 0x00000000, model64: 0x516b00005173},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x04f9, match64: 0x00000000, model64: 0x517300005181},
		modelTuple{type64: 0x2700000027, matchRI: 0x04fa, match64: 0x00000000, model64: 0x518100005188},
		modelTuple{type64: 0x2700000027, matchRI: 0x04fb, match64: 0x00000000, model64: 0x518100005188},
		modelTuple{type64: 0x2700000027, matchRI: 0x04fc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5190000051a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51ab000051b5, model64: 0x51b5000051b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51b9000051bf, model64: 0x51bf000051c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ff, match64: 0x00000000, model64: 0x51c6000051d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51d0000051d5, model64: 0x51d0000051d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51d5000051dc, model64: 0x51d5000051dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51dc000051e5, model64: 0x51e5000051ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51ec000051ef, model64: 0x51ec000051ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0500, match64: 0x00000000, model64: 0x51ef000051f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0501, match64: 0x00000000, model64: 0x51e5000051ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0502, match64: 0x00000000, model64: 0x51f6000051f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0503, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0504, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x51ff00005204},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x0508, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0509, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x522300005225, model64: 0x522300005225},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x522d00005234, model64: 0x52340000523e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x523e00005244, model64: 0x52440000525a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x525a0000525f, model64: 0x525f00005265},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52650000526a, model64: 0x52340000523e},
		modelTuple{type64: 0x2700000027, matchRI: 0x050b, match64: 0x00000000, model64: 0x526a0000527b},
		modelTuple{type64: 0x2700000027, matchRI: 0x050d, match64: 0x00000000, model64: 0x224e00002252},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x528200005287, model64: 0x52870000528c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x528c00005296, model64: 0x5296000052a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x050e, match64: 0x00000000, model64: 0x52a2000052a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x050f, match64: 0x00000000, model64: 0x52a9000052ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0510, match64: 0x00000000, model64: 0x52ad000052b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0511, match64: 0x00000000, model64: 0x52b1000052b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0512, match64: 0x00000000, model64: 0x52b9000052bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52bd000052c7, model64: 0x52c7000052cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52cc000052d2, model64: 0x52d2000052d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0513, match64: 0x00000000, model64: 0x52d9000052e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0514, match64: 0x00000000, model64: 0x52e1000052e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0515, match64: 0x00000000, model64: 0x52e5000052e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0516, match64: 0x00000000, model64: 0x52e9000052ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0517, match64: 0x00000000, model64: 0x52ed000052f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0518, match64: 0x00000000, model64: 0x52f5000052fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0519, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x051a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x530100005307},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x530c00005315},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x051f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0520, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x53210000532b, model64: 0x532b00005336},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x533c00005341},
		modelTuple{type64: 0x2700000027, matchRI: 0x0523, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0524, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0525, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x534f00005358, model64: 0x535800005360},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53600000536d, model64: 0x536d00005370},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x537600005383, model64: 0x538300005389},
		modelTuple{type64: 0x2700000027, matchRI: 0x0528, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x538f0000539a, model64: 0x539a000053a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x052a, match64: 0x00000000, model64: 0x53a5000053ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x052b, match64: 0x00000000, model64: 0x53ae000053b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x052c, match64: 0x00000000, model64: 0x53b5000053be},
		modelTuple{type64: 0x2700000027, matchRI: 0x052d, match64: 0x00000000, model64: 0x53be000053c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x052e, match64: 0x00000000, model64: 0x53c1000053c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x052f, match64: 0x00000000, model64: 0x53c6000053cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53cb000053cf, model64: 0x53cf000053d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53d3000053d9, model64: 0x53d9000053de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0530, match64: 0x00000000, model64: 0x53de000053e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0531, match64: 0x00000000, model64: 0x53e8000053f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53f400005401, model64: 0x54010000540e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x540e0000541a, model64: 0x541a00005426},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x542600005430, model64: 0x54300000543a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x543a00005442, model64: 0x543a00005442},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54420000544c, model64: 0x54420000544c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x544c0000545c, model64: 0x544c0000545c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x545c00005468, model64: 0x545c00005468},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x546800005475, model64: 0x547500005482},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54820000548c, model64: 0x548c00005496},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5496000054a0, model64: 0x54a0000054a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54a8000054b6, model64: 0x54b6000054c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54c4000054d0, model64: 0x54d0000054dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54dc000054e8, model64: 0x54e8000054ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54ed000054f7, model64: 0x54f7000054fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54fa00005506, model64: 0x55060000550b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0532, match64: 0x00000000, model64: 0x550b00005510},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0533, match64: 0x00000000, model64: 0x551000005517},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x551700005520, model64: 0x552000005528},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x552800005535, model64: 0x55350000553a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x553a0000554a, model64: 0x554a00005552},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x55520000555f, model64: 0x555f00005564},
		modelTuple{type64: 0x2700000027, matchRI: 0x0534, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0535, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0536, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x557b0000558b, model64: 0x557b0000558b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0538, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0539, match64: 0x00000000, model64: 0x55910000559d},
		modelTuple{type64: 0x2700000027, matchRI: 0x053a, match64: 0x00000000, model64: 0x559d000055a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x053b, match64: 0x00000000, model64: 0x55a9000055b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x053c, match64: 0x00000000, model64: 0x55b1000055ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x053d, match64: 0x00000000, model64: 0x55ba000055c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x053e, match64: 0x00000000, model64: 0x55c6000055d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x053f, match64: 0x00000000, model64: 0x55d2000055dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55dc000055ef, model64: 0x55ef00005602},
		modelTuple{type64: 0x2700000027, matchRI: 0x0540, match64: 0x00000000, model64: 0x560200005615},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0541, match64: 0x00000000, model64: 0x561500005623},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0542, match64: 0x00000000, model64: 0x561500005623},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0545, match64: 0x00000000, model64: 0x563100005644},
		modelTuple{type64: 0x2700000027, matchRI: 0x0546, match64: 0x00000000, model64: 0x564400005651},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x56510000565d, model64: 0x565d0000566b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x566f00005678, model64: 0x56780000567d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0548, match64: 0x00000000, model64: 0x567d00005689},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0549, match64: 0x00000000, model64: 0x568900005691},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5691000056ab, model64: 0x56ab000056b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x054a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x054b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x054c, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x24300000245, matchRI: 0x054d, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0550, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0551, match64: 0x00000000, model64: 0x56c2000056cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56d6000056e1, model64: 0x56e1000056ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56ec000056f2, model64: 0x56f2000056f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56f800005701, model64: 0x57010000570c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x570c00005712, model64: 0x571200005719},
		modelTuple{type64: 0x2700000027, matchRI: 0x0554, match64: 0x00000000, model64: 0x474c00004752},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x572800005732, model64: 0x54e8000054ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0555, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x0557, match64: 0x00000000, model64: 0x57360000573f},
		modelTuple{type64: 0x24700000251, matchRI: 0x0558, match64: 0x00000000, model64: 0x573f00005748},
		modelTuple{type64: 0x2700000027, matchRI: 0x0559, match64: 0x00000000, model64: 0x574800005750},
		modelTuple{type64: 0x2700000027, matchRI: 0x055a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x57560000575b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x055e, match64: 0x00000000, model64: 0x576a00005772},
		modelTuple{type64: 0x2700000027, matchRI: 0x055f, match64: 0x00000000, model64: 0x577200005779},
		modelTuple{type64: 0x2700000027, matchRI: 0x0560, match64: 0x00000000, model64: 0x577900005786},
		modelTuple{type64: 0x2700000027, matchRI: 0x0561, match64: 0x00000000, model64: 0x578600005794},
		modelTuple{type64: 0x2700000027, matchRI: 0x0562, match64: 0x00000000, model64: 0x57940000579c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x6c9000006d3, matchRI: 0x0565, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0567, match64: 0x00000000, model64: 0x57af000057b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0568, match64: 0x00000000, model64: 0x57b6000057bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0569, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57c4000057cb, model64: 0x57cb000057d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x056b, match64: 0x00000000, model64: 0x57d9000057e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x056d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x056e, match64: 0x00000000, model64: 0x57e6000057f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x056f, match64: 0x00000000, model64: 0x57f0000057f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0570, match64: 0x00000000, model64: 0x57f6000057fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0571, match64: 0x00000000, model64: 0x57fa00005803},
		modelTuple{type64: 0x2700000027, matchRI: 0x0572, match64: 0x00000000, model64: 0x580300005806},
		modelTuple{type64: 0x2700000027, matchRI: 0x0573, match64: 0x00000000, model64: 0x280b0000280e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x580c00005820, model64: 0x580c00005820},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x582500005831, model64: 0x58310000583e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0576, match64: 0x00000000, model64: 0x583e00005847},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58470000584d, model64: 0x58470000584d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0577, match64: 0x00000000, model64: 0x584d00005856},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58560000585f, model64: 0x585f00005868},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58680000586f, model64: 0x586f00005876},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58760000587e, model64: 0x587e00005886},
		modelTuple{type64: 0x2700000027, matchRI: 0x0578, match64: 0x00000000, model64: 0x588600005895},
		modelTuple{type64: 0x2700000027, matchRI: 0x0579, match64: 0x00000000, model64: 0x5895000058a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58a1000058af, model64: 0x58af000058be},
		modelTuple{type64: 0x2700000027, matchRI: 0x057a, match64: 0x00000000, model64: 0x58be000058cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58cc000058de, model64: 0x58de000058f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x057b, match64: 0x00000000, model64: 0x58f200005903},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x590300005910, model64: 0x59100000591e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x591e0000592c, model64: 0x592c0000593b},
		modelTuple{type64: 0x2700000027, matchRI: 0x057c, match64: 0x00000000, model64: 0x593b00005947},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x594700005953, model64: 0x59530000595f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x595f00005968, model64: 0x596800005971},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x59710000597b, model64: 0x597b00005985},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x59850000598a, model64: 0x598a0000598f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x598f00005996, model64: 0x59960000599d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x599d000059a6, model64: 0x59a6000059af},
		modelTuple{type64: 0x2700000027, matchRI: 0x057d, match64: 0x00000000, model64: 0x26c7000026cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x057e, match64: 0x00000000, model64: 0x59af000059b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x057f, match64: 0x00000000, model64: 0x59b5000059ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0580, match64: 0x00000000, model64: 0x59ba000059c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0581, match64: 0x00000000, model64: 0x40c0000040f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x59c0000059c9, model64: 0x59c9000059d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x59d2000059dd, model64: 0x59dd000059e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0582, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0583, match64: 0x00000000, model64: 0x59e8000059ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0584, match64: 0x00000000, model64: 0x59ef000059f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x59f5000059ff, model64: 0x59ff00005a03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a0300005a0e, model64: 0x55060000550b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a0e00005a1c, model64: 0x5a1c00005a24},
		modelTuple{type64: 0x2700000027, matchRI: 0x0585, match64: 0x00000000, model64: 0x5a2400005a2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0586, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0587, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0588, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0589, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x058c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a3800005a45, model64: 0x5a3800005a45},
		modelTuple{type64: 0x2700000027, matchRI: 0x058d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x058f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5a5900005a61},
		modelTuple{type64: 0x2700000027, matchRI: 0x0591, match64: 0x00000000, model64: 0x5a7100005a77},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5a8c00005a92},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5aaf00005aba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ac300005ac8, model64: 0x5ac800005ad9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0596, match64: 0x00000000, model64: 0x5ad900005add},
		modelTuple{type64: 0x2700000027, matchRI: 0x0597, match64: 0x00000000, model64: 0x5ad900005add},
		modelTuple{type64: 0x2700000027, matchRI: 0x0599, match64: 0x00000000, model64: 0x5ae200005aef},
		modelTuple{type64: 0x2700000027, matchRI: 0x059a, match64: 0x00000000, model64: 0x5aef00005afe},
		modelTuple{type64: 0x2700000027, matchRI: 0x059b, match64: 0x00000000, model64: 0x5afe00005b14},
		modelTuple{type64: 0x2700000027, matchRI: 0x059d, match64: 0x00000000, model64: 0x5b1a00005b25},
		modelTuple{type64: 0x2700000027, matchRI: 0x059e, match64: 0x00000000, model64: 0x5b2500005b2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5b2b00005b39, model64: 0x5b3900005b40},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x059f, match64: 0x00000000, model64: 0x5b4000005b48},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05a0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05a1, match64: 0x00000000, model64: 0x5b4800005b51},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05a2, match64: 0x00000000, model64: 0x5b2500005b2b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05a3, match64: 0x00000000, model64: 0x5b2500005b2b},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x5b5400005b58, model64: 0x5b5400005b58},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x5b5800005b5f, model64: 0x5b5f00005b62},
		modelTuple{type64: 0x24700000251, matchRI: 0x05a5, match64: 0x00000000, model64: 0x5b6200005b65},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x5b6500005b6c, model64: 0x5b6500005b6c},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x5b6c00005b74, model64: 0x5b7400005b7c},
		modelTuple{type64: 0x24700000251, matchRI: 0x05a6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a8, match64: 0x00000000, model64: 0x59ff00005a03},
		modelTuple{type64: 0x38400000391, matchRI: 0x05a9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x05aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ac, match64: 0x00000000, model64: 0x5b8200005b8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ad, match64: 0x00000000, model64: 0x5b8c00005b95},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x5b9500005ba3, model64: 0x5ba300005bb3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05ae, match64: 0x00000000, model64: 0x5bb300005bc1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05af, match64: 0x00000000, model64: 0x5bc100005bcf},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x5bcf00005bdd, model64: 0x5bdd00005be4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x5be400005bf6, model64: 0x5bf600005c04},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x5c0400005c16, model64: 0x5c1600005c24},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05b0, match64: 0x00000000, model64: 0x5c2400005c38},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05b1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5c3e00005c43, model64: 0x5c4300005c49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5c4900005c52, model64: 0x5c5200005c5b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5c5b00005c65, model64: 0x5c6500005c6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5c6f00005c79, model64: 0x5c7900005c82},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05b6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05b7, match64: 0x00000000, model64: 0x5c8e00005c96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5c9600005ca4, model64: 0x5c9600005ca4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ca400005cab, model64: 0x5cab00005cb3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5cb300005cbc, model64: 0x5cbc00005cc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b8, match64: 0x00000000, model64: 0x5cc600005ccc},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b9, match64: 0x00000000, model64: 0x5ccc00005cd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ba, match64: 0x00000000, model64: 0x5cd400005cd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x05bb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05bc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05bd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05be, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c1, match64: 0x00000000, model64: 0x5cde00005ce4},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c2, match64: 0x00000000, model64: 0x5ce400005ceb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x5ceb00005cf7, model64: 0x5cf700005cfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5d0700005d13, model64: 0x5d1300005d21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5d2100005d28, model64: 0x5d2800005d2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c6, match64: 0x00000000, model64: 0x5d3700005d3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c7, match64: 0x00000000, model64: 0x5d3a00005d42},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c8, match64: 0x00000000, model64: 0x5d4200005d4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ca, match64: 0x00000000, model64: 0x5d5500005d5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5d5e00005d64, model64: 0x5d5e00005d64},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5d6400005d69, model64: 0x5d6900005d6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cc, match64: 0x00000000, model64: 0x39100000393},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cd, match64: 0x00000000, model64: 0x5d7500005d7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ce, match64: 0x00000000, model64: 0x59400000596},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cf, match64: 0x00000000, model64: 0x5d7c00005d7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d0, match64: 0x00000000, model64: 0x5d7e00005d80},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d1, match64: 0x00000000, model64: 0xede00000ee0},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5d9100005d98, model64: 0x5d9800005da4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5da400005dac, model64: 0x5dac00005daf},
		modelTuple{type64: 0x24300000245, matchRI: 0x05d6, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: 0x05d7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x05d8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05da, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05db, match64: 0x00000000, model64: 0x5dbc00005dc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5dc700005dd3, model64: 0x5dd300005ddf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ddf00005de9, model64: 0x5de900005df3},
		modelTuple{type64: 0x2700000027, matchRI: 0x05dc, match64: 0x00000000, model64: 0x5df300005dff},
		modelTuple{type64: 0x2700000027, matchRI: 0x05dd, match64: 0x00000000, model64: 0x5dff00005e07},
		modelTuple{type64: 0x2700000027, matchRI: 0x05de, match64: 0x00000000, model64: 0x5e0700005e11},
		modelTuple{type64: 0x2700000027, matchRI: 0x05df, match64: 0x00000000, model64: 0x5e1100005e1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e0, match64: 0x00000000, model64: 0x5e1f00005e2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e1, match64: 0x00000000, model64: 0x5e2e00005e3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e2, match64: 0x00000000, model64: 0x5e3c00005e48},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e3, match64: 0x00000000, model64: 0x5e4800005e55},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e4, match64: 0x00000000, model64: 0x5e5500005e62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e6200005e6f, model64: 0x5e6200005e6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e5, match64: 0x00000000, model64: 0x5e6f00005e7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e7c00005e88, model64: 0x5e7c00005e88},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e6, match64: 0x00000000, model64: 0x5e8800005e90},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e7, match64: 0x00000000, model64: 0x5e9000005e9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e8, match64: 0x00000000, model64: 0x5e9b00005ea5},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e9, match64: 0x00000000, model64: 0x5ea500005eb2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5eb200005ebf, model64: 0x5ebf00005ece},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ece00005ede, model64: 0x5ece00005ede},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ea, match64: 0x00000000, model64: 0x5ede00005eea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5eea00005ef8, model64: 0x5ef800005f09},
		modelTuple{type64: 0x2700000027, matchRI: 0x05eb, match64: 0x00000000, model64: 0x5f0900005f15},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ec, match64: 0x00000000, model64: 0x5f1500005f23},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ed, match64: 0x00000000, model64: 0x5f2300005f30},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ee, match64: 0x00000000, model64: 0x5dff00005e07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f3000005f3a, model64: 0x5f3000005f3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ef, match64: 0x00000000, model64: 0x5f3a00005f45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f4500005f51, model64: 0x5f5100005f5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f5d00005f6e, model64: 0x5f5d00005f6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f6e00005f7a, model64: 0x5f6e00005f7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f0, match64: 0x00000000, model64: 0x5f7a00005f87},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f1, match64: 0x00000000, model64: 0x5f8700005f8e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f8e00005f98, model64: 0x5f8e00005f98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f9800005fa2, model64: 0x5fa200005fac},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f2, match64: 0x00000000, model64: 0x5fac00005fbb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5fbb00005fc9, model64: 0x5fc900005fd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5fd700005fe0, model64: 0x5fd700005fe0},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f3, match64: 0x00000000, model64: 0x5fe000005fef},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f4, match64: 0x00000000, model64: 0x5fef00005ff9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ff900006003, model64: 0x5ff900006003},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x60030000600f, model64: 0x600f00006017},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x601700006023, model64: 0x60230000602f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x602f00006037, model64: 0x602f00006037},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x603700006045, model64: 0x60450000605c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x605c0000606c, model64: 0x606c0000607c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x607c00006090, model64: 0x607c00006090},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6090000060a0, model64: 0x6090000060a0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05f5, match64: 0x00000000, model64: 0x60a0000060b1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x60b1000060bf, model64: 0x60bf000060cd},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x60cd000060da, model64: 0x60da000060e7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05f6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x60f3000060fd, model64: 0x60fd00006107},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x610700006113, model64: 0x61130000611f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x611f0000612d, model64: 0x612d0000613b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x613b00006148, model64: 0x614800006155},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61550000615f, model64: 0x615f00006169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x616900006173, model64: 0x61730000617d},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f9, match64: 0x00000000, model64: 0x617d00006184},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fa, match64: 0x00000000, model64: 0x61840000618b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x618b00006194, model64: 0x61940000619d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x619d000061a8, model64: 0x61a8000061b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61b3000061bb, model64: 0x61bb000061c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61c3000061cc, model64: 0x61cc000061d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61d5000061df, model64: 0x61df000061e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61e9000061f2, model64: 0x61f2000061fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61fb00006205, model64: 0x62050000620f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x620f0000621c, model64: 0x621c00006229},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x622900006231, model64: 0x623100006239},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x623900006242, model64: 0x62420000624b},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fc, match64: 0x00000000, model64: 0x62550000625f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x626b00006271, model64: 0x171c0000171e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62710000627a, model64: 0x627a00006280},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x628000006284, model64: 0x628400006287},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62870000628c, model64: 0x29200000294},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6299000062a0, model64: 0x62a0000062ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62ad000062b4, model64: 0x62b4000062c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62c4000062cb, model64: 0x62cb000062d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62d8000062df, model64: 0x62df000062ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62ed000062f4, model64: 0x62f400006301},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x630100006308, model64: 0x630800006319},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x631900006320, model64: 0x63200000632a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0601, match64: 0x00000000, model64: 0x632f00006332},
		modelTuple{type64: 0x2700000027, matchRI: 0x0602, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0603, match64: 0x00000000, model64: 0x633200006339},
		modelTuple{type64: 0x2700000027, matchRI: 0x0604, match64: 0x00000000, model64: 0x633900006340},
		modelTuple{type64: 0x2700000027, matchRI: 0x0605, match64: 0x00000000, model64: 0x634000006345},
		modelTuple{type64: 0x2700000027, matchRI: 0x0606, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0607, match64: 0x00000000, model64: 0x63450000634f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0608, match64: 0x00000000, model64: 0x634f00006355},
		modelTuple{type64: 0x2700000027, matchRI: 0x0609, match64: 0x00000000, model64: 0x63550000635c},
		modelTuple{type64: 0x2700000027, matchRI: 0x060a, match64: 0x00000000, model64: 0x635c00006365},
		modelTuple{type64: 0x2700000027, matchRI: 0x060b, match64: 0x00000000, model64: 0x636500006370},
		modelTuple{type64: 0x2700000027, matchRI: 0x060c, match64: 0x00000000, model64: 0x637000006379},
		modelTuple{type64: 0x2700000027, matchRI: 0x060d, match64: 0x00000000, model64: 0x637900006383},
		modelTuple{type64: 0x2700000027, matchRI: 0x060e, match64: 0x00000000, model64: 0x63830000638c},
		modelTuple{type64: 0x2700000027, matchRI: 0x060f, match64: 0x00000000, model64: 0x638c00006394},
		modelTuple{type64: 0x2700000027, matchRI: 0x0610, match64: 0x00000000, model64: 0x63940000639a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0611, match64: 0x00000000, model64: 0x639a000063a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0612, match64: 0x00000000, model64: 0x63a3000063ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0613, match64: 0x00000000, model64: 0x63ab000063b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0614, match64: 0x00000000, model64: 0x63b4000063bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0615, match64: 0x00000000, model64: 0x63bc000063c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0616, match64: 0x00000000, model64: 0x63c0000063c6},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0617, match64: 0x00000000, model64: 0x63c6000063d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0618, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x061c, match64: 0x00000000, model64: 0x63e9000063f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x061d, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x061e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63fb00006401, model64: 0x640100006408},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64080000640e, model64: 0x640e00006415},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64150000641a, model64: 0x641a00006420},
		modelTuple{type64: 0x2700000027, matchRI: 0x0620, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0621, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0623, match64: 0x00000000, model64: 0x643400006440},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x644000006448, model64: 0x644800006456},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64560000645b, model64: 0x645b00006464},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64640000646f, model64: 0x646f00006479},
		modelTuple{type64: 0x2700000027, matchRI: 0x0624, match64: 0x00000000, model64: 0x647900006483},
		modelTuple{type64: 0x24700000251, matchRI: 0x0625, match64: 0x00000000, model64: 0x64830000648f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6494000064a4, model64: 0x64a4000064b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0627, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0628, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x062a, match64: 0x00000000, model64: 0x64bd000064d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x062b, match64: 0x00000000, model64: 0x64d0000064df},
		modelTuple{type64: 0x2700000027, matchRI: 0x062c, match64: 0x00000000, model64: 0x64df000064eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x062d, match64: 0x00000000, model64: 0x64eb000064f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x062e, match64: 0x00000000, model64: 0x64f600006506},
		modelTuple{type64: 0x2700000027, matchRI: 0x062f, match64: 0x00000000, model64: 0x650600006512},
		modelTuple{type64: 0x2700000027, matchRI: 0x0630, match64: 0x00000000, model64: 0x65120000651f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0631, match64: 0x00000000, model64: 0x651f0000652a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0632, match64: 0x00000000, model64: 0x652a00006533},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x653300006545, model64: 0x653300006545},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x654500006553, model64: 0x654500006553},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65530000655f, model64: 0x65530000655f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x655f00006566, model64: 0x65660000656e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0633, match64: 0x00000000, model64: 0x656e00006579},
		modelTuple{type64: 0x2700000027, matchRI: 0x0634, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0635, match64: 0x00000000, model64: 0x657900006582},
		modelTuple{type64: 0x2700000027, matchRI: 0x0636, match64: 0x00000000, model64: 0x658200006586},
		modelTuple{type64: 0x2700000027, matchRI: 0x0638, match64: 0x00000000, model64: 0x658e00006593},
		modelTuple{type64: 0x2700000027, matchRI: 0x0639, match64: 0x00000000, model64: 0x659300006599},
		modelTuple{type64: 0x2700000027, matchRI: 0x063b, match64: 0x00000000, model64: 0x659e000065a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x063c, match64: 0x00000000, model64: 0x65a6000065b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x063d, match64: 0x00000000, model64: 0x65b0000065b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x063e, match64: 0x00000000, model64: 0x65b9000065c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x063f, match64: 0x00000000, model64: 0x65c2000065cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0640, match64: 0x00000000, model64: 0x65cd000065d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0641, match64: 0x00000000, model64: 0x65d8000065e3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0643, match64: 0x00000000, model64: 0x65f3000065fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0645, match64: 0x00000000, model64: 0x660400006608},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0646, match64: 0x00000000, model64: 0x66080000660e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0647, match64: 0x00000000, model64: 0x660e00006616},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x064a, match64: 0x00000000, model64: 0x66260000662e},
		modelTuple{type64: 0x2700000027, matchRI: 0x064b, match64: 0x00000000, model64: 0x662e00006636},
		modelTuple{type64: 0x2700000027, matchRI: 0x064c, match64: 0x00000000, model64: 0x66360000663e},
		modelTuple{type64: 0x2700000027, matchRI: 0x064d, match64: 0x00000000, model64: 0x663e00006646},
		modelTuple{type64: 0x2700000027, matchRI: 0x064e, match64: 0x00000000, model64: 0x66460000664e},
		modelTuple{type64: 0x2700000027, matchRI: 0x064f, match64: 0x00000000, model64: 0x664e00006656},
		modelTuple{type64: 0x2700000027, matchRI: 0x0650, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0652, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0653, match64: 0x00000000, model64: 0x66640000666b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0654, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0655, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0656, match64: 0x00000000, model64: 0x666b0000667d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0657, match64: 0x00000000, model64: 0x667d0000668f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0658, match64: 0x00000000, model64: 0x668f0000669d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0659, match64: 0x00000000, model64: 0x669d000066b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x065a, match64: 0x00000000, model64: 0x66b2000066c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x065b, match64: 0x00000000, model64: 0x66c2000066cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x065c, match64: 0x00000000, model64: 0x66c2000066cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x065d, match64: 0x00000000, model64: 0x66c2000066cf},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x66cf000066df, model64: 0x66df000066e4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x66e4000066e8, model64: 0x66e8000066ea},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x66ea000066f4, model64: 0x66f4000066f6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x66f600006708, model64: 0x67080000670d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x065e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x670d00006714, model64: 0x67140000671b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x065f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0660, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x671b00006725, model64: 0x672500006727},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0661, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x672700006736, model64: 0x673600006738},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x673800006747, model64: 0x674700006749},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x674900006754, model64: 0x675400006762},
		modelTuple{type64: 0x24300000245, matchRI: 0x0662, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x67670000676c, model64: 0x67670000676c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x676c00006772, model64: 0x676c00006772},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x67720000677d, model64: 0x677d00006788},
		modelTuple{type64: 0x2700000027, matchRI: 0x0664, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0667, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0668, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x066a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x066b, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x066c, match64: 0x00000000, model64: 0x679c000067a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x066d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x67b6000067b9, model64: 0x67b6000067b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x67b9000067c1, model64: 0x67b9000067c1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x67c1000067c6, model64: 0x67c6000067ce},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0670, match64: 0x00000000, model64: 0x67ce000067d8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x67d8000067eb, model64: 0x67eb000067fe},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x67fe0000680e, model64: 0x680e00006816},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0672, match64: 0x00000000, model64: 0x681c00006823},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0673, match64: 0x00000000, model64: 0x634000006345},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0674, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0675, match64: 0x00000000, model64: 0x634000006345},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68230000682a, model64: 0x682a0000682c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x682c00006834, model64: 0x68340000683c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0676, match64: 0x00000000, model64: 0x683c00006844},
		modelTuple{type64: 0x2700000027, matchRI: 0x0677, match64: 0x00000000, model64: 0x68440000684b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0678, match64: 0x00000000, model64: 0x684b00006853},
		modelTuple{type64: 0x2700000027, matchRI: 0x0679, match64: 0x00000000, model64: 0x685300006855},
		modelTuple{type64: 0x2700000027, matchRI: 0x067a, match64: 0x00000000, model64: 0x685500006857},
		modelTuple{type64: 0x2700000027, matchRI: 0x067b, match64: 0x00000000, model64: 0x68570000685a},
		modelTuple{type64: 0x2700000027, matchRI: 0x067c, match64: 0x00000000, model64: 0x685a0000685c},
		modelTuple{type64: 0x2700000027, matchRI: 0x067d, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x067e, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x067f, match64: 0x00000000, model64: 0x4a7e00004a85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0680, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0681, match64: 0x00000000, model64: 0x685c00006865},
		modelTuple{type64: 0x2700000027, matchRI: 0x0682, match64: 0x00000000, model64: 0x686500006868},
		modelTuple{type64: 0x2700000027, matchRI: 0x0683, match64: 0x00000000, model64: 0x68680000686e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0684, match64: 0x00000000, model64: 0x686e0000687c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0685, match64: 0x00000000, model64: 0x687c0000687f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0686, match64: 0x00000000, model64: 0x687f00006888},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68880000688d, model64: 0x688d00006896},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68960000689c, model64: 0x689c000068a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68a5000068ab, model64: 0x68ab000068b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68b5000068bb, model64: 0x68bb000068c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68c4000068ca, model64: 0x68ca000068d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68d8000068de, model64: 0x68de000068e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68e7000068ed, model64: 0x68ed000068fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0687, match64: 0x00000000, model64: 0x68fa00006902},
		modelTuple{type64: 0x2700000027, matchRI: 0x0688, match64: 0x00000000, model64: 0x69020000690e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0689, match64: 0x00000000, model64: 0x690e00006916},
		modelTuple{type64: 0x2700000027, matchRI: 0x068a, match64: 0x00000000, model64: 0x69160000691e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x691e00006929, model64: 0x692900006934},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x693400006943, model64: 0x694300006952},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69520000695d, model64: 0x69520000695d},
		modelTuple{type64: 0x2700000027, matchRI: 0x068b, match64: 0x00000000, model64: 0x695d00006969},
		modelTuple{type64: 0x2700000027, matchRI: 0x068c, match64: 0x00000000, model64: 0x696900006977},
		modelTuple{type64: 0x2700000027, matchRI: 0x068d, match64: 0x00000000, model64: 0x697700006984},
		modelTuple{type64: 0x2700000027, matchRI: 0x068e, match64: 0x00000000, model64: 0x698400006993},
		modelTuple{type64: 0x2700000027, matchRI: 0x068f, match64: 0x00000000, model64: 0x69930000699d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0690, match64: 0x00000000, model64: 0x1d9f00001da6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0691, match64: 0x00000000, model64: 0x699d000069a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0692, match64: 0x00000000, model64: 0x69a4000069b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0693, match64: 0x00000000, model64: 0x69b1000069c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0694, match64: 0x00000000, model64: 0x69c1000069c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0695, match64: 0x00000000, model64: 0x69c9000069d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0696, match64: 0x00000000, model64: 0x69d3000069de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0697, match64: 0x00000000, model64: 0x69de000069ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0698, match64: 0x00000000, model64: 0x69ed000069fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0699, match64: 0x00000000, model64: 0x69fd00006a0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x069a, match64: 0x00000000, model64: 0x6a0a00006a13},
		modelTuple{type64: 0x2700000027, matchRI: 0x069b, match64: 0x00000000, model64: 0x6a1300006a21},
		modelTuple{type64: 0x2700000027, matchRI: 0x069c, match64: 0x00000000, model64: 0x6a2100006a30},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a3000006a38, model64: 0x6a3000006a38},
		modelTuple{type64: 0x2700000027, matchRI: 0x069d, match64: 0x00000000, model64: 0x6a3800006a45},
		modelTuple{type64: 0x2700000027, matchRI: 0x069e, match64: 0x00000000, model64: 0x6a4500006a53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a5300006a61, model64: 0x6a5300006a61},
		modelTuple{type64: 0x2700000027, matchRI: 0x069f, match64: 0x00000000, model64: 0x6a6100006a6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a6a00006a76, model64: 0x6a6a00006a76},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a0, match64: 0x00000000, model64: 0x6a7600006a7c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x6a8500006a93},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a9900006aa5, model64: 0x6aa500006ab8},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a5, match64: 0x00000000, model64: 0x6ac000006ac3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ac300006ace, model64: 0x6ace00006ad0},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a7, match64: 0x00000000, model64: 0x6ad700006ae1},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a8, match64: 0x00000000, model64: 0x6ae100006aeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a9, match64: 0x00000000, model64: 0x6aeb00006afb},
		modelTuple{type64: 0x2700000027, matchRI: 0x06aa, match64: 0x00000000, model64: 0x6afb00006b0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ab, match64: 0x00000000, model64: 0x6b0a00006b17},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ac, match64: 0x00000000, model64: 0x6b1700006b24},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ad, match64: 0x00000000, model64: 0x6b2400006b32},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ae, match64: 0x00000000, model64: 0x6b3200006b40},
		modelTuple{type64: 0x2700000027, matchRI: 0x06af, match64: 0x00000000, model64: 0x6b4000006b4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b0, match64: 0x00000000, model64: 0x6b4d00006b5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b1, match64: 0x00000000, model64: 0x6b5b00006b63},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b3, match64: 0x00000000, model64: 0x6b6a00006b75},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b4, match64: 0x00000000, model64: 0x6b7500006b81},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b5, match64: 0x00000000, model64: 0x6b8100006b8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b6, match64: 0x00000000, model64: 0x6b8c00006b93},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x6b9300006ba3, model64: 0x6ba300006bad},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6bad00006bb5, model64: 0x6bb500006bbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b7, match64: 0x00000000, model64: 0x6bbb00006bc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b8, match64: 0x00000000, model64: 0x29200000294},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6bc000006bc7, model64: 0x6bc700006bce},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b9, match64: 0x00000000, model64: 0x6bce00006bd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ba, match64: 0x00000000, model64: 0x6bd100006bd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bb, match64: 0x00000000, model64: 0x6bd800006bde},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bc, match64: 0x00000000, model64: 0x6bde00006be4},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bd, match64: 0x00000000, model64: 0x6be400006bec},
		modelTuple{type64: 0x2700000027, matchRI: 0x06be, match64: 0x00000000, model64: 0x6bec00006bf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bf, match64: 0x00000000, model64: 0x6bf700006c03},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c0, match64: 0x00000000, model64: 0x6c0300006c07},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c1, match64: 0x00000000, model64: 0x6c0700006c0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c2, match64: 0x00000000, model64: 0x6c0a00006c10},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c3, match64: 0x00000000, model64: 0x6c1000006c16},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c4, match64: 0x00000000, model64: 0x1a7a00001a7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c5, match64: 0x00000000, model64: 0x6c1600006c1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c6, match64: 0x00000000, model64: 0x6c1d00006c23},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c7, match64: 0x00000000, model64: 0x6c2300006c2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c8, match64: 0x00000000, model64: 0x6c2e00006c34},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c9, match64: 0x00000000, model64: 0x6c3400006c3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ca, match64: 0x00000000, model64: 0x6c3a00006c41},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cb, match64: 0x00000000, model64: 0x6c4100006c48},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cc, match64: 0x00000000, model64: 0x6c4800006c53},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ce, match64: 0x00000000, model64: 0x6c5300006c58},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cf, match64: 0x00000000, model64: 0x6c5800006c5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d0, match64: 0x00000000, model64: 0x6c5a00006c5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d2, match64: 0x00000000, model64: 0x6c5f00006c62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6c6200006c66, model64: 0x6c6600006c6c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6c6c00006c70, model64: 0x6c7000006c78},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d3, match64: 0x00000000, model64: 0x6c7800006c7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d4, match64: 0x00000000, model64: 0x6c7e00006c84},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d5, match64: 0x00000000, model64: 0x6c8400006c8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d6, match64: 0x00000000, model64: 0x6c8f00006c9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x06da, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6ca800006cbb, model64: 0x6cbb00006cc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x06dc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6cd300006cd9, model64: 0x6cd900006cdf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6cdf00006ce4, model64: 0x6ce400006cea},
		modelTuple{type64: 0x2700000027, matchRI: 0x06df, match64: 0x00000000, model64: 0x6cea00006cf2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6cf900006d00, model64: 0x6d0000006d0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d0b00006d12, model64: 0x6d1200006d1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d1a00006d20, model64: 0x6d2000006d28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d2800006d2e, model64: 0x6d2e00006d35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d3500006d3d, model64: 0x6d3d00006d45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d4500006d4b, model64: 0x6d4b00006d4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d4f00006d55, model64: 0x6d5500006d5b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d5b00006d63, model64: 0x6d6300006d69},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d6900006d70, model64: 0x6d7000006d76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d7600006d7c, model64: 0x6d7c00006d82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d8200006d87, model64: 0x6d8700006d90},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d9000006d98, model64: 0x6d9800006da3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6da300006daa, model64: 0x6daa00006db7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6db700006dbd, model64: 0x6dbd00006dc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6dc400006dca, model64: 0x6dca00006dd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6dd300006dd9, model64: 0x6dd900006de2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6de200006dea, model64: 0x6dea00006df2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6df200006df9, model64: 0x6df900006e04},
		modelTuple{type64: 0x38400000391, matchRI: 0x06e1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x6e1200006e16},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e5, match64: 0x00000000, model64: 0x6e1f00006e2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e6, match64: 0x00000000, model64: 0x6e2c00006e36},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e7, match64: 0x00000000, model64: 0x6e3600006e40},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e8, match64: 0x00000000, model64: 0x6e4000006e47},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e4700006e53, model64: 0x6e5300006e5b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e5b00006e65, model64: 0x6e6500006e6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ea, match64: 0x00000000, model64: 0x6e6f00006e7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x06eb, match64: 0x00000000, model64: 0x6e7e00006e88},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x06ec, match64: 0x00000000, model64: 0x6e8800006e90},
		modelTuple{type64: 0x24300000245, matchRI: 0x06ee, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e9500006ea0, model64: 0x6ea000006eac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6eb300006ebc, model64: 0x6ebc00006ec5},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f1, match64: 0x00000000, model64: 0x6ec500006ecc},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f2, match64: 0x00000000, model64: 0x6ecc00006ed1},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f3, match64: 0x00000000, model64: 0x6ed100006ed7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ed700006edc, model64: 0x6edc00006ee2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ee200006eea, model64: 0x6eea00006ef1},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f4, match64: 0x00000000, model64: 0x6ef100006ef8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ef800006efd, model64: 0x6efd00006f04},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f5, match64: 0x00000000, model64: 0x6f0400006f0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6f0f00006f14, model64: 0x6eea00006ef1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6f1400006f1c, model64: 0x6f1c00006f24},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6f2400006f29, model64: 0x6f2900006f30},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f6, match64: 0x00000000, model64: 0x6f3000006f3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f7, match64: 0x00000000, model64: 0x6f3b00006f45},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f8, match64: 0x00000000, model64: 0x6f4500006f55},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f9, match64: 0x00000000, model64: 0x6f5500006f66},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fa, match64: 0x00000000, model64: 0x6f6600006f6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fb, match64: 0x00000000, model64: 0x6f6e00006f7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fc, match64: 0x00000000, model64: 0x6f7a00006f8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fd, match64: 0x00000000, model64: 0x6f8b00006f92},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ff, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0700, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6f9c00006fa4, model64: 0x6fa400006fa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0702, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0704, match64: 0x00000000, model64: 0x6fb300006fb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0705, match64: 0x00000000, model64: 0x6fb900006fc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0706, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0707, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6fcc00006fd6, model64: 0x6fd600006fe1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x070a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x070b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x070f, match64: 0x00000000, model64: 0x6ff000006ff8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0710, match64: 0x00000000, model64: 0x6ff800007008},
		modelTuple{type64: 0x2700000027, matchRI: 0x0711, match64: 0x00000000, model64: 0x700800007015},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x701500007020, model64: 0x70200000702c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0712, match64: 0x00000000, model64: 0x6ff000006ff8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0713, match64: 0x00000000, model64: 0x702c0000703c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0714, match64: 0x00000000, model64: 0x703c0000704d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0715, match64: 0x00000000, model64: 0x704d00007057},
		modelTuple{type64: 0x2700000027, matchRI: 0x0716, match64: 0x00000000, model64: 0x705700007061},
		modelTuple{type64: 0x2700000027, matchRI: 0x0717, match64: 0x00000000, model64: 0x70610000706c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0718, match64: 0x00000000, model64: 0x706c00007077},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0719, match64: 0x00000000, model64: 0x707700007082},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x708200007093, model64: 0x7093000070a4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x071a, match64: 0x00000000, model64: 0x70a4000070ac},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x071b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x071c, match64: 0x00000000, model64: 0x70a4000070ac},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x071d, match64: 0x00000000, model64: 0x70a4000070ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x071e, match64: 0x00000000, model64: 0x70ac000070b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x071f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0720, match64: 0x00000000, model64: 0x70b3000070b9},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x70b9000070c2, model64: 0x70b9000070c2},
		modelTuple{type64: 0x1060000010d, matchRI: 0x0721, match64: 0x00000000, model64: 0x70c2000070c7},
		modelTuple{type64: 0x24300000245, matchRI: 0x0722, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0723, match64: 0x00000000, model64: 0x70c7000070cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0724, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0725, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0726, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70d2000070db, model64: 0x70db000070e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0729, match64: 0x00000000, model64: 0x70e4000070ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70ed000070f5, model64: 0x70f5000070fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70fd00007104, model64: 0x71040000710b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x072b, match64: 0x00000000, model64: 0x71100000711a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x711f00007127},
		modelTuple{type64: 0x2700000027, matchRI: 0x072e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x072f, match64: 0x00000000, model64: 0x712e00007132},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x475e00004766},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x714100007147, model64: 0x714100007147},
		modelTuple{type64: 0x2700000027, matchRI: 0x0732, match64: 0x00000000, model64: 0x714700007151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0736, match64: 0x00000000, model64: 0x71620000716c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0737, match64: 0x00000000, model64: 0x716c00007178},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x717800007182, model64: 0x71820000718d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0738, match64: 0x00000000, model64: 0x718d00007196},
		modelTuple{type64: 0x2700000027, matchRI: 0x073a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x719b000071a3, model64: 0x71a3000071a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71a8000071ae, model64: 0x71ae000071b4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x073b, match64: 0x00000000, model64: 0x71b4000071bb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x71bb000071c3, model64: 0x71c3000071cb},
		modelTuple{type64: 0x38400000391, matchRI: 0x073c, match64: 0x00000000, model64: 0x71cb000071d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x073e, match64: 0x00000000, model64: 0x71d3000071db},
		modelTuple{type64: 0x2700000027, matchRI: 0x073f, match64: 0x00000000, model64: 0x71db000071e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71e5000071f6, model64: 0x71f600007204},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x720400007212, model64: 0x72120000721e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0740, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0742, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0744, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0745, match64: 0x00000000, model64: 0x72260000722b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0746, match64: 0x00000000, model64: 0x722b00007234},
		modelTuple{type64: 0x2700000027, matchRI: 0x0747, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x723e00007246, model64: 0x72460000724a},
		modelTuple{type64: 0x2700000027, matchRI: 0x074a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x074f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0750, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0752, match64: 0x00000000, model64: 0x726f00007279},
		modelTuple{type64: 0x24300000245, matchRI: 0x0753, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0754, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0756, match64: 0x00000000, model64: 0x727e00007288},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x728800007293, model64: 0x72930000729e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0757, match64: 0x00000000, model64: 0x729e000072a6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0758, match64: 0x00000000, model64: 0x72a6000072af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72b8000072be, model64: 0x72b8000072be},
		modelTuple{type64: 0x2700000027, matchRI: 0x075a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72c2000072ce, model64: 0x72ce000072d8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x72e6000072ee},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x075e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x075f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0761, match64: 0x00000000, model64: 0x730a0000731b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x731b00007323, model64: 0x73230000732e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x733a00007346, model64: 0x73460000734b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x734b00007357, model64: 0x73570000735c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x736600007368, model64: 0x736600007368},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x73760000737e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73880000738e, model64: 0x738e00007394},
		modelTuple{type64: 0x2700000027, matchRI: 0x0764, match64: 0x00000000, model64: 0x7394000073a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0765, match64: 0x00000000, model64: 0x73a1000073af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73af000073b5, model64: 0x73b5000073bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73bd000073c3, model64: 0x73c3000073cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73cb000073d1, model64: 0x73d1000073d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73d5000073db, model64: 0x73db000073e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0766, match64: 0x00000000, model64: 0x4f2f00004f36},
		modelTuple{type64: 0x2700000027, matchRI: 0x0767, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73eb000073f0, model64: 0x73eb000073f0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x076a, match64: 0x00000000, model64: 0x73f0000073f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x076b, match64: 0x00000000, model64: 0x73f8000073fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x076c, match64: 0x00000000, model64: 0x73fd00007406},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x076d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x076e, match64: 0x00000000, model64: 0x74060000740f},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x076f, match64: 0x00000000, model64: 0x740f0000741c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0770, match64: 0x00000000, model64: 0x741c00007426},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0771, match64: 0x00000000, model64: 0x634000006345},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0772, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0773, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0774, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0775, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x742c00007434},
		modelTuple{type64: 0x2700000027, matchRI: 0x0778, match64: 0x00000000, model64: 0x743a00007440},
		modelTuple{type64: 0x2700000027, matchRI: 0x0779, match64: 0x00000000, model64: 0x743a00007440},
		modelTuple{type64: 0x2700000027, matchRI: 0x077a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x077b, match64: 0x00000000, model64: 0x744000007446},
		modelTuple{type64: 0x2700000027, matchRI: 0x077c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x077d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x077f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0780, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74610000746b, model64: 0x746b00007477},
		modelTuple{type64: 0x2700000027, matchRI: 0x0784, match64: 0x00000000, model64: 0x74770000747a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0785, match64: 0x00000000, model64: 0x747a0000747e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x747e00007483, model64: 0x747e00007483},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x748300007491, model64: 0x749100007499},
		modelTuple{type64: 0x2700000027, matchRI: 0x0786, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0788, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x078b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74b3000074ba, model64: 0x74b3000074ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x078c, match64: 0x00000000, model64: 0x747a0000747e},
		modelTuple{type64: 0x2700000027, matchRI: 0x078d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x078f, match64: 0x00000000, model64: 0x74c1000074c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0790, match64: 0x00000000, model64: 0x74c6000074d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0791, match64: 0x00000000, model64: 0x74d0000074d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0792, match64: 0x00000000, model64: 0x74d6000074e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0793, match64: 0x00000000, model64: 0x74e2000074ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0794, match64: 0x00000000, model64: 0x74ea000074f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0795, match64: 0x00000000, model64: 0x74f4000074fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0796, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0798, match64: 0x00000000, model64: 0x750000007506},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75060000750a, model64: 0x75060000750a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x750a00007512, model64: 0x75120000751d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x751d00007525, model64: 0x752500007530},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x753000007538, model64: 0x753800007543},
		modelTuple{type64: 0x2700000027, matchRI: 0x0799, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x754300007549, model64: 0x754900007551},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x755100007559, model64: 0x755900007565},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75650000756d, model64: 0x756d00007578},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x757800007580, model64: 0x75800000758c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x758c00007594, model64: 0x7594000075a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75a0000075a8, model64: 0x75a8000075b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75b2000075ba, model64: 0x75ba000075c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75c8000075d0, model64: 0x75d0000075dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75dc000075e4, model64: 0x75e4000075f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75f0000075f8, model64: 0x75f800007604},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x76040000760c, model64: 0x760c00007617},
		modelTuple{type64: 0x2700000027, matchRI: 0x079a, match64: 0x00000000, model64: 0x761700007621},
		modelTuple{type64: 0x2700000027, matchRI: 0x079b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x762100007627, model64: 0x76270000762f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x762f00007643, model64: 0x76430000764e},
		modelTuple{type64: 0x2700000027, matchRI: 0x079c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x079d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x079e, match64: 0x00000000, model64: 0x764e00007661},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x079f, match64: 0x00000000, model64: 0x766100007672},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07a0, match64: 0x00000000, model64: 0x76720000767d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x767d00007684, model64: 0x768400007691},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x769100007699, model64: 0x7699000076a5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x76a5000076ad, model64: 0x76ad000076bd},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x76bd000076c5, model64: 0x76c5000076d6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07a1, match64: 0x00000000, model64: 0x76d6000076e2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x76e2000076ea, model64: 0x76ea000076fc},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x76fc00007704, model64: 0x770400007714},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x77140000771c, model64: 0x76c5000076d6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x771c00007724, model64: 0x772400007732},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x77320000773c, model64: 0x773c0000774a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07a2, match64: 0x00000000, model64: 0x774a0000774e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x774e00007757, model64: 0x77570000775b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07a3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x775b0000776a, model64: 0x776a00007770},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07a6, match64: 0x00000000, model64: 0x474c00004752},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07a7, match64: 0x00000000, model64: 0x77700000777a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07a8, match64: 0x00000000, model64: 0x777a00007781},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x778100007789, model64: 0x778900007793},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x77930000779b, model64: 0x779b000077a5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07a9, match64: 0x00000000, model64: 0x77a5000077af},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x77af000077b7, model64: 0x77b7000077c1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07ab, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x77c1000077c9, model64: 0x77c9000077d7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x77d7000077df, model64: 0x77df000077ed},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x77ed000077f5, model64: 0x77f500007804},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x78040000780c, model64: 0x780c0000781d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x781d00007825, model64: 0x782500007833},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x78330000783b, model64: 0x783b00007849},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x784900007851, model64: 0x78510000785f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x785f00007867, model64: 0x786700007875},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07ac, match64: 0x00000000, model64: 0x787500007882},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x78820000788a, model64: 0x788a00007899},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07ad, match64: 0x00000000, model64: 0x7899000078a5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07ae, match64: 0x00000000, model64: 0x78a5000078af},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07af, match64: 0x00000000, model64: 0x78af000078b6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x78b6000078be, model64: 0x78be000078cb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x78cb000078d3, model64: 0x78d3000078e2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x78e2000078ea, model64: 0x78e2000078ea},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x78ea000078fb, model64: 0x78fb00007903},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x79030000790b, model64: 0x790b00007915},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x79150000791d, model64: 0x791d00007929},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07b0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07b1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x6c9000006d3, matchRI: 0x07b2, match64: 0x00000000, model64: 0x792900007938},
		modelTuple{type64: 0x285a00002862, matchRI: 0x07b3, match64: 0x00000000, model64: 0x79380000793e},
		modelTuple{type64: 0x24300000245, matchRI: 0x07b4, match64: 0x00000000, model64: 0x793e00007946},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b5, match64: 0x00000000, model64: 0x5a7100005a77},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x795b00007963},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x796900007972, model64: 0x79720000797b},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07bb, match64: 0x00000000, model64: 0x798e00007998},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x799f000079a8, model64: 0x79a8000079b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x07bd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07be, match64: 0x00000000, model64: 0x79b1000079b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x07bf, match64: 0x00000000, model64: 0x79b8000079c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07c9, match64: 0x00000000, model64: 0x79e3000079ea},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07ca, match64: 0x00000000, model64: 0x79ea000079ed},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07cb, match64: 0x00000000, model64: 0x79ed000079f1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07cc, match64: 0x00000000, model64: 0x79f1000079f5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07cd, match64: 0x00000000, model64: 0x6f1c00006f24},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07ce, match64: 0x00000000, model64: 0x79f500007a01},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07cf, match64: 0x00000000, model64: 0x7a0100007a09},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07d0, match64: 0x00000000, model64: 0x7a0900007a12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a1200007a1c, model64: 0x7a1200007a1c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a1c00007a21, model64: 0x7a1c00007a21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a2100007a27, model64: 0x7a2700007a2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a2d00007a34, model64: 0x7a3400007a3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d1, match64: 0x00000000, model64: 0x7a3b00007a4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d2, match64: 0x00000000, model64: 0x7a4e00007a60},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d3, match64: 0x00000000, model64: 0x7a6000007a6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d4, match64: 0x00000000, model64: 0x7a6e00007a74},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d5, match64: 0x00000000, model64: 0x7a7400007a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d7, match64: 0x00000000, model64: 0x7a8000007a87},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d8, match64: 0x00000000, model64: 0x7a8700007a8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d9, match64: 0x00000000, model64: 0x7a8e00007a95},
		modelTuple{type64: 0x2700000027, matchRI: 0x07da, match64: 0x00000000, model64: 0x7a9500007a99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a9900007aa4, model64: 0x7aa400007aaf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7aaf00007ab6, model64: 0x7aaf00007ab6},
		modelTuple{type64: 0x2700000027, matchRI: 0x07db, match64: 0x00000000, model64: 0x7ab600007ac1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ac100007ac8, model64: 0x7ac100007ac8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ac800007ace, model64: 0x7ace00007ad5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ad500007adc, model64: 0x7ad500007adc},
		modelTuple{type64: 0x2700000027, matchRI: 0x07dc, match64: 0x00000000, model64: 0x7adc00007ae3},
		modelTuple{type64: 0x2700000027, matchRI: 0x07dd, match64: 0x00000000, model64: 0x7ae300007aeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x07de, match64: 0x00000000, model64: 0x7aeb00007af3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7af300007af8, model64: 0x7af800007afe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7afe00007b0a, model64: 0x7b0a00007b16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b1600007b22, model64: 0x7b2200007b2e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b2e00007b35, model64: 0x7b2e00007b35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b3500007b3a, model64: 0x7b3a00007b40},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b4000007b49, model64: 0x7b4900007b4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b4b00007b52, model64: 0x7b5200007b59},
		modelTuple{type64: 0x2700000027, matchRI: 0x07df, match64: 0x00000000, model64: 0x7b5900007b63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b6300007b6a, model64: 0x7b6a00007b72},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e0, match64: 0x00000000, model64: 0x7b7200007b7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b7a00007b82, model64: 0x7b8200007b8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b8a00007b98, model64: 0x7b9800007ba6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ba600007bae, model64: 0x7bae00007bb6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7bb600007bbf, model64: 0x7bb600007bbf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7bbf00007bc5, model64: 0x7bbf00007bc5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7bc500007bcb, model64: 0x7bcb00007bd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e1, match64: 0x00000000, model64: 0x7a8000007a87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7bd200007bd7, model64: 0x7bd700007bdd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7bdd00007be2, model64: 0x7be200007bee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7bee00007bf3, model64: 0x7bf300007bfd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7bfd00007c0a, model64: 0x7c0a00007c17},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e2, match64: 0x00000000, model64: 0x7c1700007c1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e5, match64: 0x00000000, model64: 0x634000006345},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e8, match64: 0x00000000, model64: 0x7c1f00007c24},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7c2a00007c2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x07eb, match64: 0x00000000, model64: 0x7c3000007c3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ec, match64: 0x00000000, model64: 0x7c3b00007c42},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ed, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ee, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f0, match64: 0x00000000, model64: 0x7c5400007c59},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f3, match64: 0x00000000, model64: 0x7c5d00007c61},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f4, match64: 0x00000000, model64: 0x7c6100007c66},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f5, match64: 0x00000000, model64: 0x7c6600007c6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c7600007c7c, model64: 0x7c7c00007c82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c8200007c86, model64: 0x7c8200007c86},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f9, match64: 0x00000000, model64: 0x7c8600007c90},
		modelTuple{type64: 0x2700000027, matchRI: 0x07fa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07fd, match64: 0x00000000, model64: 0x7cb300007cb9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7ccd00007cd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0802, match64: 0x00000000, model64: 0x7cdc00007ce3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0803, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0804, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7cf900007d09},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x080a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7d1300007d1f, model64: 0x7d1300007d1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x080b, match64: 0x00000000, model64: 0x7d1f00007d29},
		modelTuple{type64: 0x2700000027, matchRI: 0x080c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x080e, match64: 0x00000000, model64: 0x7d3000007d3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x080f, match64: 0x00000000, model64: 0x7d3a00007d47},
		modelTuple{type64: 0x2700000027, matchRI: 0x0811, match64: 0x00000000, model64: 0x7d4c00007d4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0812, match64: 0x00000000, model64: 0x7d4f00007d52},
		modelTuple{type64: 0x2700000027, matchRI: 0x0813, match64: 0x00000000, model64: 0x7d5200007d5e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0814, match64: 0x00000000, model64: 0x7d5e00007d60},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0816, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0817, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x081a, match64: 0x00000000, model64: 0x7d7100007d7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x081b, match64: 0x00000000, model64: 0x7d7c00007d82},
		modelTuple{type64: 0x2700000027, matchRI: 0x081c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x081e, match64: 0x00000000, model64: 0x7d8500007d8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x081f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0820, match64: 0x00000000, model64: 0x7d8c00007d92},
		modelTuple{type64: 0x2700000027, matchRI: 0x0821, match64: 0x00000000, model64: 0x7d9200007d97},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0823, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0824, match64: 0x00000000, model64: 0x7d9900007d9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0825, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7da300007dab, model64: 0x7dab00007db0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7dbc00007dc4, model64: 0x7dc400007dcc},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x7dcf00007de0, model64: 0x7de000007ded},
		modelTuple{type64: 0x2700000027, matchRI: 0x082a, match64: 0x00000000, model64: 0x7ded00007df7},
		modelTuple{type64: 0x2700000027, matchRI: 0x082b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x082c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x082e, match64: 0x00000000, model64: 0x7dfa00007dff},
		modelTuple{type64: 0x24700000251, matchRI: 0x082f, match64: 0x00000000, model64: 0x7dfa00007dff},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7e0400007e0f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e1900007e1e, model64: 0x7e1e00007e24},
		modelTuple{type64: 0x2700000027, matchRI: 0x0833, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7e2800007e2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0836, match64: 0x00000000, model64: 0x7e3200007e3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0837, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e3c00007e49, model64: 0x7e4900007e56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e5a00007e64, model64: 0x7e6400007e6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e6e00007e7b, model64: 0x7e7b00007e88},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x083b, match64: 0x00000000, model64: 0x7e9100007e9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x083c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0841, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0842, match64: 0x00000000, model64: 0x7eb700007ec1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ecd00007ede, model64: 0x7ede00007eea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0844, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0845, match64: 0x00000000, model64: 0x7eea00007ef5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ef500007f02, model64: 0x7f0200007f0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0846, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0849, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7f1e00007f25, model64: 0x7f2500007f2d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7f3400007f3f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x084d, match64: 0x00000000, model64: 0x7f5000007f64},
		modelTuple{type64: 0x2700000027, matchRI: 0x084e, match64: 0x00000000, model64: 0x7f6400007f7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x084f, match64: 0x00000000, model64: 0x7f7f00007f93},
		modelTuple{type64: 0x2700000027, matchRI: 0x0850, match64: 0x00000000, model64: 0x7f9300007fa6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7fad00007fbe},
		modelTuple{type64: 0x24300000245, matchRI: 0x0853, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0854, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0856, match64: 0x00000000, model64: 0x7fce00007fd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0857, match64: 0x00000000, model64: 0x7fd300007fde},
		modelTuple{type64: 0x2700000027, matchRI: 0x0858, match64: 0x00000000, model64: 0x7fde00007fe4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0859, match64: 0x00000000, model64: 0x7fe400007fee},
		modelTuple{type64: 0x2700000027, matchRI: 0x085a, match64: 0x00000000, model64: 0x7fee00007ff6},
		modelTuple{type64: 0x2700000027, matchRI: 0x085b, match64: 0x00000000, model64: 0x7ff600007ffe},
		modelTuple{type64: 0x2700000027, matchRI: 0x085c, match64: 0x00000000, model64: 0x7ffe00008007},
		modelTuple{type64: 0x2700000027, matchRI: 0x085d, match64: 0x00000000, model64: 0x1d9000001d98},
		modelTuple{type64: 0x2700000027, matchRI: 0x085e, match64: 0x00000000, model64: 0x80070000800e},
		modelTuple{type64: 0x2700000027, matchRI: 0x085f, match64: 0x00000000, model64: 0x800e00008015},
		modelTuple{type64: 0x2700000027, matchRI: 0x0860, match64: 0x00000000, model64: 0x80150000801c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0861, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0862, match64: 0x00000000, model64: 0x801c0000801f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0863, match64: 0x00000000, model64: 0x801f00008025},
		modelTuple{type64: 0x2700000027, matchRI: 0x0864, match64: 0x00000000, model64: 0x802500008027},
		modelTuple{type64: 0x2700000027, matchRI: 0x0865, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0866, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0867, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0869, match64: 0x00000000, model64: 0x802e00008035},
		modelTuple{type64: 0x2700000027, matchRI: 0x086a, match64: 0x00000000, model64: 0x803500008041},
		modelTuple{type64: 0x2700000027, matchRI: 0x086b, match64: 0x00000000, model64: 0x802e00008035},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x086e, match64: 0x00000000, model64: 0x80520000805b},
		modelTuple{type64: 0x2700000027, matchRI: 0x086f, match64: 0x00000000, model64: 0x805b00008060},
		modelTuple{type64: 0x2700000027, matchRI: 0x0870, match64: 0x00000000, model64: 0x806000008068},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80750000807b, model64: 0x807b00008082},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x808200008088, model64: 0x80880000808f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0873, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0875, match64: 0x00000000, model64: 0x8098000080a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0876, match64: 0x00000000, model64: 0x80a4000080b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0877, match64: 0x00000000, model64: 0x80b1000080bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80bc000080c5, model64: 0x80c5000080cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0878, match64: 0x00000000, model64: 0x80cf000080d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0879, match64: 0x00000000, model64: 0x80d9000080e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x087a, match64: 0x00000000, model64: 0x80e2000080ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80ee000080fa, model64: 0x80ee000080fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x087c, match64: 0x00000000, model64: 0x810700008116},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x087d, match64: 0x00000000, model64: 0x811600008126},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x812600008135, model64: 0x81350000813d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x087e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x814c00008155},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x815c0000816a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x817000008179, model64: 0x817900008182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x818200008186, model64: 0x818200008186},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81920000819b, model64: 0x819b000081a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81a3000081a8, model64: 0x81a3000081a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81a8000081ac, model64: 0x81ac000081af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81af000081b3, model64: 0x81b3000081bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81bd000081c1, model64: 0x54e8000054ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81c1000081c6, model64: 0x81c6000081cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81cf000081d4, model64: 0x81d4000081db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81db000081e1, model64: 0x81e1000081e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81e7000081eb, model64: 0x81eb000081f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81f2000081f6, model64: 0x81f6000081fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81fe00008203, model64: 0x82030000820b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x820b0000820f, model64: 0x820f00008213},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x821300008217, model64: 0x82170000821f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x821f00008223, model64: 0x822300008227},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82270000822b, model64: 0x822b00008235},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x823500008239, model64: 0x82390000823f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x823f00008243, model64: 0x824300008248},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82480000824c, model64: 0x824c00008255},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x825500008259, model64: 0x825900008264},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x826400008268, model64: 0x82680000826f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x826f00008273, model64: 0x82730000827a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x827a0000827e, model64: 0x827e00008289},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82890000828d, model64: 0x828d00008298},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82980000829c, model64: 0x829c000082a5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x82a5000082a9, model64: 0x82a9000082b0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x82b5000082c8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x82cf000082d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82d7000082e1, model64: 0x82e1000082eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82eb000082f5, model64: 0x82eb000082f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82f500008300, model64: 0x83000000830b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0889, match64: 0x00000000, model64: 0x830b00008315},
		modelTuple{type64: 0x2700000027, matchRI: 0x088a, match64: 0x00000000, model64: 0x831500008320},
		modelTuple{type64: 0x2700000027, matchRI: 0x088b, match64: 0x00000000, model64: 0x832000008329},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x832900008335, model64: 0x833500008341},
		modelTuple{type64: 0x2700000027, matchRI: 0x088c, match64: 0x00000000, model64: 0x83410000834a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x834a00008354, model64: 0x83540000835e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x835e0000836a, model64: 0x836a00008376},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x83760000837f, model64: 0x837f0000838c},
		modelTuple{type64: 0x2700000027, matchRI: 0x088d, match64: 0x00000000, model64: 0x838c00008395},
		modelTuple{type64: 0x2700000027, matchRI: 0x088e, match64: 0x00000000, model64: 0x83950000839e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x839e000083a8, model64: 0x839e000083a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x088f, match64: 0x00000000, model64: 0x83a8000083b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0890, match64: 0x00000000, model64: 0x83000000830b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x83b2000083bd, model64: 0x83b2000083bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x83bd000083c7, model64: 0x83bd000083c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x83c7000083d4, model64: 0x83c7000083d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0891, match64: 0x00000000, model64: 0x83d4000083d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0892, match64: 0x00000000, model64: 0x83d8000083dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0893, match64: 0x00000000, model64: 0x83dc000083e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x83e0000083ea, model64: 0x83e0000083ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x83ea000083f4, model64: 0x83ea000083f4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x83f4000083fe, model64: 0x83f4000083fe},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x83fe00008408, model64: 0x840800008412},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0894, match64: 0x00000000, model64: 0x841200008422},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0895, match64: 0x00000000, model64: 0x84220000842d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0896, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x842d0000843d, model64: 0x843d00008448},
		modelTuple{type64: 0x24300000245, matchRI: 0x0897, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x84480000844e, model64: 0x844e00008453},
		modelTuple{type64: 0x2700000027, matchRI: 0x0899, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x089a, match64: 0x00000000, model64: 0x845b0000845f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x847400008478, model64: 0x847400008478},
		modelTuple{type64: 0x2700000027, matchRI: 0x089f, match64: 0x00000000, model64: 0x84820000848f},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a0, match64: 0x00000000, model64: 0x848f00008497},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a1, match64: 0x00000000, model64: 0x84970000849f},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x08a6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x84b2000084cb, model64: 0x84cb000084df},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a9, match64: 0x00000000, model64: 0x84e7000084ee},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x84ee000084f9, model64: 0x84f900008500},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x08aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x08ab, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ad, match64: 0x00000000, model64: 0x850800008511},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ae, match64: 0x00000000, model64: 0x851100008517},
		modelTuple{type64: 0x2700000027, matchRI: 0x08af, match64: 0x00000000, model64: 0x851700008520},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b0, match64: 0x00000000, model64: 0x852000008528},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b1, match64: 0x00000000, model64: 0x85280000852f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x852f00008537, model64: 0x85370000853f},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x08b3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b6, match64: 0x00000000, model64: 0x854600008553},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x855900008560},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x08ba, match64: 0x00000000, model64: 0x856d00008577},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bb, match64: 0x00000000, model64: 0x85770000857e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bc, match64: 0x00000000, model64: 0x857e00008585},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x858500008595, model64: 0x858500008595},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bd, match64: 0x00000000, model64: 0x85950000859c},
		modelTuple{type64: 0x2700000027, matchRI: 0x08be, match64: 0x00000000, model64: 0x859c000085a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bf, match64: 0x00000000, model64: 0x85a9000085b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x85b8000085bf, model64: 0x85bf000085c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x85c7000085d3, model64: 0x85d3000085d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x85e0000085f9, model64: 0x85f90000860a},
		modelTuple{type64: 0x24300000245, matchRI: 0x08c4, match64: 0x00000000, model64: 0x860a00008618},
		modelTuple{type64: 0x24300000245, matchRI: 0x08c5, match64: 0x00000000, model64: 0x861800008623},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x862300008633, model64: 0x86330000863b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x863b0000864e, model64: 0x863b0000864e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c6, match64: 0x00000000, model64: 0x864e0000865d},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c7, match64: 0x00000000, model64: 0x865d0000866e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x867b00008689, model64: 0x868900008698},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8698000086a8, model64: 0x8698000086a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86a8000086b4, model64: 0x86b4000086c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86c0000086cf, model64: 0x86cf000086de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86de000086ee, model64: 0x86ee00008700},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87000000870a, model64: 0x870a0000871d},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cc, match64: 0x00000000, model64: 0x872500008730},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cd, match64: 0x00000000, model64: 0x873000008736},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d0, match64: 0x00000000, model64: 0x874200008750},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x875000008759, model64: 0x875000008759},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x875900008762, model64: 0x875900008762},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d1, match64: 0x00000000, model64: 0x876200008770},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d2, match64: 0x00000000, model64: 0x87700000877e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d3, match64: 0x00000000, model64: 0x877e00008789},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x878900008793, model64: 0x87930000879e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d4, match64: 0x00000000, model64: 0x879e000087a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d5, match64: 0x00000000, model64: 0x87a9000087b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d6, match64: 0x00000000, model64: 0x87b2000087be},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d7, match64: 0x00000000, model64: 0x87be000087c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d8, match64: 0x00000000, model64: 0x87c6000087d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d9, match64: 0x00000000, model64: 0x87d0000087d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x08da, match64: 0x00000000, model64: 0x53b5000053be},
		modelTuple{type64: 0x24700000251, matchRI: 0x08db, match64: 0x00000000, model64: 0x87d9000087df},
		modelTuple{type64: 0x24700000251, matchRI: 0x08dc, match64: 0x00000000, model64: 0x87df000087e5},
		modelTuple{type64: 0x24700000251, matchRI: 0x08dd, match64: 0x00000000, model64: 0x87e5000087eb},
		modelTuple{type64: 0x24700000251, matchRI: 0x08de, match64: 0x00000000, model64: 0x87eb000087f5},
		modelTuple{type64: 0x24700000251, matchRI: 0x08df, match64: 0x00000000, model64: 0x126200001266},
		modelTuple{type64: 0x24700000251, matchRI: 0x08e0, match64: 0x00000000, model64: 0x87f5000087fa},
		modelTuple{type64: 0x24700000251, matchRI: 0x08e1, match64: 0x00000000, model64: 0x87fa000087ff},
		modelTuple{type64: 0x38400000391, matchRI: 0x08e2, match64: 0x00000000, model64: 0x87ff00008802},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e3, match64: 0x00000000, model64: 0x880200008808},
		modelTuple{type64: 0x24700000251, matchRI: 0x08e4, match64: 0x00000000, model64: 0x88080000880e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e5, match64: 0x00000000, model64: 0x880e00008813},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x08e7, match64: 0x00000000, model64: 0x88130000881b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x881b00008821, model64: 0x881b00008821},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x882a0000883c},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ea, match64: 0x00000000, model64: 0x88420000884b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x884b00008853, model64: 0x88530000885b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x886d0000887a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ed, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ee, match64: 0x00000000, model64: 0x888200008886},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x888800008890, model64: 0x889000008894},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f0, match64: 0x00000000, model64: 0x889400008898},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x889c000088a4, model64: 0x889c000088a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f4, match64: 0x00000000, model64: 0x88a4000088ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f6, match64: 0x00000000, model64: 0x88ae000088b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x88bc000088c2, model64: 0x88c2000088c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x88c9000088d0, model64: 0x88d0000088d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x88d7000088df, model64: 0x88df000088e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x88e8000088f1, model64: 0x88f1000088fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x88fa00008906, model64: 0x890600008912},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89120000891a, model64: 0x891a00008923},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x89360000893e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x894300008951},
		modelTuple{type64: 0x38400000391, matchRI: 0x08fd, match64: 0x00000000, model64: 0x895a00008963},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ff, match64: 0x00000000, model64: 0x896e00008978},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0900, match64: 0x00000000, model64: 0x897800008981},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x898b00008997, model64: 0x8997000089a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89a6000089b1, model64: 0x89a6000089b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89b1000089be, model64: 0x89be000089c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89c3000089cf, model64: 0x89cf000089d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89d5000089e1, model64: 0x89e1000089e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89e4000089f0, model64: 0x7ea200007ea7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89f0000089fc, model64: 0x89fc00008a02},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8a0200008a0e, model64: 0x8a0e00008a13},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0903, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8a1600008a1d, model64: 0x8a1600008a1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8a1d00008a27, model64: 0x8a1d00008a27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8a2700008a31, model64: 0x8a2700008a31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8a3100008a3b, model64: 0x8a3100008a3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8a3b00008a45, model64: 0x8a3b00008a45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0906, match64: 0x00000000, model64: 0x8a4800008a55},
		modelTuple{type64: 0x2700000027, matchRI: 0x0907, match64: 0x00000000, model64: 0x8a5500008a5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8a5d00008a67, model64: 0x8a6700008a73},
		modelTuple{type64: 0x2700000027, matchRI: 0x0908, match64: 0x00000000, model64: 0x8a7300008a7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8a7c00008a87, model64: 0x8a8700008a92},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x090b, match64: 0x00000000, model64: 0x8a9c00008aa3},
		modelTuple{type64: 0x2700000027, matchRI: 0x090c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x8aab00008ab3, model64: 0x8aab00008ab3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x090e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x090f, match64: 0x00000000, model64: 0x8ab300008aba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0910, match64: 0x00000000, model64: 0x8aba00008abd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8ad900008ae2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0914, match64: 0x00000000, model64: 0x8ae900008aeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0915, match64: 0x00000000, model64: 0x8aeb00008aee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0916, match64: 0x00000000, model64: 0x8aee00008af4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8afa00008b01},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x091b, match64: 0x00000000, model64: 0x8b1600008b20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8b2000008b31, model64: 0x8b2000008b31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8b3100008b36, model64: 0x8b3600008b3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8b3c00008b44, model64: 0x1b2000001b21},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x091c, match64: 0x00000000, model64: 0x8b4400008b4a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8b5000008b55},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x475e00004766},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0921, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8b8000008b87, model64: 0x8b8700008b89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8b8900008b97, model64: 0x8b8900008b97},
		modelTuple{type64: 0x2700000027, matchRI: 0x0923, match64: 0x00000000, model64: 0x8b9700008ba0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ba000008ba9, model64: 0x8ba900008bad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8bad00008bbc, model64: 0x8bbc00008bcd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8bcd00008bd7, model64: 0x8bcd00008bd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0924, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8bdb00008bea, model64: 0x8bea00008bf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0926, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8bf300008bfd, model64: 0x8bfd00008c07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c0700008c10, model64: 0x8c1000008c19},
		modelTuple{type64: 0x2700000027, matchRI: 0x0927, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c1900008c23, model64: 0x8c2300008c28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c2800008c31, model64: 0x8c3100008c3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c3e00008c43, model64: 0x8c4300008c4c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c4c00008c53, model64: 0x8c5300008c5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c5d00008c69, model64: 0x8c6900008c75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c7500008c7c, model64: 0x8c7c00008c84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c8400008c8c, model64: 0x8c8c00008c94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c9400008c99, model64: 0x8c9900008ca9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8cad00008cb2, model64: 0x8cad00008cb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0929, match64: 0x00000000, model64: 0x8cb200008cb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x092a, match64: 0x00000000, model64: 0x8cb900008cbc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8cbc00008cc0, model64: 0x8cbc00008cc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x092b, match64: 0x00000000, model64: 0x8cc000008cc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x092c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x092d, match64: 0x00000000, model64: 0x8cc500008cc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8cc700008cce, model64: 0x8cce00008cd5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8cd500008cdb, model64: 0x8cdb00008ce1},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x092e, match64: 0x00000000, model64: 0x8ce100008cec},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x092f, match64: 0x00000000, model64: 0x8cec00008cf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0930, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0931, match64: 0x00000000, model64: 0x8d0500008d0b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0933, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0934, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0935, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0937, match64: 0x00000000, model64: 0x8d2e00008d39},
		modelTuple{type64: 0x2700000027, matchRI: 0x0938, match64: 0x00000000, model64: 0x8d3900008d44},
		modelTuple{type64: 0x2700000027, matchRI: 0x0939, match64: 0x00000000, model64: 0x8d4400008d51},
		modelTuple{type64: 0x2700000027, matchRI: 0x093a, match64: 0x00000000, model64: 0x8d5100008d5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x093b, match64: 0x00000000, model64: 0x8d5c00008d6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x093c, match64: 0x00000000, model64: 0x8d6c00008d79},
		modelTuple{type64: 0x2700000027, matchRI: 0x093d, match64: 0x00000000, model64: 0x8d7900008d89},
		modelTuple{type64: 0x2700000027, matchRI: 0x093e, match64: 0x00000000, model64: 0x8d8900008d93},
		modelTuple{type64: 0x2700000027, matchRI: 0x093f, match64: 0x00000000, model64: 0x8d9300008da1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0940, match64: 0x00000000, model64: 0x8da100008db2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0941, match64: 0x00000000, model64: 0x8db200008dc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0942, match64: 0x00000000, model64: 0x8dc100008dcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0943, match64: 0x00000000, model64: 0x8dcc00008dda},
		modelTuple{type64: 0x2700000027, matchRI: 0x0944, match64: 0x00000000, model64: 0x8dda00008de6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0945, match64: 0x00000000, model64: 0x8de600008df2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0946, match64: 0x00000000, model64: 0x8df200008e01},
		modelTuple{type64: 0x2700000027, matchRI: 0x0947, match64: 0x00000000, model64: 0x8e0100008e14},
		modelTuple{type64: 0x2700000027, matchRI: 0x0948, match64: 0x00000000, model64: 0x8e1400008e1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0949, match64: 0x00000000, model64: 0x8e1f00008e2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x094a, match64: 0x00000000, model64: 0x8e2e00008e36},
		modelTuple{type64: 0x2700000027, matchRI: 0x094b, match64: 0x00000000, model64: 0x8e3600008e43},
		modelTuple{type64: 0x2700000027, matchRI: 0x094c, match64: 0x00000000, model64: 0x8e4300008e4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x094d, match64: 0x00000000, model64: 0x8e4d00008e5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x094e, match64: 0x00000000, model64: 0x8e5d00008e6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x094f, match64: 0x00000000, model64: 0x8e6c00008e77},
		modelTuple{type64: 0x2700000027, matchRI: 0x0950, match64: 0x00000000, model64: 0x8e7700008e81},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8e8100008e8b, model64: 0x8e8b00008e95},
		modelTuple{type64: 0x2700000027, matchRI: 0x0951, match64: 0x00000000, model64: 0x8e9500008e9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0952, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ea300008eaa, model64: 0x8eaa00008eab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8eab00008eb1, model64: 0x8eb100008eb7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0955, match64: 0x00000000, model64: 0x8eba00008ec2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0956, match64: 0x00000000, model64: 0x8ec200008ec9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0957, match64: 0x00000000, model64: 0x8ec900008ed1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0958, match64: 0x00000000, model64: 0x8ed100008ed9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0959, match64: 0x00000000, model64: 0x8ed900008ee8},
		modelTuple{type64: 0x2700000027, matchRI: 0x095a, match64: 0x00000000, model64: 0x8ee800008ef1},
		modelTuple{type64: 0x2700000027, matchRI: 0x095b, match64: 0x00000000, model64: 0x8ef100008ef9},
		modelTuple{type64: 0x2700000027, matchRI: 0x095c, match64: 0x00000000, model64: 0x8ef900008f01},
		modelTuple{type64: 0x2700000027, matchRI: 0x095d, match64: 0x00000000, model64: 0x8f0100008f09},
		modelTuple{type64: 0x2700000027, matchRI: 0x095e, match64: 0x00000000, model64: 0x8f0900008f11},
		modelTuple{type64: 0x2700000027, matchRI: 0x095f, match64: 0x00000000, model64: 0x8f1100008f19},
		modelTuple{type64: 0x2700000027, matchRI: 0x0960, match64: 0x00000000, model64: 0x8f1900008f22},
		modelTuple{type64: 0x2700000027, matchRI: 0x0961, match64: 0x00000000, model64: 0x8f2200008f2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0962, match64: 0x00000000, model64: 0x8f2b00008f3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f3a00008f3f, model64: 0x8f3f00008f47},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f4700008f4c, model64: 0x8f4c00008f55},
		modelTuple{type64: 0x2700000027, matchRI: 0x0963, match64: 0x00000000, model64: 0x8f5500008f5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f5d00008f62, model64: 0x8f6200008f6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f6a00008f6f, model64: 0x8f6f00008f77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f7700008f7c, model64: 0x8f7c00008f85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f8500008f8a, model64: 0x8f8a00008f93},
		modelTuple{type64: 0x2700000027, matchRI: 0x0964, match64: 0x00000000, model64: 0x8f9300008f9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f9b00008fa0, model64: 0x8fa000008fa9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8fa900008fae, model64: 0x8fae00008fb7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8fb700008fbc, model64: 0x8fbc00008fc5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8fc500008fca, model64: 0x8fca00008fd2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8fd200008fd7, model64: 0x8fd700008fdf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8fdf00008fe4, model64: 0x8fe400008fec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8fec00008ff1, model64: 0x8ff100008ff9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ff900008ffe, model64: 0x8ffe00009006},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90060000900b, model64: 0x900b00009013},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x901300009018, model64: 0x901800009020},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x902000009025, model64: 0x902500009033},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90330000903f, model64: 0x90330000903f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x903f00009044, model64: 0x90440000904d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x904d00009052, model64: 0x90520000905b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0965, match64: 0x00000000, model64: 0x905b00009064},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x906400009069, model64: 0x906900009071},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x907100009076, model64: 0x907600009082},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x908200009087, model64: 0x908700009090},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x909000009095, model64: 0x90950000909e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x909e000090a3, model64: 0x90a3000090ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90ab000090b0, model64: 0x90b0000090bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90bc000090c1, model64: 0x90c1000090ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90ca000090cf, model64: 0x90cf000090da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90da000090df, model64: 0x90df000090e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90e4000090e9, model64: 0x90e9000090f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90f7000090fc, model64: 0x90fc00009104},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x910400009109, model64: 0x910900009111},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x911100009116, model64: 0x91160000911f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x911f00009124, model64: 0x91240000912d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x912d00009132, model64: 0x91320000913a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x913a0000913f, model64: 0x913f00009148},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91480000914d, model64: 0x914d00009156},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91560000915b, model64: 0x915b00009164},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x916400009169, model64: 0x916900009172},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x917200009177, model64: 0x917700009180},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x918000009185, model64: 0x91850000918e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x918e00009193, model64: 0x91930000919c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x919c000091a1, model64: 0x91a1000091aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0966, match64: 0x00000000, model64: 0x91aa000091b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0967, match64: 0x00000000, model64: 0x91b1000091b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0968, match64: 0x00000000, model64: 0x91b5000091ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0969, match64: 0x00000000, model64: 0x91ba000091bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x096a, match64: 0x00000000, model64: 0x91bf000091c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x096b, match64: 0x00000000, model64: 0x91c7000091cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x096c, match64: 0x00000000, model64: 0x91cf000091d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x096d, match64: 0x00000000, model64: 0x91d4000091d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x096e, match64: 0x00000000, model64: 0x91d9000091de},
		modelTuple{type64: 0x2700000027, matchRI: 0x096f, match64: 0x00000000, model64: 0x91de000091e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0970, match64: 0x00000000, model64: 0x91e8000091f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0971, match64: 0x00000000, model64: 0x91f2000091fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0972, match64: 0x00000000, model64: 0x91fc00009206},
		modelTuple{type64: 0x2700000027, matchRI: 0x0973, match64: 0x00000000, model64: 0x920600009210},
		modelTuple{type64: 0x2700000027, matchRI: 0x0974, match64: 0x00000000, model64: 0x92100000921a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0975, match64: 0x00000000, model64: 0x921a00009225},
		modelTuple{type64: 0x2700000027, matchRI: 0x0976, match64: 0x00000000, model64: 0x92250000922b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0977, match64: 0x00000000, model64: 0x922b00009237},
		modelTuple{type64: 0x2700000027, matchRI: 0x0978, match64: 0x00000000, model64: 0x92370000923f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0979, match64: 0x00000000, model64: 0x923f00009248},
		modelTuple{type64: 0x2700000027, matchRI: 0x097a, match64: 0x00000000, model64: 0x92480000924f},
		modelTuple{type64: 0x2700000027, matchRI: 0x097b, match64: 0x00000000, model64: 0x53c6000053cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x097c, match64: 0x00000000, model64: 0x924f00009258},
		modelTuple{type64: 0x2700000027, matchRI: 0x097d, match64: 0x00000000, model64: 0x92580000925e},
		modelTuple{type64: 0x2700000027, matchRI: 0x097e, match64: 0x00000000, model64: 0x59b5000059ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x097f, match64: 0x00000000, model64: 0x925e00009268},
		modelTuple{type64: 0x2700000027, matchRI: 0x0980, match64: 0x00000000, model64: 0x926800009272},
		modelTuple{type64: 0x2700000027, matchRI: 0x0981, match64: 0x00000000, model64: 0x92720000927c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0982, match64: 0x00000000, model64: 0x927c00009280},
		modelTuple{type64: 0x2700000027, matchRI: 0x0983, match64: 0x00000000, model64: 0x53e00000544},
		modelTuple{type64: 0x2700000027, matchRI: 0x0984, match64: 0x00000000, model64: 0x928000009287},
		modelTuple{type64: 0x2700000027, matchRI: 0x0985, match64: 0x00000000, model64: 0x928700009290},
		modelTuple{type64: 0x2700000027, matchRI: 0x0986, match64: 0x00000000, model64: 0x6a0000006a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0987, match64: 0x00000000, model64: 0x92900000929c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0988, match64: 0x00000000, model64: 0x929c000092a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0989, match64: 0x00000000, model64: 0x92a6000092ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x098a, match64: 0x00000000, model64: 0x550b00005510},
		modelTuple{type64: 0x2700000027, matchRI: 0x098b, match64: 0x00000000, model64: 0x92ae000092b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x098c, match64: 0x00000000, model64: 0x92b5000092be},
		modelTuple{type64: 0x2700000027, matchRI: 0x098d, match64: 0x00000000, model64: 0x92be000092c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x098e, match64: 0x00000000, model64: 0x92c6000092cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x098f, match64: 0x00000000, model64: 0x92cb000092d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0990, match64: 0x00000000, model64: 0x92d5000092df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0991, match64: 0x00000000, model64: 0x92df000092ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0992, match64: 0x00000000, model64: 0x92ea000092f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0993, match64: 0x00000000, model64: 0x92f500009301},
		modelTuple{type64: 0x2700000027, matchRI: 0x0994, match64: 0x00000000, model64: 0x93010000930d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0995, match64: 0x00000000, model64: 0x930d00009311},
		modelTuple{type64: 0x38400000391, matchRI: 0x0996, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0997, match64: 0x00000000, model64: 0x93110000931b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0998, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0999, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x099a, match64: 0x00000000, model64: 0x932600009331},
		modelTuple{type64: 0x2700000027, matchRI: 0x099c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x099d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x099e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a1, match64: 0x00000000, model64: 0x933b0000933d},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a4, match64: 0x00000000, model64: 0x934500009350},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a6, match64: 0x00000000, model64: 0x935700009361},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x937200009379},
		modelTuple{type64: 0x2700000027, matchRI: 0x09aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ab, match64: 0x00000000, model64: 0x93840000938e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x938e00009398, model64: 0x9398000093a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ac, match64: 0x00000000, model64: 0x93a2000093ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x93ab000093b4, model64: 0x93b4000093bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x93bd000093c6, model64: 0x93bd000093c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ae, match64: 0x00000000, model64: 0x93cc000093da},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b0, match64: 0x00000000, model64: 0x93e1000093ec},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x93f900009401, model64: 0x940100009404},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94040000940c, model64: 0x940c0000940e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x940e00009416, model64: 0x1c6c00001c6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94160000941e, model64: 0x941e00009421},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b4, match64: 0x00000000, model64: 0x94280000942d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x942d00009434, model64: 0x943400009442},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b5, match64: 0x00000000, model64: 0x94420000944c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b6, match64: 0x00000000, model64: 0x944c00009454},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b7, match64: 0x00000000, model64: 0x945400009460},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x946000009467, model64: 0x94670000946e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x946e00009475, model64: 0x94750000947a},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b8, match64: 0x00000000, model64: 0x947a0000947f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x947f00009486, model64: 0x948600009490},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x949000009497, model64: 0x94970000949d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x949d000094a3, model64: 0x94a3000094a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b9, match64: 0x00000000, model64: 0x94a7000094a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ba, match64: 0x00000000, model64: 0x94a9000094b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94b1000094b8, model64: 0x94b8000094c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x09bb, match64: 0x00000000, model64: 0x94c0000094c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94c8000094cf, model64: 0x94cf000094dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94dc000094e3, model64: 0x94e3000094f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94f1000094f8, model64: 0x94f800009508},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95080000950f, model64: 0x950f0000951a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x951a00009521, model64: 0x952100009529},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x952900009534, model64: 0x95340000953f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x953f00009547, model64: 0x95470000954f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x09bf, match64: 0x00000000, model64: 0x955c0000956b},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c0, match64: 0x00000000, model64: 0x956b0000957a},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c1, match64: 0x00000000, model64: 0x957a00009587},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c2, match64: 0x00000000, model64: 0x958700009599},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c3, match64: 0x00000000, model64: 0x9599000095a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c4, match64: 0x00000000, model64: 0x95a8000095b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c5, match64: 0x00000000, model64: 0x95b7000095c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c6, match64: 0x00000000, model64: 0x95c7000095d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c7, match64: 0x00000000, model64: 0x95d5000095e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c8, match64: 0x00000000, model64: 0x95e4000095f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c9, match64: 0x00000000, model64: 0x95f300009601},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ca, match64: 0x00000000, model64: 0x960100009610},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cb, match64: 0x00000000, model64: 0x961000009620},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cc, match64: 0x00000000, model64: 0x962000009631},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cd, match64: 0x00000000, model64: 0x963100009642},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ce, match64: 0x00000000, model64: 0x964200009655},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cf, match64: 0x00000000, model64: 0x965500009664},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d0, match64: 0x00000000, model64: 0x966400009672},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d1, match64: 0x00000000, model64: 0x967200009680},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d2, match64: 0x00000000, model64: 0x96800000968f},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d3, match64: 0x00000000, model64: 0x968f000096a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d4, match64: 0x00000000, model64: 0x96a1000096b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d5, match64: 0x00000000, model64: 0x96b0000096bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d6, match64: 0x00000000, model64: 0x96bf000096cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d7, match64: 0x00000000, model64: 0x96cb000096da},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d8, match64: 0x00000000, model64: 0x96da000096eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d9, match64: 0x00000000, model64: 0x96eb000096fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x09da, match64: 0x00000000, model64: 0x96fc00009712},
		modelTuple{type64: 0x2700000027, matchRI: 0x09db, match64: 0x00000000, model64: 0x971200009721},
		modelTuple{type64: 0x2700000027, matchRI: 0x09dc, match64: 0x00000000, model64: 0x972100009730},
		modelTuple{type64: 0x2700000027, matchRI: 0x09dd, match64: 0x00000000, model64: 0x973000009739},
		modelTuple{type64: 0x2700000027, matchRI: 0x09de, match64: 0x00000000, model64: 0x973900009747},
		modelTuple{type64: 0x2700000027, matchRI: 0x09df, match64: 0x00000000, model64: 0x97470000975a},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e0, match64: 0x00000000, model64: 0x975a0000976d},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e1, match64: 0x00000000, model64: 0x976d0000977c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e2, match64: 0x00000000, model64: 0x977c0000979e},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e3, match64: 0x00000000, model64: 0x979e000097b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e4, match64: 0x00000000, model64: 0x97b7000097c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e5, match64: 0x00000000, model64: 0x97c5000097d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e6, match64: 0x00000000, model64: 0x97d4000097d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e8, match64: 0x00000000, model64: 0x97d9000097e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e9, match64: 0x00000000, model64: 0x97e3000097ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ea, match64: 0x00000000, model64: 0x97ee000097f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x09eb, match64: 0x00000000, model64: 0x97f900009802},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ec, match64: 0x00000000, model64: 0x980200009814},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ed, match64: 0x00000000, model64: 0x98140000981e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x09ee, match64: 0x00000000, model64: 0x981e0000982b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x982b00009835, model64: 0x983500009848},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x09ef, match64: 0x00000000, model64: 0x984800009851},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0x98510000985f, model64: 0x985f0000986d},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f1, match64: 0x00000000, model64: 0x987200009883},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f3, match64: 0x00000000, model64: 0x988a00009892},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f4, match64: 0x00000000, model64: 0x989200009896},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f5, match64: 0x00000000, model64: 0x9896000098a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f6, match64: 0x00000000, model64: 0x98a2000098aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x98c7000098cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x98d3000098db, model64: 0x98db000098e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x98e4000098ed, model64: 0x522300005225},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x98ed000098f7, model64: 0x98f700009901},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x990100009905, model64: 0x990100009905},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x09fd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ff, match64: 0x00000000, model64: 0x990c00009915},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a00, match64: 0x00000000, model64: 0x99150000991b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x992400009929},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a05, match64: 0x00000000, model64: 0x993400009945},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x994500009957, model64: 0x995700009969},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a06, match64: 0x00000000, model64: 0x99690000997b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a07, match64: 0x00000000, model64: 0x997b00009987},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a08, match64: 0x00000000, model64: 0x99870000999b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x999b000099ac, model64: 0x999b000099ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99ac000099c1, model64: 0x99ac000099c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a09, match64: 0x00000000, model64: 0x99c1000099ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0a, match64: 0x00000000, model64: 0x99ce000099e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0b, match64: 0x00000000, model64: 0x99e0000099f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99f2000099f7, model64: 0x99f2000099f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99f7000099ff, model64: 0x99ff00009a07},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a0c, match64: 0x00000000, model64: 0x9a0700009a0d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9a1500009a19},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9a1f00009a28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a2b00009a32, model64: 0x9a3200009a35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a3500009a3f, model64: 0x9a3f00009a49},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a10, match64: 0x00000000, model64: 0x9a4900009a52},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a5200009a56, model64: 0x9a5200009a56},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a11, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a12, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a14, match64: 0x00000000, model64: 0x9a5e00009a68},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a15, match64: 0x00000000, model64: 0x9a6800009a73},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a16, match64: 0x00000000, model64: 0x634000006345},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9a7300009a79, model64: 0x9a7900009a85},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9a8500009a8d, model64: 0x9a8d00009a96},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a17, match64: 0x00000000, model64: 0x9a9600009aa1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9aa100009ab2, model64: 0x9ab200009ac3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a18, match64: 0x00000000, model64: 0x9ac300009ad6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a19, match64: 0x00000000, model64: 0x9ad600009aea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1a, match64: 0x00000000, model64: 0x9aea00009aff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1b, match64: 0x00000000, model64: 0x9aff00009b11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b1100009b21, model64: 0x9b2100009b30},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1c, match64: 0x00000000, model64: 0x9b3000009b3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1d, match64: 0x00000000, model64: 0x9b3f00009b4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0x9b4c00009b58, model64: 0x9b5800009b64},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a1f, match64: 0x00000000, model64: 0x9b6400009b6c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a20, match64: 0x00000000, model64: 0xee400000eea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a21, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a22, match64: 0x00000000, model64: 0xee400000eea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a23, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a24, match64: 0x00000000, model64: 0xee400000eea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a25, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a26, match64: 0x00000000, model64: 0x9b6c00009b74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b7c00009b83, model64: 0x9b8300009b8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a29, match64: 0x00000000, model64: 0x9b9100009b94},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x9b9400009b9c, model64: 0x9b9400009b9c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9baa00009bb1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9bcb00009bd4, model64: 0x9bd400009bda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9bda00009be1, model64: 0x9be100009be6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9be600009bef, model64: 0x9bef00009bf5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a31, match64: 0x00000000, model64: 0x9c0500009c12},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a32, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a33, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a35, match64: 0x00000000, model64: 0x9c1900009c23},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9c3000009c38},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c6200009c6b, model64: 0x9c6200009c6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c6b00009c6f, model64: 0x9c6f00009c74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c7400009c78, model64: 0x9c7800009c7d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c7d00009c81, model64: 0x9c8100009c8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c8b00009c8f, model64: 0x9c8f00009c94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c9400009c98, model64: 0x9c9800009c9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c9d00009ca1, model64: 0x9ca100009ca9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ca900009cad, model64: 0x9cad00009cb7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9cb700009cbb, model64: 0x9cbb00009cc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9cc400009cc8, model64: 0x9cc800009cd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9cd100009cd5, model64: 0x9cd500009cda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9cda00009cde, model64: 0x9cde00009ce7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ce700009ceb, model64: 0x9ceb00009cf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3b, match64: 0x00000000, model64: 0x9cf400009cfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3c, match64: 0x00000000, model64: 0x9cfa00009cfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3d, match64: 0x00000000, model64: 0x9cfe00009d03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9d0300009d09, model64: 0x9d0900009d10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9d1000009d14, model64: 0x9d1400009d1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9d1b00009d23, model64: 0x9d1b00009d23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9d2300009d27, model64: 0x9d2700009d34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9d3400009d3d, model64: 0x9d3400009d3d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9d3d00009d41, model64: 0x9d4100009d48},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3e, match64: 0x00000000, model64: 0x9d4800009d54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9d5400009d65, model64: 0x9d5400009d65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9d6500009d74, model64: 0x9d6500009d74},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9d7400009d86, model64: 0x9d8600009d95},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3f, match64: 0x00000000, model64: 0x53b5000053be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a40, match64: 0x00000000, model64: 0x9d9500009d9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9d9c00009dad, model64: 0x9dad00009daf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a41, match64: 0x00000000, model64: 0x742c00007434},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5d7e00005d80, model64: 0x5d7e00005d80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a44, match64: 0x00000000, model64: 0x9dbc00009dc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a45, match64: 0x00000000, model64: 0x9dc000009dc5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4a, match64: 0x00000000, model64: 0x9ddb00009de5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9de500009dea, model64: 0x9de500009dea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9dea00009df6, model64: 0x9df600009dfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9dfd00009e08, model64: 0x9e0800009e13},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9e1300009e1e, model64: 0x9e1e00009e25},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9e2500009e2f, model64: 0x9e2f00009e3a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9e3a00009e43, model64: 0x9e4300009e4d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9e4d00009e5a, model64: 0x9e5a00009e63},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9e6300009e6d, model64: 0x9e6d00009e73},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9e7300009e78, model64: 0x9e7800009e7f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a4c, match64: 0x00000000, model64: 0x9e7f00009e8b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9e8b00009e91, model64: 0x9e9100009e98},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9e9800009ea0, model64: 0x9ea000009ea7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9ea700009eb1, model64: 0x9eb100009ebb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a4d, match64: 0x00000000, model64: 0x9ebb00009ec4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9ec400009ecb, model64: 0x9ecb00009edc},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9edc00009ee3, model64: 0x9ee300009eed},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9eed00009ef3, model64: 0x9ef300009efa},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a4e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a4f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a52, match64: 0x00000000, model64: 0x9f0400009f07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f0f00009f16, model64: 0x9f1600009f24},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a54, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a55, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a56, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f2400009f2d, model64: 0x9f2d00009f3d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a58, match64: 0x00000000, model64: 0x9f4400009f50},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a59, match64: 0x00000000, model64: 0x4fb700004fbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5a, match64: 0x00000000, model64: 0x9f5000009f54},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f5400009f5a, model64: 0x9f5a00009f60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f6000009f66, model64: 0x9f6600009f68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f6800009f74, model64: 0x9f7400009f77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f7700009f83, model64: 0x9f8300009f8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f8a00009f96, model64: 0x9f9600009f99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f9900009fa5, model64: 0x9fa500009fa8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9fa800009fb4, model64: 0x9fb400009fb7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9fb700009fc3, model64: 0x9fc300009fca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9fca00009fd6, model64: 0x9fd600009fd9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9fd900009fe5, model64: 0x9fe500009fed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9fed00009ff3, model64: 0x9ff300009ffa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5f, match64: 0x00000000, model64: 0x9ffe0000a001},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a60, match64: 0x00000000, model64: 0x7d4f00007d52},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a61, match64: 0x00000000, model64: 0xa0010000a007},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0070000a00e, model64: 0xa00e0000a010},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a62, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a64, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a65, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a66, match64: 0x00000000, model64: 0xa0160000a021},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a67, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa0270000a02f, model64: 0xa02f0000a03a},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0a69, match64: 0x00000000, model64: 0xa03a0000a03f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa03f0000a046, model64: 0xa0460000a049},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0490000a050, model64: 0xa0500000a053},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0530000a05a, model64: 0xa05a0000a061},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6a, match64: 0x00000000, model64: 0xa0610000a068},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0680000a071, model64: 0xa0710000a077},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0770000a080, model64: 0xa0800000a082},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0820000a088, model64: 0x940c0000940e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0880000a08f, model64: 0xa08f0000a095},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0950000a09d, model64: 0xa09d0000a0a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6b, match64: 0x00000000, model64: 0xa0a00000a0a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6d, match64: 0x00000000, model64: 0xa0a40000a0ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0ac0000a0b3, model64: 0xa0ac0000a0b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6e, match64: 0x00000000, model64: 0xa0b30000a0bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6f, match64: 0x00000000, model64: 0xa0bb0000a0be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0be0000a0c5, model64: 0xa0be0000a0c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0c50000a0d1, model64: 0xa0d10000a0dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0dd0000a0e3, model64: 0xa0dd0000a0e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0e30000a0e9, model64: 0xa0e30000a0e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a70, match64: 0x00000000, model64: 0x4a7e00004a85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a71, match64: 0x00000000, model64: 0xa0e90000a0f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0f20000a0f9, model64: 0xa0f90000a100},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a72, match64: 0x00000000, model64: 0xa1000000a107},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a73, match64: 0x00000000, model64: 0xa1070000a10e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a74, match64: 0x00000000, model64: 0xa10e0000a114},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a75, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a76, match64: 0x00000000, model64: 0xa1140000a11c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a77, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a78, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a79, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x0a7a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7c, match64: 0x00000000, model64: 0xa1220000a124},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7d, match64: 0x00000000, model64: 0xa1240000a12b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa13b0000a141, model64: 0xa1410000a148},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa1480000a150, model64: 0xa1500000a159},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1710000a17d, model64: 0xa1710000a17d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa17d0000a189, model64: 0xa1890000a195},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1950000a19f, model64: 0xa19f0000a1a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1a90000a1b0, model64: 0xa1b00000a1b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a82, match64: 0x00000000, model64: 0xa1b70000a1bb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xa1ce0000a1d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1da0000a1e3, model64: 0xa1e30000a1ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1ec0000a1f3, model64: 0xa1f30000a1fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1fb0000a202, model64: 0xa1000000a107},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa2020000a20b, model64: 0xa20b0000a216},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xa2200000a22b, model64: 0xa2200000a22b},
		modelTuple{type64: 0x24300000245, matchRI: 0x0a85, match64: 0x00000000, model64: 0xa22b0000a22f},
		modelTuple{type64: 0x24300000245, matchRI: 0x0a86, match64: 0x00000000, model64: 0xa22f0000a236},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2360000a23e, model64: 0xa23e0000a246},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2460000a24f, model64: 0xa24f0000a258},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a89, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8c, match64: 0x00000000, model64: 0xa2680000a26b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8d, match64: 0x00000000, model64: 0x685a0000685c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8e, match64: 0x00000000, model64: 0xa26b0000a26e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8f, match64: 0x00000000, model64: 0xa26e0000a271},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a90, match64: 0x00000000, model64: 0xa2710000a273},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a91, match64: 0x00000000, model64: 0xa2730000a275},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a92, match64: 0x00000000, model64: 0xa2750000a277},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a93, match64: 0x00000000, model64: 0xa2770000a27e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a94, match64: 0x00000000, model64: 0xa27e0000a280},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a95, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0a96, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0xa2860000a28d, model64: 0xa2860000a28d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa28d0000a299, model64: 0xa28d0000a299},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2990000a2ab, model64: 0xa2ab0000a2b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a98, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0a99, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a9a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa2b20000a2bf, model64: 0xa2bf0000a2c7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa2c70000a2d2, model64: 0xa2c70000a2d2},
		modelTuple{type64: 0x24300000245, matchRI: 0x0a9b, match64: 0x00000000, model64: 0xa2d20000a2da},
		modelTuple{type64: 0x26ba000026c7, matchRI: 0x0a9c, match64: 0x00000000, model64: 0xa2da0000a2e4},
		modelTuple{type64: 0x24300000245, matchRI: 0x0a9d, match64: 0x00000000, model64: 0xa2da0000a2e4},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xa2e40000a2f1, model64: 0xa2f10000a305},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xa2da0000a2e4, model64: 0xa3050000a316},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xa3160000a31e, model64: 0xa3160000a31e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9e, match64: 0x00000000, model64: 0xa31e0000a323},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3230000a32b, model64: 0xa3230000a32b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9f, match64: 0x00000000, model64: 0xa32b0000a332},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa0, match64: 0x00000000, model64: 0xa3320000a33a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa33a0000a348, model64: 0xa33a0000a348},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa1, match64: 0x00000000, model64: 0xa3480000a352},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa2, match64: 0x00000000, model64: 0xa3520000a35c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa3, match64: 0x00000000, model64: 0xa35c0000a367},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa4, match64: 0x00000000, model64: 0xa3670000a371},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3710000a376, model64: 0xa3760000a37d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa37d0000a384, model64: 0xa3840000a38d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa5, match64: 0x00000000, model64: 0xa38d0000a395},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa6, match64: 0x00000000, model64: 0xa3950000a3a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa7, match64: 0x00000000, model64: 0xa3a20000a3ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa8, match64: 0x00000000, model64: 0xa3ab0000a3b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3b60000a3bb, model64: 0xa3bb0000a3c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa9, match64: 0x00000000, model64: 0xa3c20000a3cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3cd0000a3d2, model64: 0xa3d20000a3d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aaa, match64: 0x00000000, model64: 0xa3d90000a3e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aab, match64: 0x00000000, model64: 0xa3e00000a3eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aac, match64: 0x00000000, model64: 0xa3eb0000a3f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aad, match64: 0x00000000, model64: 0xa3f20000a3fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aae, match64: 0x00000000, model64: 0xa3520000a35c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aaf, match64: 0x00000000, model64: 0xa3fa0000a406},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab0, match64: 0x00000000, model64: 0xa4060000a40e},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0xa40e0000a413, model64: 0xa40e0000a413},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0ab1, match64: 0x00000000, model64: 0xa4130000a41d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa41d0000a424, model64: 0xa41d0000a424},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa4240000a430, model64: 0xa4240000a430},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0xa4300000a43c, model64: 0xa4300000a43c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa43c0000a445, model64: 0xa43c0000a445},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xa4450000a44a, model64: 0xa4450000a44a},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xa44a0000a456, model64: 0xa44a0000a456},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab3, match64: 0x00000000, model64: 0xa45e0000a465},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab4, match64: 0x00000000, model64: 0xa4650000a467},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab5, match64: 0x00000000, model64: 0xa4670000a46a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab6, match64: 0x00000000, model64: 0xa46a0000a472},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab7, match64: 0x00000000, model64: 0xa4720000a474},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab8, match64: 0x00000000, model64: 0xa4740000a47b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab9, match64: 0x00000000, model64: 0xa47b0000a482},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aba, match64: 0x00000000, model64: 0xc0700000c0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x85d3000085d9, model64: 0x85d3000085d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa48e0000a497, model64: 0xa4970000a49a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa49a0000a4a2, model64: 0xa4a20000a4a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4a60000a4ae, model64: 0xa4ae0000a4b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0abf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xa4ce0000a4d5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4e30000a4e9, model64: 0xa4e90000a4f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4f10000a4f7, model64: 0xa4f70000a4ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac8, match64: 0x00000000, model64: 0xa5090000a513},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac9, match64: 0x00000000, model64: 0xa5130000a51b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5270000a52f, model64: 0xa52f0000a534},
		modelTuple{type64: 0x2700000027, matchRI: 0x0acc, match64: 0x00000000, model64: 0xa53c0000a548},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa54e0000a556, model64: 0xa5560000a55e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ace, match64: 0x00000000, model64: 0xa55e0000a563},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ad4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad5, match64: 0x00000000, model64: 0x9c3000009c38},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad7, match64: 0x00000000, model64: 0x9b9100009b94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa57a0000a582, model64: 0xa5820000a594},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5940000a59e, model64: 0xa59e0000a5ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5ac0000a5b4, model64: 0xa5b40000a5c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5ca0000a5db, model64: 0xa5db0000a5ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad9, match64: 0x00000000, model64: 0xa5ec0000a5f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ada, match64: 0x00000000, model64: 0xa5f70000a601},
		modelTuple{type64: 0x2700000027, matchRI: 0x0adb, match64: 0x00000000, model64: 0xa6010000a609},
		modelTuple{type64: 0x2700000027, matchRI: 0x0adc, match64: 0x00000000, model64: 0xa6090000a611},
		modelTuple{type64: 0x2700000027, matchRI: 0x0add, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae0, match64: 0x00000000, model64: 0xa61d0000a625},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae2, match64: 0x00000000, model64: 0xa6280000a630},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae3, match64: 0x00000000, model64: 0xa6300000a636},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae4, match64: 0x00000000, model64: 0xa6360000a63d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae5, match64: 0x00000000, model64: 0x40c0000040f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae6, match64: 0x00000000, model64: 0xa63d0000a641},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa64f0000a656, model64: 0xa6560000a65d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xa6710000a67a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aeb, match64: 0x00000000, model64: 0xa67e0000a684},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0aed, match64: 0x00000000, model64: 0xa6890000a68f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa68f0000a69d, model64: 0xa69d0000a6ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aee, match64: 0x00000000, model64: 0xa6ab0000a6b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aef, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af0, match64: 0x00000000, model64: 0xa6bd0000a6cb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6d70000a6e1, model64: 0xa6e10000a6e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6e70000a6f0, model64: 0xa6e70000a6f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6f00000a6f5, model64: 0xa6f00000a6f5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xa6fe0000a708},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af6, match64: 0x00000000, model64: 0xa7180000a727},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0xa7290000a73d, model64: 0xa73d0000a74d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa74d0000a757, model64: 0xa7570000a75e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0af8, match64: 0x00000000, model64: 0xa75e0000a766},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa7660000a76e, model64: 0xa7660000a76e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa76e0000a77b, model64: 0xa77b0000a78a},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0xa78a0000a7a2, model64: 0xa78a0000a7a2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0af9, match64: 0x00000000, model64: 0xa7a20000a7ab},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa7ab0000a7b9, model64: 0xa7b90000a7c4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0afa, match64: 0x00000000, model64: 0xa75e0000a766},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0afb, match64: 0x00000000, model64: 0xa75e0000a766},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0afc, match64: 0x00000000, model64: 0xa7c40000a7cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afe, match64: 0x00000000, model64: 0xa7cc0000a7d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aff, match64: 0x00000000, model64: 0xa7d30000a7d7},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0b00, match64: 0x00000000, model64: 0xa7d70000a7e1},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0xa7e10000a7f3, model64: 0xa7e10000a7f3},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0b01, match64: 0x00000000, model64: 0x740f0000741c},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x0b02, match64: 0x00000000, model64: 0xa7f30000a7ff},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0xa7ff0000a815, model64: 0xa7ff0000a815},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b04, match64: 0x00000000, model64: 0xa8180000a81e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b05, match64: 0x00000000, model64: 0xa81e0000a825},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b06, match64: 0x00000000, model64: 0xa8250000a82d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b07, match64: 0x00000000, model64: 0xa82d0000a835},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b08, match64: 0x00000000, model64: 0xa8350000a83d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b09, match64: 0x00000000, model64: 0xa83d0000a845},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0a, match64: 0x00000000, model64: 0xa8450000a84d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0b, match64: 0x00000000, model64: 0xa84d0000a853},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0c, match64: 0x00000000, model64: 0xa8530000a859},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0d, match64: 0x00000000, model64: 0xa8590000a85f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0e, match64: 0x00000000, model64: 0xa85f0000a872},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0f, match64: 0x00000000, model64: 0xa8720000a875},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b10, match64: 0x00000000, model64: 0xa8750000a878},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b11, match64: 0x00000000, model64: 0xa8780000a87d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b12, match64: 0x00000000, model64: 0xa87d0000a885},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b13, match64: 0x00000000, model64: 0xa8850000a88f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b14, match64: 0x00000000, model64: 0xa88f0000a895},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b15, match64: 0x00000000, model64: 0xa8950000a89c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b16, match64: 0x00000000, model64: 0xa89c0000a89d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b17, match64: 0x00000000, model64: 0xa89d0000a8a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b18, match64: 0x00000000, model64: 0xa8a20000a8a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b19, match64: 0x00000000, model64: 0xa8a90000a8b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1a, match64: 0x00000000, model64: 0xa8b40000a8bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8bf0000a8da, model64: 0xa8da0000a8f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1b, match64: 0x00000000, model64: 0xa8f50000a900},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1c, match64: 0x00000000, model64: 0xa9000000a906},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1d, match64: 0x00000000, model64: 0xa9060000a915},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1e, match64: 0x00000000, model64: 0xa9150000a927},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1f, match64: 0x00000000, model64: 0xa9270000a92d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b20, match64: 0x00000000, model64: 0xa92d0000a933},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b21, match64: 0x00000000, model64: 0xa9330000a93d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b22, match64: 0x00000000, model64: 0xa93d0000a943},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b23, match64: 0x00000000, model64: 0xa9430000a949},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b24, match64: 0x00000000, model64: 0xa9490000a954},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b25, match64: 0x00000000, model64: 0xa9540000a95a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b26, match64: 0x00000000, model64: 0xa95a0000a963},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b27, match64: 0x00000000, model64: 0xa9630000a969},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b28, match64: 0x00000000, model64: 0xa9690000a96f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa96f0000a976, model64: 0xa9760000a986},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9860000a990, model64: 0xa9900000a999},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9990000a9a1, model64: 0xa9a10000a9ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9ac0000a9b6, model64: 0xa9b60000a9c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9c80000a9d0, model64: 0x824c00008255},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9d00000a9d8, model64: 0xa9d80000a9db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9db0000a9e0, model64: 0x820f00008213},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b29, match64: 0x00000000, model64: 0x3b0700003b09},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2a, match64: 0x00000000, model64: 0xa9e00000a9e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2b, match64: 0x00000000, model64: 0xa9e90000a9f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2c, match64: 0x00000000, model64: 0xa9f40000a9fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2d, match64: 0x00000000, model64: 0xa9fe0000aa08},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2e, match64: 0x00000000, model64: 0xaa080000aa12},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2f, match64: 0x00000000, model64: 0xaa120000aa1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b30, match64: 0x00000000, model64: 0xaa1c0000aa27},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b31, match64: 0x00000000, model64: 0xaa270000aa31},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b32, match64: 0x00000000, model64: 0xaa310000aa3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b33, match64: 0x00000000, model64: 0xaa3b0000aa45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b34, match64: 0x00000000, model64: 0xaa450000aa4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b35, match64: 0x00000000, model64: 0xaa4f0000aa59},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b36, match64: 0x00000000, model64: 0xaa590000aa63},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b37, match64: 0x00000000, model64: 0xaa630000aa6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b38, match64: 0x00000000, model64: 0xaa6d0000aa81},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b39, match64: 0x00000000, model64: 0xaa810000aa89},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3a, match64: 0x00000000, model64: 0xaa890000aa8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3b, match64: 0x00000000, model64: 0xaa8d0000aa9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3c, match64: 0x00000000, model64: 0xaa9e0000aaab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3d, match64: 0x00000000, model64: 0xaaab0000aab1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3e, match64: 0x00000000, model64: 0xaab10000aac1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3f, match64: 0x00000000, model64: 0xaac10000aace},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b40, match64: 0x00000000, model64: 0xaace0000aae2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaae20000aaea, model64: 0xaaea0000aaed},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b41, match64: 0x00000000, model64: 0xaaed0000aaf2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b42, match64: 0x00000000, model64: 0xaaf20000aaf7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b43, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b44, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b45, match64: 0x00000000, model64: 0xaaf70000aaff},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0b46, match64: 0x00000000, model64: 0xaaff0000ab06},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b47, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b48, match64: 0x00000000, model64: 0xab060000ab11},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b49, match64: 0x00000000, model64: 0xab060000ab11},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4a, match64: 0x00000000, model64: 0xab110000ab21},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4b, match64: 0x00000000, model64: 0xab210000ab31},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b50, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b51, match64: 0x00000000, model64: 0x634000006345},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b52, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b53, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b54, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b55, match64: 0x00000000, model64: 0x3b0700003b09},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b57, match64: 0x00000000, model64: 0xab370000ab3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b58, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xab400000ab4b, model64: 0xab4b0000ab5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xab5c0000ab63, model64: 0xab630000ab70},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xab700000ab7a, model64: 0xab7a0000ab7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xab7c0000ab83, model64: 0xab7c0000ab83},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5a, match64: 0x00000000, model64: 0xab830000ab8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xab8f0000ab99, model64: 0x66f4000066f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xab990000aba3, model64: 0x672500006727},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaba30000abad, model64: 0xabad0000abb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xabb00000abba, model64: 0xabba0000abbe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xabbe0000abc8, model64: 0xabc80000abcb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xabcb0000abd5, model64: 0xabd50000abd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5b, match64: 0x00000000, model64: 0xabd80000abda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xabda0000abe9, model64: 0xabe90000abf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5e, match64: 0x00000000, model64: 0x9ffe0000a001},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b5f, match64: 0x00000000, model64: 0xabf40000abfb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b60, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b61, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xabfb0000ac0a, model64: 0x7de000007ded},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xac0a0000ac12, model64: 0xac120000ac1c},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xac1c0000ac26, model64: 0xac1c0000ac26},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xac260000ac3c, model64: 0xac3c0000ac4c},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xac4c0000ac5d, model64: 0xac4c0000ac5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b62, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b63, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b64, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x0b65, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b66, match64: 0x00000000, model64: 0xac630000ac6b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b69, match64: 0x00000000, model64: 0xac760000ac82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6b, match64: 0x00000000, model64: 0xac880000ac94},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6c, match64: 0x00000000, model64: 0xac940000aca1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6d, match64: 0x00000000, model64: 0xaca10000acad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6e, match64: 0x00000000, model64: 0xacad0000acbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6f, match64: 0x00000000, model64: 0x80d9000080e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b70, match64: 0x00000000, model64: 0x92250000922b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xacbc0000acca, model64: 0xacca0000acd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b71, match64: 0x00000000, model64: 0xacd10000acd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b72, match64: 0x00000000, model64: 0xacd60000acdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b73, match64: 0x00000000, model64: 0xacdd0000ace1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b74, match64: 0x00000000, model64: 0xace10000ace9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b75, match64: 0x00000000, model64: 0xace90000acef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b76, match64: 0x00000000, model64: 0xacef0000acf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b77, match64: 0x00000000, model64: 0xacf70000ad03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad030000ad12, model64: 0xad120000ad1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad1a0000ad2b, model64: 0xad2b0000ad36},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b78, match64: 0x00000000, model64: 0xad360000ad3e},
		modelTuple{type64: 0x24700000251, matchRI: 0x0b7a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7e, match64: 0x00000000, model64: 0xad4f0000ad5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad5a0000ad61, model64: 0xad5a0000ad61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad610000ad67, model64: 0xad610000ad67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad670000ad6f, model64: 0xad670000ad6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad6f0000ad77, model64: 0xad6f0000ad77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad770000ad7c, model64: 0xad7c0000ad85},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xad950000ad9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b82, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b83, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b85, match64: 0x00000000, model64: 0xadab0000adb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b86, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b87, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8a, match64: 0x00000000, model64: 0xadc60000adcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8b, match64: 0x00000000, model64: 0xadcc0000add2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8c, match64: 0x00000000, model64: 0xadd20000add7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xadea0000adec},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b92, match64: 0x00000000, model64: 0xadf40000adfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b93, match64: 0x00000000, model64: 0x531c00005321},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b94, match64: 0x00000000, model64: 0xadfc0000ae04},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b95, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xae040000ae13, model64: 0xae130000ae21},
		modelTuple{type64: 0x24300000245, matchRI: 0x0b96, match64: 0x00000000, model64: 0xae210000ae28},
		modelTuple{type64: 0x24300000245, matchRI: 0x0b97, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae2f0000ae37, model64: 0xae370000ae3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae3b0000ae43, model64: 0xae430000ae48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae480000ae51, model64: 0xae510000ae56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae560000ae5f, model64: 0xae5f0000ae60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae600000ae68, model64: 0x3b0700003b09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae680000ae70, model64: 0xae700000ae76},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b99, match64: 0x00000000, model64: 0xae760000ae78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae780000ae80, model64: 0xae800000ae85},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xae8d0000ae94},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xaead0000aeb7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9d, match64: 0x00000000, model64: 0xaec70000aed2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaed80000aedc, model64: 0xaedc0000aee1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba2, match64: 0x00000000, model64: 0xaee60000aeef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba3, match64: 0x00000000, model64: 0xaeef0000aef6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba5, match64: 0x00000000, model64: 0xaefc0000af03},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba6, match64: 0x00000000, model64: 0xaf030000af0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba7, match64: 0x00000000, model64: 0xaf0c0000af13},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bab, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bac, match64: 0x00000000, model64: 0xaf230000af31},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bad, match64: 0x00000000, model64: 0xaf310000af44},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bae, match64: 0x00000000, model64: 0xaf440000af54},
		modelTuple{type64: 0x2700000027, matchRI: 0x0baf, match64: 0x00000000, model64: 0xaf540000af62},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb0, match64: 0x00000000, model64: 0xaf620000af70},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb1, match64: 0x00000000, model64: 0xaf700000af7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb2, match64: 0x00000000, model64: 0xaf7a0000af7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb3, match64: 0x00000000, model64: 0xaf7f0000af86},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb4, match64: 0x00000000, model64: 0xaf860000af91},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb5, match64: 0x00000000, model64: 0xaf910000af98},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb6, match64: 0x00000000, model64: 0xaf980000afa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb7, match64: 0x00000000, model64: 0xafa00000afa4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb8, match64: 0x00000000, model64: 0xafa40000afa7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb9, match64: 0x00000000, model64: 0xafa70000afb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bba, match64: 0x00000000, model64: 0xafb10000afbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbb, match64: 0x00000000, model64: 0xafbb0000afc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbc, match64: 0x00000000, model64: 0xafc10000afca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbd, match64: 0x00000000, model64: 0xafca0000afcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbe, match64: 0x00000000, model64: 0xafcf0000afda},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbf, match64: 0x00000000, model64: 0xafda0000afe1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc0, match64: 0x00000000, model64: 0xafe10000afef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc1, match64: 0x00000000, model64: 0xafef0000aff9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaff90000b002, model64: 0xaff90000b002},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc2, match64: 0x00000000, model64: 0xb0020000b009},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc3, match64: 0x00000000, model64: 0xb0090000b013},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc4, match64: 0x00000000, model64: 0xb0130000b01d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc5, match64: 0x00000000, model64: 0xb01d0000b02b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc6, match64: 0x00000000, model64: 0xb02b0000b032},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc7, match64: 0x00000000, model64: 0xb0320000b03e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc8, match64: 0x00000000, model64: 0xb03e0000b043},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc9, match64: 0x00000000, model64: 0xb0430000b04a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bca, match64: 0x00000000, model64: 0xb04a0000b050},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcb, match64: 0x00000000, model64: 0xb0500000b057},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcc, match64: 0x00000000, model64: 0xb0570000b05f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb05f0000b066, model64: 0xb05f0000b066},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcd, match64: 0x00000000, model64: 0xb0660000b070},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bce, match64: 0x00000000, model64: 0x947a0000947f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcf, match64: 0x00000000, model64: 0xb0700000b07d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd0, match64: 0x00000000, model64: 0xb07d0000b085},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0850000b08e, model64: 0xb08e0000b097},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0970000b09e, model64: 0xb0970000b09e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd2, match64: 0x00000000, model64: 0xa6f00000a6f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd3, match64: 0x00000000, model64: 0x92ae000092b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd6, match64: 0x00000000, model64: 0xb0ae0000b0bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd7, match64: 0x00000000, model64: 0xb0bd0000b0c3},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xb0ca0000b0d1, model64: 0xb0d10000b0d7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0bd9, match64: 0x00000000, model64: 0xb0d70000b0da},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0bda, match64: 0x00000000, model64: 0xb0da0000b0e4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xb0e40000b0e9, model64: 0xb0e90000b0ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0ef0000b0f7, model64: 0x17490000174b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0f70000b0ff, model64: 0xb0ff0000b108},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1080000b110, model64: 0xb1100000b112},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1120000b11a, model64: 0xb11a0000b11d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb11d0000b124, model64: 0x176000001762},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1240000b12c, model64: 0x47a0000047c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb12c0000b139, model64: 0xb1390000b148},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdb, match64: 0x00000000, model64: 0xb1480000b14c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb14c0000b15a, model64: 0xb15a0000b168},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdc, match64: 0x00000000, model64: 0xb1680000b16d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb16d0000b175, model64: 0xb1750000b17b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb17b0000b180, model64: 0xb1800000b182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1820000b18a, model64: 0xb18a0000b18d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb18d0000b195, model64: 0xb1950000b198},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1980000b19e, model64: 0xb19e0000b1b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1b20000b1b7, model64: 0xb1b70000b1cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1cb0000b1cf, model64: 0xb1cf0000b1e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdd, match64: 0x00000000, model64: 0xb1e40000b1e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bde, match64: 0x00000000, model64: 0xb1e70000b1ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdf, match64: 0x00000000, model64: 0xb1ea0000b1ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be0, match64: 0x00000000, model64: 0xb1ed0000b1f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be1, match64: 0x00000000, model64: 0xb1f80000b207},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be2, match64: 0x00000000, model64: 0xb2070000b212},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be3, match64: 0x00000000, model64: 0x592c0000593b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be4, match64: 0x00000000, model64: 0xb2120000b21d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be5, match64: 0x00000000, model64: 0xb21d0000b224},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be6, match64: 0x00000000, model64: 0xb2240000b228},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be7, match64: 0x00000000, model64: 0xb2280000b22b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be8, match64: 0x00000000, model64: 0xb22b0000b22e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be9, match64: 0x00000000, model64: 0xb22e0000b236},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bea, match64: 0x00000000, model64: 0xb2360000b239},
		modelTuple{type64: 0x2700000027, matchRI: 0x0beb, match64: 0x00000000, model64: 0xb2390000b23c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb23c0000b244, model64: 0xb2440000b247},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2470000b257, model64: 0xb2570000b25a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb25a0000b26e, model64: 0xb26e0000b276},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2760000b27e, model64: 0xb27e0000b284},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bec, match64: 0x00000000, model64: 0xb2840000b287},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bed, match64: 0x00000000, model64: 0xb2870000b298},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2980000b2a0, model64: 0xb2a00000b2ac},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0bee, match64: 0x00000000, model64: 0xb1950000b198},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bef, match64: 0x00000000, model64: 0xb2ac0000b2b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf1, match64: 0x00000000, model64: 0xb2b40000b2b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf2, match64: 0x00000000, model64: 0xb2b60000b2ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf3, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf4, match64: 0x00000000, model64: 0xb2ba0000b2cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf5, match64: 0x00000000, model64: 0xb2cb0000b2da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0bf7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0bf8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0bf9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0bfa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xae980000aead, matchRI: 0x0bfb, match64: 0x00000000, model64: 0xb2da0000b2df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfc, match64: 0x00000000, model64: 0xb2df0000b2e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfd, match64: 0x00000000, model64: 0xb2e80000b2f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfe, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bff, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c00, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c01, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c03, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c06, match64: 0x00000000, model64: 0x4fa900004faf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c07, match64: 0x00000000, model64: 0xb3060000b30a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c08, match64: 0x00000000, model64: 0xb3060000b30a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0c, match64: 0x00000000, model64: 0xb31a0000b321},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0d, match64: 0x00000000, model64: 0xb3210000b332},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0e, match64: 0x00000000, model64: 0xb3320000b337},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb33d0000b344, model64: 0xb33d0000b344},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb3440000b347, model64: 0xb3440000b347},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c10, match64: 0x00000000, model64: 0xb3470000b34f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c11, match64: 0x00000000, model64: 0xb34f0000b353},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c12, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c14, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c15, match64: 0x00000000, model64: 0xb35c0000b366},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xb3660000b36b, model64: 0xb36b0000b378},
		modelTuple{type64: 0x6c9000006d3, matchRI: 0x0c16, match64: 0x00000000, model64: 0xb3780000b382},
		modelTuple{type64: 0x6c9000006d3, matchRI: -0x0001, match64: 0xb3890000b39a, model64: 0xb39a0000b3a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c18, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c19, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1a, match64: 0x00000000, model64: 0xb3a80000b3ab},
		modelTuple{type64: 0x24700000251, matchRI: 0x0c1b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1d, match64: 0x00000000, model64: 0xb3b30000b3b7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c20, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c21, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb3ce0000b3d5, model64: 0x9eff00009f04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb3d50000b3dc, model64: 0xb3dc0000b3e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb3e30000b3ea, model64: 0xb3ea0000b3ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb3ef0000b3f3, model64: 0xb3f30000b3fa},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xb3fa0000b3fe, model64: 0xb3fa0000b3fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb3fe0000b406, model64: 0xb4060000b40d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c24, match64: 0x00000000, model64: 0xb4130000b421},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c25, match64: 0x00000000, model64: 0xb4210000b426},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c26, match64: 0x00000000, model64: 0xb4260000b433},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c27, match64: 0x00000000, model64: 0xb4330000b43c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c28, match64: 0x00000000, model64: 0x6cea00006cf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c29, match64: 0x00000000, model64: 0xb43c0000b448},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb4480000b44f, model64: 0xb4480000b44f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2a, match64: 0x00000000, model64: 0xb44f0000b457},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2b, match64: 0x00000000, model64: 0xb4570000b460},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2c, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2d, match64: 0x00000000, model64: 0xb4600000b463},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2f, match64: 0x00000000, model64: 0xb4630000b466},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0xb4660000b470, model64: 0xb4660000b470},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xb4700000b47a, model64: 0xb47a0000b484},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xb4840000b490, model64: 0xb4900000b49c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xb49c0000b4a2, model64: 0xb4a20000b4a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c30, match64: 0x00000000, model64: 0xb4a80000b4b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c31, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb4b60000b4c0, model64: 0xb4b60000b4c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb4c00000b4c6, model64: 0xb4c00000b4c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c33, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c34, match64: 0x00000000, model64: 0xb4c90000b4d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c35, match64: 0x00000000, model64: 0xb4d90000b4de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c37, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c38, match64: 0x00000000, model64: 0xb4e40000b4e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3c, match64: 0x00000000, model64: 0xb4f30000b503},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3d, match64: 0x00000000, model64: 0xb5030000b512},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3f, match64: 0x00000000, model64: 0xb5180000b51f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c40, match64: 0x00000000, model64: 0xb51f0000b52c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c41, match64: 0x00000000, model64: 0xb52c0000b538},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5380000b540, model64: 0xb5400000b54d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb54d0000b555, model64: 0xb5550000b564},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5640000b56c, model64: 0xb56c0000b57a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb57a0000b582, model64: 0xb5820000b594},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5940000b59c, model64: 0xb59c0000b5a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c42, match64: 0x00000000, model64: 0xb5a50000b5b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c43, match64: 0x00000000, model64: 0xb5b20000b5c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c44, match64: 0x00000000, model64: 0xb5c00000b5c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5c80000b5d0, model64: 0xb5d00000b5db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5db0000b5e3, model64: 0xb5e30000b5ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5ef0000b5f7, model64: 0xb5f70000b604},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6040000b60c, model64: 0xb60c0000b615},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6150000b61d, model64: 0xb61d0000b625},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6250000b62c, model64: 0xb62c0000b637},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6370000b63f, model64: 0xb63f0000b64b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb64b0000b652, model64: 0xb6520000b65f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb65f0000b667, model64: 0xb6670000b673},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6730000b67b, model64: 0xb67b0000b686},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6860000b68e, model64: 0xb68e0000b69f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb69f0000b6a7, model64: 0xb6a70000b6b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6b20000b6ba, model64: 0xb6ba0000b6c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6c50000b6cd, model64: 0xb6cd0000b6da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c45, match64: 0x00000000, model64: 0xb6da0000b6dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c46, match64: 0x00000000, model64: 0xb6dc0000b6e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c47, match64: 0x00000000, model64: 0xb6e50000b6ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c48, match64: 0x00000000, model64: 0xb6ee0000b6f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c49, match64: 0x00000000, model64: 0xb6f90000b704},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4a, match64: 0x00000000, model64: 0xb7040000b70f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4b, match64: 0x00000000, model64: 0xb70f0000b719},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4c, match64: 0x00000000, model64: 0xb7190000b724},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4d, match64: 0x00000000, model64: 0xb7240000b72f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4e, match64: 0x00000000, model64: 0xb72f0000b73b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4f, match64: 0x00000000, model64: 0xb73b0000b746},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c50, match64: 0x00000000, model64: 0xb7460000b74f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c51, match64: 0x00000000, model64: 0xb74f0000b758},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c52, match64: 0x00000000, model64: 0xb7580000b761},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c53, match64: 0x00000000, model64: 0xb7610000b76c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c54, match64: 0x00000000, model64: 0xb76c0000b775},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c55, match64: 0x00000000, model64: 0xb7750000b77f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c56, match64: 0x00000000, model64: 0xb77f0000b78a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c57, match64: 0x00000000, model64: 0xb78a0000b795},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c58, match64: 0x00000000, model64: 0xb7950000b7a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c59, match64: 0x00000000, model64: 0xb7a00000b7ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5a, match64: 0x00000000, model64: 0xb7ab0000b7b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5b, match64: 0x00000000, model64: 0xb7b30000b7c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5c, match64: 0x00000000, model64: 0xb7c00000b7c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5d, match64: 0x00000000, model64: 0xb7c90000b7d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5e, match64: 0x00000000, model64: 0xb7d20000b7da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7da0000b7e2, model64: 0xb7e20000b7ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7ea0000b7f2, model64: 0xb7f20000b7fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7fb0000b803, model64: 0xb8030000b80b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb80b0000b813, model64: 0xb8130000b822},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8220000b82a, model64: 0xb82a0000b836},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8360000b83e, model64: 0xb83e0000b847},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8470000b84f, model64: 0xb84f0000b85b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb85b0000b863, model64: 0xb8630000b86b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5f, match64: 0x00000000, model64: 0xb86b0000b86e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c60, match64: 0x00000000, model64: 0xb86e0000b875},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c61, match64: 0x00000000, model64: 0xb8750000b87d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c62, match64: 0x00000000, model64: 0xb87d0000b884},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c63, match64: 0x00000000, model64: 0xb8840000b88c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c64, match64: 0x00000000, model64: 0xb88c0000b898},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c65, match64: 0x00000000, model64: 0xb8980000b89f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c66, match64: 0x00000000, model64: 0xb89f0000b8ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c67, match64: 0x00000000, model64: 0xb8ab0000b8b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c68, match64: 0x00000000, model64: 0xb8b30000b8bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c69, match64: 0x00000000, model64: 0xb8bb0000b8ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c6a, match64: 0x00000000, model64: 0xb8ca0000b8d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c6b, match64: 0x00000000, model64: 0xb8d40000b8df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c6c, match64: 0x00000000, model64: 0xb8df0000b8ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c6d, match64: 0x00000000, model64: 0xb8ef0000b8f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c6e, match64: 0x00000000, model64: 0xb8f80000b900},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c6f, match64: 0x00000000, model64: 0xb9000000b903},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c70, match64: 0x00000000, model64: 0xb9030000b909},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c71, match64: 0x00000000, model64: 0xb9090000b914},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c72, match64: 0x00000000, model64: 0xb9140000b918},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c73, match64: 0x00000000, model64: 0xb9180000b922},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c74, match64: 0x00000000, model64: 0xb9220000b925},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c75, match64: 0x00000000, model64: 0xb9250000b92f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c76, match64: 0x00000000, model64: 0xb92f0000b932},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c77, match64: 0x00000000, model64: 0xb9320000b934},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c78, match64: 0x00000000, model64: 0xb9340000b93b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c79, match64: 0x00000000, model64: 0xb93b0000b942},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7a, match64: 0x00000000, model64: 0xb9420000b945},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7b, match64: 0x00000000, model64: 0xb9450000b94c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7c, match64: 0x00000000, model64: 0xb94c0000b94f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7d, match64: 0x00000000, model64: 0xb94f0000b953},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7e, match64: 0x00000000, model64: 0xb9530000b95d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb95d0000b965, model64: 0xb9650000b96d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb96d0000b975, model64: 0xb9750000b97d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7f, match64: 0x00000000, model64: 0xb97d0000b982},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c80, match64: 0x00000000, model64: 0xb9820000b98a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c81, match64: 0x00000000, model64: 0xb98a0000b997},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c82, match64: 0x00000000, model64: 0xb9970000b9a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c83, match64: 0x00000000, model64: 0xb9a00000b9a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c84, match64: 0x00000000, model64: 0xb9a70000b9af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c85, match64: 0x00000000, model64: 0xb9af0000b9bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c86, match64: 0x00000000, model64: 0xb9bc0000b9c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c87, match64: 0x00000000, model64: 0xb9c50000b9d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c88, match64: 0x00000000, model64: 0xb9d10000b9da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c89, match64: 0x00000000, model64: 0xb9da0000b9e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c8a, match64: 0x00000000, model64: 0xb9e60000b9f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c8b, match64: 0x00000000, model64: 0xb9f70000ba00},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c8c, match64: 0x00000000, model64: 0xba000000ba09},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c8d, match64: 0x00000000, model64: 0xba090000ba16},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c8e, match64: 0x00000000, model64: 0xba160000ba1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c8f, match64: 0x00000000, model64: 0xba1e0000ba26},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c90, match64: 0x00000000, model64: 0xba260000ba33},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c91, match64: 0x00000000, model64: 0xba330000ba3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xba3b0000ba42, model64: 0xba420000ba49},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c92, match64: 0x00000000, model64: 0xba490000ba51},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c93, match64: 0x00000000, model64: 0xba510000ba59},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c94, match64: 0x00000000, model64: 0xba590000ba65},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c95, match64: 0x00000000, model64: 0xba650000ba71},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c96, match64: 0x00000000, model64: 0xba710000ba79},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c97, match64: 0x00000000, model64: 0xba790000ba85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c98, match64: 0x00000000, model64: 0xba850000ba8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c99, match64: 0x00000000, model64: 0xba8d0000ba95},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9a, match64: 0x00000000, model64: 0xba950000baa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9b, match64: 0x00000000, model64: 0xbaa60000baae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9c, match64: 0x00000000, model64: 0xbaae0000bab9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9d, match64: 0x00000000, model64: 0xbab90000bac4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9e, match64: 0x00000000, model64: 0xbac40000bad1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9f, match64: 0x00000000, model64: 0xbad10000bae0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbae00000bae8, model64: 0xbae80000baf0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbaf00000baf8, model64: 0xbaf80000bb06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbb060000bb0e, model64: 0xbb0e0000bb1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca0, match64: 0x00000000, model64: 0xbb1a0000bb21},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca1, match64: 0x00000000, model64: 0xbb210000bb2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca2, match64: 0x00000000, model64: 0xbb2d0000bb39},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca3, match64: 0x00000000, model64: 0xbb390000bb41},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca4, match64: 0x00000000, model64: 0xbb410000bb49},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca5, match64: 0x00000000, model64: 0xbb490000bb55},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca6, match64: 0x00000000, model64: 0xbb550000bb5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca7, match64: 0x00000000, model64: 0xbb5d0000bb64},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca8, match64: 0x00000000, model64: 0xbb640000bb70},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca9, match64: 0x00000000, model64: 0xbb700000bb78},
		modelTuple{type64: 0x2700000027, matchRI: 0x0caa, match64: 0x00000000, model64: 0xbb780000bb84},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cab, match64: 0x00000000, model64: 0xbb840000bb8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cac, match64: 0x00000000, model64: 0xbb8c0000bb94},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cad, match64: 0x00000000, model64: 0xbb940000bb9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cae, match64: 0x00000000, model64: 0xbb9c0000bba4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0caf, match64: 0x00000000, model64: 0xbba40000bbab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb0, match64: 0x00000000, model64: 0xbbab0000bbb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb1, match64: 0x00000000, model64: 0xbbb70000bbc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb2, match64: 0x00000000, model64: 0xbbc20000bbcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb3, match64: 0x00000000, model64: 0xbbcf0000bbd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb4, match64: 0x00000000, model64: 0xbbd70000bbe3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb5, match64: 0x00000000, model64: 0xbbe30000bbeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb6, match64: 0x00000000, model64: 0xbbeb0000bbf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb7, match64: 0x00000000, model64: 0xbbf30000bbfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb8, match64: 0x00000000, model64: 0xbbfb0000bc07},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb9, match64: 0x00000000, model64: 0xbc070000bc0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cba, match64: 0x00000000, model64: 0xbc0e0000bc16},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbb, match64: 0x00000000, model64: 0xbc160000bc1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbc, match64: 0x00000000, model64: 0xbc1e0000bc2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbd, match64: 0x00000000, model64: 0xbc2a0000bc32},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbe, match64: 0x00000000, model64: 0xbc320000bc3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbf, match64: 0x00000000, model64: 0xbc3a0000bc42},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc0, match64: 0x00000000, model64: 0xbc420000bc4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc4e0000bc5b, model64: 0xbc5b0000bc68},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc1, match64: 0x00000000, model64: 0xbc680000bc75},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc2, match64: 0x00000000, model64: 0xbc750000bc80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc3, match64: 0x00000000, model64: 0xbc800000bc8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc4, match64: 0x00000000, model64: 0xbc8b0000bc98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc980000bca8, model64: 0xbc980000bca8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc5, match64: 0x00000000, model64: 0xbca80000bcb6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbcb60000bcbe, model64: 0xbcbe0000bcd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbcd30000bcdb, model64: 0xbcdb0000bcea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbcea0000bcf1, model64: 0xbcf10000bcff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbcff0000bd07, model64: 0xbd070000bd1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd1e0000bd26, model64: 0xbd260000bd37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd370000bd3f, model64: 0xbd3f0000bd4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd4d0000bd55, model64: 0xbd550000bd62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd620000bd6a, model64: 0xbd6a0000bd7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd7b0000bd83, model64: 0xbd830000bd95},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc6, match64: 0x00000000, model64: 0xbd950000bda6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbda60000bdae, model64: 0xbdae0000bdbb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbdbb0000bdc3, model64: 0xbdc30000bdd5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbdd50000bddc, model64: 0xbddc0000bdee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbdee0000bdf5, model64: 0xbdf50000be07},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc7, match64: 0x00000000, model64: 0xbe070000be14},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc8, match64: 0x00000000, model64: 0xbe140000be25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe250000be2d, model64: 0xbe2d0000be43},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc9, match64: 0x00000000, model64: 0xbe430000be58},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cca, match64: 0x00000000, model64: 0xbe580000be69},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ccb, match64: 0x00000000, model64: 0xbe690000be7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe7a0000be82, model64: 0xbe820000be8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ccc, match64: 0x00000000, model64: 0xbe8f0000be9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ccd, match64: 0x00000000, model64: 0xbe9c0000bea8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cce, match64: 0x00000000, model64: 0xbea80000beb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ccf, match64: 0x00000000, model64: 0xbeb60000bec3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd0, match64: 0x00000000, model64: 0xbec30000becf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd1, match64: 0x00000000, model64: 0xbecf0000bedb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd2, match64: 0x00000000, model64: 0xbedb0000bee9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd3, match64: 0x00000000, model64: 0xbee90000bef3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd4, match64: 0x00000000, model64: 0xbef30000beff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd5, match64: 0x00000000, model64: 0xbeff0000bf11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbf110000bf19, model64: 0xbf190000bf26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbf260000bf2e, model64: 0xbf2e0000bf3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbf3e0000bf46, model64: 0xbf460000bf53},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd6, match64: 0x00000000, model64: 0xbf530000bf60},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd7, match64: 0x00000000, model64: 0xbf600000bf68},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd8, match64: 0x00000000, model64: 0xbf680000bf74},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd9, match64: 0x00000000, model64: 0xbf740000bf81},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cda, match64: 0x00000000, model64: 0xbf810000bf91},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdb, match64: 0x00000000, model64: 0xbf910000bf9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbf9e0000bfa6, model64: 0xbfa60000bfb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbfb80000bfc0, model64: 0xbfc00000bfd0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbfd00000bfd8, model64: 0xbfd80000bfe6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdc, match64: 0x00000000, model64: 0xbfe60000bfef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdd, match64: 0x00000000, model64: 0xbfef0000bff8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbff80000bfff, model64: 0xbfff0000c00b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cde, match64: 0x00000000, model64: 0xc00b0000c018},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0180000c020, model64: 0xc0200000c035},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdf, match64: 0x00000000, model64: 0xc0350000c046},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce0, match64: 0x00000000, model64: 0xc0460000c053},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce1, match64: 0x00000000, model64: 0xc0530000c05f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce2, match64: 0x00000000, model64: 0xc05f0000c06b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce3, match64: 0x00000000, model64: 0xc06b0000c077},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce4, match64: 0x00000000, model64: 0xc0770000c084},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce5, match64: 0x00000000, model64: 0xc0840000c092},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce6, match64: 0x00000000, model64: 0xc0920000c0a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce7, match64: 0x00000000, model64: 0xc0a30000c0b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce8, match64: 0x00000000, model64: 0xc0b00000c0bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0bd0000c0c5, model64: 0xc0c50000c0d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0d20000c0de, model64: 0xc0d20000c0de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce9, match64: 0x00000000, model64: 0xc0de0000c0e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cea, match64: 0x00000000, model64: 0xc0e70000c0f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ceb, match64: 0x00000000, model64: 0xc0f00000c0f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cec, match64: 0x00000000, model64: 0xc0f90000c101},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ced, match64: 0x00000000, model64: 0xc1010000c109},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cee, match64: 0x00000000, model64: 0xc1090000c116},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cef, match64: 0x00000000, model64: 0xc1160000c123},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf0, match64: 0x00000000, model64: 0xc1230000c130},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1300000c137, model64: 0xc1230000c130},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf1, match64: 0x00000000, model64: 0xc1370000c144},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf2, match64: 0x00000000, model64: 0xc1440000c155},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf3, match64: 0x00000000, model64: 0xc1550000c15d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf4, match64: 0x00000000, model64: 0xc15d0000c170},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf5, match64: 0x00000000, model64: 0xc1700000c178},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf6, match64: 0x00000000, model64: 0xc1780000c181},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf7, match64: 0x00000000, model64: 0xc1810000c18d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf8, match64: 0x00000000, model64: 0xc18d0000c19a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf9, match64: 0x00000000, model64: 0xc19a0000c1a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfa, match64: 0x00000000, model64: 0xc1a20000c1aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfb, match64: 0x00000000, model64: 0xc1aa0000c1b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1b30000c1ba, model64: 0xc1ba0000c1c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfc, match64: 0x00000000, model64: 0xc1c60000c1cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1cf0000c1d6, model64: 0xc1d60000c1e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfd, match64: 0x00000000, model64: 0xc1e40000c1ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfe, match64: 0x00000000, model64: 0xc1ed0000c1fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1fa0000c201, model64: 0xc2010000c20c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cff, match64: 0x00000000, model64: 0xc20c0000c214},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d00, match64: 0x00000000, model64: 0xc2140000c21d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc21d0000c224, model64: 0xc2240000c22d},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0d01, match64: 0x00000000, model64: 0xc22d0000c23a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc23a0000c242, model64: 0xc2420000c24f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc24f0000c257, model64: 0xc2570000c260},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2600000c268, model64: 0xc2680000c272},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2720000c27a, model64: 0xc27a0000c28b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc28b0000c293, model64: 0xc2930000c29d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc29d0000c2a5, model64: 0xc2a50000c2b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2b10000c2b9, model64: 0xc2b90000c2c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2c20000c2c9, model64: 0xc2c90000c2d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d02, match64: 0x00000000, model64: 0xc2d20000c2e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d03, match64: 0x00000000, model64: 0xc2e00000c2eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d04, match64: 0x00000000, model64: 0xc2eb0000c2f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d05, match64: 0x00000000, model64: 0xc2f30000c2fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2fb0000c303, model64: 0xc3030000c30d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc30d0000c315, model64: 0xc3150000c323},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3230000c32b, model64: 0xc32b0000c334},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3340000c33c, model64: 0xc33c0000c34c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d06, match64: 0x00000000, model64: 0xc34c0000c359},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d07, match64: 0x00000000, model64: 0xc3590000c367},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d08, match64: 0x00000000, model64: 0xc3670000c36f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d09, match64: 0x00000000, model64: 0xc36f0000c377},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0a, match64: 0x00000000, model64: 0xc3770000c37f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0b, match64: 0x00000000, model64: 0xc37f0000c38b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0c, match64: 0x00000000, model64: 0xc38b0000c394},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3940000c39c, model64: 0xc39c0000c3a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0d, match64: 0x00000000, model64: 0xc3a50000c3ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0e, match64: 0x00000000, model64: 0xc3ae0000c3b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3b70000c3be, model64: 0xc3be0000c3ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0f, match64: 0x00000000, model64: 0xc3ca0000c3d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d10, match64: 0x00000000, model64: 0xc3d40000c3db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d11, match64: 0x00000000, model64: 0xc3db0000c3e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3e40000c3ec, model64: 0xc3ec0000c3f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d12, match64: 0x00000000, model64: 0xc3f20000c3f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3f90000c401, model64: 0xc4010000c408},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d13, match64: 0x00000000, model64: 0xc4080000c40f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc40f0000c417, model64: 0xc4170000c421},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d14, match64: 0x00000000, model64: 0xc4210000c428},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d15, match64: 0x00000000, model64: 0xc4280000c434},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d16, match64: 0x00000000, model64: 0xc4340000c43f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d17, match64: 0x00000000, model64: 0xc43f0000c446},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d18, match64: 0x00000000, model64: 0xc4460000c452},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d19, match64: 0x00000000, model64: 0xc4520000c45d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1a, match64: 0x00000000, model64: 0xc45d0000c467},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1b, match64: 0x00000000, model64: 0xc4670000c470},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1c, match64: 0x00000000, model64: 0xc4700000c477},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1d, match64: 0x00000000, model64: 0xc4770000c481},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1e, match64: 0x00000000, model64: 0xc4810000c49a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1f, match64: 0x00000000, model64: 0xc49a0000c4a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d20, match64: 0x00000000, model64: 0xc4a60000c4b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d21, match64: 0x00000000, model64: 0xc4b10000c4bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d22, match64: 0x00000000, model64: 0xc4bf0000c4ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d23, match64: 0x00000000, model64: 0xc4ce0000c4d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4d90000c4e1, model64: 0xc4e10000c4f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d24, match64: 0x00000000, model64: 0xc4f10000c4fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d25, match64: 0x00000000, model64: 0xc4fd0000c507},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d26, match64: 0x00000000, model64: 0xc5070000c50e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d27, match64: 0x00000000, model64: 0xc50e0000c516},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d28, match64: 0x00000000, model64: 0xc5160000c521},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d29, match64: 0x00000000, model64: 0xc5210000c528},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc5280000c530, model64: 0xc5300000c538},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2a, match64: 0x00000000, model64: 0xc5380000c543},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc5430000c54b, model64: 0xc54b0000c557},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc5570000c55f, model64: 0xc55f0000c566},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2b, match64: 0x00000000, model64: 0xc5660000c56c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2c, match64: 0x00000000, model64: 0xc56c0000c572},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2d, match64: 0x00000000, model64: 0xc5720000c57d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2e, match64: 0x00000000, model64: 0xc57d0000c587},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2f, match64: 0x00000000, model64: 0xc5870000c58e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d30, match64: 0x00000000, model64: 0xc58e0000c5a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d31, match64: 0x00000000, model64: 0xc5a40000c5aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d32, match64: 0x00000000, model64: 0xc5aa0000c5b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d33, match64: 0x00000000, model64: 0x59ff00005a03},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d34, match64: 0x00000000, model64: 0xc5b10000c5ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d35, match64: 0x00000000, model64: 0xc5ba0000c5c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d36, match64: 0x00000000, model64: 0xc5c30000c5cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d37, match64: 0x00000000, model64: 0xc5cf0000c5d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d38, match64: 0x00000000, model64: 0xc5d50000c5e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d39, match64: 0x00000000, model64: 0xc5e00000c5eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3a, match64: 0x00000000, model64: 0xc5eb0000c5ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3b, match64: 0x00000000, model64: 0xc5ff0000c606},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3c, match64: 0x00000000, model64: 0xc6060000c60d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3d, match64: 0x00000000, model64: 0xc60d0000c613},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3e, match64: 0x00000000, model64: 0xc6130000c61a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3f, match64: 0x00000000, model64: 0xc61a0000c621},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d40, match64: 0x00000000, model64: 0xc6210000c627},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d41, match64: 0x00000000, model64: 0xc6270000c62e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d42, match64: 0x00000000, model64: 0xc62e0000c634},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d43, match64: 0x00000000, model64: 0xc6340000c63e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d44, match64: 0x00000000, model64: 0xc63e0000c645},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6450000c64c, model64: 0xc64c0000c653},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6530000c65e, model64: 0xc65e0000c669},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d45, match64: 0x00000000, model64: 0xc6690000c674},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d46, match64: 0x00000000, model64: 0xc6740000c67d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d47, match64: 0x00000000, model64: 0xc67d0000c686},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d48, match64: 0x00000000, model64: 0xc6860000c68c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d49, match64: 0x00000000, model64: 0xc68c0000c695},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4a, match64: 0x00000000, model64: 0xc6950000c6a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4b, match64: 0x00000000, model64: 0xc6a20000c6ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6ae0000c6b5, model64: 0xc6b50000c6bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6bd0000c6c6, model64: 0xc6c60000c6d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4c, match64: 0x00000000, model64: 0xc6d30000c6de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4d, match64: 0x00000000, model64: 0xc6de0000c6e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4e, match64: 0x00000000, model64: 0xc6e50000c6fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6fd0000c705, model64: 0xc7050000c70f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc70f0000c718, model64: 0xc7180000c725},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7250000c72c, model64: 0xc72c0000c734},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7340000c73c, model64: 0xc73c0000c747},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7470000c74f, model64: 0xc74f0000c756},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4f, match64: 0x00000000, model64: 0xc7560000c75d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d50, match64: 0x00000000, model64: 0xc75d0000c764},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d51, match64: 0x00000000, model64: 0xc7640000c76d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc76d0000c775, model64: 0xc7750000c781},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d52, match64: 0x00000000, model64: 0xc7810000c78d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc78d0000c795, model64: 0xc7950000c7a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d53, match64: 0x00000000, model64: 0xc7a70000c7b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d54, match64: 0x00000000, model64: 0xc7b40000c7c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d55, match64: 0x00000000, model64: 0xc7c10000c7c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d56, match64: 0x00000000, model64: 0xc7c70000c7cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d57, match64: 0x00000000, model64: 0xc7cd0000c7d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d58, match64: 0x00000000, model64: 0xc7d70000c7e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d59, match64: 0x00000000, model64: 0xc7e00000c7eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5a, match64: 0x00000000, model64: 0xc7eb0000c7f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5b, match64: 0x00000000, model64: 0xc7f50000c7ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7ff0000c807, model64: 0xc8070000c80f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc80f0000c817, model64: 0xc6b50000c6bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5c, match64: 0x00000000, model64: 0xc8170000c821},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5d, match64: 0x00000000, model64: 0xc8210000c82b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5e, match64: 0x00000000, model64: 0xc82b0000c836},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5f, match64: 0x00000000, model64: 0xc8360000c83e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d60, match64: 0x00000000, model64: 0xc83e0000c846},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d61, match64: 0x00000000, model64: 0xc8460000c84e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d62, match64: 0x00000000, model64: 0xc84e0000c856},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d63, match64: 0x00000000, model64: 0xc8560000c85e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d64, match64: 0x00000000, model64: 0xc85e0000c865},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d65, match64: 0x00000000, model64: 0xc8650000c873},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d66, match64: 0x00000000, model64: 0xc8730000c881},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d67, match64: 0x00000000, model64: 0xc8810000c88f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d68, match64: 0x00000000, model64: 0xc88f0000c898},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d69, match64: 0x00000000, model64: 0xc8980000c8a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6a, match64: 0x00000000, model64: 0xc8a10000c8a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6b, match64: 0x00000000, model64: 0xc8a40000c8ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6c, match64: 0x00000000, model64: 0xc8ac0000c8b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6d, match64: 0x00000000, model64: 0xc8b40000c8be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6e, match64: 0x00000000, model64: 0xc8be0000c8c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6f, match64: 0x00000000, model64: 0xc8c10000c8c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d70, match64: 0x00000000, model64: 0xc8c90000c8d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d71, match64: 0x00000000, model64: 0xc8d00000c8d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d72, match64: 0x00000000, model64: 0xc8d30000c8db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d73, match64: 0x00000000, model64: 0xb33d0000b344},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d74, match64: 0x00000000, model64: 0x8cb900008cbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d75, match64: 0x00000000, model64: 0xc8db0000c8e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d76, match64: 0x00000000, model64: 0xc8e30000c8ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d77, match64: 0x00000000, model64: 0xc8ed0000c8fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d78, match64: 0x00000000, model64: 0xc8fb0000c902},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d79, match64: 0x00000000, model64: 0xc9020000c90e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d7a, match64: 0x00000000, model64: 0xc90e0000c910},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d7b, match64: 0x00000000, model64: 0xa0e30000a0e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d7c, match64: 0x00000000, model64: 0xc9100000c91a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d7d, match64: 0x00000000, model64: 0xc91a0000c928},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d7e, match64: 0x00000000, model64: 0xc9280000c936},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d7f, match64: 0x00000000, model64: 0xc9360000c938},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d80, match64: 0x00000000, model64: 0xc9380000c93f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d81, match64: 0x00000000, model64: 0xc93f0000c94e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d82, match64: 0x00000000, model64: 0xc94e0000c95a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d83, match64: 0x00000000, model64: 0xc95a0000c967},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d84, match64: 0x00000000, model64: 0xc9670000c96e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d85, match64: 0x00000000, model64: 0xc96e0000c975},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d86, match64: 0x00000000, model64: 0xc9750000c97c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d87, match64: 0x00000000, model64: 0xc97c0000c981},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d88, match64: 0x00000000, model64: 0x3b9900003b9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d89, match64: 0x00000000, model64: 0xc9810000c986},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8a, match64: 0x00000000, model64: 0xc9860000c98f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8b, match64: 0x00000000, model64: 0xc98f0000c998},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8c, match64: 0x00000000, model64: 0xc9980000c99c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8d, match64: 0x00000000, model64: 0xc99c0000c9a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8e, match64: 0x00000000, model64: 0xc9a50000c9ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8f, match64: 0x00000000, model64: 0xc9ae0000c9b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d90, match64: 0x00000000, model64: 0xc9b70000c9be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d91, match64: 0x00000000, model64: 0xc9be0000c9c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d92, match64: 0x00000000, model64: 0xc9c10000c9cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d93, match64: 0x00000000, model64: 0xc9cf0000c9dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d94, match64: 0x00000000, model64: 0xc9dd0000c9ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d95, match64: 0x00000000, model64: 0xc9ec0000c9f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d96, match64: 0x00000000, model64: 0xc9f90000c9fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d97, match64: 0x00000000, model64: 0xc9fd0000c9ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d98, match64: 0x00000000, model64: 0xc9ff0000ca08},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d99, match64: 0x00000000, model64: 0xca080000ca11},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9a, match64: 0x00000000, model64: 0xca110000ca1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9b, match64: 0x00000000, model64: 0xca1a0000ca23},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9c, match64: 0x00000000, model64: 0xca230000ca32},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9d, match64: 0x00000000, model64: 0xca320000ca38},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9e, match64: 0x00000000, model64: 0xca380000ca45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9f, match64: 0x00000000, model64: 0xca450000ca49},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da0, match64: 0x00000000, model64: 0xca490000ca4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da1, match64: 0x00000000, model64: 0xca4d0000ca5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da2, match64: 0x00000000, model64: 0xca5a0000ca5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da3, match64: 0x00000000, model64: 0xca5e0000ca67},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da4, match64: 0x00000000, model64: 0xca670000ca70},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da5, match64: 0x00000000, model64: 0xca700000ca79},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da6, match64: 0x00000000, model64: 0xca790000ca81},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da7, match64: 0x00000000, model64: 0xca810000ca90},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da8, match64: 0x00000000, model64: 0xca900000ca9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da9, match64: 0x00000000, model64: 0xca9d0000caa4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0daa, match64: 0x00000000, model64: 0xca900000ca9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dab, match64: 0x00000000, model64: 0xcaa40000caa7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dac, match64: 0x00000000, model64: 0xcaa70000caaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dad, match64: 0x00000000, model64: 0xcaaa0000caad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dae, match64: 0x00000000, model64: 0xcaad0000cab6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0daf, match64: 0x00000000, model64: 0xcab60000cabf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db0, match64: 0x00000000, model64: 0xcabf0000cace},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db1, match64: 0x00000000, model64: 0xcace0000cad1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db2, match64: 0x00000000, model64: 0xcad10000cad9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db3, match64: 0x00000000, model64: 0xcad90000cadc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db4, match64: 0x00000000, model64: 0xcadc0000cae7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db5, match64: 0x00000000, model64: 0xcae70000caee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db6, match64: 0x00000000, model64: 0xcaee0000caf7},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0db7, match64: 0x00000000, model64: 0xcaf70000caff},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xcaff0000cb06, model64: 0xcb060000cb1c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0db8, match64: 0x00000000, model64: 0xcb1c0000cb2c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0db9, match64: 0x00000000, model64: 0xcb2c0000cb41},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dba, match64: 0x00000000, model64: 0xcb410000cb55},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dbb, match64: 0x00000000, model64: 0xcb550000cb6e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dbc, match64: 0x00000000, model64: 0xcb6e0000cb7b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dbd, match64: 0x00000000, model64: 0xcb7b0000cb8d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dbe, match64: 0x00000000, model64: 0xcb8d0000cb9d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dbf, match64: 0x00000000, model64: 0xcb9d0000cbac},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dc0, match64: 0x00000000, model64: 0xcbac0000cbc2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dc1, match64: 0x00000000, model64: 0xcbc20000cbd0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dc2, match64: 0x00000000, model64: 0xcbd00000cbe3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dc3, match64: 0x00000000, model64: 0xcbe30000cbf5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dc4, match64: 0x00000000, model64: 0xcbf50000cc02},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dc5, match64: 0x00000000, model64: 0xcc020000cc0e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dc6, match64: 0x00000000, model64: 0xcc0e0000cc1f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dc7, match64: 0x00000000, model64: 0xcc1f0000cc2f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dc8, match64: 0x00000000, model64: 0xcc2f0000cc45},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xcc450000cc4d, model64: 0xcc4d0000cc5e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xcc5e0000cc66, model64: 0xcc660000cc77},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xcc770000cc7e, model64: 0xcc7e0000cc90},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xcc900000cc97, model64: 0xcc970000ccab},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dc9, match64: 0x00000000, model64: 0xccab0000ccc0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dca, match64: 0x00000000, model64: 0xccc00000ccd8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dcb, match64: 0x00000000, model64: 0xccd80000ccec},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dcc, match64: 0x00000000, model64: 0xccec0000ccf7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xccf70000ccfe, model64: 0xccfe0000cd19},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xcd190000cd21, model64: 0xcd210000cd38},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xcd380000cd41, model64: 0xcd410000cd56},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xcd560000cd5d, model64: 0xcd5d0000cd76},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xcd760000cd7e, model64: 0xcd7e0000cd95},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dcd, match64: 0x00000000, model64: 0xcd950000cdaa},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dce, match64: 0x00000000, model64: 0xcdaa0000cdc1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xcdc10000cdcb, model64: 0xcdcb0000cddf},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xcddf0000cde8, model64: 0xcde80000cdf9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xcdf90000ce04, model64: 0xce040000ce17},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xce170000ce20, model64: 0xce200000ce2c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xce2c0000ce35, model64: 0xce350000ce4b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xce4b0000ce55, model64: 0xce550000ce66},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xce660000ce6d, model64: 0xce6d0000ce84},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xce840000ce8b, model64: 0xce8b0000cea1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dcf, match64: 0x00000000, model64: 0xcea10000ceb2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dd0, match64: 0x00000000, model64: 0xceb20000cec8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dd1, match64: 0x00000000, model64: 0xcec80000cede},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dd2, match64: 0x00000000, model64: 0xcede0000cef4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dd3, match64: 0x00000000, model64: 0xcef40000cf08},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dd4, match64: 0x00000000, model64: 0xcf080000cf14},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dd5, match64: 0x00000000, model64: 0xcf140000cf20},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dd6, match64: 0x00000000, model64: 0xcf200000cf27},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dd7, match64: 0x00000000, model64: 0xcf270000cf35},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dd8, match64: 0x00000000, model64: 0xcf350000cf48},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dd9, match64: 0x00000000, model64: 0xcf480000cf51},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dda, match64: 0x00000000, model64: 0xcf510000cf5e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ddb, match64: 0x00000000, model64: 0xcf5e0000cf6e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ddc, match64: 0x00000000, model64: 0xcf6e0000cf7f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ddd, match64: 0x00000000, model64: 0xcf7f0000cf94},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dde, match64: 0x00000000, model64: 0xcf940000cfa5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ddf, match64: 0x00000000, model64: 0xcfa50000cfbb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0de0, match64: 0x00000000, model64: 0xcfbb0000cfd8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0de1, match64: 0x00000000, model64: 0xcfd80000cfec},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0de2, match64: 0x00000000, model64: 0xcfec0000d002},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0de3, match64: 0x00000000, model64: 0xd0020000d013},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0de4, match64: 0x00000000, model64: 0xd0130000d029},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0de5, match64: 0x00000000, model64: 0xd0290000d039},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0de6, match64: 0x00000000, model64: 0xd0390000d04d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0de7, match64: 0x00000000, model64: 0xd04d0000d05e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0de8, match64: 0x00000000, model64: 0xd05e0000d069},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0de9, match64: 0x00000000, model64: 0xd0690000d079},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dea, match64: 0x00000000, model64: 0xd0790000d088},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0deb, match64: 0x00000000, model64: 0xd0880000d097},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dec, match64: 0x00000000, model64: 0xd0970000d0ad},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ded, match64: 0x00000000, model64: 0xd0ad0000d0ba},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dee, match64: 0x00000000, model64: 0xd0ba0000d0ca},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0def, match64: 0x00000000, model64: 0xd0ca0000d0dd},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd0dd0000d0e5, model64: 0xd0e50000d0f0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0df0, match64: 0x00000000, model64: 0xd0f00000d0fb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd0fb0000d105, model64: 0xd1050000d11b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd11b0000d126, model64: 0xd1260000d137},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0df1, match64: 0x00000000, model64: 0xd1370000d145},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0df2, match64: 0x00000000, model64: 0xd1450000d154},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0df3, match64: 0x00000000, model64: 0xd1540000d161},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0df4, match64: 0x00000000, model64: 0xd1610000d16f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0df5, match64: 0x00000000, model64: 0xd16f0000d17c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0df6, match64: 0x00000000, model64: 0xd17c0000d189},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0df7, match64: 0x00000000, model64: 0xd1890000d198},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0df8, match64: 0x00000000, model64: 0xd1980000d1ab},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0df9, match64: 0x00000000, model64: 0xd1ab0000d1be},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dfa, match64: 0x00000000, model64: 0xd1be0000d1d3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dfb, match64: 0x00000000, model64: 0xd1d30000d1e1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dfc, match64: 0x00000000, model64: 0xd1e10000d1ee},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dfd, match64: 0x00000000, model64: 0xd1ee0000d1fb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd1fb0000d204, model64: 0xd2040000d21a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dfe, match64: 0x00000000, model64: 0xd21a0000d232},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd2320000d23b, model64: 0xd23b0000d252},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd2520000d25a, model64: 0xd25a0000d270},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd2700000d278, model64: 0xd2780000d28d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0dff, match64: 0x00000000, model64: 0xd28d0000d29e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e00, match64: 0x00000000, model64: 0xd29e0000d2b7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e01, match64: 0x00000000, model64: 0xd2b70000d2c7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e02, match64: 0x00000000, model64: 0xd2c70000d2dd},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd2dd0000d2e6, model64: 0xd2e60000d2f4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd2f40000d2fc, model64: 0xd2fc0000d305},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd3050000d30c, model64: 0xd30c0000d31a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd31a0000d322, model64: 0xcf510000cf5e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd3220000d32b, model64: 0xd32b0000d333},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd3330000d33a, model64: 0xd33a0000d34f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd34f0000d357, model64: 0xd3570000d367},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e03, match64: 0x00000000, model64: 0xd3670000d374},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e04, match64: 0x00000000, model64: 0xd3740000d37b},
		modelTuple{type64: 0x285a00002862, matchRI: 0x0e05, match64: 0x00000000, model64: 0xd37b0000d388},
		modelTuple{type64: 0x285a00002862, matchRI: 0x0e06, match64: 0x00000000, model64: 0xd3880000d39b},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0xd39b0000d3a3, model64: 0xd3a30000d3b4},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0xd3b40000d3bc, model64: 0xd3bc0000d3c3},
		modelTuple{type64: 0x5da000005e7, matchRI: 0x0e07, match64: 0x00000000, model64: 0xd3c30000d3d5},
		modelTuple{type64: 0x24300000245, matchRI: 0x0e08, match64: 0x00000000, model64: 0xd3d50000d3de},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xd3de0000d3e6, model64: 0xd3e60000d3f2},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xd3f20000d3fa, model64: 0xd3fa0000d406},
		modelTuple{type64: 0x24300000245, matchRI: 0x0e09, match64: 0x00000000, model64: 0xd4060000d418},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xd4180000d421, model64: 0xd4210000d437},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xd4370000d440, model64: 0xd4400000d456},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xd4560000d45e, model64: 0xd45e0000d470},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xd4700000d479, model64: 0xd4790000d48f},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xd48f0000d497, model64: 0xd4970000d4a9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e0a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0b, match64: 0x00000000, model64: 0xd4a90000d4b0},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0e0c, match64: 0x00000000, model64: 0xd4b00000d4be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e11, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4c60000d4cf, model64: 0xd4cf0000d4da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e13, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e14, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x8e00000099, matchRI: 0x0e15, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e17, match64: 0x00000000, model64: 0xd4e80000d4ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e18, match64: 0x00000000, model64: 0x820f00008213},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e19, match64: 0x00000000, model64: 0xd4ee0000d4f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1a, match64: 0x00000000, model64: 0xd4f40000d4f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4f80000d4fd, model64: 0xd4f80000d4fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4fd0000d502, model64: 0xd4fd0000d502},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5020000d507, model64: 0xd5070000d50c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd50c0000d510, model64: 0xd5100000d514},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5140000d518, model64: 0xd5140000d518},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5180000d51c, model64: 0xd5180000d51c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81860000818a, model64: 0x81860000818a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd51c0000d522, model64: 0xd51c0000d522},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5220000d52c, model64: 0xd52c0000d536},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5360000d540, model64: 0xd5360000d540},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5400000d549, model64: 0xd5400000d549},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5490000d557, model64: 0xd5570000d567},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5670000d571, model64: 0xd5710000d57c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd57c0000d582, model64: 0xd57c0000d582},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5820000d587, model64: 0xd5820000d587},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82680000826f, model64: 0x82680000826f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd58d0000d594, model64: 0xd5940000d59b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e1c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xd5a10000d5a9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xd5bd0000d5c4},
		modelTuple{type64: 0x6c9000006d3, matchRI: 0x0e1f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e21, match64: 0x00000000, model64: 0xd5d10000d5e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e22, match64: 0x00000000, model64: 0xd5e20000d5ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5ea0000d5f2, model64: 0xd5ea0000d5f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5f20000d5fb, model64: 0xd5fb0000d604},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6040000d60d, model64: 0xd60d0000d616},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6160000d622, model64: 0xd6160000d622},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e23, match64: 0x00000000, model64: 0xd6220000d62a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd62a0000d631, model64: 0xd6310000d63d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e24, match64: 0x00000000, model64: 0xd63d0000d648},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6480000d64f, model64: 0xd64f0000d65b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd65b0000d662, model64: 0xd6620000d66e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd66e0000d675, model64: 0xd6750000d681},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6810000d687, model64: 0xd6810000d687},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6870000d691, model64: 0xd6870000d691},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6910000d69d, model64: 0xd69d0000d6a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6a90000d6af, model64: 0xd6af0000d6b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6b60000d6c0, model64: 0xd6c00000d6ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e25, match64: 0x00000000, model64: 0x475b0000475e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e26, match64: 0x00000000, model64: 0xd6ca0000d6cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e27, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0e28, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0e29, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e2a, match64: 0x00000000, model64: 0xd6cd0000d6d6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd6d60000d6df, model64: 0xd6df0000d6e8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd6e80000d6f1, model64: 0xd6f10000d6fb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd6fb0000d704, model64: 0xd7040000d70d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd70d0000d712, model64: 0xd7120000d71d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd71d0000d727, model64: 0xd7270000d731},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd7310000d73a, model64: 0xd73a0000d743},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd7430000d74c, model64: 0xd7270000d731},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd74c0000d755, model64: 0xd7550000d75e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd75e0000d767, model64: 0xd7670000d770},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd7700000d779, model64: 0xd7790000d783},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd7830000d78c, model64: 0xd78c0000d795},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd7950000d79a, model64: 0xd79a0000d7a5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd7a50000d7aa, model64: 0xd7aa0000d7ba},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd7ba0000d7bf, model64: 0xd7bf0000d7ce},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd7ce0000d7d7, model64: 0xd7d70000d7e6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e2b, match64: 0x00000000, model64: 0xd7e60000d7f0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e2c, match64: 0x00000000, model64: 0xd7f00000d7ff},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e2d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e2e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd8030000d80b, model64: 0xd8030000d80b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd80b0000d80f, model64: 0xd80f0000d819},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xd81e0000d832},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd8380000d840, model64: 0x7c2a00007c2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e32, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd84a0000d850, model64: 0xd8500000d857},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e34, match64: 0x00000000, model64: 0xd8570000d85e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd85e0000d868, model64: 0xd8680000d875},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd8750000d87e, model64: 0xd87e0000d888},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e35, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e37, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e38, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e39, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e3a, match64: 0x00000000, model64: 0xd8920000d897},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e3c, match64: 0x00000000, model64: 0xd8a10000d8a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e3d, match64: 0x00000000, model64: 0xd8a90000d8b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e3e, match64: 0x00000000, model64: 0xd8b00000d8b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e3f, match64: 0x00000000, model64: 0xd8b20000d8b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e40, match64: 0x00000000, model64: 0xd8b40000d8bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e41, match64: 0x00000000, model64: 0xd8bb0000d8c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e42, match64: 0x00000000, model64: 0xd8c40000d8cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e43, match64: 0x00000000, model64: 0xd8cc0000d8d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e44, match64: 0x00000000, model64: 0xd8d70000d8e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e45, match64: 0x00000000, model64: 0xd8e40000d8ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e46, match64: 0x00000000, model64: 0xd8ed0000d8f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e47, match64: 0x00000000, model64: 0xd8f90000d903},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e48, match64: 0x00000000, model64: 0xd9030000d90c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e49, match64: 0x00000000, model64: 0xd90c0000d915},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4a, match64: 0x00000000, model64: 0xd9150000d91f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4b, match64: 0x00000000, model64: 0xd91f0000d92b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4c, match64: 0x00000000, model64: 0xd92b0000d92c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4d, match64: 0x00000000, model64: 0xd92c0000d92f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e4e, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e4f, match64: 0x00000000, model64: 0xd92f0000d935},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e52, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x0e53, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd9420000d94a, model64: 0xd9420000d94a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd94a0000d952, model64: 0xd9520000d95a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd95a0000d962, model64: 0xd9620000d96d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e55, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xd9720000d979},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e58, match64: 0x00000000, model64: 0x9ae000009b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e59, match64: 0x00000000, model64: 0xd97c0000d983},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e5a, match64: 0x00000000, model64: 0xd9830000d989},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e5c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd98c0000d993, model64: 0xd9930000d99d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd99f0000d9ab, model64: 0xd9ab0000d9b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e5e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e60, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0xd9bf0000d9c7, model64: 0xd9c70000d9de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd9de0000d9e6, model64: 0xd9e60000d9f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd9f30000d9fb, model64: 0xd9fb0000da09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda090000da11, model64: 0xda110000da24},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e62, match64: 0x00000000, model64: 0xda240000da32},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda320000da3a, model64: 0xda3a0000da4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda4d0000da5b, model64: 0xda5b0000da6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda6b0000da73, model64: 0xda730000da88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda880000da90, model64: 0xda900000daa0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdaa00000daa8, model64: 0xdaa80000dabb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdabb0000dac3, model64: 0xdac30000dad4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdad40000dadc, model64: 0xdadc0000daed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdaed0000daf5, model64: 0xdaf50000db03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb030000db0b, model64: 0xdb0b0000db19},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb190000db21, model64: 0xdb210000db35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb350000db44, model64: 0xdb440000db53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb530000db5b, model64: 0xdb5b0000db6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb6f0000db77, model64: 0xdb770000db88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb880000db94, model64: 0xdb940000dba7},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0xdba70000dbaf, model64: 0xdbaf0000dbbb},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xdbbb0000dbc9, model64: 0xdbc90000dbd7},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xdbd70000dbeb, model64: 0xdbeb0000dbff},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xdbff0000dc0e, model64: 0xdc0e0000dc1d},
		modelTuple{type64: 0x24300000245, matchRI: 0x0e63, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e64, match64: 0x00000000, model64: 0xdc250000dc2a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xdc2f0000dc35},
		modelTuple{type64: 0x24700000251, matchRI: 0x0e66, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x0e67, match64: 0x00000000, model64: 0xdc3f0000dc49},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e68, match64: 0x00000000, model64: 0xdc490000dc51},
		modelTuple{type64: 0x24700000251, matchRI: 0x0e69, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdc580000dc5e, model64: 0xdc5e0000dc65},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdc650000dc6b, model64: 0x171c0000171e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdc6b0000dc71, model64: 0xdc710000dc7d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdc7d0000dc83, model64: 0xdc830000dc85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdc850000dc8b, model64: 0xdc8b0000dc8e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdc8e0000dc94, model64: 0xdc940000dc97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdc970000dc9d, model64: 0xdc9d0000dca5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdca50000dcab, model64: 0xdcab0000dcb7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e6d, match64: 0x00000000, model64: 0xdcb70000dcc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6e, match64: 0x00000000, model64: 0xdcc40000dcc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdccd0000dcdb, model64: 0xdcdb0000dce9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdce90000dcf2, model64: 0xdcf20000dcfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e70, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e72, match64: 0x00000000, model64: 0xdcff0000dd02},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e73, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e75, match64: 0x00000000, model64: 0xdd060000dd0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e76, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd0d0000dd15, model64: 0xdd150000dd1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd1d0000dd23, model64: 0xdd230000dd29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd290000dd2e, model64: 0xdd2e0000dd33},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e77, match64: 0x00000000, model64: 0xdd330000dd3a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e78, match64: 0x00000000, model64: 0xdd3a0000dd42},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e7a, match64: 0x00000000, model64: 0xdd4b0000dd4d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e7b, match64: 0x00000000, model64: 0xdd4d0000dd58},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xdd580000dd5f, model64: 0xdd5f0000dd6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e7c, match64: 0x00000000, model64: 0xdd740000dd7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e7d, match64: 0x00000000, model64: 0xdd7d0000dd86},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e7e, match64: 0x00000000, model64: 0xdd860000dd8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e7f, match64: 0x00000000, model64: 0xdd8a0000dd96},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e80, match64: 0x00000000, model64: 0x3c1000003c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e81, match64: 0x00000000, model64: 0xdd960000dda0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e82, match64: 0x00000000, model64: 0xdda00000ddad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e83, match64: 0x00000000, model64: 0xddad0000ddb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e84, match64: 0x00000000, model64: 0xddb90000ddc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e85, match64: 0x00000000, model64: 0xddc30000ddcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e86, match64: 0x00000000, model64: 0xddcd0000ddd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e87, match64: 0x00000000, model64: 0xddd60000ddda},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e88, match64: 0x00000000, model64: 0xddda0000dde3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e89, match64: 0x00000000, model64: 0xdde30000ddec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8a, match64: 0x00000000, model64: 0xddec0000ddf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8b, match64: 0x00000000, model64: 0xddf70000de02},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8c, match64: 0x00000000, model64: 0xde020000de0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8d, match64: 0x00000000, model64: 0xde0c0000de14},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8e, match64: 0x00000000, model64: 0xde140000de18},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8f, match64: 0x00000000, model64: 0xde180000de1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e90, match64: 0x00000000, model64: 0xde1f0000de29},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e91, match64: 0x00000000, model64: 0xde290000de2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e92, match64: 0x00000000, model64: 0xde2f0000de36},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e93, match64: 0x00000000, model64: 0xde360000de3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e94, match64: 0x00000000, model64: 0xde3c0000de47},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e95, match64: 0x00000000, model64: 0xde470000de4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e96, match64: 0x00000000, model64: 0xde4d0000de53},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e97, match64: 0x00000000, model64: 0xde530000de5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e98, match64: 0x00000000, model64: 0xde5d0000de63},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e99, match64: 0x00000000, model64: 0xde630000de6d},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0e9a, match64: 0x00000000, model64: 0xde6d0000de74},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0e9b, match64: 0x00000000, model64: 0xde740000de7a},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0e9c, match64: 0x00000000, model64: 0xde7a0000de81},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0e9d, match64: 0x00000000, model64: 0xde810000de87},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0e9e, match64: 0x00000000, model64: 0xde7a0000de81},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0e9f, match64: 0x00000000, model64: 0xde870000de91},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0ea0, match64: 0x00000000, model64: 0xde910000de9b},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0ea1, match64: 0x00000000, model64: 0xde9b0000dea5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea2, match64: 0x00000000, model64: 0xdea50000dea8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea3, match64: 0x00000000, model64: 0xdea80000dead},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea4, match64: 0x00000000, model64: 0xdead0000deb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea5, match64: 0x00000000, model64: 0xdeb20000deb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea6, match64: 0x00000000, model64: 0xdeb90000debf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea7, match64: 0x00000000, model64: 0xdebf0000deca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea8, match64: 0x00000000, model64: 0xdeca0000ded3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea9, match64: 0x00000000, model64: 0xded30000deda},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eaa, match64: 0x00000000, model64: 0xdeda0000dee0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eab, match64: 0x00000000, model64: 0xdee00000deea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eac, match64: 0x00000000, model64: 0xdeea0000def1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ead, match64: 0x00000000, model64: 0xdef10000def6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eae, match64: 0x00000000, model64: 0xdef60000defc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eaf, match64: 0x00000000, model64: 0xdefc0000df01},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb0, match64: 0x00000000, model64: 0xdf010000df0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb1, match64: 0x00000000, model64: 0xdf0a0000df0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb2, match64: 0x00000000, model64: 0xdf0f0000df19},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb3, match64: 0x00000000, model64: 0xb4210000b426},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb4, match64: 0x00000000, model64: 0xdf190000df1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb5, match64: 0x00000000, model64: 0xdf1f0000df28},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb6, match64: 0x00000000, model64: 0xdf280000df2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb7, match64: 0x00000000, model64: 0xdf2d0000df36},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb8, match64: 0x00000000, model64: 0xdf360000df3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb9, match64: 0x00000000, model64: 0xdf3b0000df44},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eba, match64: 0x00000000, model64: 0xdf440000df49},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebb, match64: 0x00000000, model64: 0xdf490000df53},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebc, match64: 0x00000000, model64: 0xdf530000df5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebd, match64: 0x00000000, model64: 0xdf5f0000df66},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebe, match64: 0x00000000, model64: 0xdf660000df71},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebf, match64: 0x00000000, model64: 0xdf710000df77},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec0, match64: 0x00000000, model64: 0xdf770000df7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec1, match64: 0x00000000, model64: 0xdf7e0000df84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf840000df91, model64: 0xdf910000df9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf9c0000dfa8, model64: 0xdfa80000dfaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec2, match64: 0x00000000, model64: 0xdfaf0000dfb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec3, match64: 0x00000000, model64: 0xdfb60000dfbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec4, match64: 0x00000000, model64: 0xdfbc0000dfc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec5, match64: 0x00000000, model64: 0xdfc30000dfd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec6, match64: 0x00000000, model64: 0xdf7e0000df84},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec7, match64: 0x00000000, model64: 0xdfd00000dfdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec8, match64: 0x00000000, model64: 0xdfdf0000dfea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec9, match64: 0x00000000, model64: 0xdfea0000dff4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eca, match64: 0x00000000, model64: 0xdff40000dffb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ecb, match64: 0x00000000, model64: 0xdffb0000e001},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ecc, match64: 0x00000000, model64: 0xe0010000e00a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ecd, match64: 0x00000000, model64: 0xe00a0000e015},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ece, match64: 0x00000000, model64: 0xe0150000e01c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ecf, match64: 0x00000000, model64: 0xe01c0000e023},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed0, match64: 0x00000000, model64: 0xe0230000e029},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed1, match64: 0x00000000, model64: 0xe0290000e038},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed2, match64: 0x00000000, model64: 0xe0380000e03d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed3, match64: 0x00000000, model64: 0xe03d0000e044},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed4, match64: 0x00000000, model64: 0xe0440000e04e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed5, match64: 0x00000000, model64: 0xe04e0000e055},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed6, match64: 0x00000000, model64: 0xe0550000e061},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed7, match64: 0x00000000, model64: 0xe0610000e06c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed8, match64: 0x00000000, model64: 0xdf5f0000df66},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed9, match64: 0x00000000, model64: 0xe06c0000e073},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eda, match64: 0x00000000, model64: 0xe0730000e07f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0edb, match64: 0x00000000, model64: 0xe07f0000e086},
		modelTuple{type64: 0x2700000027, matchRI: 0x0edc, match64: 0x00000000, model64: 0xe0860000e090},
		modelTuple{type64: 0x2700000027, matchRI: 0x0edd, match64: 0x00000000, model64: 0xe0900000e09c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ede, match64: 0x00000000, model64: 0xe09c0000e0a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0edf, match64: 0x00000000, model64: 0xe0a30000e0ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee0, match64: 0x00000000, model64: 0xe0ad0000e0b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee1, match64: 0x00000000, model64: 0xe0b80000e0bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee2, match64: 0x00000000, model64: 0xe0bf0000e0cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee3, match64: 0x00000000, model64: 0xe0cb0000e0d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee4, match64: 0x00000000, model64: 0xe0d20000e0d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee5, match64: 0x00000000, model64: 0xe0cb0000e0d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee6, match64: 0x00000000, model64: 0xa00e0000a010},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee7, match64: 0x00000000, model64: 0xa0010000a007},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0ee8, match64: 0x00000000, model64: 0xe0d40000e0dc},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0ee9, match64: 0x00000000, model64: 0xe0dc0000e0e2},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0eea, match64: 0x00000000, model64: 0x6c7800006c7e},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0eeb, match64: 0x00000000, model64: 0xe0e20000e0e8},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0eec, match64: 0x00000000, model64: 0xe0e80000e0f2},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0eed, match64: 0x00000000, model64: 0x8cdb00008ce1},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0eee, match64: 0x00000000, model64: 0xe0f20000e0ff},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0eef, match64: 0x00000000, model64: 0x6c7e00006c84},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0ef0, match64: 0x00000000, model64: 0xe0ff0000e105},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0ef1, match64: 0x00000000, model64: 0xe1050000e110},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0ef2, match64: 0x00000000, model64: 0xe1100000e116},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0ef3, match64: 0x00000000, model64: 0xe1160000e11d},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0ef4, match64: 0x00000000, model64: 0xe11d0000e128},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0ef5, match64: 0x00000000, model64: 0xe1280000e12f},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0ef6, match64: 0x00000000, model64: 0xe12f0000e136},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0ef7, match64: 0x00000000, model64: 0xe1360000e145},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0ef8, match64: 0x00000000, model64: 0xe1450000e14d},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0ef9, match64: 0x00000000, model64: 0xe14d0000e158},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0efa, match64: 0x00000000, model64: 0xe1580000e166},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0efb, match64: 0x00000000, model64: 0xe1660000e171},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0efc, match64: 0x00000000, model64: 0xe1710000e17c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0efd, match64: 0x00000000, model64: 0xe1580000e166},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0efe, match64: 0x00000000, model64: 0xe17c0000e183},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0eff, match64: 0x00000000, model64: 0xe1830000e18e},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0f00, match64: 0x00000000, model64: 0xe18e0000e196},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0f01, match64: 0x00000000, model64: 0xe12f0000e136},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0f02, match64: 0x00000000, model64: 0xe1960000e1a4},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0f03, match64: 0x00000000, model64: 0xe1a40000e1ac},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0f04, match64: 0x00000000, model64: 0xe1ac0000e1b7},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0f05, match64: 0x00000000, model64: 0xe1b70000e1c2},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0f06, match64: 0x00000000, model64: 0xe1c20000e1cc},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0f07, match64: 0x00000000, model64: 0xe1cc0000e1d4},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0f08, match64: 0x00000000, model64: 0xe1d40000e1df},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0f09, match64: 0x00000000, model64: 0xe1df0000e1ee},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0f0a, match64: 0x00000000, model64: 0xe1ee0000e1fc},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0f0b, match64: 0x00000000, model64: 0xe1fc0000e206},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x0f0c, match64: 0x00000000, model64: 0xe2060000e20d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0d, match64: 0x00000000, model64: 0xe20d0000e215},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0f0e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f10, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f11, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xe22c0000e234},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe23f0000e249, model64: 0xe2490000e253},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f18, match64: 0x00000000, model64: 0xe2530000e255},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f19, match64: 0x00000000, model64: 0xe2550000e25f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1a, match64: 0x00000000, model64: 0x1c9300001c94},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1b, match64: 0x00000000, model64: 0xe25f0000e268},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1c, match64: 0x00000000, model64: 0xe2680000e277},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1d, match64: 0x00000000, model64: 0xe2770000e27d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1e, match64: 0x00000000, model64: 0xe27d0000e287},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1f, match64: 0x00000000, model64: 0xe2870000e291},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f20, match64: 0x00000000, model64: 0xe2910000e296},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f21, match64: 0x00000000, model64: 0xe2960000e29c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f22, match64: 0x00000000, model64: 0xe29c0000e2a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f23, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2a10000e2af, model64: 0xe2af0000e2be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2be0000e2cb, model64: 0xe2cb0000e2d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2d80000e2e5, model64: 0xe2e50000e2f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2f30000e300, model64: 0xe3000000e30e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe30e0000e317, model64: 0xe3170000e321},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3210000e32b, model64: 0xe32b0000e336},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3360000e340, model64: 0xe3360000e340},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3400000e34b, model64: 0xe3400000e34b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe34b0000e351, model64: 0xe34b0000e351},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3510000e35c, model64: 0xe35c0000e367},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3670000e36d, model64: 0xe36d0000e373},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3730000e37d, model64: 0xe37d0000e387},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xe3960000e39c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0f27, match64: 0x00000000, model64: 0xe3a00000e3ad},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0f28, match64: 0x00000000, model64: 0xe3ad0000e3b5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0f29, match64: 0x00000000, model64: 0xe3b50000e3be},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0f2a, match64: 0x00000000, model64: 0xe3be0000e3d0},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe3d00000e3db, model64: 0xe3db0000e3e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3e20000e3f0, model64: 0xe3f00000e3fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2b, match64: 0x00000000, model64: 0xe3fa0000e406},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2c, match64: 0x00000000, model64: 0x4a7e00004a85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4060000e40f, model64: 0xe40f0000e412},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4120000e41b, model64: 0xe41b0000e424},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2e, match64: 0x00000000, model64: 0x4a6b00004a6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4240000e428, model64: 0xe12f0000e136},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2f, match64: 0x00000000, model64: 0xe4280000e42b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f30, match64: 0x00000000, model64: 0x70ac000070b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f31, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4330000e43e, model64: 0xe43e0000e443},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f33, match64: 0x00000000, model64: 0xe4430000e44d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe44d0000e457, model64: 0xe4570000e45e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe45e0000e469, model64: 0xe4690000e46b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f34, match64: 0x00000000, model64: 0xe46b0000e470},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4700000e47d, model64: 0xe47d0000e48d},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xe48d0000e497, model64: 0xe4970000e4a0},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xe4a00000e4a9, model64: 0xe4a90000e4b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4b70000e4c1, model64: 0xe4c10000e4c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4cc0000e4d4, model64: 0xe4d40000e4e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f36, match64: 0x00000000, model64: 0xe4e00000e4f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f37, match64: 0x00000000, model64: 0xe4f20000e4ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f38, match64: 0x00000000, model64: 0xe4ff0000e50b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f39, match64: 0x00000000, model64: 0xe50b0000e512},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3a, match64: 0x00000000, model64: 0xe5120000e524},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3b, match64: 0x00000000, model64: 0xe5240000e535},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3c, match64: 0x00000000, model64: 0xe5350000e542},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3d, match64: 0x00000000, model64: 0xe5420000e54e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3e, match64: 0x00000000, model64: 0xe54e0000e55b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3f, match64: 0x00000000, model64: 0xe55b0000e566},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f40, match64: 0x00000000, model64: 0xe5660000e572},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f41, match64: 0x00000000, model64: 0xe5720000e57f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f42, match64: 0x00000000, model64: 0xe57f0000e58c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f43, match64: 0x00000000, model64: 0xe58c0000e597},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f44, match64: 0x00000000, model64: 0xe5970000e5a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f45, match64: 0x00000000, model64: 0xe5a40000e5b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f46, match64: 0x00000000, model64: 0xe5b10000e5c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f47, match64: 0x00000000, model64: 0xe5c00000e5cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f48, match64: 0x00000000, model64: 0xe5cf0000e5e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f49, match64: 0x00000000, model64: 0xe5e00000e5ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4a, match64: 0x00000000, model64: 0xe5ed0000e601},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4b, match64: 0x00000000, model64: 0xe6010000e60d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4c, match64: 0x00000000, model64: 0xe60d0000e61b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4d, match64: 0x00000000, model64: 0xe61b0000e624},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4e, match64: 0x00000000, model64: 0xe6240000e62b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe62b0000e633, model64: 0xe6330000e63b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4f, match64: 0x00000000, model64: 0xe63b0000e642},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f50, match64: 0x00000000, model64: 0xe6420000e64a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f51, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f52, match64: 0x00000000, model64: 0xe64a0000e655},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f53, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f54, match64: 0x00000000, model64: 0x634000006345},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f55, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f57, match64: 0x00000000, model64: 0x59ba000059c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f58, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6600000e666, model64: 0xe6660000e66d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x0f5e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0f5f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f61, match64: 0x00000000, model64: 0xe6760000e67d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f62, match64: 0x00000000, model64: 0xe67d0000e680},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f63, match64: 0x00000000, model64: 0xe6800000e68a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f64, match64: 0x00000000, model64: 0xe68a0000e692},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6920000e6a0, model64: 0xe6a00000e6ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6ae0000e6bc, model64: 0xe6bc0000e6ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6ca0000e6d3, model64: 0xe6d30000e6dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6dc0000e6e6, model64: 0xe6e60000e6f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6f00000e6fc, model64: 0xe6fc0000e708},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe7080000e713, model64: 0xe7130000e71e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe71e0000e728, model64: 0xe7280000e732},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f65, match64: 0x00000000, model64: 0xe7320000e739},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f66, match64: 0x00000000, model64: 0xe7390000e742},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe7420000e74b, model64: 0xe74b0000e74f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe74f0000e753, model64: 0xe74f0000e753},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe7530000e75a, model64: 0xe75a0000e761},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0f67, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f69, match64: 0x00000000, model64: 0xe7690000e77a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6a, match64: 0x00000000, model64: 0xe77a0000e786},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe7860000e792, model64: 0xe7920000e7a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6b, match64: 0x00000000, model64: 0xe77a0000e786},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f72, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f73, match64: 0x00000000, model64: 0xe7bb0000e7cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f74, match64: 0x00000000, model64: 0xe7cc0000e7dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f75, match64: 0x00000000, model64: 0xe7dd0000e7ee},
		modelTuple{type64: 0x24300000245, matchRI: 0x0f76, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: 0x0f77, match64: 0x00000000, model64: 0x9c3000009c38},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0f78, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe7f20000e7fb, model64: 0xe7f20000e7fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe7fb0000e805, model64: 0xe7fb0000e805},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7b, match64: 0x00000000, model64: 0xe8090000e811},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7c, match64: 0x00000000, model64: 0xe8110000e816},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe81a0000e821, model64: 0xe8210000e828},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xe82d0000e832},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f81, match64: 0x00000000, model64: 0xe8370000e83c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f82, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f83, match64: 0x00000000, model64: 0xe83c0000e841},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f86, match64: 0x00000000, model64: 0xe84c0000e854},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f87, match64: 0x00000000, model64: 0xe8540000e85c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f88, match64: 0x00000000, model64: 0xe85c0000e863},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f89, match64: 0x00000000, model64: 0xe8630000e869},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8a, match64: 0x00000000, model64: 0xe8690000e872},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8b, match64: 0x00000000, model64: 0xe8720000e879},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8c, match64: 0x00000000, model64: 0xe8790000e882},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8d, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8e, match64: 0x00000000, model64: 0xe8820000e88a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8f, match64: 0x00000000, model64: 0xe88a0000e892},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f90, match64: 0x00000000, model64: 0xe8920000e89b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f91, match64: 0x00000000, model64: 0xe89b0000e8a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f92, match64: 0x00000000, model64: 0xe8a00000e8ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f93, match64: 0x00000000, model64: 0xacdd0000ace1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f94, match64: 0x00000000, model64: 0x87f5000087fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f95, match64: 0x00000000, model64: 0xe8ac0000e8b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f96, match64: 0x00000000, model64: 0xe8b20000e8bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f97, match64: 0x00000000, model64: 0xe8bb0000e8c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f98, match64: 0x00000000, model64: 0xe8c80000e8d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f99, match64: 0x00000000, model64: 0xe8d00000e8de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9a, match64: 0x00000000, model64: 0xe8de0000e8e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9b, match64: 0x00000000, model64: 0xe8e40000e8ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9e, match64: 0x00000000, model64: 0xe8ed0000e8fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa0, match64: 0x00000000, model64: 0xe8fe0000e90b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe90b0000e912, model64: 0xe90b0000e912},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9120000e918, model64: 0xe9180000e91f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa1, match64: 0x00000000, model64: 0xe91f0000e92e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa2, match64: 0x00000000, model64: 0xb07d0000b085},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa3, match64: 0x00000000, model64: 0xe92e0000e945},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa4, match64: 0x00000000, model64: 0xe9450000e953},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa5, match64: 0x00000000, model64: 0xe9530000e95c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xe96b0000e96f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xe9750000e97d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe9950000e99e, model64: 0xe99e0000e9a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fab, match64: 0x00000000, model64: 0xe9a60000e9ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fac, match64: 0x00000000, model64: 0xe9ae0000e9b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9b80000e9bf, model64: 0xe9b80000e9bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fad, match64: 0x00000000, model64: 0xe9bf0000e9c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fae, match64: 0x00000000, model64: 0xe9c80000e9d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9d00000e9db, model64: 0xe9db0000e9e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9e10000e9ea, model64: 0xe9ea0000e9f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9f30000e9fa, model64: 0xe9fa0000ea01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea070000ea18, model64: 0xea180000ea29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea300000ea3a, model64: 0xb93b0000b942},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea3a0000ea44, model64: 0xea440000ea4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea4f0000ea58, model64: 0xea580000ea63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea630000ea6c, model64: 0xea6c0000ea73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea730000ea7c, model64: 0xea7c0000ea80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea800000ea89, model64: 0xea890000ea91},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea910000ea9a, model64: 0xea9a0000ea9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea9e0000eaa9, model64: 0xea9e0000eaa9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x0fb5, match64: 0x00000000, model64: 0xeab20000eac1},
		modelTuple{type64: 0x24700000251, matchRI: 0x0fb6, match64: 0x00000000, model64: 0xeac10000eacc},
		modelTuple{type64: 0x24700000251, matchRI: 0x0fb7, match64: 0x00000000, model64: 0xa8a90000a8b4},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0xead20000eadb, model64: 0xeadb0000eae4},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0xeae40000eaed, model64: 0xeae40000eaed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbc, match64: 0x00000000, model64: 0xeaf50000eafd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0fc3, match64: 0x00000000, model64: 0x3150000031a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc5, match64: 0x00000000, model64: 0xeb120000eb15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb1a0000eb21, model64: 0xeb210000eb29},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc7, match64: 0x00000000, model64: 0xeb290000eb2f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xeb2f0000eb39, model64: 0xeb390000eb43},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xeb430000eb4a, model64: 0xeb4a0000eb51},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0fc8, match64: 0x00000000, model64: 0xeb510000eb57},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xeb570000eb5e, model64: 0xeb5e0000eb65},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb790000eb81, model64: 0xeb810000eb82},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xeb8f0000eb9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeba00000eba9, model64: 0xeba90000ebb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fce, match64: 0x00000000, model64: 0xebb20000ebba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xebba0000ebc3, model64: 0xebc30000ebcc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xebcc0000ebda, model64: 0xebcc0000ebda},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcf, match64: 0x00000000, model64: 0xebda0000ebe3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xebe30000ebee, model64: 0xebee0000ebf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd0, match64: 0x00000000, model64: 0xebf90000ec09},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd1, match64: 0x00000000, model64: 0xec090000ec16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec160000ec20, model64: 0xec200000ec2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec2a0000ec36, model64: 0xec360000ec42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec420000ec4b, model64: 0xec4b0000ec54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec540000ec61, model64: 0xec610000ec6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec6e0000ec76, model64: 0xec760000ec7e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0fd2, match64: 0x00000000, model64: 0xec7e0000ec86},
		modelTuple{type64: 0x24300000245, matchRI: 0x0fd3, match64: 0x00000000, model64: 0xec860000ec93},
		modelTuple{type64: 0x24300000245, matchRI: 0x0fd4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd6, match64: 0x00000000, model64: 0xec980000ec9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec9e0000eca6, model64: 0xeca60000ecab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd7, match64: 0x00000000, model64: 0xecab0000ecb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd8, match64: 0x00000000, model64: 0xecb30000ecba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd9, match64: 0x00000000, model64: 0xecba0000ecbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fda, match64: 0x00000000, model64: 0xecbe0000ecc3},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xecc30000eccd, model64: 0xeccd0000ecd5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xece20000ecee, model64: 0xece20000ecee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xecee0000ecf9, model64: 0xecee0000ecf9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xecf90000ed0a, model64: 0xecf90000ed0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed0a0000ed16, model64: 0xed0a0000ed16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed160000ed21, model64: 0xed160000ed21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed210000ed30, model64: 0xed210000ed30},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed300000ed3e, model64: 0xed300000ed3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed3e0000ed4b, model64: 0xed3e0000ed4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdd, match64: 0x00000000, model64: 0xed4b0000ed58},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fde, match64: 0x00000000, model64: 0xed580000ed60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed600000ed6f, model64: 0xed600000ed6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdf, match64: 0x00000000, model64: 0xed6f0000ed79},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe0, match64: 0x00000000, model64: 0xed790000ed87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed870000ed96, model64: 0xed870000ed96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed960000eda8, model64: 0xed960000eda8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeda80000edb6, model64: 0xeda80000edb6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xedb60000edc1, model64: 0xedb60000edc1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xedc10000edcb, model64: 0xedc10000edcb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xedcb0000edd5, model64: 0xedcb0000edd5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xedd50000ede2, model64: 0xedd50000ede2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xede20000edf0, model64: 0xede20000edf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe1, match64: 0x00000000, model64: 0xedf00000edfc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xedfc0000ee04, model64: 0xee040000ee0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xee0d0000ee18, model64: 0xee180000ee2e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xee2e0000ee35, model64: 0xee350000ee46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xee460000ee51, model64: 0xee510000ee65},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe2, match64: 0x00000000, model64: 0xee650000ee76},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe3, match64: 0x00000000, model64: 0xee760000ee82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe4, match64: 0x00000000, model64: 0xee820000ee93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xee930000eea3, model64: 0xee930000eea3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeea30000eeb1, model64: 0xeea30000eeb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe5, match64: 0x00000000, model64: 0xeeb10000eec0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeec00000eed2, model64: 0xeec00000eed2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeed20000eee6, model64: 0xeed20000eee6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe6, match64: 0x00000000, model64: 0xeee60000eef6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeef60000eefd, model64: 0xeefd0000ef0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef0e0000ef17, model64: 0xef170000ef20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef200000ef29, model64: 0xef200000ef29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef290000ef32, model64: 0xef290000ef32},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe7, match64: 0x00000000, model64: 0xef320000ef40},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe8, match64: 0x00000000, model64: 0xef400000ef4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe9, match64: 0x00000000, model64: 0xef4f0000ef5d},
		modelTuple{type64: 0x38400000391, matchRI: 0x0fea, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x0feb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fec, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fed, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fee, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff1, match64: 0x00000000, model64: 0xef610000ef63},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ff2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ff3, match64: 0x00000000, model64: 0xef630000ef6b},
		modelTuple{type64: 0x24300000245, matchRI: 0x0ff4, match64: 0x00000000, model64: 0xef6b0000ef70},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef750000ef80, model64: 0xef750000ef80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef800000ef8c, model64: 0xef800000ef8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff6, match64: 0x00000000, model64: 0xef8c0000ef98},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff7, match64: 0x00000000, model64: 0xef980000efa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xefac0000efb3, model64: 0xefb30000efbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffa, match64: 0x00000000, model64: 0xefd00000efd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffb, match64: 0x00000000, model64: 0xefd90000efe7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xefe70000efef, model64: 0xefef0000eff8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffc, match64: 0x00000000, model64: 0xeff80000effb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffd, match64: 0x00000000, model64: 0xeffb0000f005},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0050000f00f, model64: 0xf00f0000f011},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0110000f01a, model64: 0x1c9300001c94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf01a0000f028, model64: 0xf0280000f02e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf02e0000f037, model64: 0xae5f0000ae60},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xf0370000f043, model64: 0xf0430000f04f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0540000f05a, model64: 0xf05a0000f061},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0610000f069, model64: 0xf0610000f069},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fff, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1002, match64: 0x00000000, model64: 0xf0700000f077},
		modelTuple{type64: 0x2700000027, matchRI: 0x1003, match64: 0x00000000, model64: 0x89be000089c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1004, match64: 0x00000000, model64: 0xf0770000f07a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1005, match64: 0x00000000, model64: 0x72460000724a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1006, match64: 0x00000000, model64: 0xf07a0000f07f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1007, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf0870000f09a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x100b, match64: 0x00000000, model64: 0xf0a50000f0b0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x100c, match64: 0x00000000, model64: 0xf0b00000f0c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x100d, match64: 0x00000000, model64: 0xf0c10000f0d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x100e, match64: 0x00000000, model64: 0xf0d40000f0e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0e60000f0f0, model64: 0xf0f00000f100},
		modelTuple{type64: 0x2700000027, matchRI: 0x100f, match64: 0x00000000, model64: 0xf1000000f10f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1010, match64: 0x00000000, model64: 0xf10f0000f114},
		modelTuple{type64: 0x2700000027, matchRI: 0x1011, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1012, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1014, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1015, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1018, match64: 0x00000000, model64: 0xf1370000f141},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1410000f149, model64: 0xf1490000f151},
		modelTuple{type64: 0x2700000027, matchRI: 0x101a, match64: 0x00000000, model64: 0xf1550000f15b},
		modelTuple{type64: 0x2700000027, matchRI: 0x101b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x101c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x101e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x101f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xf1610000f169, model64: 0xf1690000f170},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1020, match64: 0x00000000, model64: 0xf1700000f17a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1022, match64: 0x00000000, model64: 0xf1800000f189},
		modelTuple{type64: 0x2700000027, matchRI: 0x1023, match64: 0x00000000, model64: 0xf1890000f18e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1024, match64: 0x00000000, model64: 0xf18e0000f192},
		modelTuple{type64: 0x2700000027, matchRI: 0x1025, match64: 0x00000000, model64: 0xdcc40000dcc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1026, match64: 0x00000000, model64: 0xdcc40000dcc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1027, match64: 0x00000000, model64: 0xf1920000f197},
		modelTuple{type64: 0x2700000027, matchRI: 0x1028, match64: 0x00000000, model64: 0xdcc40000dcc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1029, match64: 0x00000000, model64: 0xdcc40000dcc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x102a, match64: 0x00000000, model64: 0xf1970000f19b},
		modelTuple{type64: 0x2700000027, matchRI: 0x102b, match64: 0x00000000, model64: 0xf19b0000f1a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x102c, match64: 0x00000000, model64: 0xdcc40000dcc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x102d, match64: 0x00000000, model64: 0xf1a10000f1a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x102e, match64: 0x00000000, model64: 0xf1a60000f1ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x102f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1030, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1b00000f1b3, model64: 0xf1b00000f1b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1032, match64: 0x00000000, model64: 0xf1b30000f1bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1033, match64: 0x00000000, model64: 0xf1bb0000f1c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1034, match64: 0x00000000, model64: 0xf1c00000f1cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1035, match64: 0x00000000, model64: 0xf1cf0000f1da},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1036, match64: 0x00000000, model64: 0xf1da0000f1e3},
		modelTuple{type64: 0x24300000245, matchRI: 0x1038, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1039, match64: 0x00000000, model64: 0xf1e80000f1f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1f50000f1fd, model64: 0xf1fd0000f205},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2050000f20d, model64: 0xf2050000f20d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf20d0000f219, model64: 0xf20d0000f219},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2190000f223, model64: 0xf2190000f223},
		modelTuple{type64: 0x2700000027, matchRI: 0x103a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x103b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x103d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x103e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf22c0000f235, model64: 0xf2350000f240},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2400000f245, model64: 0x92ae000092b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2450000f24b, model64: 0xf24b0000f255},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2550000f259, model64: 0xf2590000f262},
		modelTuple{type64: 0x2700000027, matchRI: 0x1040, match64: 0x00000000, model64: 0xf2620000f26b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf26b0000f26f, model64: 0xf26f0000f279},
		modelTuple{type64: 0x2700000027, matchRI: 0x1041, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x7de000007ded, model64: 0xf2790000f284},
		modelTuple{type64: 0x38400000391, matchRI: 0x1042, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1044, match64: 0x00000000, model64: 0xf28a0000f291},
		modelTuple{type64: 0x2700000027, matchRI: 0x1045, match64: 0x00000000, model64: 0xf2910000f297},
		modelTuple{type64: 0x2700000027, matchRI: 0x1046, match64: 0x00000000, model64: 0xf2970000f29d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1047, match64: 0x00000000, model64: 0xf29d0000f2a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1048, match64: 0x00000000, model64: 0xf2a40000f2aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1049, match64: 0x00000000, model64: 0xf2aa0000f2b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x104a, match64: 0x00000000, model64: 0xf2b10000f2ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x104b, match64: 0x00000000, model64: 0xf2ba0000f2c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x104c, match64: 0x00000000, model64: 0xf2c00000f2c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x104d, match64: 0x00000000, model64: 0xafda0000afe1},
		modelTuple{type64: 0x2700000027, matchRI: 0x104e, match64: 0x00000000, model64: 0xf2c60000f2cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x104f, match64: 0x00000000, model64: 0xf2cc0000f2d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1050, match64: 0x00000000, model64: 0xf2d30000f2d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1051, match64: 0x00000000, model64: 0xf2d90000f2e1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1052, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1053, match64: 0x00000000, model64: 0xf2e10000f2eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2f10000f2f7, model64: 0xf2f70000f2fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1055, match64: 0x00000000, model64: 0xf2fb0000f302},
		modelTuple{type64: 0x2700000027, matchRI: 0x1056, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1057, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1058, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf30f0000f31a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf32b0000f331},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf33d0000f346, model64: 0xf3460000f351},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf3510000f35c, model64: 0xf35c0000f367},
		modelTuple{type64: 0x2700000027, matchRI: 0x105f, match64: 0x00000000, model64: 0xf3670000f36e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf36e0000f37e, model64: 0xf36e0000f37e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1060, match64: 0x00000000, model64: 0xf37e0000f386},
		modelTuple{type64: 0x2700000027, matchRI: 0x1061, match64: 0x00000000, model64: 0xf3860000f392},
		modelTuple{type64: 0x2700000027, matchRI: 0x1062, match64: 0x00000000, model64: 0xf3920000f39d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1063, match64: 0x00000000, model64: 0xf39d0000f3a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1064, match64: 0x00000000, model64: 0xf3a40000f3ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1065, match64: 0x00000000, model64: 0xf3ad0000f3b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1066, match64: 0x00000000, model64: 0xf3b30000f3bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1067, match64: 0x00000000, model64: 0xf3bc0000f3c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1068, match64: 0x00000000, model64: 0xf3c70000f3d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1069, match64: 0x00000000, model64: 0xf3d20000f3da},
		modelTuple{type64: 0x2700000027, matchRI: 0x106a, match64: 0x00000000, model64: 0xf3da0000f3e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x106b, match64: 0x00000000, model64: 0xf3e10000f3e7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x106c, match64: 0x00000000, model64: 0xf3e70000f3f5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x106d, match64: 0x00000000, model64: 0xf3f50000f403},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x106e, match64: 0x00000000, model64: 0xf4030000f411},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x106f, match64: 0x00000000, model64: 0xf4110000f41f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1070, match64: 0x00000000, model64: 0xf3f50000f403},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1071, match64: 0x00000000, model64: 0xf41f0000f427},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1072, match64: 0x00000000, model64: 0xf4270000f435},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1073, match64: 0x00000000, model64: 0xf3e70000f3f5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1074, match64: 0x00000000, model64: 0xf4350000f442},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1075, match64: 0x00000000, model64: 0xf4420000f44f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1076, match64: 0x00000000, model64: 0xf44f0000f45c},
		modelTuple{type64: 0x24300000245, matchRI: 0x1077, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x107b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x107c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x107e, match64: 0x00000000, model64: 0xf4700000f475},
		modelTuple{type64: 0x2700000027, matchRI: 0x107f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x1080, match64: 0x00000000, model64: 0xf4750000f481},
		modelTuple{type64: 0x2700000027, matchRI: 0x1082, match64: 0x00000000, model64: 0xf4880000f48e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1083, match64: 0x00000000, model64: 0xf48e0000f498},
		modelTuple{type64: 0x2700000027, matchRI: 0x1084, match64: 0x00000000, model64: 0xf4980000f49f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1085, match64: 0x00000000, model64: 0xf49f0000f4a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1086, match64: 0x00000000, model64: 0xf4a30000f4aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1087, match64: 0x00000000, model64: 0xf4aa0000f4b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1088, match64: 0x00000000, model64: 0xf4b10000f4b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1089, match64: 0x00000000, model64: 0xf4b80000f4bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x108a, match64: 0x00000000, model64: 0xf4bf0000f4c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x108b, match64: 0x00000000, model64: 0xf4c60000f4cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x108c, match64: 0x00000000, model64: 0xf4cf0000f4d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x108d, match64: 0x00000000, model64: 0xf4d40000f4e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x108e, match64: 0x00000000, model64: 0xf4e00000f4eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x108f, match64: 0x00000000, model64: 0xf4eb0000f4f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1090, match64: 0x00000000, model64: 0xf4f30000f4fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1091, match64: 0x00000000, model64: 0xf4fd0000f50b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1092, match64: 0x00000000, model64: 0xf50b0000f513},
		modelTuple{type64: 0x2700000027, matchRI: 0x1093, match64: 0x00000000, model64: 0xf5130000f51d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1094, match64: 0x00000000, model64: 0xf51d0000f522},
		modelTuple{type64: 0x2700000027, matchRI: 0x1095, match64: 0x00000000, model64: 0xf5220000f52c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1096, match64: 0x00000000, model64: 0xf52c0000f536},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5360000f53b, model64: 0xf53b0000f545},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5450000f54a, model64: 0xf54a0000f555},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5550000f55b, model64: 0xf55b0000f565},
		modelTuple{type64: 0x2700000027, matchRI: 0x1097, match64: 0x00000000, model64: 0xf5650000f56f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf56f0000f574, model64: 0xf5740000f57f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1098, match64: 0x00000000, model64: 0xf57f0000f588},
		modelTuple{type64: 0x2700000027, matchRI: 0x1099, match64: 0x00000000, model64: 0xf5880000f595},
		modelTuple{type64: 0x2700000027, matchRI: 0x109a, match64: 0x00000000, model64: 0xf5950000f5a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x109b, match64: 0x00000000, model64: 0xf5a40000f5b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5b30000f5b8, model64: 0xf5b80000f5ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5ca0000f5cf, model64: 0xf5cf0000f5db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5db0000f5e2, model64: 0xf5e20000f5e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5e80000f5ed, model64: 0xf5ed0000f5f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x109c, match64: 0x00000000, model64: 0xf5f60000f5fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x109d, match64: 0x00000000, model64: 0xf5fd0000f603},
		modelTuple{type64: 0x2700000027, matchRI: 0x109e, match64: 0x00000000, model64: 0xf6030000f60d},
		modelTuple{type64: 0x2700000027, matchRI: 0x109f, match64: 0x00000000, model64: 0xf60d0000f617},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a0, match64: 0x00000000, model64: 0xf6170000f62b},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a1, match64: 0x00000000, model64: 0xf62b0000f632},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a2, match64: 0x00000000, model64: 0xf6320000f63c},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a3, match64: 0x00000000, model64: 0xf63c0000f646},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a4, match64: 0x00000000, model64: 0xf6460000f650},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a5, match64: 0x00000000, model64: 0xf6500000f65a},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a6, match64: 0x00000000, model64: 0xf65a0000f663},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a7, match64: 0x00000000, model64: 0xf6630000f66d},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a8, match64: 0x00000000, model64: 0xf66d0000f677},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a9, match64: 0x00000000, model64: 0xf6770000f681},
		modelTuple{type64: 0x2700000027, matchRI: 0x10aa, match64: 0x00000000, model64: 0xf6810000f686},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ab, match64: 0x00000000, model64: 0xf6860000f68d},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ac, match64: 0x00000000, model64: 0xf68d0000f694},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ad, match64: 0x00000000, model64: 0xf6940000f6a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ae, match64: 0x00000000, model64: 0xf6a10000f6aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x10af, match64: 0x00000000, model64: 0xf6aa0000f6b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b0, match64: 0x00000000, model64: 0xf6b60000f6c2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10b1, match64: 0x00000000, model64: 0xf6c20000f6ce},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10b2, match64: 0x00000000, model64: 0xf6ce0000f6d9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10b3, match64: 0x00000000, model64: 0xf6d90000f6e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b4, match64: 0x00000000, model64: 0xf6e30000f6e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b5, match64: 0x00000000, model64: 0xf6e80000f6f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b6, match64: 0x00000000, model64: 0xf6f30000f6fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b7, match64: 0x00000000, model64: 0xf6fd0000f707},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b8, match64: 0x00000000, model64: 0xf7070000f711},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b9, match64: 0x00000000, model64: 0xf7110000f71b},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ba, match64: 0x00000000, model64: 0xf71b0000f725},
		modelTuple{type64: 0x2700000027, matchRI: 0x10bb, match64: 0x00000000, model64: 0xf7250000f72f},
		modelTuple{type64: 0x2700000027, matchRI: 0x10bc, match64: 0x00000000, model64: 0xf72f0000f73b},
		modelTuple{type64: 0x2700000027, matchRI: 0x10bd, match64: 0x00000000, model64: 0xf73b0000f741},
		modelTuple{type64: 0x2700000027, matchRI: 0x10be, match64: 0x00000000, model64: 0xf7410000f74a},
		modelTuple{type64: 0x2700000027, matchRI: 0x10bf, match64: 0x00000000, model64: 0xf74a0000f753},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c0, match64: 0x00000000, model64: 0xf7530000f757},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10c2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c3, match64: 0x00000000, model64: 0xf7570000f765},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c4, match64: 0x00000000, model64: 0xf7650000f774},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c5, match64: 0x00000000, model64: 0xf7740000f782},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c6, match64: 0x00000000, model64: 0xf7820000f792},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c7, match64: 0x00000000, model64: 0xf7920000f79f},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0xf79f0000f7a4, model64: 0xf7a40000f7a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c8, match64: 0x00000000, model64: 0xf7a90000f7ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ca, match64: 0x00000000, model64: 0x6c0000006c5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7b80000f7c0, model64: 0xf7c00000f7c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7c80000f7cf, model64: 0xf7cf0000f7d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7d60000f7df, model64: 0xf7d60000f7df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7df0000f7e5, model64: 0xf7e50000f7eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7eb0000f7f4, model64: 0xf7eb0000f7f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x10cd, match64: 0x00000000, model64: 0xf7f40000f7fe},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xf7fe0000f807, model64: 0xf8070000f810},
		modelTuple{type64: 0x2700000027, matchRI: 0x10cf, match64: 0x00000000, model64: 0xf8150000f821},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d0, match64: 0x00000000, model64: 0xf8210000f82c},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d5, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d8, match64: 0x00000000, model64: 0xf83a0000f84d},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d9, match64: 0x00000000, model64: 0xf84d0000f850},
		modelTuple{type64: 0x2700000027, matchRI: 0x10da, match64: 0x00000000, model64: 0xf8500000f853},
		modelTuple{type64: 0x2700000027, matchRI: 0x10db, match64: 0x00000000, model64: 0xf8530000f856},
		modelTuple{type64: 0x2700000027, matchRI: 0x10dc, match64: 0x00000000, model64: 0xf8560000f859},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8590000f862, model64: 0xf8620000f869},
		modelTuple{type64: 0x2700000027, matchRI: 0x10dd, match64: 0x00000000, model64: 0xf8690000f86c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf86c0000f873, model64: 0xf8730000f876},
		modelTuple{type64: 0x2700000027, matchRI: 0x10de, match64: 0x00000000, model64: 0xf8760000f879},
		modelTuple{type64: 0x2700000027, matchRI: 0x10df, match64: 0x00000000, model64: 0xf8790000f87c},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e0, match64: 0x00000000, model64: 0xf87c0000f87f},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e1, match64: 0x00000000, model64: 0xf87f0000f882},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e2, match64: 0x00000000, model64: 0xf8820000f886},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e3, match64: 0x00000000, model64: 0xf8860000f889},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8890000f893, model64: 0xf8930000f89c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf89c0000f8a4, model64: 0x92ae000092b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8a40000f8ae, model64: 0xf8ae0000f8b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8b40000f8bd, model64: 0xf8bd0000f8cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8cb0000f8d3, model64: 0xf8d30000f8e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e4, match64: 0x00000000, model64: 0xf8e20000f8eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e5, match64: 0x00000000, model64: 0xf8eb0000f8f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8f40000f8fb, model64: 0xf8fb0000f904},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9040000f90c, model64: 0xf90c0000f91a},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e6, match64: 0x00000000, model64: 0xf91a0000f91c},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e7, match64: 0x00000000, model64: 0xf91c0000f923},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e8, match64: 0x00000000, model64: 0xf9230000f925},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e9, match64: 0x00000000, model64: 0xf9250000f92d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf92d0000f935, model64: 0xf9350000f939},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ea, match64: 0x00000000, model64: 0xf9390000f93c},
		modelTuple{type64: 0x2700000027, matchRI: 0x10eb, match64: 0x00000000, model64: 0xf93c0000f943},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ec, match64: 0x00000000, model64: 0xf9430000f94c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf94c0000f953, model64: 0xf9530000f95c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf95c0000f963, model64: 0xf9630000f966},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ed, match64: 0x00000000, model64: 0xf9660000f968},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ee, match64: 0x00000000, model64: 0xf9680000f96b},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ef, match64: 0x00000000, model64: 0xe9610000e964},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f0, match64: 0x00000000, model64: 0xf96b0000f974},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f1, match64: 0x00000000, model64: 0xf9740000f977},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9770000f97e, model64: 0xf97e0000f985},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9850000f98c, model64: 0xf98c0000f994},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f2, match64: 0x00000000, model64: 0xc2500000c27},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f3, match64: 0x00000000, model64: 0xf9940000f999},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f4, match64: 0x00000000, model64: 0xf9990000f99b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf99b0000f9a2, model64: 0xf9a20000f9a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9a80000f9af, model64: 0xf9af0000f9b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f5, match64: 0x00000000, model64: 0xf9b50000f9bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f6, match64: 0x00000000, model64: 0xf9bb0000f9c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f7, match64: 0x00000000, model64: 0xf9c30000f9cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f8, match64: 0x00000000, model64: 0xb9320000b934},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9cd0000f9d5, model64: 0xf9d50000f9d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f9, match64: 0x00000000, model64: 0xf9d80000f9da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9da0000f9e1, model64: 0xf9e10000f9ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9ea0000f9f1, model64: 0xf9f10000f9fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x10fa, match64: 0x00000000, model64: 0xf9e10000f9ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x10fb, match64: 0x00000000, model64: 0xf9fa0000fa09},
		modelTuple{type64: 0x2700000027, matchRI: 0x10fc, match64: 0x00000000, model64: 0xfa090000fa13},
		modelTuple{type64: 0x2700000027, matchRI: 0x10fd, match64: 0x00000000, model64: 0xfa130000fa20},
		modelTuple{type64: 0x2700000027, matchRI: 0x10fe, match64: 0x00000000, model64: 0xfa200000fa2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ff, match64: 0x00000000, model64: 0xfa2f0000fa32},
		modelTuple{type64: 0x2700000027, matchRI: 0x1100, match64: 0x00000000, model64: 0xfa320000fa35},
		modelTuple{type64: 0x2700000027, matchRI: 0x1101, match64: 0x00000000, model64: 0xfa350000fa38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa380000fa3f, model64: 0xfa3f0000fa42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa420000fa48, model64: 0xfa480000fa52},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa520000fa59, model64: 0xfa590000fa60},
		modelTuple{type64: 0x2700000027, matchRI: 0x1102, match64: 0x00000000, model64: 0xfa600000fa65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa650000fa6c, model64: 0xfa6c0000fa72},
		modelTuple{type64: 0x2700000027, matchRI: 0x1103, match64: 0x00000000, model64: 0xfa720000fa7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1104, match64: 0x00000000, model64: 0xfa7a0000fa81},
		modelTuple{type64: 0x2700000027, matchRI: 0x1105, match64: 0x00000000, model64: 0xfa810000fa88},
		modelTuple{type64: 0x2700000027, matchRI: 0x1106, match64: 0x00000000, model64: 0xfa880000fa8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1107, match64: 0x00000000, model64: 0xfa8e0000fa93},
		modelTuple{type64: 0x2700000027, matchRI: 0x1108, match64: 0x00000000, model64: 0xde140000de18},
		modelTuple{type64: 0x2700000027, matchRI: 0x1109, match64: 0x00000000, model64: 0xfa930000fa9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x110a, match64: 0x00000000, model64: 0xfa9a0000fa9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x110b, match64: 0x00000000, model64: 0xfa9e0000faa3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfaa30000faac, model64: 0x825500008259},
		modelTuple{type64: 0x2700000027, matchRI: 0x110c, match64: 0x00000000, model64: 0xfaac0000fab0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfab00000fab9, model64: 0xfab90000facb},
		modelTuple{type64: 0x2700000027, matchRI: 0x110d, match64: 0x00000000, model64: 0xfacb0000fad0},
		modelTuple{type64: 0x2700000027, matchRI: 0x110e, match64: 0x00000000, model64: 0xfad00000fad7},
		modelTuple{type64: 0x2700000027, matchRI: 0x110f, match64: 0x00000000, model64: 0xfad70000fae2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1110, match64: 0x00000000, model64: 0xfae20000faf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1111, match64: 0x00000000, model64: 0xfaf20000fafb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfafb0000fb03, model64: 0xfb030000fb0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1112, match64: 0x00000000, model64: 0xfb0d0000fb1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1113, match64: 0x00000000, model64: 0xfb1f0000fb2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1114, match64: 0x00000000, model64: 0xfb2c0000fb39},
		modelTuple{type64: 0x2700000027, matchRI: 0x1115, match64: 0x00000000, model64: 0xfb390000fb46},
		modelTuple{type64: 0x2700000027, matchRI: 0x1116, match64: 0x00000000, model64: 0xfb460000fb58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1117, match64: 0x00000000, model64: 0xfb580000fb63},
		modelTuple{type64: 0x2700000027, matchRI: 0x1118, match64: 0x00000000, model64: 0xfb630000fb70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1119, match64: 0x00000000, model64: 0xfb700000fb7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x111a, match64: 0x00000000, model64: 0xfb7a0000fb87},
		modelTuple{type64: 0x2700000027, matchRI: 0x111b, match64: 0x00000000, model64: 0xfb870000fb94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb940000fb9b, model64: 0xfb9b0000fba5},
		modelTuple{type64: 0x2700000027, matchRI: 0x111c, match64: 0x00000000, model64: 0xfba50000fbaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x111d, match64: 0x00000000, model64: 0xfbaf0000fbb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfbb90000fbc1, model64: 0xfbc10000fbcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x111e, match64: 0x00000000, model64: 0xfbcb0000fbd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x111f, match64: 0x00000000, model64: 0xfbd80000fbe5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfbe50000fbed, model64: 0xfbed0000fbfa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfbfa0000fc01, model64: 0xfc010000fc10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfc100000fc17, model64: 0xfc170000fc21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1120, match64: 0x00000000, model64: 0xfc210000fc2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1121, match64: 0x00000000, model64: 0xfc2e0000fc40},
		modelTuple{type64: 0x2700000027, matchRI: 0x1122, match64: 0x00000000, model64: 0xfc400000fc4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1123, match64: 0x00000000, model64: 0xfc4b0000fc5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1124, match64: 0x00000000, model64: 0xfc5c0000fc6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfc6d0000fc72, model64: 0xfc720000fc86},
		modelTuple{type64: 0x2700000027, matchRI: 0x1125, match64: 0x00000000, model64: 0xfc860000fc89},
		modelTuple{type64: 0x2700000027, matchRI: 0x1126, match64: 0x00000000, model64: 0xfc890000fc96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1127, match64: 0x00000000, model64: 0xfc960000fca0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfca00000fca8, model64: 0xfca80000fcb4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfcb40000fcb9, model64: 0xfcb90000fcc1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfcc10000fcc8, model64: 0xfcc80000fcd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1128, match64: 0x00000000, model64: 0xfcd00000fcd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1129, match64: 0x00000000, model64: 0xfcd80000fce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x112a, match64: 0x00000000, model64: 0xfce50000fce7},
		modelTuple{type64: 0x2700000027, matchRI: 0x112b, match64: 0x00000000, model64: 0xfce70000fcea},
		modelTuple{type64: 0x2700000027, matchRI: 0x112c, match64: 0x00000000, model64: 0xfcea0000fced},
		modelTuple{type64: 0x2700000027, matchRI: 0x112d, match64: 0x00000000, model64: 0xfced0000fcef},
		modelTuple{type64: 0x2700000027, matchRI: 0x112e, match64: 0x00000000, model64: 0xfcef0000fcf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x112f, match64: 0x00000000, model64: 0xfcf10000fcf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1130, match64: 0x00000000, model64: 0xfcf40000fcf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1131, match64: 0x00000000, model64: 0xfcf70000fd03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfd030000fd0b, model64: 0xfd0b0000fd14},
		modelTuple{type64: 0x2700000027, matchRI: 0x1132, match64: 0x00000000, model64: 0xfd140000fd19},
		modelTuple{type64: 0x2700000027, matchRI: 0x1133, match64: 0x00000000, model64: 0xfd190000fd20},
		modelTuple{type64: 0x2700000027, matchRI: 0x1134, match64: 0x00000000, model64: 0xfd200000fd27},
		modelTuple{type64: 0x2700000027, matchRI: 0x1135, match64: 0x00000000, model64: 0xfd270000fd30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1136, match64: 0x00000000, model64: 0xfd300000fd3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1137, match64: 0x00000000, model64: 0xfd3c0000fd43},
		modelTuple{type64: 0x2700000027, matchRI: 0x1138, match64: 0x00000000, model64: 0xfd430000fd4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1139, match64: 0x00000000, model64: 0xfd4a0000fd51},
		modelTuple{type64: 0x2700000027, matchRI: 0x113a, match64: 0x00000000, model64: 0xfd510000fd5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x113b, match64: 0x00000000, model64: 0xfd5d0000fd64},
		modelTuple{type64: 0x2700000027, matchRI: 0x113c, match64: 0x00000000, model64: 0xfd640000fd6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x113d, match64: 0x00000000, model64: 0xfd6b0000fd72},
		modelTuple{type64: 0x2700000027, matchRI: 0x113e, match64: 0x00000000, model64: 0xfd720000fd7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfd7a0000fd83, model64: 0xfd830000fd8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfd8b0000fd92, model64: 0xfd920000fd99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfd990000fda2, model64: 0xfda20000fdab},
		modelTuple{type64: 0x2700000027, matchRI: 0x113f, match64: 0x00000000, model64: 0xfdab0000fdb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1140, match64: 0x00000000, model64: 0xfdb30000fdbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1141, match64: 0x00000000, model64: 0xfdbe0000fdce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1142, match64: 0x00000000, model64: 0xfdce0000fddd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1143, match64: 0x00000000, model64: 0xfddd0000fde4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1144, match64: 0x00000000, model64: 0xfde40000fdec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfdec0000fdf3, model64: 0xfdf30000fdf6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfdf60000fdff, model64: 0xfdff0000fe02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1145, match64: 0x00000000, model64: 0xfe020000fe05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe050000fe0d, model64: 0xfe0d0000fe15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe150000fe1d, model64: 0xfe1d0000fe1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1146, match64: 0x00000000, model64: 0xfe1e0000fe20},
		modelTuple{type64: 0x2700000027, matchRI: 0x1147, match64: 0x00000000, model64: 0xfe200000fe25},
		modelTuple{type64: 0x2700000027, matchRI: 0x1148, match64: 0x00000000, model64: 0xfe250000fe2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1149, match64: 0x00000000, model64: 0xfe2b0000fe33},
		modelTuple{type64: 0x2700000027, matchRI: 0x114a, match64: 0x00000000, model64: 0xfe330000fe3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe3a0000fe42, model64: 0xfe420000fe48},
		modelTuple{type64: 0x2700000027, matchRI: 0x114b, match64: 0x00000000, model64: 0xfe480000fe50},
		modelTuple{type64: 0x2700000027, matchRI: 0x114c, match64: 0x00000000, model64: 0xfe500000fe59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe590000fe62, model64: 0xfe620000fe6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x114d, match64: 0x00000000, model64: 0xfe6b0000fe6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x114e, match64: 0x00000000, model64: 0xfe6d0000fe70},
		modelTuple{type64: 0x2700000027, matchRI: 0x114f, match64: 0x00000000, model64: 0xfe700000fe73},
		modelTuple{type64: 0x2700000027, matchRI: 0x1150, match64: 0x00000000, model64: 0xfe730000fe76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe760000fe7e, model64: 0xb4600000b463},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe7e0000fe87, model64: 0xfe870000fe8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe8a0000fe93, model64: 0xfe930000fe9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe9a0000fea4, model64: 0xfea40000fea7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfea70000feb0, model64: 0xfeb00000feb3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfeb30000feba, model64: 0xfeba0000fec7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfec70000fece, model64: 0xfece0000fed5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfed50000fedc, model64: 0xfedc0000fedf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1151, match64: 0x00000000, model64: 0xfedf0000fee3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1152, match64: 0x00000000, model64: 0xfee30000feea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfeea0000fef1, model64: 0xfeea0000fef1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfef10000fef9, model64: 0x825500008259},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfef90000ff02, model64: 0xff020000ff06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff060000ff0e, model64: 0xff0e0000ff17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1153, match64: 0x00000000, model64: 0xff170000ff19},
		modelTuple{type64: 0x2700000027, matchRI: 0x1154, match64: 0x00000000, model64: 0xff190000ff1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1155, match64: 0x00000000, model64: 0xff1f0000ff28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff280000ff2f, model64: 0xff2f0000ff32},
		modelTuple{type64: 0x2700000027, matchRI: 0x1156, match64: 0x00000000, model64: 0xff320000ff36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff360000ff3d, model64: 0xff3d0000ff41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff410000ff48, model64: 0xff480000ff4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff4a0000ff51, model64: 0xff510000ff55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1157, match64: 0x00000000, model64: 0xff550000ff58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff580000ff5d, model64: 0xff5d0000ff62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff620000ff67, model64: 0xff670000ff6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1158, match64: 0x00000000, model64: 0x7b4900007b4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff6b0000ff74, model64: 0xff740000ff76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff760000ff7e, model64: 0xff7e0000ff87},
		modelTuple{type64: 0x2700000027, matchRI: 0x1159, match64: 0x00000000, model64: 0xff870000ff8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x115a, match64: 0x00000000, model64: 0xff8d0000ff95},
		modelTuple{type64: 0x2700000027, matchRI: 0x115b, match64: 0x00000000, model64: 0xff950000ff9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x115c, match64: 0x00000000, model64: 0xff9d0000ffa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x115d, match64: 0x00000000, model64: 0xffa60000ffaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x115e, match64: 0x00000000, model64: 0xffaf0000ffb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffb80000ffc0, model64: 0xffc00000ffca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffca0000ffd2, model64: 0xffd20000ffd5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffd50000ffdd, model64: 0xffdd0000ffe3},
		modelTuple{type64: 0x2700000027, matchRI: 0x115f, match64: 0x00000000, model64: 0xffe30000ffe6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1160, match64: 0x00000000, model64: 0xffe60000ffef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffef0000fff9, model64: 0xfff90000fffc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1161, match64: 0x00000000, model64: 0xfffc00010001},
		modelTuple{type64: 0x2700000027, matchRI: 0x1162, match64: 0x00000000, model64: 0x1000100010005},
		modelTuple{type64: 0x2700000027, matchRI: 0x1163, match64: 0x00000000, model64: 0x100050001000e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1164, match64: 0x00000000, model64: 0xfc860000fc89},
		modelTuple{type64: 0x2700000027, matchRI: 0x1165, match64: 0x00000000, model64: 0x1000e00010011},
		modelTuple{type64: 0x2700000027, matchRI: 0x1166, match64: 0x00000000, model64: 0x7ace00007ad5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1167, match64: 0x00000000, model64: 0x1001100010019},
		modelTuple{type64: 0x2700000027, matchRI: 0x1168, match64: 0x00000000, model64: 0x481b0000481e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1169, match64: 0x00000000, model64: 0x1001900010022},
		modelTuple{type64: 0x2700000027, matchRI: 0x116a, match64: 0x00000000, model64: 0x100220001002e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1002e00010035, model64: 0x100350001003e},
		modelTuple{type64: 0x2700000027, matchRI: 0x116b, match64: 0x00000000, model64: 0x1003e0001004a},
		modelTuple{type64: 0x2700000027, matchRI: 0x116c, match64: 0x00000000, model64: 0x1004a00010056},
		modelTuple{type64: 0x2700000027, matchRI: 0x116d, match64: 0x00000000, model64: 0x1005600010059},
		modelTuple{type64: 0x2700000027, matchRI: 0x116e, match64: 0x00000000, model64: 0x1005900010067},
		modelTuple{type64: 0x2700000027, matchRI: 0x116f, match64: 0x00000000, model64: 0x1006700010075},
		modelTuple{type64: 0x2700000027, matchRI: 0x1170, match64: 0x00000000, model64: 0x1007500010077},
		modelTuple{type64: 0x2700000027, matchRI: 0x1171, match64: 0x00000000, model64: 0x1007700010080},
		modelTuple{type64: 0x2700000027, matchRI: 0x1172, match64: 0x00000000, model64: 0x1008000010082},
		modelTuple{type64: 0x2700000027, matchRI: 0x1173, match64: 0x00000000, model64: 0x1008200010084},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100840001008b, model64: 0x1000100010005},
		modelTuple{type64: 0x2700000027, matchRI: 0x1174, match64: 0x00000000, model64: 0x1008b0001008e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1175, match64: 0x00000000, model64: 0x1008e00010098},
		modelTuple{type64: 0x2700000027, matchRI: 0x1176, match64: 0x00000000, model64: 0xfa2f0000fa32},
		modelTuple{type64: 0x2700000027, matchRI: 0x1177, match64: 0x00000000, model64: 0x10098000100a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1178, match64: 0x00000000, model64: 0x100a0000100a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1179, match64: 0x00000000, model64: 0xfe020000fe05},
		modelTuple{type64: 0x2700000027, matchRI: 0x117a, match64: 0x00000000, model64: 0x100a3000100a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x117b, match64: 0x00000000, model64: 0x100a6000100a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x117c, match64: 0x00000000, model64: 0x100a9000100ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x117d, match64: 0x00000000, model64: 0x100ac000100b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x117e, match64: 0x00000000, model64: 0x100b0000100b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x117f, match64: 0x00000000, model64: 0x100b3000100b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1180, match64: 0x00000000, model64: 0x100b6000100be},
		modelTuple{type64: 0x2700000027, matchRI: 0x1181, match64: 0x00000000, model64: 0x100be000100c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1182, match64: 0x00000000, model64: 0x100c1000100c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1183, match64: 0x00000000, model64: 0x100c4000100c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1184, match64: 0x00000000, model64: 0x100c7000100c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100c9000100d0, model64: 0xfea40000fea7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1185, match64: 0x00000000, model64: 0x100d0000100d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1186, match64: 0x00000000, model64: 0x100d2000100d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1187, match64: 0x00000000, model64: 0x100d9000100e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1188, match64: 0x00000000, model64: 0x100e2000100e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1189, match64: 0x00000000, model64: 0x100e9000100f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x118a, match64: 0x00000000, model64: 0x92b5000092be},
		modelTuple{type64: 0x2700000027, matchRI: 0x118b, match64: 0x00000000, model64: 0x100f2000100fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x118c, match64: 0x00000000, model64: 0x100fb00010105},
		modelTuple{type64: 0x2700000027, matchRI: 0x118d, match64: 0x00000000, model64: 0x1010500010112},
		modelTuple{type64: 0x2700000027, matchRI: 0x118e, match64: 0x00000000, model64: 0x101120001011b},
		modelTuple{type64: 0x2700000027, matchRI: 0x118f, match64: 0x00000000, model64: 0x1011b00010128},
		modelTuple{type64: 0x2700000027, matchRI: 0x1190, match64: 0x00000000, model64: 0x101280001012c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1191, match64: 0x00000000, model64: 0x1012c00010137},
		modelTuple{type64: 0x2700000027, matchRI: 0x1192, match64: 0x00000000, model64: 0x101370001013d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1193, match64: 0x00000000, model64: 0x1013d00010148},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1014800010150, model64: 0x1015000010157},
		modelTuple{type64: 0x2700000027, matchRI: 0x1194, match64: 0x00000000, model64: 0x101570001015e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1195, match64: 0x00000000, model64: 0x1015e00010163},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1016300010168, model64: 0x101680001016f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1196, match64: 0x00000000, model64: 0x1016f00010176},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x101760001017d, model64: 0x1017d00010186},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x101860001018b, model64: 0x1018b00010191},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1019100010199, model64: 0x10199000101a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x101a0000101a7, model64: 0x101a7000101b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x101b0000101b8, model64: 0x101b8000101be},
		modelTuple{type64: 0x2700000027, matchRI: 0x1197, match64: 0x00000000, model64: 0x101be000101c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1198, match64: 0x00000000, model64: 0x101c5000101c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x101c9000101d1, model64: 0x101d1000101da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x101da000101e2, model64: 0x101e2000101f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1199, match64: 0x00000000, model64: 0x101f1000101f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x101f900010200, model64: 0x102000001020a},
		modelTuple{type64: 0x2700000027, matchRI: 0x119a, match64: 0x00000000, model64: 0x1020a0001020d},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x119b, match64: 0x00000000, model64: 0x1020d00010211},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1021100010217, model64: 0x1021700010220},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x119c, match64: 0x00000000, model64: 0x1022000010231},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x119d, match64: 0x00000000, model64: 0x102310001023f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1023f00010246, model64: 0x1024600010253},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x119e, match64: 0x00000000, model64: 0x102530001025f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1025f00010266, model64: 0x102530001025f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x119f, match64: 0x00000000, model64: 0x1026600010272},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x102720001027a, model64: 0x1027a00010287},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x11a0, match64: 0x00000000, model64: 0x1028700010290},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x11a1, match64: 0x00000000, model64: 0x102900001029e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x11a2, match64: 0x00000000, model64: 0x1029e000102a7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x102a7000102ae, model64: 0x102ae000102b8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x102b8000102bf, model64: 0x102bf000102cc},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x102cc000102d3, model64: 0x102d3000102e0},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x102e0000102e7, model64: 0x102e7000102f8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x11a3, match64: 0x00000000, model64: 0x102f800010305},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x11a4, match64: 0x00000000, model64: 0x1030500010317},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x11a5, match64: 0x00000000, model64: 0x103170001032e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1032e00010336, model64: 0x103360001034b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1034b00010350, model64: 0x103500001035d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1035d00010362, model64: 0x103620001036d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x11a6, match64: 0x00000000, model64: 0x1036d00010379},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1037900010380, model64: 0x103800001038d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1038d00010394, model64: 0x10394000103a6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x11a7, match64: 0x00000000, model64: 0x103a6000103b4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x103b4000103b9, model64: 0x103b9000103c3},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x103c3000103c8, model64: 0x103c8000103d2},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x103d2000103dd, model64: 0x103d2000103dd},
		modelTuple{type64: 0x24300000245, matchRI: 0x11a8, match64: 0x00000000, model64: 0x103dd000103e5},
		modelTuple{type64: 0x24300000245, matchRI: 0x11a9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x11aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x11ab, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x11ac, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x103e5000103f0, model64: 0x103e5000103f0},
		modelTuple{type64: 0x24300000245, matchRI: 0x11ad, match64: 0x00000000, model64: 0x103dd000103e5},
		modelTuple{type64: 0x24300000245, matchRI: 0x11ae, match64: 0x00000000, model64: 0x103f0000103f7},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x103f700010406, model64: 0x1040600010412},
		modelTuple{type64: 0x285a00002862, matchRI: 0x11af, match64: 0x00000000, model64: 0x104120001041b},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x11b4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ba, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x11bb, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1043500010442, model64: 0x1044200010449},
		modelTuple{type64: 0x2700000027, matchRI: 0x11bf, match64: 0x00000000, model64: 0x59e8000059ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104520001045c, model64: 0x1045c00010463},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c0, match64: 0x00000000, model64: 0xc9360000c938},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c1, match64: 0x00000000, model64: 0xc8a10000c8a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c2, match64: 0x00000000, model64: 0x8cb900008cbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c3, match64: 0x00000000, model64: 0x1046300010466},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c4, match64: 0x00000000, model64: 0xc8ac0000c8b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c5, match64: 0x00000000, model64: 0xc8be0000c8c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c6, match64: 0x00000000, model64: 0xc8d00000c8d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c8, match64: 0x00000000, model64: 0x104660001046e},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c9, match64: 0x00000000, model64: 0x1046e00010471},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ca, match64: 0x00000000, model64: 0x1047100010473},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cb, match64: 0x00000000, model64: 0x1047300010477},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cc, match64: 0x00000000, model64: 0x43600000439},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cd, match64: 0x00000000, model64: 0x104770001047a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ce, match64: 0x00000000, model64: 0x1047a0001047d},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cf, match64: 0x00000000, model64: 0x1047d00010486},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d0, match64: 0x00000000, model64: 0xeff80000effb},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d1, match64: 0x00000000, model64: 0x104860001048e},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d2, match64: 0x00000000, model64: 0xdcc40000dcc7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104930001049a, model64: 0x1049a000104a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104a1000104a8, model64: 0x104a8000104af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104af000104b6, model64: 0x104b6000104bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104bd000104c4, model64: 0x104c4000104cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104cc000104d3, model64: 0x104d3000104e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104e0000104e7, model64: 0x104e7000104ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104ee000104f5, model64: 0x104f5000104fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104fc00010503, model64: 0x105030001050a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1050a00010511, model64: 0x1051100010518},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d5, match64: 0x00000000, model64: 0x105180001051f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1051f00010526, model64: 0x105260001052e},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d6, match64: 0x00000000, model64: 0x1052e00010535},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105350001053c, model64: 0x1053c00010543},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105430001054a, model64: 0x1054a00010551},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1055100010558, model64: 0x105580001055f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1055f00010566, model64: 0x105660001056d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1056d00010574, model64: 0x105740001057a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1057a00010581, model64: 0x1058100010587},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105870001058e, model64: 0x1058e00010594},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105940001059b, model64: 0x1059b000105a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105a1000105a8, model64: 0x105a8000105af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105af000105b6, model64: 0x105b6000105bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105bc000105c3, model64: 0x105c3000105ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105ca000105d1, model64: 0x105d1000105d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105d9000105e0, model64: 0x105e0000105e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105e8000105ef, model64: 0x105ef000105f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105f6000105fd, model64: 0x105fd00010605},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106050001060c, model64: 0x1060c00010615},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106150001061c, model64: 0x1061c00010622},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1062200010629, model64: 0x1062900010630},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1063000010637, model64: 0x106370001063e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1063e00010645, model64: 0x106450001064b},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x11da, match64: 0x00000000, model64: 0x106550001065e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1065e00010664, model64: 0x1066400010674},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x11db, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1067a00010682, model64: 0x1068200010684},
		modelTuple{type64: 0x2700000027, matchRI: 0x11dd, match64: 0x00000000, model64: 0x106840001068c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10696000106a6, model64: 0x106a6000106b7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x106b7000106c3, model64: 0x106c3000106cf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x11e0, match64: 0x00000000, model64: 0x106cf000106db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106db000106e0, model64: 0x106e0000106eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e1, match64: 0x00000000, model64: 0x106eb000106f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e2, match64: 0x00000000, model64: 0x106eb000106f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e3, match64: 0x00000000, model64: 0x106f300010701},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e4, match64: 0x00000000, model64: 0x107010001070a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x11e6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x11e8, match64: 0x00000000, model64: 0x1070e0001071b},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e9, match64: 0x00000000, model64: 0x1071b00010732},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1073200010743, model64: 0x1074300010753},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ea, match64: 0x00000000, model64: 0x107530001075f},
		modelTuple{type64: 0x2700000027, matchRI: 0x11eb, match64: 0x00000000, model64: 0x1075f0001076c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ec, match64: 0x00000000, model64: 0x1076c00010777},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1077700010782, model64: 0x1077700010782},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1078200010790, model64: 0x107900001079f},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ed, match64: 0x00000000, model64: 0x1079f000107ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ee, match64: 0x00000000, model64: 0x107ab000107b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x107b6000107bf, model64: 0x107bf000107c8},
		modelTuple{type64: 0x24700000251, matchRI: 0x11ef, match64: 0x00000000, model64: 0x107c8000107d3},
		modelTuple{type64: 0x24700000251, matchRI: 0x11f0, match64: 0x00000000, model64: 0x107d3000107df},
		modelTuple{type64: 0x24700000251, matchRI: 0x11f1, match64: 0x00000000, model64: 0x107df000107e8},
		modelTuple{type64: 0x24700000251, matchRI: 0x11f2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x107e8000107f4, model64: 0x107f400010800},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f4, match64: 0x00000000, model64: 0x1080500010814},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f6, match64: 0x00000000, model64: 0x108180001081f},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f7, match64: 0x00000000, model64: 0x1081f0001082b},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f8, match64: 0x00000000, model64: 0x1082b00010834},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f9, match64: 0x00000000, model64: 0x1083400010839},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fa, match64: 0x00000000, model64: 0x1083900010842},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fb, match64: 0x00000000, model64: 0x108420001084a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1084a00010850, model64: 0x108500001085b},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fc, match64: 0x00000000, model64: 0x1085b00010863},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fd, match64: 0x00000000, model64: 0x108630001086c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fe, match64: 0x00000000, model64: 0x1086c00010875},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ff, match64: 0x00000000, model64: 0x108750001087e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1200, match64: 0x00000000, model64: 0x1087e00010885},
		modelTuple{type64: 0x2700000027, matchRI: 0x1201, match64: 0x00000000, model64: 0x108850001088e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1202, match64: 0x00000000, model64: 0x1088e00010895},
		modelTuple{type64: 0x2700000027, matchRI: 0x1203, match64: 0x00000000, model64: 0x108950001089c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1204, match64: 0x00000000, model64: 0x1089c000108a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1205, match64: 0x00000000, model64: 0x108a4000108b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1206, match64: 0x00000000, model64: 0x108b0000108b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1207, match64: 0x00000000, model64: 0x108b8000108bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1208, match64: 0x00000000, model64: 0x108bf000108cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1209, match64: 0x00000000, model64: 0x108cc000108d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x120a, match64: 0x00000000, model64: 0x108d5000108de},
		modelTuple{type64: 0x2700000027, matchRI: 0x120b, match64: 0x00000000, model64: 0x108de000108ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x120c, match64: 0x00000000, model64: 0x108ec000108f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x120d, match64: 0x00000000, model64: 0x4a6b00004a6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x120e, match64: 0x00000000, model64: 0x79ea000079ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x108f4000108fe, model64: 0x108fe00010900},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1090000010906, model64: 0x1090600010909},
		modelTuple{type64: 0x2700000027, matchRI: 0x120f, match64: 0x00000000, model64: 0x109090001090c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1210, match64: 0x00000000, model64: 0x1090c00010913},
		modelTuple{type64: 0x2700000027, matchRI: 0x1211, match64: 0x00000000, model64: 0x1091300010915},
		modelTuple{type64: 0x2700000027, matchRI: 0x1212, match64: 0x00000000, model64: 0x1091500010917},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1091700010920, model64: 0x1092000010923},
		modelTuple{type64: 0x2700000027, matchRI: 0x1213, match64: 0x00000000, model64: 0xfe1e0000fe20},
		modelTuple{type64: 0x2700000027, matchRI: 0x1214, match64: 0x00000000, model64: 0x1091500010917},
		modelTuple{type64: 0x2700000027, matchRI: 0x1215, match64: 0x00000000, model64: 0x1092300010929},
		modelTuple{type64: 0x2700000027, matchRI: 0x1216, match64: 0x00000000, model64: 0x108fe00010900},
		modelTuple{type64: 0x2700000027, matchRI: 0x1217, match64: 0x00000000, model64: 0x1091300010915},
		modelTuple{type64: 0x2700000027, matchRI: 0x1218, match64: 0x00000000, model64: 0x109290001092d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1219, match64: 0x00000000, model64: 0x1092d0001092f},
		modelTuple{type64: 0x2700000027, matchRI: 0x121a, match64: 0x00000000, model64: 0x1092f00010931},
		modelTuple{type64: 0x2700000027, matchRI: 0x121b, match64: 0x00000000, model64: 0x1093100010939},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1093900010941, model64: 0x109410001094a},
		modelTuple{type64: 0x2700000027, matchRI: 0x121c, match64: 0x00000000, model64: 0x1094a0001094d},
		modelTuple{type64: 0x2700000027, matchRI: 0x121d, match64: 0x00000000, model64: 0x1094d00010950},
		modelTuple{type64: 0x2700000027, matchRI: 0x121e, match64: 0x00000000, model64: 0x1095000010953},
		modelTuple{type64: 0x2700000027, matchRI: 0x121f, match64: 0x00000000, model64: 0x1095300010956},
		modelTuple{type64: 0x2700000027, matchRI: 0x1220, match64: 0x00000000, model64: 0x1095600010959},
		modelTuple{type64: 0x2700000027, matchRI: 0x1221, match64: 0x00000000, model64: 0x1095900010960},
		modelTuple{type64: 0x2700000027, matchRI: 0x1222, match64: 0x00000000, model64: 0x1096000010967},
		modelTuple{type64: 0x2700000027, matchRI: 0x1223, match64: 0x00000000, model64: 0x109670001096e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1224, match64: 0x00000000, model64: 0x1096e00010975},
		modelTuple{type64: 0x2700000027, matchRI: 0x1225, match64: 0x00000000, model64: 0x109750001097c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1226, match64: 0x00000000, model64: 0x1097c00010984},
		modelTuple{type64: 0x2700000027, matchRI: 0x1227, match64: 0x00000000, model64: 0x109840001098b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1228, match64: 0x00000000, model64: 0x1098b00010997},
		modelTuple{type64: 0x2700000027, matchRI: 0x1229, match64: 0x00000000, model64: 0x10997000109a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x122a, match64: 0x00000000, model64: 0x109a2000109a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x122b, match64: 0x00000000, model64: 0x109a5000109a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x122c, match64: 0x00000000, model64: 0x109a7000109aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109aa000109b1, model64: 0x109b1000109b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109b9000109c0, model64: 0x109c0000109c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109c7000109cd, model64: 0x109cd000109cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109cf000109d5, model64: 0x109d5000109dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109dc000109e2, model64: 0x699d000069a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109e2000109e8, model64: 0x109e8000109f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109f2000109f8, model64: 0x109f800010a02},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a0200010a08, model64: 0x10a0800010a10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a1000010a16, model64: 0x10a1600010a1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a1f00010a25, model64: 0x10a2500010a2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x122d, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x122e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x122f, match64: 0x00000000, model64: 0x10a2d00010a37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a3700010a43, model64: 0x10a4300010a54},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x10a5400010a5f, model64: 0x10a5f00010a6b},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x10a6b00010a75, model64: 0x10a7500010a7f},
		modelTuple{type64: 0x38400000391, matchRI: 0x1230, match64: 0x00000000, model64: 0x10a7f00010a8f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1231, match64: 0x00000000, model64: 0x10a8f00010a97},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1232, match64: 0x00000000, model64: 0x10a9700010a9e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1233, match64: 0x00000000, model64: 0x10a9e00010aa2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1234, match64: 0x00000000, model64: 0x10aa200010aa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1235, match64: 0x00000000, model64: 0x10aa500010ab1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1236, match64: 0x00000000, model64: 0x10ab100010ab8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1237, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x1238, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10abe00010ac4, model64: 0x10ac400010acf},
		modelTuple{type64: 0x2700000027, matchRI: 0x123a, match64: 0x00000000, model64: 0x10acf00010ad7},
		modelTuple{type64: 0x2700000027, matchRI: 0x123b, match64: 0x00000000, model64: 0x10ad700010ae0},
		modelTuple{type64: 0x2700000027, matchRI: 0x123c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x123f, match64: 0x00000000, model64: 0x10aeb00010af3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1240, match64: 0x00000000, model64: 0x10af300010afc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1241, match64: 0x00000000, model64: 0x10afc00010b01},
		modelTuple{type64: 0x2700000027, matchRI: 0x1242, match64: 0x00000000, model64: 0x10b0100010b09},
		modelTuple{type64: 0x2700000027, matchRI: 0x1243, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b0900010b13, model64: 0x10b1300010b1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1244, match64: 0x00000000, model64: 0x10b1a00010b22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1245, match64: 0x00000000, model64: 0x10b2200010b2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1246, match64: 0x00000000, model64: 0x10b2d00010b34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1247, match64: 0x00000000, model64: 0x10b3400010b38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b3800010b44, model64: 0x6c0a00006c10},
		modelTuple{type64: 0x2700000027, matchRI: 0x1248, match64: 0x00000000, model64: 0x10b4400010b4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1249, match64: 0x00000000, model64: 0x10b4c00010b52},
		modelTuple{type64: 0x2700000027, matchRI: 0x124a, match64: 0x00000000, model64: 0x10b4c00010b52},
		modelTuple{type64: 0x2700000027, matchRI: 0x124b, match64: 0x00000000, model64: 0x10b5200010b57},
		modelTuple{type64: 0x2700000027, matchRI: 0x124c, match64: 0x00000000, model64: 0x10b5700010b5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x124d, match64: 0x00000000, model64: 0x10b5700010b5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x124e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b6b00010b75, model64: 0x10b7500010b7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b7f00010b88, model64: 0x10b8800010b91},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b9100010b99, model64: 0x10b9900010b9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b9e00010ba7, model64: 0x10ba700010bad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10bad00010bb5, model64: 0x10bb500010bba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10bba00010bc1, model64: 0x10bc100010bc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10bc400010bd2, model64: 0x10bd200010bdd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10bdd00010beb, model64: 0x10beb00010bf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1250, match64: 0x00000000, model64: 0x10bf900010c06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c0600010c11, model64: 0x74e2000074ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c1100010c1f, model64: 0x10c1f00010c2a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10c2a00010c35, model64: 0x10c3500010c3d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10c3d00010c43, model64: 0x10c4300010c46},
		modelTuple{type64: 0x2700000027, matchRI: 0x1251, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1253, match64: 0x00000000, model64: 0x10c4c00010c53},
		modelTuple{type64: 0x2700000027, matchRI: 0x1254, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c5300010c5a, model64: 0x10c5a00010c61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1255, match64: 0x00000000, model64: 0x10c6100010c68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c6800010c74, model64: 0x10c7400010c80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c8000010c8a, model64: 0x10c8a00010c94},
		modelTuple{type64: 0x2700000027, matchRI: 0x1256, match64: 0x00000000, model64: 0x10c9400010c9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1257, match64: 0x00000000, model64: 0x10c9c00010ca4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1258, match64: 0x00000000, model64: 0x10ca400010caf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1259, match64: 0x00000000, model64: 0x10caf00010cb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x125a, match64: 0x00000000, model64: 0x10cb700010cc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x125b, match64: 0x00000000, model64: 0x10cc000010cc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x125c, match64: 0x00000000, model64: 0x10cc700010ccf},
		modelTuple{type64: 0x2700000027, matchRI: 0x125d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x125e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10ccf00010cda, model64: 0x10cda00010ce6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10ce600010cf6, model64: 0x10cf600010cfe},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x125f, match64: 0x00000000, model64: 0x10cfe00010d07},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x10d0e00010d18},
		modelTuple{type64: 0x2700000027, matchRI: 0x1262, match64: 0x00000000, model64: 0x10d1f00010d29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1263, match64: 0x00000000, model64: 0x10d2900010d3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1265, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x6c0000006c5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x10d5000010d56},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x126a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xae980000aead, matchRI: -0x0001, match64: 0x10d6700010d78, model64: 0x10d7800010d83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10d8300010d89, model64: 0x10d8300010d89},
		modelTuple{type64: 0x2700000027, matchRI: 0x126c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x126e, match64: 0x00000000, model64: 0x10d8f00010d93},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x126f, match64: 0x00000000, model64: 0x10d9300010da0},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10da000010da9, model64: 0x10da900010db6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1270, match64: 0x00000000, model64: 0x10db600010dc3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1271, match64: 0x00000000, model64: 0x10dc300010dd0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1272, match64: 0x00000000, model64: 0x10dd000010dde},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10dde00010de6, model64: 0x10de600010deb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10deb00010df1, model64: 0x10df100010dff},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1273, match64: 0x00000000, model64: 0x10dff00010e0b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1274, match64: 0x00000000, model64: 0x10e0b00010e12},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1275, match64: 0x00000000, model64: 0x10e1200010e1c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1276, match64: 0x00000000, model64: 0x10e1c00010e27},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10e2700010e2f, model64: 0x10e2f00010e3b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10e3b00010e43, model64: 0x10e4300010e49},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1277, match64: 0x00000000, model64: 0x10e4900010e59},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10e5900010e61, model64: 0x10e6100010e6c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10e6c00010e74, model64: 0x10e7400010e80},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10e8000010e88, model64: 0x10e8800010e98},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1278, match64: 0x00000000, model64: 0x10e9800010ea3},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10ea300010eab, model64: 0x10eab00010eb5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10eb500010ec2, model64: 0x10ec200010ece},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1279, match64: 0x00000000, model64: 0x10ece00010ed7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x127a, match64: 0x00000000, model64: 0x10ed700010ee0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x127b, match64: 0x00000000, model64: 0x10ee000010ee6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x127c, match64: 0x00000000, model64: 0x10ee600010ef1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x127d, match64: 0x00000000, model64: 0x10ef100010ef8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x127e, match64: 0x00000000, model64: 0x10ef800010efe},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10efe00010f06, model64: 0x10f0600010f11},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x127f, match64: 0x00000000, model64: 0x10f1100010f1d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1280, match64: 0x00000000, model64: 0x10f1d00010f27},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1281, match64: 0x00000000, model64: 0x10f2700010f32},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1282, match64: 0x00000000, model64: 0x10f3200010f3a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1283, match64: 0x00000000, model64: 0x10f3a00010f41},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1284, match64: 0x00000000, model64: 0x10f4100010f48},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1285, match64: 0x00000000, model64: 0x10f4800010f4e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1286, match64: 0x00000000, model64: 0x10f4e00010f55},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1287, match64: 0x00000000, model64: 0x10f5500010f5c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1288, match64: 0x00000000, model64: 0x10f5c00010f67},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10f6700010f6e, model64: 0x10f6e00010f75},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1289, match64: 0x00000000, model64: 0x10f7500010f7c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x128a, match64: 0x00000000, model64: 0x10f7c00010f8f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x128b, match64: 0x00000000, model64: 0x10f8f00010f9e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x128c, match64: 0x00000000, model64: 0x10f9e00010faa},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x128d, match64: 0x00000000, model64: 0x10faa00010fb5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x128e, match64: 0x00000000, model64: 0x10fb500010fc8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x128f, match64: 0x00000000, model64: 0x10fc800010fd7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1290, match64: 0x00000000, model64: 0x10fd700010fe5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1291, match64: 0x00000000, model64: 0x10fe500010feb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1292, match64: 0x00000000, model64: 0x10feb00010ff1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10ff100010ff8, model64: 0x10ff800011007},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1293, match64: 0x00000000, model64: 0x110070001100c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1100c00011013, model64: 0x1101300011019},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x110190001101f, model64: 0x1101f00011024},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1294, match64: 0x00000000, model64: 0x1102400011034},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1295, match64: 0x00000000, model64: 0x1103400011043},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x110430001104a, model64: 0x1104a00011055},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1105500011063, model64: 0x110630001106d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1296, match64: 0x00000000, model64: 0x1106d00011081},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1297, match64: 0x00000000, model64: 0x1108100011090},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1298, match64: 0x00000000, model64: 0x10f3a00010f41},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1299, match64: 0x00000000, model64: 0x1109000011096},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x129a, match64: 0x00000000, model64: 0x11096000110a4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x129b, match64: 0x00000000, model64: 0x110a4000110b2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x129c, match64: 0x00000000, model64: 0x110b2000110c3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x129d, match64: 0x00000000, model64: 0x110c3000110da},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x129e, match64: 0x00000000, model64: 0x110da000110ed},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x129f, match64: 0x00000000, model64: 0x110ed000110ff},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12a0, match64: 0x00000000, model64: 0x110ff0001110c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12a1, match64: 0x00000000, model64: 0x1110c00011116},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12a2, match64: 0x00000000, model64: 0x1111600011122},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x111220001112a, model64: 0x1112a00011137},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12a3, match64: 0x00000000, model64: 0x1113700011146},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12a4, match64: 0x00000000, model64: 0x1114600011154},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12a5, match64: 0x00000000, model64: 0x111540001115d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1115d00011165, model64: 0x1116500011181},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1118100011188, model64: 0x11188000111a2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x111a2000111a9, model64: 0x111a9000111bf},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x111bf000111c8, model64: 0x111c8000111da},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x111da000111e1, model64: 0x111e1000111f6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12a6, match64: 0x00000000, model64: 0x111f600011203},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12a7, match64: 0x00000000, model64: 0x112030001120d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12a8, match64: 0x00000000, model64: 0x1120d0001121f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12a9, match64: 0x00000000, model64: 0x1121f00011230},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12aa, match64: 0x00000000, model64: 0x112300001123b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12ab, match64: 0x00000000, model64: 0x1123b00011243},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x112430001124b, model64: 0x1124b00011252},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12ac, match64: 0x00000000, model64: 0x112520001125f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1125f00011267, model64: 0x1126700011272},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x112720001127a, model64: 0x10ef100010ef8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12ad, match64: 0x00000000, model64: 0x67b6000067b9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12ae, match64: 0x00000000, model64: 0x1127a0001127d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12af, match64: 0x00000000, model64: 0x1127d00011286},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12b0, match64: 0x00000000, model64: 0x112030001120d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x112860001128e, model64: 0x1128e00011296},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x112960001129e, model64: 0x1114600011154},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12b1, match64: 0x00000000, model64: 0x1129e000112ab},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12b2, match64: 0x00000000, model64: 0x112ab000112b7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12b3, match64: 0x00000000, model64: 0x112b7000112bd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12b4, match64: 0x00000000, model64: 0x112bd000112cb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12b5, match64: 0x00000000, model64: 0x112cb000112d9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12b6, match64: 0x00000000, model64: 0x112d9000112ee},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12b7, match64: 0x00000000, model64: 0x112ee000112f8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12b8, match64: 0x00000000, model64: 0x112f800011303},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12b9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1130300011309, model64: 0x1130900011313},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1131300011319, model64: 0x1131900011323},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ba, match64: 0x00000000, model64: 0x6ac000006ac3},
		modelTuple{type64: 0x2700000027, matchRI: 0x12bb, match64: 0x00000000, model64: 0x1007500010077},
		modelTuple{type64: 0x2700000027, matchRI: 0x12bc, match64: 0x00000000, model64: 0x17490000174b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12bd, match64: 0x00000000, model64: 0x1132300011326},
		modelTuple{type64: 0x2700000027, matchRI: 0x12be, match64: 0x00000000, model64: 0x176000001762},
		modelTuple{type64: 0x2700000027, matchRI: 0x12bf, match64: 0x00000000, model64: 0x1132600011328},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c0, match64: 0x00000000, model64: 0x1091300010915},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42b00000432, model64: 0x42b00000432},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x113280001132d, model64: 0x1132d00011335},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c1, match64: 0x00000000, model64: 0x113350001133b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1133b00011340, model64: 0x113400001134a},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c2, match64: 0x00000000, model64: 0x1134a00011350},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c3, match64: 0x00000000, model64: 0x685300006855},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c4, match64: 0x00000000, model64: 0x1135000011357},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c5, match64: 0x00000000, model64: 0x113570001135f},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c6, match64: 0x00000000, model64: 0x1135f00011366},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c7, match64: 0x00000000, model64: 0xff480000ff4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c8, match64: 0x00000000, model64: 0x113660001136d},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c9, match64: 0x00000000, model64: 0x1136d00011373},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ca, match64: 0x00000000, model64: 0x113730001137b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12cb, match64: 0x00000000, model64: 0x1137b00011382},
		modelTuple{type64: 0x2700000027, matchRI: 0x12cc, match64: 0x00000000, model64: 0x1138200011389},
		modelTuple{type64: 0x2700000027, matchRI: 0x12cd, match64: 0x00000000, model64: 0xfe020000fe05},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ce, match64: 0x00000000, model64: 0x1138900011392},
		modelTuple{type64: 0x2700000027, matchRI: 0x12cf, match64: 0x00000000, model64: 0x113920001139e},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d0, match64: 0x00000000, model64: 0x1139e000113a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d1, match64: 0x00000000, model64: 0x113a5000113ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d2, match64: 0x00000000, model64: 0x113ac000113b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d3, match64: 0x00000000, model64: 0x113b2000113b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d4, match64: 0x00000000, model64: 0x113b9000113c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d5, match64: 0x00000000, model64: 0x113c0000113cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d6, match64: 0x00000000, model64: 0x113cc000113d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d7, match64: 0x00000000, model64: 0x113d3000113e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d8, match64: 0x00000000, model64: 0x113e0000113e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d9, match64: 0x00000000, model64: 0x113e9000113f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x12da, match64: 0x00000000, model64: 0x113f3000113ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x12db, match64: 0x00000000, model64: 0xa0800000a082},
		modelTuple{type64: 0x2700000027, matchRI: 0x12dc, match64: 0x00000000, model64: 0x113ff00011401},
		modelTuple{type64: 0x2700000027, matchRI: 0x12dd, match64: 0x00000000, model64: 0xfe700000fe73},
		modelTuple{type64: 0x2700000027, matchRI: 0x12de, match64: 0x00000000, model64: 0xabd80000abda},
		modelTuple{type64: 0x2700000027, matchRI: 0x12df, match64: 0x00000000, model64: 0x1140100011404},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e0, match64: 0x00000000, model64: 0x114040001140b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e1, match64: 0x00000000, model64: 0x1140b00011413},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e2, match64: 0x00000000, model64: 0x114130001141b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e3, match64: 0x00000000, model64: 0x1141b00011428},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e4, match64: 0x00000000, model64: 0x114280001142f},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e5, match64: 0x00000000, model64: 0x1142f00011435},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e6, match64: 0x00000000, model64: 0x114350001143b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e7, match64: 0x00000000, model64: 0x1143b00011444},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e8, match64: 0x00000000, model64: 0x114440001144b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e9, match64: 0x00000000, model64: 0x1144b00011457},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ea, match64: 0x00000000, model64: 0x114570001145a},
		modelTuple{type64: 0x2700000027, matchRI: 0x12eb, match64: 0x00000000, model64: 0x1145a0001145c},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ec, match64: 0x00000000, model64: 0x1145c00011462},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ed, match64: 0x00000000, model64: 0x114620001146b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ee, match64: 0x00000000, model64: 0x1146b00011471},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ef, match64: 0x00000000, model64: 0x114710001147a},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f0, match64: 0x00000000, model64: 0x1147a00011482},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f1, match64: 0x00000000, model64: 0xa0010000a007},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f2, match64: 0x00000000, model64: 0x114820001148b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f3, match64: 0x00000000, model64: 0x171c0000171e},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f4, match64: 0x00000000, model64: 0x1148b00011491},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f5, match64: 0x00000000, model64: 0x1149100011495},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f6, match64: 0x00000000, model64: 0x114950001149e},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12f8, match64: 0x00000000, model64: 0x1149e000114a8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12f9, match64: 0x00000000, model64: 0x114a8000114b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x114b8000114c0, model64: 0x114c0000114c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x114c3000114cb, model64: 0x114cb000114d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fa, match64: 0x00000000, model64: 0x114d0000114d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fb, match64: 0x00000000, model64: 0xfe1e0000fe20},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x114d7000114df, model64: 0x114df000114ea},
		modelTuple{type64: 0x6c9000006d3, matchRI: -0x0001, match64: 0x114ea000114f1, model64: 0x114f1000114fc},
		modelTuple{type64: 0x6c9000006d3, matchRI: -0x0001, match64: 0x114fc00011508, model64: 0x1150800011515},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x12fc, match64: 0x00000000, model64: 0x1151500011527},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x12fd, match64: 0x00000000, model64: 0x1152700011539},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x12fe, match64: 0x00000000, model64: 0x1153900011548},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x12ff, match64: 0x00000000, model64: 0x115480001155d},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x1300, match64: 0x00000000, model64: 0x1155d0001156e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1301, match64: 0x00000000, model64: 0xee400000eea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1302, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1303, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x115740001157d, model64: 0x1157d00011587},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1158700011591, model64: 0x115910001159c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1159c000115a5, model64: 0x115a5000115b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x115b1000115be, model64: 0x115b1000115be},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1305, match64: 0x00000000, model64: 0x115be000115ca},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1306, match64: 0x00000000, model64: 0x115ca000115d3},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x115d3000115db, model64: 0x115db000115e7},
		modelTuple{type64: 0x38400000391, matchRI: 0x1308, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x115ee000115f3, model64: 0x115ee000115f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1309, match64: 0x00000000, model64: 0x115f3000115fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x130a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x115ff00011607},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x130d, match64: 0x00000000, model64: 0x4a6b00004a6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1160d00011611, model64: 0x1161100011615},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1161500011619, model64: 0x116190001161e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1161e00011622, model64: 0x1162200011629},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116290001162d, model64: 0x1162d00011633},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116330001163c, model64: 0x1163c00011645},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1164500011649, model64: 0x1164900011651},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1165100011655, model64: 0x116550001165b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1165b0001165f, model64: 0x1165f00011666},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116660001166a, model64: 0x1166a0001166f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1166f00011673, model64: 0x116730001167a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x130e, match64: 0x00000000, model64: 0x1167a00011683},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x130f, match64: 0x00000000, model64: 0x1168300011688},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1168800011693, model64: 0x116930001169e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1310, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116a6000116ae, model64: 0x116ae000116bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116bf000116c7, model64: 0x116c7000116cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116cd000116d5, model64: 0x116d5000116e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116e4000116ec, model64: 0x116ec000116f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116f7000116ff, model64: 0x116ff0001170c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1170c00011714, model64: 0x117140001172d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1172d00011735, model64: 0x1173500011744},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117440001174c, model64: 0x1174c00011756},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117560001175e, model64: 0x1175e0001176b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1176b00011773, model64: 0x1177300011782},
		modelTuple{type64: 0x2700000027, matchRI: 0x1312, match64: 0x00000000, model64: 0x117820001178e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1178e00011796, model64: 0x11796000117a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117a4000117ac, model64: 0x117ac000117b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117b8000117c0, model64: 0x117c0000117cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117cf000117d7, model64: 0x117d7000117e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117e8000117f0, model64: 0x117f0000117f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117f900011803, model64: 0x1180300011810},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118100001181a, model64: 0x1181a0001182f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1182f00011839, model64: 0x1183900011845},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118450001184f, model64: 0x1184f00011869},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1186900011871, model64: 0x1187100011877},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118770001187f, model64: 0x1187f00011887},
		modelTuple{type64: 0x2700000027, matchRI: 0x1313, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1189b000118a5, model64: 0x42b00000432},
		modelTuple{type64: 0x2700000027, matchRI: 0x1317, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118ab000118b6, model64: 0x118b6000118c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x131a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x131b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x118cf000118d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x131e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x131f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x118df000118e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118ed000118f6, model64: 0x118ed000118f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1323, match64: 0x00000000, model64: 0x118fb00011903},
		modelTuple{type64: 0x2700000027, matchRI: 0x1324, match64: 0x00000000, model64: 0x4a7e00004a85},
		modelTuple{type64: 0x2700000027, matchRI: 0x1325, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1326, match64: 0x00000000, model64: 0x119030001190c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1327, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1328, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x132a, match64: 0x00000000, model64: 0x1191c00011928},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1192800011935, model64: 0x1192800011935},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1193500011943, model64: 0x1193500011943},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1194300011951, model64: 0x1194300011951},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1195800011965, model64: 0x1196500011975},
		modelTuple{type64: 0x2700000027, matchRI: 0x132c, match64: 0x00000000, model64: 0x119750001197e},
		modelTuple{type64: 0x2700000027, matchRI: 0x132d, match64: 0x00000000, model64: 0x1197e0001198a},
		modelTuple{type64: 0x2700000027, matchRI: 0x132e, match64: 0x00000000, model64: 0x1198a00011993},
		modelTuple{type64: 0x2700000027, matchRI: 0x132f, match64: 0x00000000, model64: 0x11993000119a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x119a5000119bb, model64: 0x119bb000119c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x119c9000119d2, model64: 0x119d2000119dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1330, match64: 0x00000000, model64: 0x119dc000119ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x119ed000119fe, model64: 0x119fe00011a10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a1000011a19, model64: 0x11a1900011a28},
		modelTuple{type64: 0x2700000027, matchRI: 0x1331, match64: 0x00000000, model64: 0x11a2800011a35},
		modelTuple{type64: 0x24700000251, matchRI: 0x1332, match64: 0x00000000, model64: 0x11a3500011a3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1333, match64: 0x00000000, model64: 0x11a3d00011a49},
		modelTuple{type64: 0x24700000251, matchRI: 0x1334, match64: 0x00000000, model64: 0x11a4900011a53},
		modelTuple{type64: 0x2700000027, matchRI: 0x1335, match64: 0x00000000, model64: 0x11a5300011a61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1336, match64: 0x00000000, model64: 0x11a5300011a61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1337, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a6100011a6a, model64: 0x11a6100011a6a},
		modelTuple{type64: 0x24700000251, matchRI: 0x1338, match64: 0x00000000, model64: 0x11a6a00011a72},
		modelTuple{type64: 0x24700000251, matchRI: 0x1339, match64: 0x00000000, model64: 0x11a7200011a80},
		modelTuple{type64: 0x24700000251, matchRI: 0x133a, match64: 0x00000000, model64: 0x11a8000011a89},
		modelTuple{type64: 0x2700000027, matchRI: 0x133b, match64: 0x00000000, model64: 0x11a8900011a96},
		modelTuple{type64: 0x2700000027, matchRI: 0x133c, match64: 0x00000000, model64: 0x11a9600011a9f},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x11a9f00011aa7, model64: 0x11a9f00011aa7},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x11aa700011ab0, model64: 0x11aa700011ab0},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x11ab000011ab5, model64: 0x11ab500011aba},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x11aba00011ac3, model64: 0x11aba00011ac3},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x11ac300011aca, model64: 0x11ac300011aca},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x11aca00011ad1, model64: 0x11aca00011ad1},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x11ad100011ad8, model64: 0x11ad100011ad8},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x11ad800011ae0, model64: 0x11ad800011ae0},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x11ae000011ae8, model64: 0x11ae000011ae8},
		modelTuple{type64: 0x24700000251, matchRI: 0x133d, match64: 0x00000000, model64: 0x11ae800011af2},
		modelTuple{type64: 0x24700000251, matchRI: 0x133e, match64: 0x00000000, model64: 0x11af200011afa},
		modelTuple{type64: 0x24700000251, matchRI: 0x133f, match64: 0x00000000, model64: 0x11afa00011b02},
		modelTuple{type64: 0x24700000251, matchRI: 0x1340, match64: 0x00000000, model64: 0x11b0200011b0c},
		modelTuple{type64: 0x24700000251, matchRI: 0x1341, match64: 0x00000000, model64: 0x11b0c00011b13},
		modelTuple{type64: 0x24700000251, matchRI: 0x1342, match64: 0x00000000, model64: 0x11b1300011b1c},
		modelTuple{type64: 0x24700000251, matchRI: 0x1343, match64: 0x00000000, model64: 0x11b1c00011b23},
		modelTuple{type64: 0x24700000251, matchRI: 0x1344, match64: 0x00000000, model64: 0x11b2300011b2c},
		modelTuple{type64: 0x24700000251, matchRI: 0x1345, match64: 0x00000000, model64: 0x11b2c00011b32},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x11b3200011b39, model64: 0x11b3200011b39},
		modelTuple{type64: 0x24700000251, matchRI: 0x1346, match64: 0x00000000, model64: 0x11b3900011b3f},
		modelTuple{type64: 0x24700000251, matchRI: 0x1347, match64: 0x00000000, model64: 0x11b3f00011b47},
		modelTuple{type64: 0x24700000251, matchRI: 0x1348, match64: 0x00000000, model64: 0x11b4700011b53},
		modelTuple{type64: 0x24700000251, matchRI: 0x1349, match64: 0x00000000, model64: 0x11b5300011b5c},
		modelTuple{type64: 0x24700000251, matchRI: 0x134a, match64: 0x00000000, model64: 0x11b5c00011b65},
		modelTuple{type64: 0x24700000251, matchRI: 0x134b, match64: 0x00000000, model64: 0x11b6500011b6c},
		modelTuple{type64: 0x24700000251, matchRI: 0x134c, match64: 0x00000000, model64: 0x11b6c00011b78},
		modelTuple{type64: 0x24700000251, matchRI: 0x134d, match64: 0x00000000, model64: 0x11b7800011b80},
		modelTuple{type64: 0x24700000251, matchRI: 0x134e, match64: 0x00000000, model64: 0x11afa00011b02},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x11b8000011b8c, model64: 0x11b8c00011b99},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x11b9900011ba3, model64: 0x11ba300011bae},
		modelTuple{type64: 0x24700000251, matchRI: 0x134f, match64: 0x00000000, model64: 0x11bae00011bb3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1355, match64: 0x00000000, model64: 0x4fa900004faf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1356, match64: 0x00000000, model64: 0x11bd000011bd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1357, match64: 0x00000000, model64: 0x11bd700011bda},
		modelTuple{type64: 0x2700000027, matchRI: 0x1358, match64: 0x00000000, model64: 0x11bda00011be1},
		modelTuple{type64: 0x2700000027, matchRI: 0x135a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x135b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x135f, match64: 0x00000000, model64: 0x4f1600004f1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11bf700011bfd, model64: 0x11bfd00011c04},
		modelTuple{type64: 0x2700000027, matchRI: 0x1360, match64: 0x00000000, model64: 0x11c0400011c0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c0a00011c13, model64: 0x11c1300011c1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c2300011c2a, model64: 0x11c2a00011c31},
		modelTuple{type64: 0x2700000027, matchRI: 0x1362, match64: 0x00000000, model64: 0x11c3100011c3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1363, match64: 0x00000000, model64: 0x11c3a00011c44},
		modelTuple{type64: 0x2700000027, matchRI: 0x1364, match64: 0x00000000, model64: 0x11c4400011c4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1365, match64: 0x00000000, model64: 0x11c4d00011c57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c5700011c5b, model64: 0x11c5b00011c60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c6000011c66, model64: 0x11c6000011c66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c6600011c6c, model64: 0x11c6600011c6c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c6c00011c71, model64: 0x11c7100011c77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1366, match64: 0x00000000, model64: 0x11c7700011c80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c8600011c8f, model64: 0x11c8f00011c94},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1368, match64: 0x00000000, model64: 0x11c9400011c9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1369, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x6c9000006d3, matchRI: -0x0001, match64: 0x11ca500011cac, model64: 0x11cac00011cb2},
		modelTuple{type64: 0x6c9000006d3, matchRI: -0x0001, match64: 0x11cb200011cb8, model64: 0x11cb800011cbf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11cc400011cca, model64: 0xe9610000e964},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11cca00011cd0, model64: 0x11cd000011cd4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11cd400011cda, model64: 0x11cda00011cdf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11cdf00011ce5, model64: 0x11ce500011cec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11cec00011cf2, model64: 0x11cf200011cfb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11cfb00011d01, model64: 0x11d0100011d05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d0500011d0b, model64: 0x11d0b00011d13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d1300011d19, model64: 0xfd140000fd19},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d1900011d1f, model64: 0x11d1f00011d28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d2800011d2e, model64: 0x11d2e00011d32},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d3200011d38, model64: 0x11d3800011d44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d4400011d4a, model64: 0x11d4a00011d4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d4f00011d55, model64: 0x11d5500011d5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d5c00011d62, model64: 0x11d6200011d67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d6700011d6f, model64: 0x11d6f00011d76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d7600011d7d, model64: 0x11d7d00011d84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d8400011d8a, model64: 0x11d8a00011d95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d9500011d9b, model64: 0xd57c0000d582},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d9b00011da1, model64: 0x11da100011daa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11daa00011db2, model64: 0x11db200011db6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11db600011dbc, model64: 0x11dbc00011dc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x136c, match64: 0x00000000, model64: 0x11dc400011dcd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11dcd00011dd3, model64: 0x11dd300011ddb},
		modelTuple{type64: 0x2700000027, matchRI: 0x136d, match64: 0x00000000, model64: 0x11ddb00011dde},
		modelTuple{type64: 0x2700000027, matchRI: 0x136e, match64: 0x00000000, model64: 0x79ea000079ed},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1372, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11deb00011df0, model64: 0x11df000011dfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1373, match64: 0x00000000, model64: 0x11dfa00011e05},
		modelTuple{type64: 0x38400000391, matchRI: 0x1374, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x137a, match64: 0x00000000, model64: 0x11e1c00011e23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11e2300011e2b, model64: 0x11e2300011e2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11e2b00011e34, model64: 0x11e2b00011e34},
		modelTuple{type64: 0x2700000027, matchRI: 0x137b, match64: 0x00000000, model64: 0x11e3400011e39},
		modelTuple{type64: 0x2700000027, matchRI: 0x137c, match64: 0x00000000, model64: 0x1c6c00001c6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x137f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1380, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x57d9000057e2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1384, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1385, match64: 0x00000000, model64: 0x11e4b00011e59},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1388, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1389, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x138b, match64: 0x00000000, model64: 0x11e6700011e6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x138d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x138e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1390, match64: 0x00000000, model64: 0x11e7700011e83},
		modelTuple{type64: 0x2700000027, matchRI: 0x1391, match64: 0x00000000, model64: 0x11e8300011e8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1392, match64: 0x00000000, model64: 0x11e8d00011e98},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1393, match64: 0x00000000, model64: 0x11e9800011ea0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1394, match64: 0x00000000, model64: 0x11ea000011eae},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1395, match64: 0x00000000, model64: 0x11eae00011ebd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1396, match64: 0x00000000, model64: 0x11ebd00011ec7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1397, match64: 0x00000000, model64: 0x11ec700011ed8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1398, match64: 0x00000000, model64: 0x11ed800011ee8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1399, match64: 0x00000000, model64: 0x11ee800011ef7},
		modelTuple{type64: 0x2700000027, matchRI: 0x139a, match64: 0x00000000, model64: 0x11ef700011eff},
		modelTuple{type64: 0x2700000027, matchRI: 0x139b, match64: 0x00000000, model64: 0x11eff00011f0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x139c, match64: 0x00000000, model64: 0x11f0e00011f1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x139d, match64: 0x00000000, model64: 0x11f1b00011f23},
		modelTuple{type64: 0x2700000027, matchRI: 0x139e, match64: 0x00000000, model64: 0x11f2300011f2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x139f, match64: 0x00000000, model64: 0x11f2b00011f36},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a0, match64: 0x00000000, model64: 0x11f3600011f42},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a1, match64: 0x00000000, model64: 0x11f4200011f4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a2, match64: 0x00000000, model64: 0x11f4e00011f5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a3, match64: 0x00000000, model64: 0x11f5d00011f67},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a4, match64: 0x00000000, model64: 0x11f6700011f6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a5, match64: 0x00000000, model64: 0x11f6f00011f82},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13a6, match64: 0x00000000, model64: 0x11f8200011f8c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13a7, match64: 0x00000000, model64: 0x11f8c00011f98},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13a8, match64: 0x00000000, model64: 0x11f9800011fa6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13a9, match64: 0x00000000, model64: 0x11fa600011fac},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13aa, match64: 0x00000000, model64: 0x11fac00011fb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ab, match64: 0x00000000, model64: 0x11fb500011fc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ac, match64: 0x00000000, model64: 0x11fc300011fce},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ad, match64: 0x00000000, model64: 0x11fce00011fd6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13ae, match64: 0x00000000, model64: 0x11fd600011fde},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13af, match64: 0x00000000, model64: 0x11fde00011fed},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13b0, match64: 0x00000000, model64: 0x11fed00011ff5},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b1, match64: 0x00000000, model64: 0x11ff500011ffd},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b2, match64: 0x00000000, model64: 0x11ffd00011fff},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b3, match64: 0x00000000, model64: 0x11fff00012008},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b4, match64: 0x00000000, model64: 0x120080001200d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b5, match64: 0x00000000, model64: 0x1200d00012016},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b6, match64: 0x00000000, model64: 0x120160001201c},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b7, match64: 0x00000000, model64: 0x1201c00012025},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b8, match64: 0x00000000, model64: 0x120250001202c},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b9, match64: 0x00000000, model64: 0x1202c00012033},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13ba, match64: 0x00000000, model64: 0x1203300012040},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13bb, match64: 0x00000000, model64: 0x1204000012048},
		modelTuple{type64: 0x2700000027, matchRI: 0x13bc, match64: 0x00000000, model64: 0x8e8b00008e95},
		modelTuple{type64: 0x2700000027, matchRI: 0x13bd, match64: 0x00000000, model64: 0x120480001204f},
		modelTuple{type64: 0x2700000027, matchRI: 0x13be, match64: 0x00000000, model64: 0x1204f00012054},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13bf, match64: 0x00000000, model64: 0x120540001205c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13c0, match64: 0x00000000, model64: 0x1205c00012066},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c1, match64: 0x00000000, model64: 0x120660001206b},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c2, match64: 0x00000000, model64: 0xa55e0000a563},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x13c3, match64: 0x00000000, model64: 0x1206b00012074},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c4, match64: 0x00000000, model64: 0x1207400012079},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c5, match64: 0x00000000, model64: 0x1207900012080},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c6, match64: 0x00000000, model64: 0x1208000012088},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c7, match64: 0x00000000, model64: 0x120880001208e},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c8, match64: 0x00000000, model64: 0x1208e0001209d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c9, match64: 0x00000000, model64: 0x1209d000120b1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13ca, match64: 0x00000000, model64: 0x120b1000120c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x13cb, match64: 0x00000000, model64: 0x120c2000120c8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x13cf, match64: 0x00000000, model64: 0x120d5000120dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb88c0000b898, model64: 0xb88c0000b898},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x13d0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x120e5000120f0, model64: 0x120e5000120f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13d4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d5, match64: 0x00000000, model64: 0x120f0000120fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d6, match64: 0x00000000, model64: 0x120fd0001210c},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d7, match64: 0x00000000, model64: 0x1210c0001211b},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d8, match64: 0x00000000, model64: 0x1211b00012129},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1212900012133, model64: 0x121330001213d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1213d00012148, model64: 0x1214800012153},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121530001215c, model64: 0x121530001215c},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d9, match64: 0x00000000, model64: 0x1215c00012168},
		modelTuple{type64: 0x2700000027, matchRI: 0x13da, match64: 0x00000000, model64: 0x1216800012177},
		modelTuple{type64: 0x2700000027, matchRI: 0x13db, match64: 0x00000000, model64: 0x1217700012184},
		modelTuple{type64: 0x2700000027, matchRI: 0x13dc, match64: 0x00000000, model64: 0x1218400012192},
		modelTuple{type64: 0x24300000245, matchRI: 0x13dd, match64: 0x00000000, model64: 0x121920001219f},
		modelTuple{type64: 0x24300000245, matchRI: 0x13de, match64: 0x00000000, model64: 0x1219f000121a4},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x121a4000121ac, model64: 0x121ac000121be},
		modelTuple{type64: 0x24300000245, matchRI: 0x13df, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e1, match64: 0x00000000, model64: 0x121c1000121c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e2, match64: 0x00000000, model64: 0x121c9000121d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121d5000121df, model64: 0x121df000121e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e3, match64: 0x00000000, model64: 0x121e9000121f6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x121f6000121ff, model64: 0x121ff00012205},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e4, match64: 0x00000000, model64: 0x122050001220b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1221700012220},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1222600012230},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122340001223d, model64: 0x1223d00012247},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1224f00012255, model64: 0x122550001225c},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e9, match64: 0x00000000, model64: 0x1225c00012261},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1226100012269, model64: 0x1226900012272},
		modelTuple{type64: 0x2700000027, matchRI: 0x13eb, match64: 0x00000000, model64: 0x1227800012280},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ec, match64: 0x00000000, model64: 0x122800001228b},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ee, match64: 0x00000000, model64: 0x1229300012297},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ef, match64: 0x00000000, model64: 0x122970001229a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f0, match64: 0x00000000, model64: 0x1229a000122a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f1, match64: 0x00000000, model64: 0x122a6000122ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f2, match64: 0x00000000, model64: 0x122ae000122b6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13f3, match64: 0x00000000, model64: 0x122b6000122c4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13f4, match64: 0x00000000, model64: 0x122c4000122ce},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x122ce000122d5, model64: 0x122d5000122e1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x122e1000122e8, model64: 0x122e8000122ef},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13f5, match64: 0x00000000, model64: 0x122ef000122f4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13f6, match64: 0x00000000, model64: 0x122ef000122f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f9, match64: 0x00000000, model64: 0x122f4000122fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fa, match64: 0x00000000, model64: 0x122f4000122fc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ff, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1401, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1231b00012323, model64: 0x123230001232b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1232b00012333, model64: 0x123330001233b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1233b00012343, model64: 0x1234300012349},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1234900012351, model64: 0x1235100012358},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1235800012360, model64: 0x123600001236b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1236b00012373, model64: 0x123730001237a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1237a00012382, model64: 0x1238200012389},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1238900012391, model64: 0x123910001239c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1402, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1406, match64: 0x00000000, model64: 0x123ad000123b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1407, match64: 0x00000000, model64: 0x123ad000123b2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x140a, match64: 0x00000000, model64: 0x123be000123c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x140b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x140d, match64: 0x00000000, model64: 0x123ca000123d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x140e, match64: 0x00000000, model64: 0x123d6000123dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x140f, match64: 0x00000000, model64: 0x123dd000123e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1410, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1411, match64: 0x00000000, model64: 0x123e2000123eb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1412, match64: 0x00000000, model64: 0x123eb000123f6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1413, match64: 0x00000000, model64: 0x123f6000123ff},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x123ff00012409, model64: 0x1240900012415},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1414, match64: 0x00000000, model64: 0x1241500012420},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1415, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x2700000027, matchRI: 0x1416, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1242800012436},
		modelTuple{type64: 0x2700000027, matchRI: 0x1419, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x141a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x124510001245f, model64: 0x1245f00012466},
		modelTuple{type64: 0x2700000027, matchRI: 0x141d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x141e, match64: 0x00000000, model64: 0x124660001246d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1421, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1422, match64: 0x00000000, model64: 0x1247b00012484},
		modelTuple{type64: 0x2700000027, matchRI: 0x1423, match64: 0x00000000, model64: 0x1248400012488},
		modelTuple{type64: 0x2700000027, matchRI: 0x1424, match64: 0x00000000, model64: 0x124880001248e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1248e0001249a, model64: 0x1248e0001249a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1427, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1428, match64: 0x00000000, model64: 0x124a8000124af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x124af000124b7, model64: 0x124af000124b7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1429, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x142b, match64: 0x00000000, model64: 0x124be000124c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x142c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x142d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1430, match64: 0x00000000, model64: 0x124d1000124d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1431, match64: 0x00000000, model64: 0x124d9000124e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1432, match64: 0x00000000, model64: 0x124e6000124f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x124f300012501, model64: 0x125010001250f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1250f0001251a, model64: 0x1251a00012525},
		modelTuple{type64: 0x2700000027, matchRI: 0x1433, match64: 0x00000000, model64: 0x124d1000124d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1434, match64: 0x00000000, model64: 0x125250001252e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1252e00012537, model64: 0x1252e00012537},
		modelTuple{type64: 0x2700000027, matchRI: 0x1435, match64: 0x00000000, model64: 0x125370001253f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1436, match64: 0x00000000, model64: 0x1253f0001254a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1254a00012556, model64: 0x1254a00012556},
		modelTuple{type64: 0x2700000027, matchRI: 0x1437, match64: 0x00000000, model64: 0x125560001255e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1438, match64: 0x00000000, model64: 0x1255e00012566},
		modelTuple{type64: 0x2700000027, matchRI: 0x1439, match64: 0x00000000, model64: 0x1256600012573},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x125730001257d, model64: 0x1257d00012587},
		modelTuple{type64: 0x2700000027, matchRI: 0x143a, match64: 0x00000000, model64: 0x1258700012596},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x125960001259c, model64: 0x1259c000125a3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x143b, match64: 0x00000000, model64: 0x125a3000125b3},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x125b3000125c2, model64: 0x125c2000125d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x143d, match64: 0x00000000, model64: 0x125d5000125dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x143e, match64: 0x00000000, model64: 0x3c1000003c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x143f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1441, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1442, match64: 0x00000000, model64: 0x125e6000125ec},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x125f4000125fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1445, match64: 0x00000000, model64: 0x1260100012616},
		modelTuple{type64: 0x2700000027, matchRI: 0x1446, match64: 0x00000000, model64: 0x126160001261b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1447, match64: 0x00000000, model64: 0x1261b00012629},
		modelTuple{type64: 0x2700000027, matchRI: 0x1448, match64: 0x00000000, model64: 0x1262900012634},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x126340001263b, model64: 0x1263b00012653},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x126530001265a, model64: 0x1265a00012672},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1267200012679, model64: 0x1267900012691},
		modelTuple{type64: 0x2700000027, matchRI: 0x1449, match64: 0x00000000, model64: 0x12691000126a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x144a, match64: 0x00000000, model64: 0x126a9000126c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x126c3000126c8, model64: 0x126c8000126dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x144c, match64: 0x00000000, model64: 0x126e3000126ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x144d, match64: 0x00000000, model64: 0x126ea000126f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x144e, match64: 0x00000000, model64: 0x126f4000126fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x144f, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1450, match64: 0x00000000, model64: 0x126fb00012702},
		modelTuple{type64: 0x2700000027, matchRI: 0x1451, match64: 0x00000000, model64: 0x127020001270b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1452, match64: 0x00000000, model64: 0x1270b00012717},
		modelTuple{type64: 0x2700000027, matchRI: 0x1453, match64: 0x00000000, model64: 0x1271700012722},
		modelTuple{type64: 0x2700000027, matchRI: 0x1454, match64: 0x00000000, model64: 0x127220001272c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1455, match64: 0x00000000, model64: 0x1272c00012738},
		modelTuple{type64: 0x2700000027, matchRI: 0x1456, match64: 0x00000000, model64: 0x127380001273f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1457, match64: 0x00000000, model64: 0x1273f00012746},
		modelTuple{type64: 0x2700000027, matchRI: 0x1458, match64: 0x00000000, model64: 0x1274600012747},
		modelTuple{type64: 0x2700000027, matchRI: 0x1459, match64: 0x00000000, model64: 0xeb120000eb15},
		modelTuple{type64: 0x2700000027, matchRI: 0x145a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x145c, match64: 0x00000000, model64: 0x1274f0001275e},
		modelTuple{type64: 0x2700000027, matchRI: 0x145d, match64: 0x00000000, model64: 0x1275e00012770},
		modelTuple{type64: 0x2700000027, matchRI: 0x145e, match64: 0x00000000, model64: 0x127700001277f},
		modelTuple{type64: 0x2700000027, matchRI: 0x145f, match64: 0x00000000, model64: 0x1277f00012793},
		modelTuple{type64: 0x2700000027, matchRI: 0x1460, match64: 0x00000000, model64: 0x12793000127a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1461, match64: 0x00000000, model64: 0x127a7000127b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1462, match64: 0x00000000, model64: 0x127b8000127c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1463, match64: 0x00000000, model64: 0x127c8000127d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1464, match64: 0x00000000, model64: 0x127d8000127e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1465, match64: 0x00000000, model64: 0x127e8000127fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1466, match64: 0x00000000, model64: 0x127fb0001280b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1467, match64: 0x00000000, model64: 0x1280b0001281b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1468, match64: 0x00000000, model64: 0x1281b0001282e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1469, match64: 0x00000000, model64: 0x1282e0001283c},
		modelTuple{type64: 0x2700000027, matchRI: 0x146a, match64: 0x00000000, model64: 0x1283c0001284e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1284e00012858, model64: 0x1285800012869},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1286900012873, model64: 0x1287300012889},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128890001288d, model64: 0x1288d000128a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x146b, match64: 0x00000000, model64: 0x128a0000128b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x146c, match64: 0x00000000, model64: 0x128b2000128c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x146d, match64: 0x00000000, model64: 0x128c3000128d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x146e, match64: 0x00000000, model64: 0x128d7000128e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x146f, match64: 0x00000000, model64: 0x128e7000128fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1470, match64: 0x00000000, model64: 0x128fa0001290d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1471, match64: 0x00000000, model64: 0x1290d0001291e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1472, match64: 0x00000000, model64: 0x1291e00012931},
		modelTuple{type64: 0x2700000027, matchRI: 0x1473, match64: 0x00000000, model64: 0x1293100012948},
		modelTuple{type64: 0x2700000027, matchRI: 0x1474, match64: 0x00000000, model64: 0x129480001295c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1475, match64: 0x00000000, model64: 0x1295c00012970},
		modelTuple{type64: 0x2700000027, matchRI: 0x1476, match64: 0x00000000, model64: 0x1297000012981},
		modelTuple{type64: 0x2700000027, matchRI: 0x1477, match64: 0x00000000, model64: 0x1298100012997},
		modelTuple{type64: 0x2700000027, matchRI: 0x1478, match64: 0x00000000, model64: 0x12997000129ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1479, match64: 0x00000000, model64: 0x129ae000129c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x147a, match64: 0x00000000, model64: 0x129c3000129db},
		modelTuple{type64: 0x2700000027, matchRI: 0x147b, match64: 0x00000000, model64: 0x129db000129f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x147c, match64: 0x00000000, model64: 0x129f500012a0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x147d, match64: 0x00000000, model64: 0x12a0c00012a28},
		modelTuple{type64: 0x2700000027, matchRI: 0x147e, match64: 0x00000000, model64: 0x12a2800012a43},
		modelTuple{type64: 0x2700000027, matchRI: 0x147f, match64: 0x00000000, model64: 0x12a4300012a5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1480, match64: 0x00000000, model64: 0x12a5a00012a69},
		modelTuple{type64: 0x2700000027, matchRI: 0x1481, match64: 0x00000000, model64: 0x12a6900012a79},
		modelTuple{type64: 0x2700000027, matchRI: 0x1482, match64: 0x00000000, model64: 0x12a7900012a85},
		modelTuple{type64: 0x2700000027, matchRI: 0x1483, match64: 0x00000000, model64: 0x12a8500012a90},
		modelTuple{type64: 0x2700000027, matchRI: 0x1484, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1485, match64: 0x00000000, model64: 0x12a9000012aa4},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1486, match64: 0x00000000, model64: 0x12aa400012ab7},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1487, match64: 0x00000000, model64: 0x12ab700012acb},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1488, match64: 0x00000000, model64: 0x12acb00012adc},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1489, match64: 0x00000000, model64: 0x12adc00012aed},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x148a, match64: 0x00000000, model64: 0x12aed00012afe},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x148b, match64: 0x00000000, model64: 0x12afe00012b0f},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x148c, match64: 0x00000000, model64: 0x12b0f00012b20},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x148d, match64: 0x00000000, model64: 0x12b2000012b31},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x148e, match64: 0x00000000, model64: 0x12b3100012b42},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x148f, match64: 0x00000000, model64: 0x12b4200012b53},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1490, match64: 0x00000000, model64: 0x12b5300012b65},
		modelTuple{type64: 0x24700000251, matchRI: 0x1491, match64: 0x00000000, model64: 0x12b6500012b74},
		modelTuple{type64: 0x24700000251, matchRI: 0x1492, match64: 0x00000000, model64: 0x12b7400012b85},
		modelTuple{type64: 0x24700000251, matchRI: 0x1493, match64: 0x00000000, model64: 0x12b8500012b96},
		modelTuple{type64: 0x24700000251, matchRI: 0x1494, match64: 0x00000000, model64: 0x12b9600012ba5},
		modelTuple{type64: 0x24700000251, matchRI: 0x1495, match64: 0x00000000, model64: 0x12ba500012bb6},
		modelTuple{type64: 0x24700000251, matchRI: 0x1496, match64: 0x00000000, model64: 0x12bb600012bc6},
		modelTuple{type64: 0x24700000251, matchRI: 0x1497, match64: 0x00000000, model64: 0x12bc600012bd6},
		modelTuple{type64: 0x24700000251, matchRI: 0x1498, match64: 0x00000000, model64: 0x12bb600012bc6},
		modelTuple{type64: 0x24700000251, matchRI: 0x1499, match64: 0x00000000, model64: 0x12b9600012ba5},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x149a, match64: 0x00000000, model64: 0x12b9600012ba5},
		modelTuple{type64: 0x2700000027, matchRI: 0x149b, match64: 0x00000000, model64: 0x470600004711},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x149d, match64: 0x00000000, model64: 0x12bdc00012be6},
		modelTuple{type64: 0x2700000027, matchRI: 0x149e, match64: 0x00000000, model64: 0x12be600012bed},
		modelTuple{type64: 0x2700000027, matchRI: 0x149f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x14a0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x14a1, match64: 0x00000000, model64: 0x12bdc00012be6},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x14a3, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a5, match64: 0x00000000, model64: 0x12bf400012bfa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12bfa00012c02, model64: 0x12c0200012c0d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x14a6, match64: 0x00000000, model64: 0x12c0d00012c14},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a7, match64: 0x00000000, model64: 0x12c1400012c1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c1a00012c21, model64: 0x12c2100012c25},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x14a9, match64: 0x00000000, model64: 0x12c2500012c2c},
		modelTuple{type64: 0x24300000245, matchRI: 0x14aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c3500012c42, model64: 0x12c4200012c48},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ad, match64: 0x00000000, model64: 0x940c0000940e},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ae, match64: 0x00000000, model64: 0xdc940000dc97},
		modelTuple{type64: 0x2700000027, matchRI: 0x14af, match64: 0x00000000, model64: 0x12c4d00012c4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b0, match64: 0x00000000, model64: 0x522300005225},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b1, match64: 0x00000000, model64: 0x1092f00010931},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b2, match64: 0x00000000, model64: 0x12c4f00012c52},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b3, match64: 0x00000000, model64: 0x12c5200012c54},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b4, match64: 0x00000000, model64: 0x674700006749},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b5, match64: 0x00000000, model64: 0x12c5400012c57},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b6, match64: 0x00000000, model64: 0x12c5700012c58},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x14b9, match64: 0x00000000, model64: 0x12c5d00012c64},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x14ba, match64: 0x00000000, model64: 0x12c6400012c6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x14bb, match64: 0x00000000, model64: 0x12c6c00012c6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x14bc, match64: 0x00000000, model64: 0x12c6f00012c72},
		modelTuple{type64: 0x2700000027, matchRI: 0x14bd, match64: 0x00000000, model64: 0x12c7200012c74},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x14be, match64: 0x00000000, model64: 0x12c7400012c7b},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x14bf, match64: 0x00000000, model64: 0x12c7b00012c82},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c0, match64: 0x00000000, model64: 0x940c0000940e},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x14c1, match64: 0x00000000, model64: 0x12c8200012c89},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c3, match64: 0x00000000, model64: 0x12c8900012c8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c4, match64: 0x00000000, model64: 0x12c8c00012c92},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c5, match64: 0x00000000, model64: 0x1c6900001c6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c6, match64: 0x00000000, model64: 0x12c9200012c95},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c7, match64: 0x00000000, model64: 0x12c9500012c98},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c8, match64: 0x00000000, model64: 0x12c9800012c9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c9, match64: 0x00000000, model64: 0x12c9b00012ca2},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ca, match64: 0x00000000, model64: 0x12ca200012ca5},
		modelTuple{type64: 0x2700000027, matchRI: 0x14cb, match64: 0x00000000, model64: 0x12ca500012ca8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12ca800012cb0, model64: 0x12cb000012cb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x14cc, match64: 0x00000000, model64: 0x674700006749},
		modelTuple{type64: 0x2700000027, matchRI: 0x14cd, match64: 0x00000000, model64: 0x12cb800012cbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ce, match64: 0x00000000, model64: 0x12cbf00012cc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x14cf, match64: 0x00000000, model64: 0x12cc600012ccb},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d0, match64: 0x00000000, model64: 0x12ccb00012cd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d1, match64: 0x00000000, model64: 0x12cd600012cdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d2, match64: 0x00000000, model64: 0x12cdc00012ce8},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d3, match64: 0x00000000, model64: 0xa1220000a124},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d4, match64: 0x00000000, model64: 0xe1100000e116},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d5, match64: 0x00000000, model64: 0x12ce800012ceb},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d6, match64: 0x00000000, model64: 0x12ceb00012cf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d7, match64: 0x00000000, model64: 0x12cf400012cfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d8, match64: 0x00000000, model64: 0x12cfb00012d02},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d9, match64: 0x00000000, model64: 0x12d0200012d06},
		modelTuple{type64: 0x2700000027, matchRI: 0x14da, match64: 0x00000000, model64: 0x12d0600012d09},
		modelTuple{type64: 0x2700000027, matchRI: 0x14db, match64: 0x00000000, model64: 0x12d0900012d0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x14dc, match64: 0x00000000, model64: 0x12d0b00012d12},
		modelTuple{type64: 0x2700000027, matchRI: 0x14dd, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x14de, match64: 0x00000000, model64: 0x12d1200012d14},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x14df, match64: 0x00000000, model64: 0x59e8000059ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e4, match64: 0x00000000, model64: 0x12d1b00012d22},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e6, match64: 0x00000000, model64: 0x12d2200012d36},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e8, match64: 0x00000000, model64: 0x12d3b00012d46},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e9, match64: 0x00000000, model64: 0x12d4600012d53},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ea, match64: 0x00000000, model64: 0x12d5300012d63},
		modelTuple{type64: 0x2700000027, matchRI: 0x14eb, match64: 0x00000000, model64: 0x12d6300012d71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d7500012d7c, model64: 0x12d7c00012d7e},
		modelTuple{type64: 0x5da000005e7, matchRI: -0x0001, match64: 0x12d7e00012d86, model64: 0x12d8600012d8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d8f00012d96, model64: 0x12d8f00012d96},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ed, match64: 0x00000000, model64: 0x12d9600012d9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d9d00012da6, model64: 0x12d9d00012da6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x598a0000598f, model64: 0x598a0000598f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf2790000f284},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ef, match64: 0x00000000, model64: 0x12db900012dc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f0, match64: 0x00000000, model64: 0x12dc100012dca},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f1, match64: 0x00000000, model64: 0x12dca00012dd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f2, match64: 0x00000000, model64: 0x12dd100012dda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12de200012df5, model64: 0x12df500012e01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12e0100012e07, model64: 0x12e0700012e15},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f4, match64: 0x00000000, model64: 0x12e1500012e24},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f5, match64: 0x00000000, model64: 0x12e2400012e31},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f6, match64: 0x00000000, model64: 0x12e3100012e3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f7, match64: 0x00000000, model64: 0x12e3f00012e4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f8, match64: 0x00000000, model64: 0x12e4b00012e52},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f9, match64: 0x00000000, model64: 0x12e5200012e57},
		modelTuple{type64: 0x2700000027, matchRI: 0x14fa, match64: 0x00000000, model64: 0x12e5700012e5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x14fb, match64: 0x00000000, model64: 0x12e5c00012e61},
		modelTuple{type64: 0x2700000027, matchRI: 0x14fc, match64: 0x00000000, model64: 0x12e6100012e6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x14fd, match64: 0x00000000, model64: 0x12e6a00012e7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x14fe, match64: 0x00000000, model64: 0x12e7a00012e82},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ff, match64: 0x00000000, model64: 0x12e8200012e8f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1500, match64: 0x00000000, model64: 0x12e8f00012e99},
		modelTuple{type64: 0x2700000027, matchRI: 0x1501, match64: 0x00000000, model64: 0x12e9900012ea1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12ea100012ea5, model64: 0x12ea500012eb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12eb000012eb5, model64: 0x12eb500012ec9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12ec900012ecd, model64: 0x12ecd00012edb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12edb00012edf, model64: 0x12edf00012eeb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12eeb00012eef, model64: 0x12eef00012f01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12f0100012f05, model64: 0x12f0500012f18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12f1800012f1c, model64: 0x12f1c00012f2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1502, match64: 0x00000000, model64: 0x12f2b00012f34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12f3400012f38, model64: 0x12f3800012f47},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12f4700012f4b, model64: 0x12f4b00012f56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12f5600012f5a, model64: 0x12f5a00012f62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1503, match64: 0x00000000, model64: 0x12f6200012f72},
		modelTuple{type64: 0x2700000027, matchRI: 0x1504, match64: 0x00000000, model64: 0x12f7200012f80},
		modelTuple{type64: 0x2700000027, matchRI: 0x1505, match64: 0x00000000, model64: 0x12f8000012f92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12f9200012f96, model64: 0x12f9600012fa1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12fa100012fa6, model64: 0x12fa600012fb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12fb900012fbd, model64: 0x12fbd00012fcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1506, match64: 0x00000000, model64: 0x12fcb00012fd2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12fd200012fd6, model64: 0x12fd600012fe3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1507, match64: 0x00000000, model64: 0x12fe300012ff0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12ff000012ff4, model64: 0x12ff400013001},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1300100013006, model64: 0x1300600013012},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1301200013017, model64: 0x1301700013023},
		modelTuple{type64: 0x2700000027, matchRI: 0x1508, match64: 0x00000000, model64: 0x1302300013036},
		modelTuple{type64: 0x2700000027, matchRI: 0x1509, match64: 0x00000000, model64: 0x1303600013045},
		modelTuple{type64: 0x2700000027, matchRI: 0x150a, match64: 0x00000000, model64: 0x1304500013059},
		modelTuple{type64: 0x2700000027, matchRI: 0x150b, match64: 0x00000000, model64: 0x1305900013062},
		modelTuple{type64: 0x2700000027, matchRI: 0x150c, match64: 0x00000000, model64: 0x130620001306b},
		modelTuple{type64: 0x2700000027, matchRI: 0x150d, match64: 0x00000000, model64: 0x1306b00013079},
		modelTuple{type64: 0x2700000027, matchRI: 0x150e, match64: 0x00000000, model64: 0x1307900013086},
		modelTuple{type64: 0x2700000027, matchRI: 0x150f, match64: 0x00000000, model64: 0x1308600013096},
		modelTuple{type64: 0x2700000027, matchRI: 0x1510, match64: 0x00000000, model64: 0x13096000130a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1511, match64: 0x00000000, model64: 0x130a5000130b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1512, match64: 0x00000000, model64: 0x130b2000130b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1513, match64: 0x00000000, model64: 0x130b8000130c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1514, match64: 0x00000000, model64: 0x130c7000130d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1515, match64: 0x00000000, model64: 0x130d4000130e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1516, match64: 0x00000000, model64: 0x130e1000130ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1517, match64: 0x00000000, model64: 0x130ef000130f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1518, match64: 0x00000000, model64: 0x130f800013101},
		modelTuple{type64: 0x2700000027, matchRI: 0x1519, match64: 0x00000000, model64: 0x131010001310a},
		modelTuple{type64: 0x2700000027, matchRI: 0x151a, match64: 0x00000000, model64: 0x1310a00013113},
		modelTuple{type64: 0x2700000027, matchRI: 0x151b, match64: 0x00000000, model64: 0x1311300013118},
		modelTuple{type64: 0x2700000027, matchRI: 0x151c, match64: 0x00000000, model64: 0x641a00006420},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x151d, match64: 0x00000000, model64: 0x1311800013125},
		modelTuple{type64: 0x38400000391, matchRI: 0x151e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x151f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1520, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x1522, match64: 0x00000000, model64: 0x131250001312b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1523, match64: 0x00000000, model64: 0x1312b00013134},
		modelTuple{type64: 0x2700000027, matchRI: 0x1524, match64: 0x00000000, model64: 0x131340001313d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1525, match64: 0x00000000, model64: 0x1313d00013146},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1314600013158, model64: 0x1314600013158},
		modelTuple{type64: 0x2700000027, matchRI: 0x1526, match64: 0x00000000, model64: 0x1315800013161},
		modelTuple{type64: 0x2700000027, matchRI: 0x1527, match64: 0x00000000, model64: 0x131610001316a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1528, match64: 0x00000000, model64: 0x1316a00013173},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131730001317a, model64: 0x1317a00013183},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x1318300013193, model64: 0x1318300013193},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1529, match64: 0x00000000, model64: 0x131930001319f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1319f000131b5, model64: 0x1319f000131b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131b5000131c2, model64: 0x131b5000131c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131c2000131d4, model64: 0x131c2000131d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x152a, match64: 0x00000000, model64: 0x131d4000131dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x152b, match64: 0x00000000, model64: 0x131dd000131e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131e6000131ed, model64: 0x131ed000131f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131f900013202, model64: 0x131f900013202},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x1320200013217, model64: 0x1320200013217},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x1321700013223, model64: 0x1321700013223},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1322300013235, model64: 0x1322300013235},
		modelTuple{type64: 0x2700000027, matchRI: 0x152c, match64: 0x00000000, model64: 0x132350001323e},
		modelTuple{type64: 0x2700000027, matchRI: 0x152d, match64: 0x00000000, model64: 0x1323e00013248},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1324800013252, model64: 0x1324800013252},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0x1325200013260, model64: 0x1325200013260},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x152e, match64: 0x00000000, model64: 0x132600001326d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1326d0001327a, model64: 0x1326d0001327a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1327a00013285, model64: 0x1327a00013285},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x132850001328e, model64: 0x132850001328e},
		modelTuple{type64: 0x2700000027, matchRI: 0x152f, match64: 0x00000000, model64: 0x1328e00013296},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1329f000132a7, model64: 0x132a7000132b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1531, match64: 0x00000000, model64: 0x132b1000132ba},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1534, match64: 0x00000000, model64: 0x132c7000132ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1535, match64: 0x00000000, model64: 0x132ce000132d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1536, match64: 0x00000000, model64: 0x132d5000132e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1537, match64: 0x00000000, model64: 0x132e1000132ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1538, match64: 0x00000000, model64: 0x132ec000132f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1539, match64: 0x00000000, model64: 0x132f4000132fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x153a, match64: 0x00000000, model64: 0x132fa00013300},
		modelTuple{type64: 0x2700000027, matchRI: 0x153b, match64: 0x00000000, model64: 0x1330000013307},
		modelTuple{type64: 0x2700000027, matchRI: 0x153c, match64: 0x00000000, model64: 0x133070001330d},
		modelTuple{type64: 0x2700000027, matchRI: 0x153d, match64: 0x00000000, model64: 0x1330d00013314},
		modelTuple{type64: 0x2700000027, matchRI: 0x153e, match64: 0x00000000, model64: 0x133140001331b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1540, match64: 0x00000000, model64: 0x1331b00013323},
		modelTuple{type64: 0x2700000027, matchRI: 0x1541, match64: 0x00000000, model64: 0x133230001332a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1332a0001332e, model64: 0x1332e00013334},
		modelTuple{type64: 0x2700000027, matchRI: 0x1542, match64: 0x00000000, model64: 0x1333400013339},
		modelTuple{type64: 0x2700000027, matchRI: 0x1543, match64: 0x00000000, model64: 0x133390001333e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1545, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1546, match64: 0x00000000, model64: 0x133430001334f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1547, match64: 0x00000000, model64: 0x1334f0001335c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1548, match64: 0x00000000, model64: 0x1334f0001335c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1549, match64: 0x00000000, model64: 0x1335c00013369},
		modelTuple{type64: 0x2700000027, matchRI: 0x154b, match64: 0x00000000, model64: 0x1336c00013374},
		modelTuple{type64: 0x2700000027, matchRI: 0x154c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x133740001338c, model64: 0x1338c000133a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x154e, match64: 0x00000000, model64: 0x133a5000133ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x133ac000133b5, model64: 0x133b5000133bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x154f, match64: 0x00000000, model64: 0x133bb000133be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x133be000133ca, model64: 0x133ca000133d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x133d0000133dc, model64: 0x133dc000133e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1550, match64: 0x00000000, model64: 0x4170000041a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1551, match64: 0x00000000, model64: 0xa63d0000a641},
		modelTuple{type64: 0x2700000027, matchRI: 0x1552, match64: 0x00000000, model64: 0x133e2000133e9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x133ee000133f7, model64: 0x133f700013400},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1554, match64: 0x00000000, model64: 0x1340000013407},
		modelTuple{type64: 0x2700000027, matchRI: 0x1555, match64: 0x00000000, model64: 0x134070001340d},
		modelTuple{type64: 0x24300000245, matchRI: 0x1558, match64: 0x00000000, model64: 0x1342100013425},
		modelTuple{type64: 0x2700000027, matchRI: 0x1559, match64: 0x00000000, model64: 0x1342500013430},
		modelTuple{type64: 0x2700000027, matchRI: 0x155a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x155b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x155d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x155e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x155f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1562, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x134460001344d, model64: 0x1344d00013454},
		modelTuple{type64: 0x2700000027, matchRI: 0x1564, match64: 0x00000000, model64: 0x1345b00013463},
		modelTuple{type64: 0x2700000027, matchRI: 0x1565, match64: 0x00000000, model64: 0x1346300013473},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1347b00013481, model64: 0x1348100013487},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x134870001348e, model64: 0x1348e00013495},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x134950001349d, model64: 0x1349d000134a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1567, match64: 0x00000000, model64: 0x475e00004766},
		modelTuple{type64: 0x2700000027, matchRI: 0x1568, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x156a, match64: 0x00000000, model64: 0x134ad000134b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x134b8000134be, model64: 0x134be000134c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x134c4000134ca, model64: 0x134ca000134d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x134d0000134d4, model64: 0x134d0000134d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x156b, match64: 0x00000000, model64: 0x134d4000134d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1244b00012451, model64: 0x1244b00012451},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x134d6000134e0, model64: 0x134e0000134ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x134ea000134f6, model64: 0x134f600013502},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1350200013510, model64: 0x1350200013510},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1351000013515, model64: 0x135150001351a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1351a0001351f, model64: 0xacd10000acd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x156c, match64: 0x00000000, model64: 0x1351f00013526},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135260001352c, model64: 0x1352c00013533},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135330001353c, model64: 0x1353c00013545},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135450001354c, model64: 0x1354c00013553},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135530001355b, model64: 0x1355b00013563},
		modelTuple{type64: 0x2700000027, matchRI: 0x156d, match64: 0x00000000, model64: 0x135630001356d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1356d00013572, model64: 0x1357200013577},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1357700013582, model64: 0x135820001358d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1358d00013598, model64: 0x13598000135a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135a3000135a9, model64: 0x135a3000135a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135a9000135af, model64: 0x135af000135b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135b5000135b9, model64: 0x135b9000135bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135bd000135c6, model64: 0x135c6000135cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135cf000135d4, model64: 0x135d4000135d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135d9000135df, model64: 0x135df000135e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135e6000135eb, model64: 0x3c9500003c9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135eb000135f2, model64: 0x135f2000135fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135fa00013604, model64: 0x136040001360e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1360e00013616, model64: 0x136160001361e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1361e00013623, model64: 0x1015e00010163},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1362300013627, model64: 0x136270001362b},
		modelTuple{type64: 0x2700000027, matchRI: 0x156e, match64: 0x00000000, model64: 0x1362b0001362d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1362d00013631, model64: 0x1363100013635},
		modelTuple{type64: 0x2700000027, matchRI: 0x156f, match64: 0x00000000, model64: 0x1363500013638},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136380001363f, model64: 0x1363f00013646},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136460001364c, model64: 0x1364c00013652},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1365200013659, model64: 0x1365900013660},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1366000013667, model64: 0x136670001366e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1366e00013672, model64: 0x1367200013676},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136760001367a, model64: 0xd5140000d518},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1367a0001367f, model64: 0x1367f00013684},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136840001368d, model64: 0x136840001368d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1570, match64: 0x00000000, model64: 0x1368d00013694},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1369400013699, model64: 0x136990001369c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1369c000136a4, model64: 0x136a4000136ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1571, match64: 0x00000000, model64: 0x136ac000136b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136b2000136bd, model64: 0x136bd000136c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1572, match64: 0x00000000, model64: 0x136c8000136d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136d1000136d8, model64: 0x136d8000136de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136de000136e6, model64: 0x136e6000136ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136ed000136f6, model64: 0x136f6000136ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136ff00013703, model64: 0x1370300013707},
		modelTuple{type64: 0x2700000027, matchRI: 0x1573, match64: 0x00000000, model64: 0x137070001370f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1574, match64: 0x00000000, model64: 0x1370f00013713},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137130001371a, model64: 0x1371a00013721},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137210001372a, model64: 0x1372a00013733},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137330001373d, model64: 0x1373d00013747},
		modelTuple{type64: 0x2700000027, matchRI: 0x1575, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x137470001374d, model64: 0x1374d00013753},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1375300013757, model64: 0x137570001375b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1576, match64: 0x00000000, model64: 0x1375b00013768},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1376800013772, model64: 0x137720001377c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1578, match64: 0x00000000, model64: 0x137850001378a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1579, match64: 0x00000000, model64: 0x1378a00013793},
		modelTuple{type64: 0x2700000027, matchRI: 0x157a, match64: 0x00000000, model64: 0x137930001379a},
		modelTuple{type64: 0x2700000027, matchRI: 0x157b, match64: 0x00000000, model64: 0x1379a0001379f},
		modelTuple{type64: 0x2700000027, matchRI: 0x157c, match64: 0x00000000, model64: 0x1379f000137b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x157d, match64: 0x00000000, model64: 0x137b6000137c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x157e, match64: 0x00000000, model64: 0x137c8000137d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x157f, match64: 0x00000000, model64: 0x137d0000137e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1580, match64: 0x00000000, model64: 0x137e2000137ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1581, match64: 0x00000000, model64: 0x137ed000137f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1582, match64: 0x00000000, model64: 0x137c8000137d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137f90001380e, model64: 0x1380e00013819},
		modelTuple{type64: 0x2700000027, matchRI: 0x1583, match64: 0x00000000, model64: 0x1381900013824},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1382400013836, model64: 0x138360001383e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1584, match64: 0x00000000, model64: 0x1383e00013849},
		modelTuple{type64: 0x2700000027, matchRI: 0x1585, match64: 0x00000000, model64: 0x1384900013851},
		modelTuple{type64: 0x2700000027, matchRI: 0x1586, match64: 0x00000000, model64: 0x1385100013858},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1385800013869, model64: 0x1386900013870},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1387000013887, model64: 0x1388700013894},
		modelTuple{type64: 0x2700000027, matchRI: 0x1587, match64: 0x00000000, model64: 0x138940001389d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1389d000138ac, model64: 0x138ac000138b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138b1000138c7, model64: 0x138c7000138ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138ce000138d5, model64: 0x138ce000138d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1588, match64: 0x00000000, model64: 0xb07d0000b085},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138d5000138e5, model64: 0x138e5000138f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1589, match64: 0x00000000, model64: 0x138f0000138f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138f60001390d, model64: 0x1390d00013914},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139140001392d, model64: 0x1392d00013936},
		modelTuple{type64: 0x2700000027, matchRI: 0x158a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1394400013950},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139570001395d, model64: 0x1395d00013965},
		modelTuple{type64: 0x2700000027, matchRI: 0x158d, match64: 0x00000000, model64: 0x1396500013971},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1397100013977, model64: 0x1397700013983},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1398300013989, model64: 0x1398900013992},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1399200013998, model64: 0x139980001399c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1399c000139a2, model64: 0x139a2000139a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139a6000139b5, model64: 0x139b5000139c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139c4000139cd, model64: 0x139c4000139cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139cd000139d6, model64: 0x139d6000139dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139dc000139e5, model64: 0x139e5000139eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139eb000139f4, model64: 0x139f400013a03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a0300013a0c, model64: 0x13a0c00013a19},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a1900013a22, model64: 0x13a2200013a30},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a3000013a3a, model64: 0x13a3000013a3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a3a00013a3f, model64: 0x13a3f00013a45},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1590, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x13a5700013a62},
		modelTuple{type64: 0x24700000251, matchRI: 0x1593, match64: 0x00000000, model64: 0x13a6900013a75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a7500013a7f, model64: 0x13a7f00013a89},
		modelTuple{type64: 0x2700000027, matchRI: 0x1594, match64: 0x00000000, model64: 0x13a8900013a93},
		modelTuple{type64: 0x2700000027, matchRI: 0x1595, match64: 0x00000000, model64: 0x13a8900013a93},
		modelTuple{type64: 0x2700000027, matchRI: 0x1596, match64: 0x00000000, model64: 0x13a9300013aa1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1597, match64: 0x00000000, model64: 0x13a9300013aa1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1598, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1599, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x13aae00013ab4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13abc00013ac2, model64: 0x13ac200013ac8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x13ad500013add, model64: 0x13add00013ae1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x13ae100013aed, model64: 0x13aed00013af9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x13af900013b01, model64: 0x13b0100013b0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x159e, match64: 0x00000000, model64: 0x13b0d00013b12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b1200013b1c, model64: 0x13b1200013b1c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b1c00013b28, model64: 0x13b2800013b30},
		modelTuple{type64: 0x2700000027, matchRI: 0x159f, match64: 0x00000000, model64: 0x13b3000013b42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b4200013b4a, model64: 0x13b4a00013b56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b5600013b6d, model64: 0x13b6d00013b7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b7e00013b90, model64: 0x13b9000013ba0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13ba000013ba8, model64: 0x13ba800013bb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a0, match64: 0x00000000, model64: 0x13bb800013bc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a1, match64: 0x00000000, model64: 0x13bc400013bc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a2, match64: 0x00000000, model64: 0x13bc800013bce},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a3, match64: 0x00000000, model64: 0x13bce00013bd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a4, match64: 0x00000000, model64: 0x13bd700013be2},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a5, match64: 0x00000000, model64: 0x13be200013bea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13bea00013c00, model64: 0x13c0000013c0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13c0d00013c21, model64: 0x13c2100013c2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13c2c00013c34, model64: 0x13c3400013c3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a6, match64: 0x00000000, model64: 0x13c3f00013c46},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a7, match64: 0x00000000, model64: 0x13c4600013c50},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a8, match64: 0x00000000, model64: 0x13c5000013c59},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a9, match64: 0x00000000, model64: 0x13c5900013c62},
		modelTuple{type64: 0x2700000027, matchRI: 0x15aa, match64: 0x00000000, model64: 0x13c6200013c68},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ab, match64: 0x00000000, model64: 0x13c6800013c6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ac, match64: 0x00000000, model64: 0x13c6f00013c73},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ad, match64: 0x00000000, model64: 0x13c7300013c7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ae, match64: 0x00000000, model64: 0x13c7e00013c85},
		modelTuple{type64: 0x2700000027, matchRI: 0x15af, match64: 0x00000000, model64: 0x13c8500013c8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b0, match64: 0x00000000, model64: 0x13c8c00013c95},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b1, match64: 0x00000000, model64: 0x13c9500013c9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b2, match64: 0x00000000, model64: 0x13c9d00013ca3},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b3, match64: 0x00000000, model64: 0x13ca300013cab},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b4, match64: 0x00000000, model64: 0x13cab00013cb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b5, match64: 0x00000000, model64: 0x13cb000013cc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b6, match64: 0x00000000, model64: 0x13cc100013cc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b7, match64: 0x00000000, model64: 0x13cc900013cd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b8, match64: 0x00000000, model64: 0x13cd100013cda},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b9, match64: 0x00000000, model64: 0x13cda00013cde},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ba, match64: 0x00000000, model64: 0x13cde00013ce9},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bb, match64: 0x00000000, model64: 0x13ce900013cf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bc, match64: 0x00000000, model64: 0x13cf400013cfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bd, match64: 0x00000000, model64: 0x13cfe00013d0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x15be, match64: 0x00000000, model64: 0x13d0a00013d16},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bf, match64: 0x00000000, model64: 0x13d1600013d1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c0, match64: 0x00000000, model64: 0x13d1d00013d25},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c1, match64: 0x00000000, model64: 0x13d2500013d30},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c2, match64: 0x00000000, model64: 0x13d3000013d3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c3, match64: 0x00000000, model64: 0x13d3c00013d46},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c4, match64: 0x00000000, model64: 0x13d4600013d53},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c5, match64: 0x00000000, model64: 0x13d5300013d60},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c6, match64: 0x00000000, model64: 0x13d6000013d6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c7, match64: 0x00000000, model64: 0x13d6d00013d7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13d7c00013d88, model64: 0x13d8800013d94},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c8, match64: 0x00000000, model64: 0x13d9400013d9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13d9c00013da8, model64: 0x13da800013db4},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c9, match64: 0x00000000, model64: 0x13db400013dbc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13dbc00013dc4, model64: 0x13dc400013dcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ca, match64: 0x00000000, model64: 0x13dcf00013dda},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cb, match64: 0x00000000, model64: 0x13dda00013de8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13de800013df0, model64: 0x13df000013df8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13df800013e05, model64: 0x13df800013e05},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cc, match64: 0x00000000, model64: 0x13e0500013e0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cd, match64: 0x00000000, model64: 0x13e0b00013e18},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ce, match64: 0x00000000, model64: 0x13e1800013e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cf, match64: 0x00000000, model64: 0x13e2500013e2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d0, match64: 0x00000000, model64: 0x13e2d00013e3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d1, match64: 0x00000000, model64: 0x13e3d00013e49},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d2, match64: 0x00000000, model64: 0x13e4900013e56},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d3, match64: 0x00000000, model64: 0x13e5600013e63},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d4, match64: 0x00000000, model64: 0x13e5600013e63},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d5, match64: 0x00000000, model64: 0x13e6300013e75},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d6, match64: 0x00000000, model64: 0x13e7500013e83},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d7, match64: 0x00000000, model64: 0x13e8300013e90},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d8, match64: 0x00000000, model64: 0x13e9000013e9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d9, match64: 0x00000000, model64: 0x13e9a00013ea8},
		modelTuple{type64: 0x2700000027, matchRI: 0x15da, match64: 0x00000000, model64: 0x13ea800013eb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x15db, match64: 0x00000000, model64: 0x13eb000013eb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x15dc, match64: 0x00000000, model64: 0x13eb000013eb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x15dd, match64: 0x00000000, model64: 0x13e0500013e0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13eb900013ec1, model64: 0x13ec100013ecd},
		modelTuple{type64: 0x2700000027, matchRI: 0x15de, match64: 0x00000000, model64: 0x13ecd00013ed7},
		modelTuple{type64: 0x2700000027, matchRI: 0x15df, match64: 0x00000000, model64: 0x13ed700013ee3},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e0, match64: 0x00000000, model64: 0x13ee300013eea},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e1, match64: 0x00000000, model64: 0x13eea00013ef0},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e2, match64: 0x00000000, model64: 0x13ef000013efb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13efb00013f07, model64: 0x13efb00013f07},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e3, match64: 0x00000000, model64: 0x13f0700013f12},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e4, match64: 0x00000000, model64: 0x13f1200013f18},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e5, match64: 0x00000000, model64: 0x13f1800013f1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e6, match64: 0x00000000, model64: 0x13f1f00013f2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e7, match64: 0x00000000, model64: 0x13f2a00013f36},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e8, match64: 0x00000000, model64: 0x13f3600013f43},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e9, match64: 0x00000000, model64: 0x13f4300013f4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ea, match64: 0x00000000, model64: 0x13f4b00013f57},
		modelTuple{type64: 0x2700000027, matchRI: 0x15eb, match64: 0x00000000, model64: 0x13f5700013f5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ec, match64: 0x00000000, model64: 0x13f5e00013f65},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ed, match64: 0x00000000, model64: 0x13f6500013f71},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ee, match64: 0x00000000, model64: 0x13f7100013f79},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ef, match64: 0x00000000, model64: 0x13f7900013f81},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13f8100013f89, model64: 0x13f8900013f91},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13f9100013f99, model64: 0x13f9900013fa4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13fa400013fac, model64: 0x13fac00013fb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f0, match64: 0x00000000, model64: 0x13fb700013fbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f1, match64: 0x00000000, model64: 0x13fbd00013fc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f2, match64: 0x00000000, model64: 0x13fc800013fd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f3, match64: 0x00000000, model64: 0x13fd400013fe7},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f4, match64: 0x00000000, model64: 0x13fe700013ff3},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f5, match64: 0x00000000, model64: 0x13ff300013ffe},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f6, match64: 0x00000000, model64: 0x13ffe0001400b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f7, match64: 0x00000000, model64: 0x1400b00014011},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f8, match64: 0x00000000, model64: 0x1401100014018},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f9, match64: 0x00000000, model64: 0x1401800014024},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fa, match64: 0x00000000, model64: 0x140240001402f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fb, match64: 0x00000000, model64: 0x1402f0001403b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fc, match64: 0x00000000, model64: 0x1403b00014048},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fd, match64: 0x00000000, model64: 0x140480001404f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fe, match64: 0x00000000, model64: 0x1404f00014055},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ff, match64: 0x00000000, model64: 0x1405500014061},
		modelTuple{type64: 0x2700000027, matchRI: 0x1600, match64: 0x00000000, model64: 0x1406100014069},
		modelTuple{type64: 0x2700000027, matchRI: 0x1601, match64: 0x00000000, model64: 0x1406900014071},
		modelTuple{type64: 0x2700000027, matchRI: 0x1602, match64: 0x00000000, model64: 0x1407100014081},
		modelTuple{type64: 0x2700000027, matchRI: 0x1603, match64: 0x00000000, model64: 0x1408100014089},
		modelTuple{type64: 0x2700000027, matchRI: 0x1604, match64: 0x00000000, model64: 0xc8d00000c8d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1605, match64: 0x00000000, model64: 0x1408900014091},
		modelTuple{type64: 0x2700000027, matchRI: 0x1606, match64: 0x00000000, model64: 0x1409100014099},
		modelTuple{type64: 0x2700000027, matchRI: 0x1607, match64: 0x00000000, model64: 0x14099000140af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1608, match64: 0x00000000, model64: 0x140af000140bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1609, match64: 0x00000000, model64: 0x140bd000140c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140c6000140ce, model64: 0x140ce000140d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x160a, match64: 0x00000000, model64: 0x140d6000140e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x160b, match64: 0x00000000, model64: 0x140e4000140f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x160c, match64: 0x00000000, model64: 0x140d6000140e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x160d, match64: 0x00000000, model64: 0x140f0000140fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x160e, match64: 0x00000000, model64: 0x140fb00014106},
		modelTuple{type64: 0x2700000027, matchRI: 0x160f, match64: 0x00000000, model64: 0x1410600014117},
		modelTuple{type64: 0x2700000027, matchRI: 0x1610, match64: 0x00000000, model64: 0x39fb00003a02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1611, match64: 0x00000000, model64: 0x1411700014122},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141220001412a, model64: 0x1412a00014131},
		modelTuple{type64: 0x2700000027, matchRI: 0x1612, match64: 0x00000000, model64: 0x1413100014135},
		modelTuple{type64: 0x2700000027, matchRI: 0x1613, match64: 0x00000000, model64: 0x1413500014144},
		modelTuple{type64: 0x2700000027, matchRI: 0x1614, match64: 0x00000000, model64: 0x141440001414e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1615, match64: 0x00000000, model64: 0x1414e00014157},
		modelTuple{type64: 0x2700000027, matchRI: 0x1616, match64: 0x00000000, model64: 0x1415700014160},
		modelTuple{type64: 0x2700000027, matchRI: 0x1617, match64: 0x00000000, model64: 0x1416000014168},
		modelTuple{type64: 0x2700000027, matchRI: 0x1618, match64: 0x00000000, model64: 0x1416800014177},
		modelTuple{type64: 0x2700000027, matchRI: 0x1619, match64: 0x00000000, model64: 0x1417700014181},
		modelTuple{type64: 0x2700000027, matchRI: 0x161a, match64: 0x00000000, model64: 0x141810001418b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1418b0001419d, model64: 0x1419d000141a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141a6000141bc, model64: 0x141bc000141c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141c9000141db, model64: 0x141db000141e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x161b, match64: 0x00000000, model64: 0x141e4000141ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141ee00014201, model64: 0x141440001414e},
		modelTuple{type64: 0x2700000027, matchRI: 0x161c, match64: 0x00000000, model64: 0x1420100014219},
		modelTuple{type64: 0x2700000027, matchRI: 0x161d, match64: 0x00000000, model64: 0x142190001422b},
		modelTuple{type64: 0x2700000027, matchRI: 0x161e, match64: 0x00000000, model64: 0x1422b00014240},
		modelTuple{type64: 0x2700000027, matchRI: 0x161f, match64: 0x00000000, model64: 0x1424000014257},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142570001425f, model64: 0x1425f00014276},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142760001427e, model64: 0x1427e00014292},
		modelTuple{type64: 0x2700000027, matchRI: 0x1620, match64: 0x00000000, model64: 0x14292000142a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142a2000142af, model64: 0x142af000142bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1621, match64: 0x00000000, model64: 0x142bc000142ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1622, match64: 0x00000000, model64: 0x142ce000142da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1623, match64: 0x00000000, model64: 0x142da000142ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1624, match64: 0x00000000, model64: 0x142ed00014300},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x143000001430c, model64: 0x142ce000142da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1430c00014316, model64: 0x1431600014320},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x143200001432b, model64: 0x1432b00014336},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1433600014341, model64: 0x143410001434c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1434c0001435a, model64: 0x1435a00014368},
		modelTuple{type64: 0x2700000027, matchRI: 0x1625, match64: 0x00000000, model64: 0x1436800014378},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1437800014381, model64: 0x143810001438a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1626, match64: 0x00000000, model64: 0x1438a00014399},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14399000143a1, model64: 0x143a1000143a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1627, match64: 0x00000000, model64: 0x143a9000143b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1628, match64: 0x00000000, model64: 0x143b1000143ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1629, match64: 0x00000000, model64: 0x143ba000143c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x143c4000143d2, model64: 0x143d2000143e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x162a, match64: 0x00000000, model64: 0x143e0000143f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x162b, match64: 0x00000000, model64: 0x143f300014401},
		modelTuple{type64: 0x2700000027, matchRI: 0x162c, match64: 0x00000000, model64: 0x144010001441b},
		modelTuple{type64: 0x2700000027, matchRI: 0x162d, match64: 0x00000000, model64: 0x1441b0001443a},
		modelTuple{type64: 0x2700000027, matchRI: 0x162e, match64: 0x00000000, model64: 0x1443a0001444d},
		modelTuple{type64: 0x2700000027, matchRI: 0x162f, match64: 0x00000000, model64: 0x1444d0001445b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1630, match64: 0x00000000, model64: 0x1445b00014469},
		modelTuple{type64: 0x2700000027, matchRI: 0x1631, match64: 0x00000000, model64: 0x1446900014476},
		modelTuple{type64: 0x2700000027, matchRI: 0x1632, match64: 0x00000000, model64: 0x1447600014483},
		modelTuple{type64: 0x2700000027, matchRI: 0x1633, match64: 0x00000000, model64: 0x144830001448b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1634, match64: 0x00000000, model64: 0x144830001448b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1448b00014494, model64: 0x144940001449d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1635, match64: 0x00000000, model64: 0x13ea800013eb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1636, match64: 0x00000000, model64: 0x1449d000144a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1637, match64: 0x00000000, model64: 0x144a5000144ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1638, match64: 0x00000000, model64: 0x144ab000144b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1639, match64: 0x00000000, model64: 0x144b4000144bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x163a, match64: 0x00000000, model64: 0x144b4000144bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x163b, match64: 0x00000000, model64: 0x144bf000144c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144c8000144d0, model64: 0x144c8000144d0},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x144d0000144d8, model64: 0x144d0000144d8},
		modelTuple{type64: 0x285a00002862, matchRI: 0x163c, match64: 0x00000000, model64: 0x144d8000144e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144e1000144e9, model64: 0x144e9000144f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x163d, match64: 0x00000000, model64: 0x144f0000144f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x163e, match64: 0x00000000, model64: 0x144f900014500},
		modelTuple{type64: 0x2700000027, matchRI: 0x163f, match64: 0x00000000, model64: 0x1450000014507},
		modelTuple{type64: 0x2700000027, matchRI: 0x1640, match64: 0x00000000, model64: 0x1450700014514},
		modelTuple{type64: 0x2700000027, matchRI: 0x1641, match64: 0x00000000, model64: 0x1450000014507},
		modelTuple{type64: 0x2700000027, matchRI: 0x1642, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1643, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1644, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1645, match64: 0x00000000, model64: 0x145140001451c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1646, match64: 0x00000000, model64: 0x145140001451c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1647, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1648, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1649, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x164a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x164c, match64: 0x00000000, model64: 0xeb120000eb15},
		modelTuple{type64: 0x2700000027, matchRI: 0x164d, match64: 0x00000000, model64: 0x9ffe0000a001},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1452100014526, model64: 0x1452100014526},
		modelTuple{type64: 0x2700000027, matchRI: 0x164f, match64: 0x00000000, model64: 0xdcc40000dcc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145320001453a, model64: 0x1453a0001453e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1651, match64: 0x00000000, model64: 0x1453e00014545},
		modelTuple{type64: 0x2700000027, matchRI: 0x1653, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1654, match64: 0x00000000, model64: 0x1454a00014555},
		modelTuple{type64: 0x2700000027, matchRI: 0x1655, match64: 0x00000000, model64: 0x145550001455f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1656, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x1657, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x165a, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x165b, match64: 0x00000000, model64: 0x1457100014578},
		modelTuple{type64: 0x2700000027, matchRI: 0x165c, match64: 0x00000000, model64: 0x145780001457d},
		modelTuple{type64: 0x2700000027, matchRI: 0x165d, match64: 0x00000000, model64: 0x1457d00014584},
		modelTuple{type64: 0x2700000027, matchRI: 0x165e, match64: 0x00000000, model64: 0x145840001458e},
		modelTuple{type64: 0x2700000027, matchRI: 0x165f, match64: 0x00000000, model64: 0x1458e0001458f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1660, match64: 0x00000000, model64: 0xf91a0000f91c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1661, match64: 0x00000000, model64: 0x1458f00014595},
		modelTuple{type64: 0x2700000027, matchRI: 0x1662, match64: 0x00000000, model64: 0x145950001459a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1663, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1664, match64: 0x00000000, model64: 0x1459a000145a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145a4000145b3, model64: 0x145b3000145c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145c2000145cf, model64: 0x145cf000145dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1665, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1666, match64: 0x00000000, model64: 0x145dc000145e6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x145e6000145ee, model64: 0x145ee000145f6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1667, match64: 0x00000000, model64: 0x145f6000145fe},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1668, match64: 0x00000000, model64: 0x145fe00014608},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1669, match64: 0x00000000, model64: 0x1460800014612},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x166a, match64: 0x00000000, model64: 0x1461200014623},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x166b, match64: 0x00000000, model64: 0x1462300014632},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x166c, match64: 0x00000000, model64: 0x1463200014644},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x166d, match64: 0x00000000, model64: 0x146440001464c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x166e, match64: 0x00000000, model64: 0x1464c00014656},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x166f, match64: 0x00000000, model64: 0x146560001465f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1670, match64: 0x00000000, model64: 0x1465f00014664},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1671, match64: 0x00000000, model64: 0x146640001466d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1672, match64: 0x00000000, model64: 0x1466d00014672},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1673, match64: 0x00000000, model64: 0x1467200014678},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1674, match64: 0x00000000, model64: 0x1467800014683},
		modelTuple{type64: 0x2700000027, matchRI: 0x1675, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1678, match64: 0x00000000, model64: 0x146940001469e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1469e000146b4, model64: 0x146b4000146ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1679, match64: 0x00000000, model64: 0x146ca000146cf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x167c, match64: 0x00000000, model64: 0x146e3000146ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x167d, match64: 0x00000000, model64: 0x146ec000146f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x146f5000146fd, model64: 0x146fd00014705},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1470500014710, model64: 0x1471000014714},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1471400014719, model64: 0x147190001471d},
		modelTuple{type64: 0x2700000027, matchRI: 0x167e, match64: 0x00000000, model64: 0x1471d00014727},
		modelTuple{type64: 0x2700000027, matchRI: 0x167f, match64: 0x00000000, model64: 0x1472700014730},
		modelTuple{type64: 0x2700000027, matchRI: 0x1680, match64: 0x00000000, model64: 0x1473000014736},
		modelTuple{type64: 0x2700000027, matchRI: 0x1681, match64: 0x00000000, model64: 0x147360001473a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1682, match64: 0x00000000, model64: 0x1473a00014744},
		modelTuple{type64: 0x2700000027, matchRI: 0x1683, match64: 0x00000000, model64: 0x147440001474b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1684, match64: 0x00000000, model64: 0x1474b00014752},
		modelTuple{type64: 0x2700000027, matchRI: 0x1685, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1686, match64: 0x00000000, model64: 0x147520001475a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1688, match64: 0x00000000, model64: 0x1475f0001476f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1689, match64: 0x00000000, model64: 0x6f0f00006f14},
		modelTuple{type64: 0x2700000027, matchRI: 0x168a, match64: 0x00000000, model64: 0x12660000126b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1477c00014781, model64: 0x1478100014787},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1478700014792, model64: 0x147920001479b},
		modelTuple{type64: 0x2700000027, matchRI: 0x168b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x147ac000147b6, model64: 0x147b6000147ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x168f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x147ba000147c8, model64: 0x147c8000147d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x147d0000147dd, model64: 0x147dd000147e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x147e4000147f0, model64: 0x147f0000147f6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1690, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1691, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1694, match64: 0x00000000, model64: 0x1480200014808},
		modelTuple{type64: 0x24300000245, matchRI: 0x1695, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1697, match64: 0x00000000, model64: 0x1480d00014816},
		modelTuple{type64: 0x2700000027, matchRI: 0x1698, match64: 0x00000000, model64: 0x148160001481e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1699, match64: 0x00000000, model64: 0x1481e00014826},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x148260001482b, model64: 0x1482b00014831},
		modelTuple{type64: 0x2700000027, matchRI: 0x169a, match64: 0x00000000, model64: 0x1483100014838},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1483d00014844, model64: 0x148440001484b},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1484b00014853, model64: 0x148530001485b},
		modelTuple{type64: 0x2700000027, matchRI: 0x169d, match64: 0x00000000, model64: 0x1485e0001486c},
		modelTuple{type64: 0x2700000027, matchRI: 0x169e, match64: 0x00000000, model64: 0x1486c00014874},
		modelTuple{type64: 0x2700000027, matchRI: 0x169f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16a2, match64: 0x00000000, model64: 0x1487400014882},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16a3, match64: 0x00000000, model64: 0x148820001489b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16a4, match64: 0x00000000, model64: 0x1489b000148ac},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16a5, match64: 0x00000000, model64: 0x148ac000148bc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16a6, match64: 0x00000000, model64: 0x148bc000148cb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16a7, match64: 0x00000000, model64: 0x148cb000148da},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16a8, match64: 0x00000000, model64: 0x148da000148ea},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16a9, match64: 0x00000000, model64: 0x148ea000148fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ab, match64: 0x00000000, model64: 0x148fe00014903},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1491400014922, model64: 0x1492200014929},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1492900014933, model64: 0x1493300014936},
		modelTuple{type64: 0x2700000027, matchRI: 0x16af, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1494b00014959, model64: 0x1495900014965},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b4, match64: 0x00000000, model64: 0x1496500014972},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x149720001497f, model64: 0x1497f0001498d},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b5, match64: 0x00000000, model64: 0x634000006345},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b6, match64: 0x00000000, model64: 0x634000006345},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14999000149a8, model64: 0x14999000149a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x149a8000149b6, model64: 0x149a8000149b6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bc, match64: 0x00000000, model64: 0x149c3000149cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x149cd000149d5, model64: 0x149d5000149de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x149de000149eb, model64: 0x149eb000149fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bd, match64: 0x00000000, model64: 0x149fa00014a05},
		modelTuple{type64: 0x2700000027, matchRI: 0x16be, match64: 0x00000000, model64: 0x14a0500014a0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bf, match64: 0x00000000, model64: 0x14a0b00014a12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a1200014a18, model64: 0x14a1800014a1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c0, match64: 0x00000000, model64: 0x658200006586},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c1, match64: 0x00000000, model64: 0x14a1f00014a2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c2, match64: 0x00000000, model64: 0x14a2a00014a33},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c3, match64: 0x00000000, model64: 0x14a3300014a37},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c4, match64: 0x00000000, model64: 0x14a3700014a3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c5, match64: 0x00000000, model64: 0x14a3b00014a3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c6, match64: 0x00000000, model64: 0x14a3f00014a44},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c7, match64: 0x00000000, model64: 0x14a4400014a49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a4900014a51, model64: 0xfd0b0000fd14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a5100014a58, model64: 0x14a5800014a60},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16c8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c9, match64: 0x00000000, model64: 0x14a6000014a67},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ca, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14a6c00014a7a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16cd, match64: 0x00000000, model64: 0x14a7e00014a88},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16ce, match64: 0x00000000, model64: 0x14a8800014a99},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x14a9900014aa5, model64: 0x14a9900014aa5},
		modelTuple{type64: 0x24300000245, matchRI: 0x16cf, match64: 0x00000000, model64: 0x14aa500014aab},
		modelTuple{type64: 0x24300000245, matchRI: 0x16d0, match64: 0x00000000, model64: 0x14aab00014ab2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14abe00014acb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16d4, match64: 0x00000000, model64: 0x14ad500014ada},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d5, match64: 0x00000000, model64: 0x4a6b00004a6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d6, match64: 0x00000000, model64: 0xdcc40000dcc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d7, match64: 0x00000000, model64: 0x7b4900007b4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ada00014ae0, model64: 0x14ae000014ae7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ae700014aed, model64: 0x5d7e00005d80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14aed00014af3, model64: 0x14af300014af6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14af600014afc, model64: 0xf91a0000f91c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14afc00014b02, model64: 0x14b0200014b05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b0500014b0b, model64: 0xf9230000f925},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b0b00014b11, model64: 0xc2500000c27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b1100014b17, model64: 0x14b1700014b1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b1a00014b20, model64: 0x14b2000014b23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b2300014b29, model64: 0x14b2900014b2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b2c00014b32, model64: 0x14b3200014b36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b3600014b3c, model64: 0x14b3c00014b3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b3f00014b45, model64: 0x14b4500014b4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b5600014b5c, model64: 0x39100000393},
		modelTuple{type64: 0x2700000027, matchRI: 0x16da, match64: 0x00000000, model64: 0x14b5c00014b61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b6100014b6a, model64: 0x135150001351a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b6a00014b71, model64: 0x14b7100014b74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b7400014b7d, model64: 0x14b7d00014b82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b8200014b8c, model64: 0x14b8c00014b92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b9200014b9e, model64: 0x14b9e00014ba6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ba600014bad, model64: 0x8eb700008eba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bad00014bb4, model64: 0x14bb400014bb7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bb700014bbe, model64: 0x14bbe00014bc1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bc100014bc9, model64: 0x14bc900014bcd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bcd00014bd8, model64: 0x14bd800014bdf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bdf00014be7, model64: 0x14be700014beb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14beb00014bf4, model64: 0x14bf400014bf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x16db, match64: 0x00000000, model64: 0x14bf900014bfc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bfc00014c05, model64: 0x14c0500014c0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c0a00014c11, model64: 0x14c1100014c14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c1400014c1d, model64: 0x550b00005510},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c1d00014c24, model64: 0xa9d80000a9db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c2400014c2f, model64: 0x14c2f00014c36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c3600014c3a, model64: 0x13cda00013cde},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c3a00014c3f, model64: 0x1166a0001166f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16dc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c3f00014c44, model64: 0x14bf400014bf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x16de, match64: 0x00000000, model64: 0x14c4800014c59},
		modelTuple{type64: 0x2700000027, matchRI: 0x16df, match64: 0x00000000, model64: 0x14c5900014c69},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c6900014c73, model64: 0x14c7300014c82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c8200014c8c, model64: 0x14c8c00014caa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14caa00014cb4, model64: 0x14cb400014cba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14cba00014cc4, model64: 0x14cc400014cc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e1, match64: 0x00000000, model64: 0x14cce00014cd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e3, match64: 0x00000000, model64: 0x14cdd00014ce2},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e4, match64: 0x00000000, model64: 0x14ce200014ce8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14cf700014d02, model64: 0x14cf700014d02},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14d0200014d0c, model64: 0x14d0c00014d16},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x14d1600014d24, model64: 0x14d2400014d32},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x14d3200014d3a, model64: 0x14d3a00014d42},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x14d4200014d49, model64: 0x14d4900014d50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14d5700014d5f, model64: 0x14d5f00014d68},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x634000006345},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ea, match64: 0x00000000, model64: 0x3150000031a},
		modelTuple{type64: 0x2700000027, matchRI: 0x16eb, match64: 0x00000000, model64: 0x14d7700014d7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ec, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ed, match64: 0x00000000, model64: 0x14d7d00014d84},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ee, match64: 0x00000000, model64: 0x14d8400014d91},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f0, match64: 0x00000000, model64: 0x14d9600014da3},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f1, match64: 0x00000000, model64: 0x14da300014daa},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f2, match64: 0x00000000, model64: 0x14daa00014db5},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f3, match64: 0x00000000, model64: 0x14db500014dc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f4, match64: 0x00000000, model64: 0x14dc600014dd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f5, match64: 0x00000000, model64: 0x14dd800014de9},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f6, match64: 0x00000000, model64: 0x14de900014df5},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f7, match64: 0x00000000, model64: 0x14df500014e02},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f8, match64: 0x00000000, model64: 0x14e0200014e13},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f9, match64: 0x00000000, model64: 0x14e1300014e1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fa, match64: 0x00000000, model64: 0x14e1f00014e2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fb, match64: 0x00000000, model64: 0x14e2a00014e34},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fc, match64: 0x00000000, model64: 0x14e3400014e3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14e3f00014e4b, model64: 0x14e4b00014e59},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fd, match64: 0x00000000, model64: 0x74e2000074ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16ff, match64: 0x00000000, model64: 0x14e5900014e6c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1700, match64: 0x00000000, model64: 0x14e6c00014e84},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1701, match64: 0x00000000, model64: 0x14e8400014e8e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1702, match64: 0x00000000, model64: 0x14e8e00014e99},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1703, match64: 0x00000000, model64: 0x14e9900014ea6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1704, match64: 0x00000000, model64: 0x14ea600014eb3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1708, match64: 0x00000000, model64: 0x14ec800014ecb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1709, match64: 0x00000000, model64: 0x14ecb00014ece},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ece00014edc, model64: 0x59960000599d},
		modelTuple{type64: 0x2700000027, matchRI: 0x170a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x170d, match64: 0x00000000, model64: 0x14ee200014ee4},
		modelTuple{type64: 0x2700000027, matchRI: 0x170e, match64: 0x00000000, model64: 0x1a7a00001a7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x170f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4fa900004faf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1712, match64: 0x00000000, model64: 0x14ef000014efd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1713, match64: 0x00000000, model64: 0x14efd00014f07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14f0700014f0d, model64: 0x14f0d00014f18},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f2100014f27},
		modelTuple{type64: 0x2700000027, matchRI: 0x1715, match64: 0x00000000, model64: 0x8c2300008c28},
		modelTuple{type64: 0x2700000027, matchRI: 0x1716, match64: 0x00000000, model64: 0x14f3300014f3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14f4100014f47, model64: 0x14f4700014f52},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f5800014f60},
		modelTuple{type64: 0x2700000027, matchRI: 0x1718, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x171a, match64: 0x00000000, model64: 0xa2710000a273},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14f9900014fa1, model64: 0x14fa100014faa},
		modelTuple{type64: 0x6c9000006d3, matchRI: -0x0001, match64: 0x14faa00014fb2, model64: 0x14fb200014fc0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14fc000014fc9, model64: 0x14fc900014fd8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1724, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1725, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1727, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1728, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150040001500d, model64: 0x150040001500d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1500d00015019, model64: 0x1501900015025},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1502500015029, model64: 0x1502500015029},
		modelTuple{type64: 0x2700000027, matchRI: 0x172a, match64: 0x00000000, model64: 0x150290001502e},
		modelTuple{type64: 0x2700000027, matchRI: 0x172c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150360001503f, model64: 0x1503f0001504b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1504b00015054, model64: 0x150540001505a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1505a00015064, model64: 0x150640001506b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1506b00015075, model64: 0x150750001507c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1507c00015087, model64: 0x150870001508f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1508f00015099, model64: 0x15099000150a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150a1000150ac, model64: 0x150ac000150b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150b3000150bf, model64: 0x150bf000150c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150c7000150d2, model64: 0x150d2000150d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150d9000150e1, model64: 0x150e1000150ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150ea000150f3, model64: 0x150f300015100},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1510000015109, model64: 0x3ab700003ab8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1510900015111, model64: 0x1511100015115},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151150001511b, model64: 0x1511b00015124},
		modelTuple{type64: 0x2700000027, matchRI: 0x172d, match64: 0x00000000, model64: 0xe7320000e739},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1730, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1731, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1732, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1735, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1736, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1737, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1738, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x173a, match64: 0x00000000, model64: 0x12c5700012c58},
		modelTuple{type64: 0x2700000027, matchRI: 0x173b, match64: 0x00000000, model64: 0x1aee00001aef},
		modelTuple{type64: 0x2700000027, matchRI: 0x173c, match64: 0x00000000, model64: 0x1b2000001b21},
		modelTuple{type64: 0x2700000027, matchRI: 0x173d, match64: 0x00000000, model64: 0x1514c0001514d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1514d00015154, model64: 0x1b3200001b33},
		modelTuple{type64: 0x2700000027, matchRI: 0x173e, match64: 0x00000000, model64: 0x3ab700003ab8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1515400015163, model64: 0x151630001516c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1516c00015178, model64: 0x151780001517e},
		modelTuple{type64: 0x2700000027, matchRI: 0x173f, match64: 0x00000000, model64: 0x1517e00015186},
		modelTuple{type64: 0x2700000027, matchRI: 0x1740, match64: 0x00000000, model64: 0x151860001518e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1741, match64: 0x00000000, model64: 0x1518e00015196},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15196000151a2, model64: 0x151a2000151a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1742, match64: 0x00000000, model64: 0x151a8000151b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151b1000151c0, model64: 0x151c0000151c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1743, match64: 0x00000000, model64: 0x151c8000151ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1744, match64: 0x00000000, model64: 0x151ca000151ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151ce000151d4, model64: 0x151d4000151d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151d8000151de, model64: 0x9d3d00009d41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151de000151e5, model64: 0x151e5000151ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151ec000151f2, model64: 0x9c6b00009c6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151f2000151f9, model64: 0x151f900015200},
		modelTuple{type64: 0x2700000027, matchRI: 0x1745, match64: 0x00000000, model64: 0x1520000015207},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1520700015211, model64: 0x1521100015215},
		modelTuple{type64: 0x2700000027, matchRI: 0x1746, match64: 0x00000000, model64: 0x152150001521d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1747, match64: 0x00000000, model64: 0x1521d0001522d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1522d00015236, model64: 0x152360001523b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1523b00015244, model64: 0x1524400015248},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1524800015254, model64: 0x1525400015264},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1526400015276, model64: 0x152760001527f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1748, match64: 0x00000000, model64: 0x1527f0001528c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1528c00015297, model64: 0x152970001529b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1529b000152a6, model64: 0x152a6000152aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x152aa000152b5, model64: 0x152b5000152b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x152b9000152c4, model64: 0x152c4000152c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x152c8000152d3, model64: 0x152d3000152d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1749, match64: 0x00000000, model64: 0x152d7000152e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x174a, match64: 0x00000000, model64: 0x152e3000152ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x174b, match64: 0x00000000, model64: 0x152ed000152f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x174c, match64: 0x00000000, model64: 0x152f5000152fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x174d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x174e, match64: 0x00000000, model64: 0x152fc00015303},
		modelTuple{type64: 0x2700000027, matchRI: 0x174f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1750, match64: 0x00000000, model64: 0x153030001530d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1751, match64: 0x00000000, model64: 0x1530d00015316},
		modelTuple{type64: 0x2700000027, matchRI: 0x1752, match64: 0x00000000, model64: 0x153160001531f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1531f00015325, model64: 0x153250001532e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1753, match64: 0x00000000, model64: 0x1532e00015337},
		modelTuple{type64: 0x2700000027, matchRI: 0x1754, match64: 0x00000000, model64: 0x1533700015340},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1534000015347, model64: 0x1534700015350},
		modelTuple{type64: 0x2700000027, matchRI: 0x1755, match64: 0x00000000, model64: 0x1535000015359},
		modelTuple{type64: 0x2700000027, matchRI: 0x1756, match64: 0x00000000, model64: 0x1535900015363},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1536300015369, model64: 0x1536900015372},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x153720001537b, model64: 0x153720001537b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1757, match64: 0x00000000, model64: 0x1537b00015384},
		modelTuple{type64: 0x2700000027, matchRI: 0x1758, match64: 0x00000000, model64: 0x153840001538e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1759, match64: 0x00000000, model64: 0x1538e00015397},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15397000153a0, model64: 0x153a0000153a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x153a9000153af, model64: 0x153af000153b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x175a, match64: 0x00000000, model64: 0x153b8000153c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x175b, match64: 0x00000000, model64: 0x153c1000153ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x175c, match64: 0x00000000, model64: 0x153ca000153d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x153d3000153dc, model64: 0x153dc000153e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x153e6000153ed, model64: 0x153ed000153f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x175d, match64: 0x00000000, model64: 0x153f600015400},
		modelTuple{type64: 0x2700000027, matchRI: 0x175e, match64: 0x00000000, model64: 0x154000001540c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x175f, match64: 0x00000000, model64: 0x1540c0001540f},
		modelTuple{type64: 0x24300000245, matchRI: 0x1760, match64: 0x00000000, model64: 0x1540f0001541b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1761, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1762, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1763, match64: 0x00000000, model64: 0x7d4f00007d52},
		modelTuple{type64: 0x2700000027, matchRI: 0x1764, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1765, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1766, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1767, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1768, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1769, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1541b00015426, model64: 0x154260001542a},
		modelTuple{type64: 0x2700000027, matchRI: 0x176a, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x176b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x176c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x176d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x176f, match64: 0x00000000, model64: 0x1542e00015434},
		modelTuple{type64: 0x2700000027, matchRI: 0x1770, match64: 0x00000000, model64: 0x1543400015439},
		modelTuple{type64: 0x2700000027, matchRI: 0x1771, match64: 0x00000000, model64: 0x154390001543f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1772, match64: 0x00000000, model64: 0x1543f00015445},
		modelTuple{type64: 0x2700000027, matchRI: 0x1773, match64: 0x00000000, model64: 0x154450001544f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1774, match64: 0x00000000, model64: 0x1544f0001545d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1775, match64: 0x00000000, model64: 0x1545d00015463},
		modelTuple{type64: 0x2700000027, matchRI: 0x1776, match64: 0x00000000, model64: 0x1546300015469},
		modelTuple{type64: 0x2700000027, matchRI: 0x1777, match64: 0x00000000, model64: 0x1546900015470},
		modelTuple{type64: 0x2700000027, matchRI: 0x1778, match64: 0x00000000, model64: 0x1547000015476},
		modelTuple{type64: 0x2700000027, matchRI: 0x1779, match64: 0x00000000, model64: 0x154760001547c},
		modelTuple{type64: 0x2700000027, matchRI: 0x177a, match64: 0x00000000, model64: 0x1547c00015482},
		modelTuple{type64: 0x2700000027, matchRI: 0x177b, match64: 0x00000000, model64: 0x1548200015487},
		modelTuple{type64: 0x2700000027, matchRI: 0x177c, match64: 0x00000000, model64: 0x154870001548d},
		modelTuple{type64: 0x2700000027, matchRI: 0x177d, match64: 0x00000000, model64: 0x1548d00015492},
		modelTuple{type64: 0x2700000027, matchRI: 0x177e, match64: 0x00000000, model64: 0x1549200015498},
		modelTuple{type64: 0x2700000027, matchRI: 0x177f, match64: 0x00000000, model64: 0x154980001549f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1780, match64: 0x00000000, model64: 0x1549f000154a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1781, match64: 0x00000000, model64: 0x154a7000154ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1782, match64: 0x00000000, model64: 0x154ae000154b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1783, match64: 0x00000000, model64: 0x154b5000154bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1784, match64: 0x00000000, model64: 0x154bd000154c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1785, match64: 0x00000000, model64: 0x92250000922b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1786, match64: 0x00000000, model64: 0x7d4c00007d4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1787, match64: 0x00000000, model64: 0x550b00005510},
		modelTuple{type64: 0x2700000027, matchRI: 0x1788, match64: 0x00000000, model64: 0x154c8000154cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1789, match64: 0x00000000, model64: 0x11d6200011d67},
		modelTuple{type64: 0x2700000027, matchRI: 0x178a, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x24300000245, matchRI: 0x178b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x154cc000154da, model64: 0x154da000154e1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x178c, match64: 0x00000000, model64: 0x154e1000154ec},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x178d, match64: 0x00000000, model64: 0x154ec000154f7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x178e, match64: 0x00000000, model64: 0x154f700015501},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x178f, match64: 0x00000000, model64: 0x155010001550b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1790, match64: 0x00000000, model64: 0x1550b00015516},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1791, match64: 0x00000000, model64: 0x1551600015525},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1792, match64: 0x00000000, model64: 0x155250001552a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1793, match64: 0x00000000, model64: 0x1552a00015533},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1794, match64: 0x00000000, model64: 0x155330001553a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1795, match64: 0x00000000, model64: 0x1553a00015545},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1796, match64: 0x00000000, model64: 0x155450001554f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1797, match64: 0x00000000, model64: 0x1554f0001555f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1798, match64: 0x00000000, model64: 0x1555f0001556a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1799, match64: 0x00000000, model64: 0x1556a00015579},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x179a, match64: 0x00000000, model64: 0x1557900015583},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x179b, match64: 0x00000000, model64: 0x155830001558d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x179c, match64: 0x00000000, model64: 0x1558d00015598},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x179d, match64: 0x00000000, model64: 0x15598000155a2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x179e, match64: 0x00000000, model64: 0xf07a0000f07f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x179f, match64: 0x00000000, model64: 0x155a2000155ad},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x17a0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a4, match64: 0x00000000, model64: 0x155b1000155b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a5, match64: 0x00000000, model64: 0x1046e00010471},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a6, match64: 0x00000000, model64: 0x155b4000155bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a7, match64: 0x00000000, model64: 0x155bc000155bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a8, match64: 0x00000000, model64: 0x7adc00007ae3},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ad, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x155e9000155f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b0, match64: 0x00000000, model64: 0x147b6000147ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b1, match64: 0x00000000, model64: 0x155fa00015602},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b2, match64: 0x00000000, model64: 0x1560200015609},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b3, match64: 0x00000000, model64: 0x156090001560d},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b4, match64: 0x00000000, model64: 0x1560d00015614},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b5, match64: 0x00000000, model64: 0x1561400015618},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1562500015629, model64: 0x1a7900001a7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b7, match64: 0x00000000, model64: 0x12c5700012c58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156290001562d, model64: 0x1562d0001562f},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b9, match64: 0x00000000, model64: 0x1563300015639},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ba, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17bb, match64: 0x00000000, model64: 0x1564900015659},
		modelTuple{type64: 0x2700000027, matchRI: 0x17bc, match64: 0x00000000, model64: 0x1565900015664},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17bf, match64: 0x00000000, model64: 0x1566e00015676},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156760001567f, model64: 0x156760001567f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1567f00015686, model64: 0x1567f00015686},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x156920001569e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x156ab000156b0, model64: 0x156b0000156c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156c4000156c9, model64: 0x156c9000156cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156cf000156d5, model64: 0x156d5000156dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156dd000156e3, model64: 0x156e3000156e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156e6000156ec, model64: 0x156ec000156f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156f5000156fb, model64: 0x156fb00015703},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1570300015709, model64: 0x1570900015712},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1571200015718, model64: 0x157180001571f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1571f00015725, model64: 0x157250001572c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1572c00015732, model64: 0x157320001573a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1573a00015740, model64: 0x157400001574f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1574f00015755, model64: 0x1575500015764},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157640001576a, model64: 0x1576a00015779},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157790001577f, model64: 0x1577f0001578f},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c5, match64: 0x00000000, model64: 0x1578f0001579a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1579a000157a0, model64: 0x157a0000157ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157ab000157b1, model64: 0x157b1000157bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157bd000157c3, model64: 0x157c3000157d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157d1000157d7, model64: 0x157d7000157e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c6, match64: 0x00000000, model64: 0x157e2000157e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c7, match64: 0x00000000, model64: 0x157e9000157f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157f1000157f7, model64: 0x157f7000157fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157fa00015800, model64: 0x1580000015802},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1580200015808, model64: 0x158080001580f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1580f00015815, model64: 0x158150001581b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1581b00015821, model64: 0x1582100015823},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c8, match64: 0x00000000, model64: 0x158230001582a},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c9, match64: 0x00000000, model64: 0x1582a00015830},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1583000015836, model64: 0x1583600015841},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1584100015847, model64: 0x158470001584a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1584a00015853, model64: 0x158530001585a},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ca, match64: 0x00000000, model64: 0x1585a00015864},
		modelTuple{type64: 0x2700000027, matchRI: 0x17cb, match64: 0x00000000, model64: 0x158640001586c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1586c00015872, model64: 0x1587200015875},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158750001587b, model64: 0x1587b0001587f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1587f00015885, model64: 0x158850001588d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1588d00015893, model64: 0x12c7200012c74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1589300015899, model64: 0x158990001589c},
		modelTuple{type64: 0x2700000027, matchRI: 0x17cc, match64: 0x00000000, model64: 0x1589c000158a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158a4000158aa, model64: 0x158aa000158b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158b4000158ba, model64: 0x158ba000158c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158c2000158c8, model64: 0x158c8000158cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158cc000158d2, model64: 0x158d2000158d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158d5000158db, model64: 0x158db000158de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158de000158e4, model64: 0x158e4000158ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158ed000158f3, model64: 0xff740000ff76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158f3000158f9, model64: 0x158f900015902},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1590200015908, model64: 0x1590800015914},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159140001591a, model64: 0x11d0100011d05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1591a00015920, model64: 0x1592000015927},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159270001592d, model64: 0x1592d00015934},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159340001593a, model64: 0x1593a0001593c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1593c00015942, model64: 0x1594200015949},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159490001594f, model64: 0x1594f00015951},
		modelTuple{type64: 0x2700000027, matchRI: 0x17cd, match64: 0x00000000, model64: 0x1595100015953},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159530001595d, model64: 0x1595d00015960},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ce, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d2, match64: 0x00000000, model64: 0x1596400015968},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1596e0001597d, model64: 0x1597d0001598d},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d4, match64: 0x00000000, model64: 0x1598d0001599a},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x17d6, match64: 0x00000000, model64: 0x1599a000159ab},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x159ab000159c1, model64: 0x159c1000159ce},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x159ce000159db, model64: 0x159db000159e4},
		modelTuple{type64: 0x1060000010d, matchRI: -0x0001, match64: 0x159e4000159ea, model64: 0x159ea000159f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d9, match64: 0x00000000, model64: 0x159fb000159fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x17da, match64: 0x00000000, model64: 0x159fe00015a08},
		modelTuple{type64: 0x2700000027, matchRI: 0x17db, match64: 0x00000000, model64: 0x15a0800015a0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x17dc, match64: 0x00000000, model64: 0x15a0e00015a20},
		modelTuple{type64: 0x2700000027, matchRI: 0x17dd, match64: 0x00000000, model64: 0x15a2000015a2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x17de, match64: 0x00000000, model64: 0x15a2e00015a37},
		modelTuple{type64: 0x2700000027, matchRI: 0x17df, match64: 0x00000000, model64: 0x2680000026b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x17e0, match64: 0x00000000, model64: 0x15a3700015a42},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x17e1, match64: 0x00000000, model64: 0x15a4200015a48},
		modelTuple{type64: 0x24300000245, matchRI: 0x17e3, match64: 0x00000000, model64: 0x5a7100005a77},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x17e6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15a5c00015a61, model64: 0xf07a0000f07f},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ed, match64: 0x00000000, model64: 0x15a6100015a68},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ef, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15a7000015a78, model64: 0x15a7000015a78},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f1, match64: 0x00000000, model64: 0x280b0000280e},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x17f4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x15a7b00015a86, model64: 0x15a8600015a91},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f7, match64: 0x00000000, model64: 0x15a9500015aa3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15aa300015aab, model64: 0x9c3000009c38},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f9, match64: 0x00000000, model64: 0x15ab400015abc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15abc00015ac4, model64: 0x15ac400015ace},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15ace00015ad8, model64: 0x11e2300011e2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15ad800015ae1, model64: 0x15ae100015af0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15af000015af8, model64: 0x15af800015b02},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b0200015b0c, model64: 0x15b0c00015b18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b1800015b22, model64: 0x15b2200015b2e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b2e00015b33, model64: 0x15b3300015b39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b3900015b3e, model64: 0x15b3e00015b44},
		modelTuple{type64: 0x2700000027, matchRI: 0x17fa, match64: 0x00000000, model64: 0x15b4400015b4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b4f00015b58, model64: 0x15b4f00015b58},
		modelTuple{type64: 0x2700000027, matchRI: 0x17fb, match64: 0x00000000, model64: 0x15b5800015b60},
		modelTuple{type64: 0x2700000027, matchRI: 0x17fc, match64: 0x00000000, model64: 0x15b6000015b69},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b6900015b71, model64: 0x15b7100015b77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b7700015b7e, model64: 0x15b7e00015b85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b8500015b8d, model64: 0x15b8d00015b97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b9700015ba1, model64: 0x15ba100015baf},
		modelTuple{type64: 0x2700000027, matchRI: 0x17fd, match64: 0x00000000, model64: 0x15baf00015bbe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15bbe00015bc7, model64: 0x15bc700015bd2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15bd200015bde, model64: 0x15bde00015bed},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ff, match64: 0x00000000, model64: 0x15bf100015bf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1800, match64: 0x00000000, model64: 0x15bf400015bfa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15bfa00015c00, model64: 0x15c0000015c06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c0600015c0c, model64: 0x15c0c00015c12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c1200015c19, model64: 0x15c1900015c1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c1f00015c25, model64: 0x15c2500015c2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c2a00015c30, model64: 0x15c3000015c35},
		modelTuple{type64: 0x2700000027, matchRI: 0x1801, match64: 0x00000000, model64: 0x15c3500015c3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1802, match64: 0x00000000, model64: 0x15c3e00015c42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1803, match64: 0x00000000, model64: 0x15c4200015c45},
		modelTuple{type64: 0x2700000027, matchRI: 0x1804, match64: 0x00000000, model64: 0x15c4500015c49},
		modelTuple{type64: 0x2700000027, matchRI: 0x1805, match64: 0x00000000, model64: 0x15c4900015c4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c4d00015c54, model64: 0x15c5400015c58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1806, match64: 0x00000000, model64: 0x15c5800015c5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c5c00015c63, model64: 0x15c6300015c66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c6600015c6d, model64: 0x15c6d00015c71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c7100015c78, model64: 0x14af300014af6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c7800015c7e, model64: 0x15c3e00015c42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c7e00015c85, model64: 0x15c8500015c88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c8800015c8f, model64: 0x15c8f00015c93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c9300015c9a, model64: 0x15c9a00015c9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1807, match64: 0x00000000, model64: 0x15c9d00015ca0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15ca000015ca7, model64: 0x15ca700015caa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1808, match64: 0x00000000, model64: 0x171c0000171e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1809, match64: 0x00000000, model64: 0x15caa00015cb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x180a, match64: 0x00000000, model64: 0x15cb000015cb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x180b, match64: 0x00000000, model64: 0x15cb400015cb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x180c, match64: 0x00000000, model64: 0x15cb700015cba},
		modelTuple{type64: 0x2700000027, matchRI: 0x180d, match64: 0x00000000, model64: 0x15cba00015cbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x180e, match64: 0x00000000, model64: 0x15cbd00015cc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x180f, match64: 0x00000000, model64: 0x15cc000015cc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1810, match64: 0x00000000, model64: 0x628400006287},
		modelTuple{type64: 0x2700000027, matchRI: 0x1811, match64: 0x00000000, model64: 0x17490000174b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1812, match64: 0x00000000, model64: 0x15cc300015ccc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1813, match64: 0x00000000, model64: 0x15ccc00015cd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1814, match64: 0x00000000, model64: 0x15cd200015cd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1815, match64: 0x00000000, model64: 0x15cd500015cd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1816, match64: 0x00000000, model64: 0x15cd800015cdb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1817, match64: 0x00000000, model64: 0x15cdb00015cde},
		modelTuple{type64: 0x2700000027, matchRI: 0x1818, match64: 0x00000000, model64: 0x15cde00015ce2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1819, match64: 0x00000000, model64: 0x15ce200015ce9},
		modelTuple{type64: 0x2700000027, matchRI: 0x181a, match64: 0x00000000, model64: 0x15ce900015cef},
		modelTuple{type64: 0x2700000027, matchRI: 0x181b, match64: 0x00000000, model64: 0x15cef00015cf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x181c, match64: 0x00000000, model64: 0x15cf200015cf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x181d, match64: 0x00000000, model64: 0x15cf600015cfc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15cfc00015d03, model64: 0x15d0300015d06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15d0600015d0d, model64: 0x15d0d00015d10},
		modelTuple{type64: 0x2700000027, matchRI: 0x181e, match64: 0x00000000, model64: 0x15d1000015d17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15d1700015d1d, model64: 0x15d1d00015d23},
		modelTuple{type64: 0x2700000027, matchRI: 0x181f, match64: 0x00000000, model64: 0x15d2300015d26},
		modelTuple{type64: 0x2700000027, matchRI: 0x1820, match64: 0x00000000, model64: 0x15d2600015d30},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15d3000015d36, model64: 0x15d3600015d3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15d3c00015d43, model64: 0x15d4300015d46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15d4600015d4c, model64: 0x15d4c00015d4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15d4f00015d55, model64: 0x15d5500015d58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1821, match64: 0x00000000, model64: 0x15d5800015d5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1822, match64: 0x00000000, model64: 0x176000001762},
		modelTuple{type64: 0x2700000027, matchRI: 0x1823, match64: 0x00000000, model64: 0x15d5b00015d5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1824, match64: 0x00000000, model64: 0x15d5e00015d68},
		modelTuple{type64: 0x2700000027, matchRI: 0x1825, match64: 0x00000000, model64: 0xe40f0000e412},
		modelTuple{type64: 0x2700000027, matchRI: 0x1826, match64: 0x00000000, model64: 0x15d6800015d6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1827, match64: 0x00000000, model64: 0x15d6e00015d71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1828, match64: 0x00000000, model64: 0x15d7100015d77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1829, match64: 0x00000000, model64: 0x15d7700015d7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15d7e00015d85, model64: 0x15d8500015d88},
		modelTuple{type64: 0x2700000027, matchRI: 0x182a, match64: 0x00000000, model64: 0x15d8800015d8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x182b, match64: 0x00000000, model64: 0x15d8b00015d91},
		modelTuple{type64: 0x2700000027, matchRI: 0x182c, match64: 0x00000000, model64: 0x15d9100015d97},
		modelTuple{type64: 0x2700000027, matchRI: 0x182d, match64: 0x00000000, model64: 0x15d9700015d9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x182e, match64: 0x00000000, model64: 0x15d9a00015d9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x182f, match64: 0x00000000, model64: 0x15d9d00015da3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1830, match64: 0x00000000, model64: 0x15da300015da7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1831, match64: 0x00000000, model64: 0x15da700015daa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1832, match64: 0x00000000, model64: 0x15daa00015dad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1833, match64: 0x00000000, model64: 0x1132600011328},
		modelTuple{type64: 0x2700000027, matchRI: 0x1834, match64: 0x00000000, model64: 0x15dad00015db0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1835, match64: 0x00000000, model64: 0x15db000015dba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1836, match64: 0x00000000, model64: 0x47a0000047c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1837, match64: 0x00000000, model64: 0x15dba00015dc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1838, match64: 0x00000000, model64: 0x15dc300015dc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1839, match64: 0x00000000, model64: 0x15dc600015dc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x183a, match64: 0x00000000, model64: 0x15dc900015dcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x183b, match64: 0x00000000, model64: 0x15dcd00015dd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x183c, match64: 0x00000000, model64: 0x15dd000015dd4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15dd400015dda, model64: 0x15dda00015de0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15de000015de7, model64: 0x15de700015ded},
		modelTuple{type64: 0x2700000027, matchRI: 0x183d, match64: 0x00000000, model64: 0x15ded00015df0},
		modelTuple{type64: 0x2700000027, matchRI: 0x183e, match64: 0x00000000, model64: 0x15d7100015d77},
		modelTuple{type64: 0x2700000027, matchRI: 0x183f, match64: 0x00000000, model64: 0x15df000015df3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1840, match64: 0x00000000, model64: 0x15df300015df6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1841, match64: 0x00000000, model64: 0x15df600015df9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1842, match64: 0x00000000, model64: 0x15df900015dfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1843, match64: 0x00000000, model64: 0x15dfd00015e00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e0000015e07, model64: 0x15e0700015e0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1844, match64: 0x00000000, model64: 0x15e0e00015e16},
		modelTuple{type64: 0x2700000027, matchRI: 0x1845, match64: 0x00000000, model64: 0x15e1600015e1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e1d00015e24, model64: 0x15e2400015e2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e2a00015e31, model64: 0x15e3100015e3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e3b00015e42, model64: 0x15e4200015e4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1846, match64: 0x00000000, model64: 0x15e4d00015e50},
		modelTuple{type64: 0x2700000027, matchRI: 0x1847, match64: 0x00000000, model64: 0x15e5000015e57},
		modelTuple{type64: 0x2700000027, matchRI: 0x1848, match64: 0x00000000, model64: 0x15e5700015e5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1849, match64: 0x00000000, model64: 0x15e5a00015e61},
		modelTuple{type64: 0x2700000027, matchRI: 0x184a, match64: 0x00000000, model64: 0x15e6100015e64},
		modelTuple{type64: 0x2700000027, matchRI: 0x184b, match64: 0x00000000, model64: 0x15e6400015e66},
		modelTuple{type64: 0x2700000027, matchRI: 0x184c, match64: 0x00000000, model64: 0x15e6600015e6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x184d, match64: 0x00000000, model64: 0x11ffd00011fff},
		modelTuple{type64: 0x2700000027, matchRI: 0x184e, match64: 0x00000000, model64: 0x15e6d00015e75},
		modelTuple{type64: 0x2700000027, matchRI: 0x184f, match64: 0x00000000, model64: 0x6fa400006fa6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e7500015e7d, model64: 0x15e7500015e7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1850, match64: 0x00000000, model64: 0x15e7d00015e7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1851, match64: 0x00000000, model64: 0x15e7f00015e85},
		modelTuple{type64: 0x2700000027, matchRI: 0x1852, match64: 0x00000000, model64: 0x15e8500015e89},
		modelTuple{type64: 0x2700000027, matchRI: 0x1853, match64: 0x00000000, model64: 0x15e8900015e90},
		modelTuple{type64: 0x2700000027, matchRI: 0x1854, match64: 0x00000000, model64: 0x15e9000015e9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1855, match64: 0x00000000, model64: 0x15e9c00015ea2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1856, match64: 0x00000000, model64: 0x15ea200015ead},
		modelTuple{type64: 0x2700000027, matchRI: 0x1857, match64: 0x00000000, model64: 0x15ead00015eb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1858, match64: 0x00000000, model64: 0x15eb300015eba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1859, match64: 0x00000000, model64: 0x15eba00015ec3},
		modelTuple{type64: 0x2700000027, matchRI: 0x185a, match64: 0x00000000, model64: 0x15ec300015ec9},
		modelTuple{type64: 0x2700000027, matchRI: 0x185b, match64: 0x00000000, model64: 0x15ec900015ed0},
		modelTuple{type64: 0x2700000027, matchRI: 0x185c, match64: 0x00000000, model64: 0x15ed000015edc},
		modelTuple{type64: 0x2700000027, matchRI: 0x185d, match64: 0x00000000, model64: 0x15edc00015ee8},
		modelTuple{type64: 0x2700000027, matchRI: 0x185e, match64: 0x00000000, model64: 0x15ee800015eef},
		modelTuple{type64: 0x2700000027, matchRI: 0x185f, match64: 0x00000000, model64: 0x15eef00015efa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1860, match64: 0x00000000, model64: 0x15efa00015f05},
		modelTuple{type64: 0x2700000027, matchRI: 0x1861, match64: 0x00000000, model64: 0x15f0500015f10},
		modelTuple{type64: 0x2700000027, matchRI: 0x1862, match64: 0x00000000, model64: 0x15f1000015f19},
		modelTuple{type64: 0x2700000027, matchRI: 0x1863, match64: 0x00000000, model64: 0x15f1900015f23},
		modelTuple{type64: 0x2700000027, matchRI: 0x1864, match64: 0x00000000, model64: 0x15f2300015f2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1865, match64: 0x00000000, model64: 0x15f2a00015f30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1866, match64: 0x00000000, model64: 0x15f3000015f42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1867, match64: 0x00000000, model64: 0x15f4200015f49},
		modelTuple{type64: 0x2700000027, matchRI: 0x1868, match64: 0x00000000, model64: 0x15f4900015f55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1869, match64: 0x00000000, model64: 0x15f5500015f60},
		modelTuple{type64: 0x2700000027, matchRI: 0x186a, match64: 0x00000000, model64: 0x15f6000015f67},
		modelTuple{type64: 0x2700000027, matchRI: 0x186b, match64: 0x00000000, model64: 0x15f6700015f72},
		modelTuple{type64: 0x2700000027, matchRI: 0x186c, match64: 0x00000000, model64: 0x15f7200015f7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x186d, match64: 0x00000000, model64: 0x15f7d00015f89},
		modelTuple{type64: 0x2700000027, matchRI: 0x186e, match64: 0x00000000, model64: 0x15f8900015f90},
		modelTuple{type64: 0x2700000027, matchRI: 0x186f, match64: 0x00000000, model64: 0x15f9000015f9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f9b00015fa1, model64: 0x15fa100015fac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15fac00015fb2, model64: 0x15fb200015fb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15fb900015fbf, model64: 0x15fbf00015fc6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15fc600015fcc, model64: 0x15fcc00015fd9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15fd900015fdf, model64: 0x15fdf00015fef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1870, match64: 0x00000000, model64: 0x15fef00015ff7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1871, match64: 0x00000000, model64: 0xa2710000a273},
		modelTuple{type64: 0x2700000027, matchRI: 0x1872, match64: 0x00000000, model64: 0x57600000578},
		modelTuple{type64: 0x2700000027, matchRI: 0x1873, match64: 0x00000000, model64: 0x1007500010077},
		modelTuple{type64: 0x2700000027, matchRI: 0x1874, match64: 0x00000000, model64: 0xff480000ff4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1875, match64: 0x00000000, model64: 0x1008000010082},
		modelTuple{type64: 0x2700000027, matchRI: 0x1876, match64: 0x00000000, model64: 0x15ff700015ffa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1877, match64: 0x00000000, model64: 0x15ffa00015ffd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1878, match64: 0x00000000, model64: 0x15ffd00016001},
		modelTuple{type64: 0x2700000027, matchRI: 0x1879, match64: 0x00000000, model64: 0x1600100016004},
		modelTuple{type64: 0x2700000027, matchRI: 0x187a, match64: 0x00000000, model64: 0x1008b0001008e},
		modelTuple{type64: 0x2700000027, matchRI: 0x187b, match64: 0x00000000, model64: 0x160040001600a},
		modelTuple{type64: 0x2700000027, matchRI: 0x187c, match64: 0x00000000, model64: 0x1600a00016014},
		modelTuple{type64: 0x2700000027, matchRI: 0x187d, match64: 0x00000000, model64: 0x160140001601a},
		modelTuple{type64: 0x2700000027, matchRI: 0x187e, match64: 0x00000000, model64: 0x1601a0001601f},
		modelTuple{type64: 0x2700000027, matchRI: 0x187f, match64: 0x00000000, model64: 0x15c2500015c2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1880, match64: 0x00000000, model64: 0x1601f00016026},
		modelTuple{type64: 0x2700000027, matchRI: 0x1881, match64: 0x00000000, model64: 0x160260001602c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1882, match64: 0x00000000, model64: 0x1602c00016033},
		modelTuple{type64: 0x2700000027, matchRI: 0x1883, match64: 0x00000000, model64: 0x1595100015953},
		modelTuple{type64: 0x2700000027, matchRI: 0x1884, match64: 0x00000000, model64: 0x136990001369c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1885, match64: 0x00000000, model64: 0x1603300016038},
		modelTuple{type64: 0x2700000027, matchRI: 0x1886, match64: 0x00000000, model64: 0x160380001603d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1887, match64: 0x00000000, model64: 0x1603d00016042},
		modelTuple{type64: 0x2700000027, matchRI: 0x1888, match64: 0x00000000, model64: 0x1604200016048},
		modelTuple{type64: 0x2700000027, matchRI: 0x1889, match64: 0x00000000, model64: 0x160480001604d},
		modelTuple{type64: 0x2700000027, matchRI: 0x188a, match64: 0x00000000, model64: 0x1604d00016050},
		modelTuple{type64: 0x2700000027, matchRI: 0x188b, match64: 0x00000000, model64: 0x1605000016058},
		modelTuple{type64: 0x2700000027, matchRI: 0x188c, match64: 0x00000000, model64: 0x160580001605b},
		modelTuple{type64: 0x2700000027, matchRI: 0x188d, match64: 0x00000000, model64: 0x1605b0001605e},
		modelTuple{type64: 0x2700000027, matchRI: 0x188e, match64: 0x00000000, model64: 0x1605e00016067},
		modelTuple{type64: 0x2700000027, matchRI: 0x188f, match64: 0x00000000, model64: 0x160670001606b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1890, match64: 0x00000000, model64: 0x1606b0001606e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1891, match64: 0x00000000, model64: 0x1606e00016075},
		modelTuple{type64: 0x2700000027, matchRI: 0x1892, match64: 0x00000000, model64: 0x1607500016079},
		modelTuple{type64: 0x2700000027, matchRI: 0x1893, match64: 0x00000000, model64: 0x160790001607c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1607c00016083, model64: 0x160830001608b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1608b0001609b, model64: 0x1608b0001609b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1609b000160a2, model64: 0x1609b000160a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1894, match64: 0x00000000, model64: 0x160a2000160a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1895, match64: 0x00000000, model64: 0x160a9000160b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1896, match64: 0x00000000, model64: 0x160b0000160b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1897, match64: 0x00000000, model64: 0x160b3000160b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1898, match64: 0x00000000, model64: 0x109cd000109cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1899, match64: 0x00000000, model64: 0x160b6000160bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x189a, match64: 0x00000000, model64: 0x160bd000160c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x189b, match64: 0x00000000, model64: 0x160c5000160c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x189c, match64: 0x00000000, model64: 0x1362b0001362d},
		modelTuple{type64: 0x2700000027, matchRI: 0x189d, match64: 0x00000000, model64: 0x160c8000160cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x189e, match64: 0x00000000, model64: 0x160cf000160d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x189f, match64: 0x00000000, model64: 0x160d8000160df},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a0, match64: 0x00000000, model64: 0x160df000160e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a1, match64: 0x00000000, model64: 0x160e2000160ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a2, match64: 0x00000000, model64: 0x160ea000160ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a3, match64: 0x00000000, model64: 0x160ee000160f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a4, match64: 0x00000000, model64: 0x160f400016101},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1610100016107, model64: 0x161070001610f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1610f00016115, model64: 0x161150001611c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1611c00016123, model64: 0x161230001612d},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a5, match64: 0x00000000, model64: 0x1612d0001613b},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a6, match64: 0x00000000, model64: 0x1613b0001614a},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a7, match64: 0x00000000, model64: 0x1614a00016155},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a8, match64: 0x00000000, model64: 0x161550001615c},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a9, match64: 0x00000000, model64: 0x1615c00016163},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x161630001616a, model64: 0x1616a00016174},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x161740001617b, model64: 0x1617b00016187},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x161870001618e, model64: 0x1618e0001619a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1619a000161a1, model64: 0x161a1000161af},
		modelTuple{type64: 0x2700000027, matchRI: 0x18aa, match64: 0x00000000, model64: 0x161af000161b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ab, match64: 0x00000000, model64: 0x161b5000161bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ac, match64: 0x00000000, model64: 0x161bc000161c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ad, match64: 0x00000000, model64: 0x161c3000161c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ae, match64: 0x00000000, model64: 0x161c9000161d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x18af, match64: 0x00000000, model64: 0x161d0000161d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b0, match64: 0x00000000, model64: 0x161d9000161e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b1, match64: 0x00000000, model64: 0x161e3000161ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b2, match64: 0x00000000, model64: 0x161ee000161f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b3, match64: 0x00000000, model64: 0x161f700016202},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b4, match64: 0x00000000, model64: 0x162020001620f},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b5, match64: 0x00000000, model64: 0x1620f00016218},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b6, match64: 0x00000000, model64: 0x1621800016225},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b7, match64: 0x00000000, model64: 0x1622500016232},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b8, match64: 0x00000000, model64: 0x162320001623c},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b9, match64: 0x00000000, model64: 0x1623c00016243},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ba, match64: 0x00000000, model64: 0x1624300016249},
		modelTuple{type64: 0x2700000027, matchRI: 0x18bb, match64: 0x00000000, model64: 0x1624900016250},
		modelTuple{type64: 0x2700000027, matchRI: 0x18bc, match64: 0x00000000, model64: 0x162500001625b},
		modelTuple{type64: 0x2700000027, matchRI: 0x18bd, match64: 0x00000000, model64: 0x1625b00016264},
		modelTuple{type64: 0x2700000027, matchRI: 0x18be, match64: 0x00000000, model64: 0x162640001626b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1626b00016275, model64: 0x162750001627f},
		modelTuple{type64: 0x2700000027, matchRI: 0x18bf, match64: 0x00000000, model64: 0x1627f00016286},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c0, match64: 0x00000000, model64: 0x162860001628d},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c1, match64: 0x00000000, model64: 0x1628d0001629a},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c2, match64: 0x00000000, model64: 0x1629a000162ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c3, match64: 0x00000000, model64: 0x162ac000162b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c4, match64: 0x00000000, model64: 0x162b3000162b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c5, match64: 0x00000000, model64: 0x162b9000162c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c6, match64: 0x00000000, model64: 0x162c4000162ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c7, match64: 0x00000000, model64: 0x162ce000162db},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c8, match64: 0x00000000, model64: 0x162db000162ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c9, match64: 0x00000000, model64: 0x162ea000162f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162f0000162f7, model64: 0x162f7000162fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ca, match64: 0x00000000, model64: 0x162fe00016305},
		modelTuple{type64: 0x2700000027, matchRI: 0x18cb, match64: 0x00000000, model64: 0x163050001630e},
		modelTuple{type64: 0x2700000027, matchRI: 0x18cc, match64: 0x00000000, model64: 0x1630e00016318},
		modelTuple{type64: 0x2700000027, matchRI: 0x18cd, match64: 0x00000000, model64: 0x1631800016322},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1632200016328, model64: 0x1632800016333},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163330001633a, model64: 0x1633a00016342},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1634200016348, model64: 0x163480001634e},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ce, match64: 0x00000000, model64: 0x1634e00016355},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163550001635b, model64: 0x1635b00016361},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1636100016367, model64: 0x1636700016372},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1637200016378, model64: 0x1637800016382},
		modelTuple{type64: 0x2700000027, matchRI: 0x18cf, match64: 0x00000000, model64: 0x163820001638a},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d0, match64: 0x00000000, model64: 0x1638a00016393},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d1, match64: 0x00000000, model64: 0x1639300016398},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16398000163a6, model64: 0x16398000163a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d2, match64: 0x00000000, model64: 0x163a6000163ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d3, match64: 0x00000000, model64: 0x163ae000163b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d4, match64: 0x00000000, model64: 0x163b8000163bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d5, match64: 0x00000000, model64: 0x163bf000163c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d6, match64: 0x00000000, model64: 0x163c5000163c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163c9000163d0, model64: 0x163d0000163d6},
		modelTuple{type64: 0x24300000245, matchRI: 0x18d7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x18d8, match64: 0x00000000, model64: 0x163d6000163dd},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x163dd000163e4, model64: 0x163e4000163ed},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x163ed000163f4, model64: 0x163f4000163fb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x163fb00016402, model64: 0x1640200016407},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x164070001640e, model64: 0x1640e00016416},
		modelTuple{type64: 0x285a00002862, matchRI: 0x18d9, match64: 0x00000000, model64: 0x1641600016420},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1642000016426, model64: 0x1642600016430},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1643000016436, model64: 0x1643600016442},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x18da, match64: 0x00000000, model64: 0x1644200016445},
		modelTuple{type64: 0x2700000027, matchRI: 0x18db, match64: 0x00000000, model64: 0x79ea000079ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x18dc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x18dd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1644a00016452, model64: 0x164520001645a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1645a00016461, model64: 0x1646100016468},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164680001646f, model64: 0x164680001646f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1646f00016476, model64: 0x164760001647d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1647d00016483, model64: 0x164830001648a},
		modelTuple{type64: 0x2700000027, matchRI: 0x18df, match64: 0x00000000, model64: 0x1648a00016492},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x18e1, match64: 0x00000000, model64: 0x5a8c00005a92},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x164920001649a, model64: 0x164920001649a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164a3000164ae, model64: 0x164ae000164b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e3, match64: 0x00000000, model64: 0x164b5000164b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164b8000164c0, model64: 0x164c0000164c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e6, match64: 0x00000000, model64: 0x164ce000164d7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e9, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ea, match64: 0x00000000, model64: 0x164e0000164e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ec, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ed, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164f3000164fd, model64: 0xe04e0000e055},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ef, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f2, match64: 0x00000000, model64: 0x165040001650b},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f3, match64: 0x00000000, model64: 0x1650b00016512},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f4, match64: 0x00000000, model64: 0x1651200016518},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f5, match64: 0x00000000, model64: 0x165180001651e},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f6, match64: 0x00000000, model64: 0x1651e00016521},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f8, match64: 0x00000000, model64: 0x165210001652a},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f9, match64: 0x00000000, model64: 0x1652a00016531},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fa, match64: 0x00000000, model64: 0x1653100016539},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fb, match64: 0x00000000, model64: 0x165390001653c},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fc, match64: 0x00000000, model64: 0x1653c00016543},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fd, match64: 0x00000000, model64: 0x165430001654a},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fe, match64: 0x00000000, model64: 0x1654a0001654f},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ff, match64: 0x00000000, model64: 0x1654f00016557},
		modelTuple{type64: 0x2700000027, matchRI: 0x1900, match64: 0x00000000, model64: 0x1655700016560},
		modelTuple{type64: 0x2700000027, matchRI: 0x1901, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1902, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1904, match64: 0x00000000, model64: 0x165670001657c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1905, match64: 0x00000000, model64: 0x1657c00016587},
		modelTuple{type64: 0x2700000027, matchRI: 0x1907, match64: 0x00000000, model64: 0x1658b00016599},
		modelTuple{type64: 0x2700000027, matchRI: 0x1908, match64: 0x00000000, model64: 0x16599000165a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165a1000165af, model64: 0x165af000165bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165bf000165c8, model64: 0x165c8000165d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165d1000165e6, model64: 0x165e6000165fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165fb0001660e, model64: 0x1660e00016621},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166210001662f, model64: 0x1662f0001663e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1663e0001664d, model64: 0x1664d0001665d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1665d0001666f, model64: 0x1666f00016682},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166820001668d, model64: 0x1668d00016698},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16698000166a8, model64: 0x166a8000166b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166b8000166c9, model64: 0x166c9000166db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166db000166e7, model64: 0x166e7000166f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166f500016700, model64: 0x167000001670d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1670d0001671d, model64: 0x1671d0001672d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1672d0001673a, model64: 0x1673a00016747},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1674700016753, model64: 0x167530001675f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1909, match64: 0x00000000, model64: 0x1675f00016773},
		modelTuple{type64: 0x2700000027, matchRI: 0x190a, match64: 0x00000000, model64: 0x1677300016780},
		modelTuple{type64: 0x2700000027, matchRI: 0x190b, match64: 0x00000000, model64: 0x167800001678c},
		modelTuple{type64: 0x2700000027, matchRI: 0x190c, match64: 0x00000000, model64: 0x1678c00016797},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16797000167a3, model64: 0x167a3000167af},
		modelTuple{type64: 0x2700000027, matchRI: 0x190d, match64: 0x00000000, model64: 0x167af000167ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x190e, match64: 0x00000000, model64: 0x167ba000167c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x167c6000167cd, model64: 0x167cd000167d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x167d4000167e3, model64: 0x167e3000167f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x167f300016801, model64: 0x1680100016810},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168100001681b, model64: 0x1681b00016827},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1682700016835, model64: 0x1683500016844},
		modelTuple{type64: 0x2700000027, matchRI: 0x190f, match64: 0x00000000, model64: 0x168440001684b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1684b00016856, model64: 0x1685600016863},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168630001686f, model64: 0x1686f0001687b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1687b00016883, model64: 0x1688300016888},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168880001688d, model64: 0x1688d00016893},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16893000168a1, model64: 0x168a1000168af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1910, match64: 0x00000000, model64: 0x168af000168b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168b6000168ba, model64: 0x168ba000168be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168be000168cf, model64: 0x168cf000168e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168e0000168e6, model64: 0x168e6000168ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1911, match64: 0x00000000, model64: 0x168ee000168f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168f5000168fe, model64: 0x168fe00016903},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169030001690f, model64: 0x1690f0001691b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1691b00016929, model64: 0x1692900016937},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1693700016946, model64: 0x1694600016955},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1695500016961, model64: 0x1696100016968},
		modelTuple{type64: 0x2700000027, matchRI: 0x1912, match64: 0x00000000, model64: 0x1696800016977},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1697700016982, model64: 0x169820001698f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1698f00016998, model64: 0x16998000169a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169a1000169ac, model64: 0x169ac000169b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169b7000169c2, model64: 0x169c2000169cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169cd000169dc, model64: 0x169dc000169eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1913, match64: 0x00000000, model64: 0x169eb000169f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1914, match64: 0x00000000, model64: 0x169f600016a02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1915, match64: 0x00000000, model64: 0x16a0200016a0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a0f00016a14, model64: 0x16a1400016a19},
		modelTuple{type64: 0x24700000251, matchRI: 0x1916, match64: 0x00000000, model64: 0x16a1900016a22},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x16a2200016a2b, model64: 0x16a2b00016a34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1917, match64: 0x00000000, model64: 0x16a3400016a3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1918, match64: 0x00000000, model64: 0x16a3b00016a3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1919, match64: 0x00000000, model64: 0x16a3f00016a47},
		modelTuple{type64: 0x2700000027, matchRI: 0x191a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16a4900016a52},
		modelTuple{type64: 0x2700000027, matchRI: 0x191d, match64: 0x00000000, model64: 0x16a5800016a64},
		modelTuple{type64: 0x2700000027, matchRI: 0x191e, match64: 0x00000000, model64: 0xedc00000ede},
		modelTuple{type64: 0x2700000027, matchRI: 0x191f, match64: 0x00000000, model64: 0x16a6400016a6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1920, match64: 0x00000000, model64: 0x16a6a00016a70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1921, match64: 0x00000000, model64: 0x59b5000059ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a7500016a7f, model64: 0x16a7f00016a87},
		modelTuple{type64: 0x2700000027, matchRI: 0x1923, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1925, match64: 0x00000000, model64: 0x16a8b00016a93},
		modelTuple{type64: 0x2700000027, matchRI: 0x1926, match64: 0x00000000, model64: 0x16a9300016a9b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16aa500016aad},
		modelTuple{type64: 0x2700000027, matchRI: 0x192a, match64: 0x00000000, model64: 0x16ab400016ab8},
		modelTuple{type64: 0x2700000027, matchRI: 0x192c, match64: 0x00000000, model64: 0x16abc00016ac0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x192d, match64: 0x00000000, model64: 0x16ac000016ac3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x192e, match64: 0x00000000, model64: 0x16ac300016ad0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x192f, match64: 0x00000000, model64: 0x16ad000016add},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1930, match64: 0x00000000, model64: 0x16add00016ae9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1931, match64: 0x00000000, model64: 0x16ae900016afc},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x16afc00016b08, model64: 0x16b0800016b18},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1932, match64: 0x00000000, model64: 0x16b1800016b28},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x16b2800016b3a, model64: 0x16b3a00016b4d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x16b4d00016b5e, model64: 0x16b5e00016b70},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x16b7000016b7a, model64: 0x16b7a00016b85},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x16b8500016b93, model64: 0x16b9300016ba2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x16ba200016bab, model64: 0x16bab00016bb6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1933, match64: 0x00000000, model64: 0x16bb600016bcb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1934, match64: 0x00000000, model64: 0x16bcb00016bd8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1935, match64: 0x00000000, model64: 0x16bd800016be4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1936, match64: 0x00000000, model64: 0x16be400016bea},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1937, match64: 0x00000000, model64: 0x16bea00016bfa},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1938, match64: 0x00000000, model64: 0x16bfa00016c05},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1939, match64: 0x00000000, model64: 0x16c0500016c10},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x193a, match64: 0x00000000, model64: 0x16c1000016c16},
		modelTuple{type64: 0x2700000027, matchRI: 0x193b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x193c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c1e00016c2c, model64: 0x16c2c00016c3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x193e, match64: 0x00000000, model64: 0x16c3a00016c45},
		modelTuple{type64: 0x2700000027, matchRI: 0x193f, match64: 0x00000000, model64: 0x16c4500016c4f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1942, match64: 0x00000000, model64: 0x16c5d00016c60},
		modelTuple{type64: 0x2700000027, matchRI: 0x1943, match64: 0x00000000, model64: 0x16c6000016c62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1944, match64: 0x00000000, model64: 0xae760000ae78},
		modelTuple{type64: 0x2700000027, matchRI: 0x1945, match64: 0x00000000, model64: 0x16c6200016c68},
		modelTuple{type64: 0x2700000027, matchRI: 0x1946, match64: 0x00000000, model64: 0x16c6800016c6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1947, match64: 0x00000000, model64: 0x16c6c00016c71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1948, match64: 0x00000000, model64: 0x16c7100016c7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1949, match64: 0x00000000, model64: 0x16c7d00016c83},
		modelTuple{type64: 0x2700000027, matchRI: 0x194a, match64: 0x00000000, model64: 0x16c8300016c88},
		modelTuple{type64: 0x2700000027, matchRI: 0x194b, match64: 0x00000000, model64: 0x16c8800016c91},
		modelTuple{type64: 0x2700000027, matchRI: 0x194c, match64: 0x00000000, model64: 0x7eb000007ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x194d, match64: 0x00000000, model64: 0x16c9100016c97},
		modelTuple{type64: 0x2700000027, matchRI: 0x194e, match64: 0x00000000, model64: 0x16c9700016c9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x194f, match64: 0x00000000, model64: 0x16c9e00016cb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1950, match64: 0x00000000, model64: 0x16cb000016cb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1951, match64: 0x00000000, model64: 0x16cb700016cbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1952, match64: 0x00000000, model64: 0x16cbe00016cc8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16cc800016ccf, model64: 0x16ccf00016cd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1953, match64: 0x00000000, model64: 0x16cd800016ce9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1954, match64: 0x00000000, model64: 0x16ce900016cf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1955, match64: 0x00000000, model64: 0x16cf700016d05},
		modelTuple{type64: 0x2700000027, matchRI: 0x1956, match64: 0x00000000, model64: 0x16d0500016d11},
		modelTuple{type64: 0x2700000027, matchRI: 0x1957, match64: 0x00000000, model64: 0x16d1100016d1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1958, match64: 0x00000000, model64: 0x1332e00013334},
		modelTuple{type64: 0x2700000027, matchRI: 0x1959, match64: 0x00000000, model64: 0x16d1a00016d23},
		modelTuple{type64: 0x2700000027, matchRI: 0x195a, match64: 0x00000000, model64: 0x16d2300016d2f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16d2f00016d36, model64: 0x16d3600016d42},
		modelTuple{type64: 0x2700000027, matchRI: 0x195b, match64: 0x00000000, model64: 0x16d4200016d4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x195c, match64: 0x00000000, model64: 0x16d4d00016d58},
		modelTuple{type64: 0x2700000027, matchRI: 0x195d, match64: 0x00000000, model64: 0x16d5800016d66},
		modelTuple{type64: 0x2700000027, matchRI: 0x195e, match64: 0x00000000, model64: 0x16d6600016d71},
		modelTuple{type64: 0x2700000027, matchRI: 0x195f, match64: 0x00000000, model64: 0x16d7100016d79},
		modelTuple{type64: 0x2700000027, matchRI: 0x1960, match64: 0x00000000, model64: 0x16d7900016d84},
		modelTuple{type64: 0x2700000027, matchRI: 0x1961, match64: 0x00000000, model64: 0x16d8400016d91},
		modelTuple{type64: 0x2700000027, matchRI: 0x1962, match64: 0x00000000, model64: 0x16d9100016d9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1963, match64: 0x00000000, model64: 0x16d9a00016da3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1964, match64: 0x00000000, model64: 0x16da300016da8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1965, match64: 0x00000000, model64: 0x16da800016daa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1966, match64: 0x00000000, model64: 0x16daa00016db0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1967, match64: 0x00000000, model64: 0x3ab700003ab8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1968, match64: 0x00000000, model64: 0x16db000016db7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1969, match64: 0x00000000, model64: 0xae5f0000ae60},
		modelTuple{type64: 0x2700000027, matchRI: 0x196a, match64: 0x00000000, model64: 0x16db700016dbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x196b, match64: 0x00000000, model64: 0x16dbd00016dbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x196c, match64: 0x00000000, model64: 0x16dbf00016dc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x196d, match64: 0x00000000, model64: 0x16dc200016dc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x196e, match64: 0x00000000, model64: 0x16dc800016dce},
		modelTuple{type64: 0x2700000027, matchRI: 0x196f, match64: 0x00000000, model64: 0xae510000ae56},
		modelTuple{type64: 0x2700000027, matchRI: 0x1970, match64: 0x00000000, model64: 0x16dce00016de4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1971, match64: 0x00000000, model64: 0xae700000ae76},
		modelTuple{type64: 0x2700000027, matchRI: 0x1972, match64: 0x00000000, model64: 0x16de400016de9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1973, match64: 0x00000000, model64: 0x1b3200001b33},
		modelTuple{type64: 0x2700000027, matchRI: 0x1974, match64: 0x00000000, model64: 0x16de900016deb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1975, match64: 0x00000000, model64: 0x16deb00016df1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1976, match64: 0x00000000, model64: 0x16df100016dfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1977, match64: 0x00000000, model64: 0x16da800016daa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1978, match64: 0x00000000, model64: 0x16dfa00016e00},
		modelTuple{type64: 0x2700000027, matchRI: 0x1979, match64: 0x00000000, model64: 0xa8750000a878},
		modelTuple{type64: 0x2700000027, matchRI: 0x197a, match64: 0x00000000, model64: 0x12c5700012c58},
		modelTuple{type64: 0x2700000027, matchRI: 0x197b, match64: 0x00000000, model64: 0x1c9300001c94},
		modelTuple{type64: 0x2700000027, matchRI: 0x197c, match64: 0x00000000, model64: 0x16e0000016e02},
		modelTuple{type64: 0x2700000027, matchRI: 0x197d, match64: 0x00000000, model64: 0x1aee00001aef},
		modelTuple{type64: 0x2700000027, matchRI: 0x197e, match64: 0x00000000, model64: 0x16e0200016e04},
		modelTuple{type64: 0x2700000027, matchRI: 0x197f, match64: 0x00000000, model64: 0x1b2000001b21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1980, match64: 0x00000000, model64: 0x1514c0001514d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1981, match64: 0x00000000, model64: 0x16e0400016e06},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1982, match64: 0x00000000, model64: 0x16e0600016e15},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1983, match64: 0x00000000, model64: 0x16e1500016e22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1984, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1986, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1987, match64: 0x00000000, model64: 0x16e2700016e35},
		modelTuple{type64: 0x24300000245, matchRI: 0x1988, match64: 0x00000000, model64: 0x27300000273e},
		modelTuple{type64: 0x2700000027, matchRI: 0x198a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x198b, match64: 0x00000000, model64: 0x16e3900016e45},
		modelTuple{type64: 0x24700000251, matchRI: 0x198c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x198e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x198f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xa8750000a878},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5a7100005a77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e6800016e74, model64: 0x16e7400016e80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e8000016e92, model64: 0x16e9200016e99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e9900016eab, model64: 0x16eab00016eb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16eb500016ec8, model64: 0x16ec800016ecf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1993, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ed600016ee7, model64: 0x16ee700016ef8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ef800016f05, model64: 0x16f0500016f12},
		modelTuple{type64: 0x2700000027, matchRI: 0x1994, match64: 0x00000000, model64: 0x16f1200016f1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1995, match64: 0x00000000, model64: 0x16f1e00016f26},
		modelTuple{type64: 0x2700000027, matchRI: 0x1996, match64: 0x00000000, model64: 0x16f2600016f30},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f3000016f36, model64: 0x16f3600016f3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1997, match64: 0x00000000, model64: 0x16f3c00016f41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f4700016f50, model64: 0x16f5000016f59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f5900016f62, model64: 0x16f6200016f6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1999, match64: 0x00000000, model64: 0x16f6b00016f75},
		modelTuple{type64: 0x2700000027, matchRI: 0x199b, match64: 0x00000000, model64: 0x16f7b00016f83},
		modelTuple{type64: 0x2700000027, matchRI: 0x199c, match64: 0x00000000, model64: 0x16f7b00016f83},
		modelTuple{type64: 0x2700000027, matchRI: 0x199d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x199e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f8900016f93, model64: 0x16f9300016f98},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x16f9e00016fa6, model64: 0x16fa600016fb2},
		modelTuple{type64: 0x24300000245, matchRI: 0x19a1, match64: 0x00000000, model64: 0x5a7100005a77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16fb200016fbb, model64: 0x16fbb00016fc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16fc400016fcc, model64: 0x16fcc00016fd4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16fd400016fdc, model64: 0x16fdc00016fe4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16fe400016fee, model64: 0x16fee00016ff8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ff800016ffe, model64: 0x16ff800016ffe},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x16ffe00017002, model64: 0x16ffe00017002},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19a2, match64: 0x00000000, model64: 0x170020001700b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1700b00017019, model64: 0x1701900017025},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1702500017032, model64: 0x1703200017042},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1704200017051, model64: 0x1705100017059},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a3, match64: 0x00000000, model64: 0x634000006345},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a4, match64: 0x00000000, model64: 0x1705900017065},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a5, match64: 0x00000000, model64: 0x170650001706c},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a7, match64: 0x00000000, model64: 0x1706c00017072},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1708000017086, model64: 0x6d1200006d1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170860001708c, model64: 0x1708c00017090},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1709000017096, model64: 0x170960001709a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1709a000170a0, model64: 0x170a0000170a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170a6000170ad, model64: 0x170ad000170b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170b6000170bc, model64: 0xe9610000e964},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170bc000170c2, model64: 0x8aeb00008aee},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x170c2000170c7, model64: 0x170c7000170ce},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ac, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19af, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19b0, match64: 0x00000000, model64: 0x170e5000170ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170f2000170fa, model64: 0x170f2000170fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171010001710b, model64: 0x171010001710b},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b7, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b8, match64: 0x00000000, model64: 0x1710b00017113},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b9, match64: 0x00000000, model64: 0x851100008517},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ba, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bb, match64: 0x00000000, model64: 0x4a7e00004a85},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bc, match64: 0x00000000, model64: 0x1711300017119},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bd, match64: 0x00000000, model64: 0x1711900017128},
		modelTuple{type64: 0x2700000027, matchRI: 0x19be, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bf, match64: 0x00000000, model64: 0xeb120000eb15},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1712800017134, model64: 0x1713400017140},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1714000017149, model64: 0x1714900017152},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19c0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x171590001715f, model64: 0x1715f0001716a},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1716a00017179, model64: 0x1716a00017179},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1717900017188, model64: 0x1717900017188},
		modelTuple{type64: 0x24700000251, matchRI: 0x19c4, match64: 0x00000000, model64: 0x1718800017191},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171910001719d, model64: 0x1719d000171aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171aa000171b7, model64: 0x171aa000171b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c5, match64: 0x00000000, model64: 0x171b7000171c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c6, match64: 0x00000000, model64: 0x171b7000171c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x171ca000171d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ca, match64: 0x00000000, model64: 0x171d6000171e1},
		modelTuple{type64: 0x24700000251, matchRI: 0x19cc, match64: 0x00000000, model64: 0x171e8000171f4},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x171f4000171fc, model64: 0x171fc00017205},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x172050001720c, model64: 0x1720c00017214},
		modelTuple{type64: 0x24700000251, matchRI: 0x19cd, match64: 0x00000000, model64: 0x172140001721e},
		modelTuple{type64: 0x24700000251, matchRI: 0x19ce, match64: 0x00000000, model64: 0x1721e00017229},
		modelTuple{type64: 0x24700000251, matchRI: 0x19cf, match64: 0x00000000, model64: 0x1722900017232},
		modelTuple{type64: 0x24700000251, matchRI: 0x19d0, match64: 0x00000000, model64: 0x172320001723d},
		modelTuple{type64: 0x24700000251, matchRI: 0x19d1, match64: 0x00000000, model64: 0x1723d00017244},
		modelTuple{type64: 0x24700000251, matchRI: 0x19d2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d4, match64: 0x00000000, model64: 0x634000006345},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172440001724d, model64: 0x1724d00017256},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1725a00017260},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19da, match64: 0x00000000, model64: 0x1726b00017274},
		modelTuple{type64: 0x2700000027, matchRI: 0x19db, match64: 0x00000000, model64: 0x172740001727d},
		modelTuple{type64: 0x24700000251, matchRI: 0x19dc, match64: 0x00000000, model64: 0x1727d0001728a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19df, match64: 0x00000000, model64: 0x172970001729f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x172b4000172c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172c6000172d2, model64: 0x172d2000172d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172d5000172e1, model64: 0x172e1000172e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172e4000172f1, model64: 0x172f1000172f5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x172f5000172fd, model64: 0x172fd00017306},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x173060001730e, model64: 0x89be000089c3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19e1, match64: 0x00000000, model64: 0x1540c0001540f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19e2, match64: 0x00000000, model64: 0x1730e00017317},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1731700017329, model64: 0x1732900017337},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1733a00017341, model64: 0x173410001734e},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e9, match64: 0x00000000, model64: 0x1735f00017365},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ec, match64: 0x00000000, model64: 0x1737000017376},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ed, match64: 0x00000000, model64: 0x173760001737d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1737d0001738e, model64: 0x1738e00017395},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17395000173a0, model64: 0x173a0000173a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x173aa000173b0, model64: 0x173aa000173b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f0, match64: 0x00000000, model64: 0xfe1e0000fe20},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f1, match64: 0x00000000, model64: 0x173b4000173ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f2, match64: 0x00000000, model64: 0x173ba000173bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f3, match64: 0x00000000, model64: 0x173bc000173c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f4, match64: 0x00000000, model64: 0x173c5000173ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f5, match64: 0x00000000, model64: 0x173ca000173d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f6, match64: 0x00000000, model64: 0x15e6400015e66},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f7, match64: 0x00000000, model64: 0x173d0000173d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f8, match64: 0x00000000, model64: 0x11ffd00011fff},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f9, match64: 0x00000000, model64: 0x12c7200012c74},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fa, match64: 0x00000000, model64: 0x173d6000173df},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fb, match64: 0x00000000, model64: 0x10c4c00010c53},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fc, match64: 0x00000000, model64: 0x173df000173e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fd, match64: 0x00000000, model64: 0x173e8000173ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fe, match64: 0x00000000, model64: 0x1c6c00001c6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ff, match64: 0x00000000, model64: 0xdc8b0000dc8e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x173ed000173f7, model64: 0x173f7000173fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a00, match64: 0x00000000, model64: 0x940c0000940e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x173fc00017406, model64: 0x174060001740f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a01, match64: 0x00000000, model64: 0x1740f00017415},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a02, match64: 0x00000000, model64: 0x174150001741b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a03, match64: 0x00000000, model64: 0x12d1200012d14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1741b00017425, model64: 0x174250001742a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a04, match64: 0x00000000, model64: 0x1742a00017430},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a05, match64: 0x00000000, model64: 0x1743000017436},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a06, match64: 0x00000000, model64: 0x174360001743b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a07, match64: 0x00000000, model64: 0xe2530000e255},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a08, match64: 0x00000000, model64: 0x1743b00017440},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a09, match64: 0x00000000, model64: 0x1744000017449},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0a, match64: 0x00000000, model64: 0x174490001744e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0b, match64: 0x00000000, model64: 0x1744e00017457},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0c, match64: 0x00000000, model64: 0x1745700017460},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0d, match64: 0x00000000, model64: 0x1746000017465},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0e, match64: 0x00000000, model64: 0x174650001746a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0f, match64: 0x00000000, model64: 0x1746a0001746c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a10, match64: 0x00000000, model64: 0x1746c0001746e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a11, match64: 0x00000000, model64: 0x1746e00017471},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a12, match64: 0x00000000, model64: 0x1747100017474},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a13, match64: 0x00000000, model64: 0xa26e0000a271},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a14, match64: 0x00000000, model64: 0x1747400017477},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1747700017481, model64: 0x1748100017484},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x174840001748e, model64: 0x1748e00017491},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a15, match64: 0x00000000, model64: 0x1749100017494},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a16, match64: 0x00000000, model64: 0x174940001749a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a17, match64: 0x00000000, model64: 0x1749a000174a3},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x174a3000174ad, model64: 0x174ad000174b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a19, match64: 0x00000000, model64: 0x174bc000174c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1a, match64: 0x00000000, model64: 0xa2710000a273},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1f, match64: 0x00000000, model64: 0x8aba00008abd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a20, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a21, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x174eb000174f1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1750a00017519},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1752500017530, model64: 0x175300001753b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1753b00017543, model64: 0x175430001754b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1754b0001755a, model64: 0x1755a00017569},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a23, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0x1756900017578, model64: 0x1756900017578},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1758800017594},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5a7100005a77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a25, match64: 0x00000000, model64: 0x634000006345},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a26, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a27, match64: 0x00000000, model64: 0x175a9000175b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175b0000175b8, model64: 0x175b0000175b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175b8000175be, model64: 0x175be000175c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a28, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x175cb000175d2, model64: 0x175cb000175d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2a, match64: 0x00000000, model64: 0x175db000175e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2b, match64: 0x00000000, model64: 0x175e9000175f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2c, match64: 0x00000000, model64: 0x175f5000175fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2d, match64: 0x00000000, model64: 0x175fc00017603},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2e, match64: 0x00000000, model64: 0x176030001760b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2f, match64: 0x00000000, model64: 0x1760b00017613},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a30, match64: 0x00000000, model64: 0x1760b00017613},
		modelTuple{type64: 0x50000000b, matchRI: 0x1a31, match64: 0x00000000, model64: 0x176130001761b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a32, match64: 0x00000000, model64: 0x1761b0001762c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a33, match64: 0x00000000, model64: 0x1762c00017637},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a34, match64: 0x00000000, model64: 0x1763700017645},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1764500017650, model64: 0x1764500017650},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1765000017657, model64: 0x1765000017657},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a35, match64: 0x00000000, model64: 0x176570001765e},
		modelTuple{type64: 0x38400000391, matchRI: 0x1a36, match64: 0x00000000, model64: 0x1765e00017663},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a37, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a38, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1766300017675, model64: 0x176750001767f},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a39, match64: 0x00000000, model64: 0x9c3000009c38},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a3a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a3b, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a3c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a3f, match64: 0x00000000, model64: 0x1767f0001768f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a40, match64: 0x00000000, model64: 0x9c3000009c38},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5a7100005a77},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176b1000176b8, model64: 0x176b8000176be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176be000176c5, model64: 0x176c5000176ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176ce000176d5, model64: 0x176d5000176dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176dc000176e4, model64: 0x176e4000176ed},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a45, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a46, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a47, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a48, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a49, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a4a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a4b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a4e, match64: 0x00000000, model64: 0x11da100011daa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177080001770f, model64: 0x1770f00017716},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1771c00017729, model64: 0x177290001772f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1772f0001773d, model64: 0x1773d00017744},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a51, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a52, match64: 0x00000000, model64: 0x1774a00017751},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a53, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177510001775c, model64: 0x1775c00017760},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1776000017767, model64: 0x7c3b00007c42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a54, match64: 0x00000000, model64: 0x177670001776e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a55, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1777300017778, model64: 0x1777800017783},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177830001778a, model64: 0x1778a00017797},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a58, match64: 0x00000000, model64: 0x177a0000177a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a59, match64: 0x00000000, model64: 0x177a8000177ba},
		modelTuple{type64: 0x24700000251, matchRI: 0x1a5a, match64: 0x00000000, model64: 0x177ba000177c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a5b, match64: 0x00000000, model64: 0x177c4000177cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a5c, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x24700000251, matchRI: 0x1a5d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177d3000177e2, model64: 0x177e2000177e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177e8000177f7, model64: 0x177f7000177fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177fb0001780a, model64: 0x1780a00017810},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a5f, match64: 0x00000000, model64: 0x178170001781d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a60, match64: 0x00000000, model64: 0x1781d00017825},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a61, match64: 0x00000000, model64: 0x178250001782e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a62, match64: 0x00000000, model64: 0x1782e00017837},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a63, match64: 0x00000000, model64: 0x178370001783e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a64, match64: 0x00000000, model64: 0x1783e00017845},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1784b00017853, model64: 0x178530001785b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a66, match64: 0x00000000, model64: 0x1785b00017861},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a67, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a68, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a69, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a6a, match64: 0x00000000, model64: 0x178610001786f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a6b, match64: 0x00000000, model64: 0x1786f00017875},
		modelTuple{type64: 0x5da000005e7, matchRI: 0x1a6d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a6e, match64: 0x00000000, model64: 0x1787c00017885},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a6f, match64: 0x00000000, model64: 0x1787c00017885},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a70, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a71, match64: 0x00000000, model64: 0xac120000ac1c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a72, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a73, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a74, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a75, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a76, match64: 0x00000000, model64: 0x1788500017891},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a77, match64: 0x00000000, model64: 0x17891000178a7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a78, match64: 0x00000000, model64: 0x178a7000178b0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a79, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a7a, match64: 0x00000000, model64: 0x178b0000178b6},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a7b, match64: 0x00000000, model64: 0x178b6000178cc},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a7c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a7d, match64: 0x00000000, model64: 0x178cc000178d8},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x178d8000178e6, model64: 0x178e6000178f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a7e, match64: 0x00000000, model64: 0x178f2000178fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a7f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a81, match64: 0x00000000, model64: 0x179020001790a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a82, match64: 0x00000000, model64: 0x1e8000001ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a83, match64: 0x00000000, model64: 0x1790a0001790e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a84, match64: 0x00000000, model64: 0x1790e00017915},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a85, match64: 0x00000000, model64: 0x1235100012358},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a87, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1791900017922, model64: 0x178b0000178b6},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a88, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x179260001792f, model64: 0x1792f00017939},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a8a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a8c, match64: 0x00000000, model64: 0x1794000017942},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x179420001794a, model64: 0x1794a00017957},
		modelTuple{type64: 0xae980000aead, matchRI: 0x1a8d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x8e00000099, matchRI: 0x1a8e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x179570001795e, model64: 0x179570001795e},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a8f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a90, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a91, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1797500017980},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1bfb00001bfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a96, match64: 0x00000000, model64: 0x1798f00017997},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a97, match64: 0x00000000, model64: 0x17997000179a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x179a5000179ad, model64: 0x179a5000179ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x179ad000179b6, model64: 0x179ad000179b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x179b6000179bd, model64: 0x179b6000179bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a98, match64: 0x00000000, model64: 0x179bd000179c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a99, match64: 0x00000000, model64: 0x179c3000179c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a9a, match64: 0x00000000, model64: 0x179c8000179cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a9b, match64: 0x00000000, model64: 0x179cc000179d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a9c, match64: 0x00000000, model64: 0x168fe00016903},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a9d, match64: 0x00000000, model64: 0x179d0000179d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a9e, match64: 0x00000000, model64: 0x179d5000179df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a9f, match64: 0x00000000, model64: 0x179df000179e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa0, match64: 0x00000000, model64: 0x179e9000179f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa1, match64: 0x00000000, model64: 0x179f4000179ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa2, match64: 0x00000000, model64: 0x179ff00017a0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa3, match64: 0x00000000, model64: 0xac820000ac88},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x17a0d00017a11, model64: 0x17a0d00017a11},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x17a1100017a1a, model64: 0x17a1a00017a1d},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x17a1d00017a28, model64: 0x17a2800017a2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa6, match64: 0x00000000, model64: 0x17a3d00017a46},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa8, match64: 0x00000000, model64: 0x17a5e00017a66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17a6c00017a75, model64: 0x17a7500017a80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17a8000017a8d, model64: 0x17a8d00017a9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aaa, match64: 0x00000000, model64: 0x17a9a00017aa1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17aa500017aa9, model64: 0x17aa900017ab0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ab000017ab4, model64: 0x17ab400017ab9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ab900017abd, model64: 0x17abd00017ac4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ac400017ac8, model64: 0x17ac800017ad1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ad100017ad5, model64: 0x17ad500017adc},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x17adc00017ae0, model64: 0x17ae000017aea},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x17aea00017aee, model64: 0x17aee00017af7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x17af700017afb, model64: 0x17afb00017b05},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aaf, match64: 0x00000000, model64: 0x176000001762},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab0, match64: 0x00000000, model64: 0x17b1d00017b23},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab1, match64: 0x00000000, model64: 0x17b2300017b26},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab2, match64: 0x00000000, model64: 0x17b2600017b2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab3, match64: 0x00000000, model64: 0x17b2f00017b3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab4, match64: 0x00000000, model64: 0x17b3f00017b4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17b5700017b5b, model64: 0x17b5700017b5b},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x17b6800017b79, model64: 0x17b7900017b8d},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x17b8d00017b9e, model64: 0x17b9e00017bb1},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x17bb100017bb9, model64: 0x17bb900017bc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17bc900017bd5, model64: 0x17bd500017be2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab7, match64: 0x00000000, model64: 0x17be200017bef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17bef00017bfc, model64: 0x17bfc00017c05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17c0500017c11, model64: 0x17c1100017c1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17c1e00017c2e, model64: 0x17c2e00017c3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab8, match64: 0x00000000, model64: 0x17c3f00017c4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17c4b00017c59, model64: 0x17c5900017c63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17c6300017c70, model64: 0x17c7000017c7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab9, match64: 0x00000000, model64: 0x17c7d00017c86},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aba, match64: 0x00000000, model64: 0x17c8600017c8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1abc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ca400017caa, model64: 0x17caa00017cb2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17cb200017cb8, model64: 0x17cb800017cc0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17cc000017cc6, model64: 0x17cc600017cce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17cce00017cd7, model64: 0x17cd700017ce4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ce400017cea, model64: 0x17cea00017cf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1abf, match64: 0x00000000, model64: 0xe9a60000e9ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17cf100017cfa, model64: 0x17cfa00017d02},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d0200017d08, model64: 0x17d0800017d0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d0f00017d15, model64: 0x17d1500017d21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d2100017d2a, model64: 0x17d2a00017d32},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d3200017d3b, model64: 0x17d3b00017d48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d4800017d4e, model64: 0x17d4e00017d55},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d5500017d5e, model64: 0x17d5e00017d66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d6600017d6f, model64: 0x17d6f00017d77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d7700017d7d, model64: 0x17d7d00017d86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d8600017d8c, model64: 0x17d8c00017d95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d9500017d9b, model64: 0x17d9b00017da2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17da200017dab, model64: 0x17dab00017db3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17db300017db9, model64: 0x17db900017dbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac0, match64: 0x00000000, model64: 0x17dbc00017dc3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17dc300017dca, model64: 0x17dca00017dd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17dd300017dda, model64: 0x17dda00017ddf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ddf00017de6, model64: 0x17de600017ded},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac1, match64: 0x00000000, model64: 0x17ded00017df4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac2, match64: 0x00000000, model64: 0x17df400017df9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17df900017e00, model64: 0x17e0000017e0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17e0e00017e16, model64: 0x17e1600017e1a},
		modelTuple{type64: 0x24300000245, matchRI: 0x1ac3, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ac4, match64: 0x00000000, model64: 0x17e1a00017e24},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x17e2400017e2e, model64: 0x17e2e00017e3f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ac5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ac6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ac7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x17c9c00017ca4, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aca, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1acb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17e5600017e5b, model64: 0x82390000823f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1acd, match64: 0x00000000, model64: 0x17e5b00017e68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17e6800017e6d, model64: 0x17e6d00017e76},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ace, match64: 0x00000000, model64: 0x17e7600017e82},
		modelTuple{type64: 0x2700000027, matchRI: 0x1acf, match64: 0x00000000, model64: 0x17e8200017e8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad0, match64: 0x00000000, model64: 0x17e8b00017e94},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad1, match64: 0x00000000, model64: 0x17e9400017e9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad2, match64: 0x00000000, model64: 0x17e9d00017ea6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad3, match64: 0x00000000, model64: 0x17ea600017eaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad4, match64: 0x00000000, model64: 0x17eaf00017eb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad5, match64: 0x00000000, model64: 0x17eb800017ec1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad6, match64: 0x00000000, model64: 0x17ec100017ecd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad7, match64: 0x00000000, model64: 0x17ecd00017ed6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad8, match64: 0x00000000, model64: 0x17ed600017edf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad9, match64: 0x00000000, model64: 0x17edf00017ee8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ada, match64: 0x00000000, model64: 0x17ee800017ef3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1adb, match64: 0x00000000, model64: 0x17ef300017f02},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f0200017f07, model64: 0x17f0700017f0c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f0c00017f11, model64: 0x17f1100017f1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f1e00017f23, model64: 0x17f2300017f2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f2c00017f31, model64: 0x17f3100017f3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f3a00017f3f, model64: 0x17f3f00017f48},
		modelTuple{type64: 0x2700000027, matchRI: 0x1adc, match64: 0x00000000, model64: 0x17f4800017f53},
		modelTuple{type64: 0x2700000027, matchRI: 0x1add, match64: 0x00000000, model64: 0x17f5300017f5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ade, match64: 0x00000000, model64: 0x17f5b00017f66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f6600017f6b, model64: 0x17f6b00017f75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f7500017f7a, model64: 0x17f7a00017f89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f8900017f8e, model64: 0x17f8e00017f96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f9600017f9b, model64: 0x17f9b00017fac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1adf, match64: 0x00000000, model64: 0x17fac00017fb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae0, match64: 0x00000000, model64: 0x17fb600017fc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae1, match64: 0x00000000, model64: 0x17fc100017fcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae2, match64: 0x00000000, model64: 0x17fcb00017fd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae3, match64: 0x00000000, model64: 0x17fd500017fe4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17fe400017feb, model64: 0x17fe400017feb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17feb00017ff0, model64: 0x17feb00017ff0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ff000017ff5, model64: 0x17ff500017ffd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ae4, match64: 0x00000000, model64: 0x17ffd0001800a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ae5, match64: 0x00000000, model64: 0x1800a00018014},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7c2a00007c2c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1805e00018066, model64: 0x180660001806e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aeb, match64: 0x00000000, model64: 0x825500008259},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aec, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1806e0001807a, model64: 0x1806e0001807a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1807a00018085, model64: 0x1807a00018085},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aed, match64: 0x00000000, model64: 0x180850001808f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1808f00018093, model64: 0x180930001809e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1809e000180a3, model64: 0x180a3000180ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x180ae000180b6, model64: 0x180ae000180b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x180b6000180bd, model64: 0x180b6000180bd},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x180bd000180c2, model64: 0x180bd000180c2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x180c2000180ce, model64: 0x180ce000180da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aef, match64: 0x00000000, model64: 0x180e6000180ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af0, match64: 0x00000000, model64: 0x180ec000180f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af1, match64: 0x00000000, model64: 0x180f800018108},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af2, match64: 0x00000000, model64: 0x1810800018113},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af3, match64: 0x00000000, model64: 0x181130001811c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af4, match64: 0x00000000, model64: 0x1811c00018126},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af5, match64: 0x00000000, model64: 0x1812600018131},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af6, match64: 0x00000000, model64: 0x181310001813b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af7, match64: 0x00000000, model64: 0x1813b00018146},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af8, match64: 0x00000000, model64: 0x181460001814e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af9, match64: 0x00000000, model64: 0x1814e00018156},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afa, match64: 0x00000000, model64: 0x181560001815e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afb, match64: 0x00000000, model64: 0x1815e00018164},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1afc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1afd, match64: 0x00000000, model64: 0x181640001816a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1afe, match64: 0x00000000, model64: 0x1816a00018173},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x181730001817a, model64: 0x1817a00018181},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1818700018193, model64: 0xedc00000ede},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1819300018199, model64: 0x181990001819f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1819f000181a2, model64: 0x1819f000181a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x181a2000181ae, model64: 0x181ae000181b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x181b2000181be, model64: 0x181be000181c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x181c2000181ce, model64: 0x181ce000181d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x181d2000181de, model64: 0x181de000181e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b01, match64: 0x00000000, model64: 0x181e2000181ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b02, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x181f500018207, model64: 0x182070001821a},
		modelTuple{type64: 0x24700000251, matchRI: 0x1b04, match64: 0x00000000, model64: 0x1821a0001822b},
		modelTuple{type64: 0x24700000251, matchRI: 0x1b05, match64: 0x00000000, model64: 0x1822b00018238},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1823800018242, model64: 0x182420001824a},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1824a00018254, model64: 0x1825400018260},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x182600001826a, model64: 0x1826a00018276},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1827600018280, model64: 0x1828000018288},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1828800018292, model64: 0x182920001829a},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1829a000182a4, model64: 0x182a4000182ac},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x182ac000182b6, model64: 0x182b6000182be},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x182be000182c8, model64: 0x182c8000182d4},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x182d4000182de, model64: 0x182de000182e6},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x182e6000182f0, model64: 0x182f0000182fc},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x182fc00018306, model64: 0x183060001830e},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1830e00018318, model64: 0x1831800018324},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x183240001832e, model64: 0x1832e00018336},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1833600018340, model64: 0x1834000018347},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1834700018351, model64: 0x183510001835c},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1835c00018366, model64: 0x1836600018371},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x183710001837b, model64: 0x1837b00018386},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1838600018390, model64: 0x183900001839b},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1839b000183a5, model64: 0x183a5000183b0},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x183b0000183ba, model64: 0x183ba000183c1},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x183c1000183cb, model64: 0x183cb000183d6},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x183d6000183e0, model64: 0x183e0000183eb},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x183eb000183f5, model64: 0x183f5000183fc},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x183fc00018406, model64: 0x1840600018411},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x184110001841b, model64: 0x1841b00018426},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1842600018430, model64: 0x184300001843b},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1843b00018445, model64: 0x1844500018450},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x184500001845a, model64: 0x1845a00018465},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x184650001846f, model64: 0x1846f0001847a},
		modelTuple{type64: 0x24700000251, matchRI: 0x1b06, match64: 0x00000000, model64: 0x1847a00018481},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x184810001848b, model64: 0x1848b00018492},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x184920001849c, model64: 0x1849c000184a3},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x184a3000184ad, model64: 0x184ad000184b4},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x184b4000184be, model64: 0x184be000184c5},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x184c5000184cf, model64: 0x184cf000184d6},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x184d6000184e0, model64: 0x184e0000184e7},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x184e7000184f1, model64: 0x184f1000184f8},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x184f800018502, model64: 0x185020001850a},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1850a00018514, model64: 0x185140001851b},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1851b00018525, model64: 0x185250001852c},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1852c00018536, model64: 0x1853600018541},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x185410001854b, model64: 0x1854b00018552},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x185520001855c, model64: 0x1855c00018564},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x185640001856e, model64: 0x1856e00018576},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1857600018580, model64: 0x1858000018588},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1858800018592, model64: 0x185920001859a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1859a000185a4, model64: 0x185a4000185ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x185ae000185b8, model64: 0x185b8000185cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x185cf000185d9, model64: 0x185d9000185e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x185e3000185ee, model64: 0x185ee000185f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x185f700018600, model64: 0x186000001860d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1860d00018619, model64: 0x1861900018625},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186250001862f, model64: 0x1862f0001863c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1863c00018643, model64: 0x186430001864d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1864d00018654, model64: 0x186540001865f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1865f00018669, model64: 0x1866900018683},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b07, match64: 0x00000000, model64: 0x1868300018694},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b08, match64: 0x00000000, model64: 0x18694000186a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b09, match64: 0x00000000, model64: 0x186a3000186b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0a, match64: 0x00000000, model64: 0x186b4000186c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186c0000186ca, model64: 0x186ca000186e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186e0000186ea, model64: 0x186ea000186ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0b, match64: 0x00000000, model64: 0x186ef00018703},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0c, match64: 0x00000000, model64: 0x187030001870e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0d, match64: 0x00000000, model64: 0x1870e00018719},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0e, match64: 0x00000000, model64: 0x187190001871e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0f, match64: 0x00000000, model64: 0x1871e00018723},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b10, match64: 0x00000000, model64: 0x187230001872d},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b11, match64: 0x00000000, model64: 0x1872d0001873b},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b12, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b13, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x1b14, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b16, match64: 0x00000000, model64: 0x187430001874c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b17, match64: 0x00000000, model64: 0x1874c00018753},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b19, match64: 0x00000000, model64: 0x1875900018762},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1a, match64: 0x00000000, model64: 0x1876200018769},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1b, match64: 0x00000000, model64: 0x1876900018771},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1c, match64: 0x00000000, model64: 0x1877100018776},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1d, match64: 0x00000000, model64: 0x187760001877c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1e, match64: 0x00000000, model64: 0x576a00005772},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1f, match64: 0x00000000, model64: 0x1877c00018786},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b20, match64: 0x00000000, model64: 0x1878600018788},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b21, match64: 0x00000000, model64: 0x187880001878f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b22, match64: 0x00000000, model64: 0x1878f00018797},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b23, match64: 0x00000000, model64: 0x187970001879f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x187a5000187ad, model64: 0x187ad000187b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x187b5000187bc, model64: 0x187bc000187c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x187c3000187ca, model64: 0x187ca000187d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x187d1000187d9, model64: 0x187d9000187e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b25, match64: 0x00000000, model64: 0x67b6000067b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x187e1000187e7, model64: 0x187e7000187e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x187e9000187ee, model64: 0x187ee000187fc},
		modelTuple{type64: 0x24700000251, matchRI: 0x1b27, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b28, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2a, match64: 0x00000000, model64: 0x1880a0001880f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2b, match64: 0x00000000, model64: 0x1880f00018815},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x1b2e, match64: 0x00000000, model64: 0x188250001882e},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1882e00018832, model64: 0x188320001883a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x188540001885c, model64: 0x188540001885c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b35, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b37, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1886e00018876, model64: 0x1886e00018876},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3a, match64: 0x00000000, model64: 0x8ab300008aba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3b, match64: 0x00000000, model64: 0x8aba00008abd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3d, match64: 0x00000000, model64: 0x188810001888a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x188910001889e, model64: 0x1889e000188ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3f, match64: 0x00000000, model64: 0x188ac000188b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x188b7000188c3, model64: 0x188c3000188cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b40, match64: 0x00000000, model64: 0x188cf000188d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xebe00000ec5, model64: 0xebe00000ec5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b41, match64: 0x00000000, model64: 0x188d6000188df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x188df000188e6, model64: 0x188e6000188f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b42, match64: 0x00000000, model64: 0x188cf000188d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x188f2000188f9, model64: 0x188f2000188f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x188f900018902, model64: 0x188f900018902},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b43, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf0a0000df0f, model64: 0xdf0a0000df0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b44, match64: 0x00000000, model64: 0x189020001890f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1890f0001891b, model64: 0x1890f0001891b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1891b00018926, model64: 0x1892600018931},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x189310001893e, model64: 0x1893e0001894b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1894b00018953, model64: 0x189530001895b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1895b00018963, model64: 0x1895b00018963},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x189630001896b, model64: 0x1896b00018973},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1897300018979, model64: 0x189790001897f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1897f00018985, model64: 0x189850001898b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b45, match64: 0x00000000, model64: 0x1898b00018994},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b46, match64: 0x00000000, model64: 0x189940001899f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b47, match64: 0x00000000, model64: 0x1899f000189a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x189a9000189b1, model64: 0x189b1000189bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x189bb000189c2, model64: 0x189c2000189c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x189c9000189d1, model64: 0x189c9000189d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x189d1000189dc, model64: 0x189dc000189df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x189df000189eb, model64: 0x189eb000189f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x189f700018a02, model64: 0x189f700018a02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b48, match64: 0x00000000, model64: 0x18a0200018a0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18a0f00018a1b, model64: 0x18a0f00018a1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18a1b00018a25, model64: 0x18a1b00018a25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18a2500018a30, model64: 0x18a2500018a30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b49, match64: 0x00000000, model64: 0x18a3000018a37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18a3700018a48, model64: 0x18a3700018a48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18a4800018a58, model64: 0x18a4800018a58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18a5800018a67, model64: 0x18a6700018a76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18a7600018a85, model64: 0x18a8500018a94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18a9400018aa2, model64: 0x18aa200018ab0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18ab000018ac1, model64: 0x18ab000018ac1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4b, match64: 0x00000000, model64: 0x18ac100018ace},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4d, match64: 0x00000000, model64: 0x18ace00018ad5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4e, match64: 0x00000000, model64: 0x18ad500018add},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4f, match64: 0x00000000, model64: 0x18add00018ae0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b50, match64: 0x00000000, model64: 0x18ae000018ae9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b51, match64: 0x00000000, model64: 0x80d9000080e2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b52, match64: 0x00000000, model64: 0x18ae900018aef},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b53, match64: 0x00000000, model64: 0x18ae900018aef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b54, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b55, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b56, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18aef00018af9, model64: 0x18aef00018af9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b58, match64: 0x00000000, model64: 0x18afe00018b04},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b0f00018b17, model64: 0x18b1700018b21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b2100018b2a, model64: 0x18b2a00018b34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b3400018b3e, model64: 0x18b3e00018b48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b4800018b50, model64: 0x18b5000018b5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b5a00018b63, model64: 0x18b6300018b6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b6d00018b75, model64: 0x18b7500018b7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b7f00018b88, model64: 0x18b8800018b92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b9200018b9c, model64: 0x18b9c00018ba7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18ba700018bb1, model64: 0x18bb100018bbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5b, match64: 0x00000000, model64: 0x18bbc00018bc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18bc700018bd0, model64: 0x18bd000018bdb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18bdb00018be1, model64: 0x100c7000100c9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18be100018be9, model64: 0x18be900018bf1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18bf100018bf8, model64: 0x18bf800018c00},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18c0000018c08, model64: 0x18c0800018c12},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18c1200018c18, model64: 0x18c1800018c1f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18c1f00018c28, model64: 0x18c2800018c33},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b5c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18c3300018c3a, model64: 0x18c3a00018c3f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18c3f00018c47, model64: 0x18c4700018c4c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b5d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18c4c00018c51, model64: 0x18c5100018c55},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b60, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b61, match64: 0x00000000, model64: 0x9c3000009c38},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b63, match64: 0x00000000, model64: 0x18c6000018c6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b64, match64: 0x00000000, model64: 0x18c6a00018c76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18c7600018c7e, model64: 0x18c7600018c7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b65, match64: 0x00000000, model64: 0x18c7e00018c8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b66, match64: 0x00000000, model64: 0x18c8b00018c93},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b67, match64: 0x00000000, model64: 0x18c9300018c9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b68, match64: 0x00000000, model64: 0x18c9b00018ca9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6b, match64: 0x00000000, model64: 0x18cb400018cbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6c, match64: 0x00000000, model64: 0x18cbc00018cc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6d, match64: 0x00000000, model64: 0x18cc000018cc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6f, match64: 0x00000000, model64: 0x18cc500018ccc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b70, match64: 0x00000000, model64: 0x18ccc00018cd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b71, match64: 0x00000000, model64: 0x18cd200018cd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b72, match64: 0x00000000, model64: 0x18cd400018cdf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b73, match64: 0x00000000, model64: 0x18cdf00018cea},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b74, match64: 0x00000000, model64: 0x18cea00018cf3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b77, match64: 0x00000000, model64: 0x18cfd00018d04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18d0400018d0d, model64: 0x18d0d00018d11},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b78, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b79, match64: 0x00000000, model64: 0x18d1100018d15},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18d1c00018d2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18d2b00018d31, model64: 0x18d3100018d37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7c, match64: 0x00000000, model64: 0x18d3d00018d42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7e, match64: 0x00000000, model64: 0x18d4600018d4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7f, match64: 0x00000000, model64: 0x18d4d00018d52},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b80, match64: 0x00000000, model64: 0x18d5200018d5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b81, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x1b82, match64: 0x00000000, model64: 0x18d5b00018d63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18d6800018d70, model64: 0x18d7000018d75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18d7500018d7d, model64: 0x18d7d00018d82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18d8200018d8a, model64: 0x18d8a00018d8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18d8f00018d97, model64: 0x18d9700018d9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b84, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18da000018da6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18db100018dbf, model64: 0x160ea000160ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b87, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18dbf00018dc9, model64: 0x18dc900018dda},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b88, match64: 0x00000000, model64: 0x18dda00018de6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b89, match64: 0x00000000, model64: 0x18de600018df6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18df600018e01, model64: 0x18e0100018e10},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b8a, match64: 0x00000000, model64: 0x18e1000018e1b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18e1b00018e26, model64: 0x18e2600018e37},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18e3700018e41, model64: 0x18e4100018e52},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b8b, match64: 0x00000000, model64: 0x18e5200018e62},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18e6200018e6e, model64: 0x18e6e00018e7d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18e7d00018e88, model64: 0x18e8800018e97},
		modelTuple{type64: 0xae980000aead, matchRI: 0x1b8c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b8d, match64: 0x00000000, model64: 0x18e9700018e9c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b8e, match64: 0x00000000, model64: 0x18e9c00018ea0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18ea300018eaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b91, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x18eb400018ec3, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b92, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b94, match64: 0x00000000, model64: 0x18ec600018ed7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b95, match64: 0x00000000, model64: 0x18ed700018edd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18edd00018ee5, model64: 0x7d7c00007d82},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b96, match64: 0x00000000, model64: 0x18ee500018eeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b97, match64: 0x00000000, model64: 0x18eeb00018ef2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b98, match64: 0x00000000, model64: 0x18ef200018ef6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18ef600018efe, model64: 0x18efe00018f09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18f0900018f11, model64: 0x18f1100018f1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18f1b00018f23, model64: 0x5cf700005cfd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18f2300018f2b, model64: 0x18f2b00018f33},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b99, match64: 0x00000000, model64: 0x4f2f00004f36},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9a, match64: 0x00000000, model64: 0x18f3300018f42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9b, match64: 0x00000000, model64: 0x18f4200018f53},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9c, match64: 0x00000000, model64: 0x18f5300018f60},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b9d, match64: 0x00000000, model64: 0x18f6000018f73},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9e, match64: 0x00000000, model64: 0x18f5300018f60},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9f, match64: 0x00000000, model64: 0x18f5300018f60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18f7300018f77, model64: 0x18f7700018f84},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba0, match64: 0x00000000, model64: 0x18f8400018f8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18f8c00018f90, model64: 0x18f9000018f99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18f9900018f9d, model64: 0x18f9900018f9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba1, match64: 0x00000000, model64: 0x18f9d00018fa5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18fa500018faf, model64: 0x18fa500018faf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18fb600018fc4, model64: 0x18fb600018fc4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba6, match64: 0x00000000, model64: 0x18fd600018fde},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18fde00018fe5, model64: 0x18fe500018fed},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18ff000018ff7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18ffe00019002, model64: 0x1900200019005},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x190050001900b, model64: 0x1900b00019010},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1901000019014, model64: 0x1901400019018},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x190180001901c, model64: 0x1901c00019025},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1902500019029, model64: 0x1902900019030},
		modelTuple{type64: 0x2700000027, matchRI: 0x1baa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bab, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x190350001903c, model64: 0x1903c00019044},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x190440001904d, model64: 0x1904d00019057},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1bac, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1906d00019079, model64: 0x1907900019085},
		modelTuple{type64: 0x1060000010d, matchRI: -0x0001, match64: 0x1908a00019097, model64: 0x190970001909e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1909e000190a5, model64: 0x1909e000190a5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb3, match64: 0x00000000, model64: 0x190b1000190b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb4, match64: 0x00000000, model64: 0x190b8000190bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x190c5000190cc, model64: 0x190cc000190d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x190d5000190dc, model64: 0x190dc000190e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x190e1000190e8, model64: 0x190e8000190ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb7, match64: 0x00000000, model64: 0x190ef000190f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x190f7000190fe, model64: 0x190fe00019106},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb8, match64: 0x00000000, model64: 0x191060001910a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1910a00019111, model64: 0x1911100019116},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191160001911d, model64: 0x1911d00019128},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191280001912f, model64: 0x1912f0001913a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb9, match64: 0x00000000, model64: 0x1913a00019145},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bba, match64: 0x00000000, model64: 0x1a7900001a7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191450001914c, model64: 0xae700000ae76},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbb, match64: 0x00000000, model64: 0x12c5700012c58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbc, match64: 0x00000000, model64: 0x1914c00019151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbd, match64: 0x00000000, model64: 0x1aee00001aef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1915100019158, model64: 0x191580001915a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbe, match64: 0x00000000, model64: 0x1915a0001915f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbf, match64: 0x00000000, model64: 0x1c9300001c94},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc0, match64: 0x00000000, model64: 0xfe1e0000fe20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1915f00019166, model64: 0x1520000015207},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc1, match64: 0x00000000, model64: 0x191660001916c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1916c00019173, model64: 0x1917300019178},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191780001917f, model64: 0x1917f00019185},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191850001918c, model64: 0x1918c00019195},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191950001919c, model64: 0x1919c000191a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191a1000191a8, model64: 0x191a8000191ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191ab000191b2, model64: 0x191b2000191b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191b8000191bf, model64: 0x191bf000191c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191c1000191c8, model64: 0x191c8000191cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc2, match64: 0x00000000, model64: 0x191cb000191d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc3, match64: 0x00000000, model64: 0x191d0000191d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc4, match64: 0x00000000, model64: 0x191d9000191db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc5, match64: 0x00000000, model64: 0x1b2000001b21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc6, match64: 0x00000000, model64: 0x191db000191e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc7, match64: 0x00000000, model64: 0x191e0000191e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191e2000191e9, model64: 0x191e9000191eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc8, match64: 0x00000000, model64: 0x1514c0001514d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc9, match64: 0x00000000, model64: 0x191eb000191ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191ed000191f4, model64: 0x191f4000191f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bca, match64: 0x00000000, model64: 0x191f6000191fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcb, match64: 0x00000000, model64: 0x1b3200001b33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191fb00019202, model64: 0x1920200019204},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192040001920b, model64: 0x16de400016de9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1920b00019212, model64: 0x1921200019228},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192280001922f, model64: 0x16da300016da8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcc, match64: 0x00000000, model64: 0x3ab700003ab8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcd, match64: 0x00000000, model64: 0x1922f00019231},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1923100019238, model64: 0x192380001923a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1923a00019241, model64: 0x1924100019245},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bce, match64: 0x00000000, model64: 0x1924500019247},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192470001924e, model64: 0x1924e00019253},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192530001925a, model64: 0xae5f0000ae60},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcf, match64: 0x00000000, model64: 0x1925a0001925e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd0, match64: 0x00000000, model64: 0x1925e00019267},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd1, match64: 0x00000000, model64: 0x192670001926f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd2, match64: 0x00000000, model64: 0x3b0700003b09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1926f00019276, model64: 0x1927600019279},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd3, match64: 0x00000000, model64: 0x1927900019282},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd4, match64: 0x00000000, model64: 0x192820001928c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1928c00019293, model64: 0x192930001929d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1929d000192a4, model64: 0x192a4000192ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192ab000192b2, model64: 0x192b2000192bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192bb000192c2, model64: 0x192c2000192c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192c8000192cf, model64: 0x192cf000192d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd5, match64: 0x00000000, model64: 0xae760000ae78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192d5000192dc, model64: 0x192dc000192e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192e1000192e8, model64: 0x192e8000192f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192f1000192f8, model64: 0x192f8000192fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192fe00019305, model64: 0x193050001930c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1930c00019313, model64: 0x193130001931d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1931d00019324, model64: 0x193240001932a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1932a00019331, model64: 0x1933100019336},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193360001933d, model64: 0x16c6000016c62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1933d00019344, model64: 0x193440001934a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1934a00019351, model64: 0x1935100019354},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd6, match64: 0x00000000, model64: 0x1935400019356},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd7, match64: 0x00000000, model64: 0x57600000578},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd8, match64: 0x00000000, model64: 0x685300006855},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd9, match64: 0x00000000, model64: 0x1746c0001746e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bda, match64: 0x00000000, model64: 0x1935600019359},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdb, match64: 0x00000000, model64: 0x193590001935c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdc, match64: 0x00000000, model64: 0x1935c0001935f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdd, match64: 0x00000000, model64: 0x1935f00019373},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bde, match64: 0x00000000, model64: 0x1937300019376},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdf, match64: 0x00000000, model64: 0x1937600019379},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be0, match64: 0x00000000, model64: 0x193790001937c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be1, match64: 0x00000000, model64: 0x1937c00019380},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be2, match64: 0x00000000, model64: 0x1938000019383},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be3, match64: 0x00000000, model64: 0x1938300019387},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be4, match64: 0x00000000, model64: 0x193870001938b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be5, match64: 0x00000000, model64: 0x1746e00017471},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be6, match64: 0x00000000, model64: 0x1938b0001938e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1938e00019395, model64: 0x1939500019399},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be7, match64: 0x00000000, model64: 0x193990001939c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be8, match64: 0x00000000, model64: 0x1939c0001939f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1939f000193a6, model64: 0x1748100017484},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193a6000193ad, model64: 0xa26e0000a271},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193ad000193b4, model64: 0x193b4000193b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be9, match64: 0x00000000, model64: 0x193b8000193bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193bb000193c2, model64: 0x1748e00017491},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193c2000193c9, model64: 0x193c9000193cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193cc000193d3, model64: 0x193d3000193d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193d6000193dd, model64: 0x193dd000193e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193e3000193ea, model64: 0x1749100017494},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193ea000193f1, model64: 0x193f1000193f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193f7000193fe, model64: 0x193fe00019408},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bea, match64: 0x00000000, model64: 0x194080001940c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1940c00019413, model64: 0x194130001941b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1941b00019422, model64: 0x1942200019426},
		modelTuple{type64: 0x2700000027, matchRI: 0x1beb, match64: 0x00000000, model64: 0x194260001942e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bec, match64: 0x00000000, model64: 0x1942e00019432},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1943200019439, model64: 0x194390001944d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bed, match64: 0x00000000, model64: 0x1944d00019453},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bee, match64: 0x00000000, model64: 0x194530001945b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bef, match64: 0x00000000, model64: 0x1945b00019463},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf0, match64: 0x00000000, model64: 0x1946300019470},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf1, match64: 0x00000000, model64: 0x1947000019479},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf2, match64: 0x00000000, model64: 0x1947900019482},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1948200019489, model64: 0x1912f0001913a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf3, match64: 0x00000000, model64: 0x194890001949a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf4, match64: 0x00000000, model64: 0x1949a000194a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf5, match64: 0x00000000, model64: 0x194a6000194b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x194b2000194b9, model64: 0x194b9000194c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x194c1000194c8, model64: 0x194c8000194d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x194d1000194d8, model64: 0x194d8000194e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x194e1000194e8, model64: 0x194e8000194f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x194f0000194f7, model64: 0x194f700019502},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1950200019509, model64: 0x1950900019512},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1951200019519, model64: 0x1951900019521},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1952100019528, model64: 0x1952800019533},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x195330001953a, model64: 0x1953a00019546},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x195460001954d, model64: 0x1954d0001955c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf6, match64: 0x00000000, model64: 0x1955c0001956b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1956b00019572, model64: 0x195720001957b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1957b00019582, model64: 0x1958200019591},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1959100019598, model64: 0x19598000195a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x195a3000195aa, model64: 0x195aa000195b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x195b9000195c0, model64: 0x195c0000195c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf7, match64: 0x00000000, model64: 0xa2730000a275},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf8, match64: 0x00000000, model64: 0x195c9000195cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf9, match64: 0x00000000, model64: 0x195cf000195d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfa, match64: 0x00000000, model64: 0x195d6000195dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfb, match64: 0x00000000, model64: 0x195dd000195e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfc, match64: 0x00000000, model64: 0x195e7000195f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfd, match64: 0x00000000, model64: 0xe2530000e255},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfe, match64: 0x00000000, model64: 0x195f500019602},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1960200019609, model64: 0xe2530000e255},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1960900019619, model64: 0x1961900019622},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191780001917f, model64: 0x1917f00019185},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bff, match64: 0x00000000, model64: 0x1962200019625},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c00, match64: 0x00000000, model64: 0x196250001962a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c01, match64: 0x00000000, model64: 0x1962a0001962f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1962f00019636, model64: 0x1000e00010011},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c02, match64: 0x00000000, model64: 0x196360001963c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1963c00019643, model64: 0x196430001964a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c03, match64: 0x00000000, model64: 0x1964a00019650},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c04, match64: 0x00000000, model64: 0x1965000019656},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c05, match64: 0x00000000, model64: 0xfc860000fc89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x196560001965d, model64: 0x1965d00019660},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1966000019667, model64: 0x196670001966b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1966b00019672, model64: 0x1967200019675},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x196750001967c, model64: 0x1000e00010011},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1967c00019683, model64: 0x1968300019686},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x196860001968d, model64: 0x1968d00019691},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1969100019698, model64: 0x481b0000481e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x196980001969f, model64: 0x1969f000196a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c06, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c07, match64: 0x00000000, model64: 0x196a4000196a7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c08, match64: 0x00000000, model64: 0x1640200016407},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c09, match64: 0x00000000, model64: 0x196a7000196ac},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c0a, match64: 0x00000000, model64: 0x196ac000196b4},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x196b4000196c6, model64: 0x196b4000196c6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0e, match64: 0x00000000, model64: 0x196da000196ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x196f0000196fd, model64: 0x196fd00019704},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x197040001970f, model64: 0x16de400016de9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1970f00019717, model64: 0x1b3200001b33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1971d00019723, model64: 0x1972300019729},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1972900019732, model64: 0x197320001973b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c11, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1973b00019743, model64: 0x197430001974c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1974c00019752, model64: 0x1975200019759},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c12, match64: 0x00000000, model64: 0x197590001975e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1975e00019766, model64: 0x1976600019772},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c13, match64: 0x00000000, model64: 0x1977200019777},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1977700019783, model64: 0x1977700019783},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x197830001978e, model64: 0x197830001978e},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1978e00019796, model64: 0x197960001979f},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1979f000197ae, model64: 0x197ae000197bf},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x197bf000197cc, model64: 0x197cc000197d9},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x197d9000197eb, model64: 0x197eb000197ff},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x197ff0001980c, model64: 0x1980c00019819},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x198190001982e, model64: 0x1982e00019845},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1984500019856, model64: 0x1984500019856},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1985600019866, model64: 0x1985600019866},
		modelTuple{type64: 0x24700000251, matchRI: 0x1c14, match64: 0x00000000, model64: 0x1986600019876},
		modelTuple{type64: 0x24700000251, matchRI: 0x1c15, match64: 0x00000000, model64: 0x198760001988a},
		modelTuple{type64: 0x24700000251, matchRI: 0x1c16, match64: 0x00000000, model64: 0x1988a00019896},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x198960001989e, model64: 0x1989e000198a6},
		modelTuple{type64: 0x24700000251, matchRI: 0x1c17, match64: 0x00000000, model64: 0x198a6000198ad},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x198ad000198bb, model64: 0x198bb000198c4},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x198c4000198d6, model64: 0x198c4000198d6},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x198d6000198e8, model64: 0x198d6000198e8},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x198e8000198f5, model64: 0x198e8000198f5},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x198f500019900, model64: 0x198f500019900},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x198a6000198ad, model64: 0x198a6000198ad},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x199000001990b, model64: 0x199000001990b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1b, match64: 0x00000000, model64: 0x1991e00019922},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1992c00019938, model64: 0x1993800019940},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x199490001994e, model64: 0x1994e00019951},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x199560001995d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1996800019975, model64: 0x1997500019978},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1998100019985},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1999f000199a8, model64: 0x199a8000199b4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c24, match64: 0x00000000, model64: 0x199bf000199c5},
		modelTuple{type64: 0x24700000251, matchRI: 0x1c25, match64: 0x00000000, model64: 0x199c5000199cb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x199d3000199d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c28, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x199e3000199ef, model64: 0x199ef000199fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x199fc00019a04, model64: 0x19a0400019a0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2a, match64: 0x00000000, model64: 0x19a0c00019a18},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2b, match64: 0x00000000, model64: 0x19a1800019a24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2c, match64: 0x00000000, model64: 0x19a2400019a2f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x19a5100019a5a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19a6700019a6c, model64: 0x19a6700019a6c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19a6c00019a72, model64: 0x19a6c00019a72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19a7200019a7a, model64: 0x19a7200019a7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19a7a00019a7f, model64: 0x19a7a00019a7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19a8300019a88, model64: 0x19a8800019a8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19a8f00019a98, model64: 0x19a9800019a9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2700000027, model64: 0x19a9d00019ab1},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x19ab800019ac3, model64: 0x19ab800019ac3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c33, match64: 0x00000000, model64: 0x19ac300019ad1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c34, match64: 0x00000000, model64: 0x19ad100019ade},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c35, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x19ae700019aee},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x1c39, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3a, match64: 0x00000000, model64: 0x19afb00019b06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3b, match64: 0x00000000, model64: 0x19b0600019b12},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3c, match64: 0x00000000, model64: 0x19b1200019b1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b2500019b31, model64: 0x19b3100019b37},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c40, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b3d00019b46, model64: 0x19b3d00019b46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b4600019b4d, model64: 0x19b4600019b4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c42, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b5400019b59, model64: 0x19b5400019b59},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c44, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c46, match64: 0x00000000, model64: 0x19b6800019b73},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c48, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c49, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b7700019b7d, model64: 0x19b7d00019b84},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b8900019b8e, model64: 0x19b8900019b8e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19b8e00019b95, model64: 0xabd80000abda},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x19b9900019ba4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c4f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c52, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c53, match64: 0x00000000, model64: 0xdcc40000dcc7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c55, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x19bbf00019bc6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19bd100019bdc, model64: 0x19bdc00019be2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19bca00019bd1, model64: 0x109a5000109a7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c5b, match64: 0x00000000, model64: 0x19bf700019bfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c5c, match64: 0x00000000, model64: 0x19bfe00019c09},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c5d, match64: 0x00000000, model64: 0x19c0900019c0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c5e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c61, match64: 0x00000000, model64: 0x19c1700019c22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c62, match64: 0x00000000, model64: 0x19c2200019c2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c63, match64: 0x00000000, model64: 0x19c2e00019c37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c64, match64: 0x00000000, model64: 0x19c3700019c42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c65, match64: 0x00000000, model64: 0x19c4200019c4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c66, match64: 0x00000000, model64: 0x19c4d00019c5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c67, match64: 0x00000000, model64: 0x19c5d00019c69},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c68, match64: 0x00000000, model64: 0x19c6900019c72},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c69, match64: 0x00000000, model64: 0x19c7200019c7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c6a, match64: 0x00000000, model64: 0x19c7b00019c85},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c6b, match64: 0x00000000, model64: 0x19c8500019c89},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c6c, match64: 0x00000000, model64: 0x19c8900019c94},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c6d, match64: 0x00000000, model64: 0x19c9400019c9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c6e, match64: 0x00000000, model64: 0x19c9f00019ca8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c6f, match64: 0x00000000, model64: 0x19ca800019cb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c70, match64: 0x00000000, model64: 0x19cb400019cc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c71, match64: 0x00000000, model64: 0x19cc000019ccc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c72, match64: 0x00000000, model64: 0x19ccc00019cdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c73, match64: 0x00000000, model64: 0x19cdd00019ce9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c74, match64: 0x00000000, model64: 0x19ce900019cf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c75, match64: 0x00000000, model64: 0x19cf300019cfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c76, match64: 0x00000000, model64: 0x19cfd00019d05},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c77, match64: 0x00000000, model64: 0x19d0500019d10},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c78, match64: 0x00000000, model64: 0x19d1000019d1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c79, match64: 0x00000000, model64: 0x19d1c00019d25},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19d2500019d2c, model64: 0x19d2500019d2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x19d3000019d33},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7d, match64: 0x00000000, model64: 0x19d3f00019d48},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7e, match64: 0x00000000, model64: 0x19d4800019d5b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d6800019d71, model64: 0x19d7100019d7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d7a00019d88, model64: 0x19d7a00019d88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d8800019d98, model64: 0x19d9800019da8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19da800019db5, model64: 0x19db500019dc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c82, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19dc900019dd2, model64: 0x19dd200019ddc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19de700019df1, model64: 0x19df100019dfb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19dfb00019e05, model64: 0x19e0500019e0f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x39100000393},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x19e1c00019e23},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c88, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19e2700019e36, model64: 0x19e3600019e45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19e4500019e4f, model64: 0x19e4f00019e59},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x19e5d00019e66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19e6900019e79, model64: 0x19e7900019e89},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8a, match64: 0x00000000, model64: 0x19e8900019e9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8b, match64: 0x00000000, model64: 0x19e9b00019ea6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ea600019eb1, model64: 0x19ea600019eb1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19eb100019ebc, model64: 0x19ebc00019ec7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ec700019ed1, model64: 0x19ed100019edb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19edb00019ee8, model64: 0x19ee800019ef5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8c, match64: 0x00000000, model64: 0x19ef500019efe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8d, match64: 0x00000000, model64: 0x19efe00019f07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f0700019f10, model64: 0x19f0700019f10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f1000019f18, model64: 0x19f1800019f20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f2000019f26, model64: 0x19f2600019f2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f2c00019f31, model64: 0x19f2c00019f31},
		modelTuple{type64: 0x24700000251, matchRI: 0x1c8e, match64: 0x00000000, model64: 0x19f3100019f3f},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x19f3f00019f4d, model64: 0x19f4d00019f57},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x19f5700019f65, model64: 0x19f6500019f6f},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x19f6f00019f7c, model64: 0x19f7c00019f85},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x19f8500019f8e, model64: 0xe0380000e03d},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x19f8e00019f99, model64: 0x19f9900019fa0},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x19fa000019fac, model64: 0x19fac00019fb4},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x19fb400019fc0, model64: 0x19fc000019fc8},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x19fc800019fcf, model64: 0x19fcf00019fd2},
		modelTuple{type64: 0x24700000251, matchRI: 0x1c8f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x19fd200019fe1, model64: 0x19fe100019fec},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x19fec00019ff5, model64: 0x19ff500019ffa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c91, match64: 0x00000000, model64: 0xeb120000eb15},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1a0040001a007},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0150001a01c, model64: 0x1a0150001a01c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a01c0001a027, model64: 0x1a01c0001a027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0270001a032, model64: 0x1a0320001a03d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a03d0001a043, model64: 0x1a0430001a049},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0490001a053, model64: 0x1a0530001a05d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a05d0001a069, model64: 0x1a0690001a075},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0750001a07c, model64: 0x1a07c0001a083},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0830001a08b, model64: 0x1a08b0001a093},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0930001a09a, model64: 0x1a09a0001a0a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0a10001a0a8, model64: 0x1a0a10001a0a8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0b60001a0bc, model64: 0x1a0b60001a0bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0bc0001a0c3, model64: 0x1a0bc0001a0c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0c30001a0d0, model64: 0x1a0d00001a0dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0dd0001a0e9, model64: 0x1a0dd0001a0e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c97, match64: 0x00000000, model64: 0x1a0e90001a0f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c98, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c99, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0fc0001a103, model64: 0x1a0fc0001a103},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9b, match64: 0x00000000, model64: 0x6c0000006c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9d, match64: 0x00000000, model64: 0x1a10a0001a116},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1160001a121, model64: 0x1a1210001a12c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9e, match64: 0x00000000, model64: 0x1a12c0001a136},
		modelTuple{type64: 0x24300000245, matchRI: 0x1c9f, match64: 0x00000000, model64: 0x1a1360001a13f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca1, match64: 0x00000000, model64: 0x1a14c0001a154},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca2, match64: 0x00000000, model64: 0x1a1540001a159},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x1a1590001a160, model64: 0x1a1600001a166},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ca3, match64: 0x00000000, model64: 0x1a1660001a16b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca5, match64: 0x00000000, model64: 0x1a1700001a178},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1a17b0001a183},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca7, match64: 0x00000000, model64: 0x9c3000009c38},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca9, match64: 0x00000000, model64: 0x1a1950001a19d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1caa, match64: 0x00000000, model64: 0x1a19d0001a1ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1ac0001a1b8, model64: 0x1a1b80001a1c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1c40001a1d2, model64: 0x1a1c40001a1d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1d20001a1da, model64: 0x1a1da0001a1e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1e20001a1ec, model64: 0x1a1ec0001a1f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1f60001a1ff, model64: 0x1a1ff0001a208},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2080001a211, model64: 0x1a2110001a21a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a21a0001a223, model64: 0x1a2230001a22c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a22c0001a236, model64: 0x1a22c0001a236},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1a2360001a241, model64: 0x1a2410001a24a},
		modelTuple{type64: 0x38400000391, matchRI: 0x1cac, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cad, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cae, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1caf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb6, match64: 0x00000000, model64: 0x1a25c0001a26b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1a26b0001a273, model64: 0x1a2730001a27c},
		modelTuple{type64: 0x24300000245, matchRI: 0x1cb9, match64: 0x00000000, model64: 0x1a27c0001a285},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1a2850001a28b, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: 0x1cba, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1a28b0001a294, model64: 0x1a2940001a2a3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cbb, match64: 0x00000000, model64: 0x1a2a30001a2b3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cbc, match64: 0x00000000, model64: 0x1a2b30001a2c8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cbd, match64: 0x00000000, model64: 0x1a2c80001a2de},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cbe, match64: 0x00000000, model64: 0x1a2de0001a2f3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cbf, match64: 0x00000000, model64: 0x1a2f30001a307},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cc0, match64: 0x00000000, model64: 0x1a3070001a318},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cc1, match64: 0x00000000, model64: 0x1a3180001a32e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cc2, match64: 0x00000000, model64: 0x1a32e0001a343},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cc3, match64: 0x00000000, model64: 0x1a3430001a34d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cc4, match64: 0x00000000, model64: 0x1a34d0001a35c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cc5, match64: 0x00000000, model64: 0x1a35c0001a370},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cc6, match64: 0x00000000, model64: 0x1a3700001a382},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cc7, match64: 0x00000000, model64: 0x1a3820001a399},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cc8, match64: 0x00000000, model64: 0x1a3990001a3ad},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cc9, match64: 0x00000000, model64: 0x1a3ad0001a3bf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cca, match64: 0x00000000, model64: 0x1a3bf0001a3d6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ccb, match64: 0x00000000, model64: 0x1a3d60001a3ec},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ccc, match64: 0x00000000, model64: 0x1a3ec0001a3fe},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ccd, match64: 0x00000000, model64: 0x1a3fe0001a412},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cce, match64: 0x00000000, model64: 0x1a4120001a421},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1a4210001a427, model64: 0x1a4270001a43b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ccf, match64: 0x00000000, model64: 0x1a43b0001a44b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cd0, match64: 0x00000000, model64: 0x1a44b0001a45b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cd1, match64: 0x00000000, model64: 0x1a45b0001a471},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cd2, match64: 0x00000000, model64: 0x1a4710001a489},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cd3, match64: 0x00000000, model64: 0x1a4890001a4ac},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cd4, match64: 0x00000000, model64: 0x1a4ac0001a4ca},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cd5, match64: 0x00000000, model64: 0x1a4ca0001a4ec},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cd6, match64: 0x00000000, model64: 0x1a4ec0001a505},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cd7, match64: 0x00000000, model64: 0x1a5050001a519},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cd8, match64: 0x00000000, model64: 0x1a5190001a531},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cd9, match64: 0x00000000, model64: 0x1a5310001a559},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cda, match64: 0x00000000, model64: 0x1a5590001a582},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cdb, match64: 0x00000000, model64: 0x1a5820001a5a9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cdc, match64: 0x00000000, model64: 0x1a5a90001a5d1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cdd, match64: 0x00000000, model64: 0x1a5d10001a5ed},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cde, match64: 0x00000000, model64: 0x1a5ed0001a609},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cdf, match64: 0x00000000, model64: 0x1a6090001a627},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ce0, match64: 0x00000000, model64: 0x1a6270001a646},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ce1, match64: 0x00000000, model64: 0x1a6460001a668},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ce2, match64: 0x00000000, model64: 0x1a6680001a68b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ce3, match64: 0x00000000, model64: 0x1a68b0001a6a2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ce4, match64: 0x00000000, model64: 0x1a68b0001a6a2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ce5, match64: 0x00000000, model64: 0x1a6a20001a6bb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ce6, match64: 0x00000000, model64: 0x1a6bb0001a6cd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ce7, match64: 0x00000000, model64: 0x1a6cd0001a6e4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ce8, match64: 0x00000000, model64: 0x1a6e40001a6ff},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ce9, match64: 0x00000000, model64: 0x1a6ff0001a716},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cea, match64: 0x00000000, model64: 0x1a7160001a72e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ceb, match64: 0x00000000, model64: 0x1a72e0001a746},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cec, match64: 0x00000000, model64: 0x1a7460001a764},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ced, match64: 0x00000000, model64: 0x1a7640001a777},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cee, match64: 0x00000000, model64: 0x1a7770001a78b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cef, match64: 0x00000000, model64: 0x1a78b0001a7a4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cf0, match64: 0x00000000, model64: 0x1a7a40001a7b7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cf1, match64: 0x00000000, model64: 0x1a7b70001a7ce},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cf2, match64: 0x00000000, model64: 0x1a7ce0001a7e6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cf3, match64: 0x00000000, model64: 0x1a7e60001a803},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cf4, match64: 0x00000000, model64: 0x1a8030001a81b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cf5, match64: 0x00000000, model64: 0x1a81b0001a831},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cf6, match64: 0x00000000, model64: 0x1a8310001a849},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cf7, match64: 0x00000000, model64: 0x1a8490001a867},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cf8, match64: 0x00000000, model64: 0x1a8670001a885},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cf9, match64: 0x00000000, model64: 0x1a8850001a8a1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cfa, match64: 0x00000000, model64: 0x1a8a10001a8b5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cfb, match64: 0x00000000, model64: 0x1a8b50001a8cc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cfc, match64: 0x00000000, model64: 0x1a8cc0001a8e2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cfd, match64: 0x00000000, model64: 0x1a8e20001a8fc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cfe, match64: 0x00000000, model64: 0x1a8fc0001a915},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cff, match64: 0x00000000, model64: 0x1a9150001a931},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d00, match64: 0x00000000, model64: 0x1a9310001a947},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d01, match64: 0x00000000, model64: 0x1a9470001a955},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d02, match64: 0x00000000, model64: 0x1a9550001a96b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d03, match64: 0x00000000, model64: 0x1a96b0001a981},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d04, match64: 0x00000000, model64: 0x1a9810001a992},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d05, match64: 0x00000000, model64: 0x1a9920001a9a8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d06, match64: 0x00000000, model64: 0x1a9a80001a9bc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d07, match64: 0x00000000, model64: 0x1a9bc0001a9d1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d08, match64: 0x00000000, model64: 0x1a9d10001a9ec},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d09, match64: 0x00000000, model64: 0x1a9ec0001aa02},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d0a, match64: 0x00000000, model64: 0x1aa020001aa16},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d0b, match64: 0x00000000, model64: 0x1aa160001aa27},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d0c, match64: 0x00000000, model64: 0x1aa270001aa3c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d0d, match64: 0x00000000, model64: 0x1aa3c0001aa52},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d0e, match64: 0x00000000, model64: 0x1aa520001aa67},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d0f, match64: 0x00000000, model64: 0x1aa670001aa7f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d10, match64: 0x00000000, model64: 0x1aa7f0001aa95},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d11, match64: 0x00000000, model64: 0x1aa950001aab0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d12, match64: 0x00000000, model64: 0x1aab00001aac2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d13, match64: 0x00000000, model64: 0x1aac20001aad9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d14, match64: 0x00000000, model64: 0x1aad90001aaef},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d15, match64: 0x00000000, model64: 0x1aaef0001ab06},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d16, match64: 0x00000000, model64: 0x1ab060001ab1d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d17, match64: 0x00000000, model64: 0x1ab1d0001ab33},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d18, match64: 0x00000000, model64: 0x1ab330001ab48},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d19, match64: 0x00000000, model64: 0x1ab480001ab5f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d1a, match64: 0x00000000, model64: 0x1ab5f0001ab75},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d1b, match64: 0x00000000, model64: 0x1ab750001ab8c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d1c, match64: 0x00000000, model64: 0x1ab8c0001aba2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d1d, match64: 0x00000000, model64: 0x1aba20001abb9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d1e, match64: 0x00000000, model64: 0x1abb90001abcf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d1f, match64: 0x00000000, model64: 0x1abcf0001abe6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d20, match64: 0x00000000, model64: 0x1abe60001abfc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d21, match64: 0x00000000, model64: 0x1abfc0001ac14},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d22, match64: 0x00000000, model64: 0x1ac140001ac2d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d23, match64: 0x00000000, model64: 0x1ac2d0001ac44},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d24, match64: 0x00000000, model64: 0x1ac440001ac5c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d25, match64: 0x00000000, model64: 0x1ac5c0001ac73},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d26, match64: 0x00000000, model64: 0x1ac730001ac89},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d27, match64: 0x00000000, model64: 0x1ac890001aca3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d28, match64: 0x00000000, model64: 0x1aca30001acbc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d29, match64: 0x00000000, model64: 0x1acbc0001acd7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d2a, match64: 0x00000000, model64: 0x1acd70001acf3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d2b, match64: 0x00000000, model64: 0x1acf30001ad0a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d2c, match64: 0x00000000, model64: 0x1ad0a0001ad23},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d2d, match64: 0x00000000, model64: 0x1ad230001ad39},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d2e, match64: 0x00000000, model64: 0x1ad390001ad51},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d2f, match64: 0x00000000, model64: 0x1ad510001ad67},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d30, match64: 0x00000000, model64: 0x1ad670001ad7c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d31, match64: 0x00000000, model64: 0x1ad7c0001ad92},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d32, match64: 0x00000000, model64: 0x1ad920001ada7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d33, match64: 0x00000000, model64: 0x1ada70001adc3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d34, match64: 0x00000000, model64: 0x1a5ed0001a609},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d35, match64: 0x00000000, model64: 0x1adc30001ade0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d36, match64: 0x00000000, model64: 0x1ade00001adf6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d37, match64: 0x00000000, model64: 0x1adf60001ae0b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d38, match64: 0x00000000, model64: 0x1ae0b0001ae29},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d39, match64: 0x00000000, model64: 0x1ae290001ae46},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d3a, match64: 0x00000000, model64: 0x1ae460001ae63},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d3b, match64: 0x00000000, model64: 0x1ae630001ae7c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d3c, match64: 0x00000000, model64: 0x1ae7c0001ae8d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d3d, match64: 0x00000000, model64: 0x1ae8d0001aea3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d3e, match64: 0x00000000, model64: 0x1aea30001aeb7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d3f, match64: 0x00000000, model64: 0x1aeb70001aecb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d40, match64: 0x00000000, model64: 0x1aecb0001aee6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d41, match64: 0x00000000, model64: 0x1aee60001aefc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d42, match64: 0x00000000, model64: 0x1aefc0001af17},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d43, match64: 0x00000000, model64: 0x1af170001af2f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d44, match64: 0x00000000, model64: 0x1af2f0001af4c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d45, match64: 0x00000000, model64: 0x1af4c0001af64},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d46, match64: 0x00000000, model64: 0x1af640001af81},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d47, match64: 0x00000000, model64: 0x1af810001af9c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d48, match64: 0x00000000, model64: 0x1af9c0001afbc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d49, match64: 0x00000000, model64: 0x1afbc0001afd1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d4a, match64: 0x00000000, model64: 0x1afd10001afdd},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1afdd0001afe4, model64: 0x1afe40001affe},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1affe0001b006, model64: 0x1b0060001b011},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b0110001b019, model64: 0x1b0190001b028},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b0280001b030, model64: 0x1b0300001b03d},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b03d0001b046, model64: 0x1b0460001b057},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b0570001b05e, model64: 0x1b05e0001b07c},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b07c0001b083, model64: 0x1b0830001b09d},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b09d0001b0a4, model64: 0x1b0a40001b0c2},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b0c20001b0c9, model64: 0x1b0c90001b0da},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b0da0001b0e1, model64: 0x1b0e10001b0f4},
		modelTuple{type64: 0x285a00002862, matchRI: 0x1d4b, match64: 0x00000000, model64: 0x1b0f40001b107},
		modelTuple{type64: 0x285a00002862, matchRI: 0x1d4c, match64: 0x00000000, model64: 0x1b1070001b11a},
		modelTuple{type64: 0x285a00002862, matchRI: 0x1d4d, match64: 0x00000000, model64: 0x1b11a0001b12d},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b12d0001b134, model64: 0x1b1340001b14b},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b14b0001b152, model64: 0x1b1520001b169},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b1690001b170, model64: 0x1b1700001b185},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b1850001b18c, model64: 0x1b18c0001b19f},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b19f0001b1a6, model64: 0x1b1a60001b1b7},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b1b70001b1be, model64: 0x1b1be0001b1d3},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b1d30001b1da, model64: 0x1b1da0001b1f5},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b1f50001b1fc, model64: 0x1b1fc0001b20f},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b20f0001b216, model64: 0x1b2160001b22c},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b22c0001b233, model64: 0x1b2330001b24f},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b24f0001b256, model64: 0x1b2560001b269},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b2690001b270, model64: 0x1b2700001b283},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b2830001b28a, model64: 0x1b28a0001b295},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b2950001b29c, model64: 0x1b29c0001b2a8},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b2a80001b2af, model64: 0x1b2af0001b2cb},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b2cb0001b2d2, model64: 0x1b2d20001b2ed},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b2ed0001b2f4, model64: 0x1b2f40001b30b},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b30b0001b312, model64: 0x1b3120001b325},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b3250001b32c, model64: 0x1b32c0001b33f},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b33f0001b346, model64: 0x1b3460001b35c},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1b35c0001b365, model64: 0x1b35c0001b365},
		modelTuple{type64: 0x6c9000006d3, matchRI: 0x1d4e, match64: 0x00000000, model64: 0x1b3650001b36f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d4f, match64: 0x00000000, model64: 0x1b36f0001b379},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d50, match64: 0x00000000, model64: 0x1b3790001b386},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d51, match64: 0x00000000, model64: 0x1b3860001b392},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d52, match64: 0x00000000, model64: 0x1b3920001b39d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d53, match64: 0x00000000, model64: 0x1b39d0001b3a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d54, match64: 0x00000000, model64: 0x1b3a80001b3b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d55, match64: 0x00000000, model64: 0x1b3b50001b3c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d56, match64: 0x00000000, model64: 0x1b3c10001b3d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d57, match64: 0x00000000, model64: 0x1b3d20001b3dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d58, match64: 0x00000000, model64: 0x1b3dc0001b3e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d59, match64: 0x00000000, model64: 0x1b3e80001b3f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5a, match64: 0x00000000, model64: 0x1b3f50001b3fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5b, match64: 0x00000000, model64: 0x1b3fd0001b405},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5c, match64: 0x00000000, model64: 0x1b4050001b40c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5d, match64: 0x00000000, model64: 0x1b40c0001b413},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5e, match64: 0x00000000, model64: 0x1b4130001b41a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5f, match64: 0x00000000, model64: 0x1b41a0001b425},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d60, match64: 0x00000000, model64: 0x1b4250001b42a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d61, match64: 0x00000000, model64: 0x1b42a0001b431},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d62, match64: 0x00000000, model64: 0x1b4310001b439},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d63, match64: 0x00000000, model64: 0x1b4390001b44a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d64, match64: 0x00000000, model64: 0x1b44a0001b454},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d65, match64: 0x00000000, model64: 0x1b4540001b464},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d66, match64: 0x00000000, model64: 0x1b4640001b470},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d67, match64: 0x00000000, model64: 0x1b4700001b47c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d68, match64: 0x00000000, model64: 0x1b47c0001b48d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d69, match64: 0x00000000, model64: 0x1b48d0001b49e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6a, match64: 0x00000000, model64: 0x1b49e0001b4ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6b, match64: 0x00000000, model64: 0x1b4ae0001b4b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6c, match64: 0x00000000, model64: 0x1b4b90001b4cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6d, match64: 0x00000000, model64: 0x1b4cb0001b4dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6e, match64: 0x00000000, model64: 0x1b4dc0001b4fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6f, match64: 0x00000000, model64: 0x1b4fb0001b506},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d70, match64: 0x00000000, model64: 0x1b5060001b519},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d71, match64: 0x00000000, model64: 0x1b5190001b528},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d72, match64: 0x00000000, model64: 0x1b5280001b53c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d73, match64: 0x00000000, model64: 0x1b53c0001b53e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d74, match64: 0x00000000, model64: 0x1b53e0001b549},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d75, match64: 0x00000000, model64: 0x1b5490001b556},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d76, match64: 0x00000000, model64: 0x1b5560001b561},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d77, match64: 0x00000000, model64: 0x1b5610001b56e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d78, match64: 0x00000000, model64: 0x1b56e0001b578},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d79, match64: 0x00000000, model64: 0x1b5780001b586},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7a, match64: 0x00000000, model64: 0x1b5060001b519},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7b, match64: 0x00000000, model64: 0x1b5860001b594},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7c, match64: 0x00000000, model64: 0x1b5940001b59d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7d, match64: 0x00000000, model64: 0x1b59d0001b5a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7e, match64: 0x00000000, model64: 0x1b5a60001b5ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7f, match64: 0x00000000, model64: 0x1b5ae0001b5bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d80, match64: 0x00000000, model64: 0x1b5bb0001b5c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d81, match64: 0x00000000, model64: 0x1b5c40001b5db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d82, match64: 0x00000000, model64: 0x1b5db0001b5eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d83, match64: 0x00000000, model64: 0x1b4ae0001b4b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d84, match64: 0x00000000, model64: 0x1b5eb0001b5fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d85, match64: 0x00000000, model64: 0x1b5fc0001b604},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d86, match64: 0x00000000, model64: 0x1b6040001b614},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d87, match64: 0x00000000, model64: 0x1b6140001b622},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d88, match64: 0x00000000, model64: 0x1b6220001b630},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d89, match64: 0x00000000, model64: 0x1b6300001b647},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8a, match64: 0x00000000, model64: 0x1b6470001b657},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8b, match64: 0x00000000, model64: 0x1b6570001b663},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8c, match64: 0x00000000, model64: 0x1b6630001b673},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8d, match64: 0x00000000, model64: 0x1b6730001b67c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8e, match64: 0x00000000, model64: 0x1b67c0001b68f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8f, match64: 0x00000000, model64: 0x1b68f0001b69c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d90, match64: 0x00000000, model64: 0x1b69c0001b6a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d91, match64: 0x00000000, model64: 0x1b6a70001b6b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d92, match64: 0x00000000, model64: 0x1b6b90001b6ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d93, match64: 0x00000000, model64: 0x1b6ca0001b6d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d94, match64: 0x00000000, model64: 0x1b6d90001b6ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d95, match64: 0x00000000, model64: 0x1b6ed0001b6f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d96, match64: 0x00000000, model64: 0x1b6f90001b70a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d97, match64: 0x00000000, model64: 0x1b70a0001b718},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d98, match64: 0x00000000, model64: 0x1b7180001b72a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d99, match64: 0x00000000, model64: 0x1b72a0001b743},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9a, match64: 0x00000000, model64: 0x1b7430001b74e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9b, match64: 0x00000000, model64: 0x1b74e0001b75e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9c, match64: 0x00000000, model64: 0x1b75e0001b769},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9d, match64: 0x00000000, model64: 0x1b7690001b776},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9e, match64: 0x00000000, model64: 0x1b7760001b782},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9f, match64: 0x00000000, model64: 0x1b7820001b791},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da0, match64: 0x00000000, model64: 0x1b7910001b79d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da1, match64: 0x00000000, model64: 0x1b79d0001b7ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da2, match64: 0x00000000, model64: 0x1b7ae0001b7bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da3, match64: 0x00000000, model64: 0x1b7bf0001b7cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da4, match64: 0x00000000, model64: 0x1b7cd0001b7da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da5, match64: 0x00000000, model64: 0x1b7da0001b7e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da6, match64: 0x00000000, model64: 0x1b7e90001b7f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da7, match64: 0x00000000, model64: 0x1b7f80001b807},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da8, match64: 0x00000000, model64: 0x1b8070001b816},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da9, match64: 0x00000000, model64: 0x1b8160001b828},
		modelTuple{type64: 0x2700000027, matchRI: 0x1daa, match64: 0x00000000, model64: 0x1b8280001b837},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dab, match64: 0x00000000, model64: 0x1b8370001b847},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dac, match64: 0x00000000, model64: 0x1b8470001b858},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dad, match64: 0x00000000, model64: 0x1b8580001b86e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dae, match64: 0x00000000, model64: 0x1b86e0001b87d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1daf, match64: 0x00000000, model64: 0x1b87d0001b890},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db0, match64: 0x00000000, model64: 0x190100001905},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db1, match64: 0x00000000, model64: 0x1b8900001b897},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db2, match64: 0x00000000, model64: 0x1b8970001b89d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db3, match64: 0x00000000, model64: 0x1b89d0001b8a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db4, match64: 0x00000000, model64: 0x1b8a30001b8a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db5, match64: 0x00000000, model64: 0x1b8a90001b8b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db6, match64: 0x00000000, model64: 0x1b8b10001b8b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db7, match64: 0x00000000, model64: 0x1b8b90001b8c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db8, match64: 0x00000000, model64: 0x1b8c10001b8c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db9, match64: 0x00000000, model64: 0x1b8c90001b8d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dba, match64: 0x00000000, model64: 0x1b8d70001b8e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dbb, match64: 0x00000000, model64: 0x1b8e40001b8f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dbc, match64: 0x00000000, model64: 0x1b8f10001b8fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dbd, match64: 0x00000000, model64: 0x1b8fe0001b90e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dbe, match64: 0x00000000, model64: 0x1b90e0001b91f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dbf, match64: 0x00000000, model64: 0x1b91f0001b93e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc0, match64: 0x00000000, model64: 0x1b5190001b528},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc1, match64: 0x00000000, model64: 0x1b93e0001b951},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc2, match64: 0x00000000, model64: 0x1b9510001b960},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc3, match64: 0x00000000, model64: 0x1b9600001b971},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc4, match64: 0x00000000, model64: 0x1b9710001b97f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc5, match64: 0x00000000, model64: 0x1b97f0001b991},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc6, match64: 0x00000000, model64: 0x1b9910001b99f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc7, match64: 0x00000000, model64: 0x1b99f0001b9a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc8, match64: 0x00000000, model64: 0x1b9a80001b9b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc9, match64: 0x00000000, model64: 0x1b9b60001b9c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dca, match64: 0x00000000, model64: 0x1b9c60001b9d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dcb, match64: 0x00000000, model64: 0x1b9d30001b9e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dcc, match64: 0x00000000, model64: 0x1b9e40001b9ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dcd, match64: 0x00000000, model64: 0x1b9b60001b9c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dce, match64: 0x00000000, model64: 0x1b9ed0001b9fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dcf, match64: 0x00000000, model64: 0x1b9fb0001ba0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd0, match64: 0x00000000, model64: 0x1ba0a0001ba13},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd1, match64: 0x00000000, model64: 0x1ba130001ba21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd2, match64: 0x00000000, model64: 0x1ba210001ba31},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd3, match64: 0x00000000, model64: 0x1ba310001ba3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd4, match64: 0x00000000, model64: 0x1ba3a0001ba48},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd5, match64: 0x00000000, model64: 0x1ba480001ba58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd6, match64: 0x00000000, model64: 0x1ba580001ba62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd7, match64: 0x00000000, model64: 0x1ba620001ba6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd8, match64: 0x00000000, model64: 0x1ba6b0001ba75},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd9, match64: 0x00000000, model64: 0x1ba750001ba7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dda, match64: 0x00000000, model64: 0x1ba7f0001ba8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ddb, match64: 0x00000000, model64: 0x1ba8e0001ba99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba990001ba9f, model64: 0x1ba9f0001bac0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ddc, match64: 0x00000000, model64: 0x1bac00001bacb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ddd, match64: 0x00000000, model64: 0x1bacb0001bad5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dde, match64: 0x00000000, model64: 0x1bad50001bae2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ddf, match64: 0x00000000, model64: 0x1bae20001baef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de0, match64: 0x00000000, model64: 0x1baef0001baff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de1, match64: 0x00000000, model64: 0x1baff0001bb12},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de2, match64: 0x00000000, model64: 0x1bb120001bb1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de3, match64: 0x00000000, model64: 0x1bb1d0001bb2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de4, match64: 0x00000000, model64: 0x1bb2b0001bb3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de5, match64: 0x00000000, model64: 0x1bb3b0001bb48},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de6, match64: 0x00000000, model64: 0x1bb480001bb58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de7, match64: 0x00000000, model64: 0x1bb580001bb7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de8, match64: 0x00000000, model64: 0x1bb7b0001bb8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de9, match64: 0x00000000, model64: 0x1bb8e0001bb9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dea, match64: 0x00000000, model64: 0x1bb9c0001bba6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1deb, match64: 0x00000000, model64: 0x1bba60001bbb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dec, match64: 0x00000000, model64: 0x1bbb60001bbc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ded, match64: 0x00000000, model64: 0x1bbc10001bbcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dee, match64: 0x00000000, model64: 0x1bbcb0001bbd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1def, match64: 0x00000000, model64: 0x1bbd60001bbe6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df0, match64: 0x00000000, model64: 0x1bbe60001bbf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df1, match64: 0x00000000, model64: 0x1bbf30001bbfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df2, match64: 0x00000000, model64: 0x1bbfd0001bc08},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df3, match64: 0x00000000, model64: 0x1bc080001bc18},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df4, match64: 0x00000000, model64: 0x1bc180001bc25},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df5, match64: 0x00000000, model64: 0x1bc250001bc35},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df6, match64: 0x00000000, model64: 0x1bc350001bc43},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df7, match64: 0x00000000, model64: 0x1bc430001bc54},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df8, match64: 0x00000000, model64: 0x1bc540001bc63},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df9, match64: 0x00000000, model64: 0x1bc630001bc71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfa, match64: 0x00000000, model64: 0x1bc710001bc7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfb, match64: 0x00000000, model64: 0x1bc7b0001bc87},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfc, match64: 0x00000000, model64: 0x1bc870001bc97},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfd, match64: 0x00000000, model64: 0x1bc970001bca1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfe, match64: 0x00000000, model64: 0x1bca10001bcb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dff, match64: 0x00000000, model64: 0x1bcb00001bcbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e00, match64: 0x00000000, model64: 0x1bcbb0001bcc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e01, match64: 0x00000000, model64: 0x1bcc60001bcd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e02, match64: 0x00000000, model64: 0x1bcd00001bcdb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e03, match64: 0x00000000, model64: 0x1bcdb0001bce6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e04, match64: 0x00000000, model64: 0x1bce60001bcf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e05, match64: 0x00000000, model64: 0x1bcf00001bcff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e06, match64: 0x00000000, model64: 0x1bcff0001bd09},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e07, match64: 0x00000000, model64: 0x1bd090001bd13},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e08, match64: 0x00000000, model64: 0x1bd130001bd1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e09, match64: 0x00000000, model64: 0x1bd1e0001bd2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0a, match64: 0x00000000, model64: 0x1bd2c0001bd36},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0b, match64: 0x00000000, model64: 0x1bd360001bd43},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0c, match64: 0x00000000, model64: 0x1bd430001bd4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0d, match64: 0x00000000, model64: 0x1bd4d0001bd5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0e, match64: 0x00000000, model64: 0x1bd5a0001bd64},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0f, match64: 0x00000000, model64: 0x1bd640001bd6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e10, match64: 0x00000000, model64: 0x1bd6e0001bd7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e11, match64: 0x00000000, model64: 0x1bd7a0001bd87},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e12, match64: 0x00000000, model64: 0x1bd870001bd97},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e13, match64: 0x00000000, model64: 0x1bd970001bda7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e14, match64: 0x00000000, model64: 0x1bda70001bdb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e15, match64: 0x00000000, model64: 0x1bdb70001bdc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e16, match64: 0x00000000, model64: 0x1bdc40001bdd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e17, match64: 0x00000000, model64: 0x1bdd10001bdda},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e18, match64: 0x00000000, model64: 0x1bdda0001bde3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e19, match64: 0x00000000, model64: 0x1bde30001bdf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1a, match64: 0x00000000, model64: 0x1bdf10001be01},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1b, match64: 0x00000000, model64: 0x1be010001be11},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1c, match64: 0x00000000, model64: 0x1be110001be21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1d, match64: 0x00000000, model64: 0x1be210001be2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1e, match64: 0x00000000, model64: 0x1be2b0001be38},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1f, match64: 0x00000000, model64: 0x1be380001be46},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e20, match64: 0x00000000, model64: 0x1be460001be4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e21, match64: 0x00000000, model64: 0x1be4f0001be59},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e22, match64: 0x00000000, model64: 0x1be590001be6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e23, match64: 0x00000000, model64: 0x1be6a0001be74},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e24, match64: 0x00000000, model64: 0x1be740001be7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e25, match64: 0x00000000, model64: 0x1be7d0001be8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e26, match64: 0x00000000, model64: 0x1be8d0001be9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e27, match64: 0x00000000, model64: 0x1be9d0001bead},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e28, match64: 0x00000000, model64: 0x1bead0001beb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e29, match64: 0x00000000, model64: 0x1beb70001bec1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2a, match64: 0x00000000, model64: 0x1bec10001bece},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2b, match64: 0x00000000, model64: 0x1bece0001bedb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2c, match64: 0x00000000, model64: 0x1bedb0001bee4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2d, match64: 0x00000000, model64: 0x1bee40001bef2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2e, match64: 0x00000000, model64: 0x1bef20001bf02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2f, match64: 0x00000000, model64: 0x1bf020001bf0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e30, match64: 0x00000000, model64: 0x1bf0c0001bf1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e31, match64: 0x00000000, model64: 0x1bf1c0001bf2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e32, match64: 0x00000000, model64: 0x1bf2d0001bf36},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e33, match64: 0x00000000, model64: 0x1bf360001bf41},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e34, match64: 0x00000000, model64: 0x1bf410001bf51},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e35, match64: 0x00000000, model64: 0x1bf510001bf5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e36, match64: 0x00000000, model64: 0x1bf5f0001bf6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e37, match64: 0x00000000, model64: 0x1bf6c0001bf76},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e38, match64: 0x00000000, model64: 0x1bf760001bf81},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e39, match64: 0x00000000, model64: 0x1bf810001bf8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3a, match64: 0x00000000, model64: 0x1bd2c0001bd36},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3b, match64: 0x00000000, model64: 0x1bf8c0001bf96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3c, match64: 0x00000000, model64: 0x1bf960001bfa3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3d, match64: 0x00000000, model64: 0x1bfa30001bfad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3e, match64: 0x00000000, model64: 0x1bfad0001bfb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3f, match64: 0x00000000, model64: 0x1bfb70001bfc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e40, match64: 0x00000000, model64: 0x1bfc10001bfcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e41, match64: 0x00000000, model64: 0x1bfcc0001bfd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e42, match64: 0x00000000, model64: 0x1bfd70001bfe2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e43, match64: 0x00000000, model64: 0x1bfe20001bfec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e44, match64: 0x00000000, model64: 0x1bfec0001bff9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e45, match64: 0x00000000, model64: 0x1bff90001c003},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e46, match64: 0x00000000, model64: 0x1c0030001c00e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e47, match64: 0x00000000, model64: 0x1c00e0001c018},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e48, match64: 0x00000000, model64: 0x1c0180001c022},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e49, match64: 0x00000000, model64: 0x1c0220001c02f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4a, match64: 0x00000000, model64: 0x1c02f0001c03c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4b, match64: 0x00000000, model64: 0x1c03c0001c046},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4c, match64: 0x00000000, model64: 0x1c0460001c051},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4d, match64: 0x00000000, model64: 0x1c0510001c05b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4e, match64: 0x00000000, model64: 0x1c05b0001c068},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4f, match64: 0x00000000, model64: 0x1c0680001c072},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e50, match64: 0x00000000, model64: 0x1c0720001c07d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e51, match64: 0x00000000, model64: 0x1c0720001c07d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e52, match64: 0x00000000, model64: 0x1c07d0001c087},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e53, match64: 0x00000000, model64: 0x1c0870001c094},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e54, match64: 0x00000000, model64: 0x1c0940001c0a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e55, match64: 0x00000000, model64: 0x1c0a40001c0b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e56, match64: 0x00000000, model64: 0x1c0b10001c0c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e57, match64: 0x00000000, model64: 0x1c0c10001c0ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e58, match64: 0x00000000, model64: 0x1c0ce0001c0db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e59, match64: 0x00000000, model64: 0x1c0db0001c0e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5a, match64: 0x00000000, model64: 0x1c0e50001c0f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5b, match64: 0x00000000, model64: 0x1c0f00001c0fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5c, match64: 0x00000000, model64: 0x1c0fa0001c104},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5d, match64: 0x00000000, model64: 0x1c1040001c111},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5e, match64: 0x00000000, model64: 0x1c1110001c11c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5f, match64: 0x00000000, model64: 0x1c11c0001c126},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e60, match64: 0x00000000, model64: 0x1c1260001c130},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e61, match64: 0x00000000, model64: 0x1c1300001c13d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e62, match64: 0x00000000, model64: 0x1c13d0001c14a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e63, match64: 0x00000000, model64: 0x1c14a0001c154},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e64, match64: 0x00000000, model64: 0x1c1540001c161},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e65, match64: 0x00000000, model64: 0x1c1610001c16e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e66, match64: 0x00000000, model64: 0x1c16e0001c178},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e67, match64: 0x00000000, model64: 0x1c1780001c185},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e68, match64: 0x00000000, model64: 0x1c1850001c192},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e69, match64: 0x00000000, model64: 0x1c1920001c19f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6a, match64: 0x00000000, model64: 0x1c19f0001c1a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6b, match64: 0x00000000, model64: 0x1c1a90001c1b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6c, match64: 0x00000000, model64: 0x1c1b90001c1c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6d, match64: 0x00000000, model64: 0x1c1c40001c1d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6e, match64: 0x00000000, model64: 0x1c1d00001c1d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6f, match64: 0x00000000, model64: 0x1c1d90001c1e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e70, match64: 0x00000000, model64: 0x1c1e70001c1fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e71, match64: 0x00000000, model64: 0x1c1fb0001c20b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e72, match64: 0x00000000, model64: 0x1c20b0001c218},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e73, match64: 0x00000000, model64: 0x1c2180001c221},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e74, match64: 0x00000000, model64: 0x1c2210001c22f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e75, match64: 0x00000000, model64: 0x1c22f0001c23d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e76, match64: 0x00000000, model64: 0x1c23d0001c24b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e77, match64: 0x00000000, model64: 0x1c24b0001c258},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e78, match64: 0x00000000, model64: 0x1c2580001c267},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e79, match64: 0x00000000, model64: 0x1c2670001c274},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7a, match64: 0x00000000, model64: 0x1c2740001c281},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7b, match64: 0x00000000, model64: 0x1c2810001c293},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7c, match64: 0x00000000, model64: 0x1c2930001c2a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7d, match64: 0x00000000, model64: 0x1c2a20001c2b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7e, match64: 0x00000000, model64: 0x1c2b20001c2c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7f, match64: 0x00000000, model64: 0x1c2c00001c2ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e80, match64: 0x00000000, model64: 0x1c2ce0001c2df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e81, match64: 0x00000000, model64: 0x1c2df0001c2f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e82, match64: 0x00000000, model64: 0x1c2810001c293},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e83, match64: 0x00000000, model64: 0x1c2f00001c300},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e84, match64: 0x00000000, model64: 0x1c3000001c310},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e85, match64: 0x00000000, model64: 0x1c3100001c320},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e86, match64: 0x00000000, model64: 0x1c3200001c330},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e87, match64: 0x00000000, model64: 0x1c3300001c339},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e88, match64: 0x00000000, model64: 0x1c3390001c349},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e89, match64: 0x00000000, model64: 0x1c3490001c359},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8a, match64: 0x00000000, model64: 0x1c3590001c36d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8b, match64: 0x00000000, model64: 0x1c36d0001c37d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8c, match64: 0x00000000, model64: 0x1c37d0001c38c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8d, match64: 0x00000000, model64: 0x1c38c0001c395},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8e, match64: 0x00000000, model64: 0x1c3950001c39f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8f, match64: 0x00000000, model64: 0x1c39f0001c3ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e90, match64: 0x00000000, model64: 0x1c3ad0001c3b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e91, match64: 0x00000000, model64: 0x1c3b70001c3c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e92, match64: 0x00000000, model64: 0x1c3c10001c3ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e93, match64: 0x00000000, model64: 0x1c3ca0001c3da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e94, match64: 0x00000000, model64: 0x1c3da0001c3ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e95, match64: 0x00000000, model64: 0x1c3ea0001c3fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e96, match64: 0x00000000, model64: 0x1c3fa0001c40a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e97, match64: 0x00000000, model64: 0x1c40a0001c419},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e98, match64: 0x00000000, model64: 0x1c4190001c428},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e99, match64: 0x00000000, model64: 0x1c4280001c439},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9a, match64: 0x00000000, model64: 0x1c4390001c446},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9b, match64: 0x00000000, model64: 0x1c4460001c457},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9c, match64: 0x00000000, model64: 0x1c4570001c464},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9d, match64: 0x00000000, model64: 0x1c4640001c472},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9e, match64: 0x00000000, model64: 0x1c4720001c47f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9f, match64: 0x00000000, model64: 0x1c47f0001c48e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea0, match64: 0x00000000, model64: 0x1c48e0001c499},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea1, match64: 0x00000000, model64: 0x1c4990001c4a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c4a40001c4ae, model64: 0x1c4ae0001c4bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c4bc0001c4c5, model64: 0x1c4c50001c4d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea2, match64: 0x00000000, model64: 0x1c4d20001c4db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea3, match64: 0x00000000, model64: 0x1c4db0001c4ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea4, match64: 0x00000000, model64: 0x1c4ec0001c4fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c4fb0001c502, model64: 0x1c5020001c510},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c5100001c518, model64: 0x1c5180001c525},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c5250001c52d, model64: 0x1c52d0001c53a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea5, match64: 0x00000000, model64: 0x1c53a0001c544},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea6, match64: 0x00000000, model64: 0x1c5440001c54e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea7, match64: 0x00000000, model64: 0x1c54e0001c55d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea8, match64: 0x00000000, model64: 0x1c55d0001c568},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea9, match64: 0x00000000, model64: 0x1c5680001c573},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eaa, match64: 0x00000000, model64: 0x1c5730001c57d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eab, match64: 0x00000000, model64: 0x1c57d0001c587},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eac, match64: 0x00000000, model64: 0x1c5870001c592},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ead, match64: 0x00000000, model64: 0x1c5920001c59c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eae, match64: 0x00000000, model64: 0x1c59c0001c5a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eaf, match64: 0x00000000, model64: 0x1c5a60001c5b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb0, match64: 0x00000000, model64: 0x1c5b00001c5bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb1, match64: 0x00000000, model64: 0x1c5bd0001c5ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb2, match64: 0x00000000, model64: 0x1c5ca0001c5d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb3, match64: 0x00000000, model64: 0x1c5d40001c5de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb4, match64: 0x00000000, model64: 0x1c5de0001c5ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb5, match64: 0x00000000, model64: 0x1c5ef0001c5f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb6, match64: 0x00000000, model64: 0x1c5f90001c607},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb7, match64: 0x00000000, model64: 0x1c6070001c614},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb8, match64: 0x00000000, model64: 0x1c6140001c61f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb9, match64: 0x00000000, model64: 0x1c61f0001c629},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eba, match64: 0x00000000, model64: 0x1c6290001c633},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebb, match64: 0x00000000, model64: 0x1c6330001c63d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebc, match64: 0x00000000, model64: 0x1c63d0001c64a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebd, match64: 0x00000000, model64: 0x1c64a0001c657},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebe, match64: 0x00000000, model64: 0x1c6570001c662},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebf, match64: 0x00000000, model64: 0x1c6620001c66f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec0, match64: 0x00000000, model64: 0x1c66f0001c679},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec1, match64: 0x00000000, model64: 0x1c6790001c686},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec2, match64: 0x00000000, model64: 0x1c6860001c690},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec3, match64: 0x00000000, model64: 0x1c6900001c69d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec4, match64: 0x00000000, model64: 0x1c69d0001c6ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec5, match64: 0x00000000, model64: 0x1c6ad0001c6ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec6, match64: 0x00000000, model64: 0x1c6ba0001c6c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec7, match64: 0x00000000, model64: 0x1c6c70001c6d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec8, match64: 0x00000000, model64: 0x1c6ba0001c6c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec9, match64: 0x00000000, model64: 0x1c6d10001c6de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eca, match64: 0x00000000, model64: 0x1c6de0001c6e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ecb, match64: 0x00000000, model64: 0x1c6e80001c6f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ecc, match64: 0x00000000, model64: 0x1c6f20001c6fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ecd, match64: 0x00000000, model64: 0x1c6fc0001c70c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ece, match64: 0x00000000, model64: 0x1c70c0001c71b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ecf, match64: 0x00000000, model64: 0x1c71b0001c727},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed0, match64: 0x00000000, model64: 0x1c7270001c731},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed1, match64: 0x00000000, model64: 0x1c7310001c742},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed2, match64: 0x00000000, model64: 0x1c7420001c74c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed3, match64: 0x00000000, model64: 0x1c74c0001c75d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed4, match64: 0x00000000, model64: 0x1c75d0001c76d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed5, match64: 0x00000000, model64: 0x1c76d0001c776},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed6, match64: 0x00000000, model64: 0x1c7760001c783},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed7, match64: 0x00000000, model64: 0x1c7830001c790},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed8, match64: 0x00000000, model64: 0x1c7900001c799},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed9, match64: 0x00000000, model64: 0x1c7990001c7a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eda, match64: 0x00000000, model64: 0x1c7a60001c7af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1edb, match64: 0x00000000, model64: 0x1c7af0001c7bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1edc, match64: 0x00000000, model64: 0x1c7bc0001c7c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1edd, match64: 0x00000000, model64: 0x1c7c50001c7ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ede, match64: 0x00000000, model64: 0x1c7ce0001c7d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1edf, match64: 0x00000000, model64: 0x1c7d70001c7e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee0, match64: 0x00000000, model64: 0x1c7e00001c7ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee1, match64: 0x00000000, model64: 0x1c7ed0001c7fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee2, match64: 0x00000000, model64: 0x1c7fc0001c806},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee3, match64: 0x00000000, model64: 0x1c8060001c812},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee4, match64: 0x00000000, model64: 0x1c8120001c81e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee5, match64: 0x00000000, model64: 0x1c81e0001c829},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee6, match64: 0x00000000, model64: 0x1c8290001c83b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee7, match64: 0x00000000, model64: 0x1c83b0001c854},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1ee8, match64: 0x00000000, model64: 0x1c8540001c85f},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1ee9, match64: 0x00000000, model64: 0x1c85f0001c86e},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1eea, match64: 0x00000000, model64: 0x1c86e0001c87d},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1eeb, match64: 0x00000000, model64: 0x1c87d0001c88c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1eec, match64: 0x00000000, model64: 0x1c88c0001c89b},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1eed, match64: 0x00000000, model64: 0x1c89b0001c8aa},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1eee, match64: 0x00000000, model64: 0x1c8aa0001c8b9},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1eef, match64: 0x00000000, model64: 0x1c8b90001c8c8},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1ef0, match64: 0x00000000, model64: 0x1c8c80001c8da},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1ef1, match64: 0x00000000, model64: 0x1c8da0001c8ec},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1ef2, match64: 0x00000000, model64: 0x1c8ec0001c8fb},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1ef3, match64: 0x00000000, model64: 0x1c8fb0001c90a},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1ef4, match64: 0x00000000, model64: 0x1c90a0001c91a},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1ef5, match64: 0x00000000, model64: 0x1c91a0001c92f},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1ef6, match64: 0x00000000, model64: 0x1c92f0001c93b},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1ef7, match64: 0x00000000, model64: 0x1c93b0001c94c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1ef8, match64: 0x00000000, model64: 0x1c94c0001c95d},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1ef9, match64: 0x00000000, model64: 0x1c95d0001c968},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1efa, match64: 0x00000000, model64: 0x1c9680001c978},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1efb, match64: 0x00000000, model64: 0x1c9780001c98f},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1efc, match64: 0x00000000, model64: 0x1c98f0001c99d},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1efd, match64: 0x00000000, model64: 0x1c99d0001c9af},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1efe, match64: 0x00000000, model64: 0x1c9af0001c9bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eff, match64: 0x00000000, model64: 0x1c9bd0001c9cd},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f00, match64: 0x00000000, model64: 0x1c9cd0001c9df},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f01, match64: 0x00000000, model64: 0x1c9df0001c9f9},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f02, match64: 0x00000000, model64: 0x1c9f90001ca10},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f03, match64: 0x00000000, model64: 0x1ca100001ca24},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f04, match64: 0x00000000, model64: 0x1ca240001ca33},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f05, match64: 0x00000000, model64: 0x1ca330001ca49},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f06, match64: 0x00000000, model64: 0x1ca490001ca5a},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f07, match64: 0x00000000, model64: 0x1ca5a0001ca6c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f08, match64: 0x00000000, model64: 0x1ca6c0001ca7d},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f09, match64: 0x00000000, model64: 0x1ca7d0001ca8a},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f0a, match64: 0x00000000, model64: 0x1ca8a0001ca97},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f0b, match64: 0x00000000, model64: 0x1ca970001caa8},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f0c, match64: 0x00000000, model64: 0x1caa80001caba},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f0d, match64: 0x00000000, model64: 0x1caba0001cac7},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f0e, match64: 0x00000000, model64: 0x1cac70001cad9},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f0f, match64: 0x00000000, model64: 0x1cad90001cae6},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f10, match64: 0x00000000, model64: 0x1cae60001caf5},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f11, match64: 0x00000000, model64: 0x1caf50001cb04},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f12, match64: 0x00000000, model64: 0x1cb040001cb11},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f13, match64: 0x00000000, model64: 0x1cb110001cb1e},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f14, match64: 0x00000000, model64: 0x1cb1e0001cb2b},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f15, match64: 0x00000000, model64: 0x1cb2b0001cb3a},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f16, match64: 0x00000000, model64: 0x1cb3a0001cb48},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f17, match64: 0x00000000, model64: 0x1cb480001cb5b},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f18, match64: 0x00000000, model64: 0x1cb5b0001cb6c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f19, match64: 0x00000000, model64: 0x1cb6c0001cb80},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f1a, match64: 0x00000000, model64: 0x1cb800001cb8e},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x1f1b, match64: 0x00000000, model64: 0x1cb8e0001cba5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1c, match64: 0x00000000, model64: 0x1cba50001cbac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1d, match64: 0x00000000, model64: 0x1cbac0001cbbd},
		modelTuple{type64: 0x38400000391, matchRI: 0x1f1e, match64: 0x00000000, model64: 0x1cbbd0001cbc2},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0x1cbc20001cbce, model64: 0x1cbc20001cbce},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0x1cbce0001cbdd, model64: 0x1cbce0001cbdd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1f1f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cbdd0001cbe3, model64: 0x1b4ae0001b4b9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1f20, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f21, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1cbe30001cbeb, model64: 0x9c3000009c38},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f22, match64: 0x00000000, model64: 0x1cbeb0001cbf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f23, match64: 0x00000000, model64: 0x1cbeb0001cbf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f24, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f25, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f26, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f27, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f28, match64: 0x00000000, model64: 0x1cbf40001cbf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f29, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2a, match64: 0x00000000, model64: 0x1cbf90001cbff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2c, match64: 0x00000000, model64: 0x1cbf90001cbff},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cc120001cc15, model64: 0x1cc120001cc15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cc150001cc18, model64: 0x1cc150001cc18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cc180001cc1d, model64: 0x1cc1d0001cc21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f30, match64: 0x00000000, model64: 0x9b9100009b94},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1cc300001cc3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cc400001cc47, model64: 0x928700009290},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f32, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f34, match64: 0x00000000, model64: 0x1cc4d0001cc57},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f35, match64: 0x00000000, model64: 0x1cc570001cc60},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f36, match64: 0x00000000, model64: 0x1cc600001cc66},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f37, match64: 0x00000000, model64: 0x1cc660001cc70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f38, match64: 0x00000000, model64: 0x1cc700001cc7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f39, match64: 0x00000000, model64: 0x1cc7c0001cc8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3a, match64: 0x00000000, model64: 0xa51b0000a527},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3b, match64: 0x00000000, model64: 0x1cc8a0001cc93},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3c, match64: 0x00000000, model64: 0x1cc930001cc99},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3d, match64: 0x00000000, model64: 0x1cc990001cca3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3e, match64: 0x00000000, model64: 0x1cca30001cca9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3f, match64: 0x00000000, model64: 0x1cca90001ccb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f40, match64: 0x00000000, model64: 0x55060000550b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f41, match64: 0x00000000, model64: 0x1ccb30001ccb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f42, match64: 0x00000000, model64: 0x1ccb80001ccbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f43, match64: 0x00000000, model64: 0x1ccbe0001ccc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f44, match64: 0x00000000, model64: 0x1ccc60001ccd1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1f45, match64: 0x00000000, model64: 0x1ccd10001ccd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f46, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f47, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f48, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4a, match64: 0x00000000, model64: 0x1ccd80001cce8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4b, match64: 0x00000000, model64: 0x1cce80001ccf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4c, match64: 0x00000000, model64: 0x1ccf10001ccf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cd100001cd1f, model64: 0x1cd1f0001cd28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cd280001cd36, model64: 0x1cd360001cd46},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f55, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f57, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1f58, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5b, match64: 0x00000000, model64: 0x3b0700003b09},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cd7b0001cd88, model64: 0x1cd880001cd8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cd8f0001cd9a, model64: 0x1cd9a0001cda5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cda50001cdba, model64: 0x1cdba0001cdc8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cdc80001cdd7, model64: 0x1cdd70001cddf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cddf0001cdee, model64: 0x1cdee0001cdf6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cdf60001ce08, model64: 0x1ce080001ce13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ce130001ce2b, model64: 0x1ce2b0001ce3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5e, match64: 0x00000000, model64: 0x1ce420001ce50},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5f, match64: 0x00000000, model64: 0x1ce500001ce5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f60, match64: 0x00000000, model64: 0x1ce5c0001ce6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f61, match64: 0x00000000, model64: 0x1ce6e0001ce7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f62, match64: 0x00000000, model64: 0x1ce7a0001ce86},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f63, match64: 0x00000000, model64: 0x1ce860001ce92},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f64, match64: 0x00000000, model64: 0x1ce920001ce9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f65, match64: 0x00000000, model64: 0x1ce9b0001cea9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f66, match64: 0x00000000, model64: 0x1cea90001ceb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f67, match64: 0x00000000, model64: 0x1ceb70001cec2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f68, match64: 0x00000000, model64: 0x1cec20001cece},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f69, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6a, match64: 0x00000000, model64: 0x1cece0001ced3},
		modelTuple{type64: 0x24700000251, matchRI: 0x1f6b, match64: 0x00000000, model64: 0x1ced30001cede},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ceeb0001cef7, model64: 0x1cef70001cf04},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f72, match64: 0x00000000, model64: 0x91b1000091b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f73, match64: 0x00000000, model64: 0x212f00002133},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f74, match64: 0x00000000, model64: 0x1cf100001cf14},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f75, match64: 0x00000000, model64: 0x1cf100001cf14},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f76, match64: 0x00000000, model64: 0x1cf140001cf1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f77, match64: 0x00000000, model64: 0x1cf1a0001cf24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f78, match64: 0x00000000, model64: 0x6ac000006ac3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f79, match64: 0x00000000, model64: 0x1cf240001cf29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7a, match64: 0x00000000, model64: 0x11da100011daa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7b, match64: 0x00000000, model64: 0x1cf290001cf30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7c, match64: 0x00000000, model64: 0x1cf300001cf34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7d, match64: 0x00000000, model64: 0x1cf340001cf3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7e, match64: 0x00000000, model64: 0x1cf3b0001cf42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f81, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f82, match64: 0x00000000, model64: 0x1cf470001cf50},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f85, match64: 0x00000000, model64: 0x1cf5a0001cf63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cf630001cf6d, model64: 0x1cf6d0001cf74},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f86, match64: 0x00000000, model64: 0x1cf740001cf82},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f87, match64: 0x00000000, model64: 0x1cf820001cf8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f88, match64: 0x00000000, model64: 0x1cf8b0001cf93},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f89, match64: 0x00000000, model64: 0x1cf930001cf9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8a, match64: 0x00000000, model64: 0x1cf9b0001cfa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8b, match64: 0x00000000, model64: 0x1cfa60001cfb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8c, match64: 0x00000000, model64: 0x1cfb40001cfc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8d, match64: 0x00000000, model64: 0x1cfc20001cfd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8e, match64: 0x00000000, model64: 0x1cfd00001cfde},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8f, match64: 0x00000000, model64: 0x1cfde0001cfe8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f90, match64: 0x00000000, model64: 0x1cfe80001cff4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f91, match64: 0x00000000, model64: 0x1cff40001d000},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f92, match64: 0x00000000, model64: 0x1d0000001d010},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f93, match64: 0x00000000, model64: 0x1d0100001d01d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f94, match64: 0x00000000, model64: 0x1d01d0001d02d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f95, match64: 0x00000000, model64: 0x1d02d0001d040},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f96, match64: 0x00000000, model64: 0x1d0400001d04d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f97, match64: 0x00000000, model64: 0x1d04d0001d05f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f98, match64: 0x00000000, model64: 0x1d05f0001d06c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f99, match64: 0x00000000, model64: 0x1d06c0001d07a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9a, match64: 0x00000000, model64: 0x1d07a0001d08c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9b, match64: 0x00000000, model64: 0x1d08c0001d099},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9c, match64: 0x00000000, model64: 0x1d0990001d0a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9d, match64: 0x00000000, model64: 0x1d0a70001d0b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9e, match64: 0x00000000, model64: 0x1d0b00001d0c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9f, match64: 0x00000000, model64: 0x1d0c10001d0cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa0, match64: 0x00000000, model64: 0x1d0cb0001d0d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa1, match64: 0x00000000, model64: 0x1d0d50001d0e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa2, match64: 0x00000000, model64: 0x1d0e10001d0ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa3, match64: 0x00000000, model64: 0x1d0ed0001d100},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa4, match64: 0x00000000, model64: 0x1d1000001d10e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa5, match64: 0x00000000, model64: 0x1d10e0001d11e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa6, match64: 0x00000000, model64: 0x1d11e0001d12a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa7, match64: 0x00000000, model64: 0x1d12a0001d13c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa8, match64: 0x00000000, model64: 0x1d13c0001d14a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa9, match64: 0x00000000, model64: 0x1d14a0001d15b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1faa, match64: 0x00000000, model64: 0x1d15b0001d163},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fab, match64: 0x00000000, model64: 0x1d1630001d16a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fac, match64: 0x00000000, model64: 0x1d16a0001d179},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fad, match64: 0x00000000, model64: 0x1d1790001d181},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fae, match64: 0x00000000, model64: 0x1d1810001d191},
		modelTuple{type64: 0x2700000027, matchRI: 0x1faf, match64: 0x00000000, model64: 0x1d1910001d19a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb0, match64: 0x00000000, model64: 0x1d19a0001d1a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb1, match64: 0x00000000, model64: 0x1d1a70001d1b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb2, match64: 0x00000000, model64: 0x1d1b30001d1ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb3, match64: 0x00000000, model64: 0x1d1ba0001d1c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb4, match64: 0x00000000, model64: 0x1d1c30001d1cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb5, match64: 0x00000000, model64: 0x1d1cd0001d1e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb6, match64: 0x00000000, model64: 0x1d1e00001d1f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb7, match64: 0x00000000, model64: 0x1d1f30001d1fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb8, match64: 0x00000000, model64: 0x1d1fd0001d20a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb9, match64: 0x00000000, model64: 0x1d20a0001d217},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fba, match64: 0x00000000, model64: 0x1d2170001d226},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbb, match64: 0x00000000, model64: 0x1d2260001d235},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbc, match64: 0x00000000, model64: 0x1d2350001d23c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbd, match64: 0x00000000, model64: 0x1d23c0001d243},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbe, match64: 0x00000000, model64: 0x1d2430001d24a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbf, match64: 0x00000000, model64: 0x1d24a0001d257},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc0, match64: 0x00000000, model64: 0x1d2570001d25f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc1, match64: 0x00000000, model64: 0x1d25f0001d26b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc2, match64: 0x00000000, model64: 0x1d26b0001d273},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc3, match64: 0x00000000, model64: 0x1d2730001d280},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc4, match64: 0x00000000, model64: 0x1d2800001d28d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc5, match64: 0x00000000, model64: 0x1d28d0001d295},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc6, match64: 0x00000000, model64: 0x1d2950001d29d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc7, match64: 0x00000000, model64: 0x1d29d0001d2aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc8, match64: 0x00000000, model64: 0x1d2aa0001d2b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc9, match64: 0x00000000, model64: 0x1d2b80001d2c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fca, match64: 0x00000000, model64: 0x1d2c50001d2d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcb, match64: 0x00000000, model64: 0x1d1910001d19a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcc, match64: 0x00000000, model64: 0x1d2d20001d2da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcd, match64: 0x00000000, model64: 0x1d2da0001d2e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fce, match64: 0x00000000, model64: 0x1d2e20001d2ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcf, match64: 0x00000000, model64: 0x1d2ee0001d2f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd0, match64: 0x00000000, model64: 0x1d2f60001d2fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd1, match64: 0x00000000, model64: 0x1d2fd0001d303},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd2, match64: 0x00000000, model64: 0x1d3030001d306},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd3, match64: 0x00000000, model64: 0x1d3060001d30d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd4, match64: 0x00000000, model64: 0xdc830000dc85},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd5, match64: 0x00000000, model64: 0x1091500010917},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd6, match64: 0x00000000, model64: 0x108fe00010900},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd7, match64: 0x00000000, model64: 0x1794000017942},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd8, match64: 0x00000000, model64: 0x160b3000160b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd9, match64: 0x00000000, model64: 0x1d30d0001d314},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fda, match64: 0x00000000, model64: 0x1d3140001d320},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdb, match64: 0x00000000, model64: 0x1d3200001d329},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d3290001d330, model64: 0x1d3300001d33d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d33d0001d342, model64: 0x1d3420001d34d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdc, match64: 0x00000000, model64: 0x1d34d0001d35d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d35d0001d363, model64: 0x1d3630001d372},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdd, match64: 0x00000000, model64: 0x1d3720001d380},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d3800001d388, model64: 0x1d3880001d396},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d3960001d39d, model64: 0x1d39d0001d3ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d3ac0001d3b3, model64: 0x1d3b30001d3bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fde, match64: 0x00000000, model64: 0x1d3bf0001d3d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdf, match64: 0x00000000, model64: 0x1d3d30001d3df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe0, match64: 0x00000000, model64: 0x1d13c0001d14a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe1, match64: 0x00000000, model64: 0x1d3df0001d3ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe2, match64: 0x00000000, model64: 0x1d3ea0001d3f3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1fe3, match64: 0x00000000, model64: 0x1d3f30001d402},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1fe4, match64: 0x00000000, model64: 0x1d4020001d411},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1fe5, match64: 0x00000000, model64: 0xd3740000d37b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1fe6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1fe7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1d4110001d420, model64: 0x1d4200001d42c},
		modelTuple{type64: 0x24300000245, matchRI: 0x1fe8, match64: 0x00000000, model64: 0x1d42c0001d43a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1fea, match64: 0x00000000, model64: 0x1d43a0001d444},
		modelTuple{type64: 0x2700000027, matchRI: 0x1feb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fec, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d4570001d45d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d4660001d471},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff2, match64: 0x00000000, model64: 0x1d47c0001d482},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4820001d488, model64: 0x1d4880001d48e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d48e0001d496, model64: 0x1d4960001d49c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff3, match64: 0x00000000, model64: 0x3d3000003d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff4, match64: 0x00000000, model64: 0x1d49c0001d4a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4a10001d4a9, model64: 0x1d4a90001d4b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4b30001d4b8, model64: 0x1d4b80001d4be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4be0001d4c4, model64: 0x1d4be0001d4c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4c40001d4d0, model64: 0x18d8a00018d8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4d00001d4dc, model64: 0x1cf3b0001cf42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x924f00009258, model64: 0x924f00009258},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74d6000074e2, model64: 0x74d6000074e2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ff5, match64: 0x00000000, model64: 0x1d4dc0001d4e1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1d4e10001d4ed, model64: 0x1d4ed0001d4fa},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1d4fa0001d502, model64: 0x1d5020001d50b},
		modelTuple{type64: 0x38400000391, matchRI: 0x1ff7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffd, match64: 0x00000000, model64: 0x1d5120001d522},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffe, match64: 0x00000000, model64: 0x1d5220001d52e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1fff, match64: 0x00000000, model64: 0x1d52e0001d53d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1d53d0001d54e, model64: 0x1d54e0001d55f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2000, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2001, match64: 0x00000000, model64: 0x1d55f0001d56c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2002, match64: 0x00000000, model64: 0x1d56c0001d577},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d58b0001d597},
		modelTuple{type64: 0x2700000027, matchRI: 0x2005, match64: 0x00000000, model64: 0x1d59e0001d5a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5a90001d5b1, model64: 0x1d5a90001d5b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5b10001d5b8, model64: 0x1d5b10001d5b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5b80001d5bf, model64: 0x1d5b80001d5bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2006, match64: 0x00000000, model64: 0x1d5bf0001d5cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5cd0001d5d3, model64: 0x1d5cd0001d5d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5d30001d5d8, model64: 0x1d5d30001d5d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5d80001d5dc, model64: 0x1d5d80001d5dc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2009, match64: 0x00000000, model64: 0xf8210000f82c},
		modelTuple{type64: 0x2700000027, matchRI: 0x200a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x200b, match64: 0x00000000, model64: 0x1d5ea0001d5f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x200c, match64: 0x00000000, model64: 0x1d5f50001d603},
		modelTuple{type64: 0x2700000027, matchRI: 0x200e, match64: 0x00000000, model64: 0x1d60a0001d60f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2010, match64: 0x00000000, model64: 0x1d6190001d622},
		modelTuple{type64: 0x2700000027, matchRI: 0x2011, match64: 0x00000000, model64: 0x1d6220001d629},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d62f0001d638},
		modelTuple{type64: 0x2700000027, matchRI: 0x2014, match64: 0x00000000, model64: 0x1d6380001d645},
		modelTuple{type64: 0x2700000027, matchRI: 0x2015, match64: 0x00000000, model64: 0x1d6450001d652},
		modelTuple{type64: 0x2700000027, matchRI: 0x2016, match64: 0x00000000, model64: 0x1d6520001d665},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d6650001d675, model64: 0x1d6750001d686},
		modelTuple{type64: 0x2700000027, matchRI: 0x2017, match64: 0x00000000, model64: 0x1d6860001d692},
		modelTuple{type64: 0x2700000027, matchRI: 0x2018, match64: 0x00000000, model64: 0x1d6920001d6a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2019, match64: 0x00000000, model64: 0x1d6a10001d6ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x201a, match64: 0x00000000, model64: 0x1d6ac0001d6b7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x201b, match64: 0x00000000, model64: 0x1d6b70001d6c6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x201c, match64: 0x00000000, model64: 0x1d6c60001d6d0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x201d, match64: 0x00000000, model64: 0x1d6d00001d6d9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x201e, match64: 0x00000000, model64: 0x5a8c00005a92},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1d6d90001d6e2, model64: 0x1d6e20001d6e8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1d6e80001d6f3, model64: 0x1d6f30001d6fb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x201f, match64: 0x00000000, model64: 0x1d6fb0001d709},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2020, match64: 0x00000000, model64: 0x1d7090001d716},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2021, match64: 0x00000000, model64: 0x1d7160001d723},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2022, match64: 0x00000000, model64: 0x1d7230001d72f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2023, match64: 0x00000000, model64: 0x1d72f0001d739},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2024, match64: 0x00000000, model64: 0x1d7390001d746},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7460001d754, model64: 0x1d7540001d762},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7620001d770, model64: 0x1d7700001d77f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d77f0001d78b, model64: 0x1d78b0001d798},
		modelTuple{type64: 0x2700000027, matchRI: 0x2025, match64: 0x00000000, model64: 0x1d7980001d7a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7a60001d7b2, model64: 0x1d7b20001d7bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7bf0001d7c6, model64: 0x1d7c60001d7cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2026, match64: 0x00000000, model64: 0x10c9400010c9c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2027, match64: 0x00000000, model64: 0x10c9400010c9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2028, match64: 0x00000000, model64: 0x1d7cf0001d7da},
		modelTuple{type64: 0x2700000027, matchRI: 0x2029, match64: 0x00000000, model64: 0x1d7da0001d7e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x202a, match64: 0x00000000, model64: 0xebb20000ebba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7e20001d7ed, model64: 0x1d7ed0001d7f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7f40001d7fe, model64: 0x1d7fe0001d808},
		modelTuple{type64: 0x2700000027, matchRI: 0x202b, match64: 0x00000000, model64: 0x1737000017376},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8080001d80f, model64: 0x1d80f0001d812},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8120001d81a, model64: 0x1d81a0001d823},
		modelTuple{type64: 0x2700000027, matchRI: 0x202c, match64: 0x00000000, model64: 0x1d8230001d82d},
		modelTuple{type64: 0x2700000027, matchRI: 0x202d, match64: 0x00000000, model64: 0x1d82d0001d835},
		modelTuple{type64: 0x2700000027, matchRI: 0x202e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1d8350001d83a, model64: 0x1d83a0001d840},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1d8400001d845, model64: 0x1d8450001d84a},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1d84a0001d84f, model64: 0x1d84f0001d854},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1d8540001d859, model64: 0x1d84f0001d854},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1d8590001d85e, model64: 0x1d85e0001d866},
		modelTuple{type64: 0x24300000245, matchRI: 0x202f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2031, match64: 0x00000000, model64: 0x1d86f0001d877},
		modelTuple{type64: 0x2700000027, matchRI: 0x2032, match64: 0x00000000, model64: 0xa8750000a878},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8860001d890, model64: 0x1d8860001d890},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8900001d89a, model64: 0x1d89a0001d8a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2035, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2036, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2038, match64: 0x00000000, model64: 0x1d8ab0001d8b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2039, match64: 0x00000000, model64: 0x1d8b10001d8b9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8bf0001d8cd, model64: 0x1d8cd0001d8d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x203c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x203e, match64: 0x00000000, model64: 0x1d8e10001d8e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2040, match64: 0x00000000, model64: 0x1d8f00001d8f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2041, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2044, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1d90b0001d913, model64: 0x1d9130001d923},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9230001d929, model64: 0x1d9290001d935},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9350001d93b, model64: 0x1d93b0001d945},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9450001d94b, model64: 0x1d94b0001d956},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9560001d95c, model64: 0x1d95c0001d967},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9670001d96d, model64: 0x1d96d0001d979},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9790001d97f, model64: 0x1d97f0001d98e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d98e0001d994, model64: 0x1d9940001d99f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d99f0001d9a5, model64: 0x1d9a50001d9af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9af0001d9b5, model64: 0x1d9b50001d9bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9bf0001d9cd, model64: 0x1d9cd0001d9db},
		modelTuple{type64: 0x2700000027, matchRI: 0x2046, match64: 0x00000000, model64: 0x1d9db0001d9e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2047, match64: 0x00000000, model64: 0x1d9db0001d9e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2048, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2049, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x204b, match64: 0x00000000, model64: 0x1d9ef0001d9f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9f10001d9f6, model64: 0x1d9f60001d9f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9f80001d9fd, model64: 0x1d9fd0001d9ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9ff0001da04, model64: 0x1da040001da07},
		modelTuple{type64: 0x2700000027, matchRI: 0x204c, match64: 0x00000000, model64: 0xa2730000a275},
		modelTuple{type64: 0x2700000027, matchRI: 0x204d, match64: 0x00000000, model64: 0x4170000041a},
		modelTuple{type64: 0x2700000027, matchRI: 0x204e, match64: 0x00000000, model64: 0xe2910000e296},
		modelTuple{type64: 0x2700000027, matchRI: 0x204f, match64: 0x00000000, model64: 0x1794000017942},
		modelTuple{type64: 0x2700000027, matchRI: 0x2050, match64: 0x00000000, model64: 0x1da070001da11},
		modelTuple{type64: 0x2700000027, matchRI: 0x2051, match64: 0x00000000, model64: 0x1da110001da16},
		modelTuple{type64: 0x2700000027, matchRI: 0x2052, match64: 0x00000000, model64: 0x1da160001da1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2053, match64: 0x00000000, model64: 0x1da1b0001da24},
		modelTuple{type64: 0x2700000027, matchRI: 0x2054, match64: 0x00000000, model64: 0x1da240001da31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1da310001da41, model64: 0x1da410001da47},
		modelTuple{type64: 0x2700000027, matchRI: 0x2056, match64: 0x00000000, model64: 0x1da4d0001da54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1da540001da5c, model64: 0x1da540001da5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1da690001da73, model64: 0x1da690001da73},
		modelTuple{type64: 0x2700000027, matchRI: 0x2058, match64: 0x00000000, model64: 0x1da730001da82},
		modelTuple{type64: 0x2700000027, matchRI: 0x2059, match64: 0x00000000, model64: 0x1da820001da8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x205a, match64: 0x00000000, model64: 0x1da8b0001da96},
		modelTuple{type64: 0x2700000027, matchRI: 0x205b, match64: 0x00000000, model64: 0x1da960001daa4},
		modelTuple{type64: 0x2700000027, matchRI: 0x205c, match64: 0x00000000, model64: 0x1daa40001dab3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x205d, match64: 0x00000000, model64: 0x1da820001da8b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dac60001dad3, model64: 0x1dad30001dae9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1daed0001daf6, model64: 0x13bc400013bc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2060, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2062, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2063, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2064, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1db130001db18, model64: 0x1db180001db28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1db280001db2d, model64: 0x1db2d0001db3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1db3e0001db43, model64: 0x1db430001db51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1db510001db5b, model64: 0x1db5b0001db61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1db610001db6a, model64: 0x1db6a0001db73},
		modelTuple{type64: 0x2700000027, matchRI: 0x2068, match64: 0x00000000, model64: 0x1db730001db7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2069, match64: 0x00000000, model64: 0x1db7e0001db88},
		modelTuple{type64: 0x2700000027, matchRI: 0x206a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x206c, match64: 0x00000000, model64: 0x1db8d0001db93},
		modelTuple{type64: 0x2700000027, matchRI: 0x206d, match64: 0x00000000, model64: 0x1db930001db96},
		modelTuple{type64: 0x2700000027, matchRI: 0x206e, match64: 0x00000000, model64: 0x1db960001db9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x206f, match64: 0x00000000, model64: 0x1db9e0001dba2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2070, match64: 0x00000000, model64: 0x1dba20001dba5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2071, match64: 0x00000000, model64: 0x1dba50001dba8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2072, match64: 0x00000000, model64: 0x1dba80001dbab},
		modelTuple{type64: 0x2700000027, matchRI: 0x2073, match64: 0x00000000, model64: 0x1dbab0001dbae},
		modelTuple{type64: 0x2700000027, matchRI: 0x2074, match64: 0x00000000, model64: 0x1dbae0001dbb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2076, match64: 0x00000000, model64: 0x1dbb20001dbc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2077, match64: 0x00000000, model64: 0x1dbc10001dbd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2078, match64: 0x00000000, model64: 0x1dbd40001dbdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2079, match64: 0x00000000, model64: 0x1dbdd0001dbe7},
		modelTuple{type64: 0x2700000027, matchRI: 0x207a, match64: 0x00000000, model64: 0x1dbe70001dbf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x207b, match64: 0x00000000, model64: 0x1dbf30001dbff},
		modelTuple{type64: 0x2700000027, matchRI: 0x207c, match64: 0x00000000, model64: 0x1dbff0001dc09},
		modelTuple{type64: 0x2700000027, matchRI: 0x207d, match64: 0x00000000, model64: 0x1dc090001dc14},
		modelTuple{type64: 0x2700000027, matchRI: 0x207e, match64: 0x00000000, model64: 0x1dc140001dc1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x207f, match64: 0x00000000, model64: 0x1dc1e0001dc29},
		modelTuple{type64: 0x2700000027, matchRI: 0x2080, match64: 0x00000000, model64: 0x1dc290001dc36},
		modelTuple{type64: 0x2700000027, matchRI: 0x2081, match64: 0x00000000, model64: 0x1dc360001dc40},
		modelTuple{type64: 0x2700000027, matchRI: 0x2082, match64: 0x00000000, model64: 0x1dc400001dc4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2083, match64: 0x00000000, model64: 0x1dc4a0001dc59},
		modelTuple{type64: 0x2700000027, matchRI: 0x2084, match64: 0x00000000, model64: 0x1dc590001dc63},
		modelTuple{type64: 0x2700000027, matchRI: 0x2085, match64: 0x00000000, model64: 0x1dc630001dc68},
		modelTuple{type64: 0x2700000027, matchRI: 0x2086, match64: 0x00000000, model64: 0x1dc680001dc73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dc730001dc80, model64: 0x1dc730001dc80},
		modelTuple{type64: 0x2700000027, matchRI: 0x2087, match64: 0x00000000, model64: 0x1dc800001dc91},
		modelTuple{type64: 0x38400000391, matchRI: 0x2088, match64: 0x00000000, model64: 0x1dc910001dc94},
		modelTuple{type64: 0x38400000391, matchRI: 0x2089, match64: 0x00000000, model64: 0x1dc940001dc9b},
		modelTuple{type64: 0x38400000391, matchRI: 0x208a, match64: 0x00000000, model64: 0x1dc9b0001dca0},
		modelTuple{type64: 0x38400000391, matchRI: 0x208b, match64: 0x00000000, model64: 0x1dca00001dca5},
		modelTuple{type64: 0x38400000391, matchRI: 0x208c, match64: 0x00000000, model64: 0x1dca50001dcaa},
		modelTuple{type64: 0x38400000391, matchRI: 0x208d, match64: 0x00000000, model64: 0x1dcaa0001dcad},
		modelTuple{type64: 0x38400000391, matchRI: 0x208e, match64: 0x00000000, model64: 0x1dcad0001dcb2},
		modelTuple{type64: 0x38400000391, matchRI: 0x208f, match64: 0x00000000, model64: 0x1dcb20001dcb6},
		modelTuple{type64: 0x38400000391, matchRI: 0x2090, match64: 0x00000000, model64: 0x1dcb60001dcba},
		modelTuple{type64: 0x38400000391, matchRI: 0x2091, match64: 0x00000000, model64: 0x1dcba0001dcbf},
		modelTuple{type64: 0x38400000391, matchRI: 0x2092, match64: 0x00000000, model64: 0x1dcbf0001dcc4},
		modelTuple{type64: 0x38400000391, matchRI: 0x2093, match64: 0x00000000, model64: 0x1dcc40001dccd},
		modelTuple{type64: 0x38400000391, matchRI: 0x2094, match64: 0x00000000, model64: 0x1dccd0001dcd1},
		modelTuple{type64: 0x38400000391, matchRI: 0x2095, match64: 0x00000000, model64: 0x1dcd10001dcd6},
		modelTuple{type64: 0x38400000391, matchRI: 0x2096, match64: 0x00000000, model64: 0x1dcd60001dcdb},
		modelTuple{type64: 0x38400000391, matchRI: 0x2097, match64: 0x00000000, model64: 0x1dcdb0001dcdf},
		modelTuple{type64: 0x38400000391, matchRI: 0x2098, match64: 0x00000000, model64: 0x1dcdf0001dcea},
		modelTuple{type64: 0x2700000027, matchRI: 0x2099, match64: 0x00000000, model64: 0x1dcea0001dcf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x209a, match64: 0x00000000, model64: 0x1dcf30001dcff},
		modelTuple{type64: 0x2700000027, matchRI: 0x209b, match64: 0x00000000, model64: 0x1dcff0001dd09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dd090001dd0f, model64: 0x1dd0f0001dd18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dd180001dd1e, model64: 0x1dd1e0001dd27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dd270001dd2c, model64: 0x1dd2c0001dd3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dd3a0001dd40, model64: 0x1dd400001dd49},
		modelTuple{type64: 0x2700000027, matchRI: 0x209c, match64: 0x00000000, model64: 0x1dd490001dd52},
		modelTuple{type64: 0x2700000027, matchRI: 0x209d, match64: 0x00000000, model64: 0x1dc360001dc40},
		modelTuple{type64: 0x2700000027, matchRI: 0x209e, match64: 0x00000000, model64: 0x1dd520001dd5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x209f, match64: 0x00000000, model64: 0x1dd5f0001dd6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a0, match64: 0x00000000, model64: 0x1dd6d0001dd79},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a1, match64: 0x00000000, model64: 0x1dd6d0001dd79},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a2, match64: 0x00000000, model64: 0x1dd790001dd86},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a3, match64: 0x00000000, model64: 0x1dd860001dd91},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a4, match64: 0x00000000, model64: 0x1dd910001dd9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a5, match64: 0x00000000, model64: 0x1dd9d0001ddaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a6, match64: 0x00000000, model64: 0x1ddaf0001ddbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a7, match64: 0x00000000, model64: 0x1ddbb0001ddc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a8, match64: 0x00000000, model64: 0x1ddc90001ddd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a9, match64: 0x00000000, model64: 0x1ddd70001dddf},
		modelTuple{type64: 0x2700000027, matchRI: 0x20aa, match64: 0x00000000, model64: 0x1dddf0001ddfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ab, match64: 0x00000000, model64: 0x1ddfc0001de07},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ac, match64: 0x00000000, model64: 0x1de070001de13},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ad, match64: 0x00000000, model64: 0x1de130001de1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ae, match64: 0x00000000, model64: 0x1de1e0001de28},
		modelTuple{type64: 0x2700000027, matchRI: 0x20af, match64: 0x00000000, model64: 0x1de280001de33},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b0, match64: 0x00000000, model64: 0x1de330001de3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b1, match64: 0x00000000, model64: 0x1de3b0001de43},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b2, match64: 0x00000000, model64: 0x1de430001de50},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b3, match64: 0x00000000, model64: 0x1de500001de58},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b4, match64: 0x00000000, model64: 0x1de580001de63},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b5, match64: 0x00000000, model64: 0x1de630001de6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b6, match64: 0x00000000, model64: 0x1de6d0001de79},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b7, match64: 0x00000000, model64: 0x1de790001de84},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b8, match64: 0x00000000, model64: 0x1de840001de8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b9, match64: 0x00000000, model64: 0x1de8c0001de99},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ba, match64: 0x00000000, model64: 0x1de990001dea2},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bb, match64: 0x00000000, model64: 0x1dea20001deaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bc, match64: 0x00000000, model64: 0x1deaa0001deb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bd, match64: 0x00000000, model64: 0x1deb50001dec3},
		modelTuple{type64: 0x2700000027, matchRI: 0x20be, match64: 0x00000000, model64: 0x1dec30001ded0},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bf, match64: 0x00000000, model64: 0x1ded00001deda},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c0, match64: 0x00000000, model64: 0x1deda0001dee3},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c1, match64: 0x00000000, model64: 0x1dee30001deef},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c2, match64: 0x00000000, model64: 0x1deef0001def7},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c3, match64: 0x00000000, model64: 0x1def70001df07},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c4, match64: 0x00000000, model64: 0x1df070001df12},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c5, match64: 0x00000000, model64: 0x1df120001df1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c6, match64: 0x00000000, model64: 0x1df1d0001df25},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c7, match64: 0x00000000, model64: 0x1df250001df2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c8, match64: 0x00000000, model64: 0x1df2e0001df37},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c9, match64: 0x00000000, model64: 0x1df370001df3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ca, match64: 0x00000000, model64: 0x1df3f0001df48},
		modelTuple{type64: 0x2700000027, matchRI: 0x20cb, match64: 0x00000000, model64: 0x1df480001df50},
		modelTuple{type64: 0x2700000027, matchRI: 0x20cc, match64: 0x00000000, model64: 0x1df500001df5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20cd, match64: 0x00000000, model64: 0x1df5d0001df66},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ce, match64: 0x00000000, model64: 0x1df660001df70},
		modelTuple{type64: 0x2700000027, matchRI: 0x20cf, match64: 0x00000000, model64: 0x1df700001df78},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d0, match64: 0x00000000, model64: 0x1df780001df85},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d1, match64: 0x00000000, model64: 0x1df850001df8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d2, match64: 0x00000000, model64: 0x1df8d0001df95},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d3, match64: 0x00000000, model64: 0x1df950001df9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d4, match64: 0x00000000, model64: 0x1df9e0001dfa7},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d5, match64: 0x00000000, model64: 0x1dfa70001dfb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d6, match64: 0x00000000, model64: 0x1dfb00001dfba},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d7, match64: 0x00000000, model64: 0x1dfba0001dfc2},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x20d8, match64: 0x00000000, model64: 0x1dfc20001dfd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d9, match64: 0x00000000, model64: 0x1dfba0001dfc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x20da, match64: 0x00000000, model64: 0x1dfd00001dfd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x20db, match64: 0x00000000, model64: 0x1dfd90001dfe7},
		modelTuple{type64: 0x2700000027, matchRI: 0x20dc, match64: 0x00000000, model64: 0x1dfe70001dff0},
		modelTuple{type64: 0x2700000027, matchRI: 0x20dd, match64: 0x00000000, model64: 0x1dff00001dffe},
		modelTuple{type64: 0x2700000027, matchRI: 0x20de, match64: 0x00000000, model64: 0x1dffe0001e00d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20df, match64: 0x00000000, model64: 0x1e00d0001e016},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e0, match64: 0x00000000, model64: 0x1e0160001e024},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0240001e029, model64: 0x1e0290001e032},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e1, match64: 0x00000000, model64: 0x1e0320001e040},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e2, match64: 0x00000000, model64: 0x1e0400001e049},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e3, match64: 0x00000000, model64: 0x1e0490001e057},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e4, match64: 0x00000000, model64: 0x1e0570001e060},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e5, match64: 0x00000000, model64: 0x1e0600001e06e},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e6, match64: 0x00000000, model64: 0x1e06e0001e07c},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e7, match64: 0x00000000, model64: 0x1e07c0001e08f},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e8, match64: 0x00000000, model64: 0x1e08f0001e098},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e9, match64: 0x00000000, model64: 0x1e0980001e0a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ea, match64: 0x00000000, model64: 0x1e0a60001e0b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x20eb, match64: 0x00000000, model64: 0x1e0b40001e0bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ec, match64: 0x00000000, model64: 0x1e0bd0001e0c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ed, match64: 0x00000000, model64: 0x1e0c60001e0d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ee, match64: 0x00000000, model64: 0x1e0d40001e0e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ef, match64: 0x00000000, model64: 0x1e0e30001e0f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f0, match64: 0x00000000, model64: 0x1e0f70001e100},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x20f1, match64: 0x00000000, model64: 0x1e1000001e10f},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x20f2, match64: 0x00000000, model64: 0x1e10f0001e123},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f3, match64: 0x00000000, model64: 0x1e1230001e134},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f4, match64: 0x00000000, model64: 0x1e1340001e13d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f5, match64: 0x00000000, model64: 0x1e13d0001e14e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1e14e0001e163, model64: 0x1e1630001e178},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x20f6, match64: 0x00000000, model64: 0x1e1780001e188},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f7, match64: 0x00000000, model64: 0x1e1880001e191},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e1910001e196, model64: 0x1e1960001e1a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f8, match64: 0x00000000, model64: 0x1e1a00001e1a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f9, match64: 0x00000000, model64: 0x1e1a90001e1b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fa, match64: 0x00000000, model64: 0x1e1b70001e1c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fb, match64: 0x00000000, model64: 0x1e1c10001e1cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fc, match64: 0x00000000, model64: 0x1e1cb0001e1d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e1d40001e1d9, model64: 0x1e1d90001e1e3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x20fd, match64: 0x00000000, model64: 0x1e1cb0001e1d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fe, match64: 0x00000000, model64: 0x1e1e30001e1f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ff, match64: 0x00000000, model64: 0x1e1f40001e1fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2100, match64: 0x00000000, model64: 0x1e1fd0001e20b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2101, match64: 0x00000000, model64: 0x1e20b0001e21c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2102, match64: 0x00000000, model64: 0x1e21c0001e232},
		modelTuple{type64: 0x2700000027, matchRI: 0x2103, match64: 0x00000000, model64: 0x1e2320001e23b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2104, match64: 0x00000000, model64: 0x1e23b0001e249},
		modelTuple{type64: 0x2700000027, matchRI: 0x2105, match64: 0x00000000, model64: 0x1e2490001e258},
		modelTuple{type64: 0x2700000027, matchRI: 0x2106, match64: 0x00000000, model64: 0x1e2580001e26c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2107, match64: 0x00000000, model64: 0x1e26c0001e275},
		modelTuple{type64: 0x2700000027, matchRI: 0x2108, match64: 0x00000000, model64: 0x1e2750001e27f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2109, match64: 0x00000000, model64: 0x1e27f0001e291},
		modelTuple{type64: 0x2700000027, matchRI: 0x210a, match64: 0x00000000, model64: 0x1e2910001e29a},
		modelTuple{type64: 0x2700000027, matchRI: 0x210b, match64: 0x00000000, model64: 0x1e29a0001e2a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x210c, match64: 0x00000000, model64: 0x1e2a40001e2b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x210d, match64: 0x00000000, model64: 0x1e2b30001e2c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x210e, match64: 0x00000000, model64: 0x1e2c70001e2d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x210f, match64: 0x00000000, model64: 0x1e2d70001e2e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2110, match64: 0x00000000, model64: 0x1e2e10001e2f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2111, match64: 0x00000000, model64: 0x1e2f00001e2ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e2ff0001e304, model64: 0x1e2ff0001e304},
		modelTuple{type64: 0x2700000027, matchRI: 0x2112, match64: 0x00000000, model64: 0x1e3040001e314},
		modelTuple{type64: 0x2700000027, matchRI: 0x2113, match64: 0x00000000, model64: 0x1e3140001e31e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2114, match64: 0x00000000, model64: 0x1e31e0001e32f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2115, match64: 0x00000000, model64: 0x1e32f0001e339},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e3390001e33e, model64: 0x1e33e0001e34d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e34d0001e353, model64: 0x1e3530001e365},
		modelTuple{type64: 0x2700000027, matchRI: 0x2116, match64: 0x00000000, model64: 0x1e3650001e37c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2117, match64: 0x00000000, model64: 0x1e37c0001e386},
		modelTuple{type64: 0x2700000027, matchRI: 0x2118, match64: 0x00000000, model64: 0x1e3860001e38f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2119, match64: 0x00000000, model64: 0x1e38f0001e39d},
		modelTuple{type64: 0x2700000027, matchRI: 0x211a, match64: 0x00000000, model64: 0x1e39d0001e3a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x211b, match64: 0x00000000, model64: 0x1e3a50001e3ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x211c, match64: 0x00000000, model64: 0x1e3ae0001e3b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x211d, match64: 0x00000000, model64: 0x1e3b70001e3bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x211e, match64: 0x00000000, model64: 0x1e3bf0001e3cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x211f, match64: 0x00000000, model64: 0x1e3cc0001e3dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2120, match64: 0x00000000, model64: 0x1e3dc0001e3f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2121, match64: 0x00000000, model64: 0x1e3f00001e409},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2122, match64: 0x00000000, model64: 0x1e4090001e418},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2123, match64: 0x00000000, model64: 0x1e4180001e428},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2124, match64: 0x00000000, model64: 0x1e4280001e438},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2125, match64: 0x00000000, model64: 0x1e4380001e450},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2126, match64: 0x00000000, model64: 0x1e4500001e45f},
		modelTuple{type64: 0x285a00002862, matchRI: -0x0001, match64: 0x1e45f0001e46b, model64: 0x1e45f0001e46b},
		modelTuple{type64: 0x24300000245, matchRI: 0x2127, match64: 0x00000000, model64: 0x1e46b0001e474},
		modelTuple{type64: 0x24300000245, matchRI: 0x2128, match64: 0x00000000, model64: 0x1e4740001e484},
		modelTuple{type64: 0x24300000245, matchRI: 0x2129, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x212a, match64: 0x00000000, model64: 0x1e4840001e48e},
		modelTuple{type64: 0xae980000aead, matchRI: 0x212b, match64: 0x00000000, model64: 0x1e48e0001e498},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1e4980001e49d, model64: 0x1e4980001e49d},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1e49d0001e4a5, model64: 0x1e4a50001e4ad},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1e4ad0001e4b5, model64: 0x1e4b50001e4bd},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1e4bd0001e4c6, model64: 0x1e4c60001e4cf},
		modelTuple{type64: 0x24300000245, matchRI: 0x212c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x212d, match64: 0x00000000, model64: 0x1e4cf0001e4e2},
		modelTuple{type64: 0x24300000245, matchRI: 0x212e, match64: 0x00000000, model64: 0x1e4e20001e4f0},
		modelTuple{type64: 0x24300000245, matchRI: 0x212f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x2130, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2131, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2132, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2133, match64: 0x00000000, model64: 0xeb120000eb15},
		modelTuple{type64: 0x2700000027, matchRI: 0x2134, match64: 0x00000000, model64: 0x1e4f00001e4fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2135, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x2136, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2137, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x2138, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2139, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x213a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x213b, match64: 0x00000000, model64: 0x1e4fa0001e503},
		modelTuple{type64: 0x2700000027, matchRI: 0x213c, match64: 0x00000000, model64: 0x1e4fa0001e503},
		modelTuple{type64: 0x2700000027, matchRI: 0x213d, match64: 0x00000000, model64: 0x1e4fa0001e503},
		modelTuple{type64: 0x2700000027, matchRI: 0x213e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x213f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2140, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2144, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5180001e51d, model64: 0x1e5180001e51d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e51d0001e525, model64: 0x1e5250001e52d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4960001d49c, model64: 0x1d4960001d49c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5320001e53d, model64: 0x1e5320001e53d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e53d0001e548, model64: 0x1e53d0001e548},
		modelTuple{type64: 0x2700000027, matchRI: 0x2147, match64: 0x00000000, model64: 0x1e5480001e552},
		modelTuple{type64: 0x2700000027, matchRI: 0x2148, match64: 0x00000000, model64: 0x1e5520001e55d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2149, match64: 0x00000000, model64: 0x4fa900004faf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1688300016888, model64: 0x1688300016888},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e55d0001e565, model64: 0x1e55d0001e565},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5650001e570, model64: 0x1e5650001e570},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5700001e578, model64: 0x1e5780001e57a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x214c, match64: 0x00000000, model64: 0x1e58d0001e599},
		modelTuple{type64: 0x2700000027, matchRI: 0x214d, match64: 0x00000000, model64: 0x1e5990001e5a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x214e, match64: 0x00000000, model64: 0x1e5a50001e5b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x214f, match64: 0x00000000, model64: 0x1e5b00001e5bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2151, match64: 0x00000000, model64: 0x1e5bd0001e5c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2152, match64: 0x00000000, model64: 0x1e5c50001e5cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5cf0001e5db, model64: 0x1e5db0001e5e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5e70001e5f4, model64: 0x1e5f40001e602},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6020001e613, model64: 0x1e6130001e625},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6250001e636, model64: 0x1e6360001e649},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2153, match64: 0x00000000, model64: 0x1e6490001e64f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2154, match64: 0x00000000, model64: 0x1e64f0001e654},
		modelTuple{type64: 0x2700000027, matchRI: 0x2155, match64: 0x00000000, model64: 0x1e6490001e64f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2156, match64: 0x00000000, model64: 0x1e64f0001e654},
		modelTuple{type64: 0x2700000027, matchRI: 0x2157, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2158, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1e6540001e659},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e65d0001e662, model64: 0x6c7800006c7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x215b, match64: 0x00000000, model64: 0x7d4f00007d52},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e66b0001e674, model64: 0x1e6740001e67d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e67d0001e687, model64: 0x1e6870001e691},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6910001e699, model64: 0x1e6990001e6a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6a10001e6ab, model64: 0x1e6ab0001e6b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6b50001e6bb, model64: 0x1e6bb0001e6c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6c10001e6cb, model64: 0x1e6cb0001e6d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6d50001e6e0, model64: 0x1e6e00001e6eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x215d, match64: 0x00000000, model64: 0x1e6eb0001e6f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6f50001e6ff, model64: 0x1e6ff0001e709},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7090001e719, model64: 0x1e7190001e71f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e71f0001e72d, model64: 0x1e72d0001e733},
		modelTuple{type64: 0x2700000027, matchRI: 0x215f, match64: 0x00000000, model64: 0x1e73d0001e744},
		modelTuple{type64: 0x2700000027, matchRI: 0x2160, match64: 0x00000000, model64: 0x1e7440001e749},
		modelTuple{type64: 0x2700000027, matchRI: 0x2161, match64: 0x00000000, model64: 0x1e7490001e753},
		modelTuple{type64: 0x2700000027, matchRI: 0x2162, match64: 0x00000000, model64: 0x1e7530001e75a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2163, match64: 0x00000000, model64: 0x1e75a0001e75f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2164, match64: 0x00000000, model64: 0x1e75f0001e76c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1e7730001e780},
		modelTuple{type64: 0x2700000027, matchRI: 0x2167, match64: 0x00000000, model64: 0x1e7880001e790},
		modelTuple{type64: 0x2700000027, matchRI: 0x2169, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x216a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x216c, match64: 0x00000000, model64: 0x1e79c0001e7a6},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1e7a60001e7b4, model64: 0x1e7b40001e7bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x216e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2170, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2171, match64: 0x00000000, model64: 0x1e7cb0001e7d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2173, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2174, match64: 0x00000000, model64: 0x1e7d60001e7db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7db0001e7e2, model64: 0x1e7e20001e7e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7e90001e7f6, model64: 0x1e7f60001e803},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8030001e80a, model64: 0x1e80a0001e811},
		modelTuple{type64: 0x2700000027, matchRI: 0x2175, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2176, match64: 0x00000000, model64: 0x1e8110001e819},
		modelTuple{type64: 0x2700000027, matchRI: 0x2177, match64: 0x00000000, model64: 0x1e8190001e829},
		modelTuple{type64: 0x2700000027, matchRI: 0x2178, match64: 0x00000000, model64: 0x1e8290001e838},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8380001e840, model64: 0x1e8400001e848},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8480001e851, model64: 0x1e8510001e85a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e85a0001e863, model64: 0x1e8630001e86c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e86c0001e874, model64: 0x1e8740001e87c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e87c0001e881, model64: 0x1e8810001e888},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8880001e890, model64: 0x1e8880001e890},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8900001e899, model64: 0x1e8990001e8a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8a20001e8aa, model64: 0x1e8aa0001e8b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8b20001e8ba, model64: 0x1e8ba0001e8c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8c20001e8c9, model64: 0x1e8c20001e8c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8c90001e8cf, model64: 0x1e8cf0001e8d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8d50001e8de, model64: 0x1e8de0001e8e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8e70001e8ef, model64: 0x1e8ef0001e8f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8f70001e8fd, model64: 0x1e8fd0001e903},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9030001e909, model64: 0x1e9090001e90f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2179, match64: 0x00000000, model64: 0x1e90f0001e918},
		modelTuple{type64: 0x2700000027, matchRI: 0x217a, match64: 0x00000000, model64: 0x1e9180001e920},
		modelTuple{type64: 0x2700000027, matchRI: 0x217b, match64: 0x00000000, model64: 0x1e9200001e927},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9270001e930, model64: 0x1e9300001e939},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11be100011be5, model64: 0x11be100011be5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9390001e93e, model64: 0x82730000827a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e93e0001e948, model64: 0x1e9480001e952},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9520001e958, model64: 0x1e9580001e95e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e95e0001e968, model64: 0x1e9680001e972},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9720001e97b, model64: 0x1e97b0001e984},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46d2000046d7, model64: 0x1e9840001e989},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9890001e98d, model64: 0x1e98d0001e991},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9910001e997, model64: 0x1e8000001ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9970001e9a4, model64: 0x1e9970001e9a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x217c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x217d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x217e, match64: 0x00000000, model64: 0x1e9a40001e9b0},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1e9b00001e9b5, model64: 0x1e9b50001e9c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2180, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2181, match64: 0x00000000, model64: 0x113730001137b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2183, match64: 0x00000000, model64: 0x1e9ca0001e9d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2184, match64: 0x00000000, model64: 0x164830001648a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2185, match64: 0x00000000, model64: 0x1e9d10001e9d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2186, match64: 0x00000000, model64: 0x633900006340},
		modelTuple{type64: 0x2700000027, matchRI: 0x2187, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2189, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x218a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x218c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x218d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x5da000005e7, matchRI: 0x2190, match64: 0x00000000, model64: 0x1e9f20001e9fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2191, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9fa0001ea03, model64: 0x1ea030001ea0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2193, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2194, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2195, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x2196, match64: 0x00000000, model64: 0x9c3000009c38},
		modelTuple{type64: 0x24300000245, matchRI: 0x2197, match64: 0x00000000, model64: 0x1ea110001ea1f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x219a, match64: 0x00000000, model64: 0x1ea2e0001ea37},
		modelTuple{type64: 0x2700000027, matchRI: 0x219b, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x219c, match64: 0x00000000, model64: 0x1ea370001ea3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x219d, match64: 0x00000000, model64: 0x1ea3f0001ea45},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1ea5a0001ea60},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ea720001ea79, model64: 0x1ea720001ea79},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x21a4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x21a5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1ea8a0001ea91},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a9, match64: 0x00000000, model64: 0x1ea970001eaa1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eaa10001eaa8, model64: 0x1eaa80001eab0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eaba0001eac7, model64: 0x1eaba0001eac7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eac70001ead4, model64: 0x1eac70001ead4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ead40001eae2, model64: 0x1ead40001eae2},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ac, match64: 0x00000000, model64: 0x10c9400010c9c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x21ad, match64: 0x00000000, model64: 0x1eae20001eae9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x21ae, match64: 0x00000000, model64: 0x1eae90001eaf1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1eb000001eb09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb0d0001eb13, model64: 0x1eb0d0001eb13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb1b0001eb20, model64: 0x1eb1b0001eb20},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b3, match64: 0x00000000, model64: 0x1eb200001eb29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb290001eb2d, model64: 0x1eb290001eb2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb2d0001eb32, model64: 0x1eb320001eb37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb370001eb47, model64: 0x1eb470001eb4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b4, match64: 0x00000000, model64: 0x1eb4e0001eb55},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b5, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b6, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b7, match64: 0x00000000, model64: 0x1eb550001eb5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb5d0001eb65, model64: 0x1eb5d0001eb65},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x21ba, match64: 0x00000000, model64: 0x1eb650001eb6e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1eb6e0001eb78, model64: 0x1eb780001eb82},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x21bc, match64: 0x00000000, model64: 0x1eb8f0001eb99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eba10001eba8, model64: 0x1eba80001ebaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x21be, match64: 0x00000000, model64: 0x1ebaf0001ebbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x21bf, match64: 0x00000000, model64: 0x1ebbb0001ebc2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ebc20001ebca, model64: 0x1ebca0001ebd5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ebd50001ebde, model64: 0x1ebde0001ebed},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c0, match64: 0x00000000, model64: 0x1ebed0001ebf5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ebf50001ec01, model64: 0x1ec010001ec0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c1, match64: 0x00000000, model64: 0x1ec0d0001ec18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec180001ec1f, model64: 0x6ba300006bad},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c2, match64: 0x00000000, model64: 0x1ec1f0001ec26},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c3, match64: 0x00000000, model64: 0x1ec260001ec30},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c4, match64: 0x00000000, model64: 0x1ec300001ec3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c5, match64: 0x00000000, model64: 0x1ec3a0001ec48},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c6, match64: 0x00000000, model64: 0x1ec480001ec56},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c7, match64: 0x00000000, model64: 0x1ec560001ec62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec620001ec6f, model64: 0x1ec620001ec6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c8, match64: 0x00000000, model64: 0x1ec6f0001ec7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c9, match64: 0x00000000, model64: 0x1ec7f0001ec8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ca, match64: 0x00000000, model64: 0x1ec8b0001ec96},
		modelTuple{type64: 0x2700000027, matchRI: 0x21cb, match64: 0x00000000, model64: 0x1ec960001eca0},
		modelTuple{type64: 0x2700000027, matchRI: 0x21cc, match64: 0x00000000, model64: 0x1eca00001eca7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x21cd, match64: 0x00000000, model64: 0x1eca70001ecaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ce, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x21cf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1775c00017760},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d1, match64: 0x00000000, model64: 0x5a7100005a77},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d3, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1ecc00001ecd1, model64: 0x1ecd10001ecdf},
		modelTuple{type64: 0x24700000251, matchRI: 0x21d4, match64: 0x00000000, model64: 0x1ecdf0001ece4},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d7, match64: 0x00000000, model64: 0x1ecf10001ecf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d9, match64: 0x00000000, model64: 0x1ecfc0001ed04},
		modelTuple{type64: 0x2700000027, matchRI: 0x21da, match64: 0x00000000, model64: 0x1ed040001ed09},
		modelTuple{type64: 0x2700000027, matchRI: 0x21db, match64: 0x00000000, model64: 0x1ed090001ed0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x21dc, match64: 0x00000000, model64: 0x11bd700011bda},
		modelTuple{type64: 0x2700000027, matchRI: 0x21dd, match64: 0x00000000, model64: 0x1ed0e0001ed17},
		modelTuple{type64: 0x2700000027, matchRI: 0x21de, match64: 0x00000000, model64: 0x1ed170001ed1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x21df, match64: 0x00000000, model64: 0x1ed1a0001ed1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e0, match64: 0x00000000, model64: 0x1ed1d0001ed20},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e1, match64: 0x00000000, model64: 0x1ed200001ed23},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e2, match64: 0x00000000, model64: 0x1ed230001ed26},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e3, match64: 0x00000000, model64: 0x1ed260001ed29},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e4, match64: 0x00000000, model64: 0x1ed290001ed2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e5, match64: 0x00000000, model64: 0x1ed2d0001ed30},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e6, match64: 0x00000000, model64: 0x1ed300001ed33},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e7, match64: 0x00000000, model64: 0x1ed330001ed36},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e8, match64: 0x00000000, model64: 0x1ed360001ed3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e9, match64: 0x00000000, model64: 0x1ed3b0001ed3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ea, match64: 0x00000000, model64: 0x1ed3e0001ed56},
		modelTuple{type64: 0x2700000027, matchRI: 0x21eb, match64: 0x00000000, model64: 0x1ed560001ed5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ec, match64: 0x00000000, model64: 0x1ed5e0001ed61},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ed, match64: 0x00000000, model64: 0x1ed610001ed64},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ee, match64: 0x00000000, model64: 0x1ed640001ed67},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ef, match64: 0x00000000, model64: 0x1ed670001ed6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f0, match64: 0x00000000, model64: 0x1ed6a0001ed6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f1, match64: 0x00000000, model64: 0x171c0000171e},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f2, match64: 0x00000000, model64: 0x1ed6c0001ed6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f3, match64: 0x00000000, model64: 0x176200001765},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f4, match64: 0x00000000, model64: 0x685500006857},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f5, match64: 0x00000000, model64: 0x1ed6f0001ed71},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f6, match64: 0x00000000, model64: 0x66f4000066f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f7, match64: 0x00000000, model64: 0x1ed710001ed73},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f8, match64: 0x00000000, model64: 0x19bf700019bfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f9, match64: 0x00000000, model64: 0x1ed730001ed76},
		modelTuple{type64: 0x2700000027, matchRI: 0x21fa, match64: 0x00000000, model64: 0x1ed760001ed79},
		modelTuple{type64: 0x2700000027, matchRI: 0x21fb, match64: 0x00000000, model64: 0x1ed790001ed7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x21fc, match64: 0x00000000, model64: 0x1ed7d0001ed85},
		modelTuple{type64: 0x2700000027, matchRI: 0x21fd, match64: 0x00000000, model64: 0x12c5200012c54},
		modelTuple{type64: 0x2700000027, matchRI: 0x21fe, match64: 0x00000000, model64: 0x1ed850001ed8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ff, match64: 0x00000000, model64: 0x1ed8a0001ed8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2200, match64: 0x00000000, model64: 0xa7570000a75e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2201, match64: 0x00000000, model64: 0x1ed8e0001ed93},
		modelTuple{type64: 0x2700000027, matchRI: 0x2202, match64: 0x00000000, model64: 0x1ed930001ed9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2203, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2204, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2205, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2206, match64: 0x00000000, model64: 0x1ed9b0001ed9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2207, match64: 0x00000000, model64: 0xdc830000dc85},
		modelTuple{type64: 0x2700000027, matchRI: 0x2208, match64: 0x00000000, model64: 0x1ed9d0001eda0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2209, match64: 0x00000000, model64: 0x1eda00001eda5},
		modelTuple{type64: 0x2700000027, matchRI: 0x220a, match64: 0x00000000, model64: 0x1eda50001edad},
		modelTuple{type64: 0x2700000027, matchRI: 0x220b, match64: 0x00000000, model64: 0x1edad0001edb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x220c, match64: 0x00000000, model64: 0x1edb00001edb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x220d, match64: 0x00000000, model64: 0x1edb50001edba},
		modelTuple{type64: 0x2700000027, matchRI: 0x220e, match64: 0x00000000, model64: 0x1edba0001edbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x220f, match64: 0x00000000, model64: 0x1edbe0001edc3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1edc30001edc8, model64: 0x1edc80001edcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2210, match64: 0x00000000, model64: 0x1edcd0001edd0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1edd00001edd5, model64: 0x1edd50001edd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2211, match64: 0x00000000, model64: 0x1edd70001eddb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2212, match64: 0x00000000, model64: 0x1eddb0001ede2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ede20001ede8, model64: 0x1ede80001edec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2213, match64: 0x00000000, model64: 0x1edec0001edf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2214, match64: 0x00000000, model64: 0x1edf10001edf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2215, match64: 0x00000000, model64: 0x1edf90001edfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x2216, match64: 0x00000000, model64: 0x1edfe0001ee04},
		modelTuple{type64: 0x2700000027, matchRI: 0x2217, match64: 0x00000000, model64: 0x1ee040001ee07},
		modelTuple{type64: 0x2700000027, matchRI: 0x2218, match64: 0x00000000, model64: 0x1ee070001ee0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2219, match64: 0x00000000, model64: 0x1ee0c0001ee11},
		modelTuple{type64: 0x2700000027, matchRI: 0x221a, match64: 0x00000000, model64: 0x1ee110001ee1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x221b, match64: 0x00000000, model64: 0xae700000ae76},
		modelTuple{type64: 0x2700000027, matchRI: 0x221c, match64: 0x00000000, model64: 0x1ee1a0001ee20},
		modelTuple{type64: 0x2700000027, matchRI: 0x221d, match64: 0x00000000, model64: 0x1ee200001ee25},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x221e, match64: 0x00000000, model64: 0x1ee250001ee30},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ee300001ee35, model64: 0x1ee350001ee44},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ee440001ee49, model64: 0x1ee490001ee54},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ee540001ee5a, model64: 0x1ee5a0001ee65},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x221f, match64: 0x00000000, model64: 0x1ee650001ee6d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2220, match64: 0x00000000, model64: 0x1ee6d0001ee76},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ee760001ee7b, model64: 0x1ee7b0001ee81},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ee810001ee86, model64: 0x1ee860001ee8e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ee8e0001ee93, model64: 0x1ee930001ee9f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ee9f0001eea4, model64: 0x1eea40001eeb2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1eeb20001eeb7, model64: 0x1eeb70001eec0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2221, match64: 0x00000000, model64: 0x1eec00001eeca},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2222, match64: 0x00000000, model64: 0x8b4400008b4a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2223, match64: 0x00000000, model64: 0x1eeca0001eed3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2224, match64: 0x00000000, model64: 0x1eed30001eeda},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2225, match64: 0x00000000, model64: 0x1eeda0001eeed},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2226, match64: 0x00000000, model64: 0x1eeed0001eeff},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2227, match64: 0x00000000, model64: 0x1eeff0001ef09},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2228, match64: 0x00000000, model64: 0x1ef090001ef14},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2229, match64: 0x00000000, model64: 0x1ef140001ef20},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x222a, match64: 0x00000000, model64: 0x1ef200001ef2d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x222b, match64: 0x00000000, model64: 0x1ef2d0001ef39},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ef390001ef3e, model64: 0x1ef3e0001ef46},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ef460001ef4b, model64: 0x1ef4b0001ef55},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ef550001ef5a, model64: 0x1ef5a0001ef61},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ef610001ef66, model64: 0x1ef660001ef70},
		modelTuple{type64: 0x24300000245, matchRI: 0x222c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x222d, match64: 0x00000000, model64: 0x1ef700001ef7c},
		modelTuple{type64: 0x24300000245, matchRI: 0x222e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1ef7c0001ef85, model64: 0x1ef850001ef8b},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1ef8b0001efa3, model64: 0x1efa30001efa9},
		modelTuple{type64: 0x24300000245, matchRI: 0x222f, match64: 0x00000000, model64: 0x1efa90001efc0},
		modelTuple{type64: 0x24300000245, matchRI: 0x2230, match64: 0x00000000, model64: 0x1efc00001efd2},
		modelTuple{type64: 0x24300000245, matchRI: 0x2231, match64: 0x00000000, model64: 0x1efd20001efe3},
		modelTuple{type64: 0x24300000245, matchRI: 0x2232, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eff40001effc, model64: 0x1effc0001f002},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f0020001f00a, model64: 0xb94c0000b94f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f00a0001f012, model64: 0x104770001047a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f01b0001f022, model64: 0x1f0220001f02a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2236, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2237, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x223a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x223b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5a7100005a77},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f04c0001f05b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2240, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2244, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2245, match64: 0x00000000, model64: 0x1f0780001f07c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1a7900001a7a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f09b0001f0a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2248, match64: 0x00000000, model64: 0x1f0a70001f0ab},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f0ae0001f0bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x224b, match64: 0x00000000, model64: 0x1f0bf0001f0ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x224c, match64: 0x00000000, model64: 0x1f0ca0001f0d4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x224d, match64: 0x00000000, model64: 0x1f0ca0001f0d4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x224f, match64: 0x00000000, model64: 0x1f0d70001f0e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2250, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f0e10001f0e6, model64: 0x1f0e60001f0eb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f0fa0001f106},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2257, match64: 0x00000000, model64: 0x1f11c0001f121},
		modelTuple{type64: 0x2700000027, matchRI: 0x2258, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2259, match64: 0x00000000, model64: 0x1f1210001f129},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f1290001f130, model64: 0x1f1290001f130},
		modelTuple{type64: 0x2700000027, matchRI: 0x225a, match64: 0x00000000, model64: 0x1f1300001f138},
		modelTuple{type64: 0x2700000027, matchRI: 0x225c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f1480001f150},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f1570001f15c, model64: 0x1f1570001f15c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f15c0001f167, model64: 0x1f1670001f16b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f16b0001f177, model64: 0x1f1770001f17b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f17b0001f185, model64: 0x1f1850001f188},
		modelTuple{type64: 0x2700000027, matchRI: 0x225f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2260, match64: 0x00000000, model64: 0x1f1880001f18b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f18b0001f190, model64: 0x1f1900001f195},
		modelTuple{type64: 0x2700000027, matchRI: 0x2261, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2262, match64: 0x00000000, model64: 0x1f1950001f19c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2263, match64: 0x00000000, model64: 0x1f1950001f19c},
		modelTuple{type64: 0x24700000251, matchRI: 0x2264, match64: 0x00000000, model64: 0x1f19c0001f1a1},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1f1a10001f1a7, model64: 0x1f1a70001f1ae},
		modelTuple{type64: 0x24700000251, matchRI: 0x2265, match64: 0x00000000, model64: 0x1f1ae0001f1b8},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x1f1b80001f1cd, model64: 0x1f1cd0001f1d9},
		modelTuple{type64: 0x24700000251, matchRI: 0x2266, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2268, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f1eb0001f1f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x226b, match64: 0x00000000, model64: 0x1f2000001f20b},
		modelTuple{type64: 0x2700000027, matchRI: 0x226c, match64: 0x00000000, model64: 0x1f20b0001f21a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f2230001f22c},
		modelTuple{type64: 0x2700000027, matchRI: 0x226f, match64: 0x00000000, model64: 0x1f23b0001f243},
		modelTuple{type64: 0x2700000027, matchRI: 0x2270, match64: 0x00000000, model64: 0x1f2430001f246},
		modelTuple{type64: 0x2700000027, matchRI: 0x2271, match64: 0x00000000, model64: 0x1f2460001f249},
		modelTuple{type64: 0x2700000027, matchRI: 0x2272, match64: 0x00000000, model64: 0x19d3000019d33},
		modelTuple{type64: 0x2700000027, matchRI: 0x2273, match64: 0x00000000, model64: 0x1f2490001f24d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2274, match64: 0x00000000, model64: 0x1f24d0001f252},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2520001f257, model64: 0x1f2520001f257},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2570001f25b, model64: 0x1f2570001f25b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2275, match64: 0x00000000, model64: 0x1f25b0001f265},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2650001f26f, model64: 0x1f26f0001f27e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2276, match64: 0x00000000, model64: 0x27b7000027ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f27e0001f282, model64: 0x1f27e0001f282},
		modelTuple{type64: 0x2700000027, matchRI: 0x2277, match64: 0x00000000, model64: 0x1f2820001f285},
		modelTuple{type64: 0x2700000027, matchRI: 0x2278, match64: 0x00000000, model64: 0x10c4c00010c53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0f90000a100, model64: 0xa0f90000a100},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2850001f28b, model64: 0x1f28b0001f291},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2910001f298, model64: 0x1f2910001f298},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2980001f29e, model64: 0x1f29e0001f2a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2a40001f2aa, model64: 0x1f2aa0001f2ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2ad0001f2b3, model64: 0x1f2b30001f2ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x2279, match64: 0x00000000, model64: 0x104770001047a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2ba0001f2bf, model64: 0x1f2bf0001f2c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x227a, match64: 0x00000000, model64: 0x1f2c50001f2cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x227b, match64: 0x00000000, model64: 0x1f2cd0001f2d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x227c, match64: 0x00000000, model64: 0x1f2c50001f2cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x227d, match64: 0x00000000, model64: 0x1f2d10001f2d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2d80001f2df, model64: 0x1f2d80001f2df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2df0001f2e5, model64: 0x1f2e50001f2e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x227e, match64: 0x00000000, model64: 0x1f2e80001f2f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x227f, match64: 0x00000000, model64: 0x1f2f00001f2f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2280, match64: 0x00000000, model64: 0x1f2f50001f2fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2fa0001f302, model64: 0x1f3020001f309},
		modelTuple{type64: 0x2700000027, matchRI: 0x2281, match64: 0x00000000, model64: 0x1f3090001f30d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2282, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f30d0001f311, model64: 0x1f30d0001f311},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3110001f317, model64: 0x1f3170001f31e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2283, match64: 0x00000000, model64: 0x1f31e0001f32e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2284, match64: 0x00000000, model64: 0x1f32e0001f337},
		modelTuple{type64: 0x2700000027, matchRI: 0x2285, match64: 0x00000000, model64: 0x1f3370001f342},
		modelTuple{type64: 0x2700000027, matchRI: 0x2286, match64: 0x00000000, model64: 0x1f3420001f34c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2287, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3580001f365, model64: 0x1f3650001f373},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3730001f37c, model64: 0x1f37c0001f386},
		modelTuple{type64: 0x2700000027, matchRI: 0x2289, match64: 0x00000000, model64: 0x1f3860001f390},
		modelTuple{type64: 0x2700000027, matchRI: 0x228a, match64: 0x00000000, model64: 0x1f3900001f39a},
		modelTuple{type64: 0x2700000027, matchRI: 0x228b, match64: 0x00000000, model64: 0x1f39a0001f3a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x228c, match64: 0x00000000, model64: 0x1f3a80001f3b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x228d, match64: 0x00000000, model64: 0x1f3b10001f3bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x228e, match64: 0x00000000, model64: 0x1f3bf0001f3cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x228f, match64: 0x00000000, model64: 0x1f3cd0001f3d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2290, match64: 0x00000000, model64: 0x1f3d60001f3df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3df0001f3eb, model64: 0x1f3eb0001f3f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3f20001f3fa, model64: 0x1f3fa0001f3fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2291, match64: 0x00000000, model64: 0x1f3fc0001f402},
		modelTuple{type64: 0x2700000027, matchRI: 0x2292, match64: 0x00000000, model64: 0x1f4020001f409},
		modelTuple{type64: 0x2700000027, matchRI: 0x2293, match64: 0x00000000, model64: 0x1f4090001f414},
		modelTuple{type64: 0x2700000027, matchRI: 0x2294, match64: 0x00000000, model64: 0x1f4140001f421},
		modelTuple{type64: 0x2700000027, matchRI: 0x2295, match64: 0x00000000, model64: 0x1f4210001f42d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2296, match64: 0x00000000, model64: 0x1f42d0001f436},
		modelTuple{type64: 0x2700000027, matchRI: 0x2297, match64: 0x00000000, model64: 0x1f4360001f43e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2298, match64: 0x00000000, model64: 0x1f43e0001f44c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2299, match64: 0x00000000, model64: 0x1f44c0001f456},
		modelTuple{type64: 0x2700000027, matchRI: 0x229a, match64: 0x00000000, model64: 0x1f4560001f462},
		modelTuple{type64: 0x2700000027, matchRI: 0x229b, match64: 0x00000000, model64: 0x1f4620001f46e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x229c, match64: 0x00000000, model64: 0x1f46e0001f479},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x229d, match64: 0x00000000, model64: 0x1f4790001f484},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x229e, match64: 0x00000000, model64: 0x1f4840001f493},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x229f, match64: 0x00000000, model64: 0x1f4930001f49e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x22a0, match64: 0x00000000, model64: 0x1f49e0001f4a9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x22a1, match64: 0x00000000, model64: 0x1f4a90001f4b9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x22a2, match64: 0x00000000, model64: 0x1f4b90001f4c8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x22a3, match64: 0x00000000, model64: 0x1f4c80001f4d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a4, match64: 0x00000000, model64: 0x1f4d30001f4d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a5, match64: 0x00000000, model64: 0x1f4d60001f4de},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a6, match64: 0x00000000, model64: 0x1f4de0001f4e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a7, match64: 0x00000000, model64: 0x1f4e60001f4ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a8, match64: 0x00000000, model64: 0x1f4ee0001f4fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a9, match64: 0x00000000, model64: 0x1f4fa0001f502},
		modelTuple{type64: 0x2700000027, matchRI: 0x22aa, match64: 0x00000000, model64: 0x1f5020001f50e},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ab, match64: 0x00000000, model64: 0x1f50e0001f51a},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ac, match64: 0x00000000, model64: 0x1f51a0001f522},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ad, match64: 0x00000000, model64: 0x1f5220001f52e},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ae, match64: 0x00000000, model64: 0x1f52e0001f53e},
		modelTuple{type64: 0x2700000027, matchRI: 0x22af, match64: 0x00000000, model64: 0x1f53e0001f54a},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b0, match64: 0x00000000, model64: 0x1f54a0001f552},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b1, match64: 0x00000000, model64: 0x1f5520001f562},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b2, match64: 0x00000000, model64: 0x1f5620001f56e},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b3, match64: 0x00000000, model64: 0x1f56e0001f578},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b4, match64: 0x00000000, model64: 0x1f5780001f583},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b5, match64: 0x00000000, model64: 0x1f5830001f58b},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b6, match64: 0x00000000, model64: 0x1f58b0001f597},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b7, match64: 0x00000000, model64: 0x1f5970001f5a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b8, match64: 0x00000000, model64: 0x1f5a00001f5b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b9, match64: 0x00000000, model64: 0x1f5b00001f5b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ba, match64: 0x00000000, model64: 0x1f5b80001f5c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x22bb, match64: 0x00000000, model64: 0x1f5c10001f5c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x22bc, match64: 0x00000000, model64: 0x1f5c90001f5d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x22bd, match64: 0x00000000, model64: 0x1f5d50001f5e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x22be, match64: 0x00000000, model64: 0x1f5e40001f5f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x22bf, match64: 0x00000000, model64: 0x1f5f00001f5f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c0, match64: 0x00000000, model64: 0x1f5f80001f607},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c1, match64: 0x00000000, model64: 0x1f6070001f61a},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c2, match64: 0x00000000, model64: 0x1f61a0001f622},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c3, match64: 0x00000000, model64: 0x1f6220001f635},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c4, match64: 0x00000000, model64: 0x1f6350001f640},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c5, match64: 0x00000000, model64: 0x1f6400001f64f},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c6, match64: 0x00000000, model64: 0x1f64f0001f657},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c7, match64: 0x00000000, model64: 0x1f6570001f65e},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c8, match64: 0x00000000, model64: 0x1f65e0001f669},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c9, match64: 0x00000000, model64: 0x1f6690001f671},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ca, match64: 0x00000000, model64: 0x1f6710001f67d},
		modelTuple{type64: 0x2700000027, matchRI: 0x22cb, match64: 0x00000000, model64: 0x1f67d0001f682},
		modelTuple{type64: 0x2700000027, matchRI: 0x22cc, match64: 0x00000000, model64: 0x1f6820001f687},
		modelTuple{type64: 0x2700000027, matchRI: 0x22cd, match64: 0x00000000, model64: 0x1f6870001f691},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ce, match64: 0x00000000, model64: 0x1f6910001f697},
		modelTuple{type64: 0x2700000027, matchRI: 0x22cf, match64: 0x00000000, model64: 0x1f6970001f69d},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d0, match64: 0x00000000, model64: 0x1f69d0001f6a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d1, match64: 0x00000000, model64: 0x1f6a70001f6b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d2, match64: 0x00000000, model64: 0x1f6b10001f6bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d3, match64: 0x00000000, model64: 0x1f6bc0001f6c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d4, match64: 0x00000000, model64: 0x1f6c70001f6d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d5, match64: 0x00000000, model64: 0x1f6d10001f6d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d6, match64: 0x00000000, model64: 0x1f6910001f697},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d7, match64: 0x00000000, model64: 0x1f6d70001f6e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d8, match64: 0x00000000, model64: 0x1f6e00001f6e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d9, match64: 0x00000000, model64: 0x1f6e50001f6ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x22da, match64: 0x00000000, model64: 0x1f6ef0001f6f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x22db, match64: 0x00000000, model64: 0x1f6f40001f6fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x22dc, match64: 0x00000000, model64: 0x1f6fd0001f706},
		modelTuple{type64: 0x2700000027, matchRI: 0x22dd, match64: 0x00000000, model64: 0x1f7060001f70f},
		modelTuple{type64: 0x2700000027, matchRI: 0x22de, match64: 0x00000000, model64: 0x1f70f0001f714},
		modelTuple{type64: 0x2700000027, matchRI: 0x22df, match64: 0x00000000, model64: 0x1f7140001f71a},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e0, match64: 0x00000000, model64: 0x1f71a0001f722},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e1, match64: 0x00000000, model64: 0x1f7220001f728},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e2, match64: 0x00000000, model64: 0x1f7280001f731},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e3, match64: 0x00000000, model64: 0x1f7310001f73a},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e4, match64: 0x00000000, model64: 0x1f73a0001f740},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e5, match64: 0x00000000, model64: 0x1f7400001f745},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e6, match64: 0x00000000, model64: 0x1f7450001f74d},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e7, match64: 0x00000000, model64: 0x1f74d0001f756},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e8, match64: 0x00000000, model64: 0x1f7560001f75b},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e9, match64: 0x00000000, model64: 0x1f75b0001f764},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ea, match64: 0x00000000, model64: 0x1f7640001f769},
		modelTuple{type64: 0x2700000027, matchRI: 0x22eb, match64: 0x00000000, model64: 0x1f7690001f771},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ec, match64: 0x00000000, model64: 0x1f7710001f780},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ed, match64: 0x00000000, model64: 0x1f7800001f78f},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ee, match64: 0x00000000, model64: 0x1f78f0001f79e},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ef, match64: 0x00000000, model64: 0x1f79e0001f7a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f0, match64: 0x00000000, model64: 0x1f7a60001f7af},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f1, match64: 0x00000000, model64: 0x1f7af0001f7bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f2, match64: 0x00000000, model64: 0x1f7bb0001f7c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f3, match64: 0x00000000, model64: 0xaf7f0000af86},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f4, match64: 0x00000000, model64: 0x1f7c80001f7d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f5, match64: 0x00000000, model64: 0x1f7d50001f7dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f6, match64: 0x00000000, model64: 0x1f7dc0001f7e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f7, match64: 0x00000000, model64: 0x1f7e70001f7ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f8, match64: 0x00000000, model64: 0x1f7ee0001f7f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f9, match64: 0x00000000, model64: 0x1f7f90001f805},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fa, match64: 0x00000000, model64: 0x1f8050001f810},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fb, match64: 0x00000000, model64: 0x1f8100001f817},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fc, match64: 0x00000000, model64: 0x1f8170001f822},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fd, match64: 0x00000000, model64: 0x1f8220001f829},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fe, match64: 0x00000000, model64: 0x1f8290001f834},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ff, match64: 0x00000000, model64: 0x1f8340001f83e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2300, match64: 0x00000000, model64: 0x1f83e0001f845},
		modelTuple{type64: 0x2700000027, matchRI: 0x2301, match64: 0x00000000, model64: 0x1f8450001f850},
		modelTuple{type64: 0x2700000027, matchRI: 0x2302, match64: 0x00000000, model64: 0x1f8500001f858},
		modelTuple{type64: 0x2700000027, matchRI: 0x2303, match64: 0x00000000, model64: 0x1f8580001f860},
		modelTuple{type64: 0x2700000027, matchRI: 0x2304, match64: 0x00000000, model64: 0x1f8600001f867},
		modelTuple{type64: 0x2700000027, matchRI: 0x2305, match64: 0x00000000, model64: 0x1f8670001f86f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2306, match64: 0x00000000, model64: 0x1f86f0001f877},
		modelTuple{type64: 0x2700000027, matchRI: 0x2307, match64: 0x00000000, model64: 0x1f8770001f87f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2308, match64: 0x00000000, model64: 0x1f87f0001f88a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2309, match64: 0x00000000, model64: 0x1f88a0001f895},
		modelTuple{type64: 0x2700000027, matchRI: 0x230a, match64: 0x00000000, model64: 0x1f8950001f89c},
		modelTuple{type64: 0x2700000027, matchRI: 0x230b, match64: 0x00000000, model64: 0x1f89c0001f8a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x230c, match64: 0x00000000, model64: 0x1f8a40001f8ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x230d, match64: 0x00000000, model64: 0x1f8ad0001f8b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x230e, match64: 0x00000000, model64: 0x1f8b50001f8c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x230f, match64: 0x00000000, model64: 0x1f8c00001f8cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2310, match64: 0x00000000, model64: 0x1f8cc0001f8d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2311, match64: 0x00000000, model64: 0x1f8d40001f8e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2312, match64: 0x00000000, model64: 0x1f8e30001f8ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2313, match64: 0x00000000, model64: 0x1f8ec0001f8f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2314, match64: 0x00000000, model64: 0x1f8f60001f901},
		modelTuple{type64: 0x2700000027, matchRI: 0x2315, match64: 0x00000000, model64: 0x1f9010001f909},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2316, match64: 0x00000000, model64: 0x1f4c80001f4d3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2317, match64: 0x00000000, model64: 0x1f9090001f914},
		modelTuple{type64: 0x2700000027, matchRI: 0x2318, match64: 0x00000000, model64: 0x1f9140001f921},
		modelTuple{type64: 0x2700000027, matchRI: 0x2319, match64: 0x00000000, model64: 0x1f9210001f92a},
		modelTuple{type64: 0x2700000027, matchRI: 0x231a, match64: 0x00000000, model64: 0x1f92a0001f933},
		modelTuple{type64: 0x2700000027, matchRI: 0x231b, match64: 0x00000000, model64: 0x1f9330001f93c},
		modelTuple{type64: 0x2700000027, matchRI: 0x231c, match64: 0x00000000, model64: 0x1f93c0001f949},
		modelTuple{type64: 0x2700000027, matchRI: 0x231d, match64: 0x00000000, model64: 0x1f9490001f957},
		modelTuple{type64: 0x2700000027, matchRI: 0x231e, match64: 0x00000000, model64: 0x1f9570001f960},
		modelTuple{type64: 0x2700000027, matchRI: 0x231f, match64: 0x00000000, model64: 0x1f9600001f96d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2320, match64: 0x00000000, model64: 0x1f96d0001f974},
		modelTuple{type64: 0x2700000027, matchRI: 0x2321, match64: 0x00000000, model64: 0x1f9740001f979},
		modelTuple{type64: 0x2700000027, matchRI: 0x2322, match64: 0x00000000, model64: 0x1f9790001f97f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2323, match64: 0x00000000, model64: 0x1f97f0001f986},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x1f9860001f98e, model64: 0x3bc300003bc5},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2324, match64: 0x00000000, model64: 0x1f98e0001f992},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2325, match64: 0x00000000, model64: 0x1f9920001f99a},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2326, match64: 0x00000000, model64: 0x1f99a0001f9a4},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2327, match64: 0x00000000, model64: 0x1f9a40001f9ae},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2328, match64: 0x00000000, model64: 0x1f9ae0001f9b9},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2329, match64: 0x00000000, model64: 0x1f9b90001f9bf},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x232a, match64: 0x00000000, model64: 0x1f9bf0001f9c5},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x232b, match64: 0x00000000, model64: 0x1f9c50001f9cc},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x232c, match64: 0x00000000, model64: 0x1f9cc0001f9d2},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x232d, match64: 0x00000000, model64: 0x1f9d20001f9dc},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x232e, match64: 0x00000000, model64: 0x1f9dc0001f9e2},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x232f, match64: 0x00000000, model64: 0x1f9e20001f9ef},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2330, match64: 0x00000000, model64: 0x1f9ef0001f9fc},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2331, match64: 0x00000000, model64: 0x1f9fc0001fa02},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2332, match64: 0x00000000, model64: 0x1fa020001fa0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2333, match64: 0x00000000, model64: 0x14d7700014d7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2334, match64: 0x00000000, model64: 0x1fa0c0001fa13},
		modelTuple{type64: 0x38400000391, matchRI: 0x2335, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2336, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2337, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fa1a0001fa29, model64: 0x1fa290001fa30},
		modelTuple{type64: 0x2700000027, matchRI: 0x2339, match64: 0x00000000, model64: 0x1fa300001fa38},
		modelTuple{type64: 0x2700000027, matchRI: 0x233b, match64: 0x00000000, model64: 0x522300005225},
		modelTuple{type64: 0x2700000027, matchRI: 0x233c, match64: 0x00000000, model64: 0x1fa3d0001fa43},
		modelTuple{type64: 0x2700000027, matchRI: 0x233d, match64: 0x00000000, model64: 0x1fa430001fa4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x233e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x233f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fa550001fa61, model64: 0x1fa610001fa6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2341, match64: 0x00000000, model64: 0x1fa6e0001fa74},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1fa740001fa7c, model64: 0x1fa7c0001fa85},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1fa850001fa8d, model64: 0x1fa8d0001fa95},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1fa950001faa0, model64: 0x1faa00001faab},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1faab0001fab3, model64: 0x1fab30001fabb},
		modelTuple{type64: 0x24700000251, matchRI: 0x2342, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2343, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x2344, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x2345, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fac10001facc, model64: 0x1facc0001fad0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fad00001fadb, model64: 0x1fadb0001fae0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fae00001faea, model64: 0x1faea0001faf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2347, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2349, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x234a, match64: 0x00000000, model64: 0x122800001228b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5a7100005a77},
		modelTuple{type64: 0x2700000027, matchRI: 0x234b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x234c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fb1a0001fb20, model64: 0x1fb200001fb26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fb2b0001fb3a, model64: 0x1fb3a0001fb43},
		modelTuple{type64: 0x2700000027, matchRI: 0x234f, match64: 0x00000000, model64: 0x1fb430001fb4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fb4d0001fb52, model64: 0x1fb520001fb58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fb580001fb61, model64: 0x11dc400011dcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2350, match64: 0x00000000, model64: 0x1fb610001fb65},
		modelTuple{type64: 0x2700000027, matchRI: 0x2351, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2353, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x6c9000006d3, matchRI: -0x0001, match64: 0x1fb700001fb77, model64: 0x1c6c00001c6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2355, match64: 0x00000000, model64: 0x1fb7c0001fb81},
		modelTuple{type64: 0x2700000027, matchRI: 0x2356, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2358, match64: 0x00000000, model64: 0x1fb8e0001fb95},
		modelTuple{type64: 0x2700000027, matchRI: 0x2359, match64: 0x00000000, model64: 0x1fb950001fb9e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1fba60001fbb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fbb30001fbbb, model64: 0x1fbb30001fbbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x235c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x235d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x235e, match64: 0x00000000, model64: 0x1fbbb0001fbc4},
		modelTuple{type64: 0x24300000245, matchRI: 0x235f, match64: 0x00000000, model64: 0x1fbc40001fbc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2360, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2361, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2363, match64: 0x00000000, model64: 0x120d5000120dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fbd00001fbd7, model64: 0x1fbd00001fbd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fbd70001fbdf, model64: 0x1fbd70001fbdf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fbdf0001fbe7, model64: 0x1fbdf0001fbe7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2364, match64: 0x00000000, model64: 0x1fbe70001fbf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2365, match64: 0x00000000, model64: 0x1fbf40001fbfb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fbfb0001fc06, model64: 0x1fc060001fc0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fc0f0001fc21, model64: 0x1fc210001fc27},
		modelTuple{type64: 0x2700000027, matchRI: 0x2366, match64: 0x00000000, model64: 0x1fc270001fc2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fc2c0001fc34, model64: 0x1fc340001fc3d},
		modelTuple{type64: 0x24700000251, matchRI: 0x2367, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x2368, match64: 0x00000000, model64: 0x1fc3d0001fc44},
		modelTuple{type64: 0x24700000251, matchRI: 0x2369, match64: 0x00000000, model64: 0x1fc440001fc52},
		modelTuple{type64: 0x24700000251, matchRI: 0x236a, match64: 0x00000000, model64: 0x1fc520001fc5c},
		modelTuple{type64: 0x24700000251, matchRI: 0x236b, match64: 0x00000000, model64: 0x1fc5c0001fc63},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1fc630001fc70, model64: 0x1fc630001fc70},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1fc700001fc7e, model64: 0x1fc7e0001fc8c},
		modelTuple{type64: 0x24700000251, matchRI: 0x236c, match64: 0x00000000, model64: 0x1fc8c0001fc95},
		modelTuple{type64: 0x24300000245, matchRI: 0x236d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fca70001fcb0, model64: 0x1fcb00001fcb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fcb90001fcc2, model64: 0x1fcb90001fcc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2371, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2372, match64: 0x00000000, model64: 0x1fcc20001fcc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2374, match64: 0x00000000, model64: 0x1fcca0001fcd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2376, match64: 0x00000000, model64: 0x1fcdc0001fce6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2377, match64: 0x00000000, model64: 0x1fce60001fcef},
		modelTuple{type64: 0x2700000027, matchRI: 0x2378, match64: 0x00000000, model64: 0x1fcef0001fcf7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1fcfc0001fd04},
		modelTuple{type64: 0x2700000027, matchRI: 0x237b, match64: 0x00000000, model64: 0x8c2300008c28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fd0a0001fd19, model64: 0x1fd190001fd22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fd220001fd2a, model64: 0x1fd2a0001fd33},
		modelTuple{type64: 0x2700000027, matchRI: 0x237c, match64: 0x00000000, model64: 0x1fd330001fd40},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fd400001fd4e, model64: 0x1fd400001fd4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fd4e0001fd58, model64: 0x1fd4e0001fd58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fd580001fd61, model64: 0x1fd580001fd61},
		modelTuple{type64: 0x2700000027, matchRI: 0x237d, match64: 0x00000000, model64: 0x1fd610001fd6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fd6f0001fd79, model64: 0x1fd790001fd83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fd830001fd8f, model64: 0x1fd8f0001fd9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fd9b0001fd9f, model64: 0x1fd9b0001fd9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fd9f0001fda6, model64: 0x1fda60001fdad},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x237e, match64: 0x00000000, model64: 0x1fdad0001fdb8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x237f, match64: 0x00000000, model64: 0x1fdb80001fdc9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1fdde0001fdeb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2385, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2386, match64: 0x00000000, model64: 0x1fdf90001fe00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fe090001fe12, model64: 0x1fe090001fe12},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1fe120001fe1b, model64: 0x1fe1b0001fe24},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1fe240001fe29, model64: 0x1fe240001fe29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fe290001fe34, model64: 0x1fe340001fe3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2389, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1fe430001fe4d, model64: 0x1132600011328},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1fe4d0001fe57, model64: 0x17b2300017b26},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1fe570001fe63, model64: 0x1008200010084},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1fe630001fe6f, model64: 0x1008000010082},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1fe6f0001fe7b, model64: 0x682a0000682c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1fe840001fe96},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1fea30001fea7},
		modelTuple{type64: 0x2700000027, matchRI: 0x238e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x238f, match64: 0x00000000, model64: 0x5a8c00005a92},
		modelTuple{type64: 0x2700000027, matchRI: 0x2390, match64: 0x00000000, model64: 0x1d6d00001d6d9},
		modelTuple{type64: 0x24700000251, matchRI: 0x2391, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2393, match64: 0x00000000, model64: 0x1feac0001feb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1feb50001fec2, model64: 0x1fec20001fecf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fecf0001fedc, model64: 0x1fedc0001fee9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2394, match64: 0x00000000, model64: 0x1feac0001feb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2395, match64: 0x00000000, model64: 0x1fee90001feef},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x1feef0001fefa, model64: 0x1feef0001fefa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fefa0001ff05, model64: 0x1fefa0001ff05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff0c0001ff11, model64: 0x1ff110001ff1c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff1c0001ff21, model64: 0x1ff210001ff2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff2c0001ff31, model64: 0x1ff310001ff3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff3c0001ff40, model64: 0x1ff400001ff4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff4a0001ff4f, model64: 0x1ff4f0001ff5a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ff5a0001ff5f, model64: 0xd57c0000d582},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ff5f0001ff64, model64: 0x1ff640001ff6f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ff6f0001ff76, model64: 0x1ff760001ff83},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ff830001ff89, model64: 0x1ff890001ff95},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2397, match64: 0x00000000, model64: 0x1ff950001ff9f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2398, match64: 0x00000000, model64: 0x1ff9f0001ffae},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ffae0001ffb4, model64: 0x1ffb40001ffc1},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0x1ffc10001ffd0, model64: 0x1ffd00001ffde},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x2399, match64: 0x00000000, model64: 0x1ffde0001ffea},
		modelTuple{type64: 0x24300000245, matchRI: 0x239a, match64: 0x00000000, model64: 0x1ffea0001fff4},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1fff40001fffd, model64: 0x1fffd00020007},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x200070002000f, model64: 0x2000f0002001c},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x2001c00020026, model64: 0x2002600020030},
		modelTuple{type64: 0x24300000245, matchRI: 0x239b, match64: 0x00000000, model64: 0x2003000020041},
		modelTuple{type64: 0x24300000245, matchRI: 0x239c, match64: 0x00000000, model64: 0xe7cc0000e7dd},
		modelTuple{type64: 0x24300000245, matchRI: 0x239d, match64: 0x00000000, model64: 0x987200009883},
		modelTuple{type64: 0x24300000245, matchRI: 0x239e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x239f, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x200410002004a, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23a5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2005d00020068, model64: 0x2006800020073},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2007300020080, model64: 0x2008000020094},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a9, match64: 0x00000000, model64: 0x2009d000200ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x23aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ac, match64: 0x00000000, model64: 0x200b3000200bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x200bf000200c8, model64: 0x200c8000200dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x200dd000200f0, model64: 0x200f000020103},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x201030002010f, model64: 0x201030002010f},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ad, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ae, match64: 0x00000000, model64: 0x2010f00020119},
		modelTuple{type64: 0x2700000027, matchRI: 0x23af, match64: 0x00000000, model64: 0x2010f00020119},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2011900020125, model64: 0x2012500020130},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b1, match64: 0x00000000, model64: 0x2013000020147},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b3, match64: 0x00000000, model64: 0x2014c00020158},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b4, match64: 0x00000000, model64: 0x2015800020163},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b5, match64: 0x00000000, model64: 0x201630002016b},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b6, match64: 0x00000000, model64: 0x2016b00020178},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2017800020183, model64: 0x201830002018f},
		modelTuple{type64: 0x24700000251, matchRI: 0x23b7, match64: 0x00000000, model64: 0x2018f0002019a},
		modelTuple{type64: 0x24700000251, matchRI: 0x23b8, match64: 0x00000000, model64: 0x2019a000201a5},
		modelTuple{type64: 0x24700000251, matchRI: 0x23b9, match64: 0x00000000, model64: 0x201a5000201b1},
		modelTuple{type64: 0x24700000251, matchRI: 0x23ba, match64: 0x00000000, model64: 0x201b1000201bc},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x23bb, match64: 0x00000000, model64: 0x201bc000201c9},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x23bc, match64: 0x00000000, model64: 0x201c9000201de},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x23bd, match64: 0x00000000, model64: 0x201de000201e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x23be, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5a7100005a77},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x201ff00020209, model64: 0x2020900020213},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x202130002021f, model64: 0x2021f0002022b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2022b00020236, model64: 0x2023600020241},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x202450002024a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c5, match64: 0x00000000, model64: 0x202570002025f},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c6, match64: 0x00000000, model64: 0x2025f00020271},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c7, match64: 0x00000000, model64: 0x2027100020280},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c8, match64: 0x00000000, model64: 0x2028000020292},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c9, match64: 0x00000000, model64: 0x20292000202aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x202aa000202c0, model64: 0x202c0000202d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x202d6000202e8, model64: 0x202e8000202fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ca, match64: 0x00000000, model64: 0x202fa0002030a},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cb, match64: 0x00000000, model64: 0x2030a0002031b},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cc, match64: 0x00000000, model64: 0x2031b0002032c},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cd, match64: 0x00000000, model64: 0x2032c0002033d},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ce, match64: 0x00000000, model64: 0x2033d00020348},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cf, match64: 0x00000000, model64: 0x2034800020358},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2035800020363, model64: 0x203630002036e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2036e0002037d, model64: 0x2037d0002038c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2038c000203a2, model64: 0x203a2000203b8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x203b8000203ca, model64: 0x203ca000203dc},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x203dc000203ee, model64: 0x203ee000203fb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23d0, match64: 0x00000000, model64: 0x203fb00020411},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x2041100020416, model64: 0x2041600020421},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2043e0002044d},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d5, match64: 0x00000000, model64: 0x2044d00020455},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d6, match64: 0x00000000, model64: 0x204550002045c},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d7, match64: 0x00000000, model64: 0x2045c00020461},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d8, match64: 0x00000000, model64: 0x2046100020469},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d9, match64: 0x00000000, model64: 0x204690002046f},
		modelTuple{type64: 0x2700000027, matchRI: 0x23da, match64: 0x00000000, model64: 0x2046f00020473},
		modelTuple{type64: 0x2700000027, matchRI: 0x23db, match64: 0x00000000, model64: 0xa1220000a124},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23dc, match64: 0x00000000, model64: 0x2047300020480},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d6200011d67, model64: 0x11d6200011d67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2048700020490, model64: 0x2049000020492},
		modelTuple{type64: 0x2700000027, matchRI: 0x23de, match64: 0x00000000, model64: 0xdc830000dc85},
		modelTuple{type64: 0x2700000027, matchRI: 0x23df, match64: 0x00000000, model64: 0x2049200020494},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e0, match64: 0x00000000, model64: 0x204940002049b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2049b000204aa, model64: 0x204aa000204b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x204b1000204be, model64: 0x204be000204c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e1, match64: 0x00000000, model64: 0x204c3000204c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x204c8000204d2, model64: 0x204d2000204d6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23e2, match64: 0x00000000, model64: 0x204d6000204d9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x204d9000204e9, model64: 0x204e9000204f1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23e3, match64: 0x00000000, model64: 0x204f1000204f8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23e4, match64: 0x00000000, model64: 0x204f800020501},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2050100020508, model64: 0x2050100020508},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23e5, match64: 0x00000000, model64: 0x2050800020514},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23e6, match64: 0x00000000, model64: 0x205140002051d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23e7, match64: 0x00000000, model64: 0x2051d00020528},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23e8, match64: 0x00000000, model64: 0x2052800020536},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23e9, match64: 0x00000000, model64: 0x2053600020545},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23ea, match64: 0x00000000, model64: 0x2054500020553},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23eb, match64: 0x00000000, model64: 0x2055300020563},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x205630002056f, model64: 0x2056f0002057c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2057c00020588, model64: 0x2058800020592},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x20592000205a4, model64: 0x205a4000205ab},
		modelTuple{type64: 0x24300000245, matchRI: 0x23ec, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23ed, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ee, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x205b4000205c1, model64: 0x205c1000205ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f0, match64: 0x00000000, model64: 0x205ce000205d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f4, match64: 0x00000000, model64: 0x205e4000205ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f5, match64: 0x00000000, model64: 0x205ed000205f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f6, match64: 0x00000000, model64: 0x205f100020600},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f7, match64: 0x00000000, model64: 0x206000002060e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23f8, match64: 0x00000000, model64: 0x1eca70001ecaf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ff, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2401, match64: 0x00000000, model64: 0x2063c00020641},
		modelTuple{type64: 0x2700000027, matchRI: 0x2403, match64: 0x00000000, model64: 0xb8df0000b8ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x2404, match64: 0x00000000, model64: 0xc82b0000c836},
		modelTuple{type64: 0x2700000027, matchRI: 0x2405, match64: 0x00000000, model64: 0x2064800020654},
		modelTuple{type64: 0x2700000027, matchRI: 0x2406, match64: 0x00000000, model64: 0x2065400020661},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206730002067d, model64: 0x2067d0002068e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2407, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2409, match64: 0x00000000, model64: 0x2069000020699},
		modelTuple{type64: 0x2700000027, matchRI: 0x240a, match64: 0x00000000, model64: 0x20699000206a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x240b, match64: 0x00000000, model64: 0x206a3000206ac},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x206b6000206bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x240d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x240f, match64: 0x00000000, model64: 0x206c7000206ce},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x206ce000206d7, model64: 0x206d7000206dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2410, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206dd000206e8, model64: 0x206dd000206e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206e8000206ec, model64: 0x801f00008025},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206ec000206f0, model64: 0x206f0000206f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206f7000206fb, model64: 0x57600000578},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206fb000206ff, model64: 0x15e6400015e66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206ff00020703, model64: 0x2070300020708},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207080002070c, model64: 0x2070c00020712},
		modelTuple{type64: 0x2700000027, matchRI: 0x2411, match64: 0x00000000, model64: 0x2071200020716},
		modelTuple{type64: 0x2700000027, matchRI: 0x2412, match64: 0x00000000, model64: 0x207160002071a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2413, match64: 0x00000000, model64: 0x14af300014af6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2414, match64: 0x00000000, model64: 0x2071a0002071e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2415, match64: 0x00000000, model64: 0x2071e00020726},
		modelTuple{type64: 0x2700000027, matchRI: 0x2416, match64: 0x00000000, model64: 0xc2500000c27},
		modelTuple{type64: 0x2700000027, matchRI: 0x2417, match64: 0x00000000, model64: 0x207260002072b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2418, match64: 0x00000000, model64: 0x2072b0002072e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2419, match64: 0x00000000, model64: 0x2072e00020734},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207340002073f, model64: 0x2073f00020746},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207460002074f, model64: 0xb2da0000b2df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2074f00020755, model64: 0x2074f00020755},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207550002075c, model64: 0x207550002075c},
		modelTuple{type64: 0x2700000027, matchRI: 0x241a, match64: 0x00000000, model64: 0x1e7190001e71f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2075c00020764, model64: 0x207640002076c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2076c00020775, model64: 0x207750002077e},
		modelTuple{type64: 0x2700000027, matchRI: 0x241b, match64: 0x00000000, model64: 0x2077e00020788},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2078800020790, model64: 0x2078800020790},
		modelTuple{type64: 0x2700000027, matchRI: 0x241c, match64: 0x00000000, model64: 0x2079000020799},
		modelTuple{type64: 0x2700000027, matchRI: 0x241d, match64: 0x00000000, model64: 0x20799000207a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x241e, match64: 0x00000000, model64: 0x207a5000207ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x241f, match64: 0x00000000, model64: 0x207ae000207b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207b5000207be, model64: 0x207be000207c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207c7000207cc, model64: 0x207cc000207d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207d1000207d9, model64: 0x207d9000207e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207e1000207ea, model64: 0x207ea000207f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207f3000207fb, model64: 0x207fb00020803},
		modelTuple{type64: 0x2700000027, matchRI: 0x2420, match64: 0x00000000, model64: 0x2080300020808},
		modelTuple{type64: 0x2700000027, matchRI: 0x2421, match64: 0x00000000, model64: 0xde140000de18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208080002080d, model64: 0x208080002080d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2080d00020814, model64: 0x208140002081b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2081b00020821, model64: 0x1ea5a0001ea60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2082100020828, model64: 0x2082100020828},
		modelTuple{type64: 0x2700000027, matchRI: 0x2422, match64: 0x00000000, model64: 0x2082800020830},
		modelTuple{type64: 0x2700000027, matchRI: 0x2423, match64: 0x00000000, model64: 0x5d7e00005d80},
		modelTuple{type64: 0x2700000027, matchRI: 0x2424, match64: 0x00000000, model64: 0x208300002083a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2425, match64: 0x00000000, model64: 0x2083a00020848},
		modelTuple{type64: 0x2700000027, matchRI: 0x2426, match64: 0x00000000, model64: 0x2084800020853},
		modelTuple{type64: 0x2700000027, matchRI: 0x2427, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2428, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2429, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x242b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x242c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x242e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x242f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2431, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208660002086e, model64: 0x208660002086e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2432, match64: 0x00000000, model64: 0x2086e00020876},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x208760002087e, model64: 0x208760002087e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x208950002089f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2437, match64: 0x00000000, model64: 0x208a4000208ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x2438, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2439, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x243c, match64: 0x00000000, model64: 0x208b7000208bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208bb000208c0, model64: 0x208bb000208c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208c0000208c5, model64: 0x208c0000208c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208c5000208c9, model64: 0x208c5000208c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x243d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x243e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2440, match64: 0x00000000, model64: 0x7adc00007ae3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2441, match64: 0x00000000, model64: 0x208d0000208da},
		modelTuple{type64: 0x2700000027, matchRI: 0x2442, match64: 0x00000000, model64: 0x208da000208e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2443, match64: 0x00000000, model64: 0x208e6000208ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x2444, match64: 0x00000000, model64: 0x208ed000208f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2445, match64: 0x00000000, model64: 0x208f8000208fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x2446, match64: 0x00000000, model64: 0x208fe00020902},
		modelTuple{type64: 0x2700000027, matchRI: 0x2447, match64: 0x00000000, model64: 0x2090200020908},
		modelTuple{type64: 0x2700000027, matchRI: 0x2448, match64: 0x00000000, model64: 0x209080002090f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2090f00020919, model64: 0x7fe400007fee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2091900020923, model64: 0x209230002092d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2092d00020934, model64: 0x209340002093b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2093b00020940, model64: 0x2093b00020940},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x209400002094a, model64: 0x2094a00020954},
		modelTuple{type64: 0x2700000027, matchRI: 0x2449, match64: 0x00000000, model64: 0x2095400020966},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2096600020979, model64: 0x2096600020979},
		modelTuple{type64: 0x2700000027, matchRI: 0x244a, match64: 0x00000000, model64: 0x2097900020987},
		modelTuple{type64: 0x2700000027, matchRI: 0x244b, match64: 0x00000000, model64: 0x209870002098f},
		modelTuple{type64: 0x2700000027, matchRI: 0x244c, match64: 0x00000000, model64: 0x2098f00020999},
		modelTuple{type64: 0x2700000027, matchRI: 0x244d, match64: 0x00000000, model64: 0x20999000209a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x244e, match64: 0x00000000, model64: 0x209a2000209af},
		modelTuple{type64: 0x2700000027, matchRI: 0x244f, match64: 0x00000000, model64: 0x209af000209b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2450, match64: 0x00000000, model64: 0x209b8000209c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2451, match64: 0x00000000, model64: 0x209c1000209c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2452, match64: 0x00000000, model64: 0x209c8000209d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2453, match64: 0x00000000, model64: 0x209d0000209d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2454, match64: 0x00000000, model64: 0x209d9000209e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2455, match64: 0x00000000, model64: 0x209e4000209f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2456, match64: 0x00000000, model64: 0x209f0000209f8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2457, match64: 0x00000000, model64: 0x209f800020a03},
		modelTuple{type64: 0x2700000027, matchRI: 0x2458, match64: 0x00000000, model64: 0x20a0300020a0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2459, match64: 0x00000000, model64: 0x20a0a00020a14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20a1400020a1a, model64: 0x20a1400020a1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x245a, match64: 0x00000000, model64: 0x10caf00010cb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x245b, match64: 0x00000000, model64: 0x59e8000059ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x245c, match64: 0x00000000, model64: 0x8ce100008cec},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x245d, match64: 0x00000000, model64: 0x20a1a00020a22},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x245e, match64: 0x00000000, model64: 0x475200004758},
		modelTuple{type64: 0x2700000027, matchRI: 0x245f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2460, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2461, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2463, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2464, match64: 0x00000000, model64: 0x20a2600020a33},
		modelTuple{type64: 0x2700000027, matchRI: 0x2465, match64: 0x00000000, model64: 0x20a3300020a45},
		modelTuple{type64: 0x2700000027, matchRI: 0x2466, match64: 0x00000000, model64: 0x20a4500020a57},
		modelTuple{type64: 0x2700000027, matchRI: 0x2467, match64: 0x00000000, model64: 0x20a5700020a69},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20a6900020a71, model64: 0x20a7100020a84},
		modelTuple{type64: 0x2700000027, matchRI: 0x2468, match64: 0x00000000, model64: 0x20a8400020a96},
		modelTuple{type64: 0x2700000027, matchRI: 0x2469, match64: 0x00000000, model64: 0x20a9600020aa8},
		modelTuple{type64: 0x2700000027, matchRI: 0x246a, match64: 0x00000000, model64: 0x20aa800020abb},
		modelTuple{type64: 0x24700000251, matchRI: 0x246b, match64: 0x00000000, model64: 0x20abb00020ad2},
		modelTuple{type64: 0x24700000251, matchRI: 0x246c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20ade00020ae7, model64: 0x20ae700020af2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20af200020afa, model64: 0x20afa00020b02},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2470, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2471, match64: 0x00000000, model64: 0x20b1000020b17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b1700020b1f, model64: 0x20b1700020b1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b1f00020b29, model64: 0x20b1f00020b29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b2900020b35, model64: 0x20b3500020b41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b4100020b4b, model64: 0x20b4100020b4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b4b00020b55, model64: 0x20b5500020b5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b5f00020b69, model64: 0x20b6900020b73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b7300020b7b, model64: 0x20b7300020b7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b7b00020b82, model64: 0x20b8200020b89},
		modelTuple{type64: 0x2700000027, matchRI: 0x2472, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b8900020b93, model64: 0x20b9300020b9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b9d00020ba8, model64: 0x20ba800020bb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2473, match64: 0x00000000, model64: 0x20bb300020bbf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3b9900003b9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2476, match64: 0x00000000, model64: 0x20bcd00020bcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2477, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2478, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2479, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x247c, match64: 0x00000000, model64: 0x20be700020bf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x247d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20bfd00020c06, model64: 0x20c0600020c1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20c1f00020c26, model64: 0x20c2600020c3a},
		modelTuple{type64: 0x24300000245, matchRI: 0x2480, match64: 0x00000000, model64: 0x20c4100020c47},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2481, match64: 0x00000000, model64: 0x20c4700020c50},
		modelTuple{type64: 0x24300000245, matchRI: 0x2482, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x2483, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: 0x2484, match64: 0x00000000, model64: 0x20c5000020c57},
		modelTuple{type64: 0x24300000245, matchRI: 0x2485, match64: 0x00000000, model64: 0x20c5700020c5f},
		modelTuple{type64: 0x24300000245, matchRI: 0x2486, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x2487, match64: 0x00000000, model64: 0x20c5f00020c6a},
		modelTuple{type64: 0x8e00000099, matchRI: 0x2488, match64: 0x00000000, model64: 0x20c6a00020c71},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0x20c7100020c87, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20c8e00020c92, model64: 0x20c9200020c9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20c9a00020c9f, model64: 0x820f00008213},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20c9f00020ca3, model64: 0x20ca300020cac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20cac00020cb0, model64: 0x20cb000020cb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20cb900020cbd, model64: 0x20cbd00020cc6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20cc600020cca, model64: 0x20cc600020cca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20cca00020cce, model64: 0x20cce00020cda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20cda00020cde, model64: 0x20cde00020ce7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20ce700020cec, model64: 0x20cec00020cf0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20cf000020cf4, model64: 0x159fb000159fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20cf400020cf8, model64: 0x20cf800020cff},
		modelTuple{type64: 0x2700000027, matchRI: 0x248b, match64: 0x00000000, model64: 0x20d1200020d15},
		modelTuple{type64: 0x2700000027, matchRI: 0x248d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x248e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x248f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2491, match64: 0x00000000, model64: 0x20d2000020d28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20d2800020d2c, model64: 0x20d2800020d2c},
		modelTuple{type64: 0x6c9000006d3, matchRI: 0x2493, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20d4600020d4c, model64: 0x20d4c00020d53},
		modelTuple{type64: 0x2700000027, matchRI: 0x2498, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x20d6400020d6c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x20d7a00020d83},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x20d9500020da1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x249c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20dad00020db7, model64: 0x20db700020dc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x249d, match64: 0x00000000, model64: 0x20dc100020dc6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x24a1, match64: 0x00000000, model64: 0x932600009331},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a4, match64: 0x00000000, model64: 0x20dda00020de5},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a5, match64: 0x00000000, model64: 0x20de500020ded},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a6, match64: 0x00000000, model64: 0x20ded00020df3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20df300020dfa, model64: 0x20dfa00020e01},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x20e0100020e08, model64: 0x20e0800020e0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a8, match64: 0x00000000, model64: 0x7d4c00007d4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20e1900020e23, model64: 0x20e2300020e25},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20e3300020e39, model64: 0x20e3900020e3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20e3f00020e44, model64: 0x20e4400020e4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ad, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ae, match64: 0x00000000, model64: 0x20e4f00020e57},
		modelTuple{type64: 0x2700000027, matchRI: 0x24af, match64: 0x00000000, model64: 0x8cb900008cbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b0, match64: 0x00000000, model64: 0xdc9d0000dca5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20e6d00020e77, model64: 0x20e7700020e81},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20e8100020e8b, model64: 0x20e8b00020e95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20e9500020e9e, model64: 0x20e9e00020ea7},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b4, match64: 0x00000000, model64: 0x20ea700020eb4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20eb400020ebc, model64: 0x20ebc00020ec4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x20ecd00020ed1},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b7, match64: 0x00000000, model64: 0x851100008517},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b8, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b9, match64: 0x00000000, model64: 0x20ed800020edd},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ba, match64: 0x00000000, model64: 0x20ecd00020ed1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x20eec00020ef4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20efd00020f07, model64: 0x20f0700020f08},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x20f2b00020f2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c3, match64: 0x00000000, model64: 0x20f3300020f40},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c4, match64: 0x00000000, model64: 0x20f4000020f4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c5, match64: 0x00000000, model64: 0x20f4c00020f53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20f5300020f5a, model64: 0x20f5a00020f67},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c9, match64: 0x00000000, model64: 0x20f7400020f81},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ca, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ce, match64: 0x00000000, model64: 0x20f8b00020f95},
		modelTuple{type64: 0x2700000027, matchRI: 0x24cf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d2, match64: 0x00000000, model64: 0x20fa400020fb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d3, match64: 0x00000000, model64: 0x20fb800020fc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d4, match64: 0x00000000, model64: 0x20fc600020fcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d6, match64: 0x00000000, model64: 0x20fd100020fdb},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d7, match64: 0x00000000, model64: 0x20fdb00020fe8},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d9, match64: 0x00000000, model64: 0x20fef00020ffa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20ffa00021001, model64: 0x210010002100e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2100e00021015, model64: 0x2101500021029},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2102900021032, model64: 0x2103200021043},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2104300021049, model64: 0x2104900021053},
		modelTuple{type64: 0x2700000027, matchRI: 0x24da, match64: 0x00000000, model64: 0x210530002105d},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x2105d00021064, model64: 0x2106400021074},
		modelTuple{type64: 0x2700000027, matchRI: 0x24dc, match64: 0x00000000, model64: 0x2107a00021085},
		modelTuple{type64: 0x2700000027, matchRI: 0x24dd, match64: 0x00000000, model64: 0x210850002108d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2108d00021093, model64: 0x2108d00021093},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210930002109b, model64: 0x210930002109b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2109b000210a1, model64: 0x2109b000210a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210a1000210aa, model64: 0x210a1000210aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210aa000210b3, model64: 0x1c6c00001c6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210b3000210b9, model64: 0x673600006738},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210b9000210c0, model64: 0xfe1e0000fe20},
		modelTuple{type64: 0x2700000027, matchRI: 0x24de, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x24df, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x210c7000210d2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e4, match64: 0x00000000, model64: 0x210de000210eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e6, match64: 0x00000000, model64: 0x210eb000210f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e7, match64: 0x00000000, model64: 0x210f600021105},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e8, match64: 0x00000000, model64: 0x211050002110f},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e9, match64: 0x00000000, model64: 0x2110f00021122},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ea, match64: 0x00000000, model64: 0x2112200021131},
		modelTuple{type64: 0x2700000027, matchRI: 0x24eb, match64: 0x00000000, model64: 0x2113100021137},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ec, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x24ed, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x24ee, match64: 0x00000000, model64: 0x211370002113e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x24ef, match64: 0x00000000, model64: 0x2113e0002114c},
		modelTuple{type64: 0x24700000251, matchRI: 0x24f1, match64: 0x00000000, model64: 0x2115100021158},
		modelTuple{type64: 0x24700000251, matchRI: 0x24f2, match64: 0x00000000, model64: 0x2115800021161},
		modelTuple{type64: 0x24700000251, matchRI: 0x24f3, match64: 0x00000000, model64: 0x211610002116d},
		modelTuple{type64: 0x24700000251, matchRI: 0x24f4, match64: 0x00000000, model64: 0x2116d0002117c},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f6, match64: 0x00000000, model64: 0x17a1a00017a1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f7, match64: 0x00000000, model64: 0x2118c00021191},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f8, match64: 0x00000000, model64: 0x2119100021199},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f9, match64: 0x00000000, model64: 0x21199000211a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x24fa, match64: 0x00000000, model64: 0x211a3000211ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x24fb, match64: 0x00000000, model64: 0x211ab000211b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x24fc, match64: 0x00000000, model64: 0x190100001905},
		modelTuple{type64: 0x2700000027, matchRI: 0x24fd, match64: 0x00000000, model64: 0x211b4000211bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x24fe, match64: 0x00000000, model64: 0x211bc000211c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ff, match64: 0x00000000, model64: 0x211c8000211cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2500, match64: 0x00000000, model64: 0x211cf000211d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2501, match64: 0x00000000, model64: 0x211d6000211de},
		modelTuple{type64: 0x2700000027, matchRI: 0x2502, match64: 0x00000000, model64: 0x211de000211e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2503, match64: 0x00000000, model64: 0x3c1000003c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2504, match64: 0x00000000, model64: 0x211e7000211f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2505, match64: 0x00000000, model64: 0x211f2000211fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x2506, match64: 0x00000000, model64: 0x211fe0002120d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2507, match64: 0x00000000, model64: 0x2120d00021218},
		modelTuple{type64: 0x2700000027, matchRI: 0x2508, match64: 0x00000000, model64: 0x2121800021224},
		modelTuple{type64: 0x2700000027, matchRI: 0x2509, match64: 0x00000000, model64: 0x2122400021229},
		modelTuple{type64: 0x2700000027, matchRI: 0x250a, match64: 0x00000000, model64: 0x2122900021231},
		modelTuple{type64: 0x2700000027, matchRI: 0x250b, match64: 0x00000000, model64: 0x212310002123f},
		modelTuple{type64: 0x2700000027, matchRI: 0x250c, match64: 0x00000000, model64: 0x2108d00021093},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2123f0002124c, model64: 0x2123f0002124c},
		modelTuple{type64: 0x2700000027, matchRI: 0x250d, match64: 0x00000000, model64: 0x2124c00021256},
		modelTuple{type64: 0x2700000027, matchRI: 0x250e, match64: 0x00000000, model64: 0x2125600021260},
		modelTuple{type64: 0x2700000027, matchRI: 0x250f, match64: 0x00000000, model64: 0x2126000021266},
		modelTuple{type64: 0x2700000027, matchRI: 0x2510, match64: 0x00000000, model64: 0x212660002126c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2511, match64: 0x00000000, model64: 0x2126c00021271},
		modelTuple{type64: 0x2700000027, matchRI: 0x2512, match64: 0x00000000, model64: 0x2127100021277},
		modelTuple{type64: 0x2700000027, matchRI: 0x2513, match64: 0x00000000, model64: 0x11be100011be5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2514, match64: 0x00000000, model64: 0x133390001333e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2515, match64: 0x00000000, model64: 0x2127700021280},
		modelTuple{type64: 0x2700000027, matchRI: 0x2516, match64: 0x00000000, model64: 0x2128000021288},
		modelTuple{type64: 0x2700000027, matchRI: 0x2517, match64: 0x00000000, model64: 0x212880002128d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2518, match64: 0x00000000, model64: 0x2128d0002129b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2519, match64: 0x00000000, model64: 0x82170000821f},
		modelTuple{type64: 0x2700000027, matchRI: 0x251a, match64: 0x00000000, model64: 0x82390000823f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x251b, match64: 0x00000000, model64: 0x2129b000212a7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x251c, match64: 0x00000000, model64: 0x212a7000212b2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x251d, match64: 0x00000000, model64: 0x212b2000212bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x251e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x251f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212c2000212cd, model64: 0x212cd000212dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212dc000212ea, model64: 0x212ea000212f1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x212f7000212fe, model64: 0x212fe0002130a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2130a0002130e, model64: 0x2130e0002131a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2131a00021320, model64: 0x2132000021327},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2132700021336, model64: 0x2133600021342},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2134200021352, model64: 0x213520002135f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2522, match64: 0x00000000, model64: 0x2135f00021366},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2523, match64: 0x00000000, model64: 0x2135f00021366},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2136600021372, model64: 0x2137200021384},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213840002138b, model64: 0x2138b00021394},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213940002139b, model64: 0x2139b000213a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213a5000213ac, model64: 0x213ac000213b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213b6000213bd, model64: 0x213bd000213c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213c7000213ce, model64: 0x213ce000213d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2524, match64: 0x00000000, model64: 0x213d8000213e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2525, match64: 0x00000000, model64: 0x213e3000213ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2526, match64: 0x00000000, model64: 0x135f2000135fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213ec000213fe, model64: 0x213ec000213fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x2527, match64: 0x00000000, model64: 0x213fe0002140b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2528, match64: 0x00000000, model64: 0x2140b00021414},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2141400021424, model64: 0x214240002142d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2142d0002143c, model64: 0x2143c00021444},
		modelTuple{type64: 0x2700000027, matchRI: 0x2529, match64: 0x00000000, model64: 0x214440002144d},
		modelTuple{type64: 0x2700000027, matchRI: 0x252a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x252b, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x24300000245, matchRI: 0x252c, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2145200021462, model64: 0x2146200021471},
		modelTuple{type64: 0x2700000027, matchRI: 0x252e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2147e00021489},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x214910002149f, model64: 0x2149f000214a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2532, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2533, match64: 0x00000000, model64: 0x214a4000214a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2534, match64: 0x00000000, model64: 0x214a9000214b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2535, match64: 0x00000000, model64: 0x214b1000214b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2536, match64: 0x00000000, model64: 0x214b7000214c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2537, match64: 0x00000000, model64: 0x214c5000214ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x2538, match64: 0x00000000, model64: 0x214ce000214d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2539, match64: 0x00000000, model64: 0x214d7000214e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x253a, match64: 0x00000000, model64: 0x214e2000214ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x253b, match64: 0x00000000, model64: 0x214ed000214f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x253c, match64: 0x00000000, model64: 0x214f6000214fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x253d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x253e, match64: 0x00000000, model64: 0x214fe0002150d},
		modelTuple{type64: 0x2700000027, matchRI: 0x253f, match64: 0x00000000, model64: 0x2150d0002151f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2540, match64: 0x00000000, model64: 0x2151f00021530},
		modelTuple{type64: 0x24700000251, matchRI: 0x2542, match64: 0x00000000, model64: 0x215390002153d},
		modelTuple{type64: 0x24700000251, matchRI: 0x2543, match64: 0x00000000, model64: 0x2153d00021544},
		modelTuple{type64: 0x24700000251, matchRI: 0x2544, match64: 0x00000000, model64: 0x2154400021550},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2155000021557, model64: 0x2155700021562},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2545, match64: 0x00000000, model64: 0x215620002156c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2546, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2547, match64: 0x00000000, model64: 0x2156c00021586},
		modelTuple{type64: 0x2700000027, matchRI: 0x2548, match64: 0x00000000, model64: 0x2158d00021595},
		modelTuple{type64: 0x2700000027, matchRI: 0x2549, match64: 0x00000000, model64: 0xa6010000a609},
		modelTuple{type64: 0x2700000027, matchRI: 0x254a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2159a000215a4, model64: 0x215a4000215a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215a7000215b2, model64: 0x215b2000215b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215b5000215c0, model64: 0x215c0000215c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215c3000215ce, model64: 0x215ce000215d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215d1000215dc, model64: 0x215dc000215df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215df000215e9, model64: 0x215e9000215ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215ec000215f7, model64: 0x215f7000215fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x254c, match64: 0x00000000, model64: 0x215fa000215fd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x254e, match64: 0x00000000, model64: 0x216070002160e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2551, match64: 0x00000000, model64: 0x164b5000164b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2552, match64: 0x00000000, model64: 0x2161300021619},
		modelTuple{type64: 0x2700000027, matchRI: 0x2553, match64: 0x00000000, model64: 0x216190002161f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2554, match64: 0x00000000, model64: 0x474c00004752},
		modelTuple{type64: 0x2700000027, matchRI: 0x2556, match64: 0x00000000, model64: 0x2162400021628},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2557, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2163900021643},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2164f0002165e, model64: 0x2165e00021662},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2166200021669, model64: 0x2166200021669},
		modelTuple{type64: 0x2700000027, matchRI: 0x255b, match64: 0x00000000, model64: 0x2167400021687},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2168700021693, model64: 0x21693000216aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x255c, match64: 0x00000000, model64: 0x216aa000216bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x255e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x255f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2560, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2563, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2564, match64: 0x00000000, model64: 0x216cf000216d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2565, match64: 0x00000000, model64: 0x216d7000216de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x216de000216e3, model64: 0x216de000216e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2566, match64: 0x00000000, model64: 0x216e3000216e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2567, match64: 0x00000000, model64: 0x475e00004766},
		modelTuple{type64: 0x2700000027, matchRI: 0x2569, match64: 0x00000000, model64: 0x216eb000216f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x256a, match64: 0x00000000, model64: 0x216f5000216fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x256b, match64: 0x00000000, model64: 0x216fa00021708},
		modelTuple{type64: 0x2700000027, matchRI: 0x256c, match64: 0x00000000, model64: 0x2170800021711},
		modelTuple{type64: 0x2700000027, matchRI: 0x256d, match64: 0x00000000, model64: 0x2171100021719},
		modelTuple{type64: 0x2700000027, matchRI: 0x256e, match64: 0x00000000, model64: 0x2171900021720},
		modelTuple{type64: 0x2700000027, matchRI: 0x256f, match64: 0x00000000, model64: 0x2172000021726},
		modelTuple{type64: 0x2700000027, matchRI: 0x2570, match64: 0x00000000, model64: 0x217260002172d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2571, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2572, match64: 0x00000000, model64: 0x2172d0002173e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2573, match64: 0x00000000, model64: 0x474c00004752},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2574, match64: 0x00000000, model64: 0x2173e00021748},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2575, match64: 0x00000000, model64: 0x2173e00021748},
		modelTuple{type64: 0x24300000245, matchRI: 0x2576, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2174c00021752, model64: 0x196a4000196a7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2175200021758, model64: 0x1640200016407},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x217580002175e, model64: 0x2175e00021767},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x217670002176d, model64: 0x163d6000163dd},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2176d00021774, model64: 0x217740002177c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2578, match64: 0x00000000, model64: 0x2177c00021782},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x2178200021788, model64: 0x217880002178e},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x2178e00021794, model64: 0x217940002179a},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x2179a000217a0, model64: 0x217a0000217a8},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x217a8000217ae, model64: 0x217ae000217b6},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x217b6000217bc, model64: 0x217bc000217c8},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x217c8000217ce, model64: 0x217ce000217d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2579, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x217d5000217db, model64: 0xf91a0000f91c},
		modelTuple{type64: 0x2700000027, matchRI: 0x257a, match64: 0x00000000, model64: 0x217db000217e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x257b, match64: 0x00000000, model64: 0x217e3000217ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x257c, match64: 0x00000000, model64: 0x217ed000217f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x217f1000217f8, model64: 0x217f800021801},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2180100021807, model64: 0x218070002180c},
		modelTuple{type64: 0x2700000027, matchRI: 0x257d, match64: 0x00000000, model64: 0x2180c00021813},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x218130002181a, model64: 0x2181a00021821},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2182100021827, model64: 0x218270002182c},
		modelTuple{type64: 0x2700000027, matchRI: 0x257e, match64: 0x00000000, model64: 0x2182c00021834},
		modelTuple{type64: 0x2700000027, matchRI: 0x257f, match64: 0x00000000, model64: 0x2183400021838},
		modelTuple{type64: 0x2700000027, matchRI: 0x2580, match64: 0x00000000, model64: 0x218380002183e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2581, match64: 0x00000000, model64: 0x2183e00021844},
		modelTuple{type64: 0x2700000027, matchRI: 0x2582, match64: 0x00000000, model64: 0x218440002184d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2583, match64: 0x00000000, model64: 0x2184d00021857},
		modelTuple{type64: 0x2700000027, matchRI: 0x2584, match64: 0x00000000, model64: 0x218570002185e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2185e00021864, model64: 0x218640002186f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2186f00021875, model64: 0x218750002187c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2585, match64: 0x00000000, model64: 0x2187c00021883},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2188300021889, model64: 0x2188900021891},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2189100021897, model64: 0x21897000218a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2586, match64: 0x00000000, model64: 0x218a2000218a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x218a9000218af, model64: 0x218af000218ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x2587, match64: 0x00000000, model64: 0x218ba000218c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2588, match64: 0x00000000, model64: 0x218c3000218ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x218ca000218d1, model64: 0x218d1000218d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x218d9000218e6, model64: 0x218d9000218e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x218e6000218f2, model64: 0x218e6000218f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2589, match64: 0x00000000, model64: 0x218f2000218f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x218f8000218fe, model64: 0x218fe00021908},
		modelTuple{type64: 0x2700000027, matchRI: 0x258a, match64: 0x00000000, model64: 0x2190800021912},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2191200021918, model64: 0x2191800021931},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2193100021936, model64: 0x2193600021944},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x219440002194a, model64: 0x2194a00021957},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x219570002195d, model64: 0x2195d0002196b},
		modelTuple{type64: 0x2700000027, matchRI: 0x258b, match64: 0x00000000, model64: 0x2196b00021979},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x219790002197f, model64: 0x2197f00021989},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2198900021990, model64: 0x219900002199f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2199f000219a5, model64: 0x219a5000219b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x219b5000219bb, model64: 0x219bb000219c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x258c, match64: 0x00000000, model64: 0x219c8000219d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x258d, match64: 0x00000000, model64: 0x219d3000219dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x258e, match64: 0x00000000, model64: 0x219dc000219e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x258f, match64: 0x00000000, model64: 0x219e4000219ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x2590, match64: 0x00000000, model64: 0x219ef000219f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2591, match64: 0x00000000, model64: 0x219f700021a01},
		modelTuple{type64: 0x2700000027, matchRI: 0x2592, match64: 0x00000000, model64: 0x21a0100021a0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21a0d00021a13, model64: 0x21a1300021a1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2593, match64: 0x00000000, model64: 0x21a1d00021a27},
		modelTuple{type64: 0x2700000027, matchRI: 0x2594, match64: 0x00000000, model64: 0x21a2700021a36},
		modelTuple{type64: 0x2700000027, matchRI: 0x2595, match64: 0x00000000, model64: 0x21a3600021a43},
		modelTuple{type64: 0x2700000027, matchRI: 0x2596, match64: 0x00000000, model64: 0x21a4300021a4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2597, match64: 0x00000000, model64: 0x21a4a00021a52},
		modelTuple{type64: 0x2700000027, matchRI: 0x2598, match64: 0x00000000, model64: 0x21a5200021a5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2599, match64: 0x00000000, model64: 0x21a5d00021a64},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21a6400021a6b, model64: 0x21a6400021a6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x259a, match64: 0x00000000, model64: 0x21a6b00021a73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21a7300021a79, model64: 0x21a7900021a84},
		modelTuple{type64: 0x2700000027, matchRI: 0x259b, match64: 0x00000000, model64: 0x21a8400021a8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x259c, match64: 0x00000000, model64: 0x21a8e00021a95},
		modelTuple{type64: 0x2700000027, matchRI: 0x259d, match64: 0x00000000, model64: 0x21a9500021a9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21a9c00021aa3, model64: 0x21aa300021aab},
		modelTuple{type64: 0x2700000027, matchRI: 0x259e, match64: 0x00000000, model64: 0x21aab00021ab6},
		modelTuple{type64: 0x2700000027, matchRI: 0x259f, match64: 0x00000000, model64: 0x21ab600021ac2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21ac200021ac8, model64: 0x21ac800021acf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21acf00021ad6, model64: 0x21ad600021ade},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a0, match64: 0x00000000, model64: 0x21ade00021ae8},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a1, match64: 0x00000000, model64: 0x21ae800021af6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21af600021afc, model64: 0x21afc00021b04},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a2, match64: 0x00000000, model64: 0x21b0400021b0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a3, match64: 0x00000000, model64: 0x21b0f00021b1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b1a00021b20, model64: 0x21b2000021b27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b2700021b2d, model64: 0x21b2d00021b35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b3500021b3b, model64: 0x21b3b00021b42},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a4, match64: 0x00000000, model64: 0x21b4200021b4c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b4c00021b52, model64: 0x21b5200021b5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a5, match64: 0x00000000, model64: 0x21b5f00021b6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b6a00021b6f, model64: 0x21b6f00021b7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a6, match64: 0x00000000, model64: 0x21b7e00021b85},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a7, match64: 0x00000000, model64: 0x21b8500021b8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a8, match64: 0x00000000, model64: 0x21b8d00021b94},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a9, match64: 0x00000000, model64: 0x21b9400021b9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x25aa, match64: 0x00000000, model64: 0x21b9c00021ba7},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ab, match64: 0x00000000, model64: 0x21ba700021bb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ac, match64: 0x00000000, model64: 0x21bb100021bb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ad, match64: 0x00000000, model64: 0x21bb700021bc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ae, match64: 0x00000000, model64: 0x21bc100021bc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x25af, match64: 0x00000000, model64: 0x21bc700021bcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b0, match64: 0x00000000, model64: 0x21bcb00021bd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b1, match64: 0x00000000, model64: 0xfc860000fc89},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b2, match64: 0x00000000, model64: 0x21bd400021bd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b3, match64: 0x00000000, model64: 0x21bd700021bdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b4, match64: 0x00000000, model64: 0x21bdd00021be1},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b5, match64: 0x00000000, model64: 0x21be100021be8},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b6, match64: 0x00000000, model64: 0x21be800021bf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b7, match64: 0x00000000, model64: 0x21bf200021bf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b8, match64: 0x00000000, model64: 0x21bf500021bf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b9, match64: 0x00000000, model64: 0x21bf800021bfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ba, match64: 0x00000000, model64: 0x21bfb00021c00},
		modelTuple{type64: 0x2700000027, matchRI: 0x25bb, match64: 0x00000000, model64: 0x21c0000021c08},
		modelTuple{type64: 0x2700000027, matchRI: 0x25bc, match64: 0x00000000, model64: 0x21c0800021c0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x25bd, match64: 0x00000000, model64: 0x21c0e00021c13},
		modelTuple{type64: 0x2700000027, matchRI: 0x25be, match64: 0x00000000, model64: 0x21c1300021c1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x25bf, match64: 0x00000000, model64: 0x21c1c00021c21},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c0, match64: 0x00000000, model64: 0x21bf800021bfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c1, match64: 0x00000000, model64: 0x21c2100021c31},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c2, match64: 0x00000000, model64: 0xa8750000a878},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c3100021c38, model64: 0x21c3800021c40},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c3, match64: 0x00000000, model64: 0x21c4000021c45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c4500021c4a, model64: 0x21c4a00021c53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c5300021c58, model64: 0x21c5800021c5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c5d00021c62, model64: 0x21c6200021c65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c6500021c6b, model64: 0x21c6b00021c6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c4, match64: 0x00000000, model64: 0x21c6e00021c74},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c5, match64: 0x00000000, model64: 0x1d9f60001d9f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c7400021c79, model64: 0x21c7900021c7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c7e00021c83, model64: 0x21c8300021c8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c8c00021c91, model64: 0x21c7900021c7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c6, match64: 0x00000000, model64: 0x21c9100021c96},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c7, match64: 0x00000000, model64: 0x21c9600021ca0},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c8, match64: 0x00000000, model64: 0x21ca000021ca6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21ca600021cad, model64: 0x21cad00021cb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c9, match64: 0x00000000, model64: 0x21cb200021cb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21cb500021cbb, model64: 0x21cbb00021cc2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21cc200021cc8, model64: 0x21cc800021ccc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21ccc00021cd2, model64: 0x21cd200021cd5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21cd500021cdb, model64: 0x21cdb00021cde},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ca, match64: 0x00000000, model64: 0x1bfb00001bfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x25cb, match64: 0x00000000, model64: 0x486000004866},
		modelTuple{type64: 0x2700000027, matchRI: 0x25cc, match64: 0x00000000, model64: 0x1046e00010471},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21cde00021ce4, model64: 0x21ce400021ceb},
		modelTuple{type64: 0x2700000027, matchRI: 0x25cd, match64: 0x00000000, model64: 0x21ceb00021cef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21cef00021cf4, model64: 0x21cf400021cfb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21cfb00021d00, model64: 0x21d0000021d06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d0600021d0c, model64: 0x21d0c00021d10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d1000021d15, model64: 0x21d1500021d1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d1f00021d24, model64: 0x21d2400021d2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ce, match64: 0x00000000, model64: 0x21d2a00021d2e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d2e00021d34, model64: 0x21d3400021d38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d3800021d3d, model64: 0x21d3d00021d44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d4400021d49, model64: 0x21d4900021d4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x25cf, match64: 0x00000000, model64: 0x21d4d00021d50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d5000021d55, model64: 0x21d5500021d58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d5800021d5d, model64: 0x21d5d00021d64},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d6400021d69, model64: 0x21d6900021d6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d6d00021d73, model64: 0x21d7300021d7d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d7d00021d82, model64: 0x21d8200021d89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d8900021d8e, model64: 0x21d8e00021d94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d9400021d99, model64: 0x21d9900021da0},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d0, match64: 0x00000000, model64: 0x21da000021da3},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d1, match64: 0x00000000, model64: 0x21da300021dae},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d2, match64: 0x00000000, model64: 0x1000e00010011},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21dae00021db3, model64: 0x21db300021dbb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21dbb00021dc1, model64: 0x21dc100021dc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d3, match64: 0x00000000, model64: 0x21dc500021dcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d4, match64: 0x00000000, model64: 0x21dcb00021dd6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21dd600021ddb, model64: 0x21ddb00021de3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21de300021de8, model64: 0x7a8700007a8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d5, match64: 0x00000000, model64: 0xa00e0000a010},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21de800021dee, model64: 0x21dee00021df5},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d6, match64: 0x00000000, model64: 0x21df500021dfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d7, match64: 0x00000000, model64: 0x21dfa00021e00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e0000021e06, model64: 0x21e0600021e0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e0a00021e10, model64: 0x21e1000021e13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e1300021e19, model64: 0x21e1900021e20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e2000021e26, model64: 0x21e2600021e2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d8, match64: 0x00000000, model64: 0x1e5780001e57a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e2a00021e30, model64: 0xb3440000b347},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e3000021e36, model64: 0x21e3600021e3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e3a00021e40, model64: 0x21e4000021e44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e4400021e4a, model64: 0x21e4a00021e51},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d9, match64: 0x00000000, model64: 0x21e5100021e54},
		modelTuple{type64: 0x2700000027, matchRI: 0x25da, match64: 0x00000000, model64: 0x21e5400021e57},
		modelTuple{type64: 0x2700000027, matchRI: 0x25db, match64: 0x00000000, model64: 0x21e5700021e5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x25dc, match64: 0x00000000, model64: 0x21e5d00021e66},
		modelTuple{type64: 0x2700000027, matchRI: 0x25dd, match64: 0x00000000, model64: 0x21e6600021e69},
		modelTuple{type64: 0x2700000027, matchRI: 0x25de, match64: 0x00000000, model64: 0x1a1c00001a1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x25df, match64: 0x00000000, model64: 0x21e6900021e6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e0, match64: 0x00000000, model64: 0x21e6c00021e73},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e1, match64: 0x00000000, model64: 0x21e7300021e77},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e2, match64: 0x00000000, model64: 0x21e7700021e7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e3, match64: 0x00000000, model64: 0x21e7a00021e81},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e4, match64: 0x00000000, model64: 0x21e8100021e88},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e5, match64: 0x00000000, model64: 0x21e8800021e8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e6, match64: 0x00000000, model64: 0x21e8f00021e92},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e7, match64: 0x00000000, model64: 0x21e9200021e95},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e8, match64: 0x00000000, model64: 0x20e4400020e4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e9, match64: 0x00000000, model64: 0x7ace00007ad5},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ea, match64: 0x00000000, model64: 0x21e9500021e97},
		modelTuple{type64: 0x2700000027, matchRI: 0x25eb, match64: 0x00000000, model64: 0x21e9700021e9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ec, match64: 0x00000000, model64: 0x21e9e00021ea5},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ed, match64: 0x00000000, model64: 0x21ea500021ea8},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ee, match64: 0x00000000, model64: 0x1092f00010931},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ef, match64: 0x00000000, model64: 0x21ea800021eac},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f0, match64: 0x00000000, model64: 0x21eac00021eb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f1, match64: 0x00000000, model64: 0x21eb300021eb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f2, match64: 0x00000000, model64: 0x21eb500021ebd},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f3, match64: 0x00000000, model64: 0x21ebd00021ec3},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f4, match64: 0x00000000, model64: 0x21ec300021ec9},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f5, match64: 0x00000000, model64: 0x21ec900021ed1},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f6, match64: 0x00000000, model64: 0x21ed100021ed4},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f7, match64: 0x00000000, model64: 0x21ed400021ed7},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f8, match64: 0x00000000, model64: 0x21ed700021ede},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21ede00021ee5, model64: 0x21ee500021ee9},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f9, match64: 0x00000000, model64: 0x21ee900021eef},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fa, match64: 0x00000000, model64: 0x21eef00021efa},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fb, match64: 0x00000000, model64: 0xa4970000a49a},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fc, match64: 0x00000000, model64: 0x21efa00021f02},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fd, match64: 0x00000000, model64: 0x21f0200021f06},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fe, match64: 0x00000000, model64: 0x21f0600021f0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ff, match64: 0x00000000, model64: 0x21f0c00021f0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2600, match64: 0x00000000, model64: 0x21f0f00021f13},
		modelTuple{type64: 0x2700000027, matchRI: 0x2601, match64: 0x00000000, model64: 0x21f1300021f16},
		modelTuple{type64: 0x2700000027, matchRI: 0x2602, match64: 0x00000000, model64: 0x21f1300021f16},
		modelTuple{type64: 0x2700000027, matchRI: 0x2603, match64: 0x00000000, model64: 0x21f1600021f19},
		modelTuple{type64: 0x2700000027, matchRI: 0x2604, match64: 0x00000000, model64: 0x21f1900021f20},
		modelTuple{type64: 0x2700000027, matchRI: 0x2605, match64: 0x00000000, model64: 0x21f2000021f23},
		modelTuple{type64: 0x2700000027, matchRI: 0x2606, match64: 0x00000000, model64: 0x21f2300021f2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2607, match64: 0x00000000, model64: 0x21f2a00021f2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2608, match64: 0x00000000, model64: 0x21f2d00021f31},
		modelTuple{type64: 0x2700000027, matchRI: 0x2609, match64: 0x00000000, model64: 0x195c9000195cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x260a, match64: 0x00000000, model64: 0x21f3100021f39},
		modelTuple{type64: 0x2700000027, matchRI: 0x260b, match64: 0x00000000, model64: 0x195d6000195dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x260c, match64: 0x00000000, model64: 0x21f3900021f45},
		modelTuple{type64: 0x2700000027, matchRI: 0x260d, match64: 0x00000000, model64: 0x21f4500021f48},
		modelTuple{type64: 0x2700000027, matchRI: 0x260e, match64: 0x00000000, model64: 0x21f4800021f4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x260f, match64: 0x00000000, model64: 0x21f4c00021f53},
		modelTuple{type64: 0x2700000027, matchRI: 0x2610, match64: 0x00000000, model64: 0x21f5300021f5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2611, match64: 0x00000000, model64: 0x21f5f00021f66},
		modelTuple{type64: 0x2700000027, matchRI: 0x2612, match64: 0x00000000, model64: 0x21f6600021f6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2613, match64: 0x00000000, model64: 0x21f6e00021f71},
		modelTuple{type64: 0x2700000027, matchRI: 0x2614, match64: 0x00000000, model64: 0x21f7100021f77},
		modelTuple{type64: 0x2700000027, matchRI: 0x2615, match64: 0x00000000, model64: 0x21f7700021f7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21f7a00021f80, model64: 0x21ed700021ede},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21f8000021f86, model64: 0x21f8600021f8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2616, match64: 0x00000000, model64: 0x21f8e00021f95},
		modelTuple{type64: 0x2700000027, matchRI: 0x2617, match64: 0x00000000, model64: 0x21f9500021fa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2618, match64: 0x00000000, model64: 0xa6010000a609},
		modelTuple{type64: 0x2700000027, matchRI: 0x2619, match64: 0x00000000, model64: 0x21fa000021fa8},
		modelTuple{type64: 0x2700000027, matchRI: 0x261a, match64: 0x00000000, model64: 0x21fa800021fab},
		modelTuple{type64: 0x2700000027, matchRI: 0x261b, match64: 0x00000000, model64: 0x21fab00021fae},
		modelTuple{type64: 0x2700000027, matchRI: 0x261c, match64: 0x00000000, model64: 0x21fae00021fb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x261d, match64: 0x00000000, model64: 0x21fb200021fb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x261e, match64: 0x00000000, model64: 0x21fb500021fb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21fb900021fbe, model64: 0x21fbe00021fc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x261f, match64: 0x00000000, model64: 0x21fc200021fc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2620, match64: 0x00000000, model64: 0x485100004854},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21fc500021fcb, model64: 0x21fcb00021fce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21fce00021fd4, model64: 0x21fd400021fda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21fda00021fe0, model64: 0x21fe000021fe7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2621, match64: 0x00000000, model64: 0x21fe700021feb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21feb00021ff0, model64: 0x1d9ef0001d9f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21ff000021ff5, model64: 0x21ff500021ff8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2622, match64: 0x00000000, model64: 0x21ff800021ffc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2623, match64: 0x00000000, model64: 0x21ffc00022000},
		modelTuple{type64: 0x2700000027, matchRI: 0x2624, match64: 0x00000000, model64: 0x2200000022004},
		modelTuple{type64: 0x2700000027, matchRI: 0x2625, match64: 0x00000000, model64: 0x2200400022007},
		modelTuple{type64: 0x2700000027, matchRI: 0x2626, match64: 0x00000000, model64: 0x220070002200b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2627, match64: 0x00000000, model64: 0x2200b0002200e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2628, match64: 0x00000000, model64: 0x2200e00022011},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2201100022017, model64: 0x220170002201e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2629, match64: 0x00000000, model64: 0x2201e00022022},
		modelTuple{type64: 0x2700000027, matchRI: 0x262a, match64: 0x00000000, model64: 0x2202200022026},
		modelTuple{type64: 0x2700000027, matchRI: 0x262b, match64: 0x00000000, model64: 0x2202600022029},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220290002202e, model64: 0x2202e00022032},
		modelTuple{type64: 0x2700000027, matchRI: 0x262c, match64: 0x00000000, model64: 0x2203200022036},
		modelTuple{type64: 0x2700000027, matchRI: 0x262d, match64: 0x00000000, model64: 0x220360002203a},
		modelTuple{type64: 0x2700000027, matchRI: 0x262e, match64: 0x00000000, model64: 0x2203a0002203d},
		modelTuple{type64: 0x2700000027, matchRI: 0x262f, match64: 0x00000000, model64: 0x2203d00022040},
		modelTuple{type64: 0x2700000027, matchRI: 0x2630, match64: 0x00000000, model64: 0x2204000022043},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2204300022048, model64: 0x220480002204b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2204b00022050, model64: 0x2205000022054},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2205400022059, model64: 0x220590002205f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2631, match64: 0x00000000, model64: 0x2205f00022063},
		modelTuple{type64: 0x2700000027, matchRI: 0x2632, match64: 0x00000000, model64: 0x1020a0001020d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2633, match64: 0x00000000, model64: 0x220630002206d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2634, match64: 0x00000000, model64: 0x2206d00022071},
		modelTuple{type64: 0x2700000027, matchRI: 0x2635, match64: 0x00000000, model64: 0x2207100022075},
		modelTuple{type64: 0x2700000027, matchRI: 0x2636, match64: 0x00000000, model64: 0x2207500022079},
		modelTuple{type64: 0x2700000027, matchRI: 0x2637, match64: 0x00000000, model64: 0x2207900022084},
		modelTuple{type64: 0x2700000027, matchRI: 0x2638, match64: 0x00000000, model64: 0x2208400022088},
		modelTuple{type64: 0x2700000027, matchRI: 0x2639, match64: 0x00000000, model64: 0x220880002208c},
		modelTuple{type64: 0x2700000027, matchRI: 0x263a, match64: 0x00000000, model64: 0x220630002206d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2208c00022092, model64: 0x2209200022096},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220960002209c, model64: 0x2209c000220a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220a0000220a6, model64: 0x220a6000220aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x263b, match64: 0x00000000, model64: 0x220aa000220b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220b0000220b6, model64: 0x220b6000220bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220bd000220c2, model64: 0x220c2000220c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220c5000220cb, model64: 0x220cb000220ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220ce000220d3, model64: 0x220d3000220d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x263c, match64: 0x00000000, model64: 0x220d9000220dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x263d, match64: 0x00000000, model64: 0x220dd000220e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x263e, match64: 0x00000000, model64: 0x220e1000220e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x263f, match64: 0x00000000, model64: 0x220e5000220e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2640, match64: 0x00000000, model64: 0x220e8000220ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2641, match64: 0x00000000, model64: 0x220ec000220f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2642, match64: 0x00000000, model64: 0x220f0000220f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2643, match64: 0x00000000, model64: 0x20e4400020e4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2644, match64: 0x00000000, model64: 0x220f4000220f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220f6000220fb, model64: 0x220fb000220fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x2645, match64: 0x00000000, model64: 0x220fe00022109},
		modelTuple{type64: 0x2700000027, matchRI: 0x2646, match64: 0x00000000, model64: 0x221090002210c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2647, match64: 0x00000000, model64: 0x2210c00022112},
		modelTuple{type64: 0x2700000027, matchRI: 0x2648, match64: 0x00000000, model64: 0x221120002211c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2649, match64: 0x00000000, model64: 0x2211c00022120},
		modelTuple{type64: 0x2700000027, matchRI: 0x264a, match64: 0x00000000, model64: 0x2212000022123},
		modelTuple{type64: 0x2700000027, matchRI: 0x264b, match64: 0x00000000, model64: 0x2212300022127},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x221270002212d, model64: 0x486c0000486f},
		modelTuple{type64: 0x2700000027, matchRI: 0x264c, match64: 0x00000000, model64: 0x1967200019675},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2212d00022132, model64: 0x2213200022139},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x221390002213f, model64: 0x2213f00022143},
		modelTuple{type64: 0x2700000027, matchRI: 0x264d, match64: 0x00000000, model64: 0x2214300022146},
		modelTuple{type64: 0x2700000027, matchRI: 0x264e, match64: 0x00000000, model64: 0x221460002214a},
		modelTuple{type64: 0x2700000027, matchRI: 0x264f, match64: 0x00000000, model64: 0x2214a0002214e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2650, match64: 0x00000000, model64: 0x2214e00022159},
		modelTuple{type64: 0x2700000027, matchRI: 0x2651, match64: 0x00000000, model64: 0x221590002215c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2652, match64: 0x00000000, model64: 0x2215c0002215f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2653, match64: 0x00000000, model64: 0x2215f00022165},
		modelTuple{type64: 0x2700000027, matchRI: 0x2654, match64: 0x00000000, model64: 0x2216500022168},
		modelTuple{type64: 0x2700000027, matchRI: 0x2655, match64: 0x00000000, model64: 0x14ecb00014ece},
		modelTuple{type64: 0x2700000027, matchRI: 0x2656, match64: 0x00000000, model64: 0x221680002216c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2657, match64: 0x00000000, model64: 0x2216c0002216f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2658, match64: 0x00000000, model64: 0x2216f00022175},
		modelTuple{type64: 0x2700000027, matchRI: 0x2659, match64: 0x00000000, model64: 0x221750002217f},
		modelTuple{type64: 0x2700000027, matchRI: 0x265a, match64: 0x00000000, model64: 0x2217f00022183},
		modelTuple{type64: 0x2700000027, matchRI: 0x265b, match64: 0x00000000, model64: 0x2218300022187},
		modelTuple{type64: 0x2700000027, matchRI: 0x265c, match64: 0x00000000, model64: 0x2212300022127},
		modelTuple{type64: 0x2700000027, matchRI: 0x265d, match64: 0x00000000, model64: 0x221870002218b},
		modelTuple{type64: 0x2700000027, matchRI: 0x265e, match64: 0x00000000, model64: 0x2218b0002218e},
		modelTuple{type64: 0x2700000027, matchRI: 0x265f, match64: 0x00000000, model64: 0x2218e00022192},
		modelTuple{type64: 0x2700000027, matchRI: 0x2660, match64: 0x00000000, model64: 0x2219200022195},
		modelTuple{type64: 0x2700000027, matchRI: 0x2661, match64: 0x00000000, model64: 0x2219500022199},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x221990002219f, model64: 0x2219f000221a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2662, match64: 0x00000000, model64: 0x221a6000221aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2663, match64: 0x00000000, model64: 0x221aa000221ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x2664, match64: 0x00000000, model64: 0x221ae000221b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x221b9000221c0, model64: 0x221c0000221c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x221c7000221cc, model64: 0x221cc000221d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x221d2000221d7, model64: 0x221d7000221da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x221da000221e0, model64: 0x221e0000221e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2665, match64: 0x00000000, model64: 0x221e4000221ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x221ea000221ef, model64: 0x221ef000221f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2666, match64: 0x00000000, model64: 0x221f5000221f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2667, match64: 0x00000000, model64: 0x221f8000221fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2668, match64: 0x00000000, model64: 0x221fb000221ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2669, match64: 0x00000000, model64: 0x221ff00022203},
		modelTuple{type64: 0x2700000027, matchRI: 0x266a, match64: 0x00000000, model64: 0x2220300022206},
		modelTuple{type64: 0x2700000027, matchRI: 0x266b, match64: 0x00000000, model64: 0x222060002220a},
		modelTuple{type64: 0x2700000027, matchRI: 0x266c, match64: 0x00000000, model64: 0x2220a0002220d},
		modelTuple{type64: 0x2700000027, matchRI: 0x266d, match64: 0x00000000, model64: 0x2220d00022217},
		modelTuple{type64: 0x2700000027, matchRI: 0x266e, match64: 0x00000000, model64: 0x222170002221b},
		modelTuple{type64: 0x2700000027, matchRI: 0x266f, match64: 0x00000000, model64: 0x2221b00022221},
		modelTuple{type64: 0x2700000027, matchRI: 0x2670, match64: 0x00000000, model64: 0x2222100022225},
		modelTuple{type64: 0x2700000027, matchRI: 0x2671, match64: 0x00000000, model64: 0x2222500022228},
		modelTuple{type64: 0x2700000027, matchRI: 0x2672, match64: 0x00000000, model64: 0x222280002222b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2673, match64: 0x00000000, model64: 0x2222b0002222f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2674, match64: 0x00000000, model64: 0x2222f00022233},
		modelTuple{type64: 0x2700000027, matchRI: 0x2675, match64: 0x00000000, model64: 0x2223300022236},
		modelTuple{type64: 0x2700000027, matchRI: 0x2676, match64: 0x00000000, model64: 0x222360002223d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2677, match64: 0x00000000, model64: 0x2223d00022240},
		modelTuple{type64: 0x2700000027, matchRI: 0x2678, match64: 0x00000000, model64: 0x2224000022243},
		modelTuple{type64: 0x2700000027, matchRI: 0x2679, match64: 0x00000000, model64: 0x2224300022246},
		modelTuple{type64: 0x2700000027, matchRI: 0x267a, match64: 0x00000000, model64: 0x222460002224a},
		modelTuple{type64: 0x2700000027, matchRI: 0x267b, match64: 0x00000000, model64: 0x2224a0002224d},
		modelTuple{type64: 0x2700000027, matchRI: 0x267c, match64: 0x00000000, model64: 0x2224d00022251},
		modelTuple{type64: 0x2700000027, matchRI: 0x267d, match64: 0x00000000, model64: 0x222510002225c},
		modelTuple{type64: 0x2700000027, matchRI: 0x267e, match64: 0x00000000, model64: 0x222460002224a},
		modelTuple{type64: 0x2700000027, matchRI: 0x267f, match64: 0x00000000, model64: 0x2225c0002225f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2680, match64: 0x00000000, model64: 0x2225f00022263},
		modelTuple{type64: 0x2700000027, matchRI: 0x2681, match64: 0x00000000, model64: 0x2226300022266},
		modelTuple{type64: 0x2700000027, matchRI: 0x2682, match64: 0x00000000, model64: 0x2226600022269},
		modelTuple{type64: 0x2700000027, matchRI: 0x2683, match64: 0x00000000, model64: 0x222690002226b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2684, match64: 0x00000000, model64: 0x2226b00022271},
		modelTuple{type64: 0x2700000027, matchRI: 0x2685, match64: 0x00000000, model64: 0x2227100022274},
		modelTuple{type64: 0x2700000027, matchRI: 0x2686, match64: 0x00000000, model64: 0x2227400022277},
		modelTuple{type64: 0x2700000027, matchRI: 0x2687, match64: 0x00000000, model64: 0x108fe00010900},
		modelTuple{type64: 0x2700000027, matchRI: 0x2688, match64: 0x00000000, model64: 0x222770002227a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2689, match64: 0x00000000, model64: 0x1145a0001145c},
		modelTuple{type64: 0x2700000027, matchRI: 0x268a, match64: 0x00000000, model64: 0x2227a0002227d},
		modelTuple{type64: 0x2700000027, matchRI: 0x268b, match64: 0x00000000, model64: 0x2227d00022287},
		modelTuple{type64: 0x2700000027, matchRI: 0x268c, match64: 0x00000000, model64: 0x1091300010915},
		modelTuple{type64: 0x2700000027, matchRI: 0x268d, match64: 0x00000000, model64: 0x222870002228d},
		modelTuple{type64: 0x2700000027, matchRI: 0x268e, match64: 0x00000000, model64: 0x2228d00022291},
		modelTuple{type64: 0x2700000027, matchRI: 0x268f, match64: 0x00000000, model64: 0x2229100022297},
		modelTuple{type64: 0x2700000027, matchRI: 0x2690, match64: 0x00000000, model64: 0x222970002229f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2691, match64: 0x00000000, model64: 0x2229f000222a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2692, match64: 0x00000000, model64: 0x280b0000280e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2693, match64: 0x00000000, model64: 0x21ee900021eef},
		modelTuple{type64: 0x2700000027, matchRI: 0x2694, match64: 0x00000000, model64: 0x222a2000222a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2695, match64: 0x00000000, model64: 0x466f00004672},
		modelTuple{type64: 0x2700000027, matchRI: 0x2696, match64: 0x00000000, model64: 0x222a6000222b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2697, match64: 0x00000000, model64: 0x222b0000222b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2698, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2699, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x222be000222c4, model64: 0x222be000222c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x222c4000222cb, model64: 0x222c4000222cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x222cb000222d2, model64: 0x222cb000222d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x269b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x269c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x269e, match64: 0x00000000, model64: 0x222d7000222e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x269f, match64: 0x00000000, model64: 0x222e0000222ec},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x222f300022302, model64: 0x222f300022302},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2230a00022311, model64: 0x223110002231b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2231b0002232a, model64: 0x2232a00022330},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2233000022336, model64: 0x223360002233e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2233e00022343, model64: 0x223430002234e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2234e00022353, model64: 0x2235300022360},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2236000022367, model64: 0x2236700022374},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x223740002237b, model64: 0x2237b00022387},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x223870002238e, model64: 0x2238e0002239f},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a3, match64: 0x00000000, model64: 0x2239f000223ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a4, match64: 0x00000000, model64: 0x223ac000223b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a5, match64: 0x00000000, model64: 0x223b4000223bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x223bc000223c3, model64: 0x223c3000223cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x223cb000223d2, model64: 0x223d2000223df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x223df000223e5, model64: 0x223e5000223ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x223ed000223f4, model64: 0x223c3000223cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x223f4000223fb, model64: 0x223fb00022403},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x224030002240a, model64: 0x2240a00022413},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x224130002241a, model64: 0x2241a00022427},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2242700022434, model64: 0x2243400022441},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2244100022448, model64: 0x2244800022455},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x224550002245c, model64: 0x2245c00022464},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x224640002246b, model64: 0x223360002233e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2246b00022472, model64: 0x224720002247b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2247b00022483, model64: 0x224830002248c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2248c00022493, model64: 0x22493000224a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a6, match64: 0x00000000, model64: 0x223110002231b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a7, match64: 0x00000000, model64: 0xe04e0000e055},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a8, match64: 0x00000000, model64: 0x224a3000224af},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a9, match64: 0x00000000, model64: 0x224af000224b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x26aa, match64: 0x00000000, model64: 0x224b7000224c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ab, match64: 0x00000000, model64: 0x224c4000224d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x224d1000224e2, model64: 0x224e2000224ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x224ec000224f2, model64: 0x224f2000224ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x224ff00022505, model64: 0x2250500022512},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2251200022519, model64: 0x2251900022526},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x225260002252d, model64: 0x2252d00022538},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x225380002253f, model64: 0x2253f0002254a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2254a00022552, model64: 0x225520002255c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2255c00022564, model64: 0x2256400022570},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2257000022578, model64: 0x2257800022583},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26ac, match64: 0x00000000, model64: 0x225830002258f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26ad, match64: 0x00000000, model64: 0x2258f0002259b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26ae, match64: 0x00000000, model64: 0x2259b000225a6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26af, match64: 0x00000000, model64: 0x1ee5a0001ee65},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26b0, match64: 0x00000000, model64: 0x225a6000225b2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26b1, match64: 0x00000000, model64: 0x225b2000225c0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26b2, match64: 0x00000000, model64: 0x225c0000225cf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26b3, match64: 0x00000000, model64: 0x225cf000225de},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26b4, match64: 0x00000000, model64: 0x225de000225ee},
		modelTuple{type64: 0x24300000245, matchRI: 0x26b5, match64: 0x00000000, model64: 0xf00f0000f011},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x225ee000225f4, model64: 0x225f4000225fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b6, match64: 0x00000000, model64: 0x225fb00022601},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b9, match64: 0x00000000, model64: 0x7ccd00007cd5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x26bc, match64: 0x00000000, model64: 0x226170002261d},
		modelTuple{type64: 0x2700000027, matchRI: 0x26bd, match64: 0x00000000, model64: 0x2261d00022624},
		modelTuple{type64: 0x2700000027, matchRI: 0x26be, match64: 0x00000000, model64: 0x226240002262d},
		modelTuple{type64: 0x2700000027, matchRI: 0x26bf, match64: 0x00000000, model64: 0x2262d00022633},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c0, match64: 0x00000000, model64: 0x2263300022639},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c1, match64: 0x00000000, model64: 0x2263900022640},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c2, match64: 0x00000000, model64: 0x2264000022647},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c3, match64: 0x00000000, model64: 0x226470002264e},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c4, match64: 0x00000000, model64: 0x2264e00022654},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c5, match64: 0x00000000, model64: 0x226540002265c},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c6, match64: 0x00000000, model64: 0x2265c00022662},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c7, match64: 0x00000000, model64: 0x226620002266a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2266a00022673, model64: 0x226730002267c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26c8, match64: 0x00000000, model64: 0x1351f00013526},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26c9, match64: 0x00000000, model64: 0x2267c0002268c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26ca, match64: 0x00000000, model64: 0x2268c00022695},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26cb, match64: 0x00000000, model64: 0x226950002269e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26cc, match64: 0x00000000, model64: 0x2269e000226a6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26cd, match64: 0x00000000, model64: 0x226a6000226b7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26ce, match64: 0x00000000, model64: 0x226b7000226c4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26cf, match64: 0x00000000, model64: 0x226c4000226cd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26d0, match64: 0x00000000, model64: 0x226cd000226d4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26d1, match64: 0x00000000, model64: 0x84e7000084ee},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x226d4000226db, model64: 0x226db000226e2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x226e2000226eb, model64: 0x226eb000226f4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x226f4000226fd, model64: 0x226f4000226fd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26d2, match64: 0x00000000, model64: 0x226fd00022704},
		modelTuple{type64: 0xae980000aead, matchRI: 0x26d3, match64: 0x00000000, model64: 0x227040002270f},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d5, match64: 0x00000000, model64: 0x2271500022719},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d7, match64: 0x00000000, model64: 0x2271900022720},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d8, match64: 0x00000000, model64: 0x2272000022726},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d9, match64: 0x00000000, model64: 0x2272600022733},
		modelTuple{type64: 0x2700000027, matchRI: 0x26da, match64: 0x00000000, model64: 0x227330002273b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26db, match64: 0x00000000, model64: 0x2273b00022743},
		modelTuple{type64: 0x2700000027, matchRI: 0x26dc, match64: 0x00000000, model64: 0x227430002274a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2275000022758, model64: 0x2275000022758},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26de, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2275e0002276b, model64: 0x2276b00022779},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x227790002277e, model64: 0x2277e00022784},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x227840002278e, model64: 0x2278e00022798},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22798000227a2, model64: 0x227a2000227ad},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x21ee900021eef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x227b8000227c0, model64: 0x227b8000227c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e3, match64: 0x00000000, model64: 0x227c0000227ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e4, match64: 0x00000000, model64: 0x227ca000227d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e5, match64: 0x00000000, model64: 0x227d5000227de},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26e7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x227de000227e6, model64: 0x227e6000227ee},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x227ee000227f4, model64: 0x227f4000227fc},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x227fc00022802, model64: 0x228020002280a},
		modelTuple{type64: 0x24300000245, matchRI: 0x26e8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ea, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x26eb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ec, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ef, match64: 0x00000000, model64: 0x228180002281e},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f0, match64: 0x00000000, model64: 0x11e3400011e39},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f3, match64: 0x00000000, model64: 0x228240002282f},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f4, match64: 0x00000000, model64: 0x2282f00022835},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f5, match64: 0x00000000, model64: 0x2283500022842},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f6, match64: 0x00000000, model64: 0x2284200022847},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x228470002284f, model64: 0x228470002284f},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f7, match64: 0x00000000, model64: 0x172e1000172e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f8, match64: 0x00000000, model64: 0x2284f00022856},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f9, match64: 0x00000000, model64: 0x228560002285f},
		modelTuple{type64: 0x2700000027, matchRI: 0x26fa, match64: 0x00000000, model64: 0x2285f00022865},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x228650002286d, model64: 0x228650002286d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2286d00022871, model64: 0x2286d00022871},
		modelTuple{type64: 0x2700000027, matchRI: 0x26fc, match64: 0x00000000, model64: 0x228750002287d},
		modelTuple{type64: 0x2700000027, matchRI: 0x26fd, match64: 0x00000000, model64: 0x2287d00022887},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2288700022894, model64: 0x22894000228a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x228a1000228aa, model64: 0x228aa000228b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x228b3000228bd, model64: 0x228bd000228c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x228c7000228d1, model64: 0x228c7000228d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x26fe, match64: 0x00000000, model64: 0x228d1000228de},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ff, match64: 0x00000000, model64: 0xddd60000ddda},
		modelTuple{type64: 0x2700000027, matchRI: 0x2700, match64: 0x00000000, model64: 0xb2da0000b2df},
		modelTuple{type64: 0x2700000027, matchRI: 0x2701, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2704, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2705, match64: 0x00000000, model64: 0x228e7000228f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2706, match64: 0x00000000, model64: 0x228f0000228f9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2708, match64: 0x00000000, model64: 0x2290000022909},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x270a, match64: 0x00000000, model64: 0x2290c00022910},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2291000022918, model64: 0x2291800022921},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2292f0002293e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xb4600000b463},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2714, match64: 0x00000000, model64: 0x2295a00022969},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229690002297a, model64: 0x2297a0002298b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2298b00022998, model64: 0x22998000229a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2715, match64: 0x00000000, model64: 0x229a5000229b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2716, match64: 0x00000000, model64: 0x229b1000229be},
		modelTuple{type64: 0x2700000027, matchRI: 0x2717, match64: 0x00000000, model64: 0x229be000229cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2718, match64: 0x00000000, model64: 0x229cc000229d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2719, match64: 0x00000000, model64: 0x229d4000229dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x271a, match64: 0x00000000, model64: 0x229dd000229e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229e6000229ef, model64: 0x229ef000229f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229f800022a05, model64: 0x22a0500022a12},
		modelTuple{type64: 0x2700000027, matchRI: 0x271b, match64: 0x00000000, model64: 0x22a1200022a1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x271c, match64: 0x00000000, model64: 0x22a1a00022a27},
		modelTuple{type64: 0x2700000027, matchRI: 0x271d, match64: 0x00000000, model64: 0x120d5000120dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x271e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x22a2e00022a37},
		modelTuple{type64: 0xb6500000b6c, matchRI: 0x2721, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xffe30000ffe6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x22a4e00022a56},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2726, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a6b00022a75, model64: 0x22a7500022a7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a8200022a8a, model64: 0x22a8a00022a92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a9200022a9e, model64: 0x22a9e00022aa4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22aba00022ac6, model64: 0x22ac600022ad5},
		modelTuple{type64: 0x2700000027, matchRI: 0x272c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x272e, match64: 0x00000000, model64: 0x22ae400022aeb},
		modelTuple{type64: 0x24700000251, matchRI: 0x272f, match64: 0x00000000, model64: 0x22aeb00022af2},
		modelTuple{type64: 0x24700000251, matchRI: 0x2730, match64: 0x00000000, model64: 0x22af200022af7},
		modelTuple{type64: 0x24700000251, matchRI: 0x2731, match64: 0x00000000, model64: 0x22af700022b01},
		modelTuple{type64: 0x2700000027, matchRI: 0x2732, match64: 0x00000000, model64: 0x22b0100022b08},
		modelTuple{type64: 0x2700000027, matchRI: 0x2733, match64: 0x00000000, model64: 0x22b0800022b13},
		modelTuple{type64: 0x2700000027, matchRI: 0x2734, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2735, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2736, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b1f00022b26, model64: 0x22b2600022b32},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x273b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x273c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x273e, match64: 0x00000000, model64: 0x22b4600022b48},
		modelTuple{type64: 0x2700000027, matchRI: 0x273f, match64: 0x00000000, model64: 0x3b0700003b09},
		modelTuple{type64: 0x2700000027, matchRI: 0x2740, match64: 0x00000000, model64: 0x22b4800022b4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2741, match64: 0x00000000, model64: 0x22b4c00022b55},
		modelTuple{type64: 0x2700000027, matchRI: 0x2742, match64: 0x00000000, model64: 0x22b5500022b5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2743, match64: 0x00000000, model64: 0x22b5e00022b67},
		modelTuple{type64: 0x2700000027, matchRI: 0x2744, match64: 0x00000000, model64: 0x22b6700022b72},
		modelTuple{type64: 0x2700000027, matchRI: 0x2745, match64: 0x00000000, model64: 0x22b7200022b78},
		modelTuple{type64: 0x2700000027, matchRI: 0x2746, match64: 0x00000000, model64: 0x22b7800022b7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2747, match64: 0x00000000, model64: 0x22b7f00022b8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2748, match64: 0x00000000, model64: 0x22b8b00022b97},
		modelTuple{type64: 0x2700000027, matchRI: 0x2749, match64: 0x00000000, model64: 0x22b9700022ba0},
		modelTuple{type64: 0x2700000027, matchRI: 0x274a, match64: 0x00000000, model64: 0x22ba000022baa},
		modelTuple{type64: 0x2700000027, matchRI: 0x274b, match64: 0x00000000, model64: 0x22baa00022bae},
		modelTuple{type64: 0x2700000027, matchRI: 0x274c, match64: 0x00000000, model64: 0x22bae00022bb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x274d, match64: 0x00000000, model64: 0x22bb300022bbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x274e, match64: 0x00000000, model64: 0x22bbb00022bc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x274f, match64: 0x00000000, model64: 0x22bc700022bcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2750, match64: 0x00000000, model64: 0x22bcf00022bd4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22bd400022be0, model64: 0x22be000022bec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2751, match64: 0x00000000, model64: 0x22bec00022bf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2752, match64: 0x00000000, model64: 0x586f00005876},
		modelTuple{type64: 0x2700000027, matchRI: 0x2753, match64: 0x00000000, model64: 0x22bf600022bfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x2754, match64: 0x00000000, model64: 0x22bfe00022c06},
		modelTuple{type64: 0x2700000027, matchRI: 0x2755, match64: 0x00000000, model64: 0x22c0600022c0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2756, match64: 0x00000000, model64: 0x22c0e00022c17},
		modelTuple{type64: 0x2700000027, matchRI: 0x2757, match64: 0x00000000, model64: 0x22c1700022c1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2758, match64: 0x00000000, model64: 0x22c1d00022c21},
		modelTuple{type64: 0x2700000027, matchRI: 0x2759, match64: 0x00000000, model64: 0x22c2100022c26},
		modelTuple{type64: 0x2700000027, matchRI: 0x275a, match64: 0x00000000, model64: 0x22c2600022c2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x275b, match64: 0x00000000, model64: 0x22c2b00022c32},
		modelTuple{type64: 0x2700000027, matchRI: 0x275c, match64: 0x00000000, model64: 0x22c3200022c37},
		modelTuple{type64: 0x2700000027, matchRI: 0x275d, match64: 0x00000000, model64: 0x22c3700022c3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c3c00022c45, model64: 0x22c4500022c4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c4e00022c54, model64: 0x22c5400022c5b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c5b00022c65, model64: 0x22c6500022c6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x275e, match64: 0x00000000, model64: 0x22c6c00022c73},
		modelTuple{type64: 0x2700000027, matchRI: 0x275f, match64: 0x00000000, model64: 0x22c7300022c78},
		modelTuple{type64: 0x2700000027, matchRI: 0x2760, match64: 0x00000000, model64: 0x22c7800022c7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2761, match64: 0x00000000, model64: 0x22c7f00022c84},
		modelTuple{type64: 0x2700000027, matchRI: 0x2762, match64: 0x00000000, model64: 0x22c8400022c87},
		modelTuple{type64: 0x2700000027, matchRI: 0x2763, match64: 0x00000000, model64: 0x22c8700022c8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2764, match64: 0x00000000, model64: 0x22c8d00022c91},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c9100022c97, model64: 0x22c9700022c9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2765, match64: 0x00000000, model64: 0x2165e00021662},
		modelTuple{type64: 0x2700000027, matchRI: 0x2766, match64: 0x00000000, model64: 0x1e8fd0001e903},
		modelTuple{type64: 0x2700000027, matchRI: 0x2767, match64: 0x00000000, model64: 0x22c9e00022ca4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2768, match64: 0x00000000, model64: 0x22c7f00022c84},
		modelTuple{type64: 0x2700000027, matchRI: 0x2769, match64: 0x00000000, model64: 0x22ca400022caf},
		modelTuple{type64: 0x2700000027, matchRI: 0x276a, match64: 0x00000000, model64: 0x22caf00022cbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x276b, match64: 0x00000000, model64: 0x22cbb00022cc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x276c, match64: 0x00000000, model64: 0x22cc300022cc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x276d, match64: 0x00000000, model64: 0x22cc800022ccf},
		modelTuple{type64: 0x2700000027, matchRI: 0x276e, match64: 0x00000000, model64: 0x22ccf00022cd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x276f, match64: 0x00000000, model64: 0x22cd400022cdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2770, match64: 0x00000000, model64: 0x22cdc00022ce2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2771, match64: 0x00000000, model64: 0x22ce200022cee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2772, match64: 0x00000000, model64: 0x22cee00022cf5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22cf500022cfb, model64: 0x22cfb00022d07},
		modelTuple{type64: 0x2700000027, matchRI: 0x2773, match64: 0x00000000, model64: 0x22d0700022d13},
		modelTuple{type64: 0x2700000027, matchRI: 0x2774, match64: 0x00000000, model64: 0x22d1300022d1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d1a00022d23, model64: 0x22d2300022d2f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d2f00022d39, model64: 0x22d3900022d40},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d4000022d4a, model64: 0x22d4a00022d51},
		modelTuple{type64: 0x2700000027, matchRI: 0x2775, match64: 0x00000000, model64: 0x22d5100022d5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2776, match64: 0x00000000, model64: 0x1ea0c0001ea11},
		modelTuple{type64: 0x2700000027, matchRI: 0x2777, match64: 0x00000000, model64: 0x22d5d00022d64},
		modelTuple{type64: 0x2700000027, matchRI: 0x2778, match64: 0x00000000, model64: 0x22d6400022d70},
		modelTuple{type64: 0x2700000027, matchRI: 0x2779, match64: 0x00000000, model64: 0x22d7000022d77},
		modelTuple{type64: 0x2700000027, matchRI: 0x277a, match64: 0x00000000, model64: 0x22d7700022d7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x277b, match64: 0x00000000, model64: 0x22d7c00022d7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x277c, match64: 0x00000000, model64: 0x22d7f00022d84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d8400022d8a, model64: 0x22d8a00022d91},
		modelTuple{type64: 0x2700000027, matchRI: 0x277d, match64: 0x00000000, model64: 0x22d9100022d99},
		modelTuple{type64: 0x2700000027, matchRI: 0x277e, match64: 0x00000000, model64: 0x22d9900022d9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x277f, match64: 0x00000000, model64: 0x22d9c00022da7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2780, match64: 0x00000000, model64: 0x22da700022daf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2781, match64: 0x00000000, model64: 0x22daf00022db6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2782, match64: 0x00000000, model64: 0x22db600022dba},
		modelTuple{type64: 0x2700000027, matchRI: 0x2783, match64: 0x00000000, model64: 0x22dba00022dc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2784, match64: 0x00000000, model64: 0x22dc100022dcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2785, match64: 0x00000000, model64: 0x22dcd00022dd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2786, match64: 0x00000000, model64: 0x22dd400022ddf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2787, match64: 0x00000000, model64: 0x22ddf00022deb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2788, match64: 0x00000000, model64: 0x22deb00022df1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22df100022df8, model64: 0x22df800022e02},
		modelTuple{type64: 0x2700000027, matchRI: 0x2789, match64: 0x00000000, model64: 0x22e0200022e0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x278a, match64: 0x00000000, model64: 0x22e0b00022e16},
		modelTuple{type64: 0x2700000027, matchRI: 0x278b, match64: 0x00000000, model64: 0x22e1600022e1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x278c, match64: 0x00000000, model64: 0x22e1d00022e27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e2700022e2c, model64: 0x22e2c00022e35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e3500022e3e, model64: 0x22e3e00022e42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e4200022e48, model64: 0x503b00005041},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e4800022e4e, model64: 0x22e4e00022e58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e5800022e5e, model64: 0x8ec900008ed1},
		modelTuple{type64: 0x2700000027, matchRI: 0x278d, match64: 0x00000000, model64: 0x22e5e00022e65},
		modelTuple{type64: 0x2700000027, matchRI: 0x278e, match64: 0x00000000, model64: 0x22e6500022e70},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e7000022e76, model64: 0x22e7600022e7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e7c00022e86, model64: 0x22e8600022e91},
		modelTuple{type64: 0x2700000027, matchRI: 0x278f, match64: 0x00000000, model64: 0x14ecb00014ece},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e9100022e9b, model64: 0x14ecb00014ece},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e9b00022ea1, model64: 0x2216c0002216f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ea100022ea7, model64: 0x2218b0002218e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2790, match64: 0x00000000, model64: 0x22ea700022eaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2791, match64: 0x00000000, model64: 0x22eaa00022ead},
		modelTuple{type64: 0x2700000027, matchRI: 0x2792, match64: 0x00000000, model64: 0x22ead00022eb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22eb500022ebb, model64: 0x22ebb00022ebe},
		modelTuple{type64: 0x2700000027, matchRI: 0x2793, match64: 0x00000000, model64: 0x22ebe00022ec1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ec100022ec7, model64: 0x222280002222b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ec700022ecd, model64: 0x22ecd00022ed0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2794, match64: 0x00000000, model64: 0x505300005059},
		modelTuple{type64: 0x2700000027, matchRI: 0x2795, match64: 0x00000000, model64: 0x22ed000022eda},
		modelTuple{type64: 0x2700000027, matchRI: 0x2796, match64: 0x00000000, model64: 0x50470000504d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2797, match64: 0x00000000, model64: 0x22eda00022ee5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ee500022eef, model64: 0x22b4c00022b55},
		modelTuple{type64: 0x2700000027, matchRI: 0x2798, match64: 0x00000000, model64: 0x22eef00022ef3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2799, match64: 0x00000000, model64: 0x22ef300022ef9},
		modelTuple{type64: 0x2700000027, matchRI: 0x279a, match64: 0x00000000, model64: 0x22ef900022eff},
		modelTuple{type64: 0x2700000027, matchRI: 0x279b, match64: 0x00000000, model64: 0x22eff00022f05},
		modelTuple{type64: 0x2700000027, matchRI: 0x279c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x279e, match64: 0x00000000, model64: 0x22f0d00022f14},
		modelTuple{type64: 0x2700000027, matchRI: 0x279f, match64: 0x00000000, model64: 0x4170000041a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f1400022f24, model64: 0x22f2400022f2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a0, match64: 0x00000000, model64: 0x22f2b00022f35},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a1, match64: 0x00000000, model64: 0x22f3500022f3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f3c00022f45, model64: 0x55300000558},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f4a00022f56, model64: 0x22f5600022f62},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x22f6600022f72, model64: 0x22f7200022f7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27a7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f8400022f8b, model64: 0x22f8b00022f93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f9300022f9c, model64: 0x22f9c00022fa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x27ab, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ad, match64: 0x00000000, model64: 0x22fac00022fb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ae, match64: 0x00000000, model64: 0x22fb300022fb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x27af, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x27b0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x27b1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b3, match64: 0x00000000, model64: 0xa00e0000a010},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x22fc500022fc9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b7, match64: 0x00000000, model64: 0x22fde00022feb},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b8, match64: 0x00000000, model64: 0x22feb00022ff3},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b9, match64: 0x00000000, model64: 0x22feb00022ff3},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ba, match64: 0x00000000, model64: 0x22ff300022ffd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27bb, match64: 0x00000000, model64: 0x22ffd0002300e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27bc, match64: 0x00000000, model64: 0x2300e00023016},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2301e00023025},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2302a0002302f, model64: 0x2302f00023038},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x230380002303d, model64: 0x2303d00023044},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2304400023049, model64: 0x230490002304e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2304e00023057, model64: 0x2305700023061},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2306100023066, model64: 0x230660002306b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2306b00023070, model64: 0x2307000023076},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2307d0002308c, model64: 0x2308c00023093},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23093000230a2, model64: 0x230a2000230ad},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x230b5000230c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c3, match64: 0x00000000, model64: 0x230c9000230d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c4, match64: 0x00000000, model64: 0x230d2000230d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c5, match64: 0x00000000, model64: 0x634000006345},
		modelTuple{type64: 0x24700000251, matchRI: 0x27c6, match64: 0x00000000, model64: 0x230d7000230df},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x230e4000230eb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x230f7000230fd, model64: 0x230fd00023104},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231040002310a, model64: 0x2310a00023114},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2311a0002312a, model64: 0x2312a00023134},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2313400023140, model64: 0x2314000023146},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27cc, match64: 0x00000000, model64: 0x231460002314e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27cd, match64: 0x00000000, model64: 0x2314e00023159},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27ce, match64: 0x00000000, model64: 0x2315900023163},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27cf, match64: 0x00000000, model64: 0x231630002316d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27d0, match64: 0x00000000, model64: 0x2316d00023178},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27d1, match64: 0x00000000, model64: 0x2317800023184},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2318400023193, model64: 0x231930002319c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2319c000231a5, model64: 0x231a5000231af},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d2, match64: 0x00000000, model64: 0x231af000231b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d3, match64: 0x00000000, model64: 0x21e9200021e95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231b6000231bf, model64: 0x231bf000231c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d4, match64: 0x00000000, model64: 0x231c6000231cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d5, match64: 0x00000000, model64: 0x231cd000231d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231d6000231e4, model64: 0x231e4000231f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d6, match64: 0x00000000, model64: 0x231f2000231fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d9, match64: 0x00000000, model64: 0x2320000023207},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2320700023211, model64: 0x232110002321b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2321b0002322a, model64: 0x2322a00023239},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2323900023244, model64: 0x232440002324f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2324f00023260, model64: 0x2326000023271},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x232710002327d, model64: 0x2700000027},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2327d0002328f, model64: 0x2328f000232a4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x232af000232b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x27db, match64: 0x00000000, model64: 0x232b8000232be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x232be000232cf, model64: 0x232cf000232dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x27dc, match64: 0x00000000, model64: 0x232dd000232e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x232e8000232f3, model64: 0x232f3000232fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x232fb00023303, model64: 0x2330300023306},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2330600023312, model64: 0x233120002331b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2331b00023325, model64: 0x233250002332c},
		modelTuple{type64: 0x2700000027, matchRI: 0x27df, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e0, match64: 0x00000000, model64: 0x233340002333a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2334c00023351, model64: 0x233510002335c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2336100023366, model64: 0x233660002336e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ea, match64: 0x00000000, model64: 0x21fab00021fae},
		modelTuple{type64: 0x2700000027, matchRI: 0x27eb, match64: 0x00000000, model64: 0x2203a0002203d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x233870002338e, model64: 0x2338e00023391},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2339100023397, model64: 0x233970002339e},
		modelTuple{type64: 0x24300000245, matchRI: 0x27ec, match64: 0x00000000, model64: 0x232b5000232b8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ef, match64: 0x00000000, model64: 0x233ae000233bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f0, match64: 0x00000000, model64: 0x57f0000057f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f3, match64: 0x00000000, model64: 0x233bf000233ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f4, match64: 0x00000000, model64: 0x233ce000233d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f5, match64: 0x00000000, model64: 0x233d6000233e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f6, match64: 0x00000000, model64: 0x233e7000233f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f7, match64: 0x00000000, model64: 0x233f4000233ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f9, match64: 0x00000000, model64: 0x2340500023410},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2341000023416, model64: 0x2341600023426},
		modelTuple{type64: 0x2700000027, matchRI: 0x27fa, match64: 0x00000000, model64: 0x2342600023433},
		modelTuple{type64: 0x2700000027, matchRI: 0x27fb, match64: 0x00000000, model64: 0x2343300023444},
		modelTuple{type64: 0x2700000027, matchRI: 0x27fc, match64: 0x00000000, model64: 0x2344400023451},
		modelTuple{type64: 0x2700000027, matchRI: 0x27fd, match64: 0x00000000, model64: 0x2345100023462},
		modelTuple{type64: 0x2700000027, matchRI: 0x27fe, match64: 0x00000000, model64: 0x2346200023472},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ff, match64: 0x00000000, model64: 0x2347200023486},
		modelTuple{type64: 0x2700000027, matchRI: 0x2800, match64: 0x00000000, model64: 0x2348600023497},
		modelTuple{type64: 0x2700000027, matchRI: 0x2801, match64: 0x00000000, model64: 0x23497000234a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2802, match64: 0x00000000, model64: 0x234a4000234b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2803, match64: 0x00000000, model64: 0x234b1000234c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2804, match64: 0x00000000, model64: 0x234c2000234d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2805, match64: 0x00000000, model64: 0x234d0000234d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2806, match64: 0x00000000, model64: 0x234d9000234e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2807, match64: 0x00000000, model64: 0x234e2000234e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2808, match64: 0x00000000, model64: 0x234e8000234f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2809, match64: 0x00000000, model64: 0x234f3000234fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x280a, match64: 0x00000000, model64: 0x234fb00023506},
		modelTuple{type64: 0x2700000027, matchRI: 0x280b, match64: 0x00000000, model64: 0x235060002350f},
		modelTuple{type64: 0x2700000027, matchRI: 0x280c, match64: 0x00000000, model64: 0x2350f00023516},
		modelTuple{type64: 0x2700000027, matchRI: 0x280d, match64: 0x00000000, model64: 0x235160002351d},
		modelTuple{type64: 0x2700000027, matchRI: 0x280e, match64: 0x00000000, model64: 0x2351d00023526},
		modelTuple{type64: 0x2700000027, matchRI: 0x280f, match64: 0x00000000, model64: 0x235260002352a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2810, match64: 0x00000000, model64: 0x2352a00023532},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x235320002354c, model64: 0x2354c00023567},
		modelTuple{type64: 0x2700000027, matchRI: 0x2811, match64: 0x00000000, model64: 0x2356700023572},
		modelTuple{type64: 0x2700000027, matchRI: 0x2812, match64: 0x00000000, model64: 0x2357200023579},
		modelTuple{type64: 0x2700000027, matchRI: 0x2813, match64: 0x00000000, model64: 0x235790002357e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2814, match64: 0x00000000, model64: 0x2357e00023587},
		modelTuple{type64: 0x2700000027, matchRI: 0x2815, match64: 0x00000000, model64: 0x235870002358c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2816, match64: 0x00000000, model64: 0x2358c0002359e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2817, match64: 0x00000000, model64: 0x2359e000235a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2818, match64: 0x00000000, model64: 0x235a4000235ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x2819, match64: 0x00000000, model64: 0x235ae000235bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x281a, match64: 0x00000000, model64: 0x235bb000235c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x281b, match64: 0x00000000, model64: 0x235c9000235d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x281c, match64: 0x00000000, model64: 0x235d2000235e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x281d, match64: 0x00000000, model64: 0x235e0000235e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x281e, match64: 0x00000000, model64: 0x235e6000235f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x281f, match64: 0x00000000, model64: 0x235f3000235f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2820, match64: 0x00000000, model64: 0x235f9000235ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2821, match64: 0x00000000, model64: 0x235ff00023609},
		modelTuple{type64: 0x2700000027, matchRI: 0x2822, match64: 0x00000000, model64: 0x236090002360f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2823, match64: 0x00000000, model64: 0x2360f0002361f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2824, match64: 0x00000000, model64: 0x2361f0002362c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2825, match64: 0x00000000, model64: 0x2362c00023636},
		modelTuple{type64: 0x2700000027, matchRI: 0x2826, match64: 0x00000000, model64: 0x2363600023641},
		modelTuple{type64: 0x2700000027, matchRI: 0x2827, match64: 0x00000000, model64: 0x236410002364a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2828, match64: 0x00000000, model64: 0x192f8000192fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x2829, match64: 0x00000000, model64: 0x16c6000016c62},
		modelTuple{type64: 0x2700000027, matchRI: 0x282a, match64: 0x00000000, model64: 0xe14d0000e158},
		modelTuple{type64: 0x2700000027, matchRI: 0x282b, match64: 0x00000000, model64: 0x2364a0002364d},
		modelTuple{type64: 0x2700000027, matchRI: 0x282c, match64: 0x00000000, model64: 0x2364d0002365d},
		modelTuple{type64: 0x2700000027, matchRI: 0x282d, match64: 0x00000000, model64: 0x2365d00023664},
		modelTuple{type64: 0x2700000027, matchRI: 0x282e, match64: 0x00000000, model64: 0x236640002366b},
		modelTuple{type64: 0x2700000027, matchRI: 0x282f, match64: 0x00000000, model64: 0x2366b0002366e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2830, match64: 0x00000000, model64: 0x2366e00023677},
		modelTuple{type64: 0x2700000027, matchRI: 0x2831, match64: 0x00000000, model64: 0x236770002367e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2832, match64: 0x00000000, model64: 0x2367e00023681},
		modelTuple{type64: 0x2700000027, matchRI: 0x2833, match64: 0x00000000, model64: 0x2368100023687},
		modelTuple{type64: 0x2700000027, matchRI: 0x2834, match64: 0x00000000, model64: 0x236870002368e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2835, match64: 0x00000000, model64: 0x2368e00023690},
		modelTuple{type64: 0x2700000027, matchRI: 0x2836, match64: 0x00000000, model64: 0x2369000023698},
		modelTuple{type64: 0x2700000027, matchRI: 0x2837, match64: 0x00000000, model64: 0x236980002369f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2838, match64: 0x00000000, model64: 0x2369f000236a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2839, match64: 0x00000000, model64: 0x236a2000236a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x283a, match64: 0x00000000, model64: 0x236a4000236ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x236ac000236bc, model64: 0x236bc000236c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x283b, match64: 0x00000000, model64: 0x236c5000236cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x283c, match64: 0x00000000, model64: 0x236cb000236d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x283d, match64: 0x00000000, model64: 0x236d4000236e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x283e, match64: 0x00000000, model64: 0x236e9000236f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x283f, match64: 0x00000000, model64: 0x236f0000236f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2840, match64: 0x00000000, model64: 0x236f900023704},
		modelTuple{type64: 0x2700000027, matchRI: 0x2841, match64: 0x00000000, model64: 0x237040002371c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2842, match64: 0x00000000, model64: 0x2371c00023726},
		modelTuple{type64: 0x2700000027, matchRI: 0x2843, match64: 0x00000000, model64: 0x2372600023730},
		modelTuple{type64: 0x2700000027, matchRI: 0x2844, match64: 0x00000000, model64: 0x2373000023735},
		modelTuple{type64: 0x2700000027, matchRI: 0x2845, match64: 0x00000000, model64: 0x2373500023739},
		modelTuple{type64: 0x2700000027, matchRI: 0x2846, match64: 0x00000000, model64: 0x237390002373f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2847, match64: 0x00000000, model64: 0x2373f00023744},
		modelTuple{type64: 0x2700000027, matchRI: 0x2848, match64: 0x00000000, model64: 0x2374400023749},
		modelTuple{type64: 0x2700000027, matchRI: 0x2849, match64: 0x00000000, model64: 0x2374900023751},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x237510002375b, model64: 0x2375b00023767},
		modelTuple{type64: 0x2700000027, matchRI: 0x284a, match64: 0x00000000, model64: 0x2376700023770},
		modelTuple{type64: 0x2700000027, matchRI: 0x284b, match64: 0x00000000, model64: 0x2377000023776},
		modelTuple{type64: 0x2700000027, matchRI: 0x284c, match64: 0x00000000, model64: 0x2377600023780},
		modelTuple{type64: 0x2700000027, matchRI: 0x284d, match64: 0x00000000, model64: 0x2378000023785},
		modelTuple{type64: 0x2700000027, matchRI: 0x284e, match64: 0x00000000, model64: 0x237850002378d},
		modelTuple{type64: 0x2700000027, matchRI: 0x284f, match64: 0x00000000, model64: 0x2378d00023795},
		modelTuple{type64: 0x2700000027, matchRI: 0x2850, match64: 0x00000000, model64: 0x23795000237a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2851, match64: 0x00000000, model64: 0x237a0000237a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2852, match64: 0x00000000, model64: 0x237a9000237b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2853, match64: 0x00000000, model64: 0x237b6000237bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2854, match64: 0x00000000, model64: 0x237bf000237c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2855, match64: 0x00000000, model64: 0x237c5000237cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2856, match64: 0x00000000, model64: 0x237cf000237d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2857, match64: 0x00000000, model64: 0x237d8000237e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2858, match64: 0x00000000, model64: 0x237e4000237ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2859, match64: 0x00000000, model64: 0x237ec000237f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x237f900023805, model64: 0x237f900023805},
		modelTuple{type64: 0x2700000027, matchRI: 0x285a, match64: 0x00000000, model64: 0x238050002380c},
		modelTuple{type64: 0x2700000027, matchRI: 0x285b, match64: 0x00000000, model64: 0x2380c00023813},
		modelTuple{type64: 0x2700000027, matchRI: 0x285c, match64: 0x00000000, model64: 0x238130002381e},
		modelTuple{type64: 0x2700000027, matchRI: 0x285d, match64: 0x00000000, model64: 0x2381e00023826},
		modelTuple{type64: 0x2700000027, matchRI: 0x285e, match64: 0x00000000, model64: 0x238260002382e},
		modelTuple{type64: 0x2700000027, matchRI: 0x285f, match64: 0x00000000, model64: 0x2382e00023835},
		modelTuple{type64: 0x2700000027, matchRI: 0x2860, match64: 0x00000000, model64: 0x238350002383d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2861, match64: 0x00000000, model64: 0x2383d00023844},
		modelTuple{type64: 0x2700000027, matchRI: 0x2862, match64: 0x00000000, model64: 0x238440002384f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2863, match64: 0x00000000, model64: 0x2384f00023858},
		modelTuple{type64: 0x2700000027, matchRI: 0x2864, match64: 0x00000000, model64: 0x2385800023861},
		modelTuple{type64: 0x2700000027, matchRI: 0x2865, match64: 0x00000000, model64: 0x238610002386a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2866, match64: 0x00000000, model64: 0x2386a00023872},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238720002387c, model64: 0x2387c00023887},
		modelTuple{type64: 0x2700000027, matchRI: 0x2867, match64: 0x00000000, model64: 0x2388700023893},
		modelTuple{type64: 0x2700000027, matchRI: 0x2868, match64: 0x00000000, model64: 0x238930002389a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2869, match64: 0x00000000, model64: 0x2389a000238a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x286a, match64: 0x00000000, model64: 0x238a7000238b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x286b, match64: 0x00000000, model64: 0x238b4000238bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x286c, match64: 0x00000000, model64: 0x238bc000238c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x286d, match64: 0x00000000, model64: 0x238c4000238d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x286e, match64: 0x00000000, model64: 0x238d2000238da},
		modelTuple{type64: 0x2700000027, matchRI: 0x286f, match64: 0x00000000, model64: 0x238da000238e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2870, match64: 0x00000000, model64: 0x238e3000238eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2871, match64: 0x00000000, model64: 0x238eb000238f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2872, match64: 0x00000000, model64: 0x238f700023903},
		modelTuple{type64: 0x2700000027, matchRI: 0x2873, match64: 0x00000000, model64: 0x239030002390e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2874, match64: 0x00000000, model64: 0x2390e00023916},
		modelTuple{type64: 0x2700000027, matchRI: 0x2875, match64: 0x00000000, model64: 0x2391600023924},
		modelTuple{type64: 0x2700000027, matchRI: 0x2876, match64: 0x00000000, model64: 0x239240002392d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2877, match64: 0x00000000, model64: 0x2392d0002393c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2878, match64: 0x00000000, model64: 0x2393c0002394e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2879, match64: 0x00000000, model64: 0x2394e00023963},
		modelTuple{type64: 0x2700000027, matchRI: 0x287a, match64: 0x00000000, model64: 0x2396300023971},
		modelTuple{type64: 0x2700000027, matchRI: 0x287b, match64: 0x00000000, model64: 0x239710002397e},
		modelTuple{type64: 0x2700000027, matchRI: 0x287c, match64: 0x00000000, model64: 0x2397e00023987},
		modelTuple{type64: 0x2700000027, matchRI: 0x287d, match64: 0x00000000, model64: 0x239870002398f},
		modelTuple{type64: 0x2700000027, matchRI: 0x287e, match64: 0x00000000, model64: 0x2398f0002399a},
		modelTuple{type64: 0x2700000027, matchRI: 0x287f, match64: 0x00000000, model64: 0x2399a000239a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2880, match64: 0x00000000, model64: 0x239a8000239c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2881, match64: 0x00000000, model64: 0x239c5000239d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239d2000239db, model64: 0x239db000239e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2882, match64: 0x00000000, model64: 0x239e4000239fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x2883, match64: 0x00000000, model64: 0x239fe00023a10},
		modelTuple{type64: 0x2700000027, matchRI: 0x2884, match64: 0x00000000, model64: 0x23a1000023a20},
		modelTuple{type64: 0x2700000027, matchRI: 0x2885, match64: 0x00000000, model64: 0x23a2000023a2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2886, match64: 0x00000000, model64: 0x23a2d00023a39},
		modelTuple{type64: 0x2700000027, matchRI: 0x2887, match64: 0x00000000, model64: 0x23a3900023a45},
		modelTuple{type64: 0x2700000027, matchRI: 0x2888, match64: 0x00000000, model64: 0x23a4500023a52},
		modelTuple{type64: 0x2700000027, matchRI: 0x2889, match64: 0x00000000, model64: 0x23a5200023a5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x288a, match64: 0x00000000, model64: 0x23a5b00023a65},
		modelTuple{type64: 0x2700000027, matchRI: 0x288b, match64: 0x00000000, model64: 0x23a6500023a75},
		modelTuple{type64: 0x2700000027, matchRI: 0x288c, match64: 0x00000000, model64: 0x23a7500023a83},
		modelTuple{type64: 0x2700000027, matchRI: 0x288d, match64: 0x00000000, model64: 0x23a8300023a90},
		modelTuple{type64: 0x2700000027, matchRI: 0x288e, match64: 0x00000000, model64: 0x23a9000023a9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a9f00023aa9, model64: 0x23aa900023ab2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23ab200023ad0, model64: 0x23ab200023ad0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23ad000023ad9, model64: 0x23ad900023ae3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23ae300023aec, model64: 0x23aec00023af6},
		modelTuple{type64: 0x2700000027, matchRI: 0x288f, match64: 0x00000000, model64: 0x23af600023b03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b0300023b12, model64: 0x23b0300023b12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b1200023b1c, model64: 0x23b1c00023b25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b2500023b2f, model64: 0x23b2f00023b39},
		modelTuple{type64: 0x2700000027, matchRI: 0x2890, match64: 0x00000000, model64: 0x23b3900023b46},
		modelTuple{type64: 0x2700000027, matchRI: 0x2891, match64: 0x00000000, model64: 0x23b4600023b55},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b5500023b5f, model64: 0x23b5f00023b6c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b6c00023b76, model64: 0x23b7600023b80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b8000023b8a, model64: 0x23b8a00023b93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b9300023b9d, model64: 0x23b9d00023bac},
		modelTuple{type64: 0x2700000027, matchRI: 0x2892, match64: 0x00000000, model64: 0x23bac00023bb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23bb900023bcc, model64: 0x23bb900023bcc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23bcc00023bdc, model64: 0x23bdc00023be7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2893, match64: 0x00000000, model64: 0x23be700023bee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23bee00023bf7, model64: 0x23bf700023bff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2894, match64: 0x00000000, model64: 0x23bff00023c0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2895, match64: 0x00000000, model64: 0x23c0b00023c18},
		modelTuple{type64: 0x2700000027, matchRI: 0x2896, match64: 0x00000000, model64: 0x23c1800023c21},
		modelTuple{type64: 0x2700000027, matchRI: 0x2897, match64: 0x00000000, model64: 0x23c2100023c29},
		modelTuple{type64: 0x2700000027, matchRI: 0x2898, match64: 0x00000000, model64: 0x23c2900023c31},
		modelTuple{type64: 0x2700000027, matchRI: 0x2899, match64: 0x00000000, model64: 0x23c3100023c3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x289a, match64: 0x00000000, model64: 0x23c3a00023c41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23c4100023c4b, model64: 0x23c4b00023c54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23c5400023c5e, model64: 0x23c5e00023c66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23c6600023c6f, model64: 0x23c6f00023c7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x289b, match64: 0x00000000, model64: 0x23c7a00023c83},
		modelTuple{type64: 0x2700000027, matchRI: 0x289c, match64: 0x00000000, model64: 0x23c8300023c88},
		modelTuple{type64: 0x2700000027, matchRI: 0x289d, match64: 0x00000000, model64: 0x23c8800023c8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x289e, match64: 0x00000000, model64: 0x23c8c00023c90},
		modelTuple{type64: 0x2700000027, matchRI: 0x289f, match64: 0x00000000, model64: 0x23c9000023c96},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a0, match64: 0x00000000, model64: 0x23c9600023c9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a1, match64: 0x00000000, model64: 0x23c9c00023ca2},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a2, match64: 0x00000000, model64: 0x23ca200023ca9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28a3, match64: 0x00000000, model64: 0x23ca900023cb5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28a4, match64: 0x00000000, model64: 0x23cb500023cbd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28a5, match64: 0x00000000, model64: 0x23cbd00023ccc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28a6, match64: 0x00000000, model64: 0x23ccc00023cd5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28a7, match64: 0x00000000, model64: 0x23cd500023cda},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28a8, match64: 0x00000000, model64: 0x23cda00023ce6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28a9, match64: 0x00000000, model64: 0x23ce600023cf6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28aa, match64: 0x00000000, model64: 0x23cf600023d03},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28ab, match64: 0x00000000, model64: 0x23d0300023d10},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28ac, match64: 0x00000000, model64: 0x23d1000023d18},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28ad, match64: 0x00000000, model64: 0x23d1800023d20},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28ae, match64: 0x00000000, model64: 0x23d2000023d28},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28af, match64: 0x00000000, model64: 0x23d2800023d2e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28b0, match64: 0x00000000, model64: 0x23d2e00023d37},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28b1, match64: 0x00000000, model64: 0x23d3700023d44},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28b2, match64: 0x00000000, model64: 0x23d4400023d50},
		modelTuple{type64: 0x6c9000006d3, matchRI: -0x0001, match64: 0x23d5000023d58, model64: 0x23d5800023d6f},
		modelTuple{type64: 0x6c9000006d3, matchRI: -0x0001, match64: 0x23d6f00023d78, model64: 0x23d7800023d92},
		modelTuple{type64: 0x24300000245, matchRI: 0x28b3, match64: 0x00000000, model64: 0x23d9200023da5},
		modelTuple{type64: 0x24300000245, matchRI: 0x28b4, match64: 0x00000000, model64: 0x23da500023db1},
		modelTuple{type64: 0x24300000245, matchRI: 0x28b5, match64: 0x00000000, model64: 0x23db100023dba},
		modelTuple{type64: 0x24300000245, matchRI: 0x28b6, match64: 0x00000000, model64: 0x23dba00023dc3},
		modelTuple{type64: 0x24300000245, matchRI: 0x28b7, match64: 0x00000000, model64: 0x23dc300023dca},
		modelTuple{type64: 0x24300000245, matchRI: 0x28b8, match64: 0x00000000, model64: 0x23dca00023dd1},
		modelTuple{type64: 0x24300000245, matchRI: 0x28b9, match64: 0x00000000, model64: 0x23dd100023ddb},
		modelTuple{type64: 0x24300000245, matchRI: 0x28ba, match64: 0x00000000, model64: 0x23ddb00023de8},
		modelTuple{type64: 0x24300000245, matchRI: 0x28bb, match64: 0x00000000, model64: 0x23de800023def},
		modelTuple{type64: 0x24300000245, matchRI: 0x28bc, match64: 0x00000000, model64: 0x23def00023df6},
		modelTuple{type64: 0x24300000245, matchRI: 0x28bd, match64: 0x00000000, model64: 0x23dca00023dd1},
		modelTuple{type64: 0x24300000245, matchRI: 0x28be, match64: 0x00000000, model64: 0x23df600023e00},
		modelTuple{type64: 0x24300000245, matchRI: 0x28bf, match64: 0x00000000, model64: 0x23e0000023e07},
		modelTuple{type64: 0x24300000245, matchRI: 0x28c0, match64: 0x00000000, model64: 0x23e0700023e12},
		modelTuple{type64: 0x24300000245, matchRI: 0x28c1, match64: 0x00000000, model64: 0x23e1200023e19},
		modelTuple{type64: 0x24300000245, matchRI: 0x28c2, match64: 0x00000000, model64: 0x23e1900023e2b},
		modelTuple{type64: 0x24300000245, matchRI: 0x28c3, match64: 0x00000000, model64: 0x23e2b00023e41},
		modelTuple{type64: 0x24300000245, matchRI: 0x28c4, match64: 0x00000000, model64: 0x23e1200023e19},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28c5, match64: 0x00000000, model64: 0x23e4100023e4c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28c6, match64: 0x00000000, model64: 0x23e4c00023e56},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28c7, match64: 0x00000000, model64: 0x23e5600023e60},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28c8, match64: 0x00000000, model64: 0x23e6000023e6a},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28c9, match64: 0x00000000, model64: 0x23e6a00023e79},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28ca, match64: 0x00000000, model64: 0x23e7900023e86},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28cb, match64: 0x00000000, model64: 0x23e8600023e92},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x23e9200023e97, model64: 0x23e9700023ea3},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x23ea300023eb6, model64: 0x23ea300023eb6},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x23eb600023ec8, model64: 0x23eb600023ec8},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28cc, match64: 0x00000000, model64: 0x23ec800023ed4},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28cd, match64: 0x00000000, model64: 0x23ed400023ee1},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28ce, match64: 0x00000000, model64: 0x23ee100023eef},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28cf, match64: 0x00000000, model64: 0x23eef00023efd},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28d0, match64: 0x00000000, model64: 0x23efd00023f0d},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28d1, match64: 0x00000000, model64: 0x23f0d00023f1c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28d2, match64: 0x00000000, model64: 0x23f1c00023f2f},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28d3, match64: 0x00000000, model64: 0x23f2f00023f3f},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28d4, match64: 0x00000000, model64: 0x23f3f00023f51},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28d5, match64: 0x00000000, model64: 0x23f5100023f65},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28d6, match64: 0x00000000, model64: 0x23f6500023f72},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28d7, match64: 0x00000000, model64: 0x23f7200023f80},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28d8, match64: 0x00000000, model64: 0x23eef00023efd},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28d9, match64: 0x00000000, model64: 0x23f8000023f90},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28da, match64: 0x00000000, model64: 0x23f9000023fa1},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28db, match64: 0x00000000, model64: 0x23fa100023fb1},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28dc, match64: 0x00000000, model64: 0x23fb100023fc2},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28dd, match64: 0x00000000, model64: 0x23fc200023fd9},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28de, match64: 0x00000000, model64: 0x23fd900023fea},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28df, match64: 0x00000000, model64: 0x23fea00024001},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28e0, match64: 0x00000000, model64: 0x240010002400f},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28e1, match64: 0x00000000, model64: 0x2400f0002401c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28e2, match64: 0x00000000, model64: 0x2401c0002402e},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28e3, match64: 0x00000000, model64: 0x2402e0002403c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28e4, match64: 0x00000000, model64: 0x2403c0002404a},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28e5, match64: 0x00000000, model64: 0x2404a0002405c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28e6, match64: 0x00000000, model64: 0x2405c00024070},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28e7, match64: 0x00000000, model64: 0x2407000024085},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28e8, match64: 0x00000000, model64: 0x2408500024097},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28e9, match64: 0x00000000, model64: 0x2400f0002401c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28ea, match64: 0x00000000, model64: 0x24097000240a8},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28eb, match64: 0x00000000, model64: 0x240a8000240b9},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28ec, match64: 0x00000000, model64: 0x240b9000240cb},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28ed, match64: 0x00000000, model64: 0x240cb000240df},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28ee, match64: 0x00000000, model64: 0x240df000240ec},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28ef, match64: 0x00000000, model64: 0x240ec000240fe},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28f0, match64: 0x00000000, model64: 0x240fe00024113},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28f1, match64: 0x00000000, model64: 0x2411300024123},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28f2, match64: 0x00000000, model64: 0x2412300024135},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28f3, match64: 0x00000000, model64: 0x2413500024143},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28f4, match64: 0x00000000, model64: 0x2414300024155},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28f5, match64: 0x00000000, model64: 0x2415500024168},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28f6, match64: 0x00000000, model64: 0x241680002417c},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28f7, match64: 0x00000000, model64: 0x2417c00024191},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28f8, match64: 0x00000000, model64: 0x24191000241a3},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28f9, match64: 0x00000000, model64: 0x241a3000241b3},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28fa, match64: 0x00000000, model64: 0x241b3000241c4},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28fb, match64: 0x00000000, model64: 0x241c4000241d4},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28fc, match64: 0x00000000, model64: 0x241d4000241e4},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28fd, match64: 0x00000000, model64: 0x241e4000241f2},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28fe, match64: 0x00000000, model64: 0x241f200024203},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x28ff, match64: 0x00000000, model64: 0x2420300024214},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2900, match64: 0x00000000, model64: 0x2421400024220},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2901, match64: 0x00000000, model64: 0x2422000024233},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2902, match64: 0x00000000, model64: 0x2423300024243},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2903, match64: 0x00000000, model64: 0x2424300024250},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2904, match64: 0x00000000, model64: 0x242500002425d},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2905, match64: 0x00000000, model64: 0x2425d0002426d},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2906, match64: 0x00000000, model64: 0x2426d00024282},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2907, match64: 0x00000000, model64: 0x2428200024293},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2908, match64: 0x00000000, model64: 0x24293000242a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2909, match64: 0x00000000, model64: 0x242a0000242a8},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x242a8000242b3, model64: 0x242b3000242be},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x290a, match64: 0x00000000, model64: 0x242be000242cc},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x242cc000242db, model64: 0x242cc000242db},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x290b, match64: 0x00000000, model64: 0x242db000242e5},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x290c, match64: 0x00000000, model64: 0x242e5000242ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x290d, match64: 0x00000000, model64: 0x242ef000242f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x290e, match64: 0x00000000, model64: 0x242f600024301},
		modelTuple{type64: 0x2700000027, matchRI: 0x290f, match64: 0x00000000, model64: 0x243010002430a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2910, match64: 0x00000000, model64: 0x2430a0002430f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2911, match64: 0x00000000, model64: 0x2430a0002430f},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2912, match64: 0x00000000, model64: 0x9dbc00009dc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2913, match64: 0x00000000, model64: 0x2430f00024314},
		modelTuple{type64: 0x2700000027, matchRI: 0x2914, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2916, match64: 0x00000000, model64: 0x243180002431c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2918, match64: 0x00000000, model64: 0x2432000024328},
		modelTuple{type64: 0x2700000027, matchRI: 0x2919, match64: 0x00000000, model64: 0x2432800024332},
		modelTuple{type64: 0x2700000027, matchRI: 0x291a, match64: 0x00000000, model64: 0x2433200024339},
		modelTuple{type64: 0x2700000027, matchRI: 0x291b, match64: 0x00000000, model64: 0x2433900024343},
		modelTuple{type64: 0x2700000027, matchRI: 0x291c, match64: 0x00000000, model64: 0x2434300024349},
		modelTuple{type64: 0x2700000027, matchRI: 0x291d, match64: 0x00000000, model64: 0x243490002434f},
		modelTuple{type64: 0x2700000027, matchRI: 0x291e, match64: 0x00000000, model64: 0x2434f00024357},
		modelTuple{type64: 0x2700000027, matchRI: 0x291f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2920, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2921, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2923, match64: 0x00000000, model64: 0x2435b0002436b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2924, match64: 0x00000000, model64: 0x2436b00024375},
		modelTuple{type64: 0x2700000027, matchRI: 0x2925, match64: 0x00000000, model64: 0x2437500024384},
		modelTuple{type64: 0xae980000aead, matchRI: 0x2926, match64: 0x00000000, model64: 0x243840002438a},
		modelTuple{type64: 0x24300000245, matchRI: 0x2927, match64: 0x00000000, model64: 0x2438a00024391},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2439e000243a4, model64: 0x243a4000243aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x292a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x292c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x292d, match64: 0x00000000, model64: 0x243b0000243b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x292e, match64: 0x00000000, model64: 0x243b2000243b9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x243b9000243c2, model64: 0x243c2000243cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2930, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x243d3000243d8, model64: 0x243d8000243e7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x243e7000243ee, model64: 0x243e7000243ee},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x243ee000243f5, model64: 0x243f500024404},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2440900024410},
		modelTuple{type64: 0x2700000027, matchRI: 0x2932, match64: 0x00000000, model64: 0x2441b00024429},
		modelTuple{type64: 0x2700000027, matchRI: 0x2933, match64: 0x00000000, model64: 0xf2790000f284},
		modelTuple{type64: 0x2700000027, matchRI: 0x2934, match64: 0x00000000, model64: 0x932600009331},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2443700024440, model64: 0x244400002444b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2938, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2939, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x293c, match64: 0x00000000, model64: 0x4a9a00004aa0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2445b00024469, model64: 0x2446900024472},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x244720002447d, model64: 0x2447d00024483},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x244830002448f, model64: 0x2448f00024496},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24496000244a2, model64: 0x244a2000244a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x293d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x244bb000244ce, model64: 0x244ce000244d4},
		modelTuple{type64: 0x24300000245, matchRI: 0x2941, match64: 0x00000000, model64: 0x244d4000244db},
		modelTuple{type64: 0x2700000027, matchRI: 0x2942, match64: 0x00000000, model64: 0x244db000244e5},
		modelTuple{type64: 0x26ba000026c7, matchRI: 0x2943, match64: 0x00000000, model64: 0x244e5000244f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x244fd0002450c, model64: 0x2450c00024512},
		modelTuple{type64: 0x2700000027, matchRI: 0x2945, match64: 0x00000000, model64: 0x2451200024519},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2451900024524, model64: 0x2451200024519},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x245240002452f, model64: 0x2452f00024536},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2453600024544, model64: 0x245440002454c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2454c00024555, model64: 0x245550002455e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2455e00024567, model64: 0x2456700024571},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x245710002457a, model64: 0x2457a00024584},
		modelTuple{type64: 0x2700000027, matchRI: 0x2946, match64: 0x00000000, model64: 0x245840002458c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2458c00024595, model64: 0x245950002459e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2459e000245a7, model64: 0x245a7000245b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x245b0000245bc, model64: 0x245bc000245c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x245c4000245cc, model64: 0x245cc000245d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x245d7000245e0, model64: 0x245e0000245ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2947, match64: 0x00000000, model64: 0x245ec000245f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x245f6000245ff, model64: 0x245ff00024608},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2460b00024610, model64: 0x2461000024618},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2461800024620, model64: 0x246200002462a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2462a00024630, model64: 0x246300002463a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2949, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x294b, match64: 0x00000000, model64: 0xc8d00000c8d3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x294c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x294e, match64: 0x00000000, model64: 0x246440002464b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2464b00024655, model64: 0x246550002465d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2465d00024665, model64: 0x246650002466e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2466e00024672, model64: 0x2467200024677},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x246770002467e, model64: 0x2467e00024687},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x246870002468d, model64: 0x2468d00024693},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2469300024699, model64: 0x246990002469f},
		modelTuple{type64: 0x2700000027, matchRI: 0x294f, match64: 0x00000000, model64: 0x2469f000246a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x246a4000246a8, model64: 0x246a4000246a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x246a8000246ae, model64: 0x246a8000246ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x2950, match64: 0x00000000, model64: 0x246ae000246b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x246b6000246c0, model64: 0x246c0000246ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x246ca000246d3, model64: 0x246d3000246dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2951, match64: 0x00000000, model64: 0x246dd000246e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2952, match64: 0x00000000, model64: 0x246e7000246f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2953, match64: 0x00000000, model64: 0x246dd000246e7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x246fb00024702},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x147520001475a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2957, match64: 0x00000000, model64: 0x1909e000190a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2958, match64: 0x00000000, model64: 0x2470a00024716},
		modelTuple{type64: 0x2700000027, matchRI: 0x295a, match64: 0x00000000, model64: 0x2471b00024722},
		modelTuple{type64: 0x2700000027, matchRI: 0x295c, match64: 0x00000000, model64: 0x247280002472f},
		modelTuple{type64: 0x2700000027, matchRI: 0x295e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x295f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2961, match64: 0x00000000, model64: 0x247360002473e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2962, match64: 0x00000000, model64: 0x2473e00024747},
		modelTuple{type64: 0x2700000027, matchRI: 0x2963, match64: 0x00000000, model64: 0x247470002474e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2964, match64: 0x00000000, model64: 0x2474e00024754},
		modelTuple{type64: 0x2700000027, matchRI: 0x2965, match64: 0x00000000, model64: 0x247540002475c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2966, match64: 0x00000000, model64: 0x2475c00024767},
		modelTuple{type64: 0x2700000027, matchRI: 0x2967, match64: 0x00000000, model64: 0x247670002476e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2968, match64: 0x00000000, model64: 0x7eb000007ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2476e00024775, model64: 0x2477500024780},
		modelTuple{type64: 0x2700000027, matchRI: 0x2969, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x296b, match64: 0x00000000, model64: 0x7d4f00007d52},
		modelTuple{type64: 0x2700000027, matchRI: 0x296d, match64: 0x00000000, model64: 0x2478e00024796},
		modelTuple{type64: 0x2700000027, matchRI: 0x296f, match64: 0x00000000, model64: 0x2479a000247a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x247a5000247aa, model64: 0x247a5000247aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2971, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2972, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2976, match64: 0x00000000, model64: 0x247b8000247c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2977, match64: 0x00000000, model64: 0x247c8000247d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2978, match64: 0x00000000, model64: 0x247d2000247de},
		modelTuple{type64: 0x2700000027, matchRI: 0x2979, match64: 0x00000000, model64: 0x247de000247e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x297a, match64: 0x00000000, model64: 0x247e9000247f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x297b, match64: 0x00000000, model64: 0x247f600024802},
		modelTuple{type64: 0x2700000027, matchRI: 0x297c, match64: 0x00000000, model64: 0x248020002480f},
		modelTuple{type64: 0x2700000027, matchRI: 0x297d, match64: 0x00000000, model64: 0x2480f0002481c},
		modelTuple{type64: 0x2700000027, matchRI: 0x297e, match64: 0x00000000, model64: 0x2481c00024827},
		modelTuple{type64: 0x2700000027, matchRI: 0x297f, match64: 0x00000000, model64: 0x2482700024836},
		modelTuple{type64: 0x2700000027, matchRI: 0x2980, match64: 0x00000000, model64: 0x2483600024843},
		modelTuple{type64: 0x2700000027, matchRI: 0x2981, match64: 0x00000000, model64: 0x2484300024850},
		modelTuple{type64: 0x2700000027, matchRI: 0x2982, match64: 0x00000000, model64: 0x248500002485c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2983, match64: 0x00000000, model64: 0x2485c0002486a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2984, match64: 0x00000000, model64: 0x2486a00024876},
		modelTuple{type64: 0x2700000027, matchRI: 0x2985, match64: 0x00000000, model64: 0x2487600024883},
		modelTuple{type64: 0x2700000027, matchRI: 0x2986, match64: 0x00000000, model64: 0x2488300024895},
		modelTuple{type64: 0x2700000027, matchRI: 0x2987, match64: 0x00000000, model64: 0x24895000248a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2988, match64: 0x00000000, model64: 0x248a2000248ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x2989, match64: 0x00000000, model64: 0x248ae000248ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x298a, match64: 0x00000000, model64: 0x248ba000248c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x248c5000248d1, model64: 0x248d1000248dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x248dd000248e9, model64: 0x248e9000248f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x248f500024901, model64: 0x249010002490d},
		modelTuple{type64: 0x2700000027, matchRI: 0x298c, match64: 0x00000000, model64: 0x3150000031a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x298f, match64: 0x00000000, model64: 0x2491800024927},
		modelTuple{type64: 0x2700000027, matchRI: 0x2990, match64: 0x00000000, model64: 0x2492700024935},
		modelTuple{type64: 0x2700000027, matchRI: 0x2991, match64: 0x00000000, model64: 0x2493500024947},
		modelTuple{type64: 0x2700000027, matchRI: 0x2992, match64: 0x00000000, model64: 0x2494700024950},
		modelTuple{type64: 0x2700000027, matchRI: 0x2993, match64: 0x00000000, model64: 0x249500002495d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2994, match64: 0x00000000, model64: 0x2495d0002496b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2995, match64: 0x00000000, model64: 0x2496b00024975},
		modelTuple{type64: 0x2700000027, matchRI: 0x2996, match64: 0x00000000, model64: 0x249750002497f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2997, match64: 0x00000000, model64: 0x2497f00024987},
		modelTuple{type64: 0x2700000027, matchRI: 0x2998, match64: 0x00000000, model64: 0x249870002498f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2999, match64: 0x00000000, model64: 0x2498f00024998},
		modelTuple{type64: 0x2700000027, matchRI: 0x299a, match64: 0x00000000, model64: 0x24998000249a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x299b, match64: 0x00000000, model64: 0x249a4000249b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x299c, match64: 0x00000000, model64: 0x249b1000249bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x299d, match64: 0x00000000, model64: 0x249bd000249c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x299e, match64: 0x00000000, model64: 0x39100000393},
		modelTuple{type64: 0x2700000027, matchRI: 0x299f, match64: 0x00000000, model64: 0x249c7000249d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a0, match64: 0x00000000, model64: 0x249d0000249d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a1, match64: 0x00000000, model64: 0x249d8000249e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a2, match64: 0x00000000, model64: 0x249e7000249f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a3, match64: 0x00000000, model64: 0x249f400024a02},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a4, match64: 0x00000000, model64: 0x24a0200024a12},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a5, match64: 0x00000000, model64: 0x24a1200024a21},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a6, match64: 0x00000000, model64: 0x24a2100024a31},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a7, match64: 0x00000000, model64: 0x24a3100024a3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24a3a00024a42, model64: 0x24a4200024a4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24a4b00024a50, model64: 0x24a5000024a59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24a5900024a5f, model64: 0x24a5f00024a69},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a8, match64: 0x00000000, model64: 0x24a6900024a72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24a7200024a77, model64: 0x24a7700024a83},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a9, match64: 0x00000000, model64: 0x24a8300024a90},
		modelTuple{type64: 0x2700000027, matchRI: 0x29aa, match64: 0x00000000, model64: 0x24a9000024a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ab, match64: 0x00000000, model64: 0x24a9800024aa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ac, match64: 0x00000000, model64: 0x24aa500024ab3},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ad, match64: 0x00000000, model64: 0x24ab300024ac1},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ae, match64: 0x00000000, model64: 0x24ac100024ac7},
		modelTuple{type64: 0x2700000027, matchRI: 0x29af, match64: 0x00000000, model64: 0x24ac700024ad1},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b0, match64: 0x00000000, model64: 0x24ad100024adf},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b1, match64: 0x00000000, model64: 0x24adf00024aee},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b2, match64: 0x00000000, model64: 0x24aee00024af8},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b3, match64: 0x00000000, model64: 0x24af800024aff},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b4, match64: 0x00000000, model64: 0x24aff00024b0c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24b0c00024b12, model64: 0x24b1200024b1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b5, match64: 0x00000000, model64: 0x24b1c00024b23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24b2300024b29, model64: 0x24b2900024b37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24b3700024b3e, model64: 0x24b3e00024b4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24b4b00024b51, model64: 0x24b5100024b5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24b5f00024b64, model64: 0x24b6400024b6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24b6f00024b75, model64: 0x24b7500024b86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24b8600024b8c, model64: 0x24b8c00024b99},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b6, match64: 0x00000000, model64: 0x24b9900024ba4},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b7, match64: 0x00000000, model64: 0x24ba400024bae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24bae00024bb3, model64: 0x24bb300024bbd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24bbd00024bc2, model64: 0x24bc200024bc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24bc900024bce, model64: 0x24bce00024bda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24bda00024be0, model64: 0x24be000024bf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b8, match64: 0x00000000, model64: 0x24bf000024bf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b9, match64: 0x00000000, model64: 0x24bf800024bff},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ba, match64: 0x00000000, model64: 0x24bff00024c09},
		modelTuple{type64: 0x2700000027, matchRI: 0x29bb, match64: 0x00000000, model64: 0x24c0900024c10},
		modelTuple{type64: 0x2700000027, matchRI: 0x29bc, match64: 0x00000000, model64: 0x24c1000024c18},
		modelTuple{type64: 0x2700000027, matchRI: 0x29bd, match64: 0x00000000, model64: 0x24c1800024c1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x29be, match64: 0x00000000, model64: 0x24c1b00024c1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x29bf, match64: 0x00000000, model64: 0x24c1e00024c24},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c0, match64: 0x00000000, model64: 0x24c2400024c2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c1, match64: 0x00000000, model64: 0x24c2c00024c38},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c2, match64: 0x00000000, model64: 0x24c3800024c3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c3, match64: 0x00000000, model64: 0x24c3c00024c44},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c4, match64: 0x00000000, model64: 0x24c4400024c4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c5, match64: 0x00000000, model64: 0x22050000220a},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c6, match64: 0x00000000, model64: 0x1d82d0001d835},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c7, match64: 0x00000000, model64: 0x24c4c00024c56},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c8, match64: 0x00000000, model64: 0x24c5600024c5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c9, match64: 0x00000000, model64: 0x21e9500021e97},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ca, match64: 0x00000000, model64: 0x24c5d00024c64},
		modelTuple{type64: 0x2700000027, matchRI: 0x29cb, match64: 0x00000000, model64: 0x24c6400024c6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x29cc, match64: 0x00000000, model64: 0x24c6e00024c79},
		modelTuple{type64: 0x2700000027, matchRI: 0x29cd, match64: 0x00000000, model64: 0x24c7900024c81},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ce, match64: 0x00000000, model64: 0x24c8100024c89},
		modelTuple{type64: 0x2700000027, matchRI: 0x29cf, match64: 0x00000000, model64: 0x24c8900024c94},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d0, match64: 0x00000000, model64: 0x24c9400024c9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d1, match64: 0x00000000, model64: 0x24c9d00024ca6},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d2, match64: 0x00000000, model64: 0x24ca600024cac},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d3, match64: 0x00000000, model64: 0x24cac00024cb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d4, match64: 0x00000000, model64: 0x24cb500024cbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d5, match64: 0x00000000, model64: 0x24cbf00024cc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d6, match64: 0x00000000, model64: 0x24cc500024cca},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d7, match64: 0x00000000, model64: 0x24cca00024cd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d8, match64: 0x00000000, model64: 0x24cd500024ce3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24ce300024ce8, model64: 0x24ce800024cf3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24cf300024cf7, model64: 0x24cf700024cfe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24cfe00024d02, model64: 0x24d0200024d0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d9, match64: 0x00000000, model64: 0x24d0a00024d17},
		modelTuple{type64: 0x2700000027, matchRI: 0x29da, match64: 0x00000000, model64: 0x24d1700024d20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24d2000024d2c, model64: 0x24d2000024d2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24d2c00024d39, model64: 0x24d3900024d42},
		modelTuple{type64: 0x2700000027, matchRI: 0x29db, match64: 0x00000000, model64: 0x24d4200024d4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24d4d00024d51, model64: 0x24d5100024d55},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24d5500024d5a, model64: 0x24d5a00024d62},
		modelTuple{type64: 0x2700000027, matchRI: 0x29dc, match64: 0x00000000, model64: 0x24d6200024d69},
		modelTuple{type64: 0x2700000027, matchRI: 0x29dd, match64: 0x00000000, model64: 0x24d6900024d71},
		modelTuple{type64: 0x2700000027, matchRI: 0x29de, match64: 0x00000000, model64: 0x24d7100024d75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24d7500024d7a, model64: 0xc6210000c627},
		modelTuple{type64: 0x2700000027, matchRI: 0x29df, match64: 0x00000000, model64: 0x24d7a00024d82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24d8200024d86, model64: 0x24d8600024d92},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e0, match64: 0x00000000, model64: 0x24d9200024d9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24d9b00024da8, model64: 0x24da800024db0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24db000024db5, model64: 0x24db500024dbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e1, match64: 0x00000000, model64: 0x24dbd00024dc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e2, match64: 0x00000000, model64: 0x24dc100024dc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e3, match64: 0x00000000, model64: 0x24dc600024dd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e4, match64: 0x00000000, model64: 0x24dd300024de3},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e5, match64: 0x00000000, model64: 0x24de300024df2},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e6, match64: 0x00000000, model64: 0x24df200024dfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e7, match64: 0x00000000, model64: 0x24dfe00024e0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e8, match64: 0x00000000, model64: 0x24e0b00024e15},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e9, match64: 0x00000000, model64: 0x24e1500024e23},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ea, match64: 0x00000000, model64: 0x24e2300024e30},
		modelTuple{type64: 0x2700000027, matchRI: 0x29eb, match64: 0x00000000, model64: 0x24e3000024e38},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ec, match64: 0x00000000, model64: 0x24e3800024e45},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ed, match64: 0x00000000, model64: 0x24e4500024e52},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ee, match64: 0x00000000, model64: 0x24e5200024e5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ef, match64: 0x00000000, model64: 0x24e5a00024e62},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f0, match64: 0x00000000, model64: 0x24e6200024e6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f1, match64: 0x00000000, model64: 0x24e6e00024e7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f2, match64: 0x00000000, model64: 0x24e7b00024e83},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f3, match64: 0x00000000, model64: 0x24e8300024e8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f4, match64: 0x00000000, model64: 0x24e8c00024e95},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f5, match64: 0x00000000, model64: 0x24e9500024ea3},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f6, match64: 0x00000000, model64: 0x24ea300024eab},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f7, match64: 0x00000000, model64: 0x24eab00024ebb},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f8, match64: 0x00000000, model64: 0x24ebb00024ec3},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f9, match64: 0x00000000, model64: 0x24e1500024e23},
		modelTuple{type64: 0x2700000027, matchRI: 0x29fa, match64: 0x00000000, model64: 0x24ec300024ed0},
		modelTuple{type64: 0x2700000027, matchRI: 0x29fb, match64: 0x00000000, model64: 0x24d0a00024d17},
		modelTuple{type64: 0x2700000027, matchRI: 0x29fc, match64: 0x00000000, model64: 0x24ed000024ed8},
		modelTuple{type64: 0x2700000027, matchRI: 0x29fd, match64: 0x00000000, model64: 0x24ed800024ee4},
		modelTuple{type64: 0x2700000027, matchRI: 0x29fe, match64: 0x00000000, model64: 0x24ee400024ef1},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ff, match64: 0x00000000, model64: 0x24ef100024efe},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a00, match64: 0x00000000, model64: 0x24efe00024f06},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a01, match64: 0x00000000, model64: 0x24f0600024f12},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a02, match64: 0x00000000, model64: 0x24f1200024f1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a03, match64: 0x00000000, model64: 0x24f1a00024f25},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a04, match64: 0x00000000, model64: 0x24e8c00024e95},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a05, match64: 0x00000000, model64: 0x24f2500024f2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a06, match64: 0x00000000, model64: 0x24f2d00024f3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a07, match64: 0x00000000, model64: 0x24f3a00024f46},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a08, match64: 0x00000000, model64: 0x24f4600024f53},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a09, match64: 0x00000000, model64: 0x24f5300024f60},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a0a, match64: 0x00000000, model64: 0x24f6000024f68},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a0b, match64: 0x00000000, model64: 0x24f6800024f71},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a0c, match64: 0x00000000, model64: 0x24f7100024f7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a0d, match64: 0x00000000, model64: 0x24f7a00024f8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a0e, match64: 0x00000000, model64: 0x24f8a00024f9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a0f, match64: 0x00000000, model64: 0x24f9d00024fab},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a10, match64: 0x00000000, model64: 0x24fab00024fb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a11, match64: 0x00000000, model64: 0x24fb300024fbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a12, match64: 0x00000000, model64: 0x24fbc00024fc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a13, match64: 0x00000000, model64: 0x24fc700024fd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a14, match64: 0x00000000, model64: 0x24fd000024fd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a15, match64: 0x00000000, model64: 0x24fd800024fe0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a16, match64: 0x00000000, model64: 0x24fe000024fe9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a17, match64: 0x00000000, model64: 0x24fe900024ff4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a18, match64: 0x00000000, model64: 0x24ff400025001},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a19, match64: 0x00000000, model64: 0x250010002500e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2500e00025016, model64: 0x2501600025024},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x250240002502c, model64: 0x2502c0002503a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2503a00025043, model64: 0x250430002504c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2504c00025054, model64: 0x250540002505d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2505d00025066, model64: 0x2506600025075},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x250750002507e, model64: 0x2507e0002508d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2508d00025095, model64: 0x25095000250a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x250a3000250ac, model64: 0x250ac000250ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x250ba000250c2, model64: 0x250c2000250cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x250cf000250d7, model64: 0x250d7000250e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x250e7000250ef, model64: 0x250ef000250f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a1a, match64: 0x00000000, model64: 0x250f800025106},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a1b, match64: 0x00000000, model64: 0x24f6800024f71},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a1c, match64: 0x00000000, model64: 0x2510600025113},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a1d, match64: 0x00000000, model64: 0xad360000ad3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a1e, match64: 0x00000000, model64: 0x251130002511b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2511b0002511f, model64: 0x2511f00025127},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x251270002512c, model64: 0x2512c00025137},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x251370002513d, model64: 0x2513d00025149},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x251490002514f, model64: 0x2514f0002515d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2515d00025161, model64: 0x251610002516c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2516c00025170, model64: 0x251700002517c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2517c00025180, model64: 0x251800002518d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2518d00025193, model64: 0x25193000251a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x251a2000251a7, model64: 0x251a7000251b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x251b0000251b4, model64: 0x251b4000251bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x251bb000251c1, model64: 0x251c1000251cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x251cd000251d1, model64: 0x251d1000251e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x251e0000251e4, model64: 0x251e4000251ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x251ef000251f3, model64: 0x251f3000251fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a1f, match64: 0x00000000, model64: 0x251fe00025209},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a20, match64: 0x00000000, model64: 0x2520900025215},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x252150002521a, model64: 0x2521a00025224},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x252240002522a, model64: 0x2522a00025236},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x252360002523c, model64: 0x2523c00025248},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x252480002524e, model64: 0x2524e00025258},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2525800025262, model64: 0x252620002526c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2526c00025271, model64: 0x2526c00025271},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a21, match64: 0x00000000, model64: 0x2527100025280},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2528000025286, model64: 0x252860002529a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2529a000252a0, model64: 0x252a0000252b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a22, match64: 0x00000000, model64: 0x252b0000252b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a23, match64: 0x00000000, model64: 0x252b7000252bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a24, match64: 0x00000000, model64: 0x252bc000252c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x252c4000252c8, model64: 0x252c8000252d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x252d1000252d5, model64: 0x252d5000252dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x252dc000252e0, model64: 0x252e0000252e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x252e8000252ec, model64: 0x252ec000252f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a25, match64: 0x00000000, model64: 0x252f3000252ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x252ff00025304, model64: 0x253040002530e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2530e00025312, model64: 0x253120002531b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2531b0002531f, model64: 0x2531f00025328},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x253280002532c, model64: 0x2532c00025332},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2533200025336, model64: 0x253360002533f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a26, match64: 0x00000000, model64: 0x2533f0002534a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2534a00025350, model64: 0x253500002535b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2535b00025361, model64: 0x253610002536c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a27, match64: 0x00000000, model64: 0x2536c00025377},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x253770002537d, model64: 0x2537d0002538b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2538b00025391, model64: 0x253910002539f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a28, match64: 0x00000000, model64: 0x2539f000253a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a29, match64: 0x00000000, model64: 0x253a5000253ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a2a, match64: 0x00000000, model64: 0x253ab000253b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x253b2000253b8, model64: 0x253b8000253c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x253c3000253c7, model64: 0x253c7000253d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x253d0000253d6, model64: 0x253d6000253e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a2b, match64: 0x00000000, model64: 0x253e2000253e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a2c, match64: 0x00000000, model64: 0x253e9000253ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a2d, match64: 0x00000000, model64: 0x253ef000253f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x253f8000253fd, model64: 0x253fd00025408},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a2e, match64: 0x00000000, model64: 0x24ac100024ac7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x254080002540d, model64: 0x2540d00025417},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x254170002541c, model64: 0x2541c00025423},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2542300025429, model64: 0x2542900025434},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a2f, match64: 0x00000000, model64: 0x254340002543f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2543f00025444, model64: 0x254440002544a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2544a00025451, model64: 0x2544a00025451},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a30, match64: 0x00000000, model64: 0x2545100025455},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x254550002545b, model64: 0x251fe00025209},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfaac0000fab0, model64: 0x2545b00025460},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2546000025464, model64: 0x254640002546a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a31, match64: 0x00000000, model64: 0x1c3000001c33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2546a0002546f, model64: 0x2546f00025476},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a32, match64: 0x00000000, model64: 0x254760002547b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a33, match64: 0x00000000, model64: 0x2547b0002547f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a34, match64: 0x00000000, model64: 0x2547f00025484},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a35, match64: 0x00000000, model64: 0x2548400025491},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a36, match64: 0x00000000, model64: 0x25491000254a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a37, match64: 0x00000000, model64: 0x254a0000254a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a38, match64: 0x00000000, model64: 0x254a6000254b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a39, match64: 0x00000000, model64: 0x254b2000254c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a3a, match64: 0x00000000, model64: 0x254c3000254c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x254c9000254d2, model64: 0x254d2000254e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x254e0000254e8, model64: 0x254e8000254f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x254f3000254fb, model64: 0x254fb0002550b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2550b00025513, model64: 0x255130002551b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a3b, match64: 0x00000000, model64: 0x2551b00025528},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a3c, match64: 0x00000000, model64: 0x2551b00025528},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a3d, match64: 0x00000000, model64: 0x255280002552f},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2a3e, match64: 0x00000000, model64: 0x2552f00025539},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x2553900025541, model64: 0x2554100025552},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a3f, match64: 0x00000000, model64: 0x255520002555e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a40, match64: 0x00000000, model64: 0x2555e0002556c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a41, match64: 0x00000000, model64: 0x2556c0002557a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a42, match64: 0x00000000, model64: 0x2557a0002558a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a43, match64: 0x00000000, model64: 0x2558a00025590},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a44, match64: 0x00000000, model64: 0x2559000025599},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a45, match64: 0x00000000, model64: 0x25599000255a2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a46, match64: 0x00000000, model64: 0x255a2000255b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a47, match64: 0x00000000, model64: 0x255b3000255bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a48, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a49, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a4a, match64: 0x00000000, model64: 0xad360000ad3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x255bf000255cc, model64: 0x255cc000255d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x255d5000255da, model64: 0x255da000255e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a4b, match64: 0x00000000, model64: 0x255e3000255ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x255ed000255fb, model64: 0x255fb00025605},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a4c, match64: 0x00000000, model64: 0x24f6000024f68},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a4d, match64: 0x00000000, model64: 0x24fab00024fb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a4e, match64: 0x00000000, model64: 0x24fb300024fbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a4f, match64: 0x00000000, model64: 0xad360000ad3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a50, match64: 0x00000000, model64: 0xad360000ad3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a51, match64: 0x00000000, model64: 0x256050002560f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a52, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a53, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a54, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2561200025616, model64: 0xa4720000a474},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x256160002561b, model64: 0x2561b00025623},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2562300025628, model64: 0x256280002562f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2562f00025634, model64: 0x256340002563b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2563b00025640, model64: 0x2563b00025640},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2564000025645, model64: 0x2564000025645},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x256450002564a, model64: 0x2564a00025650},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2565000025655, model64: 0x256550002565c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2565c00025661, model64: 0x2566100025668},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x256680002566d, model64: 0x256680002566d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2566d00025674, model64: 0x256740002567b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2567b0002567f, model64: 0x2567f00025687},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x256870002568b, model64: 0x2568b00025690},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2569000025693, model64: 0x2569300025698},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a56, match64: 0x00000000, model64: 0x256980002569f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a57, match64: 0x00000000, model64: 0x2569f000256a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a58, match64: 0x00000000, model64: 0x256a3000256ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a59, match64: 0x00000000, model64: 0x256ad000256b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a5a, match64: 0x00000000, model64: 0x256b6000256bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a5b, match64: 0x00000000, model64: 0x256bf000256c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a5c, match64: 0x00000000, model64: 0x256c6000256ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a5d, match64: 0x00000000, model64: 0x256ca000256d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a5e, match64: 0x00000000, model64: 0x256d5000256da},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a5f, match64: 0x00000000, model64: 0x256da000256e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a60, match64: 0x00000000, model64: 0x256e9000256f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a61, match64: 0x00000000, model64: 0x256f4000256f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a62, match64: 0x00000000, model64: 0x256f800025702},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a63, match64: 0x00000000, model64: 0x257020002570b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a64, match64: 0x00000000, model64: 0x2570b00025714},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a65, match64: 0x00000000, model64: 0x257140002571c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a66, match64: 0x00000000, model64: 0x2571c00025721},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x257210002572a, model64: 0x2572a00025733},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x257330002573a, model64: 0x2573a0002573d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a6b, match64: 0x00000000, model64: 0x1245f00012466},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a6c, match64: 0x00000000, model64: 0x2575100025755},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2575500025760, model64: 0x257600002576c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2576c00025777, model64: 0x2577700025784},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x257840002578f, model64: 0x2578f0002579a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2579a000257a0, model64: 0x257a0000257a4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5a7100005a77},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a6f, match64: 0x00000000, model64: 0x257b1000257b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x257b8000257c0, model64: 0x257c0000257c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a71, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a72, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x6c9000006d3, matchRI: 0x2a73, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x8e00000099, matchRI: 0x2a74, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a75, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a77, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a78, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x257e1000257eb, model64: 0x257eb000257f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a7a, match64: 0x00000000, model64: 0x257f600025803},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a7b, match64: 0x00000000, model64: 0x2580300025812},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a7c, match64: 0x00000000, model64: 0x2581200025822},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a7d, match64: 0x00000000, model64: 0x2582200025832},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a7e, match64: 0x00000000, model64: 0x258320002583f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a7f, match64: 0x00000000, model64: 0x2583f0002584a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a80, match64: 0x00000000, model64: 0x2584a00025854},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a81, match64: 0x00000000, model64: 0x2585400025860},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a82, match64: 0x00000000, model64: 0x258600002586f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a83, match64: 0x00000000, model64: 0x2586f0002587b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a84, match64: 0x00000000, model64: 0x2587b00025888},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a85, match64: 0x00000000, model64: 0x2588800025895},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a86, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a87, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2589a0002589f, model64: 0x2589f000258a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x258a7000258ac, model64: 0x258ac000258b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x258b4000258b9, model64: 0x258b9000258bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x258bc000258c1, model64: 0x258c1000258ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x258ca000258cf, model64: 0x257c8000257cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a8a, match64: 0x00000000, model64: 0x258d8000258e2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x258e8000258ec},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x258f5000258fb, model64: 0x258fb00025902},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2590700025917, model64: 0x259170002592a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2592a00025935, model64: 0x2593500025940},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a90, match64: 0x00000000, model64: 0x15e7f00015e85},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a91, match64: 0x00000000, model64: 0x259440002594f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a92, match64: 0x00000000, model64: 0x2594f00025957},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a93, match64: 0x00000000, model64: 0x2595700025963},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2596300025970, model64: 0x2596300025970},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a94, match64: 0x00000000, model64: 0x2597000025978},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x2597d00025982, model64: 0x2598200025987},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a96, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a98, match64: 0x00000000, model64: 0xeb120000eb15},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a9c, match64: 0x00000000, model64: 0x259990002599e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a9d, match64: 0x00000000, model64: 0x2599e000259a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a9e, match64: 0x00000000, model64: 0x259a6000259ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a9f, match64: 0x00000000, model64: 0x2308c00023093},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aa0, match64: 0x00000000, model64: 0x259ac000259b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aa1, match64: 0x00000000, model64: 0x259b8000259be},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aa2, match64: 0x00000000, model64: 0x259be000259c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aa3, match64: 0x00000000, model64: 0x259c5000259cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aa4, match64: 0x00000000, model64: 0x259cc000259d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aa5, match64: 0x00000000, model64: 0x881b00008821},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aa6, match64: 0x00000000, model64: 0x259d6000259df},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aa7, match64: 0x00000000, model64: 0x259df000259e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aa8, match64: 0x00000000, model64: 0x259e5000259ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aa9, match64: 0x00000000, model64: 0x259ec000259f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aaa, match64: 0x00000000, model64: 0x259f3000259fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aab, match64: 0x00000000, model64: 0x259fb00025a06},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aac, match64: 0x00000000, model64: 0x25a0600025a11},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aad, match64: 0x00000000, model64: 0x25a1100025a18},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aae, match64: 0x00000000, model64: 0x25a1800025a21},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aaf, match64: 0x00000000, model64: 0x25a2100025a26},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab0, match64: 0x00000000, model64: 0x25a2600025a2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab1, match64: 0x00000000, model64: 0x25a2d00025a32},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab2, match64: 0x00000000, model64: 0x25a3200025a3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab3, match64: 0x00000000, model64: 0x25a3a00025a47},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab4, match64: 0x00000000, model64: 0x25a4700025a4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25a5100025a59, model64: 0x25a5900025a61},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab7, match64: 0x00000000, model64: 0x25a6100025a68},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab8, match64: 0x00000000, model64: 0x25a6800025a6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25a6e00025a7c, model64: 0x25a7c00025a8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25a8a00025a93, model64: 0x25a9300025a9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25a9c00025aa6, model64: 0x25aa600025ab0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab9, match64: 0x00000000, model64: 0x25ab000025ab7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25ab700025ac1, model64: 0x25ac100025acb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25acb00025ad2, model64: 0x25ad200025ad9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aba, match64: 0x00000000, model64: 0x25ad900025ae0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25ae000025ae6, model64: 0x25ae600025aec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25aec00025af0, model64: 0x16e3500016e39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25af000025af5, model64: 0x25af500025afa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25afa00025b05, model64: 0x25b0500025b10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25b1000025b1c, model64: 0x25b1c00025b28},
		modelTuple{type64: 0x2700000027, matchRI: 0x2abb, match64: 0x00000000, model64: 0x25b2800025b32},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25b3200025b3e, model64: 0x25b3e00025b4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25b4a00025b55, model64: 0x25b5500025b60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25b6000025b67, model64: 0x25b6700025b6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2abc, match64: 0x00000000, model64: 0x25b6e00025b78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25b7800025b84, model64: 0x25b7800025b84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25b8400025b91, model64: 0x25b9100025b9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25b9f00025bab, model64: 0x25bab00025bb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25bb800025bc0, model64: 0x25bc000025bc8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25bc800025bce, model64: 0x25bce00025bd4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25bd400025bd8, model64: 0x25bd800025bdc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25bdc00025be3, model64: 0x25be300025bea},
		modelTuple{type64: 0x2700000027, matchRI: 0x2abd, match64: 0x00000000, model64: 0x25bea00025bf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2abe, match64: 0x00000000, model64: 0x25bf300025bf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2abf, match64: 0x00000000, model64: 0x25bf700025bfc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25bfc00025c01, model64: 0x25c0100025c06},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac5, match64: 0x00000000, model64: 0x25c0a00025c12},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac6, match64: 0x00000000, model64: 0x25c0a00025c12},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x25c1700025c1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25c3600025c3c, model64: 0x25c3600025c3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aca, match64: 0x00000000, model64: 0x25c3c00025c41},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x25c4100025c47, model64: 0x25c4100025c47},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x25c4a00025c53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25c5700025c5f, model64: 0x25c5f00025c6c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25c6c00025c76, model64: 0x25c7600025c83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25c8300025c8d, model64: 0x25c8d00025c9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25c9a00025ca7, model64: 0x25ca700025cb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2acd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2acf, match64: 0x00000000, model64: 0x25cb600025cc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ad0, match64: 0x00000000, model64: 0x25cc000025cd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ad1, match64: 0x00000000, model64: 0x25cd000025ce1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ad2, match64: 0x00000000, model64: 0xe9610000e964},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ad3, match64: 0x00000000, model64: 0x59b5000059ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ad4, match64: 0x00000000, model64: 0x25ce100025ce8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ad5, match64: 0x00000000, model64: 0x25ce800025cef},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ad6, match64: 0x00000000, model64: 0x25cef00025cf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ad7, match64: 0x00000000, model64: 0x25cf600025cfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ad8, match64: 0x00000000, model64: 0x87f5000087fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ad9, match64: 0x00000000, model64: 0x25cfc00025cff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ada, match64: 0x00000000, model64: 0x25cff00025d08},
		modelTuple{type64: 0x2700000027, matchRI: 0x2adb, match64: 0x00000000, model64: 0x7d7c00007d82},
		modelTuple{type64: 0x2700000027, matchRI: 0x2adc, match64: 0x00000000, model64: 0x25d0800025d0f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2add, match64: 0x00000000, model64: 0x1d6e20001d6e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ade, match64: 0x00000000, model64: 0x25d0f00025d1e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25d1e00025d26, model64: 0x25d2600025d31},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25d3100025d39, model64: 0x25d3100025d39},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25d3900025d41, model64: 0x172d2000172d5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25d4100025d49, model64: 0x25d4900025d4f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25d4f00025d57, model64: 0x25d5700025d5d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2adf, match64: 0x00000000, model64: 0x25d5d00025d62},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25d6200025d6a, model64: 0x25d6a00025d6e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25d6e00025d76, model64: 0x25d7600025d7c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2ae0, match64: 0x00000000, model64: 0x25d7c00025d82},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25d8200025d8c, model64: 0x25d8c00025d97},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25d9700025d9f, model64: 0x14bb400014bb7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25d9f00025da7, model64: 0x40c0000040f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25da700025daf, model64: 0x25daf00025db4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25db400025dbb, model64: 0x25dbb00025dc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae1, match64: 0x00000000, model64: 0x7d7c00007d82},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae2, match64: 0x00000000, model64: 0x3c3800003c3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25dc200025dca, model64: 0x25dca00025dd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25dd700025ddf, model64: 0x25ddf00025de9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25de900025df1, model64: 0x19c8500019c89},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae3, match64: 0x00000000, model64: 0x25df100025df9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae4, match64: 0x00000000, model64: 0x25df900025e00},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae5, match64: 0x00000000, model64: 0x25e0000025e05},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae6, match64: 0x00000000, model64: 0x25e0500025e0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae7, match64: 0x00000000, model64: 0x25e0f00025e15},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae8, match64: 0x00000000, model64: 0x154ae000154b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae9, match64: 0x00000000, model64: 0x25e1500025e1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25e1a00025e21, model64: 0x658200006586},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aea, match64: 0x00000000, model64: 0x25e2100025e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aeb, match64: 0x00000000, model64: 0x25e2500025e2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aec, match64: 0x00000000, model64: 0x25e2e00025e36},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aed, match64: 0x00000000, model64: 0x25e3600025e3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aee, match64: 0x00000000, model64: 0x25e3e00025e42},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aef, match64: 0x00000000, model64: 0x25e4200025e46},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af0, match64: 0x00000000, model64: 0x47760000477a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af1, match64: 0x00000000, model64: 0x25e4600025e54},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af2, match64: 0x00000000, model64: 0x25e5400025e59},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af3, match64: 0x00000000, model64: 0x25e5900025e62},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af4, match64: 0x00000000, model64: 0x25e6200025e75},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af5, match64: 0x00000000, model64: 0x25cc000025cd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af6, match64: 0x00000000, model64: 0x25e7500025e7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af7, match64: 0x00000000, model64: 0x25e7d00025e85},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af8, match64: 0x00000000, model64: 0x25e8500025e96},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af9, match64: 0x00000000, model64: 0x25e9600025e9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2afa, match64: 0x00000000, model64: 0x25e9c00025ea0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2afb, match64: 0x00000000, model64: 0x25ea000025ea9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2afc, match64: 0x00000000, model64: 0xac820000ac88},
		modelTuple{type64: 0x2700000027, matchRI: 0x2afd, match64: 0x00000000, model64: 0x25ea900025eb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2afe, match64: 0x00000000, model64: 0x25eb100025eba},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aff, match64: 0x00000000, model64: 0xc5600000c5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b00, match64: 0x00000000, model64: 0x25eba00025ec2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b01, match64: 0x00000000, model64: 0x25ec200025ecd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b02, match64: 0x00000000, model64: 0x25ecd00025ed8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b03, match64: 0x00000000, model64: 0x25ed800025ede},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b04, match64: 0x00000000, model64: 0x25ede00025ee5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b05, match64: 0x00000000, model64: 0x25ee500025ef2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b06, match64: 0x00000000, model64: 0x1d6e20001d6e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b07, match64: 0x00000000, model64: 0x25ef200025efc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b08, match64: 0x00000000, model64: 0x53d9000053de},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b09, match64: 0x00000000, model64: 0x25efc00025f03},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b0a, match64: 0x00000000, model64: 0x25f0300025f09},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b0b, match64: 0x00000000, model64: 0x25f0900025f0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b0c, match64: 0x00000000, model64: 0x25f0d00025f13},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b0d, match64: 0x00000000, model64: 0x25f1300025f19},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b0e, match64: 0x00000000, model64: 0x25f1900025f23},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b0f, match64: 0x00000000, model64: 0x25f2300025f2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b10, match64: 0x00000000, model64: 0x25f2f00025f40},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b11, match64: 0x00000000, model64: 0x25f4000025f48},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b12, match64: 0x00000000, model64: 0x87f5000087fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b13, match64: 0x00000000, model64: 0x25f4800025f4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b14, match64: 0x00000000, model64: 0x25f4f00025f59},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b15, match64: 0x00000000, model64: 0x53ae000053b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b16, match64: 0x00000000, model64: 0x11cda00011cdf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25f5900025f61, model64: 0x25f6100025f66},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b17, match64: 0x00000000, model64: 0x11d2e00011d32},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b18, match64: 0x00000000, model64: 0x47760000477a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b19, match64: 0x00000000, model64: 0x25f6600025f75},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b1a, match64: 0x00000000, model64: 0x25f7500025f7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b1b, match64: 0x00000000, model64: 0x25f7b00025f80},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b1c, match64: 0x00000000, model64: 0x25f8000025f8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b1d, match64: 0x00000000, model64: 0x7fa600007fad},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b1e, match64: 0x00000000, model64: 0x25f8a00025f92},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b1f, match64: 0x00000000, model64: 0x25f9200025f96},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b20, match64: 0x00000000, model64: 0x25f9600025f9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b21, match64: 0x00000000, model64: 0x25f1300025f19},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b22, match64: 0x00000000, model64: 0x25f9b00025f9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b23, match64: 0x00000000, model64: 0x25f9f00025fa7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b24, match64: 0x00000000, model64: 0x25fa700025fb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b25, match64: 0x00000000, model64: 0x25fb200025fb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b26, match64: 0x00000000, model64: 0x25fb600025fc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b27, match64: 0x00000000, model64: 0x25fc100025fc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b28, match64: 0x00000000, model64: 0x53c6000053cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25fc700025fcf, model64: 0x25fcf00025fdb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25fdb00025fe3, model64: 0xafa00000afa4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b29, match64: 0x00000000, model64: 0x25fe300025fe9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b2a, match64: 0x00000000, model64: 0x1e9840001e989},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b2b, match64: 0x00000000, model64: 0xacdd0000ace1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b2c, match64: 0x00000000, model64: 0x25fe900025ff4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b2d, match64: 0x00000000, model64: 0x25ff400025ffb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b2e, match64: 0x00000000, model64: 0x2093b00020940},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b2f, match64: 0x00000000, model64: 0x25ffb00026004},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b30, match64: 0x00000000, model64: 0x25cfc00025cff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b31, match64: 0x00000000, model64: 0x260040002600b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b32, match64: 0x00000000, model64: 0x2600b00026015},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b33, match64: 0x00000000, model64: 0x260150002601c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b34, match64: 0x00000000, model64: 0x2601c00026021},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b35, match64: 0x00000000, model64: 0x2602100026026},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b36, match64: 0x00000000, model64: 0x260260002602b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b37, match64: 0x00000000, model64: 0x2602b00026033},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b38, match64: 0x00000000, model64: 0x2603300026039},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b39, match64: 0x00000000, model64: 0x260390002603f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b3a, match64: 0x00000000, model64: 0x2603f00026047},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b3b, match64: 0x00000000, model64: 0x2604700026050},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b3c, match64: 0x00000000, model64: 0x179c3000179c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b3d, match64: 0x00000000, model64: 0x2605000026054},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b3e, match64: 0x00000000, model64: 0x91cf000091d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b3f, match64: 0x00000000, model64: 0x260540002605c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b40, match64: 0x00000000, model64: 0x1651e00016521},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b41, match64: 0x00000000, model64: 0x20a1400020a1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b42, match64: 0x00000000, model64: 0x2605c00026065},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b43, match64: 0x00000000, model64: 0x1e9090001e90f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b44, match64: 0x00000000, model64: 0x260650002606d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b45, match64: 0x00000000, model64: 0x2606d00026075},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b46, match64: 0x00000000, model64: 0x260750002607a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b47, match64: 0x00000000, model64: 0x2607a00026082},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2608200026092, model64: 0x2609200026099},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b48, match64: 0x00000000, model64: 0x26099000260a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b49, match64: 0x00000000, model64: 0x260a1000260a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b4a, match64: 0x00000000, model64: 0x260a8000260b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b4b, match64: 0x00000000, model64: 0x260b2000260bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b4c, match64: 0x00000000, model64: 0x260bd000260c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b4d, match64: 0x00000000, model64: 0x1dc630001dc68},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b4e, match64: 0x00000000, model64: 0x260c0000260c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b4f, match64: 0x00000000, model64: 0x260c7000260cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b50, match64: 0x00000000, model64: 0x260cf000260d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b51, match64: 0x00000000, model64: 0x260d7000260dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b52, match64: 0x00000000, model64: 0x260dc000260e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b53, match64: 0x00000000, model64: 0x260e6000260ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b54, match64: 0x00000000, model64: 0x260ec000260f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b55, match64: 0x00000000, model64: 0x260f0000260f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b56, match64: 0x00000000, model64: 0x260f600026100},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b57, match64: 0x00000000, model64: 0x2610000026106},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b58, match64: 0x00000000, model64: 0x2610600026114},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x261140002611c, model64: 0x2611c00026128},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b59, match64: 0x00000000, model64: 0x2612800026132},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b5a, match64: 0x00000000, model64: 0x2613200026140},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b5b, match64: 0x00000000, model64: 0x2614000026149},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b5c, match64: 0x00000000, model64: 0x2614900026156},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b5d, match64: 0x00000000, model64: 0x261560002615d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b5e, match64: 0x00000000, model64: 0x2615d00026164},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b5f, match64: 0x00000000, model64: 0x261640002616a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b60, match64: 0x00000000, model64: 0x2616a0002616f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b61, match64: 0x00000000, model64: 0x2616f00026179},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b62, match64: 0x00000000, model64: 0x2617900026186},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b63, match64: 0x00000000, model64: 0x25e0f00025e15},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b64, match64: 0x00000000, model64: 0x204940002049b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b65, match64: 0x00000000, model64: 0x1708c00017090},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b66, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b67, match64: 0x00000000, model64: 0x261860002618a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2618a00026192, model64: 0x26192000261a0},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x261a0000261a8, model64: 0x261a8000261b2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b68, match64: 0x00000000, model64: 0x261b2000261b6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b69, match64: 0x00000000, model64: 0x261b6000261be},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b6a, match64: 0x00000000, model64: 0x261be000261c3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b6b, match64: 0x00000000, model64: 0x261c3000261ca},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b6c, match64: 0x00000000, model64: 0x261ca000261d0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b6d, match64: 0x00000000, model64: 0x261d0000261d5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b6e, match64: 0x00000000, model64: 0x261d5000261da},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b6f, match64: 0x00000000, model64: 0x261da000261e4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b70, match64: 0x00000000, model64: 0x20e8b00020e95},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b71, match64: 0x00000000, model64: 0x170960001709a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b72, match64: 0x00000000, model64: 0x261e4000261ef},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b73, match64: 0x00000000, model64: 0x261ef000261f5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b74, match64: 0x00000000, model64: 0x133390001333e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b75, match64: 0x00000000, model64: 0x261f5000261fb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b76, match64: 0x00000000, model64: 0x261fb00026200},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b77, match64: 0x00000000, model64: 0x262000002620a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b78, match64: 0x00000000, model64: 0x2620a0002620e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b79, match64: 0x00000000, model64: 0x2620e00026213},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b7a, match64: 0x00000000, model64: 0x2621300026221},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b7b, match64: 0x00000000, model64: 0x262210002622a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b7c, match64: 0x00000000, model64: 0x2622a00026233},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b7d, match64: 0x00000000, model64: 0x262330002623c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b7e, match64: 0x00000000, model64: 0x261d5000261da},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b7f, match64: 0x00000000, model64: 0x2623c00026244},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b80, match64: 0x00000000, model64: 0x2616f00026179},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b81, match64: 0x00000000, model64: 0x262440002624b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b82, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x2624b00026256, model64: 0x2700000027},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2625b0002626b, model64: 0x2626b00026276},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b84, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b86, match64: 0x00000000, model64: 0x2627b0002628d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b87, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b88, match64: 0x00000000, model64: 0x2628d000262a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x262a1000262ac, model64: 0x262ac000262b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x262b1000262c5, model64: 0x262c5000262d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x262d9000262f2, model64: 0x262f200026305},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x263050002631c, model64: 0x2631c00026330},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x263300002634b, model64: 0x2634b00026360},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b89, match64: 0x00000000, model64: 0x2636000026367},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b8a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x263670002636e, model64: 0x2636e00026375},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x2637500026380, model64: 0x263800002638b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b8f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x263a1000263ad, model64: 0x263ad000263b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b91, match64: 0x00000000, model64: 0x263be000263c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b92, match64: 0x00000000, model64: 0x263c7000263d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b93, match64: 0x00000000, model64: 0x263d0000263da},
		modelTuple{type64: 0xcad00000cb4, matchRI: 0x2b94, match64: 0x00000000, model64: 0x263da000263e5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b95, match64: 0x00000000, model64: 0x263e5000263ec},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b96, match64: 0x00000000, model64: 0x263ec000263f2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b97, match64: 0x00000000, model64: 0x263f2000263f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b98, match64: 0x00000000, model64: 0x263f6000263ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b99, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2b9c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x2b9d, match64: 0x00000000, model64: 0x2640d00026417},
		modelTuple{type64: 0x24700000251, matchRI: 0x2b9e, match64: 0x00000000, model64: 0x2641700026421},
		modelTuple{type64: 0x24700000251, matchRI: 0x2b9f, match64: 0x00000000, model64: 0x2642100026429},
		modelTuple{type64: 0x24700000251, matchRI: 0x2ba0, match64: 0x00000000, model64: 0x264290002642e},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x2642e00026436, model64: 0x264360002643e},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x2643e00026449, model64: 0x2644900026454},
		modelTuple{type64: 0x24700000251, matchRI: 0x2ba1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ba2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ba3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x2645900026465, model64: 0x2645900026465},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x2646500026475, model64: 0x2646500026475},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ba5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ba6, match64: 0x00000000, model64: 0x22ccf00022cd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ba7, match64: 0x00000000, model64: 0x2647500026481},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x264810002648a, model64: 0x2648a00026499},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ba8, match64: 0x00000000, model64: 0x26499000264aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ba9, match64: 0x00000000, model64: 0x264aa000264b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x264b2000264bb, model64: 0x264bb000264c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x264c4000264d1, model64: 0x264d1000264de},
		modelTuple{type64: 0x2700000027, matchRI: 0x2baa, match64: 0x00000000, model64: 0x264de000264e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bab, match64: 0x00000000, model64: 0x264e6000264f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bac, match64: 0x00000000, model64: 0x264f100026501},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bad, match64: 0x00000000, model64: 0x2650100026510},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bae, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2bb0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2651b0002652a, model64: 0x2651b0002652a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb3, match64: 0x00000000, model64: 0xc0700000c0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2652a00026530, model64: 0x2653000026537},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb4, match64: 0x00000000, model64: 0x265370002653e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb5, match64: 0x00000000, model64: 0x2653e00026547},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb6, match64: 0x00000000, model64: 0x22050000220a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb7, match64: 0x00000000, model64: 0x2654700026551},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb8, match64: 0x00000000, model64: 0x2655100026558},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x265580002655e, model64: 0x2655e00026565},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb9, match64: 0x00000000, model64: 0x2656500026569},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x265730002657d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x265830002658c, model64: 0x2658c00026595},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x265950002659d, model64: 0x265950002659d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bbd, match64: 0x00000000, model64: 0x2659d000265a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bbf, match64: 0x00000000, model64: 0x265a8000265b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc0, match64: 0x00000000, model64: 0x475e00004766},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2bc2, match64: 0x00000000, model64: 0x265b7000265cb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x265cb000265db, model64: 0x265db000265eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x265eb000265f7, model64: 0x265f700026603},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2660300026611, model64: 0x2661100026621},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc3, match64: 0x00000000, model64: 0x2662100026630},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2663000026641, model64: 0x2664100026654},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x266540002665e, model64: 0x2665e00026666},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc4, match64: 0x00000000, model64: 0x2666600026670},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc5, match64: 0x00000000, model64: 0x2667000026680},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2668000026693, model64: 0x26693000266a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x266a6000266ba, model64: 0x266ba000266d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x266d0000266e4, model64: 0x266e4000266fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x266fa00026709, model64: 0x2670900026718},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc6, match64: 0x00000000, model64: 0x2671800026723},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x267230002672d, model64: 0x2672d00026737},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2673700026742, model64: 0x267420002674d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2674d00026755, model64: 0x2674d00026755},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc7, match64: 0x00000000, model64: 0x267550002675c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2675c00026763, model64: 0x267630002676a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2676a00026774, model64: 0x25f0900025f0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x267740002677e, model64: 0x267740002677e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2677e00026790, model64: 0x26790000267a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x267a4000267b6, model64: 0x267a4000267b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x267b6000267cc, model64: 0x267cc000267e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x267e4000267f2, model64: 0x267f200026805},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2680500026815, model64: 0x2681500026825},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2682500026831, model64: 0x2682500026831},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2683100026841, model64: 0x2684100026853},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2685300026864, model64: 0x2686400026877},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2687700026883, model64: 0x268830002688f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc8, match64: 0x00000000, model64: 0x2688f00026897},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x268970002689e, model64: 0x2689e000268a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x268a5000268b2, model64: 0x268b2000268c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc9, match64: 0x00000000, model64: 0x268c1000268d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x268d6000268e7, model64: 0x268e7000268fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bca, match64: 0x00000000, model64: 0x268fa00026903},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bcb, match64: 0x00000000, model64: 0x7ae300007aeb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2690300026919, model64: 0x2691900026931},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bcc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x269400002694b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bd1, match64: 0x00000000, model64: 0x4a7e00004a85},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bd2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2695800026962, model64: 0x269620002696c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bd5, match64: 0x00000000, model64: 0x2696c00026973},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bd6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x269730002697d, model64: 0x269730002697d},
		modelTuple{type64: 0x24700000251, matchRI: 0x2bd7, match64: 0x00000000, model64: 0x2697d00026986},
		modelTuple{type64: 0x24700000251, matchRI: 0x2bd8, match64: 0x00000000, model64: 0x269860002698f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2699200026998, model64: 0x269980002699f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2699f000269a8, model64: 0x269a8000269b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bda, match64: 0x00000000, model64: 0x269b2000269b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bdb, match64: 0x00000000, model64: 0x269b8000269c0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x269c9000269d6, model64: 0x269d6000269dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x269dd000269e3, model64: 0x269e3000269e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x269e9000269f5, model64: 0x269f500026a01},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bdf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2be0, match64: 0x00000000, model64: 0x26a0500026a0d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26a1700026a20, model64: 0x26a2000026a27},
		modelTuple{type64: 0x2700000027, matchRI: 0x2be4, match64: 0x00000000, model64: 0x26a2b00026a2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2be5, match64: 0x00000000, model64: 0x26a2e00026a32},
		modelTuple{type64: 0x2700000027, matchRI: 0x2be6, match64: 0x00000000, model64: 0x26a3200026a39},
		modelTuple{type64: 0x2700000027, matchRI: 0x2be7, match64: 0x00000000, model64: 0x26a3900026a3c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2be8, match64: 0x00000000, model64: 0x26a3c00026a46},
		modelTuple{type64: 0x2700000027, matchRI: 0x2be9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26a5000026a5b, model64: 0x26a5b00026a62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26a6200026a68, model64: 0x1514c0001514d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26a6800026a6e, model64: 0x3bc300003bc5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26a7400026a79, model64: 0x26a7400026a79},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26a7900026a84, model64: 0x26a8400026a8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26a8f00026a96, model64: 0x26a9600026a9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bec, match64: 0x00000000, model64: 0x26a9d00026aa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bed, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bee, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bef, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bf1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26ac000026aca, model64: 0x26aca00026acf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26acf00026ad8, model64: 0x26ad800026ae2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bf3, match64: 0x00000000, model64: 0x26ae200026aec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bf4, match64: 0x00000000, model64: 0x26aec00026af4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26af400026afc, model64: 0x26afc00026b05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b0500026b0c, model64: 0x26b0c00026b14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b1400026b1b, model64: 0x26b1400026b1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bf5, match64: 0x00000000, model64: 0x26b1b00026b23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b2300026b2e, model64: 0x26b2e00026b3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b3a00026b40, model64: 0x26b4000026b47},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b4700026b4e, model64: 0x26b4e00026b56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b5600026b61, model64: 0x26b6100026b6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b6d00026b74, model64: 0x26b7400026b7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b7c00026b82, model64: 0x26b8200026b89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b8900026b90, model64: 0x26b9000026b98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b9800026ba3, model64: 0x26ba300026baf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26baf00026bb5, model64: 0x26bb500026bbc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26bbc00026bc4, model64: 0x26bc400026bcd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26bcd00026bd3, model64: 0x26bcd00026bd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bf6, match64: 0x00000000, model64: 0x26bd300026bde},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bf7, match64: 0x00000000, model64: 0x26bde00026be6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bf8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x26be600026beb, model64: 0x26beb00026bf1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x26bfd00026c05},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bfd, match64: 0x00000000, model64: 0x26c1000026c19},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bfe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bff, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c01, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x2c02, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c04, match64: 0x00000000, model64: 0x26c2300026c28},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c05, match64: 0x00000000, model64: 0x26c2800026c2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c06, match64: 0x00000000, model64: 0x26c2e00026c32},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c07, match64: 0x00000000, model64: 0x26c3200026c36},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c08, match64: 0x00000000, model64: 0x1239c000123a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c09, match64: 0x00000000, model64: 0x26c3600026c3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c0a, match64: 0x00000000, model64: 0x136990001369c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c0b, match64: 0x00000000, model64: 0x8a0e00008a13},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c0d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c0e, match64: 0x00000000, model64: 0x26c4900026c4e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x26c5700026c5c, model64: 0x21e1000021e13},
		modelTuple{type64: 0xcad00000cb4, matchRI: -0x0001, match64: 0x26c5c00026c61, model64: 0x21e1900021e20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c6100026c66, model64: 0x15cba00015cbd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c6600026c6c, model64: 0x26c6c00026c73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c7300026c78, model64: 0x26c7800026c7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c7b00026c80, model64: 0x26c8000026c84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c8400026c8a, model64: 0x26c8a00026c8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c11, match64: 0x00000000, model64: 0x26c8d00026c90},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c9000026c96, model64: 0x26c9600026c9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c9a00026ca0, model64: 0x26ca000026ca4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26ca400026ca9, model64: 0x15d0d00015d10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26ca900026cae, model64: 0x178100001784},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26cae00026cb3, model64: 0x26cb300026cb6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26cb600026cbb, model64: 0x26cbb00026cbe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26cbe00026cc3, model64: 0x3c1000003c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26cc300026cc8, model64: 0x15cd500015cd8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26cc800026ccd, model64: 0x26ccd00026cd0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26cd000026cd5, model64: 0x20e4f00020e57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26cd500026cdb, model64: 0x26cdb00026cdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c12, match64: 0x00000000, model64: 0x21cb200021cb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c13, match64: 0x00000000, model64: 0x26cdf00026ce7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c14, match64: 0x00000000, model64: 0x26ce700026cf4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26cf400026cf9, model64: 0x21cd200021cd5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26cf900026cfe, model64: 0xb3440000b347},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26cfe00026d03, model64: 0x21e4a00021e51},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c15, match64: 0x00000000, model64: 0x26d0300026d06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d0600026d0b, model64: 0x26d0b00026d12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d1200026d17, model64: 0x26d1700026d1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d1a00026d1f, model64: 0x26d1f00026d22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d2200026d27, model64: 0x26d2700026d2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d2b00026d30, model64: 0x26d3000026d34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d3400026d39, model64: 0x26d3900026d3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d3f00026d44, model64: 0x26d4400026d4c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d4c00026d51, model64: 0x26d5100026d58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d5800026d5d, model64: 0x26d5d00026d60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d6000026d66, model64: 0x15c6300015c66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d6600026d6b, model64: 0x26d6b00026d73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d7300026d78, model64: 0x26d7800026d7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d7b00026d80, model64: 0x26d8000026d83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d8300026d89, model64: 0x26d8900026d8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d8c00026d91, model64: 0x26d9100026d94},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c16, match64: 0x00000000, model64: 0x26d9400026d9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d9c00026da1, model64: 0x26da100026da8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26da800026dad, model64: 0x26dad00026db0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26db000026db5, model64: 0x26db500026db8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26db800026dbd, model64: 0x26dbd00026dc0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26dc000026dc6, model64: 0x26dc600026dcd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26dcd00026dd2, model64: 0x15ca700015caa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26dd200026dd7, model64: 0x26dd700026ddb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26ddb00026de1, model64: 0x26de100026de8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26de800026dee, model64: 0x21dee00021df5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c17, match64: 0x00000000, model64: 0x21e1900021e20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26dee00026df4, model64: 0x26df400026df8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c18, match64: 0x00000000, model64: 0x26df800026dff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26dff00026e05, model64: 0x26e0500026e0c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e0c00026e11, model64: 0x26e1100026e14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e1400026e1a, model64: 0x26dbd00026dc0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e1a00026e1f, model64: 0x26e1f00026e22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e2200026e27, model64: 0x26e2700026e2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e2a00026e30, model64: 0x26e3000026e37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e3700026e3d, model64: 0x26e3d00026e44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e4400026e49, model64: 0x15d4300015d46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e4900026e4e, model64: 0x26e4e00026e56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e5600026e5c, model64: 0x26e5c00026e60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e6000026e66, model64: 0x26e6600026e69},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e6900026e6e, model64: 0x26e6e00026e72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e7200026e77, model64: 0x26e7700026e7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e7f00026e84, model64: 0x26e8400026e8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c19, match64: 0x00000000, model64: 0x26e8b00026e92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e9200026e97, model64: 0x26e9700026e9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e9f00026ea5, model64: 0x15cc000015cc3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26ea500026eaa, model64: 0x15d0300015d06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26eaa00026eaf, model64: 0x15d2300015d26},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c1a, match64: 0x00000000, model64: 0x14af300014af6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c1b, match64: 0x00000000, model64: 0x8cb900008cbc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26eaf00026eb4, model64: 0x26eb400026eb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26eb800026ebd, model64: 0x26ebd00026ec5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c1c, match64: 0x00000000, model64: 0x26ec500026ed2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26ed200026ed7, model64: 0x26ed700026ede},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26ede00026ee3, model64: 0x26ee300026eec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26eec00026ef1, model64: 0x26ef100026efe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26efe00026f03, model64: 0x26f0300026f0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26f0f00026f14, model64: 0xdc9d0000dca5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26f1400026f1d, model64: 0x26f1400026f1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c1d, match64: 0x00000000, model64: 0x26f1d00026f25},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c1e, match64: 0x00000000, model64: 0x26f1d00026f25},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c1f, match64: 0x00000000, model64: 0x26f2500026f29},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c20, match64: 0x00000000, model64: 0x26f2900026f32},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c21, match64: 0x00000000, model64: 0x26f3200026f3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c22, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x26f3a00026f45, model64: 0x26f4500026f50},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x26f5000026f5c, model64: 0x206b6000206bb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x26f5c00026f66, model64: 0x26f6600026f6e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x26f6e00026f78, model64: 0x26f7800026f82},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2c23, match64: 0x00000000, model64: 0x26f8200026f90},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c24, match64: 0x00000000, model64: 0x20b1000020b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c25, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c26, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x26f9600026f9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c29, match64: 0x00000000, model64: 0x26fa000026fa8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c2a, match64: 0x00000000, model64: 0x1068200010684},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26fad00026fb8, model64: 0x26fb800026fc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c2c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26fc900026fd1, model64: 0x26fd100026fd9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26fd900026fdf, model64: 0x26fdf00026fe3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26fe300026fea, model64: 0x26fea00026ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c2e, match64: 0x00000000, model64: 0x26ff100026ff3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c2f, match64: 0x00000000, model64: 0x26ff300026ff8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c30, match64: 0x00000000, model64: 0x26ff800026ffd},
		modelTuple{type64: 0x6c9000006d3, matchRI: 0x2c32, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c36, match64: 0x00000000, model64: 0x2701600027023},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c37, match64: 0x00000000, model64: 0x270230002702f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c3a, match64: 0x00000000, model64: 0x2703a00027048},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2704c0002705d, model64: 0x2705d00027069},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c3c, match64: 0x00000000, model64: 0x6c0000006c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c3d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x270810002708e, model64: 0x7b4900007b4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c40, match64: 0x00000000, model64: 0x2708e00027095},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c41, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2c42, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x270a5000270b0, model64: 0x270b0000270bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c45, match64: 0x00000000, model64: 0x270bb000270c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c46, match64: 0x00000000, model64: 0x270c3000270ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c47, match64: 0x00000000, model64: 0x270ce000270d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c48, match64: 0x00000000, model64: 0x270d8000270de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x270de000270ec, model64: 0x270ec000270fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x270fa00027108, model64: 0x2710800027115},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c49, match64: 0x00000000, model64: 0x2711500027125},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c4a, match64: 0x00000000, model64: 0x122800001228b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x271250002712c, model64: 0x2712c00027133},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c4b, match64: 0x00000000, model64: 0xb9750000b97d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c4c, match64: 0x00000000, model64: 0x58470000584d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c4d, match64: 0x00000000, model64: 0x271330002713d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2713d00027148, model64: 0x2714800027153},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c4e, match64: 0x00000000, model64: 0x271530002715f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2715f0002716b, model64: 0x2716b00027177},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c4f, match64: 0x00000000, model64: 0x2717700027183},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c50, match64: 0x00000000, model64: 0x271830002718d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c51, match64: 0x00000000, model64: 0x2718d00027199},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27199000271a9, model64: 0x271a9000271b9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x271b9000271c2, model64: 0x271c2000271cd},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x271cd000271d8, model64: 0x271d8000271e4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x271e4000271f2, model64: 0x271f200027201},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2720100027210, model64: 0x2721000027220},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2c52, match64: 0x00000000, model64: 0x2722000027231},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c53, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2c54, match64: 0x00000000, model64: 0x2723100027239},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c57, match64: 0x00000000, model64: 0x2724400027249},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c58, match64: 0x00000000, model64: 0x272490002724c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c59, match64: 0x00000000, model64: 0x2724c0002724e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c5b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2726600027274, model64: 0x2727400027283},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x272880002728f, model64: 0x2728f000272a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x272a0000272a7, model64: 0x272a7000272b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x272b6000272bd, model64: 0x272bd000272ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x272ce000272d5, model64: 0x272d5000272e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x272e2000272e9, model64: 0x272e9000272f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c5f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x272f900027302, model64: 0x273020002730c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2730c00027313, model64: 0x2731300027324},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c60, match64: 0x00000000, model64: 0x2732400027337},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2733700027347, model64: 0x273470002735a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2735a00027369, model64: 0x273690002737b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c61, match64: 0x00000000, model64: 0x2737b0002738d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2738d0002739d, model64: 0x2739d000273b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x273b0000273bc, model64: 0x273bc000273c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c62, match64: 0x00000000, model64: 0x273c8000273d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x273d6000273dd, model64: 0x273dd000273f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c63, match64: 0x00000000, model64: 0x273f100027405},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c64, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c65, match64: 0x00000000, model64: 0x2740500027417},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x274170002741e, model64: 0x2741e00027430},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c66, match64: 0x00000000, model64: 0x2743000027442},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c67, match64: 0x00000000, model64: 0x2744200027453},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c68, match64: 0x00000000, model64: 0x2745300027466},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x274660002746d, model64: 0x2746d0002747f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2747f00027486, model64: 0x2748600027498},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x274980002749f, model64: 0x2749f000274b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x274b1000274b8, model64: 0x274b8000274cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c69, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x274cb000274d2, model64: 0x274d2000274d8},
		modelTuple{type64: 0x24700000251, matchRI: 0x2c6a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x274d8000274df, model64: 0x274df000274e5},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x274e5000274ec, model64: 0x274ec000274f3},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x274f3000274fa, model64: 0x274fa00027501},
		modelTuple{type64: 0x24700000251, matchRI: 0x2c6b, match64: 0x00000000, model64: 0x2750100027508},
		modelTuple{type64: 0x24700000251, matchRI: 0x2c6c, match64: 0x00000000, model64: 0x2750800027514},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x275140002751b, model64: 0x2751b00027526},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x275260002752d, model64: 0x2752d00027539},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x2753900027540, model64: 0x7d9900007d9d},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x2754000027547, model64: 0x275470002754e},
		modelTuple{type64: 0x24700000251, matchRI: 0x2c6d, match64: 0x00000000, model64: 0x2754e00027556},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x275560002755d, model64: 0x2755d00027564},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x275640002756b, model64: 0x2756b00027572},
		modelTuple{type64: 0x24700000251, matchRI: 0x2c6e, match64: 0x00000000, model64: 0x2757200027579},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x2757900027580, model64: 0x2758000027588},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x2758800027590, model64: 0x275900002759d},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x2759d000275a4, model64: 0x275a4000275aa},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x275aa000275b1, model64: 0x275b1000275b8},
		modelTuple{type64: 0x24700000251, matchRI: 0x2c6f, match64: 0x00000000, model64: 0x275b8000275bf},
		modelTuple{type64: 0x24700000251, matchRI: 0x2c70, match64: 0x00000000, model64: 0x275bf000275c5},
		modelTuple{type64: 0x24700000251, matchRI: 0x2c71, match64: 0x00000000, model64: 0x275c5000275d2},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x275d2000275d9, model64: 0x275d9000275e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c73, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c74, match64: 0x00000000, model64: 0x275e8000275ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c76, match64: 0x00000000, model64: 0x275f2000275f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c77, match64: 0x00000000, model64: 0x275f800027600},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c78, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2760000027608, model64: 0x2760000027608},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8750000a878, model64: 0xa8750000a878},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2760800027616, model64: 0x2760800027616},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c79, match64: 0x00000000, model64: 0x2761600027622},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c7a, match64: 0x00000000, model64: 0x475e00004766},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c7b, match64: 0x00000000, model64: 0x2762200027630},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c7d, match64: 0x00000000, model64: 0x276300002763e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c7e, match64: 0x00000000, model64: 0x2763e0002764b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c7f, match64: 0x00000000, model64: 0x2764b00027651},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c81, match64: 0x00000000, model64: 0x2765a00027669},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c82, match64: 0x00000000, model64: 0x2766900027678},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c83, match64: 0x00000000, model64: 0x2767800027680},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c84, match64: 0x00000000, model64: 0x2768000027689},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c86, match64: 0x00000000, model64: 0x276890002768e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c87, match64: 0x00000000, model64: 0x2768e00027692},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c88, match64: 0x00000000, model64: 0x27692000276a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c89, match64: 0x00000000, model64: 0x276a2000276b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c8a, match64: 0x00000000, model64: 0x276b2000276be},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c8b, match64: 0x00000000, model64: 0x276be000276c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c8c, match64: 0x00000000, model64: 0x276c4000276ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c8d, match64: 0x00000000, model64: 0x276ca000276d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c8e, match64: 0x00000000, model64: 0x276d0000276d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x276d7000276e5, model64: 0x276d7000276e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x276e5000276f2, model64: 0x276e5000276f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x276f2000276fd, model64: 0x276f2000276fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x276fd00027708, model64: 0x276fd00027708},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2770800027728, model64: 0x277280002773c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2773c00027755, model64: 0x2775500027760},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2776000027772, model64: 0x277720002777e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2777e0002779f, model64: 0x2779f000277b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c91, match64: 0x00000000, model64: 0xa7f30000a7ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c92, match64: 0x00000000, model64: 0xa7d70000a7e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x277b7000277d2, model64: 0x277d2000277de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x277de000277f2, model64: 0x277f2000277fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x277fa00027815, model64: 0x2781500027821},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0x278210002783f, model64: 0x2783f00027865},
		modelTuple{type64: 0xb6500000b6c, matchRI: -0x0001, match64: 0x278650002786c, model64: 0x2786c0002789d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c94, match64: 0x00000000, model64: 0x2789d000278b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c95, match64: 0x00000000, model64: 0x278b0000278b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c96, match64: 0x00000000, model64: 0x278b6000278c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c97, match64: 0x00000000, model64: 0x278c7000278d2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x278d2000278eb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x278eb00027903},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c9a, match64: 0x00000000, model64: 0x1ffde0001ffea},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c9b, match64: 0x00000000, model64: 0x1ffde0001ffea},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c9d, match64: 0x00000000, model64: 0x279120002791f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c9e, match64: 0x00000000, model64: 0x2791f0002792c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c9f, match64: 0x00000000, model64: 0x2792c00027938},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca0, match64: 0x00000000, model64: 0x2793800027944},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca1, match64: 0x00000000, model64: 0x2794400027950},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca2, match64: 0x00000000, model64: 0x279500002795c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca3, match64: 0x00000000, model64: 0x2795c00027968},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca4, match64: 0x00000000, model64: 0x2796800027972},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2797b00027987, model64: 0x2797b00027987},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca6, match64: 0x00000000, model64: 0xdcc40000dcc7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2799c000279a3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cab, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cac, match64: 0x00000000, model64: 0xd5140000d518},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cad, match64: 0x00000000, model64: 0x279ae000279b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cae, match64: 0x00000000, model64: 0x279b2000279bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2caf, match64: 0x00000000, model64: 0x279bb000279bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cb0, match64: 0x00000000, model64: 0x279bf000279c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cb1, match64: 0x00000000, model64: 0xa8750000a878},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cb2, match64: 0x00000000, model64: 0x279c6000279cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cb4, match64: 0x00000000, model64: 0x279cb000279dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x279dc000279e2, model64: 0x279e2000279f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x279f3000279f9, model64: 0x279f900027a0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27a0a00027a10, model64: 0x27a1000027a21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27a2100027a27, model64: 0x27a2700027a38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27a3800027a3e, model64: 0x27a3e00027a4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27a4e00027a56, model64: 0x27a5600027a6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cb5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cbb, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cbd, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cbe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27b8f00027b99, model64: 0x27b8f00027b99},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cc0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cc1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cc3, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cc4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cc5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cc6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cc9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ccb, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27bf200027bf9, model64: 0x27bf200027bf9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x27c0f00027c18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27c1800027c25, model64: 0x27c1800027c25},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ccf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cd2, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cd4, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cd6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cd8, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x27c4c00027c52},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cda, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cdb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cdd, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cdf, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x27c7800027c80},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ce1, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27c8e00027c9c, model64: 0x27c9c00027caa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ce4, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ce7, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ce9, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ceb, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ced, match64: 0x00000000, model64: 0x27cdf00027ce4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cef, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cf1, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cf3, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27cec00027cee, model64: 0x27cec00027cee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cf6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cf8, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27cf300027cfd, model64: 0x27cf300027cfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cfb, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cfd, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d0600027d0f, model64: 0x27d0600027d0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d0f00027d18, model64: 0x27d0f00027d18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d1800027d22, model64: 0x27d1800027d22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d2200027d2b, model64: 0x27d2200027d2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d2b00027d35, model64: 0x27d2b00027d35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d3500027d3e, model64: 0x27d3500027d3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d3e00027d47, model64: 0x27d3e00027d47},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d4700027d51, model64: 0x27d4700027d51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d5100027d5a, model64: 0x27d5100027d5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d5a00027d63, model64: 0x27d5a00027d63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d6300027d6b, model64: 0x27d6300027d6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d6b00027d78, model64: 0x27d6b00027d78},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cff, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d00, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d7800027d7f, model64: 0x27d7800027d7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d02, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d04, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d07, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d8400027d8c, model64: 0x27d8c00027d95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d9500027d9d, model64: 0x27d9d00027da6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27da600027dae, model64: 0x27dae00027db7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27db700027dbf, model64: 0x27dbf00027dc8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27dc800027dd0, model64: 0x27dd000027dd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d08, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d0a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d0b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d0c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27de900027df1, model64: 0x27df100027dfa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27dfe00027e05, model64: 0x27dfe00027e05},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d11, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d13, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27e0f00027e19, model64: 0x27e0f00027e19},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27e1900027e24, model64: 0x27e1900027e24},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27e2400027e2f, model64: 0x27e2400027e2f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27e2f00027e3c, model64: 0x27e2f00027e3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27e3c00027e47, model64: 0x27e3c00027e47},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d15, match64: 0x00000000, model64: 0x27e4700027e52},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d16, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d17, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d18, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d19, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d1a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d1b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d1c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d1d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d1e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d1f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27e5200027e57, model64: 0x27e5200027e57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27e5700027e5b, model64: 0x27e5700027e5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d21, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d24, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d0f00027d18, model64: 0x27d0f00027d18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d2b00027d35, model64: 0x27d2b00027d35},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d26, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d28, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d2b, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d2d, match64: 0x00000000, model64: 0x27e7200027e79},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d2f, match64: 0x00000000, model64: 0x27e7900027e87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b4600022b48, model64: 0x22b4600022b48},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d31, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d32, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27e9d00027ea8, model64: 0x27e9d00027ea8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d34, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d36, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d38, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d3a, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d3c, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d3e, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d41, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d43, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d45, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d47, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d49, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d4a, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d4c, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27ec800027ed3, model64: 0x27ec800027ed3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d4d, match64: 0x00000000, model64: 0x27ed300027edd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d4e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d4f, match64: 0x00000000, model64: 0x27edd00027ee4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d50, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d51, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d52, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d53, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d55, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d56, match64: 0x00000000, model64: 0x178cc000178d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d59, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d5b, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27ee800027eef, model64: 0x27ee800027eef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27eef00027ef6, model64: 0x27eef00027ef6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d5e, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d60, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d63, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d65, match64: 0x00000000, model64: 0x1fcc20001fcc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d66, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27f0200027f0c, model64: 0x27f0c00027f1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d67, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d68, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d6a, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d6b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d6c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d6d, match64: 0x00000000, model64: 0x27f2500027f2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27f2a00027f30, model64: 0x27f2a00027f30},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27f3000027f44, model64: 0x7de000007ded},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27f4400027f56, model64: 0xac120000ac1c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27f5600027f67, model64: 0x27f6700027f70},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d6f, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d70, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27f9800027fa1, model64: 0x27f9800027fa1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d72, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d74, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d75, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d76, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d77, match64: 0x00000000, model64: 0x27fb100027fb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d78, match64: 0x00000000, model64: 0x27fb900027fc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d79, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d7a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d7b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d7d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d7e, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d7f, match64: 0x00000000, model64: 0x9c3000009c38},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d81, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d82, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d83, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d85, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27fc700027fd2, model64: 0x27fc700027fd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d87, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27fdd00027fe7, model64: 0x27fe700027ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d89, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d8a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d8d, match64: 0x00000000, model64: 0x280040002800c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d8e, match64: 0x00000000, model64: 0x2800c00028014},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d8f, match64: 0x00000000, model64: 0x280140002801c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d90, match64: 0x00000000, model64: 0x2801c00028024},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d91, match64: 0x00000000, model64: 0x280240002802c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d92, match64: 0x00000000, model64: 0x2802c00028034},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x280340002803c, model64: 0x280340002803c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2803c00028043, model64: 0x2803c00028043},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d94, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d95, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x280540002805c, model64: 0x280540002805c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d98, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d9a, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d9c, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d9e, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2da0, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2da2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2da3, match64: 0x00000000, model64: 0x2806f0002807a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2da5, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2da7, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2da9, match64: 0x00000000, model64: 0xf4000000f4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d0f00027d18, model64: 0x27d0f00027d18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28097000280a0, model64: 0x28097000280a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27d2b00027d35, model64: 0x27d2b00027d35},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dad, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x280a8000280b0, model64: 0x280b0000280bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2daf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2db0, match64: 0x00000000, model64: 0x18000000182},
	}
	__dr_re = []*regexp.Regexp{
		regexp.MustCompile(`(?i)EK-G[CN][0-9]{3}`),
		regexp.MustCompile(`(?i)EK-GC([0-9]{3})`),
		regexp.MustCompile(`(?i)AFTLBT962E2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTLBT962E2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTLFT962X3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTLFT962X3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Tesla/(?:(?:develop|feature|terminal-das-fsd-eap)-)?[0-9.]+|QtCarBrowser)`),
		regexp.MustCompile(`(?i)Tesla/[0-9.]+`),
		regexp.MustCompile(`(?i)Archos.*GAMEPAD([2]?)`),
		regexp.MustCompile(`(?i)Nintendo (([3]?DS[i]?)|Wii[U]?|Switch|GameBoy)`),
		regexp.MustCompile(`(?i)Retroid Pocket ([32]) ?(?:Plus|\+)`),
		regexp.MustCompile(`(?i)Dreamcast|Aplix_SEGASATURN`),
		regexp.MustCompile(`(?i)(?:PlayStation ?(4 Pro|[2-5]|Portable|Vita)|sony_tv;ps5;|\(PS3\))`),
		regexp.MustCompile(`(?i)sony_tv;ps5;`),
		regexp.MustCompile(`(?i)\(PS3\)`),
		regexp.MustCompile(`(?i)PlayStation ?(4 Pro|[2-5]|Portable|Vita)`),
		regexp.MustCompile(`(?i)10moons[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:E500A_2019|2E E450 2018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E500A_2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2E E450 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:180[1379]-A01|1713-A01|1707-A01|1509-A00|1603-A03|1607-A01|1503-A01|1505-A0[12]|1605-A01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1807-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1803-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1809-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1713-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1707-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1801-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1509-A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1503-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1605-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1603-A03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1607-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1505-A0[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)3GNET[ _]`),
		regexp.MustCompile(`(?i)3GNET[ _](U8|T800|U6s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)3GNET[ _]T ?900`),
		regexp.MustCompile(`(?i)(?:Aplay ?[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aplay ?([34])`),
		regexp.MustCompile(`(?i)AC0731B|AC1024C|AC7803C|BC9710AM|EL72B|LC0720C|LC0723B|LC0725B|LC0804B|LC0808B|LC0809B|LC0810C|LC0816C|LC0901D|LC1016C|MT0724B|MT0729[BD]|MT0811B|OC1020A|RC07(?:09B|10B|18C|19H|2[16]B|22C|27H|34H|43H)|RC0817C|RC1018C|RC1019G|RC1025F|RC1301C|RC780[24]F|RC9711B|RC9712C|RC9716B|RC9717B|RC9724C|RC9726C|RC9727F|RC9730C|RC9731C|TS0807B|TS1013B|VM0711A|VM1017A|RC0813C|QS9719D|QS9718C|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT7801C|TS9708B|AC0732C|MT0739D|MT0812E|(?:3Q_)?ER71B`),
		regexp.MustCompile(`(?i)MT0724B|LC0901D|LC0816C|LC0810C|LC0809B|LC0808B|LC0804B|LC0725B|LC0723B`),
		regexp.MustCompile(`(?i)VM1017A|TS1013B|TS0807B|RC9731C|RC9730C|RC9727F|RC9726C|RC9724C|RC9717B|RC9716B|RC9712C|RC9711B|RC1301C|RC1025F|RC1019G|RC1018C|RC0817C|RC0813C|RC0743H|RC0734H|RC0726B|RC0722C|RC0721B|RC0719H|RC0718C|RC0710B|RC0709B|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT0811B|MT0739D|MT0729[BD]|LC1016C|LC0720C|BC9710AM|AC1024C|AC0731B`),
		regexp.MustCompile(`(?i)MT7801C|QS9718C|QS9719D|VM0711A|OC1020A`),
		regexp.MustCompile(`(?i)AC7803C|AC0732C|RC0727H`),
		regexp.MustCompile(`(?i)MT0812E|RC7802F`),
		regexp.MustCompile(`(?i)EL72B|(?:3Q_)?ER71B`),
		regexp.MustCompile(`(?i)(RC7804F)`),
		regexp.MustCompile(`(?i)4Good[ _]|S450m [43]G|S555m 4G|S501m 3G|T700i_3G|People (?:G503|G410|GT300)|Light (?:A10[34]|B100|AT300)|Light_AT200`),
		regexp.MustCompile(`(?i)(T700i|T100m|T70[34]m)[_ ]?3G`),
		regexp.MustCompile(`(?i)Light[_ ](AT[23]00)`),
		regexp.MustCompile(`(?i)People (GT300|AT100)`),
		regexp.MustCompile(`(?i)S555m[_ ]4G`),
		regexp.MustCompile(`(?i)(S(?:450m|501m)[_ ][43]G|Light (?:A10[34]|B100)|People (?:G503|G410))`),
		regexp.MustCompile(`(?i)4Good[ _]([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)4ife (4K Smart TV Box)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tarzan F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SWEGUE|DRENA|Kamba(?:_2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8848 (M[3-6])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G4040)`),
		regexp.MustCompile(`(?i)(?:A1 (?:Alpha|Alpha 20\+)|Alpha 20|Alpha Eco)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1 Alpha 20\+`),
		regexp.MustCompile(`(?i)A95X MAX \+`),
		regexp.MustCompile(`(?i)A95X ?Z2PLUS`),
		regexp.MustCompile(`(?i)A95X[ _-]?(F[1-4]|R[1235]|[AWZ]2|A1)`),
		regexp.MustCompile(`(?i)Android 13(?:[\d.]*);(?: [\w-]+;)? (?:M50)( Build|[;)])`),
		regexp.MustCompile(`(?i)(TK701|TK806)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)elite Aquarius(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hashtag|Shine|Chacer)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM[ _]([^/;)]+)(?: Build|[;)])|AG[_ ]Go[_-]Tab|(?:Flair|Ultra 2|Freedom Access)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AG[_ ]Go[_-]Tab[_ ]Access(_2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Flair|Ultra 2|Freedom Access)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM A9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM_H3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM_H5_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM[_ ]PAD[_ ]P([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM[ _]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:AIDATA ELDE 10 TABLET|ADT_?1061(?:_1)?|ADT1012L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADT_?1061(?:_1)?`),
		regexp.MustCompile(`(?i)AIRBOOK PRO 8S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris708|Kingcomm C500`),
		regexp.MustCompile(`(?i)ALDINORD, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)ALDISUED, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)ALLINmobile_ARENA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMA[ _](A703)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LE-3[29]ZTHS25|LE-5[05]ZTUS30|LE-50ZTUS32|LE-43ZTFS25)(?:-[ABF])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AM(350|355|40[257]|41[025]|450|50[689]|52[037]|51[58]|53[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AM(355|407)`),
		regexp.MustCompile(`(?i)AM([0-9]{3})`),
		regexp.MustCompile(`(?i)(RG405V|RG505)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ancel(801)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANS/|(?: UL40|ACK2326)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(AnPad_U2)`),
		regexp.MustCompile(`(?i)AOC,|(?:Q10107L-ME)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Q10107L-ME)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LE(?:32|43)S5970(?:s)?-(?:20|28|30)|LE55U7970-30|LE43S5977-20|U60856)`),
		regexp.MustCompile(`(?i)AOYODKG[_ ](A38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(WT(?:22|19)M-FI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Arris_liberty,([a-z0-9\-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)ARRIS[,;] ([^),;/]+)`),
		regexp.MustCompile(`(?i)ASSE[-._ ](Q[35]s?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EA1002|EA21100[125]|EABF22206A|U(?:202|304|31[89]|328|626|668|6080|705)AA|QS5509A|V340U|V350U|WTATTRW2|SL112A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U304AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U705AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA211001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QS5509A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U318AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U319AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U328AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U202AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA1002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V350U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U626AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA211002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EABF22206A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SL112A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U668AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WTATTRW2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U6080AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V340U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATMAN[ _-]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(IT)_(701A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ATOL (?:150F)|Smart_(?:Prime|SLIM_Plus))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATOL (150F)`),
		regexp.MustCompile(`(?i)AUPO[ _]Zeus`),
		regexp.MustCompile(`(?i)AUPO[ _]Zeus 10 Pro`),
		regexp.MustCompile(`(?i)(TB-703G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUX[ _]([^/;)]+)(?:_TD)`),
		regexp.MustCompile(`(?i)Excer[ _]`),
		regexp.MustCompile(`(?i)Excer[ _]G5\.([236])`),
		regexp.MustCompile(`(?i)Excer[ _]G5`),
		regexp.MustCompile(`(?i)Excer[ _]10[ _]PRO`),
		regexp.MustCompile(`(?i)Excer[ _]8`),
		regexp.MustCompile(`(?i)AWOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AWOX;SmartTV;([a-z0-9_ \-]+);`),
		regexp.MustCompile(`(?i)AXXA[ _]`),
		regexp.MustCompile(`(?i)AXXA[ _](S\d+)[ _]PLUS`),
		regexp.MustCompile(`(?i)AXXA[ _](S\d+)`),
		regexp.MustCompile(`(?i)AYYA[ _]|(?:Ayat101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AYYA[ _](T1)`),
		regexp.MustCompile(`(?i)(?:ACCENT[_ ]NEON|FAST7 ?3G|PEARL[_ ]A[24567]|TANK_P55|CAMELEON[_ ](?:C[456]|A1|H2)(?:[_ ]PLUS)?|Speed[- ](?:[AXYM]2|X2\+)|SURF1000|KIDZY70|SPEED_S8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ACCENT[_ ]NEON(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAMELEON[_ ]C([65])[_ ]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Speed[- _]([AXYM]2|S8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Speed-X2\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAMELEON[_ ](C[456]|A1|H2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL A4 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL A4 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL[_ ]A([24567])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TANK_P55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FAST7 ?3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURF1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KIDZY70(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U43EY1500B|[FH]32EY1500B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BUZZ [1-5]|BUZZ 4(?:Pro|S|Lite)|CLEVER [13]|URBAN [123](?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BUZZ ([45]) Ultra`),
		regexp.MustCompile(`(?i)BUZZ ([45]) Note`),
		regexp.MustCompile(`(?i)BUZZ ([45]) Prime`),
		regexp.MustCompile(`(?i)BUZZ ([45]) ?Pro`),
		regexp.MustCompile(`(?i)BUZZ ([124]) ?Lite`),
		regexp.MustCompile(`(?i)BUZZ ([123]) Plus`),
		regexp.MustCompile(`(?i)BUZZ ([1-5])`),
		regexp.MustCompile(`(?i)CLEVER ([13])`),
		regexp.MustCompile(`(?i)URBAN ([123])`),
		regexp.MustCompile(`(?i)(24HHY1|32HHY1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)acer|ACTAB|TravelMate|a(?:101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)|Android.*V3[67]0(?:[);/ ]|$)|Android.*Z1[23456]0 Build|Android.*Z5\d{2} Build|Android.*T0[234678] Build|Android 5(?:[\d.]*);(?: [\w-]+;)? S59|android [45]([\d.]*);(?: [\w-]+;)? S55(?:[);/ ]|$)|(?:A1-(713(HD)?|7[23]4|830|841|840(?:FHD)?|81[01])|A3-A[1-5][01]|B1-(7[1235-9][01](HD)?|7[23]3|7A0|8[1235]0|A71|860A)|TPA60W|B3-(A[125]0|A3[02]|A40FHD)|E39)(?:[);/ ]|$)|S5[12]0 Build|(DA[0-9]+HQ?L|Aspire (?:V5-121|XC-704G|V5-573G|4349)|Chromebook 14 \(CB3-431\)|Predator G9-793|GT-810|B1-870|B3-A20B|M10-12(?:_EEA)?|B3-A4[02]|android 4([\d.]*);(?: [\w-]+;)? Z500|B3-A50FHD|ET-108-11A|AC?TAB(?:721E?|1422E|821|1021(?:E|_A)|1022)|A3-A20FHD|E380|Swift SF113-31|A410_4G|EUT[13]10A?-11A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DA220HQL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DA241HL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DA[0-9]+HQ?L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M10-12(?:_EEA)?`),
		regexp.MustCompile(`(?i)A1-81[01]`),
		regexp.MustCompile(`(?i)ATAB(102[12]|721|1422)E`),
		regexp.MustCompile(`(?i)ACTAB1021(?:_A)?`),
		regexp.MustCompile(`(?i)ACTAB(821|1022)`),
		regexp.MustCompile(`(?i)A1-84(1|0(?:FHD)?)`),
		regexp.MustCompile(`(?i)A1-713(HD)?`),
		regexp.MustCompile(`(?i)A1-7[23]4`),
		regexp.MustCompile(`(?i)A3-A[12][01]`),
		regexp.MustCompile(`(?i)A3-A[345]0`),
		regexp.MustCompile(`(?i)B1-7(?:[5-9]0|30HD|A0)`),
		regexp.MustCompile(`(?i)B1-7[123][01]|B1-A71`),
		regexp.MustCompile(`(?i)B1-7[23]3`),
		regexp.MustCompile(`(?i)B1-8[123567]0`),
		regexp.MustCompile(`(?i)B3-A([125]0|3[02]|[45]0FHD|4[02])`),
		regexp.MustCompile(`(?i)A50[01]`),
		regexp.MustCompile(`(?i)(ACTAB721)`),
		regexp.MustCompile(`(?i)EUT([13])10A?-11A`),
		regexp.MustCompile(`(?i)E39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E310(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E320(?:-orange)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*V360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*V370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E380(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?P400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?P300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?S200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?E100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z1([234])0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z150(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z160(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z(5\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*S57(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T07(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T08(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S59(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer )?(Chromebook R1[13])`),
		regexp.MustCompile(`(?i)TravelMate Spin (B118-G2-R)`),
		regexp.MustCompile(`(?i)TravelMate (P653-M|5760G|8371|B118-M)`),
		regexp.MustCompile(`(?i)(?:Acer )?(Chromebook 1[45])`),
		regexp.MustCompile(`(?i)Aspire (V5-121|XC-704G|V5-573G|A515-51G|4349|E5-511)`),
		regexp.MustCompile(`(?i)(Predator G9-793|Swift SF113-31)`),
		regexp.MustCompile(`(?i)a(101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Acer; ?([^;()/]+)`),
		regexp.MustCompile(`(?i)Acer[ _-]?([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)acer[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)BLECK|AT723C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Adronix[ _]?(?:MT[0-9]+|X1001|Mini ?Tab ?7 ?3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Adronix ?Mini ?Tab ?7 ?3G`),
		regexp.MustCompile(`(?i)Adronix[ _]?(MT[0-9]+|X1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ADVAN (?:M4|S40|T5C)|i7U|S45E|S50H|I7D|i55[KD]|i4U|S7D|S4Z|i5[KE]|S5E[ _]NXT|S5J\+|S4\+|1011|E1C_3G|ADVANNASAPro)(?:[);/ ]|$)| (?:E1C Pro|5505|5202|50(?:[46]1|5[89]|62)|600[234]|6[25]01|Android [56](?:[\d.]*);(?: [\w-]+;)? (?:i5C|i7A)|i5G|E1C 3G)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)S5E[ _]NXT`),
		regexp.MustCompile(`(?i)i(55[KD]|5[KE])`),
		regexp.MustCompile(`(?i)5505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADVANNASAPro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5202(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6201(?: Build|[;)])`),
		regexp.MustCompile(`(?i)6501(?: Build|[;)])`),
		regexp.MustCompile(`(?i)i5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)6004(?: Build|[;)])`),
		regexp.MustCompile(`(?i)6002(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(S45E|50[46]1|505[89]|5062|S50H|I7D|S7D|S4Z|S5J\+|S4\+|i5C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E1C[_ ]3G`),
		regexp.MustCompile(`(?i)(T5C|i7A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADVAN 1011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hollogram|(?:HL(?:4[79]36|6246|5576|5585|[56]575|5[67]67|6[05]77|6256|7257|9000)|IntroTr3544|Pr(?:61(?:4[56]|50)|60[27]0|5[69]50|5860)|Tr3845|TR7989|SP[345]701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IntroTr3544|Tr3845`),
		regexp.MustCompile(`(?i)SP([345]701)`),
		regexp.MustCompile(`(?i)Pr(61(?:4[56]|50)|60[27]0|5[69]50|5860)`),
		regexp.MustCompile(`(?i)HL(4[79]36|6246|[56]575|5576|5585|5[67]67|6[05]77|6256|7257|9000)`),
		regexp.MustCompile(`(?i)Hollogram ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(PIC7GS8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CYGNUSX?|Gravity Z2|ChampionPro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CYGNUSX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CYGNUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gravity Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ChampionPro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy|novo[0-9]|Novo 10 Hero|AX10PRO|NUMY3GAX9|NOVO10 Spark|Aurora-II|Rainbow(?:II)? 3G`),
		regexp.MustCompile(`(?i)Numy[_ ]?3G[_ ]?Sword`),
		regexp.MustCompile(`(?i)NUMY3GAX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy3G_AX10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Novo 10 Hero QuadCore)`),
		regexp.MustCompile(`(?i)Novo7 ?Flame(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)novo ?7[_ ]ELF(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOVO7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Novo([0-9]+)[_ \-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)AIRIS|PhonePAD 83G`),
		regexp.MustCompile(`(?i)TM50QZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AIRNESS-([\w]+)`),
		regexp.MustCompile(`(?i)(?:Halo3_Pro|Halo4 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo([34])[ _]Pro`),
		regexp.MustCompile(`(?i)Airtel[ _]`),
		regexp.MustCompile(`(?i)Imagine(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT702)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AW790|M300|AWM(?:53[39]|50[19]|561|999)|AW500|Android 7(?:[\d.]*);(?: [\w-]+;)? Z9 PLUS|JA2-SMP0601)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AW790(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AW500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AWM(53[39]|50[19]|561|999)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(JA2-SMP0601)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ajib X1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ajib l1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Akai[ _\-,]|Eco[ _]E2|Glory[ _](?:G[1235]|L[123]|O[125])|(?:TAB-[79]8[03]0Q?|X[56] METAL|AKTB-703MZ|FZ70[13]|X5_PRO|X3[_ ]PRO[_ ]SLIM|iLike U5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB-([79]8[03]0Q?)`),
		regexp.MustCompile(`(?i)(FZ70[13])`),
		regexp.MustCompile(`(?i)X([56]) METAL`),
		regexp.MustCompile(`(?i)X3[_ ]PRO[_ ]SLIM`),
		regexp.MustCompile(`(?i)Glory[ _](G[1235]|L[123]|O[125])`),
		regexp.MustCompile(`(?i)Eco[ _]E2`),
		regexp.MustCompile(`(?i)AKAI\-v\.tv\.([0-9]{4})`),
		regexp.MustCompile(`(?i)Akai[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)AKAI,(AK3219NF)`),
		regexp.MustCompile(`(?i)Alba ?(?:7Q|10Q|57|4|10 TABLET|(?:[78]|10)(?:Nou|Pie))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alba (4)`),
		regexp.MustCompile(`(?i)Alba((?:[78]|10)(?:Nou|Pie)|7Q|10Q)`),
		regexp.MustCompile(`(?i)Alcatel|Alc[a-z0-9]+|One[ _]?Touch|idol[3X]|TIMXL|(?:(?:4003[AJ]|4009[ADEFIKMSX]|4013[DEJKMX]|4014[ADEKMX]|4015[ADNTX]|4016[ADX]|4017[ADEFSX]|4018[ADEFMX]|4024[DEX]|4027[ADNX]|4028[AEJS]|4032[ADEX]|4034[ADEFGLTX]|4035[ADXY]|4045[ADELX]|4047[ADFGNX]|4049[DEGMX]|4060[SW]|4063F|4065F|4087U|4114E|5001[ADJTU]|5002[ABDEFHJLMRSUWX]|5003[ADGUX]|5006[ADG]|5007[AGUOS]|5008[ADTUY]|5009[AD]|5010[DEGSUX]|5011A|5012[DFG]|5015[ADEX]|5016[AJX]|5017[ABDEOX]|5019D|5022[DEX]|5023[EF]|5024[ADFIJ]|5025[DEG]|5026[ADJ]|5027B|5028[ADY]|5029[ADEFY]|5030[ADEFJMU]|5031[ADGJ]|5032[OW]|5033(?:[DFTXY]R|[EFM]P|[ADEFGJMOQSTXY])|5034D|5036D|5038[ADEX]|5039[DY]|5041[CD]|5042[ADEFGTWX]|5044[ADGIKOPSTY]|5045[ADFGIJTXY]|5046[ADGIJSTUY]|5047[DIUY]|5048[AIUY]|5049[EGSWZ]|5050[ASXY]|5051[ADEJMTWX]|5052[ADY]|5053[ADKY]|5054[ADNSTWX]|5056[ADEGIJMNTUWX]|5057M|5058[AIJY]|5059[ADIJSTXYZ]|5060[ADJ]|5061[AKU]|5065[ADNWX]|5070D|5080[ADFQUX]|5085[ABCDGHIJNOQY]|5086[ADY]|5090[AIY]|5095[IKY]|5098[OS]|5099[ADIUY]|5116J|5131E|5145A|6002[ADJ]|6016[ADEX]|6025[ADH]|6027A|6036[AXY]|6037[BKY]|6039[AHJKSY]|6042D|6043[AD]|6044D|6045[BFIKOXY]|6050[AFY]|6055[ABDHIKPUYZ]|6056[ADH]|6058[ADX]|6060[SXC]|6062W|6065A|6070K|7040[ADEFKRT]|7041[DX]|7042A|7043[AEKY]|7044[AX]|7045Y|7048[ASWX]|7053D|7055A|7070X|7071[ADX]|8030Y|8050[DEGX]|8063|8088[MQX]|8094[MTX]|9001[DIX]|9002X|9003[AX]|9005X|9006W|9007[ATX]|9008[ADIJNTUX]|9009[AG]|9010X|9013[ATX]|9015B|9020A|9022X|9024[OW]|9025Q|9026X|9027[FQTWX]|9029[ZW]|9032[TWXZ]|9203A|9309X|A(?:46[46]BG|57[04]BL|576CC|621BL|50[13]DL|57[17]VL)|I213|I216[AX]|80(?:[89]2|84|91|6[78]|5[124567]))(?:_(?:EEA|RU|TR))?|P3[36]0X|AM-H200|A463BG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5022[EDX]|5070D`),
		regexp.MustCompile(`(?i)4015[ATX]|4016A`),
		regexp.MustCompile(`(?i)4015[DN]|4016[DX]`),
		regexp.MustCompile(`(?i)4032[AX]`),
		regexp.MustCompile(`(?i)4032[DE]`),
		regexp.MustCompile(`(?i)7040[AFK]|7041X|7042A`),
		regexp.MustCompile(`(?i)7040[DE]|7041D`),
		regexp.MustCompile(`(?i)4018[ADEFMX]`),
		regexp.MustCompile(`(?i)4035[ADXY]`),
		regexp.MustCompile(`(?i)5038[ADEX]`),
		regexp.MustCompile(`(?i)4045[AXL]`),
		regexp.MustCompile(`(?i)4045[DE]`),
		regexp.MustCompile(`(?i)5042[AFGWX]`),
		regexp.MustCompile(`(?i)5042[DE]`),
		regexp.MustCompile(`(?i)7043[AY]|7044[AX]`),
		regexp.MustCompile(`(?i)7043[EK]`),
		regexp.MustCompile(`(?i)50[16]5X`),
		regexp.MustCompile(`(?i)5015[AE]|5016[AJ]|5065[ADWX]|5116J`),
		regexp.MustCompile(`(?i)5025[DEG]|5054[ADSTX]`),
		regexp.MustCompile(`(?i)5051[AEJMTWX]`),
		regexp.MustCompile(`(?i)5095[IKY]`),
		regexp.MustCompile(`(?i)5056[ADEGJMTUX]`),
		regexp.MustCompile(`(?i)5050[ASXY]`),
		regexp.MustCompile(`(?i)6037[BKY]`),
		regexp.MustCompile(`(?i)7071[ADX]`),
		regexp.MustCompile(`(?i)5002[ABDEHJLMSUWX]`),
		regexp.MustCompile(`(?i)5031[ADGJ]|5131E`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5008R`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5002R`),
		regexp.MustCompile(`(?i)5034D|6056[ADH]`),
		regexp.MustCompile(`(?i)7040[RT]`),
		regexp.MustCompile(`(?i)5056[NW]`),
		regexp.MustCompile(`(?i)6016[AX]`),
		regexp.MustCompile(`(?i)6016[DE]`),
		regexp.MustCompile(`(?i)6036[AXY]`),
		regexp.MustCompile(`(?i)6050[AFY]`),
		regexp.MustCompile(`(?i)6039[AHJKYS]|idol3`),
		regexp.MustCompile(`(?i)6045[BFIKOYX]|AM-H200`),
		regexp.MustCompile(`(?i)6055[ABDHIKPUYZ]`),
		regexp.MustCompile(`(?i)6058[ADX]`),
		regexp.MustCompile(`(?i)6060[SX]`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?6060C`),
		regexp.MustCompile(`(?i)6043[AD]`),
		regexp.MustCompile(`(?i)4024[DEX]`),
		regexp.MustCompile(`(?i)4009[AFIKMSX]|A463BG`),
		regexp.MustCompile(`(?i)4009[DE]`),
		regexp.MustCompile(`(?i)4003[AJ]|4013[DEJKMX]|4014[AEKMX]|4114E`),
		regexp.MustCompile(`(?i)4027[ADNX]|4028[AEJS]|5019D`),
		regexp.MustCompile(`(?i)5017[ABDEOX]`),
		regexp.MustCompile(`(?i)9007[TX]`),
		regexp.MustCompile(`(?i)(?:9009G|9013[AT])`),
		regexp.MustCompile(`(?i)808[24](?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8092(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8091(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8052(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8051(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)805[4567](?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:806[78]|9013X)(?:_(?:EEA|RU))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4017[ADEFSX]`),
		regexp.MustCompile(`(?i)4034[ADEFGXL]`),
		regexp.MustCompile(`(?i)4060[SW]`),
		regexp.MustCompile(`(?i)5023[EF]`),
		regexp.MustCompile(`(?i)5010[DEGSUX]`),
		regexp.MustCompile(`(?i)5012[DFG]`),
		regexp.MustCompile(`(?i)5045[ADFGIJTXY]|5145A`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5004R`),
		regexp.MustCompile(`(?i)5046[ADIJTUY]`),
		regexp.MustCompile(`(?i)5011A|5049[EG]`),
		regexp.MustCompile(`(?i)9008[ADIJNTUX]`),
		regexp.MustCompile(`(?i)(?:9027[QFTWX]|9032[TX])`),
		regexp.MustCompile(`(?i)5085[BQ]`),
		regexp.MustCompile(`(?i)5085[ADHIJY]`),
		regexp.MustCompile(`(?i)5090[AIY]`),
		regexp.MustCompile(`(?i)5046[GS]`),
		regexp.MustCompile(`(?i)5085[GO]`),
		regexp.MustCompile(`(?i)5048[AYUI]`),
		regexp.MustCompile(`(?i)8050[GX]`),
		regexp.MustCompile(`(?i)8050[ED]`),
		regexp.MustCompile(`(?i)5098S|9001[DIX]`),
		regexp.MustCompile(`(?i)9003[AX]`),
		regexp.MustCompile(`(?i)9024[OW]`),
		regexp.MustCompile(`(?i)I216[AX]`),
		regexp.MustCompile(`(?i)7048[ASWX]`),
		regexp.MustCompile(`(?i)(?:Alcatel-)?OT-802`),
		regexp.MustCompile(`(?i)(?:TRIBE_)?3075A`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch[ _]((?:T[0-9]+|TAB[^/;]+|EVO[78](?:HD)?)) Build`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch([^/;\)]*)\)`),
		regexp.MustCompile(`(?i)5080[ADFQUX]`),
		regexp.MustCompile(`(?i)4049[DEGMX]`),
		regexp.MustCompile(`(?i)5044[ADIKOPTY]`),
		regexp.MustCompile(`(?i)4047[DFXN]`),
		regexp.MustCompile(`(?i)5047[DIUY]`),
		regexp.MustCompile(`(?i)4044[CV]`),
		regexp.MustCompile(`(?i)(?:Alcatel)?4044[MNT]`),
		regexp.MustCompile(`(?i)5044[GS]`),
		regexp.MustCompile(`(?i)5033[DFTXY]R(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5033MP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5033(?:[ADJEFGMOTXYQS]|[EF]P)(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5009[AD]`),
		regexp.MustCompile(`(?i)5003[ADGUX]`),
		regexp.MustCompile(`(?i)5008[ADUYT]`),
		regexp.MustCompile(`(?i)5007[AGUS]`),
		regexp.MustCompile(`(?i)6002[AD]`),
		regexp.MustCompile(`(?i)5006[ADG]`),
		regexp.MustCompile(`(?i)5024[ADFIJ]|5028Y|6025[ADH]`),
		regexp.MustCompile(`(?i)(?:5028[AD]|5007O)`),
		regexp.MustCompile(`(?i)5030[ADFJMU]`),
		regexp.MustCompile(`(?i)5001[ADJTU]`),
		regexp.MustCompile(`(?i)5059[ADJXYZIT]`),
		regexp.MustCompile(`(?i)5060[ADJ]`),
		regexp.MustCompile(`(?i)5052[ADY]|5053[ADKY]`),
		regexp.MustCompile(`(?i)5029[ADFY]`),
		regexp.MustCompile(`(?i)5032[OW]|5099[ADYUI]`),
		regexp.MustCompile(`(?i)5026[ADJ]`),
		regexp.MustCompile(`(?i)5039[DY]`),
		regexp.MustCompile(`(?i)5058[AIJY]`),
		regexp.MustCompile(`(?i)5061[AKU]`),
		regexp.MustCompile(`(?i)5086[ADY]`),
		regexp.MustCompile(`(?i)8088[XQM]`),
		regexp.MustCompile(`(?i)8094[MTX]`),
		regexp.MustCompile(`(?i)9029[ZW]`),
		regexp.MustCompile(`(?i)9032[WZ]`),
		regexp.MustCompile(`(?i)(?:ALCATEL_)?A383G`),
		regexp.MustCompile(`(?i)ALCATEL([^/;]+) Build`),
		regexp.MustCompile(`(?i)ALCATEL[ \-]?([^/;\)]+)`),
		regexp.MustCompile(`(?i)ALCATEL_([^/;\)]+)`),
		regexp.MustCompile(`(?i)Alc([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Access_Q784C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Alfawise (?:A9)|(?:A95X_R1|Z28Pro))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A95X_R1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z28Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfawise (A9)`),
		regexp.MustCompile(`(?i)ALIGATOR[_ ]|(?:RX[67]00|S5710|RX460)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ALIGATOR[ _])?(S4080|S5550|S50(?:6[56]|[678]0)|S55[24]0|S5710|RX510|S6[015]00|RX710|RX[678]00|RX460)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AllCall_|Heat[34]|SHINE 12T?|(?:Rio_X|S5500)(?:[);/ ]|$)|Hot ?[125][^;/]+ Build`),
		regexp.MustCompile(`(?i)AllCall_(Alpha|Atom|Bro|Madrid)`),
		regexp.MustCompile(`(?i)Heat([34])`),
		regexp.MustCompile(`(?i)Rio_X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S5500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hot ?([125][^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:T1001XS?|T1006S?|T1001|T811|iPlay[_ ][2345]0|U1006H?|U1005E|U63PLUS|iPlay8|iPlay_?[89]T|iPlay[134]0|iPlay_40H|iPlay50_mini_Pro|iPlay50 (?:Pro|Mini)|iPlay_?[25]0[SP]|iPlay50(?:Pro|_Lite)?|kPad|X_Game|T806MHE?|Power M3|Smile_X|iPlay_60_Lite|iPlay_60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smile_X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T811(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001XS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kPad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1006S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U63PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U1006H?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U1005E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T806MHE?`),
		regexp.MustCompile(`(?i)iPlay_?([56]0)_Lite`),
		regexp.MustCompile(`(?i)iPlay[_ ]?50[_ ]mini[_ ]Pro`),
		regexp.MustCompile(`(?i)iPlay ?50 ?Pro`),
		regexp.MustCompile(`(?i)iPlay[_ ]?([1-6]0|[89]T?|40H|[25]0[sP])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X_Game(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power M3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Allview|A4You|H1003_LTE_PRO|A5_(?:Easy(?:_TM)?|Ready(?:_TM)?|Quad|Quad_Plus_TM)|A[5-9]_Lite|A5Smiley|A6_Duo|A10_Lite_(?:2019|2GB)|A10_(?:Plus|Max)|AX2_Frenzy|AX4Nano|AX5NanoQ|AX50(?:[23]|1Q)|C6_Duo|E[23]_Living|E[23]_(?:Jump|Sign)|E4_Lite|M9_Connect|P(?:43_Easy|[5689]_Energy|6_Energy_Lite|[68]_Energy_Mini(?:_TM)?|(41|[4568])_eMagic(?:_TM)?|[589](?:_)?Life(?:_TM)?|[567]_Lite(?:_TM)?|6_plus|[45678]_Pro|7_Seon|10_Life|10_Max|10_Style|7_Xtreme|6_Qmax|4_Quad)|V(?:[1345]_Viper|1_Viper_I|2_Viper_(?:[EISX]|X_plus|Xe))|X4_Soul_Vision|X(?:[1-46]_Soul_Xtreme|[1-5]_Soul|3_Soul_Lite|[2-6]_Soul_Mini(?:_TM)?|4_Soul_Mini_S(?:_TM)?|[2-58]_Soul_Style(?:_TM)?|2_Soul_Style_Plus|2_Twin)|A30_Plus|Viva_(?:H801|100[13]G|(?:H100[124]|H701|H802)_LTE|C701|i701G|803G)|VivaH(?:10|[78])|X7_Soul_Style|X[12]0_Soul|X[78]_Soul_Pro|V10_Viper|Viva_(?:Home|i7G)|H1004_LTE`),
		regexp.MustCompile(`(?i)E([23])_Living`),
		regexp.MustCompile(`(?i)E([23])_Jump`),
		regexp.MustCompile(`(?i)P(41|[4568])_eMagic(?:_TM)?`),
		regexp.MustCompile(`(?i)P([567])_Lite(?:_TM)?`),
		regexp.MustCompile(`(?i)P([45678])_Pro`),
		regexp.MustCompile(`(?i)P([69])_Energy_Lite`),
		regexp.MustCompile(`(?i)P([689])_Energy_mini(?:_TM)?`),
		regexp.MustCompile(`(?i)P([5689])_Energy`),
		regexp.MustCompile(`(?i)P([589])(?:_)?Life(?:_TM)?`),
		regexp.MustCompile(`(?i)V([12])_Viper_I4G(?:_TM)?`),
		regexp.MustCompile(`(?i)V2_Viper_(E|I|S|X(?:e)?)`),
		regexp.MustCompile(`(?i)X([1246])_Soul_Xtreme`),
		regexp.MustCompile(`(?i)X4_Soul_Infinity_(L|N|S|Z)`),
		regexp.MustCompile(`(?i)X4[_ ]Soul[_ ]Infinity[_ ]Plus`),
		regexp.MustCompile(`(?i)X([34])_Soul_Lite`),
		regexp.MustCompile(`(?i)X4_Soul_Mini_S(?:_TM)?`),
		regexp.MustCompile(`(?i)X([23456])_Soul_Mini(?:_TM)?`),
		regexp.MustCompile(`(?i)X([357])_Soul_Pro`),
		regexp.MustCompile(`(?i)X([23458])_Soul_Style(?:_TM)?`),
		regexp.MustCompile(`(?i)X(\d+)_Soul`),
		regexp.MustCompile(`(?i)V(\d+)_Viper`),
		regexp.MustCompile(`(?i)A5_Easy(?:_TM)?`),
		regexp.MustCompile(`(?i)A([56789])_Lite`),
		regexp.MustCompile(`(?i)A5_Ready(?:_TM)?`),
		regexp.MustCompile(`(?i)A(10|30)_Plus`),
		regexp.MustCompile(`(?i)Viva_(i7G)`),
		regexp.MustCompile(`(?i)H1003_LTE_PRO([13])`),
		regexp.MustCompile(`(?i)Viva[_ ]?H([78]|10)[_ ]?LTE`),
		regexp.MustCompile(`(?i)Viva_?((?:H80[12]|H100[12]|H701)_LTE|C701|i701G|803G|H10|H7|H801|100[13]G)`),
		regexp.MustCompile(`(?i)ALLVIEW ?SPEEDI`),
		regexp.MustCompile(`(?i)ALLVIEW ?SPEED`),
		regexp.MustCompile(`(?i)AX4Nano[_ ]plus`),
		regexp.MustCompile(`(?i)AX(50[23]|501Q)`),
		regexp.MustCompile(`(?i)Allview[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Allview[ _-]([^;/]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:QUAD-CORE (?:T3 p1|A64 p3|A33 y3|T3 K2001M|T3 k2001o|T3 k2001-nwd)|ZY-07B|UltraOcta-T8|OCTA-CORE T8|OCTOPUS-CORE T8|QUAD-CORE T3 p3|QuadCore-R16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUAD-CORE T3 K(2001M?)`),
		regexp.MustCompile(`(?i)QUAD-CORE T3 p([13])`),
		regexp.MustCompile(`(?i)(?:FF-5000|ZQ8003|825X_Pro|03_v89_jbl|benz_hy1920x720|8227L_demo|tb8163p3_bsp)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FF-5000)`),
		regexp.MustCompile(`(?i)(ZQ8003|825X_Pro|benz_hy|8227L_demo|tb8163p3_bsp)(?:1920x720)?`),
		regexp.MustCompile(`(?i)Altice[ _]|(SX41|Android 9(?:[\d.]*);(?: [\w-]+;)? (?:S32|S42|S32_(?:Plus|NFC)))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SX41|S32|S42|S32_Plus|S32_NFC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Altice[ _](S62|S31|S43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALTIMO[;,]`),
		regexp.MustCompile(`(?i)Altus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?(?:AFT[ABMNRST]|AFTSSS?|AFTANNA0|AFTGAZL|AFTMM|AFTK(?:A|M|RT)|AFTTI43|AFTHA001|AFTKA(?:UK)?002|SD4930UR|AEO(?:BC|C[HW]|KN)|KF(?:OT|ONWI|TT|JWI|JWA|[DFS]OWI|A[PRSU]WI|T[BH]WI|TRP?WI|SAW[IA]|GIWI|KAWI|MAWI|MEWI|[MST]UWI|SNWI))(?:[);/ _]|$)|Kindle|AlexaMediaPlayer|Amazon (?:Tate|Jem)|Silk/\d+\.\d+|Echo/1|.+FIRETVSTICK|Amazon;Echo`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTA(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTR(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTGAZL(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTN(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTTI43`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTKA(?:UK)?002(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTANNA0(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTALMO(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTHA001(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTB(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTSSS(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTSS(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTTIFF43(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFT[MST](?:[);/ _]|$)`),
		regexp.MustCompile(`(?i).+FIRETVSTICK2018|(?:smarttv_)?AFTMM(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTKM(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTKA(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTKRT(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)KFFOWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFJWI(?:[);/ ]|$)|Amazon Jem`),
		regexp.MustCompile(`(?i)KFJWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSOWI(?:[);/ ]|$)|Amazon Tate`),
		regexp.MustCompile(`(?i)KFTHWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTHWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAPWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAPWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSNWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFARWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFASWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFQUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMEWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFRAP?WI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFGIWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFDOWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFKAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFONWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSAWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTBWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTRWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTRPWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFOT|Kindle Fire|Silk-Accelerated`),
		regexp.MustCompile(`(?i)Amazon;Echo;`),
		regexp.MustCompile(`(?i)Echo/1|AEO(?:AT|BC|CN|KN|TA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazon;Echo_Dot`),
		regexp.MustCompile(`(?i)Amazon;Echo_Show_(\d+)`),
		regexp.MustCompile(`(?i)AEOBP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AEOC[HW](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AEOHY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Silk/\d+\.\d+`),
		regexp.MustCompile(`(?i)(?:AFTBU001|AFTPR001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTBU001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTPR001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMIGOO (R300|R9 Max|M1 Max|X15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Amigo7x?(?:YUF|SCB)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amoi|(?:A862W|Clever[ -]?(?:Gem S52|Gleam S45|Pad P7|Wave S50|Touch S46|JOY S40|Lite S41))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Clever[ -]?(Gleam S45|Gem S52|Wave S50|Touch S46|Lite S41)`),
		regexp.MustCompile(`(?i)Amoi[-_ /](CA6)`),
		regexp.MustCompile(`(?i)Amoi[-_ /]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Amoisonic-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:ANDOWL-)?(Q[45]|QG9|QK9MAX)(?:[);/ ]|$)|Andowl`),
		regexp.MustCompile(`(?i)Android 8(?:[\d.]*);(?: [\w-]+;)? P80(?: Build|[);])`),
		regexp.MustCompile(`(?i)angelcare[ _]`),
		regexp.MustCompile(`(?i)F20 ?pro`),
		regexp.MustCompile(`(?i)angelcare[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Anker|smarttv_AFTMM-Anker-AK-D3000111|(?:AFTMM|D21[45]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Anker|smarttv_AFTMM-Anker-AK-D3000111|AFTMM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)D2140(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)D2150(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANRY-(RS10|[SX]20|E30|1006)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AOCOS ([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:X900_US|X700_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X([79]00)_(?:EEA|US)`),
		regexp.MustCompile(`(?i)Aoro[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:aoson ?(?:R10[1-3]|S[78]|M707TG|M96T)(?:[_ ]?Pro)?|R103)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:aoson ?)?R10([1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?S7_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?S7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?S8Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?(M707TG|M96T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:iTunes-)?Apple[ _]?TV|Apple/|(?:Apple-|iTunes-)?(?:iPad|iPhone)|iPh(?:[0-9]|1[0-4]),[0-9]|CFNetwork|HomePod|AirPlay|AirPodcasts/|Watch ?OS|Watch1,[12]|MDCR_Mac|ICRU_iP(?:ad|hone)|Mac OS X[,;]|OSX/|macOS,|for Apple Watch`),
		regexp.MustCompile(`(?i)(?:HomePod|AirPodcasts/)`),
		regexp.MustCompile(`(?i)Watch3,[13]`),
		regexp.MustCompile(`(?i)Watch3,[24]`),
		regexp.MustCompile(`(?i)Watch5,(?:9|11)`),
		regexp.MustCompile(`(?i)Watch5,1[02]`),
		regexp.MustCompile(`(?i)Watch6,1[02]`),
		regexp.MustCompile(`(?i)Watch6,1[13]`),
		regexp.MustCompile(`(?i)Watch6,1[46]`),
		regexp.MustCompile(`(?i)Watch6,1[57]`),
		regexp.MustCompile(`(?i)Watch([456]),[13]`),
		regexp.MustCompile(`(?i)Watch([456]),[24]`),
		regexp.MustCompile(`(?i)Watch6,[68]`),
		regexp.MustCompile(`(?i)Watch6,[79]`),
		regexp.MustCompile(`(?i)Watch7,[13]`),
		regexp.MustCompile(`(?i)Watch7,[24]`),
		regexp.MustCompile(`(?i)(:?Apple Watch|watchOS)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)8`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac11(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac11(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac11(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac12(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac13(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac13(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac14(?:%2C|,)[13]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac14(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac14(?:%2C|,)4`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac17(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac18(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac18(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac19(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac19(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac20(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac21(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac15(?:%2C|,)[45]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMacPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook[45](?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir3(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir4(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir6(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir7(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)15`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro1(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro2(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro[34](?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)[34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)5`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro6(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro8(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro9(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro10(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro11(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro11(?:%2C|,)[23]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro11(?:%2C|,)[45]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro13(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro13(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro14(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro14(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)4`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro16(?:%2C|,)[14]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro16(?:%2C|,)[23]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro17(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)7`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro18(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)(?:6|10)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac15(?:%2C|,)(?:[79]|11)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro18(?:%2C|,)[34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)[59]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac15(?:%2C|,)(?:[368]|10)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini5(?:%2C|,)[123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini6(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)(?:3|12)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac7(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac7(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerBook5(?:%2C|,)6`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerBook6(?:%2C|,)7`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac13(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)1[34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?1[C,_]1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?1[C,_]2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?2[C,_]1| 3GS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?3[C,_][123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?4[C,_]1|1C2%254enohPi| 4S\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?5[C,_][12]| 5\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?5[C,_][34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?6[C,_][12]|(?:iPhone[ _]?5S| 5S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?7[C,_]1|1C2%257enohPi|(?:iPhone[ _]?6Plus| 6PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?7[C,_]2|(?:iPhone[ _]?6| 6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?8[C,_]1|(?:iPhone[ /]?6s| 6S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?8[C,_]2| 6SPLUS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?8[C,_]4|(?:iPhoneSE| SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?9[C,_][24]|(?:iPhone[ _]?7Plus| 7PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?9[C,_][13]|(?:iPhone[ _]?7 ?| 7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?10[C,_][25]|(?:iPhone[ _]?8Plus| 8PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?10[C,_][14]|(?:iPhone[ _]?8| 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?11[C,_][46]|(?:iPhone[ _]?XS[ _]?Max| XSMAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?11[C,_]2|(?:iPhone[ _]?XS| XS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?11[C,_]8|(?:iPhone[ _]?XR| XR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?10[C,_][36]|(?:iPhone[ _]?X| X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]5|(?:iPhone[ _]?11[ _]?Pro[ _]?Max| 11PROMAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]3|(?:iPhone[ _]?11[ _]?Pro| 11PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]1|(?:iPhone[ _]?11| 11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]8|(?:iPhone SE 2|iPhoneSE2ndGen| SE2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]1|(?:iPhone12mini| 12MINI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]4|(?:iPhone[ _]?12[ _]?Pro[ _]?Max| 12PROMAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]3|(?:iPhone[ _]?12[ _]?Pro| 12PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]2|(?:iPhone[ _]?12| 12)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]3|(?:iPhone[ _]?13[ _]?Pro[ _]?Max| 13PROMAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]2|(?:iPhone[ _]?13[ _]?Pro| 13PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]4|(?:iPhone[ _]?13[ _]?mini| 13MINI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]5|(?:iPhone[ _]?13| 13)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]6|(?:iPhoneSE3ndGen| SE3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]3|(?:iPhone[ _]?14[ _]?Pro[ _]?Max| 14PROMAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]2|(?:iPhone[ _]?14[ _]?Pro| 14PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]8|(?:iPhone[ _]?14[ _]?Plus| 14PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]7|(?:iPhone[ _]?14| 14)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?16[C,_]2|(?:iPhone[ _]?15[ _]?Pro[ _]?Max| 15PROMAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?16[C,_]1|(?:iPhone[ _]?15[ _]?Pro| 15PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]5|(?:iPhone[ _]?15[ _]?Plus| 15PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]4|(?:iPhone[ _]?15| 15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad1[C,_]1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad2[C,_][1-4]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad2[C,_][567]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad3[C,_][123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad3[C,_][456]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad4[C,_][123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad4[C,_][456]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad4[C,_][789]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad5[C,_][12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad5[C,_][34]|(?:iPad Air 2 \(WiFi\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad6[C,_][34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad6[C,_][78]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad6[C,_](?:11|12)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_][12](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_][34](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_][56]|(?:iPad 6 \(WiFi\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_](?:11|12)(?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_](?:9|10)|(?:iPad Pro \(11-inch\) \(4th generation\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]4|(?:iPad Pro 11 inch 5th Gen \(WiFi\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_][5-7]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_]1[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_][12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_][34]|(?:iPad Pro 11-inch 3rd-gen \(Cellular\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_][5-8]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad11[C,_][12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad11[C,_][34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad11[C,_][67]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad12[C,_]1|(?:iPad 9th Gen \(WiFi\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad12[C,_]2|(?:iPad 9th Gen \(Cellular\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]8`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_](?:9|10|11)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]16`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]17`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]1|(?:iPad Air 4th Gen \(WiFi\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]10`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]11`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]1|(?:iPad mini 6th Gen \(WiFi\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]4`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]5`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]6`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]8`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]9`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad16[C,_]3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad16[C,_]4`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad16[C,_]5`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad16[C,_]6`),
		regexp.MustCompile(`(?i)Apple-?TV2[C,_]1`),
		regexp.MustCompile(`(?i)Apple-?TV3[C,_][12]`),
		regexp.MustCompile(`(?i)Apple-?TV5[C,_]3|Apple TV 4`),
		regexp.MustCompile(`(?i)Apple-?TV6[C,_]2`),
		regexp.MustCompile(`(?i)Apple-?TV11[C,_]1`),
		regexp.MustCompile(`(?i)(?:iTunes-)?Apple[ _]?TV|Apple\/|(?:Apple-|iTunes-)?[^l][^i][^k][^e][^\s](?:iPad|iPhone)|iPh(?:[0-9]|1[0-4]),[0-9]|CFNetwork|HomePod|AirPlay|Watch ?OS|Watch1,[12]|MDCR_Mac|ICRU_iP(?:ad|hone)|Mac OS X[,;]|macOS,`),
		regexp.MustCompile(`(?i)iTunes-iPad/[0-9]+(?:\.[0-9]+)* \(([^;]+);`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad`),
		regexp.MustCompile(`(?i)iTunes-iPhone/[0-9]+(?:\.[0-9]+)* \(([^;]+);`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPhone ?(3GS?|4S?|5[CS]?|6(:? Plus)?)?`),
		regexp.MustCompile(`(?i)(NS220)`),
		regexp.MustCompile(`(?i)Aquarius[_ ]CMP[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Aquarius[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos|(?:A50TI|AC101BHE|AC50BHE|AC45NE|X67 5G|AC45BHE|AC101PL3GV2|9\.4 FFF|Tikeasy 10d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos (Oxygen (?:63|57|68XL))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A50TI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC45NE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X67 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos ?5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC101BHE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC50BHE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos 80 Oxygen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos 101 Oxygen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Access 70 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Oxygen 101S ARDOIZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Oxygen 101S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos T ?(101X?) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Core (101) 3G Ultra`),
		regexp.MustCompile(`(?i)Archos Core (70|101) 3G`),
		regexp.MustCompile(`(?i)Archos Hello 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9\.4 FFF(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Sense 101 X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tikeasy 10d(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T101 HD 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T101 FHD WiFi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos ([^/;]*(?:PAD)[^/;]*) Build`),
		regexp.MustCompile(`(?i)Archos ((?:[789]|10)[0-9]?[a-z]* ?(?:G9|Access|Magnus|G10|Helium|Titanium|Copper|Cobalt|Platini?um|Xenon|Carbon|Neon|XS|IT)[^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos ([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)BioniQP116(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\))|Impulse[ _]P[12]|(?:EDGE A5HD|Elf_S8|ICON (R40\+|R45)|Wizard_[12]|UKOZI U[56]|L925)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)Impulse[ _]P1\+`),
		regexp.MustCompile(`(?i)Impulse[ _](P[12])`),
		regexp.MustCompile(`(?i)EDGE (A5HD)`),
		regexp.MustCompile(`(?i)ICON (R40\+|R45)`),
		regexp.MustCompile(`(?i)Wizard_([12])`),
		regexp.MustCompile(`(?i)Elf_S8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UKOZI U([56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L925(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TSD Octa A0520P|TSD Quadra A050[59]P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arnova|ARCHM901|AN7CG2|AN7IG3|AN7G2(DTE|I)?|AN7[BCDFH]?G3|A80KSC|AN8G2|AN8[BC]?G3|AN9G2I?|AN9G3|A101[BC]|AN10G2|AN10BG2(DT|I)?|AN10BG3(DT)?|AN10[CD]G3`),
		regexp.MustCompile(`(?i)AN7G2I|AN7G2|AN7G2DTE`),
		regexp.MustCompile(`(?i)A101B2|A101C|AN10G2`),
		regexp.MustCompile(`(?i)AN10BG2|AN10BG2DT|AN10BG2I`),
		regexp.MustCompile(`(?i)AN10BG3|AN10BG3DT|AN10BG3-LZ`),
		regexp.MustCompile(`(?i)Arnova ([^/;]*) Build`),
		regexp.MustCompile(`(?i)ARTLINE[ _-](KMX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artel[_ ]|\w+_ARTEL_\w+|(?: GAP|GAP YOQ| ALO|U1 MINI|Android 8(?:[\d.]*);(?: [\w-]+;)? U[124]|U3_4G| R3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAP|GAP YOQ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U1 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U3_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U([124])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artel[_ ](Quadro(?: Pro)?|Tesla|Air|Tomchi|Premium|U3_4G|Z5|Sentinel (?:X 8G|X D5|X)|T10|T21)`),
		regexp.MustCompile(`(?i)Artel[_ ]Komi3`),
		regexp.MustCompile(`(?i)Artel[_ ]Q21_PRO`),
		regexp.MustCompile(`(?i)Artel[_ ]Q21`),
		regexp.MustCompile(`(?i)Artel[_ ](Star|Nova|Connect|Choice|Style)`),
		regexp.MustCompile(`(?i)(?:\w+_)?ARTEL_([FVM]5|X[45])_\w+`),
		regexp.MustCompile(`(?i)Artizlee[ _]S9|ATL-(?:16|21(?:PLUS|[XT])?|31|26)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATL-21PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ATL-(?:16|21[XT]?|31|26))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artizlee[ _]S9`),
		regexp.MustCompile(`(?i)(?:32LH7010T|32LH8030S|43L[FU]8120T|43LU8030S|43LU8130S|32LH8[10]10T|32LH7030S|32LF7130S|28LH701[10]T|43LU8010T|24LH7011T|24L[HF]7020T|24LH8010T|40LF7030S|5[05]LU8120T|42LF7110T|32LF7120T|32LF8120T|50LU8110T|40LF8120T|43LF7010T|32LH8011T|32LF7111T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2})(L[FHU]\d+[ST])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASANZO[ _](?:A2|S[23]|[SZ]5|S3_PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASANZO[ _]S3[ _]PLUS`),
		regexp.MustCompile(`(?i)ASANZO[ _](A2|S[23]|[SZ]5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASK[ _]`),
		regexp.MustCompile(`(?i)ASK[ _]791SP[ _]3G`),
		regexp.MustCompile(`(?i)ASK[_ ]([^/;]*) Build`),
		regexp.MustCompile(`(?i)ASPERA|(?:Wren|Jazz 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASPERA[ _](R5h|R9|RT3|A4[02]|A50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wren(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jazz 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AS[-_](?:50[123]|543[1-6]|44[12]1|541[12]|54[23]1|6431|[46]01L)|AP-(?:109|115G|721N|753G|7[25]7G|10[68]|107G|110N|941|719))[;/)_ ]`),
		regexp.MustCompile(`(?i)AS[-_]401L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5432(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS[-_](?:5434|501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS_601L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5433 Secret(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5433(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5421(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-44[12]1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5435(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5436[ _]`),
		regexp.MustCompile(`(?i)AS-6431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5411[_ ]`),
		regexp.MustCompile(`(?i)AS-5412 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-721N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-941(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-108(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-106(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AP-(?:109|115G|7[25]7G|753G|107G|110N|719))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AS-(?:\d+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[- ](S451|S501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Asus|Transformer|ZenFone Max|MeMOPad 10|TF300T|Slider SL101|PadFone|ME302(?:C|KL)|ME301T|ME371MG|ME17(?:1|2V|3X)|(?:K0[01][0-9a-z]|(?:P(?:00[128ACIL]|01[MTVWYZ]|01MA|01T_1|02[13478])(?: Build|\))|X015D|X018D|X003|X00[7ABT]D|Z00D|Z00[MTY]D|Z01[7FGHKMR]D)|K01[579N]|AST21|K50IJ)(?:[);/ ]|$)|G55[023]KL|ZB(631|602|633|55[135]|50[01])KL|ZC(55[134]|520|600)KL|ZA550KL|ZE(5[02]0|620|55[2345])KL|ZD55[23]KL|ZS6(?:61|7[02136])KS|ZS(6[0236]0|55[10])KL|ZS590KS|ZB(500KG|601KL)|MeMo Pad FHD 10 LTE|Z00[SV]D|P01Y_S|Zenfone 5Z?|AOSP on Duma|Tinker Board(?: S)?|TX201LA|I005DA|I003D|Z00UDH`),
		regexp.MustCompile(`(?i)XPad 10 ?LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME171(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASUS Z906(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME302C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ME302KL|MeMOPad 10FHD LTE|MeMo Pad FHD 10 LTE|AOSP on Duma)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME301T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z101 Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X Pad 10 LTE|ASUSXPad10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[3A7]|K007|K00R)(?:[);/ ]|$)|MeMO Pad 7`),
		regexp.MustCompile(`(?i)K01E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00U|ME173X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[15]|K00L|AST21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TF300T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K01B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TX201LA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P01[YZ](?:_S)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00J`),
		regexp.MustCompile(`(?i)P01[VW]|P002`),
		regexp.MustCompile(`(?i)(?:P024|P00A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P01MA?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASUS_(w706)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00I`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P008`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00C|P02[138]|P00L|P01T_1`),
		regexp.MustCompile(`(?i)ME371MG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[2N9]|K00E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K016(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A001D|ZB634KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00N`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00[CE]`),
		regexp.MustCompile(`(?i)(?:ASUS[-_])?T00T`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A002(A)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?AI2401_H`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I006D|ZS590KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I004D|ZS672KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2202)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2302)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A006`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A009`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z007`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00P[SD]|ZB555KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZB60[12]KL)|ZenFone Max Pro M1`),
		regexp.MustCompile(`(?i)(?:ASUS[_-])?(X01([AB]D)|ZB633KL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z00[AD]|Z008D|Z008|Z00AD[AB]?|ZE551ML)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZenFone 2E)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:A007|Z00YD|ZA550KL|ZB553KL|ZB501KL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00RD|G552KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z00[ERLMTW]D|Z011D|ZE500KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00[IQ1]|Z01KD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00P`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00K|X017DA|X017D|ZC600KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z01RD|ZS620KL)|Zenfone 5Z`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00[JF]|X00QD|X00QSA|ZE620KL)|Zenfone 5`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00G|Z002|ZS630KL|I01WD[X]?)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZS671KS`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZS670KS|I002D|AI2205_[AC])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z010D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X018D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X00TD?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X01BDA|ZB631KL|Zenfone Max Pro M2)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X014D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(L001|X00[7AB]D|X009[DB][DA]|X009D|Z00[SV]D|ZB500K[LG]|ZB551KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:G550KL|X013DB)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X013D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00[SV]D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00[23])`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X005`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X550`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00GD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00D[DS]|X008D)|ZC553KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X008)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(ZE553KL|Z01HDA?)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZS550KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00UD`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(Z016[DS]|Z01FD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z(?:017DA|E520KL|E552KL|017D|012(?:DC?|S))`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z01B[DS]|ZC551KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A001`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZD552KL|Z01MDA?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00LDA|ZD553KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00LD|Z01KS|Z01KDA|ZE554KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X00(?:[HIK]D|IS)|ZC554KL|ZC520KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X015D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(:?Z01G[DS]|ZS551KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00XS`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z01QD|ZS600KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I001D[ABCE]?|ZS660KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I003DD?|ZS661KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I005D[AC]?|ZS67[36]KS|ROG Phone 5)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2201)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2203)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2205)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2401)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I007D)`),
		regexp.MustCompile(`(?i)(K50IJ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tinker Board( S)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZenWatch( 2)?`),
		regexp.MustCompile(`(?i)Asus(?:-|;)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(PadFone(?: [^;/]+)?) Build`),
		regexp.MustCompile(`(?i)(PadFone(?: [a-z0-9]+)?)`),
		regexp.MustCompile(`(?i)(?:Asus|Transformer) ((?:Pad |Prime )?TF[0-9a-z]+)`),
		regexp.MustCompile(`(?i)Chromebook Flip (C10[01]PA|C302)`),
		regexp.MustCompile(`(?i)(?:AP570[12]|AP5705S|AP6301)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AP570[12]|AP5705S|AP6301)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATOM-(108A[ML]|216AL|216RK|216AM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S-Tab1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YQ10S_(?:MAX|Gold)|AT81K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT81K)`),
		regexp.MustCompile(`(?i)(Magic_1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(100011886BK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Audiovox|CDM|UTS(?:TARCOM)?\-|audio[a-z0-9\-]+`),
		regexp.MustCompile(`(?i)Audiovox[_\-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)CDM(?:-)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)UTS(?:TARCOM)?-([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)audio([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)R2021W2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(R2021W2)`),
		regexp.MustCompile(`(?i)Avaya Vantage(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avenzo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOB4 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOB4PRO 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avvio[ _]?([a-z0-9\-]+)|(?:CHIVAS_55|Colombia_2018|Mint_M353)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avvio[ _]PAD`),
		regexp.MustCompile(`(?i)Avvio[ _]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(?:AWOW_)?(?:UTBook|CreaPad_100[359](?:_EEA)?)`),
		regexp.MustCompile(`(?i)(?:AWOW_)?(UTBook|CreaPad_100[359])`),
		regexp.MustCompile(`(?i)Axioo[_ ]|PICOp(?:hone|ad)[_-]`),
		regexp.MustCompile(`(?i)Axioo[_ ](AX[45])`),
		regexp.MustCompile(`(?i)PICOphone_(L1|M4N|M4P_M3|M4U_M2_M)`),
		regexp.MustCompile(`(?i)PICOpad[_-](7H_7|7H|GGT)(?:_3G)?`),
		regexp.MustCompile(`(?i)Axxion ATAB-[0-9]+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Axxion ATAB-([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT1011E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azumi[_ -]|(?:SPEED55|A50_Style_Plus|LT50\+|KIREI A5Q PLUS|NOBU[ _]A55[ _]PRO|IRO A55 QL?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azumi[_ -]AKANE`),
		regexp.MustCompile(`(?i)Azumi[_ -]A4\+`),
		regexp.MustCompile(`(?i)Azumi[_ -]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Azumi[_ -]([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)LT50\+`),
		regexp.MustCompile(`(?i)NOBU[ _]A55[ _]PRO`),
		regexp.MustCompile(`(?i)BAFF\d{2}|(?:32YSTV-R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAFF(\d{2})YFHD`),
		regexp.MustCompile(`(?i)(?:BAFF)?(\d{2})Y(STV(?:-R)?)`),
		regexp.MustCompile(`(?i)Pixavi[ _](Phone)`),
		regexp.MustCompile(`(?i)BASE[_ ](Varia)`),
		regexp.MustCompile(`(?i)BAUHN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)bb-mobile|Techno[-_ ](8\.0|9\.7|TQ863Q|X595BT|X800BJ|S700BF|I700AJ|10\.1 LTE TQ060X|7\.0 LTE TQ763I|I785AP|I101BI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]S700BF(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]10\.1 LTE TQ060X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]TQ863Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]I700AJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[-_ ]I785AP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]X800BJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[-_ ]I101BI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]7\.0 LTE TQ763I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FirstTab TP-17)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ](9\.7|[78]\.0) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ](?:X595BT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)65LEX-8234-UTS2C|(?:32LEX-7272|24LEX-7269|([65]5|50|4[023]|3[29]|2[48])LEX[-_](81(?:27|39|45|58|6[12]|7[34])|71(?:[23]7|4[345]|5[45]|6[2368]|[57]8|7[15])|7202|725[579]|7225|7287|8243|8202|8289|9201)[_/]?([FU]?TS2C)|(?:3[29]|24)LEX-7289(?:-c)?|65LEX-8262)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2})LEX[-_](\d{3,4})[_/-]?([FU]?TS2C)`),
		regexp.MustCompile(`(?i)(3[29]|24|65)LEX-(7289|8262)(?:-c)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2})LEX[-_](\d{3,4})`),
		regexp.MustCompile(`(?i)(?:BDF[- ](?:819|P10|M107|K107H|KT107|MT6753|X20|P30)|K960N_MT(?:6580|6753)(?:_32_N)?|m107_\d+a_64_q|ZL80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BDF[- ](819|P10|M107|K107H|KT107|MT6753|X20|P30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)m107_\d`),
		regexp.MustCompile(`(?i)K960N_MT(6580|6753)(_32_N)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SMART_B19|Destiny)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BGH ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Y([17]00|2[01]0|1010)`),
		regexp.MustCompile(`(?i)BGH (\+Simple|Mini|M840)`),
		regexp.MustCompile(`(?i)BGH ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(ZBH-)?BIHEE`),
		regexp.MustCompile(`(?i)(A1[1268]|A[78]\+|A[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLISS-T6|(BPM9727)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BPM9727)`),
		regexp.MustCompile(`(?i)(?:I11_Plus(?:_EEA)?|(?:I11|I10(Plus)?|I9_Plus)_EEA|Android 11(?:[\d.]*);(?: [\w-]+;)? I11|I10_Pro|I10Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I10_?(Plus|Pro)?(?:_(?:EEA|ROW))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I11(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I(11|9)_Plus(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BMXC[_ ]?(?:80[01])| M863(?:-EEA)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M863)`),
		regexp.MustCompile(`(?i)BMXC[_ ]?(80[01])`),
		regexp.MustCompile(`(?i)(BT7X1|EX10SL4|BTXS1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BROR[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:RUNE III?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RUNE (III?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BYYBUO|(?:SmartPad_(?:K7|T10)_EU|SmartPad_T10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BYYBUO_)?SmartPad_(K7|T10)(?:_EU)?`),
		regexp.MustCompile(`(?i)(BK2021)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nook|BN[TR]V[0-9]+`),
		regexp.MustCompile(`(?i)Nook([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Nook[ _]([^/;]+)[ _]Build`),
		regexp.MustCompile(`(?i)(BN[TR]V[0-9]+)`),
		regexp.MustCompile(`(?i)(?:Class_C250|TW10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TW10)`),
		regexp.MustCompile(`(?i)(Class_C250)`),
		regexp.MustCompile(`(?i)Becker-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Beeline|(?:A239s|SWG2001A-A|RASSE-001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beeline[_ ]Pro[_ ]([2436])`),
		regexp.MustCompile(`(?i)Tab (Fast(?: 2)?|Pro)`),
		regexp.MustCompile(`(?i)Tab ([0-9])`),
		regexp.MustCompile(`(?i)E([67]00)`),
		regexp.MustCompile(`(?i)(?:Beeline[_ ])?Smart[ _]?([0-9])`),
		regexp.MustCompile(`(?i)(?:Beeline[_ ])?Fast[_ ]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fast(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A239s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RASSE-001)`),
		regexp.MustCompile(`(?i)(SWG2001A-A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Beelink (?:G[ST]1|LAKE I|SEA I|A1)|GTKing(?:_AT|II)?|GT1mini-2|GT1-mini(?:[-_]AT)?|R68 II|Amlogic Alvatech GT1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beelink (G[ST]1|LAKE I|SEA I|A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amlogic Alvatech GT1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT1-mini(?:-AT)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT1mini-2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTKing PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTKingII(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTKing(?:_AT)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R68 II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beetel ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(X104)-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beko(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bp100 X-Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BENQ(?:[ \-])?([a-z0-9]+)|(?:F52_09|F5_15|T47_09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F(?:52|5)|T47)_(?:15|09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BENQ(?:[ \-])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)BENQ-SIEMENS - ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)BenWee[ _-]?(?:[^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)BenWee W5 ?pro`),
		regexp.MustCompile(`(?i)BenWee[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Benco[_ ]|(?:AE9(?:[03]10|1[25]0|2[2346]0|950)|AH9110)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB-A03-(?:BR2|BS))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Class S300 LTE|G-PADLITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Class S300 LTE)`),
		regexp.MustCompile(`(?i)(?:SURVE(10|[26-8]|[12] PRO)|Home9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURVE([12]) PRO`),
		regexp.MustCompile(`(?i)SURVE(10|[26-8])`),
		regexp.MustCompile(`(?i)BEZKAM (BK-RAM2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAMETAB-ONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BilimBook mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Capture\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MD09TV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BioWolf 8-F30|BIOWOLF8F30|Ruggbo 20 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BioWolf 8-F30|BIOWOLF8F30`),
		regexp.MustCompile(`(?i)BIRD[-. _]([^;/]+)|(E5018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(E5018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+)`),
		regexp.MustCompile(`(?i)Bitel[ _-]([^/;]+) Build|(?:B(?:840[5-9]|841[0456]|850[2346]|860[146]|9401|950[1-5])|S8402L?|S8501L?|BPRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B(?:840[5789]|841[0456]|850[2346]|860[146]|9401|950[12345])|S8402L?|S8501L?)`),
		regexp.MustCompile(`(?i)BPRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bitel[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:Mobitab10c-3G|Tab1011Q_II|Colortab[ _]?(10(?:M| II)?|816i))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Mobitab)(10)c-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab1011Q_II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Colortab[ _]?(10(?:M| II)?|816i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tough Mobile 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bphone[ _](B111[45]|B2017)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B6 Master|B6 Note X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tv Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BMM[ _-]?(?:44[123]D|431B|441[AWB]|44[12]S|431[SD]|53[23]D|54[12]S|541[ABW]|54[123]D|543S|531[ABD]|532 S|531S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BMM441[AS]`),
		regexp.MustCompile(`(?i)BMM442S|BMM441B`),
		regexp.MustCompile(`(?i)BMM543[DS]`),
		regexp.MustCompile(`(?i)BMM[ _-]?(53[23]D|431[DS]|54[12]S|531S|431B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EO104K)[-_]BL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blackview|(BL8[08]00|BV([24-9]000|8[18]00|[468]900|(5[1589]|9[135689])00|6[12368]00|7100)(?:[ _](?:PRO))?|(P10000(?:[ _](?:PRO))?)|omega[ _]pro|Alife[ _][PS]1|N6000|Heatwave|DM550|BV9700Pro|BL9000 Pro|A[68]0(?:Pro)?\))|(?:SOLID 4 G2|A[86]0Plus|A80S|BL(?:6000|8800)Pro|R6 Lite|P2Lite|A8 MAX|A30-RU|A20Pro|Android 10(?:[\d.]*);(?: [\w-]+;)? Tab[89]|Android 10(?:[\d.]*);(?: [\w-]+;)? (?:A80)|Android 11(?:[\d.]*);(?: [\w-]+;)? (?:A95|A100|BL5000|Tab 12)|Android 1[12](?:[\d.]*);(?: [\w-]+;)? (?:A[79]0|A70 Pro|A55 Pro|Tab 1[01356]|Tab 6)|Android 13(?:[\d.]*);(?: [\w-]+;)? (?:A200 Pro|Tab [86]0|Tab 18|BL9000)|BV500|BV4800|BV[579]200|SOLID_4G1|BV5300(?: Pro)?|Tab [56]0 Kids|Active 8 Pro|Active 8|SHARK 8|Tab 8E|Tab (?:7|[57]0|8|11) WiFi|COLOR 8|Tab 1[23] Pro|MEGA 1|WAVE 6C|HERO 10|A52 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A([2678]0|5[25]) ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A([6798]0|95|100)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)A8 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A80S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A[86]0|BV[59]500)Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P2|R6) ?Lite`),
		regexp.MustCompile(`(?i)(BL[69]000|BL8800|BV(?:[0-9]+)|A200) ?Pro`),
		regexp.MustCompile(`(?i)(BL[579]000|BV6000S|BL8[08]00|N6000)`),
		regexp.MustCompile(`(?i)Blackview (A[78]|E7S)`),
		regexp.MustCompile(`(?i)(BV6[13]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BV\d+[\w]?|P10000)[ _]?PRO(?:[-_](?:RU|F))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BV\d+[\w]?|P10000)(?:[-_](?:RU|F))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab (1[0235]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab ?([56]0? Kids|8E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab (7|[57]0|8|11) WiFi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab 11 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab ?([689]|1[0123568]|[68]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)omega[ _]pro`),
		regexp.MustCompile(`(?i)(Alife[ _][PS]1|DM550|Heatwave)`),
		regexp.MustCompile(`(?i)Blaupunkt|(?:Soundphone S2|Atlantis[_ ](?:1001A|1010A|A10[._]G40[23])|SLplus02|Discovery[_ ](?:A10_302|10[28]C|111C|1000C|1001A?)|Endeavour[_ ](?:785|101[GLM]|1000|1001|101[03]|1100)|Polaris[_ ]80[38](?:_BE)?|BP_(?:6010|6110)|B-STREAM|SL05|SM 02 2019|SF04 4G|A-STREAM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Discovery[_ ](1000|111|10[28])C`),
		regexp.MustCompile(`(?i)Discovery[_ ]A10_302`),
		regexp.MustCompile(`(?i)Discovery[_ ]1001A`),
		regexp.MustCompile(`(?i)Discovery[_ ]1001`),
		regexp.MustCompile(`(?i)Endeavour[_ ](101[GLM]|785|100[01]|101[03]|1100)`),
		regexp.MustCompile(`(?i)Polaris[_ ](808[_ ]BE|80[38])`),
		regexp.MustCompile(`(?i)Atlantis[_ ](1001A|1010A|A10\.G40[23])`),
		regexp.MustCompile(`(?i)BP_(6010|6110)`),
		regexp.MustCompile(`(?i)Blaupunkt[_ ](SL[_ ]0[124]|SM[_ ]0[12])`),
		regexp.MustCompile(`(?i)(SF02|SL05|SF04 4G)`),
		regexp.MustCompile(`(?i)(4K Android TV|A-STREAM)`),
		regexp.MustCompile(`(?i)(?:BE_(xl|se|o2|fr|et|dg)|BL-919845)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE_(xl|se|o2|fr|et|dg)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Zero18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LaserTAB10|PlatinumTAB(?:11|8)_4G|PlatinumTAB10V22|PlatinumTAB10_4G_V\d|BlackTab7_3G_V2|BlackTAB7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PlatinumTAB10_4G_(V\d)`),
		regexp.MustCompile(`(?i)BLU[ _]|(?:blu|Dash)[ _]([^/;)]+)(?: Build|[;)])|(?:Studio[ _](G3|J8M|X10L|X12|5\.0K|5\.5|View(?: XL)?|Mega(?: LTE)?|C 8\+8|[CGM][ _]HD|G2 HD|G4|[CGX]|SELFIE|Selfie LTE|Touch|M[45] Plus|J[1258]|X[89] HD|X10\+?|XL(?: 2)?)|Advance (4\.0 ?[LM]|5\.[02](?: HD)?|A4|L[45])|M6 2021|ENERGY (DIAMOND|XL)|ENERGY[_ ]DIAMOND[_ ]MINI|Energy X 2|LIFE XL|B110DL|Dash (?:X[2L]|L3)|PURE (?:X[LR]|MINI|View)|Life One X[23]|G50 (?:Mega|Plus)|G51 Plus|G90(?: PRO)?|G91 Pro|GRAND (?:M3|Max|5\.5 HD|XL LTE|Mini|Energy)|R1 (?:HD|PLUS)|R2 (?:LTE|Plus)|Tank Xtreme [45]\.0|Tank Xtreme(?: Pro)?|Touchbook M7 Pro|DASH X PLUS|C[456] 2019|BOLD (?:M7|N[123])|B1[34]0DL|Vivo (?:5 Mini|One Plus|5R|XL[234]| Plus|8L|XI[+]?|GO)|C[56]L(?: 2020)?|C6 2020|G9 PRO|D701|VIEW 1|B13[15]DL|R2 3G|Grand (?:M2X?|XL|M2 LTE)|D600|D5[01]0|B1550VL|DIAMOND M|M8L Plus|STUDIO ENERGY|M8L 2022|LIFE X8|M10L (?:Pro|PLUS)|G71 PLUS|G52L|G61S|G91S|Studio Mini 2023|Android 10(?:[\d.]*);(?: [\w-]+;)? (?:G[57]0|G[679]1)|Android 11(?:[\d.]*);(?: [\w-]+;)? J9L|Android 13(?:[\d.]*);(?: [\w-]+;)? (?:G53)|F92 E 5G|C5 (?:Max|Plus))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Advance (4\.0 ?[LM]|4\.0|5\.[02](?: HD)?|A4|L[54])`),
		regexp.MustCompile(`(?i)M6 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Studio[ _](G3|J8M|5\.0 C|5\.5|C 5\+5 LTE|View(?: XL)?|Mega(?: LTE)?|C 8\+8|G HD LTE|[CG][ _]HD|C|G|Touch|M HD|G2 HD|M[45] Plus|J[1258]|X[89] HD|X5|X10\+?|XL(?: 2)?|X|G4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Studio[ _]5\.0 ?K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STUDIO[_ ](X10L|X12)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STUDIO SELFIE ([23]|LTE)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?NEO_ENERGY_MINI`),
		regexp.MustCompile(`(?i)ENERGY[_ ]DIAMOND[_ ]MINI`),
		regexp.MustCompile(`(?i)DASH[ _]X[ _]PLUS[ _]LTE`),
		regexp.MustCompile(`(?i)DASH 4\.5`),
		regexp.MustCompile(`(?i)PURE (X[LR]|View)`),
		regexp.MustCompile(`(?i)BOLD (M7|N[123])`),
		regexp.MustCompile(`(?i)LIFE ONE (X[23]?)`),
		regexp.MustCompile(`(?i)NEO (XL|X|5\.5)`),
		regexp.MustCompile(`(?i)G(5[01]|71) Plus`),
		regexp.MustCompile(`(?i)G(9[01]?) PRO`),
		regexp.MustCompile(`(?i)(G[579]0|G[679]1|D701|R2 3G|G52L|G91S|G61S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(J9L|G53)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRAND 5\.5 HD`),
		regexp.MustCompile(`(?i)Grand (M2X?|XL)`),
		regexp.MustCompile(`(?i)B13[01]DL`),
		regexp.MustCompile(`(?i)R([12]) PLUS`),
		regexp.MustCompile(`(?i)C([456]) 20(19|20)`),
		regexp.MustCompile(`(?i)Tank Xtreme ([45])\.0`),
		regexp.MustCompile(`(?i)C5 (Max|Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C([56])L 20(20|21)`),
		regexp.MustCompile(`(?i)C([56])L`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?VIVO[ _]SELFIE`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo 5 Mini`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo (One|XL3|XI)(?: Plus|[+])`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo (5R|XI|XL[234]|8L)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?VIVO GO`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?(D600|D5[01]0)`),
		regexp.MustCompile(`(?i)M(8|10)L Plus`),
		regexp.MustCompile(`(?i)M(10)L Pro`),
		regexp.MustCompile(`(?i)M8L (2022)`),
		regexp.MustCompile(`(?i)STUDIO 7\.0 II`),
		regexp.MustCompile(`(?i)DASH (L[45] LTE|5\.0|L[45]X|L3|X2|[LMX])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DASH[ _]([^)/;]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)blu[ _]([^/;]+)( Build|[);])`),
		regexp.MustCompile(`(?i)BLUSLATE([67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bluboo|Maya Build|(?:Picasso(?: 4G)?|Xfire2?|D6 Lite|D1_Pro|D6 Pro|S8_plus_a| S8a|Android 8(?:[\d.]*);(?: [\w-]+;)? D6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Picasso(?: 4G)?`),
		regexp.MustCompile(`(?i)D([16])[_ ]Pro`),
		regexp.MustCompile(`(?i)(?:Bluboo[_ ])?S8[_ ]plus`),
		regexp.MustCompile(`(?i)D6(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Bluboo[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Bluboo[ _-]?([^;/)]+)`),
		regexp.MustCompile(`(?i)BSS(45|50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VF550|EF501R?)(:_RU)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLUEDOT[_ ]|(?:BNT-71|BNT-801W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLUEDOT[_ ])?(BNP-500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BNT-71|BNT-801W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:33GT HD|WV8R-M|WV8R[_-]N|WV8-[ML])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WV8R[_-]N`),
		regexp.MustCompile(`(?i)Bmobile[_ ]|B60Pro(?:_MV03)?|BL40_MV12|BL50P_TG0[567]|BL51_MV05|BL53_TG06|BL54_?Pro|(?:B50Pro|BL5[02]|BL60_TG(?:05|17)|BL60M_MV05|BL60 Pro|BL6[12]|BL63_TG07|FUN 4 2018|AX686A|AX-?(?:[1-9][0-9]{2,3}[eEO+]?|7OO))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AX-?([1-9][0-9]{2,3}[eAEO+]?)`),
		regexp.MustCompile(`(?i)B60Pro(?:_MV03)?`),
		regexp.MustCompile(`(?i)BL40_MV12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL60_TG(?:05|17)`),
		regexp.MustCompile(`(?i)BL60 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL63_TG07(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL50P_TG0[567](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL(5[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL51_MV05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL53_TG06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL54_?Pro`),
		regexp.MustCompile(`(?i)BL6([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bmobile[_ ]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Bmobile[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:K10[ ]?SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B_TAB1021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cybook)[ -]Tablet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Pulse Retro|Pulse Sky|Pulse Glide|Cabana|StrikaPlay)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Pulse Retro|Pulse Sky|Pulse Glide)`),
		regexp.MustCompile(`(?i)(Cabana)`),
		regexp.MustCompile(`(?i)WZONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:sprd-)?(BOWAY)`),
		regexp.MustCompile(`(?i)BOWAY[ _-]([^/;]+)[ _]Build`),
		regexp.MustCompile(`(?i)([^/;]+) Build/BOWAY`),
		regexp.MustCompile(`(?i).*BOWAY[ _-]([^/;]+)/`),
		regexp.MustCompile(`(?i)(?:L1f-pluss|Brandcode B6S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Brandt|(?:BPRIME|BSTAR\+?|BPRIMES|B-ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BPRIME|BSTAR\+?|BPRIMES|B-ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bravis[ _]|A501 Bright|A552 JOY Max|A504 Trace|A505 JOY Plus|A503 Joy|NB(?:106M|10[1-8]|751|7[145]|8[57]1|76)|NP101|NB961|NP 104 3G|B501|N1-570 Space|Atlas A551|A511 Harmony|A512 Harmony Pro|A510_Jeans_4G|A509_Jeans|N1_550_Cruiser|N1_551 Gloss`),
		regexp.MustCompile(`(?i)Bravis[_ ]X500`),
		regexp.MustCompile(`(?i)Bravis[_ ]A506`),
		regexp.MustCompile(`(?i)Bravis[_ ]A553`),
		regexp.MustCompile(`(?i)BRAVIS[ _]TAU`),
		regexp.MustCompile(`(?i)BRAVIS[ _]DELTA`),
		regexp.MustCompile(`(?i)BRAVIS[ _]TREND`),
		regexp.MustCompile(`(?i)BRAVIS[ ]A554`),
		regexp.MustCompile(`(?i)BRAVIS[ ]S500`),
		regexp.MustCompile(`(?i)BRAVIS[ _]SPARK`),
		regexp.MustCompile(`(?i)BRAVIS[ _]SLIM[ _]3G`),
		regexp.MustCompile(`(?i)Bravis[_ ]([^;\)]+) Build`),
		regexp.MustCompile(`(?i)(NB(?:106M|10[1-8]|75[134]|7[145]|8[57]1|76)|NP101|NB961)`),
		regexp.MustCompile(`(?i)(HD1023|XD233|XD230|XD1030|XD1132|XT114[34]|4K1142|LS424|LS445)`),
		regexp.MustCompile(`(?i)Brondi[ _]|(?:CENTURION|GLADIATOR| GLORY|LUXURY|SENSUELLE|VICTORY|AMICO[_ ]SMARTPHONE[_ ](?:4G|X[SL]|S\+)|MIDNIGHT_SKY|501 SZ|850_4G)(?:[ _-]?[2-6])?(?:[);/ ]|$)|Surfing Tab`),
		regexp.MustCompile(`(?i)(?:Brondi[ _])?(620 SZ|730_4G_HD|501 SZ|850_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CENTURION(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLADIATOR(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUXURY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIDNIGHT_SKY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SENSUELLE(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VICTORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMICO SMARTPHONE (X[LS]|S\+)`),
		regexp.MustCompile(`(?i)Surfing Tab ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Surfing Tab ([^;/)]+)[;/)]`),
		regexp.MustCompile(`(?i)(BUB6R-3T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BTOUCH7_PLUS|SWEET 5\+ 2019|SWEET ?[56]\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET 5\+ 2019`),
		regexp.MustCompile(`(?i)SWEET ?([65])\+`),
		regexp.MustCompile(`(?i)Bush[ ;,_-]|Bush10Nou`),
		regexp.MustCompile(`(?i)Spira B1 (8|10\.1)`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+)Tablet(?: Build|[);])`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+) Smartphone`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)BUSH\-v\.tv\.([0-9]{4})`),
		regexp.MustCompile(`(?i)BUSH, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(XR4500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CM(?:[58]22|(?:85|78)00plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CM[58]22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CM(85|78)00plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:noa X2 Plus|noa_G1|noaXPower|NOATAB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CADENA[_ ]`),
		regexp.MustCompile(`(?i)CADENA[_ ]Pro[_ ]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)CAGI-([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)CCIT[_ ]|CCITA715G|(?:KT[236]00Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CCIT[ _]Xedition`),
		regexp.MustCompile(`(?i)CCIT[ _]405(?: Build|[);])`),
		regexp.MustCompile(`(?i)KT([236]00)Pro`),
		regexp.MustCompile(`(?i)CCIT[_ ]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)CT-(87(?:4[03]|24|32)|85(?:[67]5|5[08]|32|4[03]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CEPTER(TAB10[1L])`),
		regexp.MustCompile(`(?i)(?:CG_OMEGA6|Omega (?:[38])|CG_EON_Blaze_Pro|CG\|EON Blaze GOLD|Blaze [GN])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Omega ([38])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG_OMEGA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG_EON_Blaze_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG\|EON Blaze GOLD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blaze ([GN])`),
		regexp.MustCompile(`(?i)CGV_(Ultimate T8)`),
		regexp.MustCompile(`(?i)CHCNAV|(?:HCE[67]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HCE[67]00)`),
		regexp.MustCompile(`(?i)CKK (Inspire 1|Garnet)|(?:DUKE[78]|DUKE 3|DUKE\s+II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUKE ?([378])`),
		regexp.MustCompile(`(?i)DUKE\s+II`),
		regexp.MustCompile(`(?i)CKK (Inspire 1|Garnet)`),
		regexp.MustCompile(`(?i)BlueS10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TV 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN[_ ]|(?:C55 Pro|C60 Ultra|Fenix8_3G|Note1|Tronik_(?:[123]|12S)|Star7 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C55 Pro|C60 Ultra|Star7 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fenix8_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN Note1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN R([124])0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tronik_([123]|12S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN[_ ]C(4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN[_ ]X(4|55|5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COYOTE[ _]`),
		regexp.MustCompile(`(?i)CUBOT|QUEST(?: LITE)?|(?:NOTE 7|NOTE 20(?: PRO)?|RAINBOW 2|KING_KONG_3|ZORRO 001|KINGKONG[_ ](?:MINI2?|POWER|STAR|[5-9]|5 Pro|AX|X|ACE 3)|TAB KINGKONG|KING KONG CS| X30P|R15_PRO|S550 Pro| CHEETAH| [RX]19|X19 S|MAX 3|Android 9(?:[\d.]*);(?: [\w-]+;)? (?:J5|MAX 2|X20 PRO)|Android [89](?:[\d.]*);(?: [\w-]+;)? R15|Android 12(?:[\d.]*);(?: [\w-]+;)? (?:P60|NOTE 30)|Android 13(?:[\d.]*);(?: [\w-]+;)? (?:NOTE [345]0|NOTE 2[134]|P80)|Android 11(?:[\d.]*);(?: [\w-]+;)? (?:Pocket|NOTE 9|P50|J10)|POCKET 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCKET (3)`),
		regexp.MustCompile(`(?i)CHEETAH( 2)?`),
		regexp.MustCompile(`(?i)KINGKONG[ _]POWER`),
		regexp.MustCompile(`(?i)KINGKONG[ _]AX`),
		regexp.MustCompile(`(?i)KINGKONG[ _]STAR`),
		regexp.MustCompile(`(?i)KINGKONG MINI ?([23])`),
		regexp.MustCompile(`(?i)KING[_ ]?KONG[_ ]([35-9]|X)`),
		regexp.MustCompile(`(?i)CUBOT[ _]Echo`),
		regexp.MustCompile(`(?i)CUBOT[ _]MANITO`),
		regexp.MustCompile(`(?i)CUBOT[ _]MAGIC`),
		regexp.MustCompile(`(?i)MAX ([23])`),
		regexp.MustCompile(`(?i)CUBOT[ _]MAX`),
		regexp.MustCompile(`(?i)(R15|S550|J3)[_ ]PRO`),
		regexp.MustCompile(`(?i)NOTE ([2-5]0|2[134]|[79])`),
		regexp.MustCompile(`(?i)CUBOT[_ ]NOTE[_ ]S`),
		regexp.MustCompile(`(?i)CUBOT[_ ]Hafury V1`),
		regexp.MustCompile(`(?i)CUBOT[ _](A5|C6W|H3|J3|P7|P20|[RXJ]9|R11|X18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X19 S|[RX]19|R15|J5|P[568]0|J10|X30P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUBOT ([^;/]+) Build`),
		regexp.MustCompile(`(?i)([^;/]+) Build/CUBOT`),
		regexp.MustCompile(`(?i)CVTE[_ ](MSD338_(:?1G|512M))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Camfone (?:SE)|Hero[_ ](?:H5\+|SE2|H[579]|(?:H7|XR)_Plus|SX|1[123]|SE3[ _]Max)|Honey (?:Y1|Y2s)|Mega 10|Furious 7 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hero[_ ](?:H5\+|SE2|H[579]|(?:H7|XR)_Plus|SX|1[123]|SE3[ _]Max)|Honey (?:Y1|Y2s)|Mega 10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Camfone (SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CNM6762(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CNM6762)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S70CDS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CANAL PLUS BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M75TG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Capitel-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Captiva[ _-]([^;/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)CT(?:10[0123]0|7[12]0|820|735_16GB|1056_32GB|1005)(?:W|FR)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT(10[0123]0(?:W|FR)?)`),
		regexp.MustCompile(`(?i)CT(7[12]0(?:W|FR)?|735|1005|1056)`),
		regexp.MustCompile(`(?i)(C811|C7[57]1)(?: 4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C751(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C771(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C811 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASPER[_ ]|VIA[- _](X30(?: Plus)?|[AXS]40|[XF]20|F30|T7D|A[34]|E[43]|E30|F[123]|G[345]|M4|M3[05]|[LS]8|S7|P[23]|V8C|A[13]_Plus(?:_64)?|A1(?:_1)?|S[13]0|S48|S|T17_M|T1[07]|T7|[ST]7-3G|T8B|T8D-3G|S1[78]|S48_0|[LS]30_0|L30|F30 Plus|M30 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CASPER[_ ])?VIA[_ ](A1|[FMX]30)[_ ]Plus(?:_64)?`),
		regexp.MustCompile(`(?i)(?:CASPER[_ ])?VIA[_ ]([AX]40|[XF]20|F30|X30|G1_Plus|F30 Plus|A3_Plus|G[135]|E[14]|E30|[AE]2|M[123]|V[35689]|V10|G3|V6X|A[34]|E3|F[123]|G4|M4|M3[05]|P[23]|S|V8C|A1(?:_1)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASPER_L10_4\.5G`),
		regexp.MustCompile(`(?i)CASPER_(S[23]8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIA[- _]([ST]7|T8D)-3G`),
		regexp.MustCompile(`(?i)VIA[- _](T7D|S[134]0|S48|[LS]8|S7|T17_M|T1[07]|T7|T8B|S1[78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIA[- _](S48|[LS]30)(?:_0)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BULLITTGROUPLIMITED|B30_Dorado|Cat ?(tablet|stargate|nova)|(?:B15Q|CAT B35|CAT-B100|S22 FLIP|S62 Pro|S48c|Android 9(?:[\d.]*);(?: [\w-]+;)? S52|Android 10(?:[\d.]*);(?: [\w-]+;)? S42)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S61(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S48c|S[45]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cat ?(?:tablet)? ?((?:Galactica|Nova|StarGate|PHOENIX)[^/;]*) Build`),
		regexp.MustCompile(`(?i)Cat ?tablet`),
		regexp.MustCompile(`(?i)CAT-(B100)`),
		regexp.MustCompile(`(?i)(B30)_Dorado`),
		regexp.MustCompile(`(?i)(?:Cavion[_ ](?:Solid[_ ]4[\._]5|Base[ _](?:7|7_3G_Silver|5[._]0|10|7\.2 Quad)|10_3GRQ)|base10_3g_silver|Cavion7\.1quad|M1092Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cavion[_ ]Solid[_ ]4[._]5`),
		regexp.MustCompile(`(?i)Cavion[ _]BASE[ _]5[._]0`),
		regexp.MustCompile(`(?i)Cavion(?:7\.1quad)`),
		regexp.MustCompile(`(?i)Cavion Base 7\.2 Quad`),
		regexp.MustCompile(`(?i)(?:Cavion_)?Base_?(7|10)_3G_Silver`),
		regexp.MustCompile(`(?i)(M1092Q)`),
		regexp.MustCompile(`(?i)(?:ACRUX|BELLATRIX|BETELGEUSE|Kil-82WFDC|U800B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U800B)`),
		regexp.MustCompile(`(?i)CELCUS, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Celkon|Android 7.+ UNIQ(?: Build|[);])|(?:Millennia Hero|2GBStar|2GBXpress|CliQ2|Campus Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Celkon[ _*](C[78]20)`),
		regexp.MustCompile(`(?i)Celkon[_ ]4G_TAB-8`),
		regexp.MustCompile(`(?i)CliQ2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4GPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 7.+ UniQ(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Campus Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Celkon[ _*](CT[^;/]+) Build`),
		regexp.MustCompile(`(?i)Celkon[ _*]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Celkon[\. _*]([^;/\)]+)[\)/]`),
		regexp.MustCompile(`(?i)Cell_?C_|(?:Android 5(?:[\d.]*);(?: [\w-]+;)? (?:Summit|Fantasy))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cell_C_(Summit_Plus|Fame|Evolve)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Summit(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fantasy(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Cool_Extreme_2|Earn|Fashion2Plus|Fashion[ _]C|Cool Duo|CHIC_X1|Miracle XS|Miracle 6.0 S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cool_Extreme_2|Earn|Fashion[ _]C|Cool Duo|Miracle XS|Miracle 6\.0 S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cellacom|(?:S51_lite|X501_Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cellacom_S62(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S51_lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X501_Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cosmas|CT_Cosmas_V|PADUA`),
		regexp.MustCompile(`(?i)(?:CT_)?Cosmas_(TF|[VF])`),
		regexp.MustCompile(`(?i)(?:Centric[- ]CM(?:5001|33[23]1|3321Plus)|CM4331|CM2221)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM5001`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3321Plus`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3321`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3331`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM4331`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM2221`),
		regexp.MustCompile(`(?i)(?:C66)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C66)`),
		regexp.MustCompile(`(?i)Changhong|HON H01|GHONGV12`),
		regexp.MustCompile(`(?i)Changhong[ ]?(X1-K|X6|R8|Z9S?|Z1S|S18|R9|S07)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ChangHong Andr[o0]id TV`),
		regexp.MustCompile(`(?i)changhong,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:Opera TV.+)Changhong-([^);/]+)`),
		regexp.MustCompile(`(?i)Cherry|Superion[_ ](?:S2|Radar Deluxe|S1 DTV|S1 Plus DTV|Tab Pro)|Flare([ _])?(Selfie|2\.[01]|2X|4|A[123]|J[1235678]|P[13]|S[4-8]|X2|Y[3567]|S[ _]Play|HD|LITE|XL|X_V[23]|Y3s|Tab|INFINITY)(?:[ _](?:Pro|Plus|Max|LTE))?|Fusion Aura 3s|Radar Deluxe 2|Desire R[678]|Desire_R[67]_Lite|Fusion Bolt|Omega[_ ](?:Icon 2|Icon Lite 2|lite[_ ][243][Cs]?|HD[ _][345]|HD_Duo|X)|Spin Max 2|Selfie_Two|Flare X Lite|Flare_5|Android 1.*Aqua S9|MAIA PAD PLUS|COSMOS THREE| Revel 3G|Touch XL 2|DSR_(?:R8|R7P?)|CUBIX CUBE 3`),
		regexp.MustCompile(`(?i)(Flare2X|Aqua S9(?: (?:Max|Lite|Pro))?)`),
		regexp.MustCompile(`(?i)Flare[_ ]HD[_ ]([345])`),
		regexp.MustCompile(`(?i)Flare[ _]S[ _]Play`),
		regexp.MustCompile(`(?i)Flare (2\.[01])`),
		regexp.MustCompile(`(?i)Flare[_ ]J([2356])S`),
		regexp.MustCompile(`(?i)Flare_([A-Z]\d+)_Prime`),
		regexp.MustCompile(`(?i)Flare_([A-Z]\d+)_Deluxe`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Power`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Pro`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Lite`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Plus`),
		regexp.MustCompile(`(?i)Flare ?J3 ?Plus`),
		regexp.MustCompile(`(?i)Cherry[_ ]X740`),
		regexp.MustCompile(`(?i)Flare[ _]X[_ ]V([23])`),
		regexp.MustCompile(`(?i)Flare[ _]XL[_ ]?2`),
		regexp.MustCompile(`(?i)Flare[ _]([A-Z]\d+)[ _]mini`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Max`),
		regexp.MustCompile(`(?i)Flare[_ ]J2[_ ]DTV`),
		regexp.MustCompile(`(?i)Flare[_ ]INFINITY`),
		regexp.MustCompile(`(?i)Flare[_ ]Lite[_ ]3S`),
		regexp.MustCompile(`(?i)Flare(?:[ _])?(Selfie|A1_Roam|A[123]|J8 LTE|J1s|J[1235678]|P[13]|S[4-8]|X2|Y3s|Y7_LTE|Y[3567]|[45])`),
		regexp.MustCompile(`(?i)OMEGA[ _]HD[ _]([345])`),
		regexp.MustCompile(`(?i)Omega[_ ]Lite[_ ](3[Cs]|[24])`),
		regexp.MustCompile(`(?i)Omega[_ ]X`),
		regexp.MustCompile(`(?i)Desire[ _]R(\d)[ _]Lite`),
		regexp.MustCompile(`(?i)DSR_R([78])P`),
		regexp.MustCompile(`(?i)DSR_R([78])`),
		regexp.MustCompile(`(?i)Flare Tab Pro V(\d)`),
		regexp.MustCompile(`(?i)(Fusion Bolt|Flare Tab Pro|Flare Tab|Superion[_ ](?:S2|Radar Deluxe|S1 DTV))`),
		regexp.MustCompile(`(?i)Cherry(?:[ _]?Mobile)?[ _]?([^/;]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:ALTO (?:Bombo|classic|Estrella|JUEGO|SUBIR|[235])|FUEGO MAX|OJOS[ _](?:CIELO|CAMBIO|NUBE|[68i]|ORO|VIVIR|Plus|DOS mini|DOS|LUNA|X1)|AVANCE classic)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALTO ([235])`),
		regexp.MustCompile(`(?i)OJOS[ _]([68i]|X1)`),
		regexp.MustCompile(`(?i)E-Board[ -]MX05[45]`),
		regexp.MustCompile(`(?i)E-Board[ -](MX05[45])`),
		regexp.MustCompile(`(?i)(M812C|1501_M02|9930i|A1303|A309W|M651CY|M653|CMCC[ -]M(?:670|860)|M762G)(?: Build|[);]|$)`),
		regexp.MustCompile(`(?i)(M812C|1501_M02|9930i|A1303|A309W|M670)`),
		regexp.MustCompile(`(?i)Build/Tianyi|(?:TYH61[12]M|TYH211U|TYH201H|TYH622M|TYH632M|TYH631M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-(Hi8-super|Hi12|V99i?|V17HD3G|VX8-3G|V88-QUAD|V9-DUAL|V88S|Vi[78]|[HV]i10 (?:pro|plus))|Hi10 (?:Pro|plus)|HiPad[ -](?:X|X?Pro|Air|Max)|HiPadX|HiBox-hero|HiBook(?: pro)?|Hi(?:[89]|10) ?(?:Air|X?Pro)|HiPad ?Plus|Hi8SE|Vi8 plus|Vi10(?: ?Pro)?|Surpad|HiPadPro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CW-Hi8-super)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-)?(Vi10|Hi10|Vi8) plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V88)-QUAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V9)-DUAL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V17HD|VX8)-?(3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-)?(Hi10) pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBook pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBook(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?XPro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad-Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi([89]) ?Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi8SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi10 ?XPro`),
		regexp.MustCompile(`(?i)Hi([89]) ?pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10 ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Surpad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBox-hero(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(Vi[78]|Hi12|V99i?|V88S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RK25WO|RK[29]5|RS35|RS51_HS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Life X6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Claresta[ _]|(?:AirPhoneS[56]|AirPhone K6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AirPhone ?(S[56]|K6)`),
		regexp.MustCompile(`(?i)Claresta (F3) PRO`),
		regexp.MustCompile(`(?i)Claresta[ _](F4)`),
		regexp.MustCompile(`(?i)Clarmin|(?:B8Lite|B8Plus|Android 7(?:[\d.]*);(?: [\w-]+;)? B5Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Clarmin[_ ](B[65]|C1)`),
		regexp.MustCompile(`(?i)ClearPHONE ([246]20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CLEMPAD[_ ](?:6_XL|HR_Plus|HR|[68]|7_S|201[89])|ClemPhone_7|MFC_(?:2018|8))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLEMPAD_(201[89])`),
		regexp.MustCompile(`(?i)Clempad[_ ](6_XL|HR_Plus|HR|[68])`),
		regexp.MustCompile(`(?i)ClemPhone[ _](7)`),
		regexp.MustCompile(`(?i)(?:Cirrus_C2|Cyclone_C4|Storm_C3|Stratus_C[57](?:_Elite)?|Sunshine_T1|Typhoon_C6|Sunshine_T1_Elite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cirrus_C2|Cyclone_C4|Storm_C3|Stratus_C[57]|Typhoon_C6)`),
		regexp.MustCompile(`(?i)(Sunshine_T1(?:_Elite)?)`),
		regexp.MustCompile(`(?i)CloudFone[ _]|(?:Thrill[ _](?:Boost[ ]?(2|3)?|Power|Snap|Access|Plus 16GB|Lite|HD)|Excite Prime 2 Pro|Excite Prime|ExciteC|NBA Edition|Go SP|Next Infinity Plus|Next Infinity|Next Lite|Go Connect)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Boost 2 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Boost (2|3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill[ _]Boost(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Snap(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Plus 16GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Access(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill HD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NBA Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Go SP(?: 2)?|Next Infinity (?:Pro|Plus)|Next Infinity|Go Connect(?: Lite)?(?: 2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Next Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Next(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)\+VT(?:107C|Q007C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)\+VT(107C)`),
		regexp.MustCompile(`(?i)\+VTQ(007C)`),
		regexp.MustCompile(`(?i)Hind[ _]5\.1|X417[ _]Amaze|X418[ _]Zest|X421[ _]Nova|X422[ ]Exotic|X425[ _]Shavit|X428[ _]Astute`),
		regexp.MustCompile(`(?i)Hind[ _]5\.1`),
		regexp.MustCompile(`(?i)X417[ _]Amaze`),
		regexp.MustCompile(`(?i)X418[ _]Zest`),
		regexp.MustCompile(`(?i)X421[ _]Nova`),
		regexp.MustCompile(`(?i)X422[ _]Exotic`),
		regexp.MustCompile(`(?i)X425[ _]Shavit`),
		regexp.MustCompile(`(?i)X428[ _]Astute`),
		regexp.MustCompile(`(?i)Clovertek[ _](G12)`),
		regexp.MustCompile(`(?i)CnM[ \-](?:Touchpad|TP)[ \-]([0-9\.]+)`),
		regexp.MustCompile(`(?i)Cobalt[ _-](?:SM|T)`),
		regexp.MustCompile(`(?i)Cobalt[ _-]SM_(55?|6)`),
		regexp.MustCompile(`(?i)Cobalt[ _-]T((?:7|10))[ _]3G`),
		regexp.MustCompile(`(?i)Cobalt[ _-]T((?:7|10))[ _]wifi`),
		regexp.MustCompile(`(?i)(MID(?:1024|112[56]|1045|1048|106[05]|4331|701[26]|7015A?|70[32]2|703[56]|704[278]|7052|7065|7120|8024|80[47]2|8048|8065|8125|812[78]|9724|974[02])|CTB761)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Colors[ _](S(?:[19]|11)|P70|P[456]5|P32|E15|P50 Plus)|Pride_1A|P52_Pride5C|P90_Pride5X|P95_Pride_7s|P77_Pride_1E|P88_Pride_1X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pride_1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P95_Pride_7s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P77_Pride_1E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P52_Pride5C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P90_Pride5X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P88_Pride_1X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Colors[ _](S(?:[19]|11)|P70|E15|P[456]5|P32|P50 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tesla|Impulse 7\.85 3G|Impulse 10\.1 OCTA|Smartphone_6\.1|SP(?:6\.2|6\.2_Lite)|TTL(?:713G|8)|Explr 9`),
		regexp.MustCompile(`(?i)(Explr 9)`),
		regexp.MustCompile(`(?i)TeslaEvo5\.0`),
		regexp.MustCompile(`(?i)(Gravity 9\.7 SHD)`),
		regexp.MustCompile(`(?i)(Impulse 7\.85 3G)`),
		regexp.MustCompile(`(?i)Impulse 10\.1 OCTA`),
		regexp.MustCompile(`(?i)Tesla_SP([^/;)]+)L(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Smartphone_6\.1`),
		regexp.MustCompile(`(?i)(?:Tesla_)?SP(\d+)[_.](\d+)_Lite(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Tesla_SP(\d+)[_.](\d+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Tesla_SP([^/;]+) Build`),
		regexp.MustCompile(`(?i)SP([^/;]+) Build`),
		regexp.MustCompile(`(?i)Smartphone ([36])`),
		regexp.MustCompile(`(?i)(L7\.1)`),
		regexp.MustCompile(`(?i)(L7 Quad) Build`),
		regexp.MustCompile(`(?i)(L7 Quad Lite)`),
		regexp.MustCompile(`(?i)(L8\.1)`),
		regexp.MustCompile(`(?i)TESLA,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Comio|(?:CT701G PLUS|CT701W|GT100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Comio[ _-]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Compal-[a-z0-9]+`),
		regexp.MustCompile(`(?i)(?:CT101|CT1085_32GB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CT1085)_32GB`),
		regexp.MustCompile(`(?i)(CT101)`),
		regexp.MustCompile(`(?i)ConCorde ([^/;]+) Build|Concorde_Raptor_Z55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Concorde_(Raptor_Z55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ConCorde Tab ?([^/;]+) Build`),
		regexp.MustCompile(`(?i)ConCorde ReadMan ?([^/;]+) Build`),
		regexp.MustCompile(`(?i)ConCorde ([^/;]+) Build`),
		regexp.MustCompile(`(?i)(GoCAM_G301)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Concord[ _-]|(?:Flyfix 6|C-721|Plus-7_C777|Plus_M19_C779|Plus-9_C778|Dream_Edition_C-754)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Plus[-_]([79]|M19)_(C77[789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Allure (?:A8 Pro|A55 Slim|M[123]|X)|Griffe T[235-9]|TFX71[12]G|TFX71[34]L|TMK715L|TRA-901G|TGW[-]?(710G|709|102L|801[GL])|(?:PGN\-?[456][012][0-9]|PHS\-601|PHQ519|PAM412|PHQ52[056]|TB105L|TB717G|PKT\-301|Plume (?:H1|L[1-68]|P8|P6 PRO LTE)|Infinity E5|Infinity a4|Infinity_i[45]|PKT411|SP413|PAM524|GT60 PRO|GT60)(?:[);/ ]|$)|CTAB[^/;]+ Build`),
		regexp.MustCompile(`(?i)CTAB([^/;]+) Build`),
		regexp.MustCompile(`(?i)(TGW)-?(710G|709|801[GL]|102L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TFX71[12]G|TFX71[34]L|TB105L|TB717G|TMK715L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TRA)-(901G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGN-?403`),
		regexp.MustCompile(`(?i)PGN-?404`),
		regexp.MustCompile(`(?i)PGN-?409`),
		regexp.MustCompile(`(?i)PKT-?301`),
		regexp.MustCompile(`(?i)PGN-?504`),
		regexp.MustCompile(`(?i)PGN-?505`),
		regexp.MustCompile(`(?i)PGN-?506`),
		regexp.MustCompile(`(?i)(Allure \w+) Plus`),
		regexp.MustCompile(`(?i)(Allure \w+) Pro`),
		regexp.MustCompile(`(?i)(Allure \w+) Lite`),
		regexp.MustCompile(`(?i)(Allure (?:M[123]|X)|GT60)`),
		regexp.MustCompile(`(?i)PGN\-?507`),
		regexp.MustCompile(`(?i)PGN-?508`),
		regexp.MustCompile(`(?i)PGN\-?509`),
		regexp.MustCompile(`(?i)PGN-?511`),
		regexp.MustCompile(`(?i)PAM-?412`),
		regexp.MustCompile(`(?i)PGN-?513`),
		regexp.MustCompile(`(?i)PGN-?514`),
		regexp.MustCompile(`(?i)PGN-?515`),
		regexp.MustCompile(`(?i)PGN-?516`),
		regexp.MustCompile(`(?i)PGN-?51[78]`),
		regexp.MustCompile(`(?i)Infinity_i([45])`),
		regexp.MustCompile(`(?i)PGN-?521`),
		regexp.MustCompile(`(?i)Griffe T3 ?pro`),
		regexp.MustCompile(`(?i)Griffe T([0-9]) Plus`),
		regexp.MustCompile(`(?i)Griffe T([0-9])`),
		regexp.MustCompile(`(?i)PGN-?522`),
		regexp.MustCompile(`(?i)PGN-?523`),
		regexp.MustCompile(`(?i)PGN-?527`),
		regexp.MustCompile(`(?i)PGN-?528|PLUME P6 PRO LTE`),
		regexp.MustCompile(`(?i)PGN-?605`),
		regexp.MustCompile(`(?i)PGN-?606`),
		regexp.MustCompile(`(?i)PGN-?607`),
		regexp.MustCompile(`(?i)PGN-?608|Allure A55 Slim`),
		regexp.MustCompile(`(?i)PGN-?609`),
		regexp.MustCompile(`(?i)PGN-?610`),
		regexp.MustCompile(`(?i)PGN-?611`),
		regexp.MustCompile(`(?i)PGN-?612`),
		regexp.MustCompile(`(?i)PGN-?613`),
		regexp.MustCompile(`(?i)Plume L([24568]) Pro`),
		regexp.MustCompile(`(?i)Plume L([13]) Plus`),
		regexp.MustCompile(`(?i)Plume L([1-5])`),
		regexp.MustCompile(`(?i)PGN-?([0-9]{3})`),
		regexp.MustCompile(`(?i)(?:CP6001A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CTAB1044hn|CTAB-1044|SEN_1055_ARM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CTAB1044hn|CTAB-1044)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Conquest[-_ ](?:S\d+|F2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Conquest[-_ ]S(\d+)`),
		regexp.MustCompile(`(?i)Contixo|(?:CX-1045 3G|KT995 3G|CX1045|B108_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CX-?1045(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CX-?1065(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CONTIXO GX 1035(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Contixo GT1160 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B105(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B108(?:[_ ]4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT107(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT715 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT995(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT ?1100GT(?: 4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad|(?:Cool_9S|1824-S0|8190Q|1831-A0|8676-[AM]01|1872-A0|REVVLPLUS C3701A|VCR-[AI]0|C105-(?:8|E0)|C106-[789]|C107-9| C106|MTS-T0|ORL-C0|DLS-E0|182[56]-I01|1825-E0| 1825|8298-(?:M02|A01)|5560S|CP3320AS2|CP3321AT|CP350[34]L|cp3636a|CP3648AT?|CP3667AT|CP3669AS|cp3705A[S]?|CP3706AS|CP8298_I00|CP8676_I0[23]|C103|CP03|C1-U02|SAC-A0| 203[29]|CP05|CP12p?)(?:[);/ ]|$)|(8295|5860S) Build`),
		regexp.MustCompile(`(?i)VCR-[AI]0`),
		regexp.MustCompile(`(?i)1831-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1872-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8190Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DLS-E0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1824-S0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3321AT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)cp3636a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3705A[S]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3648AT?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3320AS2?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3706AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3669AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MTS-T0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:C106-[789]|R116|C10[36]|C1-U02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2039(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C107-9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C105-(?:E0|8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1826-I01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1825-I01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1825(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ORL-C0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cool_9S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CP12)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP12P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SAC-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5560S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(5860S|8295) Build`),
		regexp.MustCompile(`(?i)Coolpad[_ ]2041`),
		regexp.MustCompile(`(?i)CP8676_I02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COR-I0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP8676_I03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP8298_I00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CP350[34]L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(8676-[AM]01|8298-(?:M02|A01))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad[ _\-]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(CP20)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cosmote?[_ ]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(CP-J55a|CP-J55aW|CP-J55aX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WING 5|WING9|Venus[ _][14]`),
		regexp.MustCompile(`(?i)Venus[ _]([14])`),
		regexp.MustCompile(`(?i)Cricket-([a-z0-9]+)|(?:U(?:304|325|380|6080|668|680|705)AC|V350C|EC1002|EC21100[1-4]|SL100EA|SL101AE|WTCKT01|SL112C|SN304AE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cricket-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Q7A\+?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRONY-7021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Crosscall|ODYSSEY_Plus|Odyssey S1|Trekker-[MSX][1-4]|Action-X[35]|Core-(?:M[45]|T[45]|X[345]|Z5)`),
		regexp.MustCompile(`(?i)Action-X3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Action-X([35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Core-(M4) GO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Core-(M[45]|X[345]|Z5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Crosscall ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Trekker-([MSX][1-4]) Core`),
		regexp.MustCompile(`(?i)Trekker-([MSX][1-4](?: Core)?)`),
		regexp.MustCompile(`(?i)Core-T([45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CROWN, ([a-z0-9_ \-]+), (?:wired|wireless)|BlossomB902(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CROWN, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:SNOOK-X10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(<!myPhone ?)Cube|(U[0-9]+GT|K8GT)|(?:T8-PLUSM?S?|T8PLUSML|I1-TF[BD]?|I1-TC|i15-T[CG]?|I1_3GD|i1002S|Iwork10 Flagship|iwork10 Pro|T10 PLUS|CUBE-T970|U55GT_C8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U27GT-C8X?`),
		regexp.MustCompile(`(?i)U25GT-C4YT|U25GT-W4`),
		regexp.MustCompile(`(?i)U30GT ?2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U51GT-SL|U51GT-C8`),
		regexp.MustCompile(`(?i)(?:T8-PLUSM?S?|T8PLUSML)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1-TF[BD]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1_3GD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1-TC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i15-TG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i15-T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:i1002S|iwork10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Iwork10 Flagship|i15-TC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUBE-T970(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U[0-9]+GT[^;/]*) Build`),
		regexp.MustCompile(`(?i)(U[0-9]+GT(?:[0-9]|[\-_][a-z]+)?)`),
		regexp.MustCompile(`(?i)(K8GT)`),
		regexp.MustCompile(`(?i)(?:C70W|F35W_EEA|C82W_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C70W|F35W|C82W)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cyrus[ _-]|CyrusApel|CM17XA|CS(?:22|45)XA(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CM17XA(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CS(22|45)XA(?:_EEA)?`),
		regexp.MustCompile(`(?i)Cyrus[ _-]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Cyrus[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DTB-7168G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:D5-L|DT07-TAB4G|LM-01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LM-01)`),
		regexp.MustCompile(`(?i)(D5-L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DASS[-_ ](H-ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BOXD7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP|(?:Ursus|Ixion)[ _]([^;/)]+)|H135[ _]Build|Larus_TV1|Ixion(?:ML4\.7|ES250)|M150Storm|(?:SENIOR|F4[38]D8000K|VA(?:[12]10|170)|ML450|MS[56]50|BL(?:[123]50|160|155)|BS(?:155|160|[1256]50)|S(?:3[78]0|2[89]0|670)|AL(?:[12]40|[23]50)|AS(?:155|[123]60)| (?:B260|B245|H[12]10|H270|L470|N280i|P310|P380i?|R1[18]0|Q110|E1[78]0|E[12]10|B(?:450|340|35[05])|M170|M445|M[12]10|T155|H32F8000CG?|U43F8000Q|A(?:1[456]0|340|[34]55)|GS15[035]|GL[23]55|G25[035]|G355|G550|G15[05]|ES750|XL150|Z[1-4]55|H[13]70|H[34]10|P[45]10|L2[17]0)|Z250|A440|A350|N[13]80i|L1[178]0|L3[17]0i|G450|G660|Q[123]10|Q[12]80|N[234]10|N[35]70|EX111|S[245]70|S[127]70i|S169|S110|S180i?|S770|A555|(?:U75H8000K|U50H8000E|U65H8000K|F43H8000QG|U50G8000QG|U55H8050E|U43G9000CG|U43F8100QG|U55G8000QG|U50G9000CG|H32H800(?:1C|0[KQ])|H32G8000(?:CG|KW|Q)|H32F8000QG?(?:-[abc])?|H32F8[01]00Q|H39F8000Q|F43H8000K|U43H8000E|F(?:32|43)H8050C|U43F8000EG|F43F8000[CQ]G?|F32[FG]8000C|F43G8000C|H24H8000C|H24F8000Q|F43F8000Q-G)(?:-[AbcfedH])?|Android 8(?:[\d.]*);(?: [\w-]+;)? A240|android 10(?:[\d.]*);(?: [\w-]+;)? (?:B[23]1|B38|B1[87]|K28|K[34]1)|android 9(?:[\d.]*);(?: [\w-]+;)? (?:K18|K21|B11)|Android 11(?:[\d.]*);(?: [\w-]+;)? (?:D[12]1|T21|K[345]1|K[342]8|K61|C3[78]|B28|B27|H28)|43UCY1|32FCY1|U43H8050EG|H32H8051C-G|H32H8050CG|65UCY1-[GB]|55UCY1-G|50UCY[12]-G|75UCY1-G|40FCY1|55UCY1|U5[05]E9100Q|H24F8000C|H3218000K|U50F8000QG?|U50H8050EG|H32I8000K|U65G8000Q|U43G8100QG|F40H8000E|Android 11(?:[\d.]*);(?: [\w-]+;)? P11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DEXP_)?(ML450|MS[56]50|ES750|XL150|ES1050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IxionES250(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IxionML4\.7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ixion[_ ]([^;/]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)M150Storm(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M445(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AL250(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AL350(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS155(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ursus[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(K[23456]1|K[234]8|[KB]18|B[23]1|B[12]7|B[23]8|[BD]11|D21|T21|C3[78]|P11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VA[21]10|VA170|E210|R1[18]0|Q110|M[12]10|N280i|P380i?|P[345]10|S2[89]0|S3[78]0|S[456]70|H[12]10|H[123]70|H[34]10|L1[178]0|L2[17]0|N[13]80i|N[234]10|E1[178]0|Q[123]10|Q[12]80|EX111|N[35]70|L3[17]0i|L470|S[127]70i|S270|S110|S169|S770|S180i?|M170)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(H28)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G450)[ _](2021)`),
		regexp.MustCompile(`(?i)(B260|B245|A440|A[345]55|B450|B340|B35[05]|BL155|BL160|A160|A[23]40|A350|T155|Z[1-4]55|G25[035]|G355|Z250|G450|G550|G660)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SENIOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP[_ ]Freya`),
		regexp.MustCompile(`(?i)([HFU]\d{2}[A-Z]\d{4}[A-Z]{1,2}|AL-2020|43UCY1|40FCY1|32FCY1|F32H8050C|H32F8000Q|H32[1I]8000K|H32H8051C-G|F43F8000Q-G|50UCY[12]-G|75UCY1-G|55UCY1-G|65UCY1-[GB]|55UCY1)(?:-[AbcfedH])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H135[ _]Build`),
		regexp.MustCompile(`(?i)(BL[123]50|BS155|BS160|BS[1256]50|AL[12]40|A1[45]0|GS15[035]|AS160|GL[23]55|G15[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)DEXP[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEYI-?(10M18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JAGUAR|SATURN|TIGER|PUMA)-0\dC?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SATURN-(02C?)`),
		regexp.MustCompile(`(?i)DG101TBIPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DG101TBIPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X8ULTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGICOM[_ ]`),
		regexp.MustCompile(`(?i)DIGICOM[_ ](A10_LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Digicom[_ ]DTOK`),
		regexp.MustCompile(`(?i)DIGIFORS (400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIJITSU_|(?:DCT 90)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIJITSU[_ ]Smart[_ ]A11s`),
		regexp.MustCompile(`(?i)(8800i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DINGDING[ _-](SK\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WTCELERO5G|Celero(?:3[ _])?5G\+?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Celero5G\+`),
		regexp.MustCompile(`(?i)Celero3 5G\+`),
		regexp.MustCompile(`(?i)WTCELERO5G|Celero5G`),
		regexp.MustCompile(`(?i)DIXON_|(?:ACK1010|KT5512|HK7-3502|DN6015|DFM48|TS-M105G-1|TS_M103A|TS-M704F-1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ACK1010|KT5512|DFM48)`),
		regexp.MustCompile(`(?i)TS-(M105G|M704F)-1`),
		regexp.MustCompile(`(?i)DIXON_XK1_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smartphone[ _]DL|DL_Horizon_Selfie|Tablet_DL_\d{4}|Smartphone[_ ](?:YZU[_ ]DS53)`),
		regexp.MustCompile(`(?i)Smartphone[_ ]YZU[_ ]DS53`),
		regexp.MustCompile(`(?i)DL[_ ]Horizon[ _]H8`),
		regexp.MustCompile(`(?i)Tablet_DL_(\d{4})`),
		regexp.MustCompile(`(?i)(?:D3_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(D3)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DNS|AirTab)[ _\-]([^;/)]+)|(?:S4505M|S4004M|SD01M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DNS[_ ])?(S4505M|S4004M|SD01M|S4502|S4003|S4003)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-4003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AirTab[ _\-]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)DNS[ _\-]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Aloha_5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DPA_ZETA|DPA H3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DPA (H3)`),
		regexp.MustCompile(`(?i)DRAGON[_ ](OTT)`),
		regexp.MustCompile(`(?i)(DSCS9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RD86QE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUNNS[ _]|DunnsExecutive`),
		regexp.MustCompile(`(?i)DUNNS[ _](Slinger)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUNNS[ _]?(?:MOBILE[ _])?(703GDC|AT1001|Executive)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Daewoo|(DTA-07IDRF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DTA-07IDRF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Daewoo (Android TV 638)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Daewoo, ?([a-z0-9_ \-]+), ?(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Dslide|Konnect_?(?:402|50[246]|556|60[1278])|GEODROID_A5|Dbook[_ ]110`),
		regexp.MustCompile(`(?i)Konnect[_ ]?(402|50[246]|556|60[1278])`),
		regexp.MustCompile(`(?i)Dbook[_ ](110)`),
		regexp.MustCompile(`(?i)Dslide[ _]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Signature-S8|Monster 4GXX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Signature-S8)`),
		regexp.MustCompile(`(?i)(DM-B50104)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MEMOR )([12]0|1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K908H4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DATANG[ _-])+([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:DATANG[ _-])+([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)DW-[A-Z0-9]{5}(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DW-PS3G5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DBTEL(?:[\-/])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)DS-(?:BD[123]|CR1|CL[23] Pro|X1|CL[23] Lite|CL[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DS-CL([23]) Pro`),
		regexp.MustCompile(`(?i)DS-CL([23]) Lite`),
		regexp.MustCompile(`(?i)DS-BD([23])`),
		regexp.MustCompile(`(?i)DS-(X1)`),
		regexp.MustCompile(`(?i)DeWalt (MD501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dell[^a-z]|Venue|XCD35|Latitude E?\d{4}|Inspiron N?\d{4}|Inspiron 13|Vostro (?:3546|14-3468)`),
		regexp.MustCompile(`(?i)Venue ((?:10|[78]) [0-9]{4}|[78] HSPA\+)`),
		regexp.MustCompile(`(?i)(?:Dell )?Venue(?: Build|[);])`),
		regexp.MustCompile(`(?i)Dell; Venue Pro`),
		regexp.MustCompile(`(?i)(OptiPlex (?:3050|7010))`),
		regexp.MustCompile(`(?i)Vostro (3546|14-3468)`),
		regexp.MustCompile(`(?i)Chromebook (\d{2} \(\d{4}\))`),
		regexp.MustCompile(`(?i)Venue7 (3740)`),
		regexp.MustCompile(`(?i)(?:Dell )?(Streak|Venue) ?([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:Dell Inc\./)?(XPS 13 9360|Latitude (?:7480|7390|E4310)|Inspiron N?\d{4}|Inspiron 13-\d{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dell; ((?:Streak|Venue)[^;/\)]*)`),
		regexp.MustCompile(`(?i)Dell; ([^;/\)]+)`),
		regexp.MustCompile(`(?i)Dell[ _\-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(DT0704K08|DT070[25]W08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TAQ_10[4G]|TA[CDQ]-[0-9]+)|P(?:.+)TAQ-(?:[0-9]+)|SDQ[_-](?:550[24]4L|52001G|50002G|57004L)`),
		regexp.MustCompile(`(?i)TAQ_(10[4G])`),
		regexp.MustCompile(`(?i)P(?:.+)TAQ-(10213GMK2|10172MK3|10242MK2|70242MK2|[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA[CDQ]-[0-9]+)`),
		regexp.MustCompile(`(?i)SDQ[_-](550[24]4L|52001G|50002G|57004L)`),
		regexp.MustCompile(`(?i)Desay[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Desay[ _-]?([^;/)]+)`),
		regexp.MustCompile(`(?i)Dialog ?([^;/]+)(?: Build|[;)])|(?:M50E-1A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M50E-1A)`),
		regexp.MustCompile(`(?i)Dialog ?([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)DICAM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Digi[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGICEL|(?:DL3(?:PlusPro)?|DL501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DL3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DL(755|501)`),
		regexp.MustCompile(`(?i)DIGICEL[ _]([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:DS502|DS6018|DS6261)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DS502|DS6018|DS6261)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGIHOME, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:DL721-RB|DL(?:1016|1023|1025GH|1036|900[23]|[78]006|1008M|718M|703QR|702Q|5[05]03QL|1022QR|1010Q)|Compumax Blue)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DL5[05]03QL)`),
		regexp.MustCompile(`(?i)DL(1010Q|1016|1025GH|1022QR|1023|1036|900[23]|[78]006|721-RB|718M|70[23]QR?)`),
		regexp.MustCompile(`(?i)(Compumax Blue)`),
		regexp.MustCompile(`(?i)Digit4G|Digit(?:4G|play1|next_Ultra)|DIGIT (?:INFINITY|Glory1)`),
		regexp.MustCompile(`(?i)Digitplay1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Digitnext_Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Glory1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INFINITY MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INFINITY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Energy Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Digit4G[ _]E([234])[ _]pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Digit4G[ -](Energy|Pro)`),
		regexp.MustCompile(`(?i)Digma[_ ]([^;/)]+)(?: Build|[;)])|iD[sr]Q\d+|DiMagic|HIT HT707[10]MG|CITI (?:7 E401 4G|8 E400 4G|ATL 4G|Kids|Octa [178]0|1902 3G|10 E402|Z530 3G|13 X703 4G)|(CITI[_ ](?:[A-Z0-9]+)[_ ][34]G)[ _][TC][ST](?:[0-9]{4}[PM][LG])|HIT 4G|HT7074ML|IDX5|(iDx10|iDx7)|MVM900H(?:WZ|C)|MVM908HCZ|(iDxD8 3G|iDxD10 3G|iDrQ10 3G|iDxD[45]|iDxQ5|iD[nx]D7(?:[_ ]3G)?)|PS604M|PT452E|Linx.+ [34]G L[TS][0-9]{4}[PM][GL]|Linx PS474S|PS1043MG|HT7071MG|HT5035PG|HT4039PG|NS6902QL|NS9797MG|TS7854M|TS1012E 3G|TT1004PG|TT702[045]MG|TT1002MG|TT7026MW|WS825[123]PL|VRL42|((?:Optima(?: Kids 7)?|Platina|Plane)[ _](?:[EM])?(?:[0-9\.ST]+|Prime)(?:[ _][43]G)?)|(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)|DM-LED(?:5[05]UBB31|43UBB31|32SR21|(?:32|40)SBB3[15]|43SR2[23]|42SR24|24SR20|55UR31|43SBB31|24SBB31)|RS1248PL|RS1253PL|RS1249PL|RS1267PL|WS125[01]PL|WS1262RW|HS1002PL|TS1292PL|HS100[134]PL|TS8289PL|Kids_8280C_WS8252PL|HS101[012]PL`),
		regexp.MustCompile(`(?i)HIT(?: 3G)? HT707[10]MG`),
		regexp.MustCompile(`(?i)(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)`),
		regexp.MustCompile(`(?i)Linx ([A-Z][0-9]{3}) 3G (?:LT4028PG|LS4019PG|LT4001PG|LT5001PG|LT4038PG|LT5037MG|LT4030PG)`),
		regexp.MustCompile(`(?i)(Linx PS474S)`),
		regexp.MustCompile(`(?i)(CITI Z530 3G)`),
		regexp.MustCompile(`(?i)(CITI [A-Z0-9]+ [34]G) C[ST](?:606[32]ML|4024PG|5009PL|5021ML|502[56]PL)`),
		regexp.MustCompile(`(?i)MS100[123]PL`),
		regexp.MustCompile(`(?i)HIT 18 HS101[012]PL`),
		regexp.MustCompile(`(?i)Pro STAR 14|AS8001PL`),
		regexp.MustCompile(`(?i)HS100[13]PL`),
		regexp.MustCompile(`(?i)MVM900H(?:WZ|C)`),
		regexp.MustCompile(`(?i)(iD(?:xD10|rQ10|xD7)[_ ]3G)`),
		regexp.MustCompile(`(?i)(iDx10|iDx7)`),
		regexp.MustCompile(`(?i)(iDxD[45]|iDxQ5)`),
		regexp.MustCompile(`(?i)PRO (1[46]00E 4G)`),
		regexp.MustCompile(`(?i)DIGMA[_ ]IDSD`),
		regexp.MustCompile(`(?i)CITI[_ ](1902 3G|Kids(?:[_ ](?:8[01]|10))?|8527_4G|8269C 3G|Octa [178]0|10 E402 4G|8 E400 4G|7 E401 4G|13 X703 4G|131[23]C 4G|8443E 4G|1314C 4G|1421D 4G)`),
		regexp.MustCompile(`(?i)(?:Kids_8280C_)?WS8252PL`),
		regexp.MustCompile(`(?i)(CITI[ _](?:[A-Z0-9]+)[ _][34]G)[ _][TC][ST](?:106[24]ML|111[46]ML|1115MG|1117PG|1207MG|1210MG|3001ML|500[67]PG|7052PG|706[567]MG|7097MG|720[48]MG|820[69]MG|11[459]4MG|1195MG|1196ML|3001ML|8152ML|1050PL|709[68]PL|7113PL|7193MG|7216MG|8205PG|7203MG|8143MG|7153MG|7141MG|7140ML|8268PL)`),
		regexp.MustCompile(`(?i)(iDnD7)`),
		regexp.MustCompile(`(?i)Optima ([0-9]+ [AXZE][0-9]+[SC]?) ([43])G`),
		regexp.MustCompile(`(?i)Optima ([0-9]+ A500S) 3G`),
		regexp.MustCompile(`(?i)iD([sr])Q(\d+)[_ ]3G`),
		regexp.MustCompile(`(?i)iD([sr])Q(\d+)`),
		regexp.MustCompile(`(?i)((?:Optima|Platina|Plane)[ _](?:[EM])?(?:[0-9\.BSTNMEVCD]+|Prime(?:[ _][345])?)(?:[ _][43]G)?)`),
		regexp.MustCompile(`(?i)Digma[_ ]([^;/]+) Build`),
		regexp.MustCompile(`(?i)DiMagic Cube ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)VRL42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DM-LED(\d+(?:[SU]R|[SU]BB)\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dynalink TV BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DX_TA_?(7001|SL83)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MARVEL|FROZEN|Toy_story)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MARVEL|FROZEN)`),
		regexp.MustCompile(`(?i)(M1092R(?:-[12]|V[45])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QC-(?:703GN|704GA|803GN|1013G|7BHD)|QC7704GM|T10K_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DiverMax SpeedBox 3 SB1800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Divisat|X-MEDIA|DVS X3|OPTIMA_T-II|J-LINK II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DVS )?(J-Link|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X-MEDIA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPTIMA_T-II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DoCoMo|\;FOMA|KGT/1\.0`),
		regexp.MustCompile(`(?i)DoCoMo/.+MST.+(SH2101V)`),
		regexp.MustCompile(`(?i)DoCoMo/[12]\.0[/ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)([a-z0-9]+)(?:_W)?\;FOMA`),
		regexp.MustCompile(`(?i)KGT/1\.0 ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(24DHS54|32GHS5[67]|40KFS57|32KHS57|43KUS65|24[KG]HS57|24GHS55|50KUS65|40GHS57|43GUS65|55KUS65|65KUS65|42GFS56)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dolamee[_ -](D[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Movix Pro(?: Voice)?|Movix Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DOOGEE[/ _-]|Valencia2_Y100(?:_?(?:pro|plus))?|Y100_Plus|X5max(?:[_ ]PRO)?|Shoot_[12]|x5_doogee|(KISSME|BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)|(?:BL12000|BL5500[_ ]Lite| Y6C|X9 Mini|LEO_DG280|Y9Plus|Y8 Plus|Hitman_DG850|S(?:4[01]|[568]8|9[05678]|59|61|8[69])Pro|X9[567]Pro|S[478]0Lite|S88Plus|BL[579]000|N[24]0Pro| S118|S90C|Ibiza_F2|S55_Lite|T5_Lite|S60 ?Lite|Iron-bone DG750|X10S|X[569]0L|MIX2|Y6 Max|Y6_Piano(?:_black)?|S100Pro|X[679]pro|V20Pro|S96GT|android 10(?:[\d.]*);(?: [\w-]+;)? (?:S59|S35|X95i?|X93|N30)|android 12(?:[\d.]*);(?: [\w-]+;)? (?:S98|S61|S89|V Max|S100|V30T?|S51)|V Max Plus|Y7Plus|S35T|V31GT|Smini|T[23]0Ultra|T10E|[TV]20S|V30Pro|android 13(?:[\d.]*);(?: [\w-]+;)? (?:R[12]0)|Android 9(?:[\d.]*);(?: [\w-]+;)? (?:N100|N20|Y8|S95)|S41T|N50S|D60 Pro|DK10|Turbo_mini_F1|Y100X|T30Pro|T10S|T10Plus|T20Mini|S41 Max|S41 Plus|N55 Pro|S punk|S cyber)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T30Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R([12]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T([12]0)S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T10E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T10Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T20Mini Kid(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T20Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T([23]0)Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Valencia2_)?Y100_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Valencia2[_ ]Y100pro`),
		regexp.MustCompile(`(?i)Valencia2_Y100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO_(DG280)`),
		regexp.MustCompile(`(?i)Iron-bone (DG750)`),
		regexp.MustCompile(`(?i)(X95i?|BL[579]000|S90C|X10S|X[569]0L|X93|V30T?|V31GT|V20S|DK10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X(9[567])Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V30Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N([24]0|55) ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N(50)S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL5500[_ ]Lite`),
		regexp.MustCompile(`(?i)S([568]8|9[05678]|59|61|4[01]|8[69]|100)Pro`),
		regexp.MustCompile(`(?i)S(88|41) ?Plus`),
		regexp.MustCompile(`(?i)S([4-8]0|55)[_ ]?Lite`),
		regexp.MustCompile(`(?i)Doogee X5MP|x5MaxPro`),
		regexp.MustCompile(`(?i)Shoot_([12])`),
		regexp.MustCompile(`(?i)(?:Doogee[_ ])?X([679])[_ ]?pro`),
		regexp.MustCompile(`(?i)Y([89]) ?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S5[19]|S35T?|S9[58]|S89|Y8|Y6C|S61|N[23]0|[NS]100|S118|S41T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X5max(?:[_ ]PRO)?)`),
		regexp.MustCompile(`(?i)(?:DOOGEE[ _-])?(BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|Valencia2_Y100pro|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DOOGEE[ _-]([^);/]+) Build`),
		regexp.MustCompile(`(?i)DOOGEE[ _-]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doopro P3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]| (?:20200308|20190808)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20200308(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190808(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dopod(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Doppio DP355(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doppio ([0-9a-z]+)`),
		regexp.MustCompile(`(?i)Doro|DSB-02[23]0`),
		regexp.MustCompile(`(?i)DSB-0230(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doro[_ ]8020x(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DSB-0220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doro[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Doro[ _-]([0-9a-z]+)`),
		regexp.MustCompile(`(?i)(?:Notepad[_ ](?:K10|102|Y80)|MAX 10|T12M_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Notepad[_ ](K10|102|Y80)`),
		regexp.MustCompile(`(?i)DREAMSTAR([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(DRN-[78]09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sens 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sens 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(i96 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DROXIO (C40|A47|B45|KENTIA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dtac[_ ]?Phone[_ ]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)DuneHD|SOLO 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLO 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DuneHD/\d\.\d \([a-z]+__([a-z0-9_-]+);`),
		regexp.MustCompile(`(?i)DuneHD/\d\.\d \(([a-z0-9_-]+);`),
		regexp.MustCompile(`(?i)(Diamond R8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Duubee[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Sternenschein (G-\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DYON[;,]`),
		regexp.MustCompile(`(?i)E-Boda|Eclipse_(?:G400M|G500)|Revo R77 GPS`),
		regexp.MustCompile(`(?i)E-Boda ((?:Revo|Izzycomm(?: Z80)?|Essential|Intelligence|Supreme)[^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Eclipse_(G400M|G500)`),
		regexp.MustCompile(`(?i)E-Boda ([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:CT9716(?:-B)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT9716(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT9716-B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E-tel[-_ ](?:i2[45]0|i300|i7c|N[67]|Q4|O9)`),
		regexp.MustCompile(`(?i)E-tel[-_ ]i(7c|\d+)`),
		regexp.MustCompile(`(?i)E-tel[-_ ]N([67])`),
		regexp.MustCompile(`(?i)E-tel[-_ ]O9`),
		regexp.MustCompile(`(?i)E-tel[-_ ]Q4`),
		regexp.MustCompile(`(?i)EBEN[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)EBEST[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)EBEST[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EX-32HS01[67]B|EX-32HS006B|EX-39HS004B|EX-50US003B|EX-60US001B)`),
		regexp.MustCompile(`(?i)ECOO[ _]E0[45]`),
		regexp.MustCompile(`(?i)ECOO[ _]E04[ _]3GB\+|Ecoo E04_PLUS`),
		regexp.MustCompile(`(?i)ECOO[ _]E04[ _]3GB`),
		regexp.MustCompile(`(?i)ECOO[ _](E0[45])`),
		regexp.MustCompile(`(?i)(?:TA10CA3|TM105A?|TR10[CR]S1|TF10EA2|TR10CS2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TA10CA3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TR10[CR]S1|TF10EA2|TR10CS2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM105A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM105(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Harrier(?: Tab)?|Hawk|Rook)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)(Harrier Tab)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)Rook[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)(Harrier|Hawk)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)EFT_(H[234])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EGO1003)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:E8_Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EKO|Star (?:\d\.\d) (?:G65|G5[05]|G40)`),
		regexp.MustCompile(`(?i)Star (\d\.\d) (G65|G5[05]|G40)`),
		regexp.MustCompile(`(?i)EKO[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)EKO[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EK-(?:5040|5336|5540|5937|6020|8680|MII|T7020)`),
		regexp.MustCompile(`(?i)EK-(MII|T7020)`),
		regexp.MustCompile(`(?i)EK-(5040|5336|5540|5937|6020|8680)`),
		regexp.MustCompile(`(?i)KidPhone4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M1045W|PIXBA2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:android 8(?:[\d.]*);(?: [\w-]+;)? E4Pro|VT8216)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VT8216)`),
		regexp.MustCompile(`(?i)SDMC D1221(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EVBOX-PLUS\+|EVPAD-[35]S|EVPAD-PRO-MAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVBOX-PLUS\+`),
		regexp.MustCompile(`(?i)EVPAD-([35]S)`),
		regexp.MustCompile(`(?i)(?:OCTA T720Q|OCTA-T700M-T2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EX7SL?4|EX10S4|EX7W1 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Tablet)?EXO_|(?:Wave[_-]i101[GLRS]|Wave[_ ]i007[BT]?|Wave i101[Hb]|Wave i007Kids)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wave i007Kids(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Tablet)?(?:EXO_)?(Wave[_-]i101[GLRS]|Wave[_ ]i007[BT]?|Wave i101[Hb])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EYU[ _-](T53|T7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eagle[ _](Classic Pro|Elite|Gold)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EE10A|Z-F1010)`),
		regexp.MustCompile(`(?i)EasyPad|EasyPhone`),
		regexp.MustCompile(`(?i)(EasyPhone[^/;]+) Build`),
		regexp.MustCompile(`(?i)EasyPad ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)ECHO[ _](HOLI|HORIZON|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION|PUSH|PRISM|STUDIO)|(?:HORIZON_M|Stellar [34]G|FEELING|MOON|LOOK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HORIZON_M|FEELING|MOON|LOOK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STELLAR ([34])G`),
		regexp.MustCompile(`(?i)ECHO[ _](HOLI|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION|PUSH|PRISM|STUDIO)`),
		regexp.MustCompile(`(?i)Einstein(T3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S5[UL]S|X4UPlus|S45U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S5[UL]S|S45U)`),
		regexp.MustCompile(`(?i)Meeplus_1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)electroneum(M1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(?:4[238]S[AM]{2}RT|5[05](?:CV_)?SMART_UHD|32SMART)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(4[238])S[AM]{2}RT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-55CV_SMART_UHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(50)SMART_UHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(32)SMART(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTRS`),
		regexp.MustCompile(`(?i)(?:TAB(?:101|728)[ _]3G|TAB7(?:[03]8|16|40|3[30])|STB0819)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(STB0819)`),
		regexp.MustCompile(`(?i)(TAB(?:101|728)[ _]3G|TAB7(?:[03]8|16|40|3[30]))`),
		regexp.MustCompile(`(?i)Elephone|Vowney(?: Lite)?|P6000( ?Pro| ?Plus|\+| ?02| 5.0 01)?|Soldier|C1_Max|(?:Trunk 1|P8_3D|P8_Max|P8_Mini|A6_mini|P9000(?:_Lite)?|Android 9(?:[\d.]*);(?: [\w-]+;)? PX|PX_Pro| U3H|U_Pro|Android 10(?:[\d.]*);(?: [\w-]+;)? (?:E10_Pro|E10))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Elephone[_ ])?Trunk(?: 1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vowney Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vowney(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000(\+| ?Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 5\.0 01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P(\d+)[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Soldier(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A6_mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P8_Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U|PX|E10)_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U3H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C1_Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PX(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(P8_3D|P8_Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Elephone[ _])?(P[7689]000|S2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elephone[ _\-]([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:LUNA (V57|V55A|G58|G62|G60X)|V55C|G55 LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V55C)`),
		regexp.MustCompile(`(?i)(G55)[_ ]LITE`),
		regexp.MustCompile(`(?i)LUNA (V57|V55A|G58|G62|G60X)`),
		regexp.MustCompile(`(?i) (6CS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NV5(?:01|10)WAC|NV501|NV731|NV[57]10WB|NV72[01]WB|NV711WAC|NV73[01]WB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV(501|510|711)WAC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV(501|731)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV(\d{3})WB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EGQ101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)emporia[_ ]|(?:Android 9(?:[\d.]*);(?: [\w-]+;)? S3mini|Android 13(?:[\d.]*);(?: [\w-]+;)? E5mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)emporia[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Energizer[ _](?:Ultimate|Power Max|Hardcase)|PowerMax|HARDCASEH5[05]0S|ENERGY[_ ]?(?:[45]00|400S|S[56]00|E12|E5[02]0S?)(?:[_ ](?:LTE|EU))?`),
		regexp.MustCompile(`(?i)Power ?Max ?(P[0-9]+S?)`),
		regexp.MustCompile(`(?i)ENERGY[_ ]([45]00|E520)[_ ]LTE`),
		regexp.MustCompile(`(?i)ENERGY[_ ]400S`),
		regexp.MustCompile(`(?i)ENERGY[_ ]S([56]00)`),
		regexp.MustCompile(`(?i)ENERGY[_ ]?(E500S|E500|E12)`),
		regexp.MustCompile(`(?i)HARDCASE ?(H5[057]0S)`),
		regexp.MustCompile(`(?i)ENERGY[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Energy Phone ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Energy Tablet ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)ENERGY[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(EN1007Q)plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Enot[ _-](E102|J101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ENT11QF12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ClickTabDSh18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EP19_star|EP19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ePad 7i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K501 Plus|[ ]K5(?:0[0-4]|1[01]|03[TS]|3[456]|4[05]|73|03HD)|[ ]K60[01]|[ ]X507T|[ ]K40[56]|[ ]T700|Android 8([\d.]*);(?: [\w-]+;)? X400|RS550)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Projector(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Axis(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ERGO|(V550[_ ]Vision|B502 Basic|B504[_ ]Unit|A502[_ ]Aurum|A503[ _]Optima|Prime B400|A551 Sky 4G|A553 Power|A555 Universe|Force F500|GoTab GBT9|GoTab Gti8|F501_Magic|V551[ _]Aura|V540_Level|V570_BIG_BEN|B506[_ ]INTRO|A503-Optima|B505_Unit_4G|LE32CT5515AK)`),
		regexp.MustCompile(`(?i)B506[_ ]INTRO`),
		regexp.MustCompile(`(?i)V550[_ ]Vision`),
		regexp.MustCompile(`(?i)B504[_ ]Unit`),
		regexp.MustCompile(`(?i)V551[ _]Aura`),
		regexp.MustCompile(`(?i)(ERGO_)?A500[ _]Best`),
		regexp.MustCompile(`(?i)(ERGO_)?A550[ _]Maxx`),
		regexp.MustCompile(`(?i)A502[_ ]Aurum`),
		regexp.MustCompile(`(?i)A503[ _]Optima`),
		regexp.MustCompile(`(?i)ERGO[_ ]A556`),
		regexp.MustCompile(`(?i)ERGO[_ ]F500`),
		regexp.MustCompile(`(?i)ERGO[_ ]F501`),
		regexp.MustCompile(`(?i)ERGO[_ ]Tab[ _]Crystal[ _]Lite`),
		regexp.MustCompile(`(?i)ERGO[_ ]Tab[ _]Hero[ _]II`),
		regexp.MustCompile(`(?i)ERGO[_ ](B700)`),
		regexp.MustCompile(`(?i)(LE32CT5515AK)`),
		regexp.MustCompile(`(?i)(?:Ericsson(?:/ )?[a-z0-9]+)|(?:R380 2\.0 WAP1\.1)`),
		regexp.MustCompile(`(?i)Ericsson(?:/ )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)R380 2\.0 WAP1\.1`),
		regexp.MustCompile(`(?i)Ericy-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(24LM8002CT2|42FLEA73T2SM|43FLES90[12]T2SM|42FLX9060T2|32LX9000CT|39LES80T2SM|32LX9051T2|43ULX9060T2|32LX9050T2|55ULES92T2SM|32LEA73T2SM|32LES90[24]T2SM|42FLES904T2SM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PH-1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wooze[_ ]?(?:I55?|I45|X?L)|HEYOU(?:[135]|20PLUS|[1-7]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEYOU20PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEYOU([135]|[1-7]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wooze[_ ]?((?:I55?|I45|X?L))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eton[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Eton[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ETL-S(?:3520|4521|5042|5084|6022)|ETL-T(?:752G|850|882G|9[78]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ETL-S(?:[^/); ]+))`),
		regexp.MustCompile(`(?i)(ETL-T(?:[^/); ]+))`),
		regexp.MustCompile(`(?i)(EUTB_758G?)`),
		regexp.MustCompile(`(?i)(ET7002C-H12|ET8183GQ-HM15|ET7184GQ-B15|ET7183GQ-H16|Onyx-[13]S|T40SG?LED-A1[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onyx-([13]S)`),
		regexp.MustCompile(`(?i)(ET8183GQ-HM15|ET7184GQ-B15|ET7183GQ-H16)`),
		regexp.MustCompile(`(?i)(T40SG?LED-A1[45])`),
		regexp.MustCompile(`(?i)EVERCOSS[ _]|(U6 PRIME|A75A\*|AT8B|U50A_PLUS|M50 (?:MAX|STAR)|A75 MAX|M55[ABC]|M50A|R40K|R70A|7.*; (?:R70|R5C)|S55[AB]|U70[CB])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A75A\*(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A75|M50A) MAX*(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U50A_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M50 STAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M50 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M50A|R40K|R70|R5C|S55[AB]|M55[ABC])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT8B|R70A|U70[CB])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVERCOSS[ _](A7[BRLZ]|A65|A74A|A5Z)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DC-(?:1032|121[56]|110[24]|1028|1545|70[59]|71[48]|85[56]|971[45])|(?:EVERPAD )?DC-709|DC-9712-8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DC-(1032|1028|121[56]|110[24]|1545|70[59]|71[48]|85[56]|971[45]|9712)`),
		regexp.MustCompile(`(?i)Fine 7B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(E011[67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ever(?:Allure|Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Solo|Smart|Star)[^/);]*)(?: Build|[;)])|(?:E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E1014HG|E7224HG|E7914HG|V5_Nano|M10\+Max|M10 Nano|V4 Nano| V4\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E7914HG|E7224HG|E1014HG)`),
		regexp.MustCompile(`(?i)(M10|V[45])[_ ]Nano`),
		regexp.MustCompile(`(?i)M10\+Max`),
		regexp.MustCompile(`(?i)V4\+`),
		regexp.MustCompile(`(?i)EverTrendy\+4G`),
		regexp.MustCompile(`(?i)Ever(Shine|Allure|Glory) ?II`),
		regexp.MustCompile(`(?i)(Ever(?:Allure|Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Solo|Smart|Star)[^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Evolio|M4MAGIC`),
		regexp.MustCompile(`(?i)Evolio[ _](M6|S4 Cobalt|S5|X10|Yuppi)`),
		regexp.MustCompile(`(?i)EVOLVEO|StrongPhone`),
		regexp.MustCompile(`(?i)EVOLVEO Android Box (H[48])`),
		regexp.MustCompile(`(?i)Smart TV ([^;/]*) Build`),
		regexp.MustCompile(`(?i)EVOLVEO StrongPhone G(\d)`),
		regexp.MustCompile(`(?i)(?:EVOLVEO[ _])?StrongPhone[ _]?Q([679])(_LTE)?`),
		regexp.MustCompile(`(?i)EVOLVEO[ _]([^;/]*) Build`),
		regexp.MustCompile(`(?i)(EVM4G3|EVM4G6|EVMFV2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVROMEDIA|Playpad[ _]|PLAY_PAD_PRO_XL|3G NOTE XL`),
		regexp.MustCompile(`(?i)(?:EX(?:29|45)i|CHAT_5\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHAT_5+`),
		regexp.MustCompile(`(?i)EX(29|45)i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Exmart[ _](K1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Explay|[\w]+-EXPLAY-FIN|ActiveD[ _]|Atlant |Informer[ _][0-9]+|CinemaTV 3G|Surfer[ _][0-9\.]|Surfer7773G|sQuad[ _][0-9\.]|Onliner[1-4]|RioPlay|Leader|Pulsar|Infinityll|Joy_TV|Imperium[78]|Winner[78]|Indigo|Lagoon|Tornado(?:3G)?|Onyx(?:[);/ ]|$)|android 4([\d.]*);(?: [\w-]+;)? Discovery.+Safari/|Party|Scream 3G|A350 TV`),
		regexp.MustCompile(`(?i)ActiveD[ _]7\.4[ _]3G`),
		regexp.MustCompile(`(?i)Imperium([78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ActiveD[ _]8\.2[ _]3G`),
		regexp.MustCompile(`(?i)CinemaTV[ _]3G`),
		regexp.MustCompile(`(?i)Informer[ _]([0-9]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Surfer[ _]([0-9\.]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Surfer([0-9\.]+)[ _]?3G`),
		regexp.MustCompile(`(?i)sQuad[ _]([0-9\.]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Onliner([1-4])`),
		regexp.MustCompile(`(?i)Winner([78])`),
		regexp.MustCompile(`(?i)Discovery(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Atlant(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Indigo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pulsar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tornado(?:3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onyx(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy_TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[\w]+-EXPLAY-FIN`),
		regexp.MustCompile(`(?i)Lagoon(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A350 TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Party(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Explay[ _-]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)RioPlay(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ESP-300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rock[ _]X[89]+|ROCK_X11`),
		regexp.MustCompile(`(?i)Rock[ _]X([89])\+`),
		regexp.MustCompile(`(?i)EZIO-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)EZZE-|EZ[a-z0-9]+`),
		regexp.MustCompile(`(?i)EZZE-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)EZ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:(?:SH6[05]|SA50|SP65)_(?:2[13]|66)\d{3}|H166|R570E|P670|(?:SH6[05]|SA55) \dGB/\d{2}GB \d{4}mAh [HG]MS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH(6[05]) 2GB`),
		regexp.MustCompile(`(?i)(H166|P670|R570E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SH6[05]|SA50|SP65)_(?:2[13]|66)\d{3}`),
		regexp.MustCompile(`(?i)(?:Bison2021|B2021|[HR]2022|Air1 Pro| Air1| B[12] Pro|(?:B2|Air2) Ultra|Raptor LTD|Android 12(?:[\d.]*);(?: [\w-]+;)? (?:B1)|Android 13(?:[\d.]*);(?: [\w-]+;)? (?:Raptor|B2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Raptor(?: LTD)?`),
		regexp.MustCompile(`(?i)([HR]2022|Air1 (?:Ultra Pro|Ultra\+?|Pro)|Air1|B[12] Pro|Air2 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Bison2021|B2021)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B[12])(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:Z8PLUS|Z8POCKET|LT5216|F80s_plus|C8Finger|F80 PIABELLA|i8_ROKR|LT1[68])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LT5216|LT1[68])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K11[038]|D118)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FFFTAB10a4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FX4423)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fise_32433_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FITCO, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)OPTIMUM (500[1-4]|5501)`),
		regexp.MustCompile(`(?i)UNICUM (1002|8S|8003)`),
		regexp.MustCompile(`(?i)(Y121-EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:16M4HI105024|FMT-NM7058-02|FXT113R|176HS1050(?:232|531)|175WT1050231|175HS1050231|175FT1050241|Global3 B01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FXT113R)`),
		regexp.MustCompile(`(?i)ConeXis (A[12]|X[12])|SP5045V`),
		regexp.MustCompile(`(?i)(?:ifive[_ ]?(?:mini[_ ][43]G?S|X2|Mini3|3|Air|Pro 2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ifive[_ ]mini[_ ]([43]G?S)`),
		regexp.MustCompile(`(?i)ifive(X2|3)`),
		regexp.MustCompile(`(?i)ifive ?Air`),
		regexp.MustCompile(`(?i)FOODO[ _-](X10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FORME[ _-]`),
		regexp.MustCompile(`(?i)FORME[ _-]F520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FORME[ _-](A[35]7|R7S?|P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:android 1[23](?:[\d.]*);(?: [\w-]+;)? (?:F10[12])|F10[16] Pro|DT[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DT[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F(10[16]) Pro`),
		regexp.MustCompile(`(?i)F(10[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FPT[_ ](X1[05]|X[39]|X50|S68 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FTRW100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Q3_EEA|Q3pro|Q10-EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q3_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q10-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q3pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLEET_7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (FP(?:1U?|[2345]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FX[123]00)`),
		regexp.MustCompile(`(?i)Famous|Red Royal Edition`),
		regexp.MustCompile(`(?i)Red 5\+`),
		regexp.MustCompile(`(?i)Famous[_ ]TAB[_ ]10`),
		regexp.MustCompile(`(?i)FAN-M300H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart ?(601|550|50[59])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FAST81[08])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(vKB011B|vKB004L)`),
		regexp.MustCompile(`(?i)FENOTI_(42FN6000F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fero[_ ]|Royale[_ ](?:[YX]2|A1)`),
		regexp.MustCompile(`(?i)Royale[_ ]([YX]2|A1)`),
		regexp.MustCompile(`(?i)Fero[ _](A4001|A450[23]|A5001|L100|Iris|Power|Mega LTE|Vibe|J1)`),
		regexp.MustCompile(`(?i)ATRIUM II F55L2|TRIO F40LT|CENTRIC S50G|EPIC F50G|Gravity X55L|Orion M50L|ULTRA M50G|UltraJ8|M405B|VIRTUE3|F55L Build|Orbit_ll|F40G2`),
		regexp.MustCompile(`(?i)(F55L)`),
		regexp.MustCompile(`(?i)(Gravity X55L|Orion M50L)`),
		regexp.MustCompile(`(?i)FIGI[_ ]|(?:Note_(?:[37]|11)_Pro|Note_(?:1C|5)|Note_1_Lite|Nopal|[MGF]two|Hola)(?:[);/ ]|$)|Android 8(?:[\d.]*);(?: [\w-]+;)? Fj(?: Build|[;)])`),
		regexp.MustCompile(`(?i)FIGI[_ ]P40 Max`),
		regexp.MustCompile(`(?i)FIGI[_ ]P40`),
		regexp.MustCompile(`(?i)([MGF])two`),
		regexp.MustCompile(`(?i)(FSE1020)`),
		regexp.MustCompile(`(?i)Fj(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Note_([37]|11)_Pro`),
		regexp.MustCompile(`(?i)Note_(1)_Lite`),
		regexp.MustCompile(`(?i)Figgers[_ ](F3|DragonX)`),
		regexp.MustCompile(`(?i)Filimo Box FB-101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([AB][1-9]|[CD][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([AB][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([CD][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FINLUX, ?([0-9]+[a-z0-9_ \-]+), ?(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:AURII[ _](?:FAME|VIVID|INSPIRE|MAGNUM|Passion|Virtuoso|RAZOR|ULTRA|Secret Lite|AMUSE[_ ]3G|FORCE|FUSION|F8[_ ]Premium|XCITE|DELIGHT|DREAM[_ ](?:MINI|One)|AMUSE_4G)|SECRET_XR?|INTENSE[ _](?:POWER|METAL_2|XT)|RAZOR_PLUS_4G|SUPER SWEET|SWEET MINI|Dream_One_8|INSPIRE_4G|S90_Q|INTENSE_METAL_4G|INTENSE (?:5|XL)|VIVID_PRO|VIVID_PREMIUM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FORCE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]VIVID(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]INSPIRE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]RAZOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RAZOR_PLUS_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DELIGHT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DREAM[_ ]MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FAME(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]AMUSE[ _]4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dream_One_8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DREAM[_ ]One(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]ULTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]AMUSE[_ ]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FUSION(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]MAGNUM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVID_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVID_PREMIUM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]XCITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SECRET_(XR?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]((?:Passion|Virtuoso|Secret Lite|F8[_ ]Premium))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE POWER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_XT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_METAL_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_METAL_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPER SWEET(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE (5|XL)`),
		regexp.MustCompile(`(?i)(S90_Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S554020|F_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly|Power Plus 5000|Power Plus 3|Photo Pro|Slimline|Cirrus (?:6|13)|Life (?:Ace|Jet|Sky|Compact 4G|Geo|Zen|Play)|(?:lineage_)?FS50[1-9]|FS51[0-8]|FS52[0-9]|FS530|FS55[134]|FS40[1-9]|FS45[1-9]|4FS06|MERIDIAN-|(?:Phoenix 2|(?:IQ[0-9]{3,}[i]?)[ _]?(?:Quad|Firebird|Quattro|Turbo|Magic)?|Tornado Slim|Android 8(?:[\d.]*);(?: [\w-]+;)? View Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ310(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ236(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?View Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slimline(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Plus 5000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Photo Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Ace(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Jet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Sky(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Geo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Zen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Buzz(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Compact 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS508|Cirrus 6`),
		regexp.MustCompile(`(?i)(?:lineage_)?FS504`),
		regexp.MustCompile(`(?i)FS518|Cirrus 13`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ237(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ238(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ240(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ255(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ270(?: Firebird)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ275(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ285(?: Turbo)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ432(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ436(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4490(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ434(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4406(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ436i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4490i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ440(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ441(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ442 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ442(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ443(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ444(?: Quattro)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ445(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ446(?: Magic)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ447(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ456(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4409 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ448(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ449(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ450(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ450[ _]Quattro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ451(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ452 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ454(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4404(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4410 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Phoenix 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4411(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4412 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4413[ _]Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4414 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4415 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4418(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4504 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tornado Slim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ([0-9]+[i]? ?(?:Quad|Firebird|Quattro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly[ _\-]?([a-z0-9_]+)/`),
		regexp.MustCompile(`(?i)Flylife[ _\-]?([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Fly[ _\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MERIDIAN-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)4K SMART TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fondi[- _]([^;/)]+)|(T702|Q008B|Q010B|Q718B|Q902|T602B|T707G|T708B|T725B|T725B1|T907B)(?:\)| Build)`),
		regexp.MustCompile(`(?i)(T702|T602B)`),
		regexp.MustCompile(`(?i)(Q008B|Q010B|Q718B|Q902|T707G|T708B|T725B|T725B1|T907B)`),
		regexp.MustCompile(`(?i)Fondi[- _]([^;/)]+)`),
		regexp.MustCompile(`(?i)Fonos-|(?:Android 10(?:[\d.]*);(?:[\d.]*)(?: [\w-]+;)? O3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fonos-(O\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)O3(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Formuler[ _]|(?:S_TURBO_PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Formuler[ _](Z(?:8|10)(?: Pro)?|Z Alpha)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S_TURBO_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amosta ?3G5`),
		regexp.MustCompile(`(?i)Amosta ?3G5`),
		regexp.MustCompile(`(?i)(Apollo 5 Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ENIE E2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Four[ _]?(S600|S300I|S185|K500|S61)|S62_Eco_3|S186_Sky_3|S710 Ruby)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Four[ _]?(S600|S300I|K500)`),
		regexp.MustCompile(`(?i)Four[ _]?S185`),
		regexp.MustCompile(`(?i)Four[ _]?S61`),
		regexp.MustCompile(`(?i)(?:EASYSMARTM3|EasySmart M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY ?SMART ?M([32])`),
		regexp.MustCompile(`(?i)InFocus M[0-9]+[a-z]?`),
		regexp.MustCompile(`(?i)InFocus M([0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)(L590A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2305003M|2306004M|23080(?:05M|11M))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FUN PLUS|Fun \+|FTJ17[AC]00|FTJ152[ABCD]|FTU18A00|FT141B|FT142D(?:_LTEXM)?|FT142A?|FTJ161[ABE](?:-VN)?|FTJ1[56]2E|FTJ162[BD]|FT162D|FTE161[GE]|SAKURA_FTE1|FTE171A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fun \+`),
		regexp.MustCompile(`(?i)FTJ17A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTJ17C00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTU18A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTE161E|FTJ161E`),
		regexp.MustCompile(`(?i)FT142D(?:_LTEXM)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FT142A?`),
		regexp.MustCompile(`(?i)FTJ?162D`),
		regexp.MustCompile(`(?i)(RubensTab_T11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUEGO, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:F-01[FHJKLM]|F-02[EFGHLK]|F-03[DEFGKHL]|F-04[EGFHKJ]|F-05[DEFJG]|F-06[EF]|F-07[DE]|F-0[18]D|F-09[DE]|F-[45]1A|F-41B|F-[45]2A|F-1[012]D|F-12C|F-5[12]B|M532|FARTM933KZ|901FJ|arrows(?:RX|M03|M0[45](?:-PREMIUM)?)|801FJ|FJL2[12]|RM02|FCG01|A101FC|BZ02|LIFEBOOK AH532)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-01[LM]|F-06F|F-03K|F-42A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FJL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FJL22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-52A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901FJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-41B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-06E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-07D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:F-51B|FCG01|A101FC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)801FJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-07E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-08D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-09D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-09E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-(52B|12D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-10D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-11D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-12C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-04[JF])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RM02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZ02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsRX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM04-PREMIUM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM(0[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-0[32]F|F-03G|F-04H|F-05E|F-02K|F-01D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUNAI, ([a-z0-9_ \-]+), (?:wired|wireless)|AFTMON00[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTMON00[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fusion5|F104Bv2|F104EvII_PRO|F104EvII|F105D_128`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F104B)v2_PRO`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F104B)v2`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?F104EvII_PRO`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?F104EvII(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F704B|F105D|F104E)(?:_128|_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FXT810R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QX1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G-TiDE|(?: EX10|EXTREME X9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G-TiDE[_ ](A1|S[34]|E520|Vans [89]c?|V7s)`),
		regexp.MustCompile(`(?i)E(57|60|66|72|77)`),
		regexp.MustCompile(`(?i)G-TiDE[_ ](H1)`),
		regexp.MustCompile(`(?i)GTouch[_ ]|(?:Stella (?:XS?|Omega))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Stella (XS?|Omega)`),
		regexp.MustCompile(`(?i)GTouch[_ ]STELLA`),
		regexp.MustCompile(`(?i)GDL[_ ](Xtreme 4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEOFOX[_ ]MID ?(743\+?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEOZON[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)GFIVE[_ ]|(?:PRESIDENT_GOLD_(9|10)|President Gpower 1|Stark|Gpad70[12]|Speedo_1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRESIDENT_GOLD_(9|10)`),
		regexp.MustCompile(`(?i)GFIVE[_ ]President[_ ]Xhero[_ ](\d)`),
		regexp.MustCompile(`(?i)President (A97)`),
		regexp.MustCompile(`(?i)President Classic (\d)`),
		regexp.MustCompile(`(?i)President ?\(?G(\d)\)?`),
		regexp.MustCompile(`(?i)President Tango (\d)`),
		regexp.MustCompile(`(?i)GFIVE[_ ]President[_ ]Smart[_ ](A98|\d)`),
		regexp.MustCompile(`(?i)GPad(70[12])`),
		regexp.MustCompile(`(?i)(?:Android 8(?:[\d.]*);(?: [\w-]+;)? TAB5)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Quartz(T10-3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GLX (?:Aria|Dorna|Taban|Shine|Spark|ASA)|SHAHIN III|Maad\+?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maad\+`),
		regexp.MustCompile(`(?i)GLX (Aria|Taban|Shine|Spark)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLX (Dorna)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOCLEVER|QUANTUM_(?:[235]_)?[0-9]{3}|QUANTUM [0-9]{1}|QUANTUM 700N|Quantum2 500|QUANTUM_(1010N|1010M|900|II_500_N)|ARIES|INSIGNIA|ORION_|ELIPSO|LIBRA[ _]97|TERRA_7o[WL]|(?:TQ700|ORION7oL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUANTUM_(1010N|1010M|900)`),
		regexp.MustCompile(`(?i)INSIGNIA_(785_PRO|1010M|800M)`),
		regexp.MustCompile(`(?i)(ORION|ARIES|ELIPSO)[_ ](71|101|102)`),
		regexp.MustCompile(`(?i)TQ700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUANTUM_2_(1010|700|960)_Mobile`),
		regexp.MustCompile(`(?i)QUANTUM_([235])_(5[05]0)_RUGGED`),
		regexp.MustCompile(`(?i)QUANTUM_(\d+)_RUGGED_PRO`),
		regexp.MustCompile(`(?i)QUANTUM[_ ]([235])_([45]00)[_ ]LITE`),
		regexp.MustCompile(`(?i)QUANTUM[_ ]([45]00)[_ ]LITE`),
		regexp.MustCompile(`(?i)QUANTUM[ _]?([235])[ _]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)((?:QUANTUM|ARIES|INSIGNIA|ORION|ELIPSO)[ _-]?[^;/]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)TERRA_(7o[WL])`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]TAB[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)TAB ([^;/)]+) Build/GOCLEVER`),
		regexp.MustCompile(`(?i)([^;/)]+) Build/GOCLEVER`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?TAB[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)LIBRA[ _]97`),
		regexp.MustCompile(`(?i)(?:EVO-VX1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:G(?:3|10)_EEA|CNOTE 50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G(3|10)_EEA`),
		regexp.MustCompile(`(?i)(SEI600GO|GO700FR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GTCOMBO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTX_JACULUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Galactic[_ ](Astro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GI (?:UNI2|iTV912|Fly T2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EDU-7MT4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Garmin-Asus|Garminfone`),
		regexp.MustCompile(`(?i)Garminfone[ \-_]([^;/]*)Build`),
		regexp.MustCompile(`(?i)Garmin-Asus[ \-_]([^;/]+)Build`),
		regexp.MustCompile(`(?i)Garmin-Asus[ \-_]([^;/]+)[\)/]`),
		regexp.MustCompile(`(?i)GWAT(?:8-1|10-1)`),
		regexp.MustCompile(`(?i)GWAT(8|10)-1`),
		regexp.MustCompile(`(?i)(JT08-X1|JT10-90|JT10-81B|JT10-X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEANT[_ ](T\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Feel_7013N)`),
		regexp.MustCompile(`(?i)(GEM[0-9]+[a-z]*)`),
		regexp.MustCompile(`(?i)General_Mobile_|GM 5 Plus|GM8 go|GM[ _][568][ _]d|GM [86]|General Mobile 4G|GM6_Tur|GM 9 (?:Pro|Plus)|(?: GM 5|e-tab 20|Android 1[012](?:\.[\d.]+)?;(?: [\w-]+;)? (?:G[35]01|G[35]10|G702|G700)|Discovery (?:Air|Elite(?: Plus)?)|GM Discovery II|GM Discovery tab 8|Discovery II Mini| GM6|G300|G008|android 4([\d.]*);(?: [\w-]+;)? Discovery|e-?tab5|G51[24]|G31[246]|G901| G100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GM[ _](\d+)[ _]d`),
		regexp.MustCompile(`(?i)GM6_Tur|GM ?6`),
		regexp.MustCompile(`(?i)GM ([58])`),
		regexp.MustCompile(`(?i)Discovery (Air|Elite(?: Plus)?)`),
		regexp.MustCompile(`(?i)Discovery(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)General[ _]Mobile[ _]4G[ _]Dual`),
		regexp.MustCompile(`(?i)e-?tab ?(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SK-Mtek GT730[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEOTEL[ _]?`),
		regexp.MustCompile(`(?i)GEOTEL[ _]?Note`),
		regexp.MustCompile(`(?i)GEOTEL[ _]AMIGO`),
		regexp.MustCompile(`(?i)(GTX-R10i Pro|GTX-R10i|GTX-98Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Getnord[- ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)G-Fone ?(\d{1,3})`),
		regexp.MustCompile(`(?i)GHIA|QS702|SVEGLIO[ _][QH]1|VECTOR10\.1|GTKIDS7[BVR]?|(?:A7_WF|GTA7(?:WF|PLUS)|VENUS7|TREO_TAB8G?|VECTOR_SLIM|GTAB718|GTABPND|GTABKIDS|GTVR10S|AXIS7_SLIM|AXIS7_LED)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SVEGLIO[ _]([QH]1)`),
		regexp.MustCompile(`(?i)GHIA[ _](L1)`),
		regexp.MustCompile(`(?i)VECTOR10\.1`),
		regexp.MustCompile(`(?i)GTKIDS7[ABVR]?|GTABKIDS`),
		regexp.MustCompile(`(?i)GHIA[ _]?(47458|VECTOR_3G)`),
		regexp.MustCompile(`(?i)(GTAB718)`),
		regexp.MustCompile(`(?i)GHONG(V10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GHOST G03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GSmart[ _][a-z0-9 ]+(?: Build|\))|Gigabyte-[a-z0-9]+|Simba SX1|Roma R2|Boston 4G|GSmart_Classic_Lite|Classic[_ ](?:Joy|Pro)`),
		regexp.MustCompile(`(?i)(GSmart[ _][a-z0-9 ]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Gigabyte-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Classic[ _](?:Joy|Pro)|GSmart_Classic_Lite|Boston 4G)`),
		regexp.MustCompile(`(?i)Gigaset|(?: GX290|GS80|GS1[0189]0|GS1[89]5|GS2[89]0|GS5[357]-6|GS[23]70(?:_Plus)?|E940-(?:2766|279[567]|2878|2849)-\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gigaset QV(1030|830)`),
		regexp.MustCompile(`(?i)G(S[23]70)[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GS([23]70|1[0189]0|1[89]5|2[89]0|80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GX290)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gigaset ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Gigaset ([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gini[ _]|(?:SW17W13|SW17W08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gini[ _]W(7)`),
		regexp.MustCompile(`(?i)Gini[ _]n(8)`),
		regexp.MustCompile(`(?i)Gini[ _]s5Pro|SW17W13`),
		regexp.MustCompile(`(?i)Gini[ _]Tab[ _](V[78])`),
		regexp.MustCompile(`(?i)GINZZU[_ ]|((?:RS(?:7[14]|81|9[67])D)|S5002|S5021|S5230|S50[45]0|S51[24]0|RS(6[12]|9[45])D|S40[23]0|RS850[12]|RS9602|GT-W170)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GINZZU[_ ]?(S40[17]0|S4710|ST60[14]0|ST6120)`),
		regexp.MustCompile(`(?i)(?:GINZZU[_ ]?)?(GT-(?:W170|1050|7105|70[1-4]0|7115|7210|[WX]831|X[78]70|7810|8[01]10|X853|X890))`),
		regexp.MustCompile(`(?i)(RS6[12]D) ULTIMATE`),
		regexp.MustCompile(`(?i)(?:GINZZU[ _])?((?:RS(?:7[14]|81|9[14-7]|7)D)|S50[45]0|S5002|S5021|S5230|S51[24]0|S40[23]0|RS850[12]|RS9602|RS94D|R8 Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]?[a-z0-9]+|(?:Dream_D1|V188S?|GN[0-9]{3,4}[a-z]?)(?:[);/ ]|$)|F103(?: Pro)?(?: Build|\))|P5 mini Build|(M7 Power|F106L|F100[AL]|F103S|F103 Pro|M6 mirror|20190620G|20190619G|20190418Q|GNP21M02|GNS2161B|GAU0820|Android 6(?:[\d.]*);(?: [\w-]+;)? (?:P8 Max|P7 Max)|Android 5(?:[\d.]*);(?: [\w-]+;)? M5 (?:mini|Plus)|Android 11(?:[\d.]*);(?: [\w-]+;)? P61|WBL7519|WBL7361|20190419Q|M5 lite CDMA|GLY1620|M2mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GN810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GIONEE[_ ]MAX Pro`),
		regexp.MustCompile(`(?i)GN([0-9]{3,4}[a-z]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F106L|F100[AL]|V188S|V188|F103S|F8 Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7 Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M([25]) ?mini`),
		regexp.MustCompile(`(?i)20190620G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S11|F205|S10) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M6 mirror(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F9 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190419Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F103( Pro)?( BUILD|\))`),
		regexp.MustCompile(`(?i)(P61)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:GIO-)?GIONEE[ _-])?Dream_D1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+).*Android`),
		regexp.MustCompile(`(?i)Android.*(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+)[ _]Pro`),
		regexp.MustCompile(`(?i)Android.*(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(GU1011C|GU8012C|GU7013C|GU730C|GU-6012B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GU8012C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GU-6012B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GU1011C|GU7013C|GU730C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Globmall[ _](X4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)glofiish[ _]|(?:Gpad_U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO Onyx|GO[0-9]{3,4}`),
		regexp.MustCompile(`(?i)GO([0-9]{3,4})`),
		regexp.MustCompile(`(?i)(?:F10_PRIME|F3Prime|F9_PLUS|TEAM_7_3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Netta 2 Pro|Netta 3\.100m|BENGAL_6|DETROIT 3|i-910|i-9[02]5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i-(910|9[02]5)`),
		regexp.MustCompile(`(?i)Netta 3\.100m`),
		regexp.MustCompile(`(?i)(LT-55U900)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Goly[ _-]`),
		regexp.MustCompile(`(?i)Goly[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Goly[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:GOME[_ ](?:201[678].+|C7_Note(?:_Plus)?|U9|S[17])|Fenmmy_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018X38A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018X07A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017X05A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017X82A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2016G68A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2016M25A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017M27A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017M95A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018M29A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](C7_Note(?:_Plus)?|U9|S[17])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GOME[_ ])?(Fenmmy_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexus|GoogleTV|Google Fiber|Google Pixel|Glass|CrKey[^a-z0-9]|(?:Pixel|sailfish|taimen|blueline|Chromecast(?: HD)?)(?:;? Build|[)])|Pixel (?:XL|9 Pro XL|C|[2-8]|[2-4] XL|Fold|Tablet)|Google 2XL|PIXEL4X|G011A|AOSP on (?:bramble|HammerHead|Manta|sunfish)|Pipit|ADT-2|GE2AE|G0DZQ|G1MNW|G82U8|G9BQD|G6QU3|GO3Z5|G025[IJ]|G020[ABCGEMP]|G9FPL|GWKK3|GP4BC|G4S1M|GKWS6|GHL1X|G1F8F|G01[13]C|G013A|GC3VE|GD1YQ|GTT9Q|GA02099|GA01180-US`),
		regexp.MustCompile(`(?i)(Nexus (?:2|S|4|5X?|One))`),
		regexp.MustCompile(`(?i)(Nexus (?:6P?))`),
		regexp.MustCompile(`(?i)(Nexus (?:7|9|10))`),
		regexp.MustCompile(`(?i)(GFHD[12]00)`),
		regexp.MustCompile(`(?i)CrKey/[0-9.]+ DeviceType/SmartSpeaker`),
		regexp.MustCompile(`(?i)CrKey[^a-z0-9]`),
		regexp.MustCompile(`(?i)(?:Pixel|sailfish)(?: Build|[)])`),
		regexp.MustCompile(`(?i)blueline|G013A`),
		regexp.MustCompile(`(?i)G020[AE]`),
		regexp.MustCompile(`(?i)Pixel 3 XL|G013C`),
		regexp.MustCompile(`(?i)Pixel 2 XL|taimen`),
		regexp.MustCompile(`(?i)Pixel 3a XL|G020[BCG]`),
		regexp.MustCompile(`(?i)Pixel 4 XL|GA01180-US|G020P`),
		regexp.MustCompile(`(?i)AOSP on sunfish|G025J|GA02099`),
		regexp.MustCompile(`(?i)Pixel 4a \(?5G\)?|AOSP on bramble|G025I|G6QU3`),
		regexp.MustCompile(`(?i)pixel ([3-8])a`),
		regexp.MustCompile(`(?i)G1F8F|G4S1M`),
		regexp.MustCompile(`(?i)GE2AE|GP4BC`),
		regexp.MustCompile(`(?i)GTT9Q|GD1YQ`),
		regexp.MustCompile(`(?i)G1MNW|GC3VE`),
		regexp.MustCompile(`(?i)G9BQD|GKWS6`),
		regexp.MustCompile(`(?i)G0DZQ|G82U8|GWKK3|GHL1X`),
		regexp.MustCompile(`(?i)Google 2XL|G011C`),
		regexp.MustCompile(`(?i)Pixel ([678]) Pro`),
		regexp.MustCompile(`(?i)pixel ([2-8])`),
		regexp.MustCompile(`(?i)G9FPL|Pixel Fold`),
		regexp.MustCompile(`(?i)Goophone[ _]|(?:M(G492|L7[JK]2)CH|MN(4A2|8J2)ZP|MGA92ZP|MKU82ZP|MNGW2CH|MNH02CH|MNRM2CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MG492CH|MGA92ZP)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML7[JK]2CH[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MKU82ZP[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MNGW2CH[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MN4A2ZP|MNH02CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MN8J2ZP|MNRM2CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S4 MEGA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Goophone i([69])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gooweel| M5 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gooweel; (S7);`),
		regexp.MustCompile(`(?i)GTV-|(?:Gplus[ _](?:[ZXP]10\+?|N809|F53|S9701|FW6950|A2_Plus|S10)|GMC-(?:7127M|668[NM]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gplus[ _]([ZXP]10\+?|N809|F53|S9701|FW6950|A2_Plus|S10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTV-(50PU744N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRADIENTE-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)GRADIENTE ([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)GRAETZ[;,]`),
		regexp.MustCompile(`(?i)(?:Grape[ _])?GTM[-_]5([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(E101GCM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:G0[256]15D|G0245D|G0335D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G0215D|G0245D|G0335D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G-10 (?:ULTRA|PRO)|G-20ULTRA|G-8 PRO`),
		regexp.MustCompile(`(?i)G-([12]0) ?ULTRA`),
		regexp.MustCompile(`(?i)G-(8|10) PRO`),
		regexp.MustCompile(`(?i)(?:GO 55303)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X1_Light(?:_Lte)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1_Light(?:_Lte)?`),
		regexp.MustCompile(`(?i)Gresso[ _]|(?:REGAL R2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gresso[ _]Regal(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gretel|(?:GT6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GT6000)`),
		regexp.MustCompile(`(?i)Gretel; (A[67])`),
		regexp.MustCompile(`(?i)GroBerwert[ _]?(HD7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GR?-TB[0-9]+[a-z]*|GRUNDIG|portalmmm/2\.0 G|AFTEU(?:011|014|FF014)`),
		regexp.MustCompile(`(?i)(GR?-TB[0-9]+[a-z]*)`),
		regexp.MustCompile(`(?i)GRUNDIG (?:Android TV|Google TV UHD\+)`),
		regexp.MustCompile(`(?i)GRUNDIG ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 G([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Gtel[ _]|A727_Infinity_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity 8s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity 9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gtel[ _-]X(\d) ?plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gtel[ _-]X(\d) ?mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gtel[ _-]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(XP9800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Betacrux(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Betacrux(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H96[ _]?(?:Max|PRO\+)`),
		regexp.MustCompile(`(?i)(?:H96[_ ]?)?Max[ _]RK(\d{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Max X2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H96[_ ]Max[ _]V11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SpaceTab_H20)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T2000)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:H10_ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIPER[ -](?:MEDIA|[MS]-Pad)|(?:U(?:43|50|65)YQ2200GR|H32YQ2200GR|MEDIA TV M5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIPER[ -]([SM])-Pad`),
		regexp.MustCompile(`(?i)MEDIA TV (i4 Pro|i4|[46]K|M5)`),
		regexp.MustCompile(`(?i)(U(?:43|50|65)YQ2200GR|H32YQ2200GR)`),
		regexp.MustCompile(`(?i)4K AI Smart TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HKPRO,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(SMB-H8009)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMD (?:Pulse (?:Pro|Plus)|Pulse)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HGTV-LED(\d{2}[FU]?HDSQ?\d{3}T2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (EV10)( Build|[;)])`),
		regexp.MustCompile(`(?i)HOTREALS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hewlett-Packard|HP Engage|HP/HP|HP Chromebook|HP EliteBook|TouchPad/\d+\.\d+|hp-tablet|HP ?iPAQ|webOS.*P160U|HP (?:Pro )?Slate|Slate 21|HP [78]|HP 10 Plus|Compaq [7|8]|HP; [^;/)]+|cm_tenderloin`),
		regexp.MustCompile(`(?i)HP ([78][^)/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)Compaq ([78][^/;]*) Build`),
		regexp.MustCompile(`(?i)HP Slate ?(.+) Build`),
		regexp.MustCompile(`(?i)HP Slate ?([0-9]+)`),
		regexp.MustCompile(`(?i)TouchPad/(\d+\.\d+)|hp-tablet`),
		regexp.MustCompile(`(?i)HP; ([^;/)]+)`),
		regexp.MustCompile(`(?i)HP ?iPAQ ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)webOS.*(P160U)`),
		regexp.MustCompile(`(?i)HP ProBook (6560b)`),
		regexp.MustCompile(`(?i)Chromebook (11 G5|x360 11 G1 EE|13 G1|x2)`),
		regexp.MustCompile(`(?i)HP EliteBook (820 G2|8470p)`),
		regexp.MustCompile(`(?i)HTC|Sprint (?:APA|ATP)|ADR[a-z0-9]+|NexusHD2|Amaze[ _]4G(?:[);/ ]|$)|(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|\))|(Amaze[ _]4G|One ?[XELSV\+]+)(?:[);/ ]|$)|SPV E6[05]0|(One M8|One Mini 2|X525a|PG86100|PC36100|XV6975|PJ83100|2PYB2|2PS64|2PZC5|0PJA10|0PJA2|HTV33|0PM92|0PCV1|601HT|0PAJ5|HTL2[23]|HTV3[12]|2PQ93|X2-HT|EXODUS 1|ISW13HT|710C|U Ultra|2Q8L10000|2Q55100|2QC9200|2PZC100|2PZF1|2Q6E1|U12 life)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ](?:U-2u|U Play|2PZM3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ]U-1[wu]|2PZF1|U Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:U11 plus|(?:HTC_)?2Q4D[12]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC )?(?:U12\+|2Q55[13]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U(1[12]) life(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2Q6E1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:U11 Eyes|2Q4R100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XV6975(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PG86100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PC36100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]D628u`),
		regexp.MustCompile(`(?i)(?:HTC[_ ])?(?:HTV33|601HT|2PZC100|2PZC5|U-3[uw])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_)?(?:801e|802[wdt]|PN071)`),
		regexp.MustCompile(`(?i)PJ83100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]PO582(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_?)?(?:One[ _]?Mini[ _]?2|M8MINx)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X2-HT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC 2PXH3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ISW13HT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTL22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC U23 pro|2QC9200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTL23|HTV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTCButterflys901s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ])?(?:M9pw|One M9 ?PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ]M9u|0PJA2|0PJA10|HTC One M9|HTC6535LVW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)One[ _](X9|[EM]8) dual sim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire[ _]([\d\w]+) dual sim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC(?: One m7|6500LVW|PN071)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:One M8|HTC6525LVW|HTC[_ ]M8[xd]|HTC[_ ]0P6B|HTCOneM8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC ?One ?M8 ?Eye(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_)?(?:0PAJ5|M8Sx)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]E9x(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(?:One[_ ])?E9(?:pw|PLUS dual sim)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_S9u(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC6515LVW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X525a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2PQ9(?:3|10)|HTC[_ ]A9u)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2PS64|HTC6545LVW|HTC[_ ]M10h`),
		regexp.MustCompile(`(?i)(710C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)0PM92(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_)?0PCV[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC ?D160LVW(?:PP)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]D310n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]v01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)608t(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_(?:0P9O2|D610x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(0P4E[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?D620h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(?:D626ph|D200LVWPP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?(?:0P9C2|D816[xd]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?D526h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2Q8L10000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire620G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EXODUS 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC 2Q7A100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire 10 compact(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_D10i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[ _](?:10[ _]evo|M10f)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire (\d+) pro 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire (\d+) pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire 10 lifestyle(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[ _-]P715a`),
		regexp.MustCompile(`(?i)HTC[ _-]Flyer Build`),
		regexp.MustCompile(`(?i)HTC[ _-](A10[13]) Plus`),
		regexp.MustCompile(`(?i)HTC[ _-](A10[0123])`),
		regexp.MustCompile(`(?i)HTC[ _-]Flyer[ _\-]([\w]{1,5})`),
		regexp.MustCompile(`(?i)HTC(?:[ _-])?(?:One[ _\-]max|6600LVW|0P3P7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)USCCHTC(\d+)`),
		regexp.MustCompile(`(?i)Sprint (ATP.*) Build`),
		regexp.MustCompile(`(?i)Sprint (APA.*) Build`),
		regexp.MustCompile(`(?i)Wildfire (E3) lite`),
		regexp.MustCompile(`(?i)Wildfire (E2?) plus`),
		regexp.MustCompile(`(?i)HTC[ _]([^/;]+) [0-9]+(?:\.[0-9]+)+ Build`),
		regexp.MustCompile(`(?i)HTC[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)HTC[ _]([a-z0-9]+[ _\-]?(?:[a-z0-9_+\-])*)`),
		regexp.MustCompile(`(?i)(?:HTC-)?HTC(?:[-/ ])?([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)HTC;(?: )?([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Amaze[ _]4G|One ?[XELSV\+]*) Build`),
		regexp.MustCompile(`(?i)(ADR[^;/]+) Build`),
		regexp.MustCompile(`(?i)(ADR[a-z0-9]+)`),
		regexp.MustCompile(`(?i)HTV32(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HAFURY|GT20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MIX|UMAX)`),
		regexp.MustCompile(`(?i)Haier|(?:M53-52401|I6_Infinity|Titan[ _]T[135]|(?:HW-)?W(?:71[67]|757|86[07]|970)|S5 Silk|(?:HM-)?(N505|N700|G(?:152|303|353|552|70[01])?-FL|HM-(?:I559|N50[15]|I560|G553|N70[01])-FL|HR-V101|G(?:303)?-W|I(?:557)?-FL)|(?:PAD[ _](?:D71|G781|d85))|A2_Lite_NFC|A4_Lite|HL810G|Andromax C46B2H|OLED TV S9|MINTAKA|android 8([\d.]*);(?: [\w-]+;)? E13)(?:[);/ ]|$)|Android [67](?:[\d.]*);(?: [\w-]+;)? P2(?: Build|[;)])`),
		regexp.MustCompile(`(?i)E13(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P2(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:HM-)?(G(?:152|353|552|70[01])|G(?:303)|I(?:557))`),
		regexp.MustCompile(`(?i)(Titan[_ ]T[135]|I6_Infinity)`),
		regexp.MustCompile(`(?i)(?:HW-)?W(71[67]|757|86[07]|970)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MINTAKA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAD[ -_](D71|G781|d85)`),
		regexp.MustCompile(`(?i)(HL810G|HR-V101|M53-52401)`),
		regexp.MustCompile(`(?i)Haier[ _\-](H[WT]-[^/;]+) Build`),
		regexp.MustCompile(`(?i)Haier[ _\-](H[WT]-[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)Haier[ _\-](sy[0-9]+)`),
		regexp.MustCompile(`(?i)Haier[ _\-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Haipai ?noble S6`),
		regexp.MustCompile(`(?i)Haixu[_ ]?([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)Hamlet[ _]|XZPAD412LTE`),
		regexp.MustCompile(`(?i)(?:Hamlet[ _])?XZPAD(412W|412LTE)`),
		regexp.MustCompile(`(?i)(?:Hammer[_ ](?:Construction|Explorer[_ ](?:Plus|Pro)|FORCE|Blade_[34]|Blade2_PRO|Blade_5G|IRON_[234](?:[_ ]LTE)?|IRON|Explorer|ENERGY(?:_18x9|_2_2022|_[2X])?|Titan 2|Active2?(?:_LTE)?)|Iron[_ ]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer[_ ]Construction`),
		regexp.MustCompile(`(?i)Hammer[_ ]Explorer[_ ]Plus`),
		regexp.MustCompile(`(?i)Hammer[_ ]Explorer[_ ]Pro`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY_2_2022`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY[ _](18x9|3G|\d+|X)`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY`),
		regexp.MustCompile(`(?i)Hammer[_ ]FORCE`),
		regexp.MustCompile(`(?i)(?:Hammer[ _])?Iron[ _]([234]|V)`),
		regexp.MustCompile(`(?i)Hammer[ _]Iron`),
		regexp.MustCompile(`(?i)Hammer[ _]Explorer`),
		regexp.MustCompile(`(?i)Hammer Active(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer_Active2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer_Active2_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer_Blade_([34])`),
		regexp.MustCompile(`(?i)(?:ALGIZ_RT8|NAUTIZ_X2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NAUTIZ_X2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ALGIZ_RT8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HSG[0-9]{4})|SN97T41W|SN1AT71W\(B\)|SN70T51A|SN70T31?|T7-QC`),
		regexp.MustCompile(`(?i)(HSG[0-9]{4})`),
		regexp.MustCompile(`(?i)SN1AT71W\(B\)`),
		regexp.MustCompile(`(?i)Hanson[_ ]?([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)ODROID[-]?(C2|[NU]2|XU[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HARPER|(?:HARPER[_ ])?(?:ABX-332|ABX-[12]10|32R750TS|32R670TS|40F660TS|40F750TS|43U750TS|24R490TS|65U660TS|43F660TS|50U660TS|32R751TS|43F750TS|85U750TS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HARPER[_ ])?(ABX-332|ABX-[12]10|32R751TS|40F660TS|24R490TS|65U660TS|50U660TS)`),
		regexp.MustCompile(`(?i)(?:HARPER[ _-]?)?(\d{2}[QUFR]\d{3}TS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HTY[_-]\d{2}\w+-(?:S2|H[ACK]22|S2-T9|V[DNZS])|HTY-32HDR06G|HTY_43FHD06B|HTY-43F06B-VZ|HTY-24H06W-VZ|HTV-55U11B-VS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HT([YV])[_-](\d{2}(?:[^/;)]+))(?: Build|[);])`),
		regexp.MustCompile(`(?i)Hasee ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Hasee ([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DVB-ATV100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Hpad[12]|Wpad3| F3A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hpad([12])`),
		regexp.MustCompile(`(?i)Wpad(3)`),
		regexp.MustCompile(`(?i)F3A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEIMAT[ _](H43PU2303SVF|H65PU2303SVF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Helio (S60|S5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HB_X7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HTB801|HBook-Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Boost(?:[ _](?:Hypa|Max|Ultra))?(?: Build|[;)])|HMR(?:5012|5450)|Crusader|(?:VHIX-)?VHIX-\w+(?:-[A-Z])?|43FSY112X[bcd]?|32HSY119X|39HSY111X|55USY151X|50USY151X|65USY151X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost[ _](Hypa|Max|Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMR5012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HMR5450|Crusader)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VHIX-)?VHIX-(\w+)`),
		regexp.MustCompile(`(?i)(32HSY119X|39HSY111X|55USY151X|43FSY112X[bcd]?|50USY151X|65USY151X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Hebe|Hera|Hinova)-BD00|(?:ALH-BD00|MGZ-BD00|FIO-BD00|MIZ-BD00|MNT-BD00|SUP-BD00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hinova-BD00|MIZ-BD00`),
		regexp.MustCompile(`(?i)HLV-T([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:R6III)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(OC101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIHI-(4[01])KH-TAB-0?1`),
		regexp.MustCompile(`(?i)HIKING[_ ]|(?:HK-MH501|Fun5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIKING[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)HK-(MH501)`),
		regexp.MustCompile(`(?i) HIMAX[_ ]`),
		regexp.MustCompile(`(?i)POLYMER( X)?`),
		regexp.MustCompile(`(?i)HIMAX[_ ]PURE[_ ]3S`),
		regexp.MustCompile(`(?i)(?:32Y_STV-R|HIBERGQLED\d{2}Y|HIBERG\d{2}YUHD(?:-R)?|(?:5[05]|43|65)YUHD-R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIBERGQLED(\d{2}Y)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HIBERG)?(\d{2})YUHD-R`),
		regexp.MustCompile(`(?i)HIBERG(\d{2})YUHD`),
		regexp.MustCompile(`(?i)(32Y_STV-R)`),
		regexp.MustCompile(`(?i)(ELT070[46]H|ELT0802H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIGHSCREEN|(Easy[- ]Power(?:[- ]Pro)?|Pure[_ ](?:Power|F)|Power Ice(?: Max)?|Easy[_ ]([SFL]|XL)(?:_Pro)?|Razar_Pro|Power Rage(?: Evo)?|Zera-S-Power|Zera[ _][UFS]|Power[ _]?Five[ _]?(?:Pro|Evo|Max|Max(?:Lite|2))|Power(?:Four|Five)|BOOST II(?:se)?|Fest(?:XL)?(?:-Pro)?|Tasty|Boost3|Boost 3(?: Pro)? SE|Expanse|Explosion|Hercules|Alpha Rage|VergeM|Ice2|Prime [LS]|Spade|Spark 2|Alpha GT[RX]|Wallet|Thunder|Razar|COSMO DUO|Prime Mini SE| Bay|Omega Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Power Ice(?:[ ](?:Max|Evo))?|Power Rage(?: Evo)?|Zera[ _][UFS]|Alpha GT[RX]|Wallet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFivePro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFiveMaxLite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFiveMax2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Five Evo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Five Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power[_ ]?Five(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spade(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spark 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FestXL-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FestXL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fest-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fest(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bay(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFour(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure[_ ]Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure[ _]F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Razar_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Razar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Easy[_ ]([SLF]|XL)[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Easy[_ ]([SFL]|XL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HIGHSCREEN )?Easy[- ]Power[- ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HIGHSCREEN )?Easy-Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST IIse(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost 3 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost 3 Pro SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zera-S-Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tasty(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VergeM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WinWin(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Expanse(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hercules(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alpha Rage(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ice2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime Mini SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime ([LS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_|10DTB12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_9DTB39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10DTB12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hiremco|(?:Matador Pro Air|X6-PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Matador Pro Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X6-PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/]+) Build|Hisense|HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9\-]*|HNR55[01]T|E270BSA|HWCD100E|HITV300C|HITV205N|M470BS[AE]|EG98|E2281|EG680|I46D1G|HAT4KDTV|HITV10[12]C|HLTE([237]00T|229T|200M|203T|202N|21[023567][TM]|22[67]T|22[13]E|230E|103E|310[TM]|31[16]T|500T|501N|510[TM]|7[23]0T|M800)|KS(?:907|964)|U972|U601S Pro|U972_Pro|HNR320T|HiSmart [24]K ATV4|HiSmartTV A4|HLTE556N|HLTE720E`),
		regexp.MustCompile(`(?i)HITV10[12]C`),
		regexp.MustCompile(`(?i)M470BS[AE]`),
		regexp.MustCompile(`(?i)E50s \d+GB`),
		regexp.MustCompile(`(?i)HLTE221E|E MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE200T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE210T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE215T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE213T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE311T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE216[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE316T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE226T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F8 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE217T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE227T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HNR550T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HNR551T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE310[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE510[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE500T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HLTE230E|Infinity H40 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE720T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWCD100E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HLTE300T|HLTE200M|HLTE212T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HITV300C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E260T\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U972|U601S)[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity H([56]0) ZOOM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity E30SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9\-]*|U972)`),
		regexp.MustCompile(`(?i)(HAT4KDTV|HiSmart [24]K ATV4|HiSmartTV A4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hisense;SmartTV;([a-z0-9_ \-]+)V[ST];`),
		regexp.MustCompile(`(?i)Hisense;SmartTV;([a-z0-9_ \-]+);`),
		regexp.MustCompile(`(?i)(HE43A6500UWTS)`),
		regexp.MustCompile(`(?i)HITV205N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KS964(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense (U3) 2021(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+) Pro(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+) Plus(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^/]+)/`),
		regexp.MustCompile(`(?i)HITACHI[;,]`),
		regexp.MustCompile(`(?i)HITACHI, ?([0-9]+[a-z0-9_ \-]+), ?(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(Amaze[ _](?:S2_4G|S[56] 4G|S1|S[56](?: Plus)?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HOFFMANN|Neo[_ ]A[1379]00|X-Go|X-Play|X-Pro|X_Ultra|X-Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neo[_ ](A[1379]00)`),
		regexp.MustCompile(`(?i)HOFFMANN[ _]X[-_ ](Prime|Twist|Max)`),
		regexp.MustCompile(`(?i)X[-_](Play|Go|Pro|Ultra|Max)`),
		regexp.MustCompile(`(?i)(Box Q|Box R 4K| KP1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ideal (?:10S|Tab [79]|8S)|ALFA(?:10T[BX]|7LM)|ALFA[_ ](?:10R[CX]|10BS|10TM?|8T|10MB|10YC|7RS|[78]M?RC|7M|8S[TL]|8RX|8MG|10BT_V2)|HT[ _](?:7RT|8MZ))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ideal (?:10S|Tab 9|8S))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALFA[_ ]?(10R[CX]|10YC|10BS|10T[BMX]?|7RS|[78]M?RC|7L?M|10MB|8T|8S[TL]|8RX|8MG|10BT_V2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ideal Tab 7 Ips( 3G)?`),
		regexp.MustCompile(`(?i)HT[ _](7RT|8MZ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Homtom|(?:HT[0-9]{1,2}(?: ?Pro)?|HT3_Pro|P30 Pro|android 8([\d.]*);(?: [\w-]+;)? S17)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Homtom[_ ])?HT ?([0-9]{1,2})[ _]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Homtom[_ ])?HT ?([0-9]{1,2}?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Homtom ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:EDA5[01]K?|EDA[47]0|EDA71_G|EDA5[12]|CK65|CT[46]0|CT45P|CN80|EDA61K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CT45P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EDA5[01]K?|EDA[47]0|EDA5[12]|EDA61K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CK65|CT[46]0|CN80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001)|F13_EEA|MZ104|HZ0010J?|HZ1012|YK_P30(?:_EEA)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001|MZ104)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HZ0010J?|HZ1012)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F13_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YK_P30)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HY(?:416|820)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HY(416|820)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Horizont[_ ])?(32LE7011D|43LE7022D|32LE705[12]D|65LE7053D|43LE7052D|50LE7053D)`),
		regexp.MustCompile(`(?i)HOSIN[ _-]`),
		regexp.MustCompile(`(?i)HOSIN[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)HOSIN[ _-]([^;/]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:HPP-(GS1|L55B)|VLE5|Puya|HPPL6[03]A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Venus[_ ](?:X[12]|X1[0245679]|R8 PLUS|R[236-9]|R1[028]|X16-1)|Cosmos[ _](?:V8_lite|V19_Plus|V2[0-3]|U2?|V1[359]|V[45689]|V8-2)|Pearl K[123]|Magic Q8|Magic 5 Plus|Magic (?:[89]|1[13])|Hot[_ ]6|Symbol (?:M1|X|Max|R60|Pro|S4)|Symbol|Cyber (?:[78X]|15)|Cyber (?:9|13|X) Pro|Cosmos|W10 Pro|TAB R7|TAB R6 (?:Pro|Ultra)|T5 Pro| M5i)(?:[);/ ]|$)|(?:Android 8(?:[\d.]*);(?: [\w-]+;)? M5 Plus|Android 12(?:[\d.]*);(?: [\w-]+;)? W10|Android 13(?:[\d.]*);(?: [\w-]+;)? T7)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Cosmos[ _]V8_lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hot[_ ]6?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus R8 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus[_ ]X16(?:-1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus[_ ](X[12]|X1[0245679]|R[236-9]|R1[028])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cyber (\d*|X) Pro`),
		regexp.MustCompile(`(?i)Cyber (\d*)`),
		regexp.MustCompile(`(?i)Symbol (S4|M1)`),
		regexp.MustCompile(`(?i)(W10|T5) Pro`),
		regexp.MustCompile(`(?i)W10?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M5i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pearl K(3) (2021)`),
		regexp.MustCompile(`(?i)(Cosmos[ _](?:V19_Plus|V2[0-3]|U2?|V1[359]|V[45689])|Pearl K[123](?: Prime)?|Magic Q8|Magic 5 Plus|Magic (?:[89]|1[13])|Symbol (?:X|Max)|Cosmos|M5 Plus)(?:-2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HT-705XS|705-G Go|1001-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HT-705XS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(1001-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(705-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huadoo[ _]|(?: HG11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huadoo[ _](HG0[46]|HG11|V[34])`),
		regexp.MustCompile(`(?i)HG11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huagan[ _]`),
		regexp.MustCompile(`(?i)Huagan[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)KHATAR H-(?:10 mini|20 PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KHATAR H-10 mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KHATAR H-20 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HW-)?(?:Huawei|nova (?:Y\d|[678])|Maimang \d|MediaPad T1|Ultym5|Ideos|Honor[ _]?|(?:(?:AGS|AGS2|ALE|ALP|AMN|ANA|ANE|ARE|ARS|ASK|ATH|ATU|AUM|BAC|BAH[234]?|BG2|BGO|B[ZK]K|BKL|BL[ALN]|BND|BTV|CA[GMNZ]|CH[CMW]|CHE[12]?|CLT|CMR|COL|COR|CPN|CRO|CRR|CUN|DIG|DLI|DRA|DUA|DUB|DUK|EDI|ELE|EML|EVA|EVR|FDR|FIG|FLA|FRD|FRL|GEM|GRA|HDN|HLK|HMA|Hol|HRY|HWI|H[36]0|INE|JAT|JEF|JDN|JDN2|JKM|JMM|JSN|KII|KIW|KNT|KOB|KSA|LDN|LEO|LIO|LLD|LND|LON|LRA|LUA|LY[AO]|MAR|MHA|MRD|MYA|NCE|NEN|NEM|NEO|NXT|PAR|PCT|PIC|PLE|PLK|POT|PPA|PRA|RIO|RNE|RVL|SCC|SCL|SCM|SEA|SHT|SLA|SNE|SPN|STF|STK|TAG|TIT|TNY|TRT|VCE|VEN|VIE|VKY|VNS|VOG|VRD|VTR|WAS|YAL|G(?:527|620S|621|630|735)|Y(?:221|330|550|6[23]5))-(?:[A-Z]{0,2}[0-9]{1,4}[A-Z]{0,3}?)|H1711|U(?:8230|8500|8661|8665|8667|8800|8818|8860|9200|9508))(?:[);/ ]|$))|hi6210sft|PE-(UL00|TL[12]0|TL00M)|T1-(A21?[Lw]|A2[23]L|701u|823L)|G7-(?:L01|TL00)|HW-01K|JNY-(LX[12]|[AT]L10|L[02]1)|OXF-AN[01]0|TAS-(A[LN]00|L[02]9|TL00)|WLZ-(AL10|AN00)|YOK-AN[10]0|NIC-LX1A|MRX-(AN19|AL[01]9|W[0-3]9)|CDY-(?:[AT]N00|AN[29][05]|NX9[AB]|TN[29]0)|GLK-(?:[AT]L00|LX1U|LX[23])|JER-(?:[AT]N20|[AT]N10)|ELS-(?:[AT]N[10]0|NX9|N[23]9|N04)|AKA-(AL10|L29)|MON-(W|AL)19|BMH-(?:TN10|AN[12]0)|AQM-([AT]L[01]0|LX1)|MOA-([AT]L[02]0|LX9N)|NTS-AL00|ART-(?:[AT]L00[xm]|L29N?|L28)|MED-(?:[AT]L00|LX[29]N?|AL20)|EBG-(?:AN[01]0|TN00|N19)|ANA-(?:[AT]N00|NX9)|BZ[AK]-W00|BZT-(W09|AL[01]0)|HDL-(AL09|W09)|HWV3[123]|HW-02L|TEL-[AT]N(?:00a?|10)|KKG-AN[07]0|MXW-[AT]N00|JKM-(?:AL00[ab]|L03)|TAH-(?:N29|AN00)m?|C8817D|T1-821W|d-01[JKH]|d-02[HK]|KRJ-(?:W09|AN00)|HWT31|Y320-U10|Y541-U02|VAT-L19|70[14]HW|60[58]HW|NOH-(?:NX9|AN0[01]|AN[58]0|AL[01]0)|TNNH?-AN00|LIO-(?:[TA]L00|[LN]29|AN00)|KOB2K-L09|KOB2-(?:AL00|[LW]09|L03)|AGS3-(?:[WL]09|AL0[09]|W00[DE]|W9)|DNN-LX9|NEY-NX9|LON-AL00|HLK-L41|503HW|AGR-(?:[LW]09|AL09)|PPA-LX[12]|ANG-(?:AN00|LX[12])|NOP-AN00|ALA-AN70|DVC-[AT]N[02]0|302HW|Nexus 6P|DBY-W09|WKG-(?:LX9|[AT]N00)|JSC-(?:AN00|AL50)|OCE-A[NL][015]0|NZA-AL00|BRQ-A[LN]00|BZC-(?:AL|W)00|NEN-L(?:X1|22)|KOZ-(?:AL[04]0|AL00CM)|NTH-(?:AN00|NX9)|MRR-W[23]9|WGR-(?:W[10]9|AN19)|TET-AN[10]0|SCMR-(?:W09|AL09)|OXP-AN00|HJC-(?:AN90|LX9)|CDL-AN50|CND-AN00|NTN-(?:LX[13]|AN20|L22)|RNA-[AT]N00|CHL-(?:A[LN]00|AL60)|ELZ-AN[012]0|NAM-(?:LX9|AL00)|JLH-AN00|JAD-(?:AL[0568]0|LX9)|AGS5-(?:L09|W0[09])|AGS3K-(?:W20|[WL]0[09])|AGRK-[WL]09|MT2L03|LSA-AN00|KJR-W09|TET-A[NL][05]0|TYH601M|RTE-AL00|BAL-(?:AL[08]0|AL60|AN20|L49)|BZI-(?:AL00|W00)|BZT3-(?:AL00|W09)|BZD-(?:W00|AL00)|MLD-AL[01]0|AGM3-(?:W09|AL09)HN|ABR-(?:AL[0689]0|LX9)|GIA-AN[08]0|LEO-DLXXE?|BZA-L00|MGI-AN00|CMA-(?:LX[123]|AN[04]0)|NEW-AN90|KRJ2-(?:W09|AN00)|BRT-(?:W09|AN09)|ANY-(?:[LN]X1|LX[23]|AN00)|JLN-(?:LX[13]|AL00)|LGE-(?:NX[19]|AN[012]0|N49B)|TNA-AN00|TFY-(?:LX[123]|AN[04]0)|DIO-AN00|BZW-AL[01]0|MOGOLIA|CM990|MGA-(?:AL[04]0|LX[39])|60[56]HW|Peppa-(?:L2[23]B|L0[23]B)|KANT-\d{3}[BCS]?|Kobe3-L09|FNE-(?:NX9|AN00)|HPB-AN00|Mate ?(?:[34]0 RS|Xs|30)|Y530|SDY-AN00|EC6108V[89]|CTR-(?:LX[123]|AL[02]|L81)|VNE-(?:LX[123]|N41|AN[04]0)|HMW-W09|GLA-(?:LX[13]|AL00)|HEY2?-[NW]09|GOT-(?:AL[01]9|W[02]9)|PAL-(?:AL00|LX9)|PAN-L29|NNH-AN00|P Smart S|NCO-(?:LX[13]|AL00)|DCO-(?:AL00|LX9)|CET-(?:AL[06]0|LX9)|ADT-AN00|RMO-(?:AN00|NX[13])|RKY-(?:AN[01]0|LX[123])|M300-L09|EVE-(?:AL00|LX[39]N?)|BNE-(?:LX[13]|AL00)|dtab01|BZT4-W19|ROD-W09|ANP-AN00|WGRR-W09|HN3-U01|Holly-U19|BLM-00|ANN-AN00|VNA-(?:LX[23]|L29)|CRT-(?:NX[13]|LX[123]|AN00)|AGM-W09HN|PGT-(?:AN[012]0|N[01]9)|GLL-AL01|MNA-(?:LX9|AL00)|LNA-(?:AL00|LX9)|ALT-(?:L29|AL[01]0)|MAO-(?:LX9N?|AL00)|Enjoy (?:20 SE|20 5G|Z 5G|20 Plus|20 Pro|[12]0e)|ANB-AN00|STG-(?:AL00|LX[12])|LTK-LX3|GOA-(?:LX9|AL80)|nova (?:6 5G|6SE|Lite3Plus|5T Pro)| Angela-L|DBR-(?:W[01]9|W10)|WOD-LX[123]|REP-AN00|WDY-(?:LX[123]|AN00)|FOA-(?:LX9|AL00)|ALI-(?:AN00|NX[13])|DBY2-(?:W0[09]|L09)|REA-(?:NX9|AN00)|AMZ-L29|AGT-AN00|VER-(?:AN[01]0|N49)|ELN-[WL]09|BTK-(?:AL09|W09)|FRI-(?:NX9|AN[01]0)|LLY-(?:LX[123]|AN00|NX1)|MAA-AN[01]0|BVL-(?:N[45]9|AN(?:16|[02]0))|MAG-AN00|RBN-NX[13]|PCE-(?:W29|W[34]0)|ALN-AL[018]0|FIN-AL60|ADA-AL00U?|BON-AL00|BRA-AL00|CLK-(?:LX[123]|AN00|NX[123])|FGD-AL00|GDI-W09|GAR-AN[06]0|CHA-AL80|MLA-L1[12]|LEM-AL00|ADY-(?:AL00|LX9)|VCA-AN00|JuliaQN-(?:L[02]1B|L23A)|HBP-(?:AL00|LX9)|ARC-AL00|BLK-AL00|HBN-(?:AL[18]0|LX9)|JDY-(?:LX1|AN00)|ELI-(?:AN00|NX9)|GFY-AL00|PE-CL00|DBY2-L09CK|ELP-(?:AN00|NX9)|LRA-(?:AN00|TL00)|GBD-NX9|FCP-AN10|CAM-L03|TGR-W09|Wukong-L29A|RTG-NX9`),
		regexp.MustCompile(`(?i)ADY-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)HBP-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)HBN-(?:AL[18]0|LX9)`),
		regexp.MustCompile(`(?i)CRT-NX[13]`),
		regexp.MustCompile(`(?i)CLK-NX[13]`),
		regexp.MustCompile(`(?i)REA-(?:NX9|AN00)|RTG-NX9`),
		regexp.MustCompile(`(?i)POT-[TA]L00a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z100-UL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y320-(?:U10|T00|U05)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y330-U05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y541-U02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8818(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G527-U081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G620S-L0[13]|C8817D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G630-U251(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G7-(?:L01|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P7-L(?:10|07)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6 ?S-U06`),
		regexp.MustCompile(`(?i)G730-C00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H1711(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y221-U(?:[12]2|[0345]3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y550-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y560-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huawei g700(?:-(?:U[012]0|T0[01]))?`),
		regexp.MustCompile(`(?i)ART-[AT]L00[xm](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MED-(?:[AT]L00|AL20)(?:[);/ ]|$)|Enjoy 10e`),
		regexp.MustCompile(`(?i)AQM-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG-[ACT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG-(?:L0[13]|L32|L13|L2[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NCE-(AL[10]0|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-(?:TL10|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SLA-(?:AL00|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIG-(?:[AT]L[10]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TRT-AL00[A]?|TRT-TL10A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LDN-(?:AL[12]0|TL[02]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLA-AL[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-[AT]L10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRD-[TA]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DVC-[AT]N20|Enjoy 20 Pro 5G`),
		regexp.MustCompile(`(?i)(?:DVC-AN00|Enjoy Z 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PPA-AL20|Enjoy 20 SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FRL-[AT]N00|Enjoy 20 Plus 5G`),
		regexp.MustCompile(`(?i)MLD-AL[01]0|Enjoy 20e Helio P35`),
		regexp.MustCompile(`(?i)U8665(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MED-LX9N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G735-L(?:03|12|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHC-U(?:0[13]|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?G621-TL00M?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KII-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLL-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-L0[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-[UT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MNA-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)LNA-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)JAD-(?:AL[0568]0|LX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ABR-(?:AL[08]0|LX9)`),
		regexp.MustCompile(`(?i)ABR-AL[69]0`),
		regexp.MustCompile(`(?i)BAL-(?:AL[08]0|L49)`),
		regexp.MustCompile(`(?i)U8860(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COL-(?:AL[01]0|TL[01]0|L29|L10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HRY-(?:[AT]L00[A]?|LX[12]|L21|LX1MEB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HRY-LX1T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9508(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YAL-(?:L21|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LRA-[AT]L00|Honor 20 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HRY-AL00T[a]?|Honor 20i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YAL-(L41|AL10)|Honor 20 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MAR-LX1H|YAL-[AT]L50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EBG-[AT]N00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EBG-AN10|EBG-N19|Honor 30 Pro\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CDY-(?:AN9[05]|NX9A|TN90)|Honor 30S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LRA-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MXW-[AT]N00|Honor 30 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BMH-(?:AN[12]0|TN10)|Honor 30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?H30-(?:C00|L01M?|L02|U10|T00|T10)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hol-U19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G750-T01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?SCL-(?:AL00|CL00|TL00H?)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CHM-U01(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Honor 4c Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CHE2?-[UT]L00[HM]?|CHE1-CL[12]0|CHE2-L(?:1[12]|23)|Che1-L04|CHE-TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CUN-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CAM-(?:AL00|TL00H|TL00)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-(?:AL10|L51|UL10|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-(?:L22|TL00H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?KIW-(?:AL10|TL00H|[TC]L00|L2[1-4]|UL00)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTH-(?:NX9|AN00)`),
		regexp.MustCompile(`(?i)JLH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTN-(?:LX[13]|L22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNA-[AT]N00`),
		regexp.MustCompile(`(?i)((?:Honor_|HW-)?H60-L(?:01|02|03|04|11|12)(?:_TD)?|HW-H60-J1|MOGOLIA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-TL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PE-([CU]L00|TL[12]0|TL00M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?DLI-(?:AL10|L[24]2|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L21HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JMM-L22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?BLN-(?:L2[124]|AL[1-4]0|TL[01]0(?:[);/ ]|$))`),
		regexp.MustCompile(`(?i)(?:Honor[_]?|HW-)?PLK-(?:AL10|CL00|TL00|TL01H?|UL00|L01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUM-(?:AL[20]0|L33[A]?|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUM-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?(?:LND-(?:AL[34]0|L29|TL[34]0)|AUM-L41)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATH-(?:[CAU]L00|TL00H?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?DUA-(?:L22|LX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?BND-(?:AL[01]0|TL10|L2[14]|L31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FRD-(?:AL[01]0|L0[249]|L1[49]|DL00)|VAT-L19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRA-(?:AL00X|AL00|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUK-(?:L09|TL30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEN-L22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JAT-L(29|X[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JAT-L41|Honor 8A Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKK-(?:AL[10]0|L21|L22|LX2|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KSA-(LX[239]|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JSN-L(?:2[123]|42)|JSN-[TA]L00[a]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARE-(?:AL[10]0|L22(?:HN)?|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STF-(?:AL[10]0|L09S?|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOA-LX9N|Honor 9A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AKA-L29|Honor 9C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LLD-(?:AL[01]0|L[23]1|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LLD-AL[23]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DUA-LX9|Honor 9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLK-AL00a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLK-(?:AL10|L4[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAM-UL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Holly-U19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTS-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNY-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VER-(?:AN10|N49)`),
		regexp.MustCompile(`(?i)LGE-(?:AN10|NX9|N49B)|GBD-NX9`),
		regexp.MustCompile(`(?i)MGI-AN00|PGT-(?:N09|AN00)`),
		regexp.MustCompile(`(?i)PGT-(?:AN10|N19)`),
		regexp.MustCompile(`(?i)ALI-NX[13]`),
		regexp.MustCompile(`(?i)BVL-AN16|BVL-N49`),
		regexp.MustCompile(`(?i)BVL-(?:AN20|N59)`),
		regexp.MustCompile(`(?i)RVL-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EDI-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VKY-TL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOG-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-(?:[AT]N00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-NX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COR-(?:AL[01]0|L29|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASK-AL(00x|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMA-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KSA-AL10|Honor Play 3e)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NNH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNNH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHM-[CUT]L00[HM]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OXP-AN00|Honor Play 4T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AKA-AL10|Honor Play 4T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RKY-LX[123]`),
		regexp.MustCompile(`(?i)CLK-LX[123]`),
		regexp.MustCompile(`(?i)(?:NZA-AL00?|KOZ-AL40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHL-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMA-AN40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHL-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUA-[TA]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HJC-AN90(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KOZ-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KOZ-AL00CM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HJC-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JAT-[AT]L00|Honor Play 8A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOA-(?:AL[02]0|TL00))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKL-(?:AL00|AL20|AL30|L09|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCT-[TA]L10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOK-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KNT-(?:AL[12]0|[TU]L10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUK-AL20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JMM-[AT]L[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKL-(?:L04|L09S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCT-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OXF-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OXF-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?SCL-L(0[1-4]|21|32)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?LYO-L[02]1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?LYO-L02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTN-AN20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TEL-(?:AN(?:00a?|10)|TN00)|Honor X10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Honor X10 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMA-LX[123]`),
		regexp.MustCompile(`(?i)TFY-LX[123]`),
		regexp.MustCompile(`(?i)CRT-LX[123]`),
		regexp.MustCompile(`(?i)LLY-LX[123]`),
		regexp.MustCompile(`(?i)ELI-(?:AN00|NX9)`),
		regexp.MustCompile(`(?i)ELP-(?:AN00|NX9)`),
		regexp.MustCompile(`(?i)VNE-LX[123]`),
		regexp.MustCompile(`(?i)WDY-LX[123]`),
		regexp.MustCompile(`(?i)(?:KKG-AN00|Honor X10 Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DNN-LX9|Honor X10 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANY-(?:NX1)`),
		regexp.MustCompile(`(?i)ANY-(?:LX[23])`),
		regexp.MustCompile(`(?i)VNA-LX[23]`),
		regexp.MustCompile(`(?i)WOD-LX[123]`),
		regexp.MustCompile(`(?i)ALA-AN70(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IDEOS[_ ]X5[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNN-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maimang (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TAH-(?:N29|AN00)m|Mate Xs)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAL-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)ALT-(?:AL00|L29)`),
		regexp.MustCompile(`(?i)TET-(?:A[NL]00|AN10)`),
		regexp.MustCompile(`(?i)ALP-(?:[TA]L00|L[02]9|L29S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNE-(?:AL00|L(?:01|03|21|23))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLA-(?:A09|L[02]9|L29S|[TA]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMA-(?:[AT]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SNE-(?:AL00|LX[0-3]|L01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LYA-(?:AL[01]0|L[02]9|L0C|TL00)|PAN-L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LYA-AL00P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVR-(?:[TA]L00|L29|N29|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TAS-([AT]L00|L[02]9)|AMZ-L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAS-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LIO-AN00P|Mate30 RS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPN-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-(?:[TA]L00|L[02]9|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-(?:N29|TN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-AN00m(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOH-(?:NX9|AN0[01]|AN50|AL[01]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOP-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mate 40 RS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OCE-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OCE-(?:A[NL]50|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DCO-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)CET-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)ALN-AL[08]0`),
		regexp.MustCompile(`(?i)NXT-(?:AL10|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MHA-(?:L[02]9|[AT]L00)|M300-L09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLL-L23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LON-(?:AL00(?:-PD)?|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRR-(?:L09|UL[20]0|CL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BND-L34(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CAZ-(?:AL[01]0|TL[12]0)|CAN-L[01][1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:608HW|PRA-LX[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-L1[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)nova Lite3Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PIC-(?:[AT]L00|LX9)|HWV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704HW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-(?:L0[13]|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-(?:AL00|L2[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNE-L[02]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWI-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAR-(?:[AT]L00|LX[19]|LX1M|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANE-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INE-(?:AL00|LX[12]r|LX[12]|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCE-(L22|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAR-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEA-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLK-(?:[AT]L00|LX1U|LX[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPN-TL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WLZ-AN00|nova 6 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JNY-[AT]L10|nova 6SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WLZ-AL10|nova 6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JEF-(?:[AT]N00|[AT]N20|NX9)|nova 7 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JER-(?:[AT]N10|[AT]N20)|nova 7 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CDY-(?:[AT]N00|NX9B|[AT]N20)|CDL-AN50|CND-AN00|nova 7 SE 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOA-(?:LX9|AL80)`),
		regexp.MustCompile(`(?i)FOA-(?:LX9|AL00)`),
		regexp.MustCompile(`(?i)FIN-AL60a?`),
		regexp.MustCompile(`(?i)(?:JNY-LX2|nova 7i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEN-L(?:X[13]|22)|nova 8i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANG-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JSC-AL50|nova 8 SE`),
		regexp.MustCompile(`(?i)BRQ-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BRQ-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ANG-LX[12]|Angela-(?:L2[12]B|L02B)|nova 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAM-(?:AL00|LX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RTE-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JLN-(?:AL00|LX[13])|JuliaQN-(?:L[02]1B|L23A)`),
		regexp.MustCompile(`(?i)GLA-(?:LX[13]|AL00)`),
		regexp.MustCompile(`(?i)NCO-(?:AL00|LX[13])`),
		regexp.MustCompile(`(?i)BNE-(?:LX[13]|AL00)`),
		regexp.MustCompile(`(?i)DIG-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WAS-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WKG-[AT]N00|Enjoy 20 5G`),
		regexp.MustCompile(`(?i)(?:WKG-LX9|Wukong-L29A|nova Y60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVE-LX[39]`),
		regexp.MustCompile(`(?i)MGA-LX[39]`),
		regexp.MustCompile(`(?i)CTR-LX[123]|CHW-LX3`),
		regexp.MustCompile(`(?i)STG-LX[12]`),
		regexp.MustCompile(`(?i)FIG-L(?:A1|X[123]|11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-(?:LX(?:[123]|1T|2J|1AF)|AL00|L01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-LX1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PPA-LX[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P Smart S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VTR-(?:L[02]9|AL00|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WAS-(?:L(?:X1|X1A|X2|X2J|X3|03T)|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VKY-(?:AL00|L09|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EML-(?:[TA]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ANE-(?:LX[123]|LX2J|L23|TL00)|HWV32)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CLT-(?:AL0[01]|TL0[01]|L0J|L(?:04|[02]9))l?|HW-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ELE-L(?:04|09|29)|ELE-[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MAR-(?:LX(?:1[BM]|2B|[13]Am?|2J?|3BM)|TL00|L21B|L21MEB)|NIC-LX1A|HWV33)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VOG-(?:L(?:04|09|29)|TL00|AL10)|HW-02L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-LX4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JNY-(?:LX1|L[02]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L29N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ELS-(?:[AT]N00|NX9|N04)|NEY-NX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELS-(?:AN10|N[23]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRA-(?:L09|[TU]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HUAWEI P8max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRA-UL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ALE-L(?:02|21|23)|ALE-[TUC]L00|503HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PRA-L(?:A1|X[12])|hi6210sft)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVA-(?:AL[10]0|L[012]9|[TCD]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-L(?:[23]1|[26]2|53|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-L52(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SLA-L(?:02|03|22|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L(?:03|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIE-(?:AL10|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-TL[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATH-UL0[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U(8230|8661|8667)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARS-([AT]L00|L22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRO-(?:L[02]2|U00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAG-L[02]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUA-(U22|L2[12]|U03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-(?:L(?:02|03|2[23])|U29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-L(?:01|03|21|23|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMN-LX[1239](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-LX5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRO-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAG-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-(?:LX2|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-L13(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUN-(?:L(?:0[123]|2[123]|33)|U29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SCC-U21|SCL-U31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-L11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-(L41|AL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-L(?:11|21|22|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRD-L(?:X1[NF]?|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-L(?:31|42)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIT-(?:AL00|L01|U02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M[ER]D-LX2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y625-U03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y635-L0[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y635-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAM-L(?:03|21|23|32)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TRT-LX[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LDN-L(?:01|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HUAWEI[ _]?)?DUB-(?:LX[13]|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LDN-(?:AL00|L21)|TRT-TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LDN-(?:LX2|TL10)|TRT-(?:L21A|L53))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-(?:LX2|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-AL00a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-AL20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PPA-LX3|Peppa-(?:L2[23]B|L0[23]B))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L28(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLA-(LX[123]|AL20|TL10|L23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JKM-(?:[TA]L00[ab]?|LX[123]|L03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-(L2[12]|LX3)|LTK-LX3`),
		regexp.MustCompile(`(?i)FRL-L2[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)302HW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NMO-L31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CM990(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultym5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G6-L11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexus 6P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWT31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HDN-[LW]09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH4-(?:L09|AL10)`),
		regexp.MustCompile(`(?i)BAH4-W(?:29|[03]9)`),
		regexp.MustCompile(`(?i)BAH3-(?:AL00|[LW]09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH3-W59(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH3-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DB[YR]-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DBR-W1[09]`),
		regexp.MustCompile(`(?i)GOT-AL[01]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOT-W[02]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCMR-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCMR-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-(L09|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W0?9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS5-L09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DBY2-W0[09]`),
		regexp.MustCompile(`(?i)AGS5-W0[09](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMW-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HDL-(?:W09|AL09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JDN-(?:AL00|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KRJ-AN00|Honor V6 5G`),
		regexp.MustCompile(`(?i)KJR-W09|KRJ-W09|Honor V6 Wi-Fi`),
		regexp.MustCompile(`(?i)AGS3-AL09HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W09HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEY-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEY2-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEY2-N09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MON-(W|AL)19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZA-W00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZA-L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZC-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZC-W00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZW-AL[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZT4-W19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2-80[123]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2-A01L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2-801W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-AL[01]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-W[0-3]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRR-W[23]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-AN19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WGRR?-W[10]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WGR-AN19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCE-W(?:29|[34]0)`),
		regexp.MustCompile(`(?i)CMR-(?:AL[01]9|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMR-W19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCM-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEM-70[1-3]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JDN2-(:?[WL]09|AL[50]0|AL50HN)|BAH2-(?:AL[01]0|L09|W[01]9))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHT-(?:AL|W)09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VRD-(?:(AL|W)09|AL10|W10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCM-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BTV-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BAH-W09|CPN-(?:L|W)09|CPN-AL00|701HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH-(?:L09|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AGS2-AL00|JDN2-(?:AL00|W09))HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS2-(?:[LW]09|W09HN|W19|L03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KOB2-(?:[LW]09|L03)|Kobe3-L09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGR-[LW]09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS-(?:L0[39]|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KOB-(?:L|W)09|BZK-[LW]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BG2-(?:U0[13]|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BGO-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BGO-DL09|PLE-70[13]L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JDN-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FDR-(A01[LW]|A03L)|60[56]HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T1-(?:A21[LW]|A2[23]L)|MediaPad T1 10 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1-701u(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T1-82(?:3L|1W)|MediaPad T1 8\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3K-W0[90]`),
		regexp.MustCompile(`(?i)AGS2-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W00[DE](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZT-(?:AL[01]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZT-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:d-01J|d-02[HK])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:dtab)?(d-01[KH]|01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO-BX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO-DLXXE?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLM-00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EC6108V(8|9)`),
		regexp.MustCompile(`(?i)KANT-350[BC]`),
		regexp.MustCompile(`(?i)(MediaPad[^/;]*) Build`),
		regexp.MustCompile(`(?i)Ideos([^;/]*) Build`),
		regexp.MustCompile(`(?i)(?:HUAWEI )?MT([0-9]+)`),
		regexp.MustCompile(`(?i)Huawei[ _\-]?([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:HW-)?Huawei(?:/1\.0/0?(?:Huawei))?[_\- /]?([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)Huawei; ([a-z0-9 \-]+)`),
		regexp.MustCompile(`(?i)Hugerock|T101_2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hugerock[_ ](T70H)`),
		regexp.MustCompile(`(?i)Humax[;,_]|(AIVI-N3000RV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Humax[;,] ([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Humax_liberty,([a-z0-9]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(AIVI-N3000RV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hurricane[ _]|(?:Flame_Plus|Glaze|Cobra|Ridge Plus|Rush Plus|DZIRE|Android 7(?:[\d.]*);(?: [\w-]+;)? Beam|Vulcan|SAGE|Iris Plus 2021|VortexPlus|Excite|Flint|Panther|Slam|Epic)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hurricane[ _]IGNITE`),
		regexp.MustCompile(`(?i)Hurricane[ _]Bolt`),
		regexp.MustCompile(`(?i)Hurricane[ _]VORTEX`),
		regexp.MustCompile(`(?i)Hurricane[ _]GIGA`),
		regexp.MustCompile(`(?i)(?:VULKANO|ST-810)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ST-810)`),
		regexp.MustCompile(`(?i)Model[ _](5|6s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PTC760|PNC5[56]0)`),
		regexp.MustCompile(`(?i)(PTC760|PNC5[56]0)`),
		regexp.MustCompile(`(?i)Hyundai|(?:Ultra (?:Active|Air|Charm|Dream|Energy|Latitude|Link|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)|Ultra_Vision_Plus|(?:Android 9(?:[\d.]*);(?: [\w-]+;)? [EL]553)|E435 Plus|E503F|E601F|L503F Plus|L604|L622|L601F|E(?:475|504|603)|G(?:24027|2552[34])K|W25042L|HP554O|Seoul (ECO|S8|MIX|5 Plus|9)|HT0701L16|HT0703K16|HT0704K08|HT100(?:4LI?16|2W32|3X16|2W16)|Koral_8W2|HT0701W16|Eternity[_ ](?:G25|H6[578])|HYMI 5S Plus|7GB1|7WD1|10LA1|10LB1|10WB[12]|E465GO|H-LED(?:55[BG]U7003|50FU7001|50[BG]U7003|50EU1311|55EU1311|65[BG]U7003|65EU1311|75BU7005|24BS5000|40GS5003|40FS500[13]|42FS500[13]|43FS500[13]|43EU1312|32FS500[135]|32GS5003|(?:32|40)BS5003|43[BG]U7003)(?:-[PC])?|H-DMP10[03]|HT070[34]W08|Koral 7W4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultra[_ ]Vision[_ ]Plus`),
		regexp.MustCompile(`(?i)Ultra (Active|Air|Charm|Dream|Energy Lite|Energy Plus|Energy|Latitude|Link|Live II|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)`),
		regexp.MustCompile(`(?i)Seoul (\d+)`),
		regexp.MustCompile(`(?i)Eternity[_ ](G25|H6[578])`),
		regexp.MustCompile(`(?i)E(475|504|503F|553|603|601F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L(553|601F|604|622)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Hyundai[_ ])?(Eternity[_ ](?:G57L?|G[56]0W?)|H7|Aero Plus|E435 Plus)`),
		regexp.MustCompile(`(?i)(H-LED\w+)(?:-[PC])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(H-LED\w+|H-DMP10[03]|2K TV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HT0704W08|Koral 7W4`),
		regexp.MustCompile(`(?i)7GB1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)7WD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hyundai ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Hyundai[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:Pryme 01|ST01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COMMUNICATOR[_ ]9\.7[_ ]3G`),
		regexp.MustCompile(`(?i)(?:Nu65|iPlus P3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Nu65)`),
		regexp.MustCompile(`(?i)(?:GO5_55|BLESS_GO55|BLESSPLUS|KF4Go|KF5bless|GO4\.5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO4\.5`),
		regexp.MustCompile(`(?i)(KF4Go|KF5bless)`),
		regexp.MustCompile(`(?i)IKU[_ ]|(?:Powerful_K55i|Curvy C50L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Powerful_K55i|Curvy C50L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ](A22|A[457]0|X[23]|K3|i[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ](T[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ]T[_ ]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]\w`),
		regexp.MustCompile(`(?i)IMO[ _]Q([23]) Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q([4]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]FEEL A2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S80(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S89(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S88(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S99(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S98(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S87(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S67(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S78(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Discovery II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q(5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _](Y5|Z[67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO TAB X9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KZCAR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INQ[/ ]`),
		regexp.MustCompile(`(?i)INQ/([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)INQ ([^;/]+) Build`),
		regexp.MustCompile(`(?i)INSYS|(?:HK9-4010|IH9-L614|AC7_DJ17)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VI4-103|GU4-K147)`),
		regexp.MustCompile(`(?i)T95pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM (?:picasso|vivaldi|newton)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM picasso(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM vivaldi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM newton(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IRA_DUO|IRAW7258)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(IRAW7258)`),
		regexp.MustCompile(`(?i)IT-(?:1101S?|1101-QUAD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IT-(1101S?)`),
		regexp.MustCompile(`(?i)IUNI[ _]`),
		regexp.MustCompile(`(?i)IUNI[ _](U3|i1|N1)`),
		regexp.MustCompile(`(?i)IconBIT|NT-(3506M|1501C|0704S|0909T|1009T|10[01]1T|1017T|3601P/3602P|3603P|3702S|3805C|3905T|3701S|0701S|0805C|0902S|370[23]M)|XDS[789]4K|Omnicast UHD|Movie Smart 4K|Movie IPTV Quad|TOUCAN (?:Smart 3D Quad|(?:NANO|Stick) 4K)|NetTAB_Space_3G`),
		regexp.MustCompile(`(?i)NT-10[01]1T`),
		regexp.MustCompile(`(?i)(?:iconBIT )?(Movie (?:Smart 4K|UNO|Play|IPTV Quad|Ultra HD 4K)|XDS[789]4K|XLR3090|Omnicast UHD|Stick|XDS1[01]00?|Movie [XZ])`),
		regexp.MustCompile(`(?i)IMAQ TETRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Impression[ _\-]?([^/;]+)|A502|I10\-LE|ImPad[ _]?(.*)|ImSmart[ _]?(.*))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A502)`),
		regexp.MustCompile(`(?i)ImSmart[ _]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)ImPad[ _]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(I10\-LE)`),
		regexp.MustCompile(`(?i)Impression[ _\-]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(?:IF(900[1237]|902[19]|903[15]|236a|195a)|M370i?|InFocus M808i?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M370i?)`),
		regexp.MustCompile(`(?i)IF(236|195)a`),
		regexp.MustCompile(`(?i)InFocus M([0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)(?:INFONE (?:XE?)|GORILLA 9 PLUS|X_RAINBOW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INFONE (XE?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Inch (?:Regulus (?:7\.85|II)|Avior 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Regulus 7\.85)`),
		regexp.MustCompile(`(?i)(Regulus II|Avior 3)`),
		regexp.MustCompile(`(?i)(?:Inco[ _](Aurora II|Colors|Sphere|Plain[_ ]2S?|Plain2 S|Flex(?: 2S)?|S4|Bloom(?: 2)?)|(Horizon_S|Horizon \+|MATTER)|Bloom4|eco_s|Flex-3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bloom ?4`),
		regexp.MustCompile(`(?i)(?:Inco[ _])?(Plain[_ ]2S?|Colors|Horizon_S|Horizon \+|Aurora II|Flex(?: 2S)?|S4|Bloom(?: 2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Flex-(3)`),
		regexp.MustCompile(`(?i)Inco Sphere( 3)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INFINITON[_ -]|Earth 7\.0'3G|EARTH10`),
		regexp.MustCompile(`(?i)INFINITON[_ -]T5`),
		regexp.MustCompile(`(?i)Earth 7\.0'3G`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6739`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6871`),
		regexp.MustCompile(`(?i)Infinix[ _-]X260`),
		regexp.MustCompile(`(?i)Infinix[ _-]X502`),
		regexp.MustCompile(`(?i)Infinix[ _-]X570`),
		regexp.MustCompile(`(?i)Infinix[ _-]X350`),
		regexp.MustCompile(`(?i)Infinix[ _-]X351`),
		regexp.MustCompile(`(?i)Infinix[ _-]X352`),
		regexp.MustCompile(`(?i)Infinix[ _-]X403`),
		regexp.MustCompile(`(?i)Infinix[ _-]X503`),
		regexp.MustCompile(`(?i)Infinix[ _-]X511`),
		regexp.MustCompile(`(?i)Infinix[ _-]X400`),
		regexp.MustCompile(`(?i)Infinix[ _-]X401`),
		regexp.MustCompile(`(?i)Infinix[ _-]X450`),
		regexp.MustCompile(`(?i)Infinix[ _-]X451`),
		regexp.MustCompile(`(?i)Infinix[ _-]X454`),
		regexp.MustCompile(`(?i)Infinix[ _-]X500`),
		regexp.MustCompile(`(?i)Infinix[ _-]X501`),
		regexp.MustCompile(`(?i)Infinix[ _-]X506`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6731B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6731`),
		regexp.MustCompile(`(?i)Infinix[ _-]X509`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6821`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X552|Zero 3)`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X(?:574|602)|Zero 4 Plus)`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X555|Zero 4)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X603`),
		regexp.MustCompile(`(?i)Infinix[ _-]X603B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X620B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X620`),
		regexp.MustCompile(`(?i)Infinix[ _-]X687B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X687`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6815B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6811B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6815`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6811`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6810`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6820`),
		regexp.MustCompile(`(?i)Infinix[ _-]X507`),
		regexp.MustCompile(`(?i)Infinix[ _-]X510`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X55[34]|HOT 3 LTE)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X669`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X6831|X6833B)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6835B?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6832`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6528`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6836`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6837`),
		regexp.MustCompile(`(?i)Infinix[ _-]X622`),
		regexp.MustCompile(`(?i)Infinix[ _-]X521`),
		regexp.MustCompile(`(?i)Infinix[ _-]X522`),
		regexp.MustCompile(`(?i)Infinix[ _-]X557`),
		regexp.MustCompile(`(?i)Infinix[ _-]X556`),
		regexp.MustCompile(`(?i)Infinix[ _-]X559[cF]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X559`),
		regexp.MustCompile(`(?i)Infinix[ _-]X606[BC]?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X623`),
		regexp.MustCompile(`(?i)Infinix[ _-]X608`),
		regexp.MustCompile(`(?i)Infinix[ _-]X624`),
		regexp.MustCompile(`(?i)Infinix[ _-]X625`),
		regexp.MustCompile(`(?i)Infinix[ _-]X650`),
		regexp.MustCompile(`(?i)Infinix[ _-]X655F`),
		regexp.MustCompile(`(?i)Infinix[ _-]X655`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680[BCEF]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680`),
		regexp.MustCompile(`(?i)Infinix[ _-]X688`),
		regexp.MustCompile(`(?i)Infinix[ _-]X682[BC]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X689C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X689F`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X659|PR652|X658)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X573B?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6812`),
		regexp.MustCompile(`(?i)Infinix[ _-]X675`),
		regexp.MustCompile(`(?i)Infinix[ _-]X662`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6816D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6816C?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X668C?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X665[EC]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6826`),
		regexp.MustCompile(`(?i)Infinix[ _-]X666`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6825`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6827`),
		regexp.MustCompile(`(?i)Infinix[ _-]X665`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6817`),
		regexp.MustCompile(`(?i)Infinix[ _-]X612`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5010`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5515[FI]?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X609`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5516`),
		regexp.MustCompile(`(?i)Infinix[ _-]X627`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5514D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X653`),
		regexp.MustCompile(`(?i)Infinix[ _-]X657`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X6823C?|X6511G)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6511`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6512`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6517`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6515`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6516`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6525B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6525`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6526`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X626`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652`),
		regexp.MustCompile(`(?i)Infinix[ _-]X660`),
		regexp.MustCompile(`(?i)Infinix[ _-]X551`),
		regexp.MustCompile(`(?i)Infinix[ _-]X600`),
		regexp.MustCompile(`(?i)Infinix[ _-]X601`),
		regexp.MustCompile(`(?i)Infinix[ _-]X572`),
		regexp.MustCompile(`(?i)Infinix[ _-]X571`),
		regexp.MustCompile(`(?i)Infinix[ _-]X604`),
		regexp.MustCompile(`(?i)Infinix[ _-]X605`),
		regexp.MustCompile(`(?i)Infinix[ _-]X610`),
		regexp.MustCompile(`(?i)Infinix[ _-]X690`),
		regexp.MustCompile(`(?i)Infinix[ _-]X656`),
		regexp.MustCompile(`(?i)Infinix[ _-]X692`),
		regexp.MustCompile(`(?i)Infinix[ _-]X683`),
		regexp.MustCompile(`(?i)Infinix[ _-]X695`),
		regexp.MustCompile(`(?i)Infinix[ _-]X693`),
		regexp.MustCompile(`(?i)Infinix[ _-]X663C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X677`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6819`),
		regexp.MustCompile(`(?i)Infinix[ _-]X676B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X671B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X672`),
		regexp.MustCompile(`(?i)Infinix[ _-]X663D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X671B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X663`),
		regexp.MustCompile(`(?i)Infinix[ _-]X697`),
		regexp.MustCompile(`(?i)Infinix[ _-]X698`),
		regexp.MustCompile(`(?i)Infinix[ _-]X670`),
		regexp.MustCompile(`(?i)Infinix[ _-]X676C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6716`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6710`),
		regexp.MustCompile(`(?i)Infinix[ _-]X678B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6711`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6850B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6850`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6851B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6851`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6852`),
		regexp.MustCompile(`(?i)Infinix[ _-]X685`),
		regexp.MustCompile(`(?i)Infinix HOT ([a-z]?[1-6])( (?:Lite|Plus|Pro))?`),
		regexp.MustCompile(`(?i)Infinix[ _-](X[78]00)`),
		regexp.MustCompile(`(?i)Infinix[ _-](X\d+)`),
		regexp.MustCompile(`(?i)Infinix[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Infinix[ _-]([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)(TVB-906X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MAG425A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Inhon[_ ](V6)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X96mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)intki[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)InnJoo|(?:Halo Plus|Halo2 LTE|Halo X|Halo 5 3G|Halo[ _]4(?:[ _]mini[ _]LTE)?|VISION LTE|Halo2 3G|Fire 4 ?(?:Pro|Plus)?|Fire_Plus_LTE|Fire3 mini|Fire2 (?:Air|Pro|Plus) LTE|Fire2 LTE|Superb(?:_PLus)?|VOOM TAB 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]X3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo[ _]X[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo[ _]4[ _]mini[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo ?2 LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo ?([25]) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]Pro2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Innjoo ONE 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Innjoo[ _]2[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]([2-4])`),
		regexp.MustCompile(`(?i)Innos_?(D6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INNO([a-z0-9]+)`),
		regexp.MustCompile(`(?i)INOI|(?:A126|A1[68]1|A170_Plus|A161_Plus|(?:Android 12(?:[\d.]*);(?: [\w-]+;)? (?:A151))|(?:Android 11(?:[\d.]*);(?: [\w-]+;)? (?:A17[01]|A180))|A181_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)inoiPad mini 2\+32 Wi-Fi\+3G`),
		regexp.MustCompile(`(?i)inoiPad 2\+32 Wi-Fi\+3G`),
		regexp.MustCompile(`(?i)inoiPad 128\+4GB Wi-Fi\+4G`),
		regexp.MustCompile(`(?i)inoiPad mini 1\+16 Wi-Fi`),
		regexp.MustCompile(`(?i)INOI (2|5) Lite (2019|2021)`),
		regexp.MustCompile(`(?i)INOI[_ ]([123])[_ ]LITE`),
		regexp.MustCompile(`(?i)(A126|A17[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A(1[58]1)`),
		regexp.MustCompile(`(?i)(?: A161|A161_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INOI ([257]) (?:\d\+\d+ )?(2019|202[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INOI[_ ]([^);/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)NS-(P11A8100|P10A8100|P10A6100|P16AT08|P16AT10|P16AT785HD|P08A7100|P10A7100)(?:[);/ ]|$)|AFTEAMR311|AFTJMST12`),
		regexp.MustCompile(`(?i)NS-(P10A6100|P16AT10)`),
		regexp.MustCompile(`(?i)NS-(P10A8100|P10A7100)`),
		regexp.MustCompile(`(?i)Intex|(Aqua|Cloud[ _][XY][0-9]{1}|Cloud (?:Fame|Glory) 4G)|(?:CLOUD TREAD|IM0318ND|IV0318ND)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _]LIONS[ _]T1[ _]LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _]LIONS[ _]([NT]1|[23]|E3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA (A4) PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _](A4|S[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Intex[ _]IM0118ND`),
		regexp.MustCompile(`(?i)AQUA CRYSTAL\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA FulVU e5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA JEWEL 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aqua[_ ]Life[_ ]?III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]4\.0[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]4G[_ ]MINI`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]LIONS[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]PRIME[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]ZENITH`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]POWER[_ ]IV`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]YOUNG[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]TREND[_ ]LITE`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]AMAZE\+`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]Supreme\+`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]STYLE (\d)`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]Strong 5\.1\+`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]CRYSTAL`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?ELYT[_ ]DUAL[_ ]PLUS`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?ELYT[_ ]DUAL`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?ELYT[_ ](E\d+)`),
		regexp.MustCompile(`(?i)Intex[ _]IV0118ND`),
		regexp.MustCompile(`(?i)Intex[ _]IP0418ND`),
		regexp.MustCompile(`(?i)Intex[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)CLOUD TREAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cloud (?:Fame|Glory) 4G)`),
		regexp.MustCompile(`(?i)(Aqua|Cloud)[ _\.]([^/;\)]+)(?:[ _]Build|/|\))`),
		regexp.MustCompile(`(?i)Intex[ _]([a-z0-9_+\-]+)`),
		regexp.MustCompile(`(?i)(?:Diamond D[56]|Fighter|Eager|Royal R[1-8]|Android 9(?:[\d.]*);(?: [\w-]+;)? (?:MAX[89]|MAX_2))(?: Build|[;)])`),
		regexp.MustCompile(`(?i)MAX[_ ]?([89]|2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Fighter|Eager|Royal R[1-8]|Diamond D[56])`),
		regexp.MustCompile(`(?i)INVIN[ _-]|(?:IPC002|KM5PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INVIN[ _-](X[24]|KM[678])`),
		regexp.MustCompile(`(?i)(IPC002)`),
		regexp.MustCompile(`(?i)IRBIS|TZ(1(?:0[04]|42|5[01]|84|65|7[01345-89]|8[356]|9[12578])|200|49|55|72|22|7(?:0[127]|1[1-46789]|2[021567]|3[025-8]|4[257]|5[23457]|6[12]|72|7[137]|8[1]|9[147])|8(?:[34]1|32|5[3-8]|6[2-5]|7[12478]|8[1-5]|9[0127])|96[0-9])|TZ199|TZ85|TZ13|TZ(?:one|art|HIT|81L)|(SP(?:0[56]|2[01]|4[1-36]|40[12]|45[345]|49[34]|50|51[0147]|531|54[12]|55[0124]|571)|\d{2}[FYHU]1YDX000F?BS2|65U001BS2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TZ(?:[0-9]+)|TZ(?:one|art|HIT|81L))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SP[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2}[FYHU]1YDX000F?BS2|65U001BS2)`),
		regexp.MustCompile(`(?i)(?:Vox[_ ](?:[45]S|Alpha|POP|STEEL Plus|Energy|FORTIS|VERO)|IS2_?Plus|IS[36]Plus|IS2S|Next_P(?:_PRO)?|NEXT U|NEXT P\+|IRS002-16|X1 mini|Iris_Pad_G8020|G7060|G7100|G8060)(?:[);/ ]|$)|android 9(?:[\d.]*);(?: [\w-]+;)? (?:N30)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Vox[_ ]([45])S`),
		regexp.MustCompile(`(?i)N30(?: Build|[;)])`),
		regexp.MustCompile(`(?i)VOX[_ ]FORTIS`),
		regexp.MustCompile(`(?i)VOX[_ ]VERO`),
		regexp.MustCompile(`(?i)NEXT[_ ]([PU]\+?)`),
		regexp.MustCompile(`(?i)IS([236])_?Plus`),
		regexp.MustCompile(`(?i)(?:Iris_Pad_)?(G7060|G7100|G80[26]0)`),
		regexp.MustCompile(`(?i)TPC-[A-Z0-9]+|TPCY-TX[TE][^);/ ]+`),
		regexp.MustCompile(`(?i)TPC-PA10\.1M`),
		regexp.MustCompile(`(?i)TPC-(XE10D-H)`),
		regexp.MustCompile(`(?i)TPC-([A-Z0-9]+)`),
		regexp.MustCompile(`(?i)(TPCY-TX[TE][^);/ ]+)`),
		regexp.MustCompile(`(?i)JFone[ _](JS501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JKL[_ ](A28)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(JP5s?) Inmate Media Device(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(JR-J71)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JVC[;, ]|JVC-CVTE|AV-10NT310|(?:smarttv_)?(?:AFTSO001|AFTJULI1|AFTWMST22)`),
		regexp.MustCompile(`(?i)JVC[;,](32D1290)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTSO001`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTJULI1`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTWMST22`),
		regexp.MustCompile(`(?i)JVC, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)JVC-CVTE;SmartTV`),
		regexp.MustCompile(`(?i)(AV-10NT310)`),
		regexp.MustCompile(`(?i)Remix (?:Pro|Mini)`),
		regexp.MustCompile(`(?i)(?:JK(?:960|[71]03) 3G|JK702|JK101|JK[17]00 v2\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JK(960|[71]03) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JK(702|[17]00 v2\.0|101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jesy_(J7)|J9S_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jesy_(J7)`),
		regexp.MustCompile(`(?i)JK-?(760)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JIAYU[ _-]|(?:JY-G4[\\_]G5|(?:JY-[a-z0-9]+)|JY_G4C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JIAYU G4_G5|JY-G4[\\_]G5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JIAYU[ _-](G4[S]?|G2F|G3[S]?|S[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JY[-_]([a-z0-9]+|G4C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JIN[ _]TU[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Jinga[-_ ]|(?:(?:Fresh|Optim)4G|Pass(?:Plus|3G)|PicassoNote|Hotz[_ ]M1|WinPRO|Touch4G|Start(?:3G|LTE)?|IGO[ _]L[41]|Basco[ _](?:L3|L[45]00|L45[01]|XS1|S2|M1)|M500-1|Hit4G|A450|Neon|IGO_L3|JoyPRO|Fresh|GoalPlus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Optim4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hotz[_ ]M1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hit4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PassPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pass3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GoalPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Win|Joy)PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Touch4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Start3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StartLTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Start(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PicassoNote(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Iron(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IGO_L3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Basco neo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M500-1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Jinga[ _])?Basco[ _](L[13]|L[45]00|XS1|S2|L45[01]|M1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Trezor S1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JINGA_IGO_L2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JINGA[_ ])?IGO[_ ]([ML]1|L4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JINGA[_ ])?(Neon|A450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS1542QWN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS1542QWN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Revolution TnT3|Xtreme_(?:[37]|3x)|Xtreme (?:XT84|XT309|XT309 Plus|1)|Opus S3|JSPQ65|Prime (?:P3[09]0|P4442?|P30))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Revolution (TnT3)`),
		regexp.MustCompile(`(?i)Xtreme (XT84)`),
		regexp.MustCompile(`(?i)Prime (P4442?|P3[09]0|P30)`),
		regexp.MustCompile(`(?i)Xtreme (XT309) Plus`),
		regexp.MustCompile(`(?i)Xtreme (XT309)`),
		regexp.MustCompile(`(?i)Xtreme[ _]([137]|3x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy (?:HH|JD)`),
		regexp.MustCompile(`(?i)Joy[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:TB-JS101A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EZpad ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER(s)?|COSMO[_ ](L707|L808)|BLASTER|FREEDOM[ _](C10[05]|M303|X1)|Freedom`),
		regexp.MustCompile(`(?i)COSMO[_ ](L707|L808)`),
		regexp.MustCompile(`(?i)FREEDOM[ _](C10[05]|M303|X1)`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER2s`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER2`),
		regexp.MustCompile(`(?i)K-?Touch[ _][a-z0-9]+|(?:Pace 2 Lite|KT202011(?:99|88)|LDXA-2[01]22|LDOX-2130|LDOX-212[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K-?Touch[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)K-?Touch[ _]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KATV-01) PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kddi-([a-z0-9]+)|(?:INFOBAR A01|HTX21|HTL21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kddi-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)INFOBAR (A01)`),
		regexp.MustCompile(`(?i)HTX21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Android 13(?:[\d.]*);(?: [\w-]+;)? (?:E1[1278]|E28|E38|H38|H21|H19|H11)|Armor_C1w|Armor P1s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 13(?:[\d.]*);(?: [\w-]+;)? (E1[1278]|E28|E38|H38|H21|H19|H11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KINGZONE_|K1[_ ]turbo`),
		regexp.MustCompile(`(?i)KINGZONE_(N5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K1[_ ]turbo`),
		regexp.MustCompile(`(?i)knmobile[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)J?KOPO[ _-]`),
		regexp.MustCompile(`(?i)J?KOPO[ _-]?([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)J?KOPO[ _-]?([^/;)]+)`),
		regexp.MustCompile(`(?i)KREZ[_ ]`),
		regexp.MustCompile(`(?i)KREZ[_ ](SL502)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KREZ[_ ](TM100[12]S8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KRIP_|K(?:4[bm]|5[bdm]|6b|55h?|57|65|700A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KRIP_)?K(4[bm]?|5[bdm]|6b|55h?|57|65|700A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NET1100|NET_(?:LITE|TITAN|VOLT|MAX|MATRIX|[KR]7)|android 8([\d.]*);(?: [\w-]+;)? NETWORK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NET_(LITE|TITAN|VOLT)`),
		regexp.MustCompile(`(?i)NET_([KR]7)`),
		regexp.MustCompile(`(?i)(KM-[a-z0-9]+|EV-[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KZG[_ ](Scope)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KAAN[ _](N[12]|A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KaiCloud[ ]?(7[48]4|942)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KALLEY|(?:ELEMENT (?:4 Plus|5|MAX|PLAY|Q)|ELEMENT_PRO_2|K-BOOK(?:8MG|73G)|SILVER_MAX(?:_Pro_2)?|Silver Max (?:Lite|Pro)|Black[ _][GXZ]|Black_G_2|BLACK_PRO|ATV R[12]|GOLD_PRO|KBOOK7M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Black[ _]([GXZ])`),
		regexp.MustCompile(`(?i)Element 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Silver[_ ]Max[_ ]Pro[_ ]2`),
		regexp.MustCompile(`(?i)Silver Max (Lite|Pro)`),
		regexp.MustCompile(`(?i)K-?BOOK(8MG|73G|7M)`),
		regexp.MustCompile(`(?i)ATV (R[12])`),
		regexp.MustCompile(`(?i)KALLEY,(43D1800|55D1240)`),
		regexp.MustCompile(`(?i)KJ[-_](OB0[23]|YU_?BI|SMART4K|GOCHI|ALFARK|AC0[25])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KJ[-_]OB03`),
		regexp.MustCompile(`(?i)KJ[-_]OB02`),
		regexp.MustCompile(`(?i)KJ[-_]YU_?BI`),
		regexp.MustCompile(`(?i)KJ[-_]ALFARK`),
		regexp.MustCompile(`(?i)KJ-(AC0[25])`),
		regexp.MustCompile(`(?i)(SmartVision3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Browser-)?Karbonn|K9 Kavach 4G|K9[_ ](?:Viraat|Smart)[_ ]Plus|K9 Music 4G|K9 Smart|K9 VIRAAT 4G|Aura (?:Sleek Plus|Sleek 4G|Power 4G Plus|Note Play|Note 2|Storm|Champ)|Titanium[ _](?:3D-Plex|Octane Plus|Vista 4G|Jumbo|S360|S1[059]|S35|S20[13]|S22|S[15]|S200 HD|Frames S7|MOGHUL|S9)|MACHFIVE|MACHONE|Sparkle V|Alfa A114 Quad|Quattro[ _]L(?:45|5[025])[ _](?:HD|IPS|VR)|A41 Power|A(?:[19]|4[05])[ _]Indian|S2052GB|MACH SIX VR|K-Lite F3|Titanium Vista`),
		regexp.MustCompile(`(?i)K9[_ ]Smart[_ ]Plus`),
		regexp.MustCompile(`(?i)K9 Smart(?: 1GB)?`),
		regexp.MustCompile(`(?i)A([19]|4[05])[ _]Indian`),
		regexp.MustCompile(`(?i)K9[_ ]Viraat[_ ]Plus`),
		regexp.MustCompile(`(?i)(?:karbonn)?K9 Viraat 4G`),
		regexp.MustCompile(`(?i)Titanium[ _]S([29])[ _]?Plus`),
		regexp.MustCompile(`(?i)Titanium[_ ]S(99|360|1[059]|109|35|200 HD|20[13]|22|[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Titanium Vista(?: 4G)?`),
		regexp.MustCompile(`(?i)Titanium[ _]MOGHUL`),
		regexp.MustCompile(`(?i)Titanium[ _]3D-Plex`),
		regexp.MustCompile(`(?i)Quattro[ _]L(5[05])[ _]HD`),
		regexp.MustCompile(`(?i)Quattro[ _]L(45)[ _]IPS`),
		regexp.MustCompile(`(?i)Quattro[ _]L(52)[ _]VR`),
		regexp.MustCompile(`(?i)Karbonn ([a-z0-9]+) WAP-Browser`),
		regexp.MustCompile(`(?i)WAP Browser-Karbonn ([a-z0-9]+)/`),
		regexp.MustCompile(`(?i)Karbonn_([^;/)]+)`),
		regexp.MustCompile(`(?i)Karbonn ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Karbonn ([^;/]+)/`),
		regexp.MustCompile(`(?i)Kata[ _-]`),
		regexp.MustCompile(`(?i)Kata[ _-](C3|L1|M3s|M4s?|V[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata[ _-]i5-\w`),
		regexp.MustCompile(`(?i)Kata-(T5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata-Tmini4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata Box 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kazam|(?:Trooper_X[0-9][0-9]|Tornado 348|TROOPER 4\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TROOPER 4\.0`),
		regexp.MustCompile(`(?i)Trooper_X([0-9])([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kazam[; _]([^;/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Alumini_?3_?Plus|Alumini ?[23]|KEMPLER_(?:P[13]|TV|[X9]|8_PLUS)|ZKEMPLER_PRO|P1[ _]Amateur`),
		regexp.MustCompile(`(?i)Alumini ?2`),
		regexp.MustCompile(`(?i)Alumini_?3_?Plus`),
		regexp.MustCompile(`(?i)KEMPLER_P([13])`),
		regexp.MustCompile(`(?i)P1[ _]Amateur`),
		regexp.MustCompile(`(?i) (O[76]1|E61Pro|O31 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(O[76]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KENEKSI|(?:Hemera|Teta Dual|Helios)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hemera|Teta Dual|Helios)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]liberty`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]FLASH`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]SUN`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]ZETA`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]SIGMA`),
		regexp.MustCompile(`(?i)KENEKSI[ _-](Moon|Libra_Dual|Glass|Amber|Chance|Amulet|Choice|Crystal|Dream|Delta[_ ]Dual|Norma 2|Norma|Sky|Fire 2|Fire|Flame|Flora|Rock|Solo|Soul|Step|Smart|Star|Storm|Wind)`),
		regexp.MustCompile(`(?i)Three[_ ]Proofings[_ ]W([5-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (VIM2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kiano|Elegance_[45]_[015](?:_PRO)?|ELEGANCE 5\.0 Lite|Elegance_4\.5|Elegance 6|CORE 10\.1 DUAL 3G|Intelect ?(7|8|10)|Slim ?Tab ?\d+(?:[_ ]3GR?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slim ?Tab ?(\d+)(?:[_ ]3GR?)?`),
		regexp.MustCompile(`(?i)CORE 10\.1 DUAL 3G`),
		regexp.MustCompile(`(?i)Elegance_(5)_([51])_Pro`),
		regexp.MustCompile(`(?i)ELEGANCE 5\.0 Lite`),
		regexp.MustCompile(`(?i)Elegance_([45])[_.]([015])`),
		regexp.MustCompile(`(?i)(Kiano)?(Intelect|Elegance) ?(7|8|10)?`),
		regexp.MustCompile(`(?i)Kiano[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kingstar[-_ ]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Kingsun[ _-]`),
		regexp.MustCompile(`(?i)Kingsun[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kingsun[ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(KST103SD)`),
		regexp.MustCompile(`(?i)KIOWA[_ ]|(?:[AS]5|X4)_CRISTAL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X4|[AS]5)_CRISTAL`),
		regexp.MustCompile(`(?i)KIVI [24]K|(?:24H600G[RU]|24FR50WU|24HK30B|32HR55GU|32H700GU|32F700WU|4[39]UP50GU|40UR50G[RU]|40U600G[RU]|50U730GR|55U600(?:G[RU]|KD)|65UP50GU|55U[PC]50G[RU]|50U600G[RU]|50UX10S|55UR50G[RU]|40FK30G|40FR5[02]BR|43U(?:800B[RU]|600KD|K3[05]G|700GR)|50FK30G|50UK35G|32HR50GR|32[FH]700GR|55UC30G|55U730GR|32HK30G|40FK30G|32HR50GU|32FR50(?:WR|BU)|32FK3[02]G|32H600KD|40U600KD|32H600G[RU])(?:_-Ver0[0-9])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(55UC30G|40FK30G|43UK30G|32HR50G[RU]|32HK30G|32FK32G)_-Ver0([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2}(?:[HFU]|U[CPRXKX]|[BHF][RK])\d{2,3}(?:[GW][RU]|B[UR]|KD|[BGS]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KIVI ([24]K Android TV)`),
		regexp.MustCompile(`(?i)KLIPAD_|(?:KL-V905|KL(2108NBE|[46]889|489[08]|9878A?E?|3669|759[01]|500|638DK|60[15]|988)?(?:_EEA)?|7589AN|KL628_HL|KL628KO|KL4898[_ -]A50|V356B?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KLIPAD_)?(V355B?|KL600|KL-V905|V356B?|KL500|KL60[15])(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KL[46]889|7589AN|KL759[01]|KL9878A?E?|KL628KO|KL3669|KL489[08]|KL988|KL2108NBE|KL638DK)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KL4898[_ -]A50`),
		regexp.MustCompile(`(?i)Kocaso|(?:DX765 Pro|M(?:6200|729|7[357][026][hw]?|76[01236][bw]?|83[016]|8[567]0|1050s|106[012368]w?|1070|X736(?:-kit)?|X780))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DX765 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M6200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M729(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(7[357][026])[hw]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(76[01236])[bw]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX780(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(83[016])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(8[567]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1050S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(106[012368])W?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX736(?:-kit)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kocaso[ _\-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Kocaso[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)KODAK|(?:IM5|KD50|Ektra|Smartway[_ ](?:[FT]1|[LT]2)|D55L|D61L|D6[05]LX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KD50|D55L|D6[05]LX|D61L)`),
		regexp.MustCompile(`(?i)Ektra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KODAK[_ ])?SMARTWAY[_ ]L1 PRO`),
		regexp.MustCompile(`(?i)(?:KODAK[_ ])?SMARTWAY[_ ]([FLMTX]1|[LMTX]2|T3)`),
		regexp.MustCompile(`(?i)Tablet (7|10)`),
		regexp.MustCompile(`(?i)Kogan|(?:Agora (?:8 Plus|XI|Go|Lite|4G Pro))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kogan ?(SmarterTV(?: 2K)?|TV|TVAP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Agora ([68]) ?Plus`),
		regexp.MustCompile(`(?i)Kogan[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Kogan[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Komu[_ -]`),
		regexp.MustCompile(`(?i)Komu[_ -]([^;/).]+)(?: Build|[;).])`),
		regexp.MustCompile(`(?i)Komu[_ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)KONKA[_ ]([a-z0-9]+)|(?: R[EU]1|KC516(?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)W(9[67]0)`),
		regexp.MustCompile(`(?i)( R[EU]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KONKA[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)KONROW[_ ]|(?:LINK55|KTAB_1003|BIGCOOL|SOFT5P?|COOLFIVE|COOL-K|Just5|Link5|EASY ?(?:5|62|K55)|EASY_5_EEA|EASY55|CITY55?|CITY4|Cool55|SKY_?55_EEA|Android 11(?:[\d.]*);(?: [\w-]+;)? SWEET5|SWEET 55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BIGCOOL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LINK55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COOL-K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cool55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOFT5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOFT5P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COOLFIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Just5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Link5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY ?(55?|62|K55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY_5_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CITY(55?|4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY_?55_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET ?(55?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KONROW[_ ](701X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KTAB_1003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Koobee|(?:F2_Plus|SL004T|Android 10(?:[\d.]*);(?: [\w-]+;)? (?:K60))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F2[_ ]Plus`),
		regexp.MustCompile(`(?i)(K60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Koobee[ _\-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Koobee[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(K1 Trio)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kooper-mobile-W502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KORIDY[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(KL1071Z|KL1084)`),
		regexp.MustCompile(`(?i)(?:Kraft[_ -])?KTV-(\w+)`),
		regexp.MustCompile(`(?i)Kruger[ _&]Matz|KrugerMatz[ _]|K&M|EAGLE_(?:807|961|107[46]|1068)|FLOW ?5PLUS|FLOW 10|FLOW 4 PLUS|Flow 9|FLOW_5|FLOW7|FLOW6(?:S|Lite)?|DRIVE9|DRIVE 8|DRIVE[_ ]6S?|Drive 10|MOVE8mini|MOVE9| MOVE 10|MOVE_|LIVE_6plus|LIVE 5 PLUS|Live [89]|LIVE4_KM043[89]|LIVE 7S?|Flow 7S|Eagle 806|KM(?:106[679]|107[23]|1065G|0701(?:_1)?|0702|080[45](?:_1)?|1070)|Live 10S`),
		regexp.MustCompile(`(?i)MOVE[_ ]([78]|6S?|10)`),
		regexp.MustCompile(`(?i)DRIVE[ _]?([45689][S]?|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW ?([54]) ?PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW6Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW[ _]?([4-7][S]?|9|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE4_(KM043[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KrugerMatz_LIVE4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)_LIVE5_(KM0450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE 5 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE_6plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE ([79]|10)S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Live ([789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOVE9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(106[679]|1072)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(1073)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eagle 806(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eagle_807(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eagle_(107[46])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EAGLE_(961|1068)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(1070)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(1065G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(701)(?:_1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(80[45])(?:_1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(702)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K&M,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)KULIAO (K10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ambition|Beyond)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai[ _\-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Kurio|C15100m`),
		regexp.MustCompile(`(?i)C15100m(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kurio[_ ]?(10S|7S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kurio[_ ]?Phone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kyocera|KWC-|QC-[0-9]{4}|(?:QC6035|NP501KC|302KC|503KC|602KC|705KC|901KC|C51[27]0|C5155|C5215|C67[35]0|C6522N?|C6530N|C6740N?|C6743|E6[89]10|KYL2[13]|KYV3[1-9]|KYT3[123]|KYF3[1235789]|KYF4[012]|KYX31|KYG0[13]|KYY2[1-4]|S2151|KC-S701|S[468]-KC|S9-KC|S10-KC|KYV40U?|KYY31|KYV4[1-8]|KYV4[47]|KC-S301AE|KC-S302|X3-KC|E6560[CT]|E6782[L]?|E6790(?:TM)?|SZJ-JS20[12]|KCP01K|[47]04KC|A[012]01KC|A205KC|WX10K|URBANO PROGRESSO|E7110|E7200|E6921|KY-(?:42C|51B)|C6930|A101BM)(?:[-_][uj]2?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A101BM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S([4689]|10)-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5155(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)503KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)404KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)302KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KC-S302(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP501KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WX10K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A101KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KY-42C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYX31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5170(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5215(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C6522N?`),
		regexp.MustCompile(`(?i)C6740(N)?`),
		regexp.MustCompile(`(?i)E6560[CT]`),
		regexp.MustCompile(`(?i)(?:KYOCERA-)?E68[12]0`),
		regexp.MustCompile(`(?i)(?:KYOCERA-)?(?:E69[12]0|E6921)`),
		regexp.MustCompile(`(?i)(?:KYOCERA-)?(?:E7200)`),
		regexp.MustCompile(`(?i)KYL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYL23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY24(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYG03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KYF32|KYF41)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF35(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF3[179](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KYV48|KYF42)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KYF38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV35(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV46(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV32?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV47(?:-[uj])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV43(?:_j)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)705KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV37(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV42(?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV44(?:_u2?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT32(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV40U?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV34(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV(?:45|38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Kyocera-)?E6790(?:TM)?`),
		regexp.MustCompile(`(?i)X3-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6782(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6782L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KCP01K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KC-S301AE|KY-51B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SZJ-JS20[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A001KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A201KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A205KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URBANO PROGRESSO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kyocera-KZ-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Kyocera(?:[\-/])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KWC|QC)-?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KA-E410W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ureki_U1|Victor V1|Lamia L01|DART KZ07|REX RX|Eva_E01|Majesty (?:M5|4G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Majesty (M5|4G)`),
		regexp.MustCompile(`(?i)(?:Sapphire 8|Sapphire[76]|Mega plus[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mega plus([23])`),
		regexp.MustCompile(`(?i)Sapphire ?([678])`),
		regexp.MustCompile(`(?i)LAIQ|(?:Monaco)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LAIQ_)?(Glam|New York|Dubai|Monaco)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LCT_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:LEM1[456]|LEM12Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LEM12)Pro`),
		regexp.MustCompile(`(?i)(LEM1[456])`),
		regexp.MustCompile(`(?i)LG|Web0S; Linux/SmartTV|portalmmm/2\.0 (?:KE|KG|KP|L3)|(?:VX[0-9]+|L-0[12]D|L-07C|P713|(LM-[A-Z][0-9]{3}[A-Z]{0,3}(?:\(FGN?\)|\(G\)|\.FN|\.F(?:GN?)?)?)|LM-(X625N1|G820QM[0127])|G Watch|lucye)(?:[);/ ]|$)|NetCast|RS98[78]|RS500|VS(?:50[01]|835|876|880|98[05-8]|99[056]|(410|415|425|500|880)PP)|VS820|VS870 4G|Nexsus 5|10A30Q|LML(41[34]D|211B|713D|212V)L|VK810 4G|VK815|X5-LG|L-05[DE]|L-03K|L-01[LJK]|L-52A|L-[45]1A|901LG|A001LG|80[12]LG|402LG|LGT32|L-02K|L-01F|LM-V40|DM-01K|DM-02H|LMX130IM|LMG820UM1|VS810PP|VS425|VM670|VS930 4G|US215`),
		regexp.MustCompile(`(?i)DM-(01K|02H)`),
		regexp.MustCompile(`(?i)LG-?(?:D32[0159]|AS323|LS620)`),
		regexp.MustCompile(`(?i)LG-?(D315|L31L|F370)`),
		regexp.MustCompile(`(?i)LG-D4(?:[01]5|[01]0)`),
		regexp.MustCompile(`(?i)LG-D37[35]`),
		regexp.MustCompile(`(?i)LG-D12[05]`),
		regexp.MustCompile(`(?i)LG-?(?:X132|X130g)`),
		regexp.MustCompile(`(?i)LG-?(?:D157f|D150)`),
		regexp.MustCompile(`(?i)LG-D10[057]`),
		regexp.MustCompile(`(?i)LG-X14[057]`),
		regexp.MustCompile(`(?i)LG-X13[57]`),
		regexp.MustCompile(`(?i)LG-D28[05]`),
		regexp.MustCompile(`(?i)LG-?LS675`),
		regexp.MustCompile(`(?i)LG-?LS665`),
		regexp.MustCompile(`(?i)VS980|L-01F|LG-(?:F320[LKS]|D80[012356]|LS980)`),
		regexp.MustCompile(`(?i)LG-D6(?:1[08]|2[05])`),
		regexp.MustCompile(`(?i)LG-(?:D85[012568]|AS990|F400[LKS])|LG-?LS990|(?:LG-)?(?:VS985|LGUS990|LGL24|LGD85[05]|LGV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?LS885`),
		regexp.MustCompile(`(?i)LG-D722`),
		regexp.MustCompile(`(?i)LG-(?:D72[23568]|F470[LKS]|D722J)`),
		regexp.MustCompile(`(?i)LG-D693n?|LG-D690n`),
		regexp.MustCompile(`(?i)LG-?H81[012589]|LG-?[LU]S991|LGV32|LG-F500[LSK]|VS986`),
		regexp.MustCompile(`(?i)LG-H525n?`),
		regexp.MustCompile(`(?i)LG-H22[012]`),
		regexp.MustCompile(`(?i)LG-(?:H540|H542|H630)`),
		regexp.MustCompile(`(?i)LG-H73[46]`),
		regexp.MustCompile(`(?i)LG-H8(?:20|3[01]|5[08]|6[08])|VS987|(?:LG-)?RS988|LG-F700[SKL]|LG-?(?:[LU]S992|AS992)`),
		regexp.MustCompile(`(?i)LG-H84[05]`),
		regexp.MustCompile(`(?i)VS988|LG-H87(?:[01](?:DS|[SI]|AR)?|[23])|LG-?US997|LGM-G600[SKL]|LG-[AL]S993|lucye`),
		regexp.MustCompile(`(?i)LG-?(?:L23|D95[015689]|LS995|D950G|F340[LKS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:H95[059]|F510[KLS]|LS996|AS995)`),
		regexp.MustCompile(`(?i)LG-D68[0-6]`),
		regexp.MustCompile(`(?i)LM-G820([NV]|QM[0127]|UMB)?`),
		regexp.MustCompile(`(?i)LG-F310LR?`),
		regexp.MustCompile(`(?i)901LG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-H410(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:D486|F480[LKS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?T480[KS]`),
		regexp.MustCompile(`(?i)LG-F610[KS]`),
		regexp.MustCompile(`(?i)VS501|LM-X120`),
		regexp.MustCompile(`(?i)LGMS395|LG-D393`),
		regexp.MustCompile(`(?i)LG-(?:F520[LKS]|H788)`),
		regexp.MustCompile(`(?i)(?:LG-)?H50[02]`),
		regexp.MustCompile(`(?i)LGL16(?:3BL|4VL)`),
		regexp.MustCompile(`(?i)LG-(?:X15[05]|X165g)`),
		regexp.MustCompile(`(?i)LG-D33[157]`),
		regexp.MustCompile(`(?i)LG-D29[05]`),
		regexp.MustCompile(`(?i)(?:LG-)?H343`),
		regexp.MustCompile(`(?i)(?:LG-)?H650`),
		regexp.MustCompile(`(?i)(?:LG-)?M154`),
		regexp.MustCompile(`(?i)LGM-K120[LSK]`),
		regexp.MustCompile(`(?i)LG-K120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGM-X320[SKL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-F620[KLS]`),
		regexp.MustCompile(`(?i)LG-?L18VC`),
		regexp.MustCompile(`(?i)(?:LG-)?P500H`),
		regexp.MustCompile(`(?i)(?:LG-?)?VS450PP`),
		regexp.MustCompile(`(?i)LG-(?:E97[567]|F180[KLS]|E987|LS970)|LGL01E`),
		regexp.MustCompile(`(?i)LG-?L39C`),
		regexp.MustCompile(`(?i)LG-(?:F240[KLS]|E98[69]|E98[015])`),
		regexp.MustCompile(`(?i)LG-E435f?`),
		regexp.MustCompile(`(?i)LG-E4(?:70f|40|65f)`),
		regexp.MustCompile(`(?i)LG-E4(?:67f|45)`),
		regexp.MustCompile(`(?i)LG-?(?:D180f|D175f|D170|D165)`),
		regexp.MustCompile(`(?i)LG-E4[56]0`),
		regexp.MustCompile(`(?i)LG-E61[02]`),
		regexp.MustCompile(`(?i)LG-(?:E4[17]5f|E410)`),
		regexp.MustCompile(`(?i)LG-(?:D605)`),
		regexp.MustCompile(`(?i)LG-?(?:P655H|MS659)`),
		regexp.MustCompile(`(?i)LGMS500|LG-D505`),
		regexp.MustCompile(`(?i)(L-05[DE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-L160L|LG-F160`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:P713|P71[0245]|P713TR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-P716(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?MS323`),
		regexp.MustCompile(`(?i)L-01D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-02D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:F800[SKL]?|H990|H910(?:PR)?|US996|V34|LS997)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q710(?:\(FGN\)|[\.]?FGN)`),
		regexp.MustCompile(`(?i)LG-?(?:D22[17]|D213)`),
		regexp.MustCompile(`(?i)LG-?(?:K520|F720[KLS])`),
		regexp.MustCompile(`(?i)LG-(?:K53[05])`),
		regexp.MustCompile(`(?i)LM-Q[67]10\.FG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(Q72[57][KLS]|Q610[\(.]FGN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q815[KSL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGM-X800[KL]|LG-H970`),
		regexp.MustCompile(`(?i)LM-Q925[LKS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(?:Q730N|Q620)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q520N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGV33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-03K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-01L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGLS775|LGL8(?:2V|1A)L`),
		regexp.MustCompile(`(?i)VS835(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:MS550|K55[07])`),
		regexp.MustCompile(`(?i)L-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:MS63[14]|H63[145]|F560K|LS770)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:LS777|L84VL|M430|L83BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?([TM]P450|M470F?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q710|LML713DL|LG-Q710[AP]L`),
		regexp.MustCompile(`(?i)(?:LM-Q720|LGL722DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-G710(N|VM)?|LG-G710`),
		regexp.MustCompile(`(?i)LG-H44[35]`),
		regexp.MustCompile(`(?i)LM-X410\.FG?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGL455DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LML41[34]DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?L6(?:2V|1A)L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?L5(?:2V|1A)L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?L355DL`),
		regexp.MustCompile(`(?i)LM-X210[KLS]`),
		regexp.MustCompile(`(?i)LG-(?:K580|F690[LS])`),
		regexp.MustCompile(`(?i)LG-?K600`),
		regexp.MustCompile(`(?i)LG-(?:SP320|M32[27]|US601)`),
		regexp.MustCompile(`(?i)LG-?(?:LS676|L56VL|L53BL|K200)`),
		regexp.MustCompile(`(?i)LG-?(?:K500|F650|S02)`),
		regexp.MustCompile(`(?i)LG-(?:M710|H700|US701)`),
		regexp.MustCompile(`(?i)LM-X(?:41[05]K|410S)`),
		regexp.MustCompile(`(?i)LM-X(415[LS]|410L)`),
		regexp.MustCompile(`(?i)LM-X410(?:\.FN|\(FG\))`),
		regexp.MustCompile(`(?i)LM-X(?:320|410[UP]M)|LGL322DL`),
		regexp.MustCompile(`(?i)LG-?LS740`),
		regexp.MustCompile(`(?i)LG-?LS751`),
		regexp.MustCompile(`(?i)(?:VS425|LG-?(?:K120GT|K121|M151|X230))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-K130(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:M160|L57BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-X430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:802LG|LM-X520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LM-X510[KLS]|X5-LG)`),
		regexp.MustCompile(`(?i)LGMS210|LG-M210`),
		regexp.MustCompile(`(?i)LM-X210[G]?`),
		regexp.MustCompile(`(?i)LM-X220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-X220N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-V40(?:5|9N|5EBW)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(?:V500N?|V450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:RS987|H90[01]|H96[0218]|VS990|F600[LKS]|K428)`),
		regexp.MustCompile(`(?i)LG-(?:X240|M200)`),
		regexp.MustCompile(`(?i)(?:LG-)?RS500`),
		regexp.MustCompile(`(?i)(?:LG-)?VS500`),
		regexp.MustCompile(`(?i)LM-X212\(G\)|(?:LG)?US215`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:VS995|F800K|US999|LS997|H91[058]|H990(?:DS|[NT])?)`),
		regexp.MustCompile(`(?i)(?:VS996|LG-(?:H933|H93[012]|H930RE|H932PR|[LU]S998|AS998)|LGM-V300[KLS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L-01K|LGV35|LG-H930DS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L-52A|LM-G900(?:[NV]|TM)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-V700N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A001LG|LM-V600V?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?VS410PP`),
		regexp.MustCompile(`(?i)LM-V350[N]?`),
		regexp.MustCompile(`(?i)(?:LG-)?VS415PP`),
		regexp.MustCompile(`(?i)(?:LG-)?VS425PP`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K100|LS450)`),
		regexp.MustCompile(`(?i)LG-AS110|LGUS110`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K|MS)33[02]|LG-X210`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K|MS)350`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K420(?:N)?|K425|F670[KLS]?|K430(?:DS|DSF|DSY)?|K410|MS428)`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:M250N?|M257PR)`),
		regexp.MustCompile(`(?i)(?:LG-)?M255`),
		regexp.MustCompile(`(?i)(?:LG-?)?[MT]P260`),
		regexp.MustCompile(`(?i)LM-K200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K330(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K420(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LM-K500|LGL555DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K526(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q510N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q310N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q630N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?M700(?:N|A|DSK|AN)?|LGM-X600[SLK]|LG-M703|LG-US700`),
		regexp.MustCompile(`(?i)LGV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-M257(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K220|LS755|F750K|US610)`),
		regexp.MustCompile(`(?i)(?:LG-?)?M320`),
		regexp.MustCompile(`(?i)(?:LG-)?K371`),
		regexp.MustCompile(`(?i)(?:LG-)?M150`),
		regexp.MustCompile(`(?i)(?:LG-)?F100[SL]`),
		regexp.MustCompile(`(?i)(?:LG-)?F200(?:[KLS]|LS)`),
		regexp.MustCompile(`(?i)(?:LG-)?VM670`),
		regexp.MustCompile(`(?i)(?:LG-)?P880`),
		regexp.MustCompile(`(?i)(?:LG-)?(H340n?|H32[04])`),
		regexp.MustCompile(`(?i)(?:LG-)?H34[25]|LGMS345`),
		regexp.MustCompile(`(?i)(?:LG-)?H4(?:40|2[02])`),
		regexp.MustCompile(`(?i)(?:LG)?C660`),
		regexp.MustCompile(`(?i)LML21(?:1B|2V)L`),
		regexp.MustCompile(`(?i)LG-?L4(?:4V|3A)L`),
		regexp.MustCompile(`(?i)VS880(PP)?|LG-(?:D690|D631)`),
		regexp.MustCompile(`(?i)LG-?(?:D838|F350[LKS])`),
		regexp.MustCompile(`(?i)LG-F300[LKS]`),
		regexp.MustCompile(`(?i)LG-D38[05]`),
		regexp.MustCompile(`(?i)LG-?(?:L16C|L15G)`),
		regexp.MustCompile(`(?i)LM-F100N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-T60[05]`),
		regexp.MustCompile(`(?i)LG-?(?:(?:UK|V)410|V411|V400Y7)`),
		regexp.MustCompile(`(?i)LG-?(?:LK430|V400)`),
		regexp.MustCompile(`(?i)LG-V49[56]`),
		regexp.MustCompile(`(?i)LG-V4[89]0`),
		regexp.MustCompile(`(?i)LGT01|LG-P490L`),
		regexp.MustCompile(`(?i)LG-V50(?:0|7L)`),
		regexp.MustCompile(`(?i)LGT02|LG-?V522`),
		regexp.MustCompile(`(?i)LG-V525(?:S[13])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?[VP]755`),
		regexp.MustCompile(`(?i)LG-V52[01]`),
		regexp.MustCompile(`(?i)LG-?UK750`),
		regexp.MustCompile(`(?i)\(LGE?, WEBOS[123], (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV.+\( ?;LGE? ?;(\d{2}\w+) ?;`),
		regexp.MustCompile(`(?i)LGE;? (?:HOTEL\-TV; )?([0-9]{2}[a-z0-9]{4,9}(?:\-[a-z]{2,3})?)`),
		regexp.MustCompile(`(?i)\(LGE?,? ([a-z0-9_ \-]+),? (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Media/([a-z]{2,3}[0-9]{3,4})`),
		regexp.MustCompile(`(?i)webOS\.TV`),
		regexp.MustCompile(`(?i)LGE_DLNA_SDK|NetCast`),
		regexp.MustCompile(`(?i)G Watch( R)?`),
		regexp.MustCompile(`(?i)(LM-[A-Z]{1}[0-9]{3}([A-Z]{1,3})?)`),
		regexp.MustCompile(`(?i)LGE(?: |-LG| LG-AX|-)([a-z0-9]+)`),
		regexp.MustCompile(`(?i)FBDV/LG-([a-z0-9]+);FBSV`),
		regexp.MustCompile(`(?i)LGE;([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)LG[ _\-](V90.*|Optimus[ _\-]Pad.*) Build`),
		regexp.MustCompile(`(?i)LGM-([^/;]*)( Build|[;)])`),
		regexp.MustCompile(`(?i)LG(?:/|-LG| |-)?([^/;]*) Build`),
		regexp.MustCompile(`(?i)LG(?:/|-LG| |-)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)LG; ([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 ((?:KE|KG|KP|L3)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(VX[0-9]+)`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV`),
		regexp.MustCompile(`(?i)(H11)-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(APPLLP Max|APPLLP2?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[ _-](?:P[89]|9701|9902|P10I|NOTE 10[SM]|NOTE 30|C1[45]00|C3[1235]00|C3750|S10[ _]Lite|S10|S9_NOTE|M[56]|M5_lite|C1300|6509|2003)|(?:C3[67]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[- ]NOTE ([13]0[SM]?)`),
		regexp.MustCompile(`(?i)LT[ _-]C3100`),
		regexp.MustCompile(`(?i)LT[ _-]C3200`),
		regexp.MustCompile(`(?i)LT[ _-]C3750`),
		regexp.MustCompile(`(?i)LT[ _-]C1400`),
		regexp.MustCompile(`(?i)LT[ _-]C3500`),
		regexp.MustCompile(`(?i)(?:LT[ _-])?C3600`),
		regexp.MustCompile(`(?i)(?:LT[ _-])?C3700`),
		regexp.MustCompile(`(?i)LT[ _-](C3300|C1500)`),
		regexp.MustCompile(`(?i)LT[ _]S10[ _]Lite`),
		regexp.MustCompile(`(?i)LT[ _]S10`),
		regexp.MustCompile(`(?i)LT[ _]C1300`),
		regexp.MustCompile(`(?i)LT[ _]P10I`),
		regexp.MustCompile(`(?i)LT[ _]9701`),
		regexp.MustCompile(`(?i)LT[ _]6509`),
		regexp.MustCompile(`(?i)LT[ _]9902`),
		regexp.MustCompile(`(?i)LT[ _]2003`),
		regexp.MustCompile(`(?i)LT[ _]P([89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[ _]M([56])[_ ]lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[ _]M([56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LW788)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LYF[ _])?LS-[456][0-9]{3}|LYF/[^/]+/`),
		regexp.MustCompile(`(?i)(LYF[ _])?LS-4006`),
		regexp.MustCompile(`(?i)LS-450[58]`),
		regexp.MustCompile(`(?i)LYF/([^/]+)/`),
		regexp.MustCompile(`(?i)Land[ ]?Rover[d]?[ _-](?:X1[0-9]|Explore|T878|L15\+|V18|V[168]|X)(?:[);/ ]|$)|Polar3|Vphone[- ]X3|ST11-A5`),
		regexp.MustCompile(`(?i)Land[ ]?Rover[d]?[ _-](X1[0-9]|Explore(?: R)?|T878|L15\+|V18|V[168]|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vphone[- ]X3`),
		regexp.MustCompile(`(?i)(ST11-A5)`),
		regexp.MustCompile(`(?i)XM[123]00|S6 Build`),
		regexp.MustCompile(`(?i)XM([123])00([^/;)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)lanin (T4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LANIX-([a-z0-9]+)|Ilium[ _]|LANIX_PAD|IliumPad|X120C|(?:Alpha 950(?:XL)?|Alpha [1359]V|X540)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILIUM[ _]?PAD[ _]?([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Ilium[ _](Alpha [15]s|Alpha [379]|Alpha 1T|L(?:200|6[12]0|9[0125]0|1[0124]00|1050|1120)|LT5[012]0|M[579]s|M7T|M[13579]|S(?:106|520|6[27]0)|X(?:1[12]0|2[0126]0|400|5[12]0|500B|710))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILIUM[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Alpha (9500|950(?:XL)?)`),
		regexp.MustCompile(`(?i)Alpha ([1359])V`),
		regexp.MustCompile(`(?i)(X540)`),
		regexp.MustCompile(`(?i)LANIX-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Lark|Cumulus|Evolution|FreeMe|Ultimate (?:X4|7i))[ _-]|Build/Lark|Bjorn[_ ]SP-500|FreeBird 5WiFi|Impress_Noda`),
		regexp.MustCompile(`(?i)Cumulus[ _](5\.5|[56])[ _]HD`),
		regexp.MustCompile(`(?i)FreeMe X2 ([79]) (?:ver|v)?\.([23])`),
		regexp.MustCompile(`(?i)FreeMe[ _]X2[ _]([7-9])`),
		regexp.MustCompile(`(?i)FreeMe X4[ _]7[_ ]?HD`),
		regexp.MustCompile(`(?i)FreeMe X4[ _]9`),
		regexp.MustCompile(`(?i)(?:Lark[ _-])?Evolution[ _](X2 7 3G-GPS|X4[_ ]10\.1|10|X4[_ ]7[ _]IPS)`),
		regexp.MustCompile(`(?i)Ul(?:ti|it)mate (X4 10\.1 3G IPS|X4 8s 3G|7i)`),
		regexp.MustCompile(`(?i)Phablet 6\.0`),
		regexp.MustCompile(`(?i)Bjorn[_ ]SP-500`),
		regexp.MustCompile(`(?i)Cirrus[ _](4\.5|[45])`),
		regexp.MustCompile(`(?i)Lark[ _](Stratus[_ ]5)`),
		regexp.MustCompile(`(?i)(?:MID_1089IPSA100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MID_1089IPSA100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lava[ _]|LAVA(?:A1|X10)|(?:DISCOVER136|KKT QUADRA)|iris[ _]?([^/;)]+)(?: Build|[;)])|A(?:67|76) Build|X1 Selfie Build|X41 Plus Build|X1_atom_L|(?:Flair (?:[ZS]1|P8)|PixelV1|Pixel V2\+?|Z60s|Z61_2GB|A97 IPS|A97 2GB PLUS|L[EH]9920(?:[_ ]P)?|L[NEH]9910|LH9810|Ivory(?:S1|S4G)?|A76Plus|Grand2c|AH9910| A3_mini|T71_w|V23GB|R1_Lite|Atom 2X|AF9030|Z50_Pro| Z(?:[56]1|92)|Android 6(?:[\d.]*);(?: [\w-]+;)? (:?X28|P7plus)|AF9020|Alfa L|T81N(?:_UP)?|LN982[01]|Fuel F1 Mini|LE000Z93P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZX409(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LXX506(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZX404(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZX411(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZX407(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LXX503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Flair ([ZS]1|P8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AF9030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AF9020(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AH9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LXX501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LXX504(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z61P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A97 IPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF6810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A97 2GB PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A76Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A3_mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixel V2\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixel ?V([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1_atom_L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1 Selfie(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X41 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LAVA[_ ]?)?A([13]|67|76)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVA_R(1s?)`),
		regexp.MustCompile(`(?i)Z(\d{2})(?:_2GB)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z50_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMX06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMG01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG403[ _]225(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE000Z93P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG403[ _]25(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z60s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V23GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9920[ _]P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9940(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF9810(?:_2GB)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF9820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9830(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH993[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9950(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9821(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Atom 2X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfa L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X\d+)[ _]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X28)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris88[_ ]go`),
		regexp.MustCompile(`(?i)KKT40[ ]?Power[P\+]`),
		regexp.MustCompile(`(?i)Ivory(S1|S4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T81N_UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T81N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T71_w(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris[ _]?([^/;)]+)[_ ]lite(?: Build|[);])`),
		regexp.MustCompile(`(?i)iris[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lava[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)LAVA[ _]([^/;)]+)/MIDP`),
		regexp.MustCompile(`(?i)Le ?Pan|TC970 ([^;/]+)Build`),
		regexp.MustCompile(`(?i)TC970 ([^;/]+)Build`),
		regexp.MustCompile(`(?i)Le ?Pan ?(II|S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le ?Pan ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)LeBest[_ ](L9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Letv|LeEco|Le ?X[0-9][^;/]+|Le Max|Le [12]|Le2[_ ]x527|X900 Build|(?:X[89]00\+|X52[67]|lineage_c106)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X800\+`),
		regexp.MustCompile(`(?i)X900\+`),
		regexp.MustCompile(`(?i)X50[10]`),
		regexp.MustCompile(`(?i)LE ?(X62[26]|X522)`),
		regexp.MustCompile(`(?i)(X910)`),
		regexp.MustCompile(`(?i)LEX72[057](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEX65[0137](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE(X620)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Le ?X526|Le2[_ ]x527|Le 2|X52[67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEX82[019]|Le Max 2`),
		regexp.MustCompile(`(?i)Le ?X([^;/]+) Build`),
		regexp.MustCompile(`(?i)Le ?X([^) ;/]+)`),
		regexp.MustCompile(`(?i)Le ?([12][^;/]+) Build`),
		regexp.MustCompile(`(?i)Le Max([^;/]*) Build`),
		regexp.MustCompile(`(?i)Le Max([^ ;/]*)`),
		regexp.MustCompile(`(?i)LeEco ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(Vyper|N-5[07]|N-45|LP DAISY|LP_(?:Spectrum_S2|VEYRON|PRADO|Pro1|B-50|EVORA_light)|LP_T70|LP[ _]INFINITY\+?|LP T70 Lite|INFINITY_light|Alphatel_T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LP INFINITY\+`),
		regexp.MustCompile(`(?i)(?:LP_)?(Vyper|N-5[07]|N-45|Pro1|Alphatel_T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MY)?LEAGOO[ _-]?|(?:XRover(?: C)?|Shark (5000|1|6300)|M5 EDGE|KIICAA (POWER|MIX)|Leapad[ _](?:X|7s|7Pro)|Alfa [125]|Elite [15Y]|Venture 1|Z10-E|M9 Pro|Power 5|Power[ _]2(?: Pro)?|Android 9(?:[\d.]*);(?: [\w-]+;)? M1[23]|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:Z9A|T8s)|Lead 3| T5c)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[- _])?M([89])[_-]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEAGOO[- _](Z[156]|Z5c|M[58]|T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[_ ])?Lead ?([357])`),
		regexp.MustCompile(`(?i)Elite ([15Y])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Shark (1|5000|6300)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power 2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:leagoo-)?Power[ _]([25])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venture 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfa ([125])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XRover( C)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[- _])?(Z10-E|M6|M1[23]|T5c|T8s|Z9A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:My)?Leagoo[- _](E4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO_)?Leapad[ _](7s|10|X|7I)`),
		regexp.MustCompile(`(?i)LECT-TAB(1011|0711)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ledstar[_ ])?(?:Trendy 5\.0|Novus_Premium_6\.0)`),
		regexp.MustCompile(`(?i)Trendy 5\.0`),
		regexp.MustCompile(`(?i)Ledstar_Novus_Premium_6\.0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Leelbox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Leelbox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(32[FH]540S|32H5[235]0T|32F550T|32H650S|43U540S|43U550T|5[05]U5[14]0S|55U630S|65U520S|40F540S|40F550T|43F5[35]0T|32H511T|24H5[12]0T|28H540S|28H550T|50U6[23]0S|55U620S|43F511T|43F520T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RST)_(B\d{4}HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Leke[ _]Pad-([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lemco (FBX-3566W?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lemhoov[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Lenco (?:[^/);]*)(?: Build|[);])|(?:TDV900)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenco ([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:LNV-)?Lenovo|IdeaTab|IdeaPad|Thinkpad|Yoga Tablet|Tab2A[0-9]-[0-9]{2}[a-z]?|ZUK[ -_]|(?:TB2-X30L|TB3-710I|TB128FU|YT3-X50[MFL]|K50a40|TB-(?:Q706Z|X103F|8504F|X304F|X704V|X704A)|A5500-H|A2107A-H|A3500-HV|A2109A|S6000|Z2 Plus|Vibe[ _](?:P1|S6i Plus|S[23567]i|C|[ZX]2|K5(?: Plus)?|V7)|P2A42|L38011|L18011|[5-8]01LV|[67]02LV|Z2131|K350t|K31-t3|Tab A1020|TAB 2 A8-50LC|S90-A|A101LV|P70-A|VR-1541F|d-42A|lineage_A6020|EveryPad2|A2010l36|F0CU0028RK|TB310XU|TB301FU|TB132FU|TB32(?:8[FX]U|0FC)|TB138FC|PB-6505Y|TB-X505[FL]|TB-8704V|TB3[05]0[FX]U|TB-X605[FL]|L38043|TB3-X70L|TB-X605[LF]C|A7600-HV?|YT-X703F|TB330XU|TB371FC|TB3[17]0FU|TB331FC|A397i|TB330FU|NL5H00X|L79031|XT2091-[78]|L71061|L70081|L78031|20JJS0CU1M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ?G780`),
		regexp.MustCompile(`(?i)Lenovo ?A3500-FL`),
		regexp.MustCompile(`(?i)(?:Lenovo ?)?A3500-(?:H|HV|F)`),
		regexp.MustCompile(`(?i)(?:Lenovo[ _])?A5500-[HF]`),
		regexp.MustCompile(`(?i)Lenovo ?A7600|A7600-H`),
		regexp.MustCompile(`(?i)TB2-X30[FL]`),
		regexp.MustCompile(`(?i)TB-X6C6[XF]`),
		regexp.MustCompile(`(?i)YT3-X50[FLM]`),
		regexp.MustCompile(`(?i)YT-J706[XF]`),
		regexp.MustCompile(`(?i)TB3-710[IF]`),
		regexp.MustCompile(`(?i)TB-8703[XF]`),
		regexp.MustCompile(`(?i)501LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB 2 A10-70L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TB3-850[FM]|601LV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X304[FL]`),
		regexp.MustCompile(`(?i)TB-8504[XL]`),
		regexp.MustCompile(`(?i)(?:TB-X704[FVL]|70[12]LV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)801LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X103F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X704A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X605F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB330[FX]U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB310[FX]U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X705[FL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J606[LF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-Q706[FZ](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J606[FN]`),
		regexp.MustCompile(`(?i)TB-J607F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J6C6F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J616[XF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J706[LF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB132FU(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB350[FX]U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J607Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7104[IF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-8304F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7504X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X606[FXV]A?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X605[FL]C`),
		regexp.MustCompile(`(?i)(?:Lenovo )?TB12[58][FX]U`),
		regexp.MustCompile(`(?i)(?:Lenovo )?TB328[FX]U`),
		regexp.MustCompile(`(?i)(?:Lenovo )?TB-X505`),
		regexp.MustCompile(`(?i)TB-7305[IXF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7306[XF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ?B8000(-[FH])?`),
		regexp.MustCompile(`(?i)Lenovo ?B8080(-[FH])?`),
		regexp.MustCompile(`(?i)YOGA Tablet 2 Pro-1380[FL]`),
		regexp.MustCompile(`(?i)YOGA Tablet 2-1050[FL]`),
		regexp.MustCompile(`(?i)YOGA Tablet 2-830(?:[FL]|LC)`),
		regexp.MustCompile(`(?i)Lenovo ?B6000(-[FH])?`),
		regexp.MustCompile(`(?i)YT3-X90(L|F|X)`),
		regexp.MustCompile(`(?i)YT3-850[FL]`),
		regexp.MustCompile(`(?i)YT-X703[FL]`),
		regexp.MustCompile(`(?i)YT-X705[FL]`),
		regexp.MustCompile(`(?i)YB1-X90[FL]`),
		regexp.MustCompile(`(?i)S6000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ([ASB][0-9]{4})[A-Z]?\-[EHF]`),
		regexp.MustCompile(`(?i)ThinkPadTablet_(A[0-9]{3})_`),
		regexp.MustCompile(`(?i)ThinkPad ?Tablet([^;/]*) Build`),
		regexp.MustCompile(`(?i)Lenovo ?A3300-(?:GV|H)`),
		regexp.MustCompile(`(?i)TAB 2 A7-30[HGD]C`),
		regexp.MustCompile(`(?i)TB-8704[FV]`),
		regexp.MustCompile(`(?i)TB-X505[FX]`),
		regexp.MustCompile(`(?i)TB-X104[FXL]`),
		regexp.MustCompile(`(?i)Tab2A([0-9]-[0-9]{2}[a-z]?)`),
		regexp.MustCompile(`(?i)IdeaTab[ \-_]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Yoga Tablet([^;/]+) Build`),
		regexp.MustCompile(`(?i)TB-8505[FX]S`),
		regexp.MustCompile(`(?i)TB-8505[FX]`),
		regexp.MustCompile(`(?i)TB-8506[FX]`),
		regexp.MustCompile(`(?i)TB300[FX]U`),
		regexp.MustCompile(`(?i)TB301[FX]U`),
		regexp.MustCompile(`(?i)TB-8705[FX]`),
		regexp.MustCompile(`(?i)(?:TB-9707F|TB320FC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo (TB[0-9]?\-[a-z0-9\-]+) Build`),
		regexp.MustCompile(`(?i)Lenovo S([69]0)-?[aU]`),
		regexp.MustCompile(`(?i)Lenovo K30-W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L19111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L10041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78121(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z213[12]`),
		regexp.MustCompile(`(?i)ZUK[ -_]([^/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)K10a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:k50a40|K50-t5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K(1[30]) Note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7010(?:a48)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K350t(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L38041|K5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L39051(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A7020a4[08]|L38012|K52e78)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L19041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K31-t3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A6010Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A6020a46|Vibe K5 Plus|lineage_A6020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Lenovo-)?(?:A6020(?:a40|l36)|Vibe K5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIBE C|A2020a40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIBE X2|X2-(?:X+CU|TO|AP))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X3(?:a40|c[57]0)|K51c78)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo X3 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE V7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE S6i Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE[ _]S([23567])i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L79031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L70081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)k33a48(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38043(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L3808[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P2A42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)k53a48(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K33a42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P1ma40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vibe P1 Turbo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:P1(?:a42|c72)|Vibe P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2016a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1010a20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z90a40|Z90-7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S1a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S1La40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z6 Pro 5G|L79041)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z6 Pro|L78051)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L58041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L58091(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB2-6(?:70M|50[YM])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB1-750M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB1-770M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S90-A|P70-A|A397i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IdeaPad ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)d-42A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo K12 Pro|XT2091-[78]`),
		regexp.MustCompile(`(?i)Lenovo X2(?:-[ER]U)?`),
		regexp.MustCompile(`(?i)LENOVO/81W8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LENOVO/81MV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LENOVO/81SS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F0CU0028RK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20JJS0CU1M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo TAB ?([^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Lenovo ([^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:LNV-|Lenovo-)?Lenovo[ \-_]?([a-z0-9_+\-]+)`),
		regexp.MustCompile(`(?i)(LESPH501[14]|LESPH5003B|SUPERNOVA[ _](?:Qi16|i216|Qi32|i3G96[X]?|iS3G)|PULSAR QI3G|LETAB916|Titanium T355)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPERNOVA[ _](i216|Qi16|Qi32|i3G96[X]?|iS3G)`),
		regexp.MustCompile(`(?i)PULSAR (QI3G)`),
		regexp.MustCompile(`(?i)lephone[ _]|lephoneP1|S104G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)lephone[ _](K7|K10)`),
		regexp.MustCompile(`(?i)lephone_W7_plus|lephone W7+`),
		regexp.MustCompile(`(?i)lephone(?:[ _])?([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)ANOVA A5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lexand[ _]|(?:S[BC]7 PRO HD|SB5 HD|S5A[1-4]|S4A[1-5]|S6A1|A811|A802|LPH7_Smarty)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A(811|802)`),
		regexp.MustCompile(`(?i)(S[CB]7) PRO HD`),
		regexp.MustCompile(`(?i)(SB5) HD`),
		regexp.MustCompile(`(?i)Lexand[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(MFC[0-9]{3}[a-z]{2,})`),
		regexp.MustCompile(`(?i)MFC17[05]FR`),
		regexp.MustCompile(`(?i)(MFC[0-9]{3}[a-z]{2,})`),
		regexp.MustCompile(`(?i)((?:24|32)TP1HDTA1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIFEMAXX, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Lime(?:Z2PLUS|T95)`),
		regexp.MustCompile(`(?i)Lime(T95)`),
		regexp.MustCompile(`(?i)(?:Venus Pad14)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lingwin[ _\-]`),
		regexp.MustCompile(`(?i)Lingwin[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Lingwin[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)LI(22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LINSAY[_ ]|(?:F10XIPSQ|F10XIPG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F10XIPSQ|F10XIPG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LINSAY[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Webpad[_ ]?(100[123]|7007)`),
		regexp.MustCompile(`(?i)LOEWE[;,]`),
		regexp.MustCompile(`(?i)LOGIC[_ ]|(?:LOGIC[_ ](X4 Plus|X50|X[135]|X4M|L4T|L5D|X5[AFT]|X57A|X60G|L50T?|L57|L6[0135]|X60_PLUS)(:?[_ ]LITE2?)?|L55[ABS]|Q-502)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ]X60_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](L65|X5|X4M)[_ ]LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](L65)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](X5)[_ ]LITE2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](X4 Plus|X50|X[13]|X4M|L4T|L5D|L6[013]|X5[AFT]|X57A|X60G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(L50T?|L55[ABS]|L57|Q-502)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Logic Instrument|Fieldbook K101`),
		regexp.MustCompile(`(?i)Fieldbook F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGICOM[_ ]|(TAB950|TAB1062|E731|E812|E912|E1031|POWER BOT|La[ _]?Tab[ _]?(?:7[24]|10[57]|11[345]|12[4789]|292|Stand(?:RB)?)|(?:[BCM]|ID|VR)[ _]?BOT[ _]?(?:TAB[ _])?([0-9]+\+?)(?:PLUS)?|KT712A_4\.4|L-?IXIR[0-9]*|L_IXIR_TAB_1047HD|L-ITE|L-EGANTONE(?:-R)?|Le Fizz|L-?EMENT.+|Le[ _]?(?:Up|Connect|Omega|Hop|Hello|Lift|Pulse|Prime|Swipe|Wave|Hola|Moov[2]?|Must(?: 2)?|Starter L|Fit FR|Spark|Prime|Smooth(?: FR)?)|Tab_Stand_Pro|LeFit|logikids4|Le Link|TAB76|Five Pro|Solar(?: Pro)?|Lunar Pro)(?:[);/ ]|$|_)`),
		regexp.MustCompile(`(?i)La[ _]?Tab[ _]?(7[24]|10[57]|11[345]|127 HD|12[89]|105_P|292|Stand)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LaTabStandRB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB76(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)La[_ ]Tab[_ ]124[_ ]HD[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT712A_4\.4|L-IXIR TAB 701 3G`),
		regexp.MustCompile(`(?i)L-?IXIR[ _]TAB[ _]([^);/]+)( Build|[);])`),
		regexp.MustCompile(`(?i)L-ITE[ _](400M|452|50[46] HD|506R HD|552 HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-ITE[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)L-?EMENT[ _]?(350|451|40[103]|55[013]|50[15]|500L?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-?EMENT[ _](?:TAB)[ )]?([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)L-?EMENT[ _]?(74[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB950|TAB1062|E731|E812|E912|E1031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M bot (5[14])`),
		regexp.MustCompile(`(?i)VR bot (552) Plus`),
		regexp.MustCompile(`(?i)VR bot (552)`),
		regexp.MustCompile(`(?i)((?:[BCM]|ID|VR))[ _]?BOT[ _]?TAB[ _]([0-9]+(?:PLUS|\+)?)`),
		regexp.MustCompile(`(?i)((?:[BCM]|ID|VR))[ _]?BOT[ _]?((?:TAB[ _])?([0-9]+\+?)(?:PLUS)?)`),
		regexp.MustCompile(`(?i)Le[ _]Connect`),
		regexp.MustCompile(`(?i)Le[ _]Pulse`),
		regexp.MustCompile(`(?i)Le[ _]Prime`),
		regexp.MustCompile(`(?i)Le Hola FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Hola(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LeMoov2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LeMoov(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Fit FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]?Fit`),
		regexp.MustCompile(`(?i)Le Hop(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Hello(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Smooth FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Smooth(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Must 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Must(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Starter L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Spark(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Up(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIXONS-LOGIK[;,]`),
		regexp.MustCompile(`(?i)Lovme[-_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lumigon[ _](T3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(L950[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEO(SR620|SC600)|INNOSR545|Lumus[_ ]Ion|AEONSR570)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO(SR620|SC600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INNO(SR545)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lumus[_ ]Ion(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AEON(SR570)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LUNA[ _](?:[VG]55|G[56]0|G9|G6E|V6)|TG-L800S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUNA[ _]([VG]55|G[56]0|G9|G6E|V6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TG-L800S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUXOR, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(TPC1013)`),
		regexp.MustCompile(`(?i)M-HORSE|(?:Pure (?:3|2A?)|Pure ?1|Power1|Top_(?:S[78]|P9|H740|10|i7|Note8)|Top-V30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure ?([13]|2A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Top[_ -](S[78]|P9|H740|10|i7|V30)`),
		regexp.MustCompile(`(?i)(?:Eros[_ ](4G|Star|Smart|Plus|Power)|MTECH (?:ACE9|TURBO L\d+|TEZ 4G|JAZBAA)|Foto3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eros[_ ]Star`),
		regexp.MustCompile(`(?i)Eros[_ ]Smart`),
		regexp.MustCompile(`(?i)Eros[_ ]Plus`),
		regexp.MustCompile(`(?i)Eros[_ ]Power`),
		regexp.MustCompile(`(?i)TURBO L(\d+)`),
		regexp.MustCompile(`(?i)M\.T\.T\.|MTT IDEAL`),
		regexp.MustCompile(`(?i)M\.T\.T\. ?Tablet([^;/)]+)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)M\.T\.T\. ?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:M3US20W|M3SL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M4[ -]SS[0-9]{4}(?:-R)?|M4_B[23]|M4_R2|R2_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SS4458-R|M4-SS4458-R`),
		regexp.MustCompile(`(?i)M4_B([23])`),
		regexp.MustCompile(`(?i)M4_R(2)`),
		regexp.MustCompile(`(?i)(CRD55-UHD9)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(M820)(?:-EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAXVI[ _](?:MS401)(?:[);/ ]|$)|\w*_?MAXVI?_\w+|MS502[_ ]Orion|MS531`),
		regexp.MustCompile(`(?i)MAXVI[ _](MS401)`),
		regexp.MustCompile(`(?i)MS502[_ ]Orion`),
		regexp.MustCompile(`(?i)\w*MAXVI_(P11|K10|X[358]00)_`),
		regexp.MustCompile(`(?i)(T1270G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MBI[_ ](R7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MBK-T2101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MBOX3?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Prime_S|M300 4G|MDC M5|Nova Pro|Grand Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime_S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M300) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MDC M5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MDTV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MEEG[ _-]`),
		regexp.MustCompile(`(?i)MEEG[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)MEEG[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)MEO TV Box 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MEU ([a-z0-9]+) Build`),
		regexp.MustCompile(`(?i)(Caryota [1245789]|Jazz J[13] 2018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Caryota [1245789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jazz (J[13]) 2018`),
		regexp.MustCompile(`(?i)MIWANG[_ ](M2s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M35|M20|G7106|G7108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M[0-9]{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G[0-9]{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLAB[ _-]`),
		regexp.MustCompile(`(?i)MLAB[ _-]GLOWY([78]|10)`),
		regexp.MustCompile(`(?i)MLLED[ _]`),
		regexp.MustCompile(`(?i)MLLED[ _]([^;/]+)Build`),
		regexp.MustCompile(`(?i)MLLED[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ(?:0705|L550|1017|1010w?|1012N?|1019N|1025|1060M|1380|1401|1436|1452a|1453|1470|1502a|1511|155[23]|1568|1570|1805N|180[68]|1810B_M|1832|1850|1890|5017|L626|9610|181011N|A27X_E|E[12]00|EL41|G550|GW516|L30|L5[01]|M801|M1001|N700|P50|R300|S300|S801|S1001|W503|W511T|W553N?|W60[38]|W626|M960|D10S|D700|9013_4N|F 200|T800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ0705(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQD10S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1010W?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1012N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ9013_4N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1019N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1805N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ181011N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1380(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1436(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1452a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1453(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1470(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1502a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1552(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1553(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1568(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1806(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1808(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1810B_M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1832(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1850(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1890(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ5017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ9610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQM960(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQS801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQG550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQGW516(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQE100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQE200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQA27X_E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQEL41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQN700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQP50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQS300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQS1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1060M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQR300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW608(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQW603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW626(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW511T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW553N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQL626?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQD700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQT800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQF ?200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MMI, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(TAB-S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo ?(?:9[13]|81|76)|(?:Enjoy 7 Plus|GP70 2OD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo ?(9[13]|76|81)`),
		regexp.MustCompile(`(?i)(GP70 2OD)`),
		regexp.MustCompile(`(?i)MStar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MTC[ _](968|97[82]|970|982[OT]?|1078)|(?:MTC[_ ])?SMART[ _]?(?:Race[2]?|Sprint|Run|Turbo|Surf[2]?)[ _]4G|MTC975|Smart Bit|Smart_(?:LINE|Light)|(?:MTC[ _])?SMART[ _](?:Run|Start[_ ][23])|Redbox Mini 5\(MTS\)|MTS TV|DV8235|DV9135|DV9157-C|DV8304-C|Osmartphona`),
		regexp.MustCompile(`(?i)MTC[ _]?(97[258]|970[H]?|982[OT]?|968)`),
		regexp.MustCompile(`(?i)MTC[ _](1078)`),
		regexp.MustCompile(`(?i)SMART[ _]Race[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Race2[ _]4G`),
		regexp.MustCompile(`(?i)(?:MTC_)?SMART[ _]Sprint[ _]4G`),
		regexp.MustCompile(`(?i)(?:MTC_)?SMART[ _]Start[ _]([23])`),
		regexp.MustCompile(`(?i)SMART[ _]?Run(?:[ _]4G)?`),
		regexp.MustCompile(`(?i)SMART[ _]Surf2[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Surf[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Turbo[ _]4G`),
		regexp.MustCompile(`(?i)Redbox Mini 5\(MTS\)`),
		regexp.MustCompile(`(?i)MTS TV Box (\d{3})`),
		regexp.MustCompile(`(?i)(DV8235|DV9135|DV9157)`),
		regexp.MustCompile(`(?i)MTN-|(?:Kafit V900|Faith29|Ka ?Chocolate)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Faith29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ka ?Chocolate(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MTN-(L860|S620)`),
		regexp.MustCompile(`(?i)MTN-([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)(MC-X7MINI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mafe_(?:M8[12]0|M825)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mafe_(M810|M825)`),
		regexp.MustCompile(`(?i)(?:N5NOVA|IRON\+|N5Max_X4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IRON\+`),
		regexp.MustCompile(`(?i)(?:Magnus[ _](?:bravoZ[23]0|Infinity_?(?:G8|G11))|bravo Z40|Bravo Z11|bravo[-_]Z[12]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)bravo[ _-]?(Z[234]0|Z11|Z[12]2)`),
		regexp.MustCompile(`(?i)(?:Magnus[ _])?Infinity_?(G8|G11)`),
		regexp.MustCompile(`(?i)MAJESTIC[;, _-]|CRONO ?[0-9]+|(?:TAB (?:647|411) 3G|TAB_(?:81[12]|912|918_PRO)_4G|TAB_911_3G|TAB-714|TAB_814|TAB (711 4G|747 3G|[56]11 3G)|URANO27|URANO 47|URANO 77LTE|PLUTO__?26N?|JACK| JOE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JACK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JOE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URANO 77LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URANO ?([24]7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLUTO__?(26N?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB[ _](\d{3})[ _]PRO_([34])G`),
		regexp.MustCompile(`(?i)TAB[ _](\d{3})[ _]([34])G`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]Tab([^;/]+)Build`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]Tab([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]([^;/]+)Build`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]([^);/]+)(?:(?:[);/ ]|$)|$)`),
		regexp.MustCompile(`(?i)CRONO ?([0-9]+) Build`),
		regexp.MustCompile(`(?i)CRONO ?([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Build/)?Malata[ _]?([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mango[_ ](S5|SQ7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MANN[ _]|(ZUG 3|ZUG 5S(?: Q)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MANN[ _](8S)`),
		regexp.MustCompile(`(?i)(ZUG 3|ZUG 5S(?: Q)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MSP950(1[245]|2[01])|MSP96017|MSP94501|MSP95009|MSP96002|MSP450[79]|(MID713|MID(?:06[SN]|08[S]?|12|13|14|15|701|702|703|704|705(?:DC)?|706[AS]?|707|708|709|711|712|714|717|781|801|802|901|1001|1002|1003|1004(?: 3G)?|1005|1009|1010|7802|9701|9702))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID713|MID(?:06[SN]|08[S]?|12|13|14|15|701|702|703|704|705(?:DC)?|706[AS]?|707|708|709|711|712|714|717|781|801|802|901|1001|1002|1003|1004(?: 3G)?|1005|1009|1010|7802|9701|9702))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MSP450[79]|MSP95009)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MFSTAB(?:_74G)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mara(?: Phones)?[ _](Z1?|X1|S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Marshal[_ -]?ME`),
		regexp.MustCompile(`(?i)Marshal[_ -]?ME-(700A|720|617)`),
		regexp.MustCompile(`(?i)Marshal[_ -]?ME-(34[78]|352|36[456])`),
		regexp.MustCompile(`(?i)Mascom (S750|SS289|WS517)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Massgo[ _]`),
		regexp.MustCompile(`(?i)Massgo[ _]VI2S`),
		regexp.MustCompile(`(?i)Massgo[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Masstel|(?:Juno[ _]Q[567]|Tab10Ultra|Tab(?:[78]|10)Plus|Hapi10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel[_ ]Juno[_ ]Q5Plus`),
		regexp.MustCompile(`(?i)(?:Masstel_)?Hapi ?(1[05]|30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel[_ ]N660s`),
		regexp.MustCompile(`(?i)Masstel[_ ]\((M18)\)`),
		regexp.MustCompile(`(?i)Masstel_Tab7LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab10 WiFi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel_Tab10_?4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab([78]|10)Plus`),
		regexp.MustCompile(`(?i)(?:Masstel[ _])?Tab[ _]?([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Masstel[_ ]*)?(Juno[_ ]Q[3567]|Juno_S6|[MNXB]\d+|LT52|N600S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEOQC4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MASTERTECH,([a-z0-9_ \-]+),(?:wired|wireless)|QC77QPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MASTERTECH,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(QC77QPS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Maximus 3\.0)`),
		regexp.MustCompile(`(?i)(?:7116-A5|818 3G|MATRIX GRAVITY|Matrix7116)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(7116-A5|818 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Matrix7116(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MLT43USD02G?|MLT32HSX02|MLT55USX02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS(?:45[036]|505|507_STRONG|514)|MS457(?:PLUS)?|RS-401|Neva Rise S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS457)PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS507)_STRONG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MS(45[0367]|505|514)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RS-401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Max80 Plus)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Maximus[ _]|(Noir X|G10 max|iX Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Maximus[ _])?(Noir X|D1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G10 max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maximus_(T2)`),
		regexp.MustCompile(`(?i)Maxtron[ _-](V[327]|V1[2357]|V20|S[89]|T1|Genio|Apollo|PLUTO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxtron[ _-]PLUTO`),
		regexp.MustCompile(`(?i)Maxtron[ _-](V[327]|S[89]|V1[2357]|V20|Apollo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxtron[ _-](T1|Genio)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAXWELL[;,]`),
		regexp.MustCompile(`(?i)(?:Astro[_ ](?:Phablet_9|55?N[_ ]LTE|55[RT]|5 PRO|5[sTX]|[45]P|X4|5_GO_LTE|X55s?|4\.5|4|63R|X5|8R)|Astro6|Virtue Z5|Nitro[_ ](?:4S?|55[ARCMN]|5[XRPNM]|[45] GO|4[sN] LTE|55[ _]LTE|N62)|Gravity_(?:55?_GO|6P)|Gravity 5\.5 LTE|Nitro_Phablet_9s|Nitro Phablet 7N|Nitro 8|MX-(?:A10R|A6[45]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX-(A10R|A6[45])`),
		regexp.MustCompile(`(?i)Astro[_ ](55?)N[_ ]LTE`),
		regexp.MustCompile(`(?i)Astro[_ ]X55[_ ]LTE`),
		regexp.MustCompile(`(?i)Astro[_ ](55[RT]|X55s?|5[sTX]|4|X[45]|[45]P|8R|63R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[_ ](4\.5)`),
		regexp.MustCompile(`(?i)Astro[_ ]X4`),
		regexp.MustCompile(`(?i)Nitro ([45]) GO`),
		regexp.MustCompile(`(?i)Nitro[ _]4s`),
		regexp.MustCompile(`(?i)Nitro[_ ]((?:55|4N)[_ ]LTE|4|55[ARCNM]|5[XRPNM]|8|N62)`),
		regexp.MustCompile(`(?i)Gravity_(55?)_GO`),
		regexp.MustCompile(`(?i)Gravity 5\.5 LTE`),
		regexp.MustCompile(`(?i)Nitro[_ ]Phablet[_ ](9s|7N)`),
		regexp.MustCompile(`(?i)(?:Alpha[_ ]X|Maze Alpha)(?:[);/ ]|$)|(?:Android [78](?:[\d.]*);(?: [\w-]+;)? Blade|Comet)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Alpha[_ ]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maze Alpha(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Blade|Comet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MS5424G|MS5514G|SSB-(?:500|508)|SSB408D|SSB504R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS5424G|MS5514G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SSB-?(500|508|408D|504R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Grace (9|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MF716\+?|M785|800P3[12]C|101P51C|X1010|M7[67]QF6|M17QF[67][_-][43]G(?:plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M785(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M17QF6-3Gplus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M17QF([67])_([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7([76])QF6`),
		regexp.MustCompile(`(?i)MF716\+`),
		regexp.MustCompile(`(?i)Mecool[ _-]|(?:ME-COOL S|KM9 ?PRO|BB2 PRO|K[I]{1,3} PRO|KI PLUS|KM9_TV_BOX|M8SPROW|M8S (?:PLUS|PRO) (?:DVB|[LW]|PLUS)|M8S (?:MAX|PRO)| KM[135679]| KD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM9 ?PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM9_TV_BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BB2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K[I]{1,3}) PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KI PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8SPROW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PLUS DVB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PLUS ([LW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO ([LW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME-COOL S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K([MD]\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mecool[ _-]([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:SmartPad7503G|M-SP10MXA|M-PPAB500|SmartPad970s2(?:3G)?|M[_-][MPS]P[0-9a-z]+|M-IPRO[0-9a-z]+|10edge|1AZ2[TP]| (?:7[BCD]Y|8[ADE]Y|1[AB]EC|1CY|1AZ|1[DI]Y4G|1AZ2TW|1EY4G|1HY4G)(?:_eea)?|Azimut ?[23](?: Lite|Pro)?|M-WPW801| 1EY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad7503G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad970s23G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad970s2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP84[02]M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP940M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP8MXA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP7HXAH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP7MXAH?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP8HXAH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP(?:710|720|725|726|740)GOx?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP876S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8S2[AB]?3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP(101|102|860|875)S2[BW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP85S23G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1[DEHI]Y4G`),
		regexp.MustCompile(`(?i)M-MP10[45][01]S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1S2[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8[24]S4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8S4[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP9S4A3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1[02]S4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP7S4A3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1040MC?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1S4[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10HXxH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXHA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXHL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8PA3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP10PA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP10PA3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-IPRO([18][01]0)[BW](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:1AZ2[TP]|Azimut2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azimut 3 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azimut ?3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azimut 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8DY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10edge(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1EY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-WPW801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(7[BCD]Y|8[AE]Y|1BEC|1CY|1AZ|1AZ2TW)(?:_eea)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M-MP75S23G|M-MP72[01]M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP7S2[ABDK]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP5303G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxB400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAG550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAB500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2G530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPG700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS531(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S650C?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS551U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAG4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP[ABC]G500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S500[BC]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPx(S510|G551|G51[0125]|G415)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M[_-]PP[Ax]X(470|510|555|520)U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxG(400|501|[457][PM]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS(532[LU]|470|501|5P?|7P?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxG(4[15]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPA(S520|R450|G552)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPx([XS]5\d{2}[UL])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP([0-9a-z]+)`),
		regexp.MustCompile(`(?i)Medion|(?:MD_)?LIFETAB|([SPX]10[0-9]{2}X|E10[45]1X|X5001|P851X|P850X|E691X|E10[56]0X|B5532)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MD_)?LIFETAB[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(E450[46]|E5004|S5004|X5001|E5020|P5015|P500[45]|X6001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B553[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(E10[45]1X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([SPX]10[0-9]{2}X|P851X|P850X|E691X|E10[56]0X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Medion(?: Smartphone)? ([^/;]+) Build`),
		regexp.MustCompile(`(?i)MEDION, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)MegaFon|MFLoginPh|MegLogPh|(MFLogin[34]T?|MS3B|SP-A5|SP-A20i|KM8-ATV-MF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MFLoginPh|MegLogPh`),
		regexp.MustCompile(`(?i)MFLogin3T|MegaFon Login 3`),
		regexp.MustCompile(`(?i)MS3B|Megafon Optima`),
		regexp.MustCompile(`(?i)(SP-A5|SP-W1)`),
		regexp.MustCompile(`(?i)MegaFon V9+`),
		regexp.MustCompile(`(?i)(KM8-ATV-MF)`),
		regexp.MustCompile(`(?i)OTT Xview AV1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Meitu[2]?|MP1503|MP1512|MP160[235]|MP170[19]|MP171[138]|MP1801)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MP1512|Meizu M6s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1602(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP17(?:01|13)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP17(?:09|11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meitu2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meitu (Kiss|[MV]4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meizu|MZ-[A-Z]|(M04[05]|MZ-16th(?: Plus)?|MZ-16[st]|M7[12]1C|M35[1356]|M612C|M578CA|M181[36]|M1822|M681C|M6T|MX[ -]?[2345](?: Pro)?|(?:MZ-)?m[1-6] note|M621C|M1852|M57[18]C|M3[ESX]|M3 Max|M031|m1 metal|M1 E|M2|M2 E|M5s Build|PRO [567]|PRO 7-[HS]| 15 Lite| 16th|MZ-15 (?:Lite|Plus)|15 Plus|MZ-16 X| 16 X| 16T|MX6| M5c|16s Pro|Android 8(?:[\d.]*);(?: [\w-]+;)? 16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M571C`),
		regexp.MustCompile(`(?i)(?:MZ-|Meizu-)?m([1-6])[_ ]note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M1 E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2 E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M578C[A]?|M2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M681C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M621C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M711C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M721C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M6T|MX6|M3E|M3X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M3S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M3 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M5S|M612C`),
		regexp.MustCompile(`(?i)(?:MZ-)?M5c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M04[05]|MX[ -]?2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M35[1356]|MX[ -]?3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX[ -]?4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX[ -]?4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Meizu[- _])?MX[ -]?5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1813(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M1816|M8 lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8c Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO 7-[HS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO ([76]) Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO ([567])`),
		regexp.MustCompile(`(?i)M031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1852(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1822(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16th Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?15 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-15 Lite| 15 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MZ-16th| 16th(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16 X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)16(?: Build|[;)]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16s Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meizu (17|C9|20) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MZ-?M3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Meizu[_ ])?note([89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?Meizu[_ ]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:MZ-)?Meizu[_ ]([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)MZ-([^/;]+) Build`),
		regexp.MustCompile(`(?i)MELROSE[_ ](?:S9\+?|S9P|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE[_ ]S9\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE[_ ](S9|S9P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE_2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SlidePad ?([^;/]*) Build|SPNG?[0-9]{2,4}[a-z]{0,2}(?:[);/ ]|$)|SP704CE?|SP-NG708-3G`),
		regexp.MustCompile(`(?i)SlidePad ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)SPNG([0-9]{2,4}[a-z]{0,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-NG(708)-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP704(CE?)`),
		regexp.MustCompile(`(?i)(?:Pacific|Quest).+OculusBrowser|Standalone HMD|PortalGo`),
		regexp.MustCompile(`(?i)(?:Quest 2|Standalone HMD)`),
		regexp.MustCompile(`(?i)(?:MiXzo[ _])?(?:ME ?10(?:2[35]|30)|MX1037|MX1024|MX10[24]1|MX1397)([ _][34]G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiXzo[_ ]ME ?(1023|1030)(?:[_ ]([34])G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiXzo[_ ]MX1021(?:[_ ]3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MiXzo[ _])?MX(1037|1041|1024|1397)[ _]4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME ?1025`),
		regexp.MustCompile(`(?i)(?:MicroMax[ \-\_]?[a-z0-9]+|Q327)|4560MMX|P70221|(?:YU(?:5012|5040|5530)|AQ5001(?: Canvas Power)?|Android 4(?:[\d.]*);(?: [\w-]+;)? A240|Android 8(?:[\d.]*);(?: [\w-]+;)? B5Pro|Bharat 5|N8216|N8301|IN_2[bc]|IN_Note1|ione note|E7446|E7533)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A240(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A107(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q465(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E451(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4560MMX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN_2b(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN_2c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6523(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQ4502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E453(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E481(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q462(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P70221(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q(3[25]7|30[13]|326|354|338|3[03]01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q402\+`),
		regexp.MustCompile(`(?i)YU5040(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Micromax_)?(Q333|S302|Q324)`),
		regexp.MustCompile(`(?i)Q402 ?Plus`),
		regexp.MustCompile(`(?i)Micromax[_ ]HS3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax[_ ]HS2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax[_ ]HS1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q440Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax[_ ]Q353P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q452(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q421(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E313(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q413(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4251(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax C1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C2APLS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bharat[ _](\d)[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bharat[ _](\d)[ _]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bharat (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ione note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN_Note1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E7446(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E7533(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B5Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?(P681|P802)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?(X291|X246|X252|X458|X312)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?(P[a-z0-9]+)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)KIN\.(One|Two)|RM-(?:1010|1031|106[57]|107[23467]|1089|109[02]|1096|1099|1109|111[348]|1127|1141|115[24]|994)|Microsoft; Lumia|Lumia (?:1530|1320|950|850|650|640|550|535|435)|Corporation/Surface|Surface Duo|Surface 3`),
		regexp.MustCompile(`(?i)KIN\.(One|Two)`),
		regexp.MustCompile(`(?i)RM-1099|Lumia 430`),
		regexp.MustCompile(`(?i)RM-1114|Lumia 435`),
		regexp.MustCompile(`(?i)RM-1031|Lumia 532`),
		regexp.MustCompile(`(?i)RM-109[02]|RM-1089|Lumia 535`),
		regexp.MustCompile(`(?i)RM-1141|Lumia 540`),
		regexp.MustCompile(`(?i)RM-1127|Lumia 550`),
		regexp.MustCompile(`(?i)RM-106[57]|RM-1096|Lumia 640 XL`),
		regexp.MustCompile(`(?i)RM-1109|RM-1113|RM-107[23467]|Lumia 640`),
		regexp.MustCompile(`(?i)RM-1154|Lumia 650`),
		regexp.MustCompile(`(?i)Lumia 950|RM-1118`),
		regexp.MustCompile(`(?i)RM-994|Lumia 1320`),
		regexp.MustCompile(`(?i)Surface Pro( [34])?`),
		regexp.MustCompile(`(?i)Microsoft; Lumia ([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:ETL101(?:GB|AL)|ETW101GT(?:_C)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ETL101(?:GB|AL)`),
		regexp.MustCompile(`(?i)(MT003-21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO[- ](?:X8-H|X8|U9-H|X[57]-mini|X8H?-PLUS|X88-?I|X7-216A|X5-116A|X[68]|U1|Z64|U22-XJ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X8-H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO U22-XJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X([57])-mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-(X8H?)-PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X88-?I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X7-216A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X5-116A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X([68])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-U1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-Z64(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-U9-H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Pearl_Neo|M4CRD?|Emerald_M55CR|Mint[ _](?:VirGo|Orion))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pearl_(Neo)`),
		regexp.MustCompile(`(?i)Emerald[_ ]M55CR`),
		regexp.MustCompile(`(?i)(?:Mint[_ ])?VirGo`),
		regexp.MustCompile(`(?i)(?:Mint[_ ])?Orion`),
		regexp.MustCompile(`(?i)(?:Cool|Fresh|Ultra)?Mintt`),
		regexp.MustCompile(`(?i)Mintt (M3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Coolmintt ?(Blaze 2|Tribe|A[3578]|M[12]|P[13]|X7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultramintt ?(A[56]|R1|S[12]|X[56]|Y[35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UltraMintt ?(T10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FRESHMINTT ?(A7|A10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIO(?:/)?([a-z0-9]+)|(?:MOBIX M6|Mio TouchPad 7 Quad Core)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOBIX M6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIO(?:/)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Mione[_ ]`),
		regexp.MustCompile(`(?i)Hero (\d+)`),
		regexp.MustCompile(`(?i)Mione P2\+`),
		regexp.MustCompile(`(?i)Mione_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mione Pro Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mione[_ ]N10pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIDM[_-]|MPM[_-]|TPM4G_WT8`),
		regexp.MustCompile(`(?i)MIDM[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MPM[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MITCHELL_BROWN[;,]`),
		regexp.MustCompile(`(?i)MITO[- _]`),
		regexp.MustCompile(`(?i)MITO[- _]3255(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITO[- _]A37[_ ]Z1plus`),
		regexp.MustCompile(`(?i)MITO[- _](A(?:19[_ ][12]GB|37[_ ]Z1|36[_ ]W1|[0-9]+)|311)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITO[- _](T(?:[0-9]+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITSU|portalmmm/[12]\.0 M`),
		regexp.MustCompile(`(?i)MITSU/[a-z0-9.]+ \(([a-z0-9]+)\)`),
		regexp.MustCompile(`(?i)MITSU[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12]\.0 (M[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(MC32020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Mobell[ _](?:S50)|NOVA P3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobell[ _](S50)`),
		regexp.MustCompile(`(?i)(?:MobiGo2|MobiPrint 4\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MobiGo2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MobiPrint 4\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MobiGo|(?:Kiona|KANUNA|Halona|IKOSORA\+|Kicka[_ ][45][ _]Plus|Kicka Zoom|Kohana|Kayeta|Kosumi|KWANITA|Lonan|Hotah|Kicka 5|Kiona|Smart ?(?:[CEN]11|N12)|Sakari)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart ?([CEN]11|N12)`),
		regexp.MustCompile(`(?i)(IKOSORA\+|Kiona|Kicka[_ ][45][ _]Plus|Kohana|Kayeta|Kosumi|Lonan|Halona|Hotah|Kicka 5|Kicka Zoom|Kiona|Sakari)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobicel[_ ](R[16]|METRO2)|ASTRO(?: Build|[;)]|$)|(?:Android 6(?:[\d.]*);(?: [\w-]+;)? SHIFT)|(?:Android 8(?:[\d.]*);(?: [\w-]+;)? (?:BEAM|ZOOM|RUBY)|FAME(?:_DS)?|CLIK|R7_[12]|HYPE(?:_X)?|DANDY(?:_ZAM)?|Matrix|VENUS_G|TRENDY PLUS|FENDY_DS|TANGO_LITE|BLINK|BERRY|BERRY[_ ]?(?:[12]|PLUS)|R1PLUS_1|ZOOM-H|REBEL|LEGEND (?:MAX|PRO_1|Pro LTE)|HERO_DS|Switch[ _]GO|SWITCH1|switch plus|PULSE_1|TRENDY 2|TRENDY_LITE|FEVER_PLUS(?:_[HJ])?|RIO_(?:SS|ZAM|RW|BN)|Clik plus|(PURE|Fendy) PLUS|RX PRO|Neo[ _]LTE|Titan_1|ZOOM_1|R4 LTE|NEO_1|EPIC_[12]| GLO|EPIC PRO_[12]|IX PRO|OREO|Cosmo LTE|Neo_Plus|IX-1|Android 13(?:[\d.]*);(?: [\w-]+;)? IX|Android 1[12](?:[\d.]*);(?: [\w-]+;)? FORCE|VX20|VX19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EPIC PRO_([12])`),
		regexp.MustCompile(`(?i)IX(?: Build|[;)])`),
		regexp.MustCompile(`(?i)EPIC_([12])`),
		regexp.MustCompile(`(?i)BERRY[_ ]PLUS`),
		regexp.MustCompile(`(?i)R7_[12]`),
		regexp.MustCompile(`(?i)GLO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neo[ _]LTE`),
		regexp.MustCompile(`(?i)RIO_(SS|ZAM|RW|BN)`),
		regexp.MustCompile(`(?i)Switch[ _]GO`),
		regexp.MustCompile(`(?i)VX(19|20) Pro`),
		regexp.MustCompile(`(?i)VX(19|20)`),
		regexp.MustCompile(`(?i)Mobicel_(R[16])`),
		regexp.MustCompile(`(?i)FEVER_PLUS_([HJ])`),
		regexp.MustCompile(`(?i)Mobiistar|Zumbo[ _]S|(?:PRIME X MAX|X1 (?:Notch|Dual)|E1 Selfie|XQ[_ ]Dual|C1 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1 (Notch|Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E1 Selfie(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ[_ ]Dual(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mobiistar_LAI_Zumbo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zumbo[_ ]S[_ ]2017[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zumbo[_ ]S[_ ]2017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mobiistar ZUMBO S2( Dual)`),
		regexp.MustCompile(`(?i)Mobiistar_LAI_Zumbo_J_2017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobiistar_LAI_Zumbo_J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobiistar[_ ]Zumbo[_ ]J2`),
		regexp.MustCompile(`(?i)Mobiistar[_ ]Zumbo[_ ]S2`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]YUNA[ _]([1XCS])`),
		regexp.MustCompile(`(?i)mobiistar[ _](?:LAI[ _])?ZORO[ _]([235])`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]Zena`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]Z([12])?`),
		regexp.MustCompile(`(?i)mobiistar LAI 504([KC])`),
		regexp.MustCompile(`(?i)mobiistar[ _]PRIME[ _](X1|558|X[ _]Plus|X[ _]Grand) Build`),
		regexp.MustCompile(`(?i)mobiistar[ _]KOOL([ _]Lite)?`),
		regexp.MustCompile(`(?i)Mobiistar[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)GENESIS_126(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS5[50]X6|MS55X5|MS55L1|MS50L1|MS43A3000|MS45A4000|MS50A4000|MS50A4500|MS50A5000|MS50A6000|MS50B11000|MB-2900 QUATTRO|POLYS[_ ]MS45L1|Wave5)`),
		regexp.MustCompile(`(?i)POLYS[_ ]MS45L1`),
		regexp.MustCompile(`(?i)(Cynus[ _][^/;)]+)( Build|\))`),
		regexp.MustCompile(`(?i)(?:(?:MOBO[_ ]MB7005|MT7-421HD)|(?:MT7-442D|MT7-411D))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOBO[_ ])?(MB7005|MT7-421HD|MT7-442D|MT7-411D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TicWatch (Pro 3 Ultra GPS|C2|C2\+|Pro S|S2?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Modecom|Free(?:Way )?Tab|xino z[\d]+ x[\d]+|(?:ECHO LOLLY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)xino Z([\d]+) X([\d]+)`),
		regexp.MustCompile(`(?i)FreeTab[ _\-]?([^/;]+)? Build`),
		regexp.MustCompile(`(?i)FreeTab[ _\-]?([^);/ ]+)?`),
		regexp.MustCompile(`(?i)FreeWay Tab[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)FreeWay Tab[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)Mofut[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Mofut[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)MD-PH-001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:momo3s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TurboPhone4G Compact 2108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOT[^T][^O]|[^A][^N]DROID ?(?:Build|[a-z0-9]+)|portalmmm\/2.0 (?:E378i|L6|L7|v3)|XOOM [^;\/]*Build|XT1941-2|XT1924-9|XT1925-10|XT1965-6|XT1970-5|XT1799-2|XT1021|XT2171-[23]|XT2013-[124]|XT2061-3|XT2071-4|XT2201-[126]|XT-2201|XT2113-2|XT2115-1|XT2175-2|XT2141-1|XT2125-4|XT2127-2|XT2129-[123]|XT2143-1|XT2153-1|XT2158-6|XT2215-[124]|XT2221-[12]|XT2225-[12]|XT2233-2|XT2251-1|XT2243-2|XT2241-1|XT2169-1|XT2137-[12]|XT1710-08|XT180[3-5]|XT2315-1|XT2261-1|XT2335-[23]|XT2131(?:-[14]|DL)|XT2303-2|XT2301-5|XT2307-1|XT2321-[23]|XT2323-3|XT2343-3|XT194[23]-1|XT1929-15|XT2083-9|XT2081-1|XT2093DL|XT2093-[37]|[^Xtreme ](?:XT|MZ|MB|ME)[0-9]{3,4}[a-z]?(?:\(Defy\)|-0[1-5])?(?:[;]? Build|\))|lineage_osprey|ATRIX HD|PAMR00(?:0[28]|10)IN|PANB0001IN|PANB001[35]IN|PANV000[59]IN`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT300`),
		regexp.MustCompile(`(?i)XT2321-[23]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT30[35]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT31[16]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2125-4`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola[- ])?edge \(?(202\d)\)?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2307-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2175-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2143-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2153-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT32[01]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT3(?:89|90)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT502`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT531`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT535`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2083-9`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT55[567]C?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT603`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT610`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT615`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT621`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT626`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT682`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT685`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT687`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?Atrix HD`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT720`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT800W`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT860`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT881`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT882`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT88[56]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT890`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT894`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT897`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT901`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT90[567]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT910S?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT91[4568]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT9(?:19|20)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT925`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT912`),
		regexp.MustCompile(`(?i)XT2221-[12]`),
		regexp.MustCompile(`(?i)XT2335-[23]`),
		regexp.MustCompile(`(?i)XT2225-[12]`),
		regexp.MustCompile(`(?i)PAMR00(0[28]|10)IN`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT102[12]|XT830C|XT15[12]4|XT152[67])`),
		regexp.MustCompile(`(?i)Moto E \(XT2052DL\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1706`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2158-6`),
		regexp.MustCompile(`(?i)MotoE2\(4G-LTE\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1924-9`),
		regexp.MustCompile(`(?i)moto e\(?([0-9])\)? plus`),
		regexp.MustCompile(`(?i)Moto E([0-9]) Play`),
		regexp.MustCompile(`(?i)moto-e([0-9])-play`),
		regexp.MustCompile(`(?i)moto e6 \(XT2005DL\)`),
		regexp.MustCompile(`(?i)moto e5 cruise(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)moto e5 supra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E5 go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?(\di?)\)? Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?((?:[567]|22)i?)\)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?([567])s\)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E(\d+)\(?s\)?`),
		regexp.MustCompile(`(?i)Moto E(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1030`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1565`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1096`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT175[046]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT172[135]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1254`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT10(?:28|3[12349]|68|69)|lineage_osprey`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT106[34]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?g\(?(\d+)\)? 5G`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1609`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT180[1-6]|Moto G ?5S Plus|Moto G \(5S\) Plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1799-2|Moto G \(5S\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT168[57]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT167[06]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1925-10`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1965-6`),
		regexp.MustCompile(`(?i)XT2129-[123]`),
		regexp.MustCompile(`(?i)XT2137-[12]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT10(?:49|5[23568]|6[04]|9[23457])|XT1093)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT156[234]|Moto X Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT157[02]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1575`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT158[01]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1080`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1585`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1650(?:-05)?`),
		regexp.MustCompile(`(?i)moto z4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto Z3 Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1635(?:-0[1-3])?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1710-(?:-0[28])?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1789-05|Moto Z2 Force(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1929-15|moto z3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT166[23]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2241-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2243-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2201-6`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT-2201`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2301-5`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1943-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1941-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1942-1|P30 Note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge plus 5G UW \(2022\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge plus \(?(202[23])\)?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge plus|XT2061-3`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge ([23]0) fusion`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge 20 lite`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge (\d+) fusion`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge (\d+) pro`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge (\d+) neo`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:edge 5G UW \(2021\)|XT2141-1)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge (\d+)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge \(2021\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one vision plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT1970-5|one vision)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one power`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one hyper`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one zoom`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one fusion\+`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one fusion`),
		regexp.MustCompile(`(?i)motorola one action|XT2013-[124]`),
		regexp.MustCompile(`(?i)motorola one 5G ace|XT2113-2`),
		regexp.MustCompile(`(?i)moto g stylus \(XT2115DL\)`),
		regexp.MustCompile(`(?i)moto g stylus \((202[12])\)`),
		regexp.MustCompile(`(?i)moto g stylus 5G \((2022)\)`),
		regexp.MustCompile(`(?i)XT2215-[124]`),
		regexp.MustCompile(`(?i)moto g stylus 5G|XT2131(?:-[134]|DL)`),
		regexp.MustCompile(`(?i)moto g play \(2021\)|XT2093DL|XT2093-[37]`),
		regexp.MustCompile(`(?i)moto g power \(XT2041DL\)`),
		regexp.MustCompile(`(?i)moto g power \(2021\)`),
		regexp.MustCompile(`(?i)moto g power \(2022\)`),
		regexp.MustCompile(`(?i)moto g 5G \(2022\)`),
		regexp.MustCompile(`(?i)moto g\(?40\)? fusion|PANV000[159]IN`),
		regexp.MustCompile(`(?i)PANB001[35]IN|PANB0001IN`),
		regexp.MustCompile(`(?i)moto g\(?60\)?s`),
		regexp.MustCompile(`(?i)moto g(\d+)\((\w)\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) \(XT1925DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) forge`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) optimo \(XT1952DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) optimo maxx\(XT1955DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) power lite`),
		regexp.MustCompile(`(?i)moto g\(([0-9]|10)\) power`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) supra`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) plus`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) play`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\)`),
		regexp.MustCompile(`(?i)moto g(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)moto e\(?([0-9]+)\)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)moto x\(?(4+)\)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)moto(?:rola)? one 5G`),
		regexp.MustCompile(`(?i)Moto MAXX|XT1225`),
		regexp.MustCompile(`(?i)Moto ([CGEXZ]) ?\(([a-z0-9]+)\)( Plus| Play)?`),
		regexp.MustCompile(`(?i)Moto ?([CGEXZ])([0-9]+)( Plus| Play)?`),
		regexp.MustCompile(`(?i)(?:Motorola-)?Moto[ _]?([CGEXZ])([ _](?:Plus|Play))?`),
		regexp.MustCompile(`(?i)Moto(?:rola)?[- _]F100`),
		regexp.MustCompile(`(?i)razr \(?(202[02])\)?`),
		regexp.MustCompile(`(?i)MOTORAZR[ _-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MOTORIZR[ _\-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)motorola razr (40) ultra`),
		regexp.MustCompile(`(?i)motorola razr (40)`),
		regexp.MustCompile(`(?i)Motorola[ _-]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Moto[ _-]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)MOT[O]?[_-]?([a-z0-9.]+)`),
		regexp.MustCompile(`(?i)DROID ?([a-z0-9 ]*) Build`),
		regexp.MustCompile(`(?i)DROID ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 ((?:E378i|L6|L7|V3)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(XOOM [^;/]*)Build`),
		regexp.MustCompile(`(?i)(MZ[0-9]{3})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:ME|MB|XT)[0-9]{3,4}(?:\(Defy\))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOVIC|F4502`),
		regexp.MustCompile(`(?i)MOVIC[ -]K(2)`),
		regexp.MustCompile(`(?i)MOVIC[ -]W([2345])`),
		regexp.MustCompile(`(?i)M(?:8421|9101[AB]|910[36]|841[4568]|8601)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(\d{4}[AB]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MH-T6000|MT-T8B22|MT-T800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MT-T8(00|B22)`),
		regexp.MustCompile(`(?i)(?:MPQC|MPDC)[0-9]+|PH(?:150|340|350|360|451|500|520|544|604)|(?:MID(?:7C|74C|82C|84C|801|811|701|711|170|77C|43C|102C|103C|104C|114C)|MP100i OCTA|MP(?:843|717|718|1010|7007|7008|843|888|959|969|QCG(1[01]|77)(?: 3G)?)|MGP7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:MPQC|MPDC)[0-9]+[^/;)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)MP100i OCTA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MPQCG10(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID(?:7C|74C|82C|84C|801|811|701|711|170|77C|43C|102C|103C|104C|114C)|MP(?:843|717|718|1010|7007|7008|843|888|959|969|QCG(?:11|77))|MGP7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PH(?:150|340|350|360|451|500|520|544|604))`),
		regexp.MustCompile(`(?i)MultiPOS[ _]?(X9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]|ML-TI-MS|(?:MS50[LGXM]|M7[_-]3G[_-](?:PLUS|QC_3|QUAD_CORE)|MS5\.V2|M9-3G|MS45S_A6|ML([02]1|12)-M7s[- ]?Quad-?Core| ML01-M7-SD|MS45S|MS50S|MS60[XZ]|M7SQC_Plus|MS80X|MS40[GS]|MS55M|MS70|M7_3G_A10|M7_3G|M7S_PLUS|M10A?_3G|M7-3G QUAD CORE|M7s_?Lite|M[79]_WIFI|ML-(?:SO|WI)-M9-3G|M10A-Lite|M10_4G_PRO|MS50L?_4G|MS60F(?:_PLUS)?|MS45S_A6_(?:Teen|Senior)|MLX8|ML-WI-M7_3G_PLUS|KIDPAD_LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]([EFG])[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]F[_ ]Pro[ _]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G[_ ]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]GMAX_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G_?MAX_2_SE`),
		regexp.MustCompile(`(?i)Multilaser[ _]G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G[ _]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]E[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]([H])[_ ]5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]([FEH])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MS60F_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS50[LGXSM]|MS45S_A6|MS40[GS]|MS55M|MS60F|MS70|MS60[XZ]|MS45S|MS80X|MS50L?_4G|MS5\.V2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ML-WI-)?M7[_-]3G[_-]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M([79])_WIFI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M10_4G_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7SQC_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7-3G_QC_3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7-3G[ _]QUAD[ _]CORE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML([02]1|12)-M7s[- ]?Quad-?Core(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7s_?Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML01-M7-SD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M10A-Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ML-(?:SO|WI)-)?M9-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7_3G_A10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLX8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(10A?|7)_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KIDPAD_LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML-TI-(MS\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MP01A3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyGica[_ ]`),
		regexp.MustCompile(`(?i)HDR (Quad Core|Smart TV) Box`),
		regexp.MustCompile(`(?i)ATV(19[60]0|495 Pro 16G)`),
		regexp.MustCompile(`(?i)MY MOBILE (708)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyPad[ _][^;/)]+( Build|[);])|MyPhone ?(?:A888|A919 Duo|Agua (?:Infinity|Rio ?(?:Fun|Lite)?)|MY27|Rio (?:2 ?(?:Fun|Lite)?|Pixie)|UNO)|my(?:A(?:10|[789])|T[356]) DTV|myWX1 Plus|myXI1(?:[ _](?:Plus|Pro))?|my(?:G1|XI3|NX1|X12|X[23589]|A1[0-35-8]|29S|807)|Brown [12]|A898 DUO`),
		regexp.MustCompile(`(?i)myT([356]) DTV`),
		regexp.MustCompile(`(?i)myA([789]|10) DTV`),
		regexp.MustCompile(`(?i)myXI1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myXI1 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myXI([13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)my(A1[0-35-8]i?|G1|NX1|X[23589]|X12|29S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myWX1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Brown 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)brown 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyPhone[ _]([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)MyPad[ _]([^;/(]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:MyTAB[ _-](?:8 MINI Dual Core|U55GT)|U103GT1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyTAB[ _-]8 MINI Dual Core(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyTAB-U55GT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U103GT1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyWigo[ _]([^;/)]+)( Build|\))`),
		regexp.MustCompile(`(?i)MygPad[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(MOVE_S201)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (Myria[_ ][^/;]+|502M|Cozy|Easy tab 9|Grand|Compact_E2_Plus)(?: Build|[;)])|Myria_FIVE|Myria_Grand_4G|Myria_Wide_2|Myria_Wide_4G`),
		regexp.MustCompile(`(?i)(502M|Grand|Compact_E2_Plus)`),
		regexp.MustCompile(`(?i)(Cozy|Easy tab 9)`),
		regexp.MustCompile(`(?i)Myria[_ ]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(E70 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYSTERY|(MID-(?:123G|72[12]|7[01348]3G|753G|8[23]3G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MID-(123G|72[12]|7[01348]3G|753G|8[23]3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYSTERY[_ ]TV[_ ](D\d{4}[A-Z]{2}\d{2})`),
		regexp.MustCompile(`(?i)Npad[ _-]?(?:X1?|plus|Air|Pro|Y1|S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Npad[ _-]?plus`),
		regexp.MustCompile(`(?i)Npad[ _-]?Air`),
		regexp.MustCompile(`(?i)Npad[ _-]?Pro`),
		regexp.MustCompile(`(?i)Npad[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:NASCO (?:TANGO 7)|SNAP_PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEC[ _\-]|KGT/2\.0|portalmmm/1\.0 (?:DB|N)|(?:portalmmm|o2imode)/2\.0[ ,]N|(?:PC-T[SE]\d{3}[\w]{2,3}|N-06C|N-02E|LAVIE T11 (?:11QHD1|112K1)|LAVIE Tab E (?:10|8)FHD[12]|7SD1|8HD1|LAVIE Tab (?:10FHD3|T12 12QHD1))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N-06C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEC[ _\-]|KGT/2\.0 )([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/1\.0 ((?:DB|N)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:portalmmm|o2imode)/2\.0[ ,](N[a-z0-9]+)`),
		regexp.MustCompile(`(?i)LAVIE Tab E ((?:10|8)FHD[12]|7SD1|8HD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE Tab 10FHD3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE Tab T12 12QHD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE T11 (11QHD1|112K1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE T7 (7SD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE T8 (8HD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PC-TE(\d+)`),
		regexp.MustCompile(`(?i)PC-TS(\d+)`),
		regexp.MustCompile(`(?i)(?:NEKO_(?:W_)?LT[-_](\w+)|LT-\d{2}N(?:[HF]8020S|X8001S|F7021S))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEKO_)?(?:W_)?LT[-_](\w+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NETWIT_([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)Nevir,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(MXQ|MXQ-Pro)-NEXBOX|NEXBOX-([^) ]+)`),
		regexp.MustCompile(`(?i)NEXBOX-([^) ]+)`),
		regexp.MustCompile(`(?i)NEXON[ _](X[1235]\+|X[123589]|X10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Discovery_XT|Revolution-X69K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NG3128HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NGM[_ ][a-z0-9]+|(Forward|Dynamic)[ _]?[^/;]+(?:Build|/)|Smart5Plus32GB|Android 5(?:[\d.]*);(?: [\w-]+;)? (?:P50[89]|P55[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P(50[89]|55[01])`),
		regexp.MustCompile(`(?i)(Forward|Dynamic)[ _]?([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(Forward|Dynamic)[ _]?([^/;]+)/`),
		regexp.MustCompile(`(?i)NGM ([^;/]+) Build`),
		regexp.MustCompile(`(?i)NGM_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Android 4(?:[\d.]*);(?: [\w-]+;)? (3188HD)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)NINETOLOGY[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:NOA-)?NOA[ _]|Hummer(?:_2019_R|LE)|NextSE|Vivo 4G_r|SPRINT4G|SparkSE`),
		regexp.MustCompile(`(?i)NOA[_ ]CORE[_ ]FORTE`),
		regexp.MustCompile(`(?i)NOA[_ ]Hummer[_ ]Lite`),
		regexp.MustCompile(`(?i)NOA[_ ]HUMMER`),
		regexp.MustCompile(`(?i)NOA[_ ]MOVEse`),
		regexp.MustCompile(`(?i)NOA[_ ]NEXT`),
		regexp.MustCompile(`(?i)NOA[_ ]VISION[_ ]H3SE`),
		regexp.MustCompile(`(?i)NOA[_ ]VISION[_ ]H3`),
		regexp.MustCompile(`(?i)NOA[_ ]LOOP`),
		regexp.MustCompile(`(?i)(?:NOA-)?NOA[_ ]H4se`),
		regexp.MustCompile(`(?i)NOA[_ ]Mg12`),
		regexp.MustCompile(`(?i)NOA[_ ]H44SE`),
		regexp.MustCompile(`(?i)NOA[_ ]H10LE`),
		regexp.MustCompile(`(?i)NOA[_ ](M108K|P497)`),
		regexp.MustCompile(`(?i)(?:NOA[_ ])?Vivo 4G_r`),
		regexp.MustCompile(`(?i)NOA[_ ]([^;)/ ]+)`),
		regexp.MustCompile(`(?i)SMART_VOLT_NX5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NOGAPC (?:LIVE|PRO)|NOGAPAD ?(?:7G|10\.1GHD|10HD))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPAD ?7G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPAD ?10\.1GHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPC PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPC LIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Bonvi Note|Bonvi Prime|Bonvi Pro|Borneo_Pro|Vi_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HB-(2000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_|(?:(?:N(500[12]|550[12]|570[24]|6001)L|S(?:5501|5701|600[13]|6303|6501|6512)L|T080[12]L)|A6L-[CG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T080[12]L`),
		regexp.MustCompile(`(?i)NUU_A([13]L?)`),
		regexp.MustCompile(`(?i)NUU_M([32])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_X5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NUU_)?(N5001L|A6L-[CG]|Q500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NYX[ _]|(?:GLAM|ARGON|TQ14|GO-X|orbis)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NYX[_ ]ALTER`),
		regexp.MustCompile(`(?i)NYX[ _]REX`),
		regexp.MustCompile(`(?i)(TQ14|GO-X)`),
		regexp.MustCompile(`(?i)(?:DMTAB-(?:IN08A|NV08B|NV2[04]A)|NBTY07SMKG|NBFP07PMKG|SNB02-NV7A|NABI2-NV7A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DMTAB-(?:IN08A|NV08B)`),
		regexp.MustCompile(`(?i)DMTAB-NV(2[04])A`),
		regexp.MustCompile(`(?i)android 7(?:[\d.]*);(?: [\w-]+;)? (?:F101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NAOMIPHONE Ambar|DAMMAR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAOMIPHONE Ambar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DAMMAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NX-32THS100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEXO (?:Smarty|handy|SMART DUO|Evo)|MOVIO 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP-752Go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NeoTab)[ _-]((?:S1[23]0|S125|H85|H11[05]|KID741|S9700))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _]|(?:T737PRO|T505PRO|T500 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NAVITEL[ _])?(T70[07]|T500) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _](T757)LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _](A73[0157]|A650)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T(505|737)PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RE900 Full HD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ]|(?:Vision_Tab_(?:7|10)|Pure Micro|Superme_Max|Raptor3G8GB|Predator (?:10|3G)|Platinum[_ ]?10[_ ]?3G(?:_V2|2019)?|Supreme[_ ](?:Fine(?:[_ ]Micro)?|Chief|Pure|Pro)(?:[_ ](?:Mini|Plus))?|T400 3G 2017|Spirit_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M505 LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F552|D504)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Superme_Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine_Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine_Micro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Fine[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Chief(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Pure[ _]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme Pure(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure Micro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spirit_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ]Infinity(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ](D405)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Platinum[ _]10[ _]3G(_V2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Platinum103G2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Orpheus[ _]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon_)?Predator[_ ](3G|10|7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Raptor3G8GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vision_Tab_(7|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M002[DGQK]-2|M002N|M002N-3T|M002W-2T|6M-3T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEDAPHONE[ _](V9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neffos|(TP601[ABCE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:C57|TP601[ABCE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neffos[_ ]Y50`),
		regexp.MustCompile(`(?i)Neffos[_ ]((?:[YNCXA])[0-9][A-Z]?(?: Max| Lite| Plus)?)`),
		regexp.MustCompile(`(?i)NEO, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Neolix[ _-]`),
		regexp.MustCompile(`(?i)Neolix[ _-]T7[_ ]`),
		regexp.MustCompile(`(?i)Neolix[ _-]1-C-`),
		regexp.MustCompile(`(?i)Neolix[ _-]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)NEO[ ]?(90[689])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NQT-(?:101|7)[34]GIQ|NQT-7W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NQT-101([34])GIQ`),
		regexp.MustCompile(`(?i)NQT-7([34])GIQ`),
		regexp.MustCompile(`(?i)KT1007_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NETBOX-Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NETBOX-ShineS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NM-NETPAD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NIM-(450D|550O|[56]00Q)`),
		regexp.MustCompile(`(?i)neutab ?k1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)neutab ?k1`),
		regexp.MustCompile(`(?i)NB (RunIQ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NBTB10[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEWAL[_ ]?([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)NEWGEN\-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NLS-(?:MT90|NFT10|MT65)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Newman[ _](P308|K1|G5i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CarPad-(?:II|III)-P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Newsday[_ ](E1|A[12]|N2\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexa[ _](?:Atlas|Vega N1)`),
		regexp.MustCompile(`(?i)Nexa[ _](Vega N1)`),
		regexp.MustCompile(`(?i)Nexa[ _](Atlas)`),
		regexp.MustCompile(`(?i)S?Nexian`),
		regexp.MustCompile(`(?i)S?Nexian[ ]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)S?Nexian-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)^NEXT |MyBox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyBox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Next[0-9]|NX(?:785QC8G|M900MC|008HD8G|010HI8G|M908HC|M726|16A8116K|A8QC116|A8LTE116|16A10132S|16A11264|A116QC164|A101LTE116)|(?:BRT81)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BRT81)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Next([0-9]+[^;/]+) Build`),
		regexp.MustCompile(`(?i)TAB (A40[13]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nextbit|(?:Robin)(?: Build|\))`),
		regexp.MustCompile(`(?i)(Robin)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOAIN[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)NOAIN[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)Nobby[ ](S500|X800(?: Pro)?|S300(?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Noblex|NBX-|(?:A[56]0UNS|T7A6INC|T7A6N)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:Noblex|NBX)[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Noblex|NBX)[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(A[56]0)UNS`),
		regexp.MustCompile(`(?i)(T7A6INC|T7A6N)`),
		regexp.MustCompile(`(?i)Nokia|Lumia|Maemo RX|portalmmm/2\.0 N7|portalmmm/2\.0 NK|nok[0-9]+|Symbian.*\s([a-z0-9]+)$|RX-51 N900|TA-[0-9]{4}|N(?:1374|1530|15[01256])DL|ARM; 909`),
		regexp.MustCompile(`(?i)TA-10(07|23|29|35)`),
		regexp.MustCompile(`(?i)TA-10(20|28|32|38)`),
		regexp.MustCompile(`(?i)TA-10(24|27|44|53)`),
		regexp.MustCompile(`(?i)TA-10(00|03|21|25|33|39|54)`),
		regexp.MustCompile(`(?i)TA-10(04|12|52)`),
		regexp.MustCompile(`(?i)Nokia 6\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 5\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 3\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 2 V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nokia[_ ]Xplus`),
		regexp.MustCompile(`(?i)N15[26]DL`),
		regexp.MustCompile(`(?i)Nokia ?X2DS`),
		regexp.MustCompile(`(?i)(?: )?(Nokia500|nokiaasha500(?:dualsim)?)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia5130c(?:-2)?`),
		regexp.MustCompile(`(?i)Nokia8800e?`),
		regexp.MustCompile(`(?i)Nokia808 ?PureView`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})c(?:-)?`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})s(?:-)?`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4}) V Flip`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})`),
		regexp.MustCompile(`(?i)(?: )?Nokia([235][0-9]{2})(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia([CEX]-?[0-9]{1,2}i?)-[0-9]{1,2}u?(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia;? 520T`),
		regexp.MustCompile(`(?i)RM-91[45]`),
		regexp.MustCompile(`(?i)RM-997|Nokia 526`),
		regexp.MustCompile(`(?i)RM-97[68]`),
		regexp.MustCompile(`(?i)RM-97[45]`),
		regexp.MustCompile(`(?i)NOKIA;? 710`),
		regexp.MustCompile(`(?i)Nokia;? 720T`),
		regexp.MustCompile(`(?i)RM-103[89]`),
		regexp.MustCompile(`(?i)Nokia;? 800C`),
		regexp.MustCompile(`(?i)Nokia;? 800`),
		regexp.MustCompile(`(?i)Nokia;? 900`),
		regexp.MustCompile(`(?i)(RM-82[12]|Nokia;? 920)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)(RM-89[23]|RM-910|Nokia;? 925)(?: Build|[a_);/])`),
		regexp.MustCompile(`(?i)(ARM; 909|NOKIA;? 909|NOKIA; id300)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)NOKIA;? 1520\.1`),
		regexp.MustCompile(`(?i)Nokia T([12]0|21)`),
		regexp.MustCompile(`(?i)Streaming (Stick 800|Box 8000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nokia ([A-Za-z0-9\. ]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Nokia(N[0-9]+)`),
		regexp.MustCompile(`(?i)Nokia-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NOKIA; ([a-z0-9\- ]+)`),
		regexp.MustCompile(`(?i)NOKIA[ _]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)NOKIA/([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(Lumia [a-z0-9\-]+ XL)`),
		regexp.MustCompile(`(?i)(Lumia [a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Maemo RX-51 ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NokiaInternal|Nokia-WAP-Toolkit|Nokia-MIT-Browser|Nokia Mobile|Nokia Browser|Nokia/Series`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 (N7[37]|NK[a-z0-9]+)`),
		regexp.MustCompile(`(?i)nok([0-9]+)`),
		regexp.MustCompile(`(?i)Symbian.*\s([a-z0-9]+)$`),
		regexp.MustCompile(`(?i)Nomi[ _-]|(C101010 Ultra2|i501[234]|i5032|i50[537]0|i5031|i55[13]0|i5532|C0(700(?:[02358]|2HD)|7850)|C1010[0-3]|i(?:50[0158]|450|40[01]|55[02])|i504 Dream|AB5116-01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i501[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i506(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i6030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I5070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[_ ]I4070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i4510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i4500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[_ ]i5511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i5710(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i508(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi[ _])?i(50[015]|450|40[01]|55[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i507(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi[ _]i504|i504 Dream)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _](\w+)[ _]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AB5116-01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101040`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101030`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101014`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101034`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101044`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070010`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070020`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070011`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070030`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070014L`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C0700[13]4`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070044`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080010`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080034`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080014`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C07008`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C10105`),
		regexp.MustCompile(`(?i)(?:Nomi[ _])?(C0(?:700(?:[0235]|2HD)|7850|9600)|C1010[0-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Nomi[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:Nomu[ _-](?:T18|S30mini|S10)|(?:V1600S|S10 PRO|S50_Pro)|LMCV1|Xeno V1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]T18(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]s10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]S30mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMCV1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S([15]0)[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1600S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Xeno V1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y-(?:4301|4001)-FHD-R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NORDMENDE[ _;,]`),
		regexp.MustCompile(`(?i)NORDMENDE[_ ](43NM6000F|55NM6000U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NT-TP10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nos (?:FIVE|NOVU|NEVA|Roya)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS FIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NEVA 80(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS Roya(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A063|AIN065|A065|A142)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A(?:IN)?065`),
		regexp.MustCompile(`(?i)(?:NS(?:[356]|500[2-68]|5511|5502)|NS 5511)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NS 5511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NS[0-9]{1,4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPYBOXS11_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPYBOXS11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NWX-40F171MSY|NVX-32H219MSY|NVX-43U329MSY|NVX-39H211MSY|NWX-43F149MSYv?|NWX-24H121MSY|NWX-24H121WSY|NWX-32H171MSY|NVX-55U321MSY|NVX-50U329MSY|NWX-65U169TSY-A|NVX-65U321MSY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Novey|(?:Pro K10|(?:Force (?:F15|G20)|Alpha A10))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Force (F15|G20)`),
		regexp.MustCompile(`(?i)Novey (L2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NoviSea[ _](A10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO \[Reloaded\](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TM800A620M|TM101A620M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nubia[ _]|(?:NX(?:403A|404H|406E|40[X2]|503A|50[5678]J|51[0123]J|521J|523J_V1|529Jq?|5[345]1J|5[48]9J|569[HJ]|5[67]3J|575J|59[157]J|60[1689]J|61[12679]J|62[79]J|65[19]J|6[126]9J|66[67]J|679[JS]|70[129]J|71[123]J|72[19]J|769J|709S|907J)|NP01J|Z2352N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NX679[JS]`),
		regexp.MustCompile(`(?i)NX40[X2]`),
		regexp.MustCompile(`(?i)NX(403[AE]|406E|404H)`),
		regexp.MustCompile(`(?i)(NX5[12]1J|Nubia Z9 mini)`),
		regexp.MustCompile(`(?i)(NX510J|Nubia Z9 Max)`),
		regexp.MustCompile(`(?i)(?:NX549J|Nubia Z11 mini S)`),
		regexp.MustCompile(`(?i)(?:NX529Jq?|Nubia Z11 mini)`),
		regexp.MustCompile(`(?i)NX569[HJ]`),
		regexp.MustCompile(`(?i)NX6(?:08|17)J`),
		regexp.MustCompile(`(?i)Nubia[_ ]([^;)/]+)( build|[;)])`),
		regexp.MustCompile(`(?i)Nuvo[_ ](NS35|Blue ND40|Green[_ ]ND[_ ]45)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nuvo[_ ](NS35)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blue (ND40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Green[_ ]ND[_ ]45(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NVIDIA|SHIELD|Tegra(Note-P1640| Note 7)|wx_na_wf|wx_un_do`),
		regexp.MustCompile(`(?i)wx_na_wf|wx_un_do`),
		regexp.MustCompile(`(?i)(SHIELD Tablet(?: K1)?|Tegra Note 7)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)SHIELD Andr[o0]id TV`),
		regexp.MustCompile(`(?i)O\+[ _](Presto 700 LTE|FAB GO|360|8\.(?:3[178]z|[15]2|37y|3[38]|9[12378]|1[75]|6)|Air|Grande|Crunch|Ultra|Xfinit|Upsized|Venti|EVO 4G|Sonic|360[ _]ALPHA[ _]PLUS[ _]2\.0|360[ _]HD[ _]2\.0|Stream HDTV)`),
		regexp.MustCompile(`(?i)O\+[ _](Presto 700 LTE|Grande|Crunch|Ultra 2\.0|Xfinit|Ultra Lite|Ultra|Sonic|Upsized|Venti 4G|EVO 4G|8\.(?:3[178]z|37y|3[38]|[15]2|9[12378]|1[75]|6))`),
		regexp.MustCompile(`(?i)O\+_AIR`),
		regexp.MustCompile(`(?i)O\+[ _]360[ _]HD[ _]2\.0`),
		regexp.MustCompile(`(?i)O\+[ _]360[ _]HD`),
		regexp.MustCompile(`(?i)O\+[ _]360[ _]ALPHA[ _]PLUS[ _]2\.0`),
		regexp.MustCompile(`(?i)O\+[ _]360 ALPHA Plus`),
		regexp.MustCompile(`(?i)O\+[ _]360 ALPHA`),
		regexp.MustCompile(`(?i)O\+[ _]360`),
		regexp.MustCompile(`(?i)O\+ Stream HDTV`),
		regexp.MustCompile(`(?i)O\+ FAB GO`),
		regexp.MustCompile(`(?i)Xda|O2[ \-]|COCOON`),
		regexp.MustCompile(`(?i)O2 TV Box(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Xda[ _][a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(COCOON)`),
		regexp.MustCompile(`(?i)O2-(X[12]i|X4)`),
		regexp.MustCompile(`(?i)O2 ([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)O2-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(TEG9300)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OINOM[_ ](V9D|V7H|V[679])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GEN-10|GT1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OKWU SIGMA|PI[_ ]Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PI[_ ]Plus`),
		regexp.MustCompile(`(?i)OLTO[_-]|(?:43ST20[HU]|32ST30H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OLTO-)?(\d{2}ST\d{2}[HU])`),
		regexp.MustCompile(`(?i)OMIX[ _.]|(?:X600 NFC|Android 1[12](?:[\d.]*);(?: [\w-]+;)? X[467]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X(\d*)`),
		regexp.MustCompile(`(?i)onn\.|Onn 2k|(100071481A|ONA19TB00[327]|10000356[12]|100110603|10000520[6-9]|O8HD|100011886A|10001188[56]|100015685-[AE]|100026191|100043279|100044018G|10007148[1356]|TBBVNC10000520[78]|100092980A|100135925)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(100092980A|100071481A|ONA19TB00[327]|10000356[12]|10000520[6-9]|O8HD|100011886A|10001188[56]|100015685-[AE]|100026191|100043279|100044018G|10007148[1356]|TBBVNC10000520[78]|100110603|100135925)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(4K Streaming Box)`),
		regexp.MustCompile(`(?i)ONVO[ _]|Apollo Premium4K TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONVO_(32OV6000H|42OV6000F|55OV6000U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Apollo Premium4K TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KON_TIKI(2)?|Nova3Color|GoColor7|Lomonosov|Poke2Color|NovaAirC|NoteAir2P?|TabUltraCPro|LIVINGSTONE[23]|MC_FAUST[23]|DARWIN[9X]|MC_DARWIN[678]|MC_GAMA4|MC_Cristo4|MC_NovaPro|NoteAir3C|VOLTA[45]|Kon_Tiki3|FAUST[56]|GALILEO|Poke3|KANT2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOLTA([45])`),
		regexp.MustCompile(`(?i)KON_TIKI([23])?`),
		regexp.MustCompile(`(?i)(?:MC_)?FAUST([2356])`),
		regexp.MustCompile(`(?i)(?:MC_)?DARWIN([6789X])`),
		regexp.MustCompile(`(?i)LIVINGSTONE([23])`),
		regexp.MustCompile(`(?i)(?:OB-)?OPPO[ _]?([a-z0-9]+)|Reno Ace|N1T|R8001|R820[16]|A101OP|OPG0[1-4]|A00[12]OP|(?:X90[07][0679]|U70[57]T?|X909T?|R(?:10[01]1|2001|201[07]|6007|7005|7007|80[13579]|81[13579]|82[01379]|83[013]|800[067]|8015|810[679]|811[13]|820[057]|15 Neo)[KLSTW]?|N520[79]|N5117|A33[wf]|A33fw|A37fw?|PAAM00|A303OP|PAAT00|PAC[TM]00|R7kf|R7plus[fmt]?|A1601|CPH[0-9]{4}|CPH19(69|79|23|1[179])|PB(A[TM]00|CT10|BT30|CM[13]0|[FD]M00)|P(E[RFHG]M\d{2}|E[GH]T\d{2}|DAM10|ADM00|AF[TM]00|ADT00|AHM00|BBM[03]0|BBT00|BDT00|BFT00|[CB]E[MT]00|CA[MT]00|C[CDG]M00|CA[MT]10|[CD]PM00|CRM00|CDT00|CD[TM]10|CHM[013]0|CKM[08]0|CLM[15]0|DEM[13]0|DHM00|D[RK][TM]00|DPT00|DB[TM]00|DCM00|[CD]NM00|DVM00|DY[TM][12]0|DNT00|EA[TM]00|CRT01|EDM00)|PFDM00|PEG[MT]10|PEM[MT][02]0|PDCT00|PDET10|PDS[TM]00|PEC[MT]30|PE[QYPEXNLU]M00|PCHT[13]0|PCRT00|PFGM00|PF[VU]M10|A102OP|PFCM00|PFJM10|PGCM10|PECM20|PDAT10|A103OP|PCCT00|PFTM[12]0|PFFM20|OW19W[123]|OW20W1|PGJM10|PGAM10|PF[EF]M10|Reno[4567]|Find X[23]|Find N| R7sf| 1201|[56].*; (?:R7[gf])|OPD(?:210[12]A?|2201|230[12])|PFZM10|PGIM10|A1603|A201OP|PESM10|PGBM10|PH[WQJMU]110|PH[AY]120|PGGM10|PG[WX]110|PGU110|PCCM40|CHP1723|PGT110|PGEM10|RX17Neo|R15 Dream Mirror|R9 Plustm A|PGFM10|A301OP|P(?:J[CGJSU]|H[FVSTNYZ])110|K9 Pro 5G| K9[xs]|CPH1821EX|PJ[HYBVRW]110|PKA110|CHP2219|RX17Pro|F7 Youth|A302OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCH[TM]10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHQ110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PJY110|CPH2665|CPH2639`),
		regexp.MustCompile(`(?i)PCHT30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2083|CPH2077)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2179)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2271)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2349|CPH2351`),
		regexp.MustCompile(`(?i)CPH22(?:69|75)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(CPH1837|PAD[TM]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A37f(w)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A37f(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2579(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PESM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH20(?:81|73|31|15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2137(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH18(?:0[35]|53)|PBBM30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1809|PBA[TM]00|PBBT30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH19(?:3[13]|43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEC[MT]30|PECM20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDVM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEFM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDA[TM]10|CPH2069|CPH2061)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH(?:2127|213[19])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2135(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2321(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2195|OPG02|CPH2303)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2239|CPH2241)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2273(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEM[MT][02]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A102OP|CPH2309)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH170[15]|CPH2407)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PFTM20|CPH2387`),
		regexp.MustCompile(`(?i)CPH19(?:09|1[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH190[15]|PBF[TM]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1717(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDY[TM]20|CPH2067)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH(?:2161|2099)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CHP|CPH)2219(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2263(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDY[TM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1715)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2339|CPH2385)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2495|CPH2483)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2565`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A79kt`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH255[37]|A303OP)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2473`),
		regexp.MustCompile(`(?i)PCD[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PBBT00|PBBM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDBM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1729(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1827(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PCA[TM]10|CPH193[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CPH1937|CPH1941|PCHM30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCPM00|CPH20[02]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2059(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDK[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEH[MT]00|CPH212[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PFGM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2203|CPH2333)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2197)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2365|PELM00`),
		regexp.MustCompile(`(?i)PCE[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1903(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2455|CPH2461`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X9009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH191[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH19(?:69|87)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2095`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2119)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A1601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1613(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH172[37]|CHP1723)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1725(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH18(?:[15]9|21|21EX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1825|CPH1881)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1823(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2223(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2285|F19 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2213(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X909T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R827T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X907[067](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X900[067](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PEUM00`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?Find N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PGU110|CPH2439)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2437|PGT110)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2519|PHT110)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PHN110|CPH2499)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R815[TW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8015(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R821T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?U707T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?U705T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH187[15]|PAF[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PAHM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDE[TM]10|CPH2023)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2005|Find X2 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDEM30|OPG01|CPH2025|Find X2 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEDM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Find X3 Neo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEEM00|CPH2173|OPG03|Find X3 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Find X3 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2307|PFFM10`),
		regexp.MustCompile(`(?i)CPH2305|PFEM10|PFFM20`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R1011 Build`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PBC(?:M30|T10))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1955(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PCNM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PCLM50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PERM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGCM10| K9x(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGGM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PERM10| K9s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2373`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PGJM10|CPH2337)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGIM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PJC110`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PHS110`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PJG110`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PHF110`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PJR110`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?N5117(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?N520[79](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R831T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R831K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:R831[SL]|1201)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A33[wf](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A33fw(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8113(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R11 Plusk?t?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R8001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R820[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1721|R11s Plust?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1719|R11st?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1835|PAC[TM]00|PAAM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH183[13]|PAAT00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PBCM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1879|PBE[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1893)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1877|PBD[MT]00|RX17Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R800[07](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R810[679](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7kf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7sPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7sf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7[gf](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7Plus[mt]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7Plusf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:X9079|R9 Plustm A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1607|R9sk)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1611|R9s Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1917|PCA[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1983(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1919|PCCM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2525|PHV110|A302OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2521|PHU110`),
		regexp.MustCompile(`(?i)PJJ110|CPH2607`),
		regexp.MustCompile(`(?i)CPH2599|PJH110`),
		regexp.MustCompile(`(?i)PJ[VW]110`),
		regexp.MustCompile(`(?i)(?:PCKM00|CPH1907)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1989(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCKM80|CPH1945|CPH1951)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2043|PDCT00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2013|A002OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDCM00|A001OP|CPH2048)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCR[MT]00|CPH203[567]|CPH2009)`),
		regexp.MustCompile(`(?i)PCRT01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2113(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2125(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDP[TM]00|CPH2091)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEA[TM]00|Reno4 SE 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDN[TM]00|CPH2089)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2065|Reno4 Z 5G`),
		regexp.MustCompile(`(?i)CPH2209(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2159|Reno5 4G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:CPH2199|A10[13]OP)|Reno5 A 5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)CPH2205|Reno5 Lite(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:PEG[MT]00|CPH2145|Reno5 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEG[MT]10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2217(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2211|Reno5 Z 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDS[TM]00|CPH220[17]|Reno5 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDR[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1921|PCCM40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2235|PEQM00|CPH2251|Reno6 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2237|Reno6 Z 5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)PEPM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH224[79]|Reno6 Pro 5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)PENM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PFJM10|CPH2371|CPH2363|Reno7(?: Build|[;)])`),
		regexp.MustCompile(`(?i)CPH2353|OPG04|A201OP`),
		regexp.MustCompile(`(?i)PFCM00|Reno7 SE(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:PFDM00|CPH2293|Reno7 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH235[79]|PGAM10`),
		regexp.MustCompile(`(?i)CPH2481|CPH2505`),
		regexp.MustCompile(`(?i)CPH2523|A301OP`),
		regexp.MustCompile(`(?i)(?:PEYM00|K9 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEXM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCLM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDHM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCGM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1979|PCD[TM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A59st(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPPO ?(CNM632)`),
		regexp.MustCompile(`(?i)OPD2102A?`),
		regexp.MustCompile(`(?i)OW19W[13]`),
		regexp.MustCompile(`(?i)N1T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R([0-9]{3,4}[KSTW]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CPH[0-9]{4})`),
		regexp.MustCompile(`(?i)(?:OB-)?OPPO[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:Spider 8|S60Pro|MODERN 8|PILOT 2|FLAT 1C|Tiger 1[02]|android 13(?:[\d.]*);(?: [\w-]+;)? (?:Pad 1[158]|Pad 8)|android 12(?:[\d.]*);(?: [\w-]+;)? (?:C[678]0|C30 Pro|Pad (?:[167]0|13)))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tiger (1[02])`),
		regexp.MustCompile(`(?i)(C[678]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pad ([167]0|1[1358]|8)`),
		regexp.MustCompile(`(?i)OTTO (CR05)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OUJIA(?:2018)?[-_ ]S20`),
		regexp.MustCompile(`(?i)OUJIA[ _](S10|S8|S11|T50|S2[79]|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ox-([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Ox-p010-2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OYSIN[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Apex(?:[123])|CC1 PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CC1) PRO`),
		regexp.MustCompile(`(?i)Apex([123])`),
		regexp.MustCompile(`(?i)(?:Tab_A6|A13_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab_(A6)`),
		regexp.MustCompile(`(?i)(A13)_EEA`),
		regexp.MustCompile(`(?i)(?:OBA_?(?:SMART_3|Conecta_Max|Conecta_4G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBA_(Conecta_(?:Max|4G))`),
		regexp.MustCompile(`(?i)OBER[_ ](Primo E8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Obi[ _-]|(?:(?:SJ1\.5|SJ2\.6|S(400|452\+|45[13]|50[127]|503\+?|520|55[01])|falcon)|SJ1-5|SJ[23]\.2| SF1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SJ(\d)[.-](\d)`),
		regexp.MustCompile(`(?i)(?:Obi_)?S400`),
		regexp.MustCompile(`(?i)(?:Obi_)?S451|falcon`),
		regexp.MustCompile(`(?i)(?:Obi_)?S452\+`),
		regexp.MustCompile(`(?i)(?:Obi_)?S453`),
		regexp.MustCompile(`(?i)(?:Obi[_ ])?(SF1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Obi_)?S501`),
		regexp.MustCompile(`(?i)(?:Obi_)?S502`),
		regexp.MustCompile(`(?i)(?:Obi_)?S503\+`),
		regexp.MustCompile(`(?i)(?:Obi_)?S503`),
		regexp.MustCompile(`(?i)(?:Obi_)?S507`),
		regexp.MustCompile(`(?i)(?:Obi_)?S520`),
		regexp.MustCompile(`(?i)(?:Obi_)?S550`),
		regexp.MustCompile(`(?i)(?:Obi_)?S551`),
		regexp.MustCompile(`(?i)(?:Obi_)?S454`),
		regexp.MustCompile(`(?i)Obi[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Obi[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:FIRE_V[78]|POMELO-MAX\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIRE_V([78])`),
		regexp.MustCompile(`(?i)POMELO-MAX\+`),
		regexp.MustCompile(`(?i)ODYS[ _-]|IEOS[_ ]([^/;]+)|NOON(?:_PRO)? Build|SPACE10_(?:PLUS|PRO)_3G|THOR_?10|TAO_X10|RAPID_?(?:10|7)_?LTE|MAVEN_?10_|CONNECT[78]|ELEMENT10_PLUS_3G|XELIO[_0-9P]|PACE_10_LTE|(?:ADM816HC|ADM8000KP|NEO6_LTE|EOS10|AEON|FALCON_10_PLUS_3G|SPACE_ONE_?10(?:SE)?|FUSION|THANOS_10|MAVEN_X10_HD(?:_LTE)?|JUNIOR_8_PRO|JuniorT8Pro|(?:NOVA|PYRO)_X?7_PLUS_3G|UNO_X8|MAVEN_[GT]10(?:_pro)?|MAVEN_7_PLUS|SLADE_X55|XELIO_PRO_10_LTE|GOAL_10_PLUS_3G|NOTOSplus3G|PACE ?10|Titan_10_LTE|PEDI_PLUS_W|NoteTab_Pro|UNO_X10|NERON)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XELIO[_ ]HD10[_ ]LTE`),
		regexp.MustCompile(`(?i)XELIO[_ ](HD10|A10)`),
		regexp.MustCompile(`(?i)MAVEN_?10_PRO_PLUS_3G`),
		regexp.MustCompile(`(?i)MAVEN_?10_?PLUS`),
		regexp.MustCompile(`(?i)MAVEN_?10_?PRO`),
		regexp.MustCompile(`(?i)MAVEN_?10_?HD`),
		regexp.MustCompile(`(?i)RAPID_?7_?LTE`),
		regexp.MustCompile(`(?i)RAPID_?10_?LTE`),
		regexp.MustCompile(`(?i)THOR_?10 Build`),
		regexp.MustCompile(`(?i)PACE ?10`),
		regexp.MustCompile(`(?i)UNO[_ ]X(8|10)`),
		regexp.MustCompile(`(?i)THOR_?10_PLUS_3G`),
		regexp.MustCompile(`(?i)IEOS[_ ]QUAD[_ ]W`),
		regexp.MustCompile(`(?i)IEOS[_ ]NEXT[_ ]10`),
		regexp.MustCompile(`(?i)IEOS[_ ]QUAD[_ ]PRO`),
		regexp.MustCompile(`(?i)NEO6[_ ]LTE`),
		regexp.MustCompile(`(?i)IEOS[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:ODYS[ _-])?NOON Build`),
		regexp.MustCompile(`(?i)(?:ODYS[ _-])?NOON_PRO`),
		regexp.MustCompile(`(?i)Odys[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)AFTWI001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Okapia|Signature (?:L|Pro|Touch)|(?:MAGIC\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Signature (L|Pro|Touch)`),
		regexp.MustCompile(`(?i)Okapia X1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Okapia[_ ]Mirage(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAGIC\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Okapia[_ ]?Magic(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OK-(?:LS[12]|smart11|LX[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OK-(LS[12]|LX[56])`),
		regexp.MustCompile(`(?i)Olax |Ocean K8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ocean K8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Olax Prime 12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Olkya (Liger 71G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ollee008twoa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TREK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TREK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onda|(?:(?:V820w|V891[w]?|V919(?: 3G)? Air)[ _-]DualOS|(?:V919 4G Air|V989 Air|V972) Core[48]|T2101L2B1C| V10 4G|OBOOK20[_ ]PLUS|OBOOK (?:20 SE|20 DualOS|20 PLUS(?: DUALOS)?)|OBOOK10 SE|V10_4G|V919 Air CH DualOS| T9S|V116w-DualOS|V80[ _]SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?: T9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONDA[ _]MID`),
		regexp.MustCompile(`(?i)V820w[ _-]DualOS`),
		regexp.MustCompile(`(?i)V891W[ _-]DualOS`),
		regexp.MustCompile(`(?i)V891[ _-]DualOS`),
		regexp.MustCompile(`(?i)V919 3G Air[ _-]DualOS`),
		regexp.MustCompile(`(?i)V919 Air[ _-]DualOS`),
		regexp.MustCompile(`(?i)T2101L2B1C|OBOOK 20 PLUS DUALOS`),
		regexp.MustCompile(`(?i)OBOOK[_ ]?20[_ ]PLUS`),
		regexp.MustCompile(`(?i)V10 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V80[ _]SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK 20 DualOS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK 20 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK10 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V10_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([a-z0-9]+)[ _]Onda`),
		regexp.MustCompile(`(?i)Onda ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)X-music II pro|X-music (?:S|Ⅲ|III)`),
		regexp.MustCompile(`(?i)X-music (?:Ⅲ|III)`),
		regexp.MustCompile(`(?i)X-music (S)`),
		regexp.MustCompile(`(?i)OneLern(DB\d{3})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:du_)?ONEPLUS|(?:PGKM10|CPH251[35]|CPH2551|CPH2613|CPH2569|CPH249[31]|CPH244[79]|CPH240[19]|CPH24[12]3|CPH246[579]|CPH2487|CPH241[157]|CPH2419|CPH245[91]|CPH2399|CPH238[19]|CPH258[135]|CPH2573|CPH2611|CPH260[59]|A0001|A200[135]|AC200[13]|A300[03]|A3010|A5000|A600[03]|A601[03]|BE201[1235]|BE202[5689]|E100[135]|GM191[03517]|GM190[0135]|GM192[05]|HD191[0137]|HD190[01357]|HD1925|IN201[013579]|IN202[0135]|KB200[01357]|LE211[01357]|LE212[035]|GN2200|Nord N10 5G|LE210[01]|LE212[17]|DE211[78]|DN210[13]|EB210[13]|MT211[01]|IV2201|NE221[01357]|PG[PZ]110|PH[BKP]110|OPD2203|OPD2304|PJ[ADEFX]110|CPH26(?:19|21))(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:CPH2585|CPH2611|CPH2609)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PJD110|CPH258[13]|CPH2573)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH244[79]|PHB110|CPH2451)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2487(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2551(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PJE110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PJX110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PJF110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHK110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PJA110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGKM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHP110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGP110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGZ110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC200[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2399|CPH2401)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EB210[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH26(?:19|21)`),
		regexp.MustCompile(`(?i)CPH(?:2381|2409)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH246[57](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2569(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH249[13]`),
		regexp.MustCompile(`(?i)BE2012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE201[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DE211[78](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GN2200|CPH2459)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH251[35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2605)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2469(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BE202[69]|Nord N10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DN210[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IV2201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN202[0135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KB2000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OnePlus 8 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IN201[01357]|OnePlus 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE211[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MT211[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE210[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2423(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2411(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH241[3579](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE212[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NE2210(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NE221[1357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GM191[01357]|OnePlus 7 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GM190[0135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HD190[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HD191[0137]|OnePlus 7T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HD1925|GM192[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KB200[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KB2007|OnePlus ?8TMO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A200[135]|OnePlus2`),
		regexp.MustCompile(`(?i)E100[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A3010|OnePlus3T`),
		regexp.MustCompile(`(?i)A300[03]|OnePlus3`),
		regexp.MustCompile(`(?i)A5010|OnePlus[ ]?5T`),
		regexp.MustCompile(`(?i)A5000|OnePlus5`),
		regexp.MustCompile(`(?i)A600[03]|OnePlus6`),
		regexp.MustCompile(`(?i)A601[03](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPD2203(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPD2304(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:du_)?ONEPLUS[ _]?([^;/,)(]+)(?: Build|[;,)])`),
		regexp.MustCompile(`(?i)ONIDA[_ ](i4G1)|(?:AFTLE|AFTTIFF55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONIDA[_ ](i4G1)`),
		regexp.MustCompile(`(?i)AFTLE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTTIFF55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ONIX S405|AT101-1116|ONIX_8_3G_01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT101-1116)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONIX_8_3G_01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S405)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DP-CMX1|TA2C-M8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA2C-M8)`),
		regexp.MustCompile(`(?i)(DP-CMX1)`),
		regexp.MustCompile(`(?i)Sagemcom DIW387_UHD_OOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Opel ?Mobile|(?:OpelMobile_Smart(?:JX|X1)|Easy_Smart_2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Openbox (?:A[3489](?: (?:Pro|Lite))?)|AS1_HD|AS_?4K[_-](?:CI(?:_PRO|_Lite)?(?:_PLUS)?|PLUS|2X)|AS_?4K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Openbox (A[3489](?: (?:Pro|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS_?4K_CI_PRO`),
		regexp.MustCompile(`(?i)AS_?4K[_-](2X|CI)`),
		regexp.MustCompile(`(?i)AS_?4K[_-]PLUS`),
		regexp.MustCompile(`(?i)AS_?4K`),
		regexp.MustCompile(`(?i)(?:(?:Sigma|Beeta)_4_0|Active 5\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active 5\.0`),
		regexp.MustCompile(`(?i)Opsson|IUSAI`),
		regexp.MustCompile(`(?i)IUSAI[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)IUSAI[ _]([^/;\)]+)[/;\)]`),
		regexp.MustCompile(`(?i)Opsson[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:Opsson-)?Opsson[ -_]([^/;]+)/`),
		regexp.MustCompile(`(?i)Optoma[-_ ]`),
		regexp.MustCompile(`(?i)SPV[ \-]?([a-z0-9]+)|Orange[ _-]([^/;]+)( Build|\))|SC/IHD92|Nura 2|FunTab ([^/;]+) Build|Orange Mahpee|Dive 50|MouveTab7WIFI`),
		regexp.MustCompile(`(?i)Orange TV Box(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FunTab ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Orange[ _-](Rise) ?(3[125]|5[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Orange[ _-])?Dive ?(\d+) Dual(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Orange[ _-])?Dive ?(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Orange[ _-](Daytona|Dublin|Fova|Gova|Hi 4G|Hiro|Kivo|Monte Carlo|Neva 80|Neva play|Nura|Reyo|Rise[_ ](3[034]|40|5[345])|Rono|Roya|San Francisco|Tactile internet 2|Tado|Yomi|Yumo|Zali|Mahpee|Neva leaf|Sanza touch|Viking L508|Zilo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPV[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)OrangePi[_ ]?([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)(?:RC(?:2200|501|545|555|60[89])L|R678EL|R8L5T|RC608L2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(OT-DVB\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Orbsmart[_ ]`),
		regexp.MustCompile(`(?i)Orbsmart[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(LeNumero[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ORION, ([a-z0-9_ \-]+), (?:wired|wireless)|CRANE-EVB`),
		regexp.MustCompile(`(?i)ORION, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(CRANE-EVB)`),
		regexp.MustCompile(`(?i)OUKI|OK[AU][0-9]+[a-z]* Build|OKP6 Pro`),
		regexp.MustCompile(`(?i)OUKI[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)([^;/)]+) Build/OUKI`),
		regexp.MustCompile(`(?i)OUKI[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(OK[AU][0-9]+[a-z]*) Build`),
		regexp.MustCompile(`(?i)OU[Kc]ITEL|(?:Android 10(?:[\d.]*);(?: [\w-]+;)? (?:C19|C22)|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:C11|U23)|Android 9(?:[\d.]*);(?: [\w-]+;)? (?:K12)|Android 11(?:[\d.]*);(?: [\w-]+;)? (?:C25)|Android 12(?:[\d.]*);(?: [\w-]+;)? (?:C3[12])|Android 1[23](?:[\d.]*);(?: [\w-]+;)? (?:K16|C51|C3[3568]|RT8)|Android 7(?:[\d.]*);(?: [\w-]+;)? (?:U1[78]|U22)|(?:C1[569]|K10000|K[46]000)(?:[ _]Pro)|K4000Pro|C1[18]_Pro|C1[0237] Pro|C2[13] Pro|C12 Plus|[UK]15 Pro|K15_Plus|U16 Max|C11_F|U7 Max|U7 Plus|U11[_ ]Plus|U20_Plus|C21 Plus|OK6000 Plus|WP5000|WP[58] Pro|K[46]000[ _](?:Plus|Lite)|K9 Pro|Y4800|K10000|K7 Power|K[4-8]000| RT[12356]| OT[568]| WP(?:[125-79]|1[02356789]|2[0123678]|3[023568]|50)|K[37]_Pro|K13_Pro|U25_Pro|OKT[13]|UniverseTap|RT7 TITAN(?: 5G)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C1[0-9]|C2[13]|C31|K10000|K[46]000|WP\d+|U[12]5|K[379]|K1[35])[ _]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K7 Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K10000|U16|U7)[ _]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U20|K[46]000|U7|U11|OK6000|K15|C12|C21)[_ ]?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K4000)[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K10000)[_ ]Mix(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UniverseTap(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Oukitel-)?(Y4800|K10000|K[4-8]000|WP5000|[CU]2|U1[078]|U2[23]|C1[19]|C[23]2|C3|C3[13568]|C51|WP15 S|C25)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OUKITEL)? K([37]|1[26])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RT[123568]|OKT[13]|OT5 S|OT[568])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OUKITEL)? (WP\d+|C11_F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OUKITEL; ([^;]+);`),
		regexp.MustCompile(`(?i)OV-[a-z]+(?:[^;(/]*)[();/ ]|Qualcore 10(?:10|27)|Livecore7032|Vertis 5021 Aim|Vertis 4004 You|OV1027[34]G`),
		regexp.MustCompile(`(?i)OV-Vertis[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)OV(\d+)([34])G`),
		regexp.MustCompile(`(?i)(?:OV-)?Qualcore[-_ ](\d+)[-_ ]([34])G`),
		regexp.MustCompile(`(?i)(OV-[a-z]+(?:[^/();]+))(?: Build|[();])`),
		regexp.MustCompile(`(?i)(?:OWWO[ _]?(?:[1457]S|Q[78])|CARNIVAL B5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OWWO[ _]?([1457]S|Q[78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CARNIVAL B5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Oysters|T84ERI[ _]3G|T72HM(s_)?3G|T102MS_3G|T102ER3G|T72ER3G|(T74HMi|T84Bi)[_ ]4G|T74MR4G|T74RD|T84Ni[_ ][34]G|Pacific(?:[ ]?800i|E)|T104B_[34]G|IndianV|T72HA_3G|T12V? 3G|T74D_3G|T74N_3G|T74SC_3G|T74Mai_3G|T74MRi3G|T104MBi_3G|T104SCi_3G|T104ER4G|Arctic450|Atlantic(?:4G|454|[EV])|AntarcticE|Life4G|T7V 3G|Pacific(?:VS?|I?4G|454)`),
		regexp.MustCompile(`(?i)Pacific[ ]?800i`),
		regexp.MustCompile(`(?i)(?:Oysters[_ ])?Pacific(VS?|I?4G|454)`),
		regexp.MustCompile(`(?i)Atlantic(454|[EV]|4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Arctic(450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AntarcticE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Oysters ((?:Arctic|Indian|Atlantic|Pacific)[^/;]+) Build`),
		regexp.MustCompile(`(?i)(T84ERI[ _]3G|T72HM(s_)?3G|(?:(T74HMi|T84Bi)[_ ]4G)|T84Ni[_ ][34]G)`),
		regexp.MustCompile(`(?i)(T74MR|T102MS|T104B|T74SC|T74[DN]|T72HA|T102ER|T72ER|T104SCi|T104MBi|T104ER|T7V|T12V?|T74MRi)[ _]?([34]G)`),
		regexp.MustCompile(`(?i)(T74RD)`),
		regexp.MustCompile(`(?i)Oysters ([^/;]+)( Build|\))`),
		regexp.MustCompile(`(?i)OYYUT11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ozone HD|OzoneHD[ _]?(T2 WiFi|Nexo|4K(?: TV)?|Fun|Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-0[143]P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-04P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-03P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-01P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAGRAER (P50 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAPYRE[_ ]`),
		regexp.MustCompile(`(?i)PAPYRE[_ ]pad_7\.1`),
		regexp.MustCompile(`(?i)Art-PCB-V116|Bee-PCB-V216|Clap-PCB-I316|PCB-T(?:10[34]|715|750)|Kova[ _-]PCB-\w+|Kova_Plus_PCB_T735`),
		regexp.MustCompile(`(?i)PCB-T(715|750)`),
		regexp.MustCompile(`(?i)Kova[ _-]PCB-T730`),
		regexp.MustCompile(`(?i)(?:PCD[ _])?(?:PL5507|PL571US|PH3501|PH400[12]|E400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCD[ _])?(P[HL]\d{4}|E400)`),
		regexp.MustCompile(`(?i)PCD[ ]?50[689]|(?:PL620|P63L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCD[ ]?(50[689])`),
		regexp.MustCompile(`(?i)(PL620|P63L)`),
		regexp.MustCompile(`(?i)PEAQ[ _]|PET \d{3}`),
		regexp.MustCompile(`(?i)PET ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)PINE ([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)PIRANHA[_ ]|(?:Ultra 4 Tab 9\.0|Ultra 5 Tab White|Piranha8032)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro II Tab 7\.0`),
		regexp.MustCompile(`(?i)Ultra 4 Tab 9\.0`),
		regexp.MustCompile(`(?i)PIXPRO[_ ]`),
		regexp.MustCompile(`(?i)(?:POCO[ _](?:X[2-6](?:_SN)?|F[26] PRO|M[32456]|M5s|F[356]|F4(?: GT)?|C40|C3|C51|C65)|M2010J19(?:C[GI]|GC)|M2007J20C[ITG]|M2012K11AG|M2006C3MI|M2004J19PI|M2102J20S[GI]|M2103K19P[IGY]|21091116AG|21061110AG|M2104K10I|211033MI|220111[67]P[GI]|camellian?|21121210G|2203(?:1116AI|33QPG)|22021211R[GI]|2204121(?:6U?G|9P[GI])|2207(?:1219C[GI]|33SP[IH]|117BPG)|22101320[GI]|22111317P[GI]|23013PC75G|2302EPCC4I|23049PCD8[GI]|2305EPCC4G|22127PC95I|2310FPCA4[GI]|MZB0(?:GGWIN|E6DIN|7Z[0-4]IN)|23076PC4BI|2312(?:FRAFDI|BPC51H|FPCA6G|2PCD1[GI]|8PC33I)|2311(?:3RKC6G|DRK48[GI])|24069PC21[GI]|2404APC5FG|2405CPCFBG|MZB9965IN|MZB874[13456]IN|M2004J11G|MZB0A0MIN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:POCO X2|MZB874[13456]IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23113RKC6G|POCO F6 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)24069PC21[GI]|POCO F6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2311DRK48[GI]|POCO X6 Pro 5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)23122PCD1[GI]|POCO X6 5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)2312FRAFDI|MZB0GGWIN`),
		regexp.MustCompile(`(?i)(?:M2012K11AG|POCO F3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23013PC75G|POCO F5 Pro`),
		regexp.MustCompile(`(?i)23049PCD8[GI]|POCO F5`),
		regexp.MustCompile(`(?i)M2004J19PI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2103K19P[IGY]|M3 Pro 5G|camellian?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCO M([23]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116AG|M4 Pro 5G`),
		regexp.MustCompile(`(?i)22041219P[IG]|POCO M4 5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)22071219C[IG]|POCO M5(?: Build|[;)])`),
		regexp.MustCompile(`(?i)2207117BPG|POCO M5s`),
		regexp.MustCompile(`(?i)2404APC5FG|POCO M6(?: Build|[;)])`),
		regexp.MustCompile(`(?i)2312FPCA6G|POCO M6 Pro(?: Build|[;)])`),
		regexp.MustCompile(`(?i)2201117P[GI]|POCO M4 Pro`),
		regexp.MustCompile(`(?i)(?:M2010J19C[GI]|POCO M3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J20C[GT]|POCO X3 NFC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2102J20S[GI]|POCO X3 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061110AG|POCO X3 GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J20CI|MZB9965IN|POCO X3(?:_SN)?|MZB07Z[0-4]IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22111317P[GI]|POCO X5 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041216UG|POCO X4 GT Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041216G|POCO X4 GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101320[GI]|POCO X5 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201116P[GI]|POCO X4 Pro 5G`),
		regexp.MustCompile(`(?i)(?:M2104K10I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21121210G|POCO F4 GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22021211R[GI]|POCO F4`),
		regexp.MustCompile(`(?i)(?:M2006C3MI|POCO C3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:211033MI|22031116AI|MZB0A0MIN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:220333QPG|POCO C40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2305EPCC4G|MZB0E6DIN|2302EPCC4I|POCO C51(?: Build|[;)])`),
		regexp.MustCompile(`(?i)220733SP[IH]`),
		regexp.MustCompile(`(?i)2310FPCA4[GI]|POCO C65`),
		regexp.MustCompile(`(?i)(?:POCO F2 PRO|M2004J11G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X5 GT PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POPTEL|P9000_MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P9000_MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POPTEL K1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KING 7S?)`),
		regexp.MustCompile(`(?i)PRIME (O8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PROFILO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PULID[ _]|F1[01357]\+? Build`),
		regexp.MustCompile(`(?i)F(1[01357]\+?) Build`),
		regexp.MustCompile(`(?i)PULID[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)PULID[ _]([a-z0-9_]+)\)`),
		regexp.MustCompile(`(?i)(PB1009|M10[45]00|M7500|M7600-D|DAYTONA-G12|MONZA-T7|SILVERSTONE-T10|EasyNote TV11HC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PB1009|M10[45]00|M7500|M7600-D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Pre|Pixi)/(\d+)\.(\d+)|Palm|Treo|Xiino|PVG100(?:E_RU|E)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:Pre|Pixi))/(\d+\.\d+)`),
		regexp.MustCompile(`(?i)Palm(?:[ \-])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Treo([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Xiino|Palmscape`),
		regexp.MustCompile(`(?i)Panasonic|PANATV[0-9]+|Viera/|4KTV-0SU|(?:P902i|P-0[28]D|FZ-B2D|FZ-[NX]1|FZ-A2A|DMC-CM1|P-01[JK]|P-0[23]E|P55 Max)(?:[);/ ]|$)|Eluga[ _]|P55 Novo 4G`),
		regexp.MustCompile(`(?i)P-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P-03E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eluga[ _]I7(?:_EE)?`),
		regexp.MustCompile(`(?i)(?:Panasonic_)?Eluga[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Panasonic_)?Eluga[ _-]([^);/]+)[;/)]`),
		regexp.MustCompile(`(?i)(DMC-CM1)`),
		regexp.MustCompile(`(?i)P-02D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FZ-[XN]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FZ-(B2D|A2A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P(\d*) NXT`),
		regexp.MustCompile(`(?i)P902i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Panasonic\..+\.([0-9]{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Panasonic\..+\.([0-9]{4})\.Mediatek`),
		regexp.MustCompile(`(?i)PANATV[0-9]+|Viera/`),
		regexp.MustCompile(`(?i)(43D1200|(?:32|43)D1270|32D1280|4KTV-0SU[WF]?)`),
		regexp.MustCompile(`(?i)PANASONIC, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)PANASONIC,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Panasonic[ _\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 (P[a-z0-9]+)`),
		regexp.MustCompile(`(?i)P-08D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Panavox Android TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Boom P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Panodic(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Panoramic[_ ](FQ-058/2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pantech|P[GN]-|PT-[a-z0-9]{3,}|TX[T]?[0-9]+|IM-[a-z0-9]+(?:[);/ ]|$)|ADR910L`),
		regexp.MustCompile(`(?i)Pantech[ -]?(P4100)`),
		regexp.MustCompile(`(?i)Pantech[ -]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Pantech_([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(P[GTN]-[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(TX[T]?[0-9]+) Pro`),
		regexp.MustCompile(`(?i)(TX[T]?[0-9]+)`),
		regexp.MustCompile(`(?i)(IM-[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Xplorer_2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EV1 PRO|Partner[_ ]Evolution(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Partner[_ ]Evolution`),
		regexp.MustCompile(`(?i)Pelitt[ _]`),
		regexp.MustCompile(`(?i)Pendoo|A5X MAX(?:[\.-]\w+)?\.01\.d4|(?:PNDP60L10BLK|PNDP60M7PUR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pendoo ?(T95Z|X10) PLUS`),
		regexp.MustCompile(`(?i)Pendoo ?X8PRO+`),
		regexp.MustCompile(`(?i)Pendoo[ \.]?(X9[29]|T95)`),
		regexp.MustCompile(`(?i)A5X MAX(?:[\.-]\w+)?\.01\.d4`),
		regexp.MustCompile(`(?i)(PNDP60L10BLK|PNDP60M7PUR)`),
		regexp.MustCompile(`(?i)Penta[ _]|(?:PS650)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pentagram|Quadra|Monster X5`),
		regexp.MustCompile(`(?i)(?:PENTAGRAM[_ ])?EON[_ ]PRIX`),
		regexp.MustCompile(`(?i)Quadra 7(?: UltraSlim)?`),
		regexp.MustCompile(`(?i)Monster X5?`),
		regexp.MustCompile(`(?i)Quadra ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)Pentagram ?TAB ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)Pentagram ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)(PHICOMM|E5051)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C630 \(CLUE L\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E653\(ENERGY L\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHICOMM ENERGY 3\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E5051(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C6051(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHICOMM[ _]Clue[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)PHILCO[ /]|(PCS0[12]|PH350B|PTB[78]R|PTB7PAP_PTB7PAB_PTB7PAR|Hit Max|Hit P1[023]|HIT P8|HIT P10a|TP7A4|TP10A1I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hit (P1[023]|P8)`),
		regexp.MustCompile(`(?i)(PCS0[12]|PH350B|Hit Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PTB[78]R|TP7A4|TP10A1I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHILCO Android TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PH60D16DSGWN4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PTB7PAP_PTB7PAB_PTB7PAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Philips|NETTV/|2020/2021 UHD Android|10BDL4151T|Xenium S[25]66|(?:PI3210G|TPM1[79]1E|70PUH6774_96|QM152E|QM16[134]E|TLE(?:821L|722G)|AND1E|S397|W5510|S410J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(10BDL4151T)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?Xenium[ _](S[25]66|V787)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?(X818|X588)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?(S397|W5510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AND1E|Google)(?: TV)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PI3210G)`),
		regexp.MustCompile(`(?i)(TPM1[79]1E)`),
		regexp.MustCompile(`(?i)QM152E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QM16[134]E)`),
		regexp.MustCompile(`(?i)(70PUH6774)_96`),
		regexp.MustCompile(`(?i)(202[01])/(?:20)?(2[12]) (?:Philips )?UHD Android`),
		regexp.MustCompile(`(?i)(TLE821L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TLE722G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S410J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Philips, BDP([0-9]{4})`),
		regexp.MustCompile(`(?i)Philips, ([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)(NETTV/[0-9\.]{5})`),
		regexp.MustCompile(`(?i)Philips-FISIO ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Philips[ _-]?([a-z0-9\-@]+)`),
		regexp.MustCompile(`(?i)(?:PHONEMAX[_ ](?:Saturn(?:[_ ]X)?|Mars|Venus X)|Rocky 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Saturn[_ ]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Saturn(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Mars(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Venus X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rocky 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pipo[_ ]|PipoM9Pro`),
		regexp.MustCompile(`(?i)Pipo[_ ]([TP]9)`),
		regexp.MustCompile(`(?i)PIPO[_ ](X10|X9S)`),
		regexp.MustCompile(`(?i)Pico (?:G2 4K|Neo ?3|4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pico (G2 4K|Neo 3|4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pioneer|.*; R1 Build|(?:dvr700pi|XDP-300R|F9212[AB]|SDA-835TAB|SDA-80?TAB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i).*; R1 Build`),
		regexp.MustCompile(`(?i)(XDP-300R)`),
		regexp.MustCompile(`(?i)(F9212[AB]|SDA-835TAB|SDA-80?TAB)`),
		regexp.MustCompile(`(?i)Pioneer, ?([a-z0-9_ \-]+), ?(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Pioneer[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Pioneer[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)PIONEER COMPUTERS (DreamBook)`),
		regexp.MustCompile(`(?i)Infineum[_ ](Z4?5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixelphone S1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixus|(hiPower|Touch_7_3G|Ride[_ ][34]G|Play[ _]Three[ _]v(?:[234]\.0|3\.1))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ride[_ ]([34])G`),
		regexp.MustCompile(`(?i)Play[ _]Three[ _]v([234]\.0|3.1)`),
		regexp.MustCompile(`(?i)Pixus[ _]Sprint`),
		regexp.MustCompile(`(?i)Pixus[ _]Drive`),
		regexp.MustCompile(`(?i)Pixus[ _]Wing`),
		regexp.MustCompile(`(?i)Pixus[ _]Line`),
		regexp.MustCompile(`(?i)Pixus[ _]Titan`),
		regexp.MustCompile(`(?i)Pixus[ _]Folio`),
		regexp.MustCompile(`(?i)(?:Pixus_)?Touch[ _]7[ _]3G`),
		regexp.MustCompile(`(?i)Pixus[ _]hiMax`),
		regexp.MustCompile(`(?i)Pixus[ _]Blast`),
		regexp.MustCompile(`(?i)Pixus[ _]Joker`),
		regexp.MustCompile(`(?i)Pixus Blaze 10\.1 3G`),
		regexp.MustCompile(`(?i)Pixus[_ ]Hammer`),
		regexp.MustCompile(`(?i)(?:Cosmo_Communicator|Gemini[_ ]4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cosmo_Communicator)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Gemini[_ ]4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PLT-[12]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLAY NOW TV BOX 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOMO([0-9]|[ ]?mini[ ]?(?:S|3GS)?)`),
		regexp.MustCompile(`(?i)MOMO([0-9][^);/]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)PLUM[ _]|(?:Z51[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PS_TAB_(WB01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pluzz[_-](Z552|PL5[05]10|PL4010|PL501[46]|Elite_Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook[ _/]`),
		regexp.MustCompile(`(?i)A7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A10 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURFpad2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook SURFpad 3 \(([\d]+)[,.]([\d]+)["]?\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURFpad 4 ([LMS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook/(515|614|62[23467]|63[012]|64[01]|650|740|801|840|970)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POV_TV|POV_TAB|MOB-5045|TAB-P10232-3G`),
		regexp.MustCompile(`(?i)POV_TAB[_-]NAVI7[_-]3G[_-]M`),
		regexp.MustCompile(`(?i)POV_TAB-PROTAB25XXL8?`),
		regexp.MustCompile(`(?i)POV_TAB-PROTAB([a-z0-9]+)`),
		regexp.MustCompile(`(?i)POV_TAB-P?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Polar(?:_W?K?)?[_ ]P\d{2}|(?:P42L31T2CSM|P32L33T2CSM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Polar(?:_W?K?)?[_ ])?(P\d{2}[LU]\d{2}T2S?CSM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PolarLine[_ ](?:W?K?[_ ])?(\d{2}P[LU]\d{2}S?TC-SM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Polaroid|POLPAROID|(?:PMID|MIDC)[0-9a-z]+(?:[);/ ]|$)|MID(?:1014|0714)|PRO[VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z])|(?:P(?:400[56]|4526|500[56]|502[56]|504[67]|552[56])A|P902/A900|PSPC(?:505|550|[MZL]20A0|K2[01]NA)|SIGMA 5|MIDI109PDE|MIDI156PDE|MIDB1048PHE|MIDS145PXE|MIDS747PX|MID4004JBL|MIDS185PR|PSPTD21NA|POMDTB00[56]|PSPCL30A0|PSN-H116|BDL0232PR|Mobility3G|BDL1064PR001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PSPC(505|550)`),
		regexp.MustCompile(`(?i)PRO4611(?:PR201)?`),
		regexp.MustCompile(`(?i)SIGMA 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO([VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z]))`),
		regexp.MustCompile(`(?i)POLAROID, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)MIDS185PR|POLPAROID PURE`),
		regexp.MustCompile(`(?i)(MID(?:1014|0714|S145PXE|S747PX|4004JBL|B1048PHE|I109PDE|I156PDE)|POMDTB00[56]|BDL0232PR|BDL1064PR001)`),
		regexp.MustCompile(`(?i)((?:PMID|MIDC)[0-9a-z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P902/A900)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Polestar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POLY ?PAD`),
		regexp.MustCompile(`(?i)POLY ?PAD[_ \.]([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POLY ?PAD[_\.]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)POLYTRON|W8480|W7430|PW1100S|W7550|W7531|W8570|R2401|R255B`),
		regexp.MustCompile(`(?i)POLYTRON[ _]R1500`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2402`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2403`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2406`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2407`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2452`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2457`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2501`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2507`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2509SE`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2509`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R250A`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2506`),
		regexp.MustCompile(`(?i)POLYTRON[ _-](?:R3450|W1400)`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R3500`),
		regexp.MustCompile(`(?i)POLYTRON[ _]L501`),
		regexp.MustCompile(`(?i)POLYTRON[ _]P520`),
		regexp.MustCompile(`(?i)POLYTRON[ _]P552`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G501`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G502`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G503`),
		regexp.MustCompile(`(?i)POLYTRON[_ ]?[ _]4G550`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G551`),
		regexp.MustCompile(`(?i)POLYTRON[ _]T7800`),
		regexp.MustCompile(`(?i)POLYTRON[ _]T7700`),
		regexp.MustCompile(`(?i)POMP[ _-]`),
		regexp.MustCompile(`(?i)POMP[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)POMP[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(V100M4L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YPY_S450|Twist 4(?: Fit|Pro)?|Twist (?:4G|5 Max)|T1085|Positivo (?:Q20|Slim)|M10 4G PRO X|UP 32|YOLO|Android 4([\d.]*);(?: [\w-]+;)? X400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Positivo (Q20|Slim)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 4 (Fit|Pro)`),
		regexp.MustCompile(`(?i)(?:T1060B|S455|Positivo (?:Twist|Ypy|Mini I)|Twist[ _](?:\(2018\)|2 (?:Fit|Pro)|Mini|Tab|Metal(?: 32GB)?|Max|XL|SE|[23SM])|KC770|G1101T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S455(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist \(2018\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Metal 32GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Metal(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist[ _]Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Fit(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist XL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Positivo )?Twist ([23SM])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Positivo )Mini I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T1060B|KC770|G1101T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Positivo Ypy (AB7F|AB10H|L1050E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Tab(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MAXI 20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AXE_II|186HS2080531|186HS1050531|186HS1050232|186FT1080231|185FT5050231|X7[05]-2021|PREMIO[ _](?:S50|P420|P451)|Android 8(?:[\d.]*);(?: [\w-]+;)? Axe)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X(7[05])-2021`),
		regexp.MustCompile(`(?i)PREMIO[ _](S50|P420|P451)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prestigio 5500 DUO|(?:PMP|PAP|PMT|PSP|PGPS)[0-9]+[a-z0-9_]+(?:[);/ ]|$)|Muze C3|PTV50SS04X_CIS_BK|PTV32SS08Z|PTV40SS04Y_CIS_ML|PTV32SS04Z_CIS_(?:ML|BK)|SILVER POS|PAB4411|GV7777`),
		regexp.MustCompile(`(?i)P[AS]P(5517|5503|550[578])DUO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAP(7500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Muze C3|PSP3504DUO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGPS7799CIS08GBPG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GV7777(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGPS7797(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PMT(3118|38[74]8|3[123]01|3[12]57|778[18]|4[789]91|5588|5718|5791|577[18]|4327|3768)[_ ]([34])G`),
		regexp.MustCompile(`(?i)PMT(1177|3208|3618|31[357]1|1157|1196|3[10]96|3[17]61|3407)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PMT(1107|3[456]37|3[34]27|3317|4638|4311|413[17]|411[178]|3771)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PMT(3231|37[01]8|4231|4667|38[3678]1)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PSP7546DUO([ _][A-Z]{2})?`),
		regexp.MustCompile(`(?i)PSP7610DUO([ _][A-Z]{2})?`),
		regexp.MustCompile(`(?i)PTV(\w+)_CIS_(ML|BK)`),
		regexp.MustCompile(`(?i)(PAB4411)`),
		regexp.MustCompile(`(?i)(PTV32SS08Z)`),
		regexp.MustCompile(`(?i)(PM[PT][0-9]+[a-z0-9_]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:PAP|PSP)[0-9]+[a-z0-9_]+(?: DUO)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PD\-(3127NC|3127) Build`),
		regexp.MustCompile(`(?i)PD\-3127NC Build`),
		regexp.MustCompile(`(?i)PD\-3127 Build`),
		regexp.MustCompile(`(?i)Primux|SirocoY|Omega6_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_ioxphone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxDelta6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxKappa(P50[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxKappa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_Beta2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_?Omega([57])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Omega6_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxUP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxZonda4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_Siroco6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SirocoY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pritom_|(?:K7_A101(?:_EEA)?|Android 1[01](?:[\d.]*);(?: [\w-]+;)? (?:M10_Lite|M10_EEA|M10_(?:PLUS|Air)(?:_EEA)?|P7_EEA)|P7PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pritom[_ ]M10|M10_EEA`),
		regexp.MustCompile(`(?i)(?:T1700Q-)?PRIXTON|(T7012Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRIXTON (C18)`),
		regexp.MustCompile(`(?i)(T701[24]Q|T1700Q)`),
		regexp.MustCompile(`(?i)PLT([^;/]+) Build|PLT(?:777[045]|9774|107[47]|9999)G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLT([^;/]+) Build`),
		regexp.MustCompile(`(?i)PLT(777[045]|9774|107[47]|9999)G`),
		regexp.MustCompile(`(?i)ProVision (S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Proline_|(?:H10882M-TN|H1088[28]M|H1010|M504)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Proline[_ ]FalconXL`),
		regexp.MustCompile(`(?i)(H10882M-TN|H1088[28]M|H1010)`),
		regexp.MustCompile(`(?i)(MPC-(?:[57]0|65|100)|MPC-110DSP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PROTRULY[ _](D[78]|V10S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Punos (10)`),
		regexp.MustCompile(`(?i)QBOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qtouch_|[ ](Q09|QS701|Q0[15]A|QS31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Qtouch[_ ])?[ ]?(Q09|QS701|Q0[15]A|Q85|QS31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QPHONE[_ ](?:10\.1|9\.[12]|7\.1|5\.[246])|QTAB10EW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QPHONE[_ ](?:10\.1|9\.[12]|7\.1|5\.[246]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TLW-100[BG]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Android 12(?:[\d.]*);(?: [\w-]+;)? F22 ?Pro|(?:Android 11(?:[\d.]*);(?: [\w-]+;)? (?:F22|F21 Pro))(?: Build|[;)]))`),
		regexp.MustCompile(`(?i)F(\d+) ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F(22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Scepter[ _]?8(?: Tablet)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Scepter[ _]?8`),
		regexp.MustCompile(`(?i)QMobile|QTab|Q-?Smart|LINQ (?:L10|X100)|(?:Mark [25]|E2 Noir|Noir[ _](A[18]|X1S)|LUNA PRO|NICE S|JazzX JS(?:[27]|10)(?: PRO)?|LT[57]00[ _]PRO|LT950|Infinity (?:Cinema 2|triple|santos|Prime 2)|Q Infinity|Hot 5|Hot Pro 2|VITA S|i7i 2020|i10[ _]20(?:20|19)|V2 2018|Z12 PRO|Smart HD Pro|V[67]_Metal|Rocket (?:Lite|Pro)| GLi|i6i 2020|i6 Metal|Android 6(?:[\d.]*);(?: [\w-]+;)? (?:J5|S2 Pro|J7 PRO|M350 Pro)|Android 5(?:[\d.]*);(?: [\w-]+;)? Z9 Plus|i8i Dual|View Max Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JazzX JS(2|10)`),
		regexp.MustCompile(`(?i)Noir[ _](A[18]|X1S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A600(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QMobile (Z9|J2)`),
		regexp.MustCompile(`(?i)(J7|S2) Pro`),
		regexp.MustCompile(`(?i)LT([57]00)[ _]PRO`),
		regexp.MustCompile(`(?i)V([67])_Metal`),
		regexp.MustCompile(`(?i)i(\d+)i 20(20|1[89])`),
		regexp.MustCompile(`(?i)i10[ _]20(20|19)`),
		regexp.MustCompile(`(?i)i6 Metal (201[78])`),
		regexp.MustCompile(`(?i)Mark ([25])`),
		regexp.MustCompile(`(?i)QSmart (X[124]0)`),
		regexp.MustCompile(`(?i)Q Infinity ([FCB])`),
		regexp.MustCompile(`(?i)(LT950|J5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LINQ (L10|X100)`),
		regexp.MustCompile(`(?i)GLi Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QMobile ENERGY (X[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QTab[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)QTab[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:QMobile|Q-?Smart)[ _-]([^;/)]+) Plus(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:QMobile|Q-?Smart)[ _-]([^;/)]+) PRO(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:QMobile|Q-?Smart)[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:QMP_K8| QMP-M1-N-IP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QMP[_-](K8|M1)`),
		regexp.MustCompile(`(?i)(Q\d{2}Y[FHK]-(?:M[GB]|PB))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qilive [0-9][^;/]*|QILIVE|Q(7S5[5]?IN4G|T19101|T22101B|T23109BP|T21101|7T10INP|T19101HV|8T10IN|8S55IN4G2|8S[56]IN4G|9T9IN|9T(?:7|10)IN4G|9S55IN4G|10S5[37]IN4G|10S[56]IN4G|10S[56]IN4GR|9S5IN4G|6T7IN|T2108BP)`),
		regexp.MustCompile(`(?i)Q10S5IN4G[R]?`),
		regexp.MustCompile(`(?i)(QT19101HV|QT19101|QT23109BP|QT22101B)`),
		regexp.MustCompile(`(?i)Qilive (1\d+[^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Qilive ([0-5][^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Qilive ([0-5]*)/`),
		regexp.MustCompile(`(?i)Qilive ([6-9][^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)QILIVE;SmartTV`),
		regexp.MustCompile(`(?i) Passion[ _]P|Hynex plus|Stark K1|Hynex H[356]|Levin V[12]|Aston A[357]\+`),
		regexp.MustCompile(`(?i)Passion[ _](P[0-9]+)`),
		regexp.MustCompile(`(?i)Hynex plus( 2)?`),
		regexp.MustCompile(`(?i)Hynex (H[356])\+`),
		regexp.MustCompile(`(?i)Hynex (H[35])`),
		regexp.MustCompile(`(?i)Levin (V[12])`),
		regexp.MustCompile(`(?i)Aston A([357])\+`),
		regexp.MustCompile(`(?i)Qtek[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Qrash|(?:Quantum (?:Fit|Five|Fly|UP|MUV (?:PRO|UP)|Go|Mini|M|V|You [2E])|GO 2|Q[23]0|LIO\+|Q-TITANO(_007i|-H2)?|Q-Pulse70M|Q-Wave(?:101|71M))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qrash(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum (Fit|Five|Go|Mini|[MV]|Fly|You [2E]|Q[23]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum MUV PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum MUV UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-TITANO[ _-](BOS|X|M1|007i|H[12]|AK47)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Pulse70M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Wave(101|71M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quatro (8|10|FSM1453)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Cronos|MINERVA(?:_32GB)?|X668_64GB|X626_4G|Hermes|T104_64GB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MINERVA(?:_32GB)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cronos|Hermes|X626_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T104_64GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 1[012](?:[\d.]*);(?: [\w-]+;)? RAPTOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TINKU LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TINKU LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUMO[ _]?|(?:Quest[ _]?(?:408|410|45[56]|50[679])|Vega[ _]?78[23]|Sirius[ _]?(?:1001|890))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _]?)?Vega[ _]?(78[23]|8002)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Yooda(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sirius[ _]?(1001|890)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _]?)?(Sirius 101-4G 8GB Black|Altair 701 8GB Black|Altair 71 4GB Black|Altair 700[24]|Altair 70[16]|Vega_803i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _])?Quest[ _]?(35[34]|40[268]|410|45[2568]|47[46]|50[679]|5[137]0|574|600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QW[ _-]TB-\w+`),
		regexp.MustCompile(`(?i)QW[ _-](TB-\w+)`),
		regexp.MustCompile(`(?i)R-TV BOX[ _]?(MINI\+|X99|X10 PRO|[RXS]10)`),
		regexp.MustCompile(`(?i)RCA-OEM[;,]|RC[AT]([^;/]+)(?: Build|[;)]|$)|RCA RLTP4028|RLTP5567|RLTP5573|RC7T3G21|DRP(?:29101|2091)`),
		regexp.MustCompile(`(?i)(?:RCA[ _])?(RLTP4028|RLTP5567|RLTP5573)`),
		regexp.MustCompile(`(?i)RCT6873W42M|RCT6876Q22N?|RCT6873W42BMF9E`),
		regexp.MustCompile(`(?i)RCT6973W43(?:MD)?`),
		regexp.MustCompile(`(?i)RCT6703W12|RCT6B06P23`),
		regexp.MustCompile(`(?i)RCT(?:6303W87(?:DK|M)|6K03W13)`),
		regexp.MustCompile(`(?i)(DRP29101|DRP2091)`),
		regexp.MustCompile(`(?i)RCT([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)RC([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:H1A1000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Regal (?:TAB 10\.1|Google TV)|REGAL, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Regal (TAB 10\.1)`),
		regexp.MustCompile(`(?i)REGAL, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)BB10;|BlackBerry|rim[0-9]+|PlayBook|STV100-[1234]|STH100-[12]|BBA100-[12]|BBB100-[1234567]|BBD100-[126]|BB[EF]100-[123456789]|BB[CGH]100-1`),
		regexp.MustCompile(`(?i)BBA100-[12]`),
		regexp.MustCompile(`(?i)BBB100-[1234567]`),
		regexp.MustCompile(`(?i)BBD100-[126]|BlackBerry Motion`),
		regexp.MustCompile(`(?i)BBE100-[123456789]`),
		regexp.MustCompile(`(?i)BBF100-[1234567]|BlackBerry Key2`),
		regexp.MustCompile(`(?i)(?:BlackBerry )?(9000|9790)`),
		regexp.MustCompile(`(?i)STV100-[1234]`),
		regexp.MustCompile(`(?i)STH100-[12]`),
		regexp.MustCompile(`(?i)BB10; ([a-z0-9\- ]+)\)`),
		regexp.MustCompile(`(?i)PlayBook.+RIM Tablet OS`),
		regexp.MustCompile(`(?i)BlackBerry(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)rim([0-9]+)`),
		regexp.MustCompile(`(?i)(8520|8530|9220|9320|9360)`),
		regexp.MustCompile(`(?i)(9800|9860)`),
		regexp.MustCompile(`(?i)FORTIUS QUAD 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RH-LE\d{2}DSY-C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ROiK ?(10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Shock ?(?:5|5\.5)|popper2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Shock ?(5\.5|5)`),
		regexp.MustCompile(`(?i)ESKIMO_K5001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZR01|3917JR|P710|P780|C330)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ramos ?([^/);]+)(?: Build|[);])|(?:MOS1(?:max)?|W22PRO 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ramos[ _])?(R10|R9|M7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MOS1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ramos ?([^/;]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Raspberry (Pi [0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RAVOZ[ _](Z[3567] (?:Lite|Pro)|Z[3-7]|R[4789]|V[1235])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XPOWER_P6000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Phone 2|Razer Edge 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Allure[_ ](?:Ultra(?:[_]Curve)?|Secure|Admire|Rise)|Opulent X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Readboy[ _-]`),
		regexp.MustCompile(`(?i)Readboy[ _-]C18Max`),
		regexp.MustCompile(`(?i)Readboy[ _-]C(\d+)Pro`),
		regexp.MustCompile(`(?i)Readboy[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Realme[ _]|(?:RMX(?:18(0[13579]|11|3[13]|2[1257]|[45]1|53|45)|19(03|4[1235]|19|9[23]|2[1579]|[01379]1|73)|20(?:[025-7]1|42|[0357]2|03|2[257]|63|7[56]|63L1|8[1356]|[2-5]0)|21(?:0[13]|1[27]|[12]1|4[24]|5[156]|6[13]|7[036]|8[0359]|9[345])|220[0125]|30(?:[3468]1|4[23]|9[23]|63|85)|31(?:15|2[125]|42|51|6[16]|71|9[1357])|32(?:0[13]|35|42|[346]1|6[0235689]|86)|33(?:[0157]0|[17]2|71|6[036]|[0186]1|57|88|9[12356])|34(?:30|78|[69]1|[67]2|7[145]|9[23])|35(?:0[1236]|1[12367]|21|[578]1|6[0123]|7[246])|36(?:1[0125789]|[39]0|36|2[347](?:_Natv_vf)?|8[67]|6[013])|37(?:0[0689]|6[125]|[14-7]0|[0457]1|8[01235])|38(?:[039]0|2[03]|34|4[01234]|5[0123]|6[78]|7[01]|88)|39(?:9[35789]|10|3[09]))|(?:OPPO[ _]?)?CPH1861|RMP220[45]|RMP210[235-8]|4K Google TV Stick)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX370[68]`),
		regexp.MustCompile(`(?i)RMX38(?:51|00)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?RMX3142(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1861(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX180[59]`),
		regexp.MustCompile(`(?i)RMX180[137]`),
		regexp.MustCompile(`(?i)RMX(?:182[125])`),
		regexp.MustCompile(`(?i)RMX185[13]`),
		regexp.MustCompile(`(?i)RMX190[13]|Realme X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX199[12]`),
		regexp.MustCompile(`(?i)RMX1931|Realme X2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2176(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2121(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX1921|Realme XT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX19(1[19]|27)`),
		regexp.MustCompile(`(?i)RMX197[13]`),
		regexp.MustCompile(`(?i)RMX203[02]`),
		regexp.MustCompile(`(?i)RMX200[13]`),
		regexp.MustCompile(`(?i)RMX204[02]`),
		regexp.MustCompile(`(?i)RMX206[13](?:L1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX215[15]`),
		regexp.MustCompile(`(?i)RMX3085|Realme 8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3151|Realme 8i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX349[123]`),
		regexp.MustCompile(`(?i)RMX3388|RMX3474`),
		regexp.MustCompile(`(?i)RMX339[23]`),
		regexp.MustCompile(`(?i)RMX347[12]`),
		regexp.MustCompile(`(?i)RMX36(?:30|15)`),
		regexp.MustCompile(`(?i)RMX366[01]`),
		regexp.MustCompile(`(?i)RMX368[67]`),
		regexp.MustCompile(`(?i)RMX3(?:636|751)`),
		regexp.MustCompile(`(?i)RMX1925(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX1811(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX194[1235](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RMX202[1207]|Realme G70 Series)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2185(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2189(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX218[03](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX219[45](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX306[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX320[13]`),
		regexp.MustCompile(`(?i)RMX326[123]`),
		regexp.MustCompile(`(?i)RMX319[13]|realme C25 Series`),
		regexp.MustCompile(`(?i)RMX319[57]`),
		regexp.MustCompile(`(?i)RMX326[589]`),
		regexp.MustCompile(`(?i)RMX350[123]`),
		regexp.MustCompile(`(?i)RMX(?:3581|3623)`),
		regexp.MustCompile(`(?i)RMX362[47]`),
		regexp.MustCompile(`(?i)RMX351[123]`),
		regexp.MustCompile(`(?i)RMX376[02]`),
		regexp.MustCompile(`(?i)RMX382[03]`),
		regexp.MustCompile(`(?i)RMX330[01]`),
		regexp.MustCompile(`(?i)RMX331[012]`),
		regexp.MustCompile(`(?i)RMX3031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX356[012](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3563(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3371(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3357(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX336[0136]`),
		regexp.MustCompile(`(?i)RMX3350(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX216[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX351[67]`),
		regexp.MustCompile(`(?i)RMX183[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX(?:20(?:51|[2]5)|2144)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2052(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX207[56](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2072(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX(2142|2081)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX208[56]`),
		regexp.MustCompile(`(?i)RMX346[12]`),
		regexp.MustCompile(`(?i)RMX211[12]`),
		regexp.MustCompile(`(?i)RMX220[01]`),
		regexp.MustCompile(`(?i)RMX312[12]`),
		regexp.MustCompile(`(?i)RMX304[123]`),
		regexp.MustCompile(`(?i)RMX309[23]`),
		regexp.MustCompile(`(?i)RMX361[01]`),
		regexp.MustCompile(`(?i)Realme[ _]([1-9])[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP210[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP220[45]`),
		regexp.MustCompile(`(?i)RMP210[78]`),
		regexp.MustCompile(`(?i)RMP210[56](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Space_M10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(i-Jupiter)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Wizpad_)?Valuer_V8`),
		regexp.MustCompile(`(?i)(?:Wizpad_)?Valuer_V8`),
		regexp.MustCompile(`(?i)(?:Redway_7|redway7_pro|redway10_lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:reeder[_ ](?:3G_Tablet|A7iC|A[78]i[_ ]Quad|A8i Q2|M8 Plus|[TM]8|M10 Plus|P11SE|M7_Go)|M8_Go|M8Go2020|M10SPlus|P12Curve|M10 Pro LTE|M10 Blue Max|P13[ _]Blue[ _]Plus(?:[ _]2022)?|P13_Max_Blue|P13[_ ]Blue[_ ]Ma(?:ks|x|xL)|P13_Blue|P13[ _]Blue[ _]202[12]|M7Plus|A8i-Q2|M7Go_2019|S19 Max(?: Pro S(?: Zoom)?| \d{2}GB|L 128GB| Pro)|M10 GO|S23 Pro Max|S19 Max|P11SE_Art)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)reeder[_ ](3G_Tablet|A7iC|A[78]i[_ ]Quad|A8i Q2|M8 Plus|[TM]8|M10 Plus|P11SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:reeder_)?(?:M7Go_2019|M7_Go)`),
		regexp.MustCompile(`(?i)(?:reeder_)?(M8|M10)[_ ]Go`),
		regexp.MustCompile(`(?i)P13 Blue 202([12])`),
		regexp.MustCompile(`(?i)P13 Blue MaxL? 202([012])`),
		regexp.MustCompile(`(?i)P13[_ ]Blue[_ ]Max|P13_Max_Blue`),
		regexp.MustCompile(`(?i)S19 Max (?:32|64)GB`),
		regexp.MustCompile(`(?i)RelNAT[_ ](Premier)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (TB02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RD(?:16Q|86E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RD(16Q|86E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TLE-50USBM|TLE-43FSBM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Revo[_ ](?:Youplus|555)|RevoYou`),
		regexp.MustCompile(`(?i)Revo[ _]?(You|555)`),
		regexp.MustCompile(`(?i)(?:S6523(?:[ _]RU)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PACE A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RKM[_ ])?MK(902II|902|80[28][^/;]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Rinno (R(?:400|505))`),
		regexp.MustCompile(`(?i)(RMD[-_](?:10(?:2[689]|30|5[089])|1121|75[017]|726|85[57]|870)|RMP-(?:450|50[56]|530|600))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMD[-_](10(?:2[689]|30|5[089])|1121|75[017]|726|85[57]|870)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP[-_](450|50[56]|530|600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RITZVIVA[_ ]S500C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIVIERA[ _]`),
		regexp.MustCompile(`(?i)RIVIERA[ _](F23|U963)`),
		regexp.MustCompile(`(?i)PHANTOM (?:PZ|RX)|RHYTHM[ _]RX|(?:STORM_S8(?: ?plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHANTOM PZ ?(2[05]|[13]5|4|18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHANTOM RX ?(298|387)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RHYTHM[ _]RX ?([15-9]0|[467]5|[12]80|150|[14]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NovaTab_R10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ROAM[_ ]CAT[ _](M8)`),
		regexp.MustCompile(`(?i)(ZC-P95)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IO (?:Pro|3D|Light)|Orb S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Roku(?:OS|4640X)?/(?:DVP|Pluto)?-?|QSP; Roku`),
		regexp.MustCompile(`(?i)Rombica[_ ]|(SSQ-A0500|Smart Box v[0-9]+|Smart Box (?:[ABCDXYZ]1|[GDFQ]2|[AF]3|H4)|myPhone Jet|55MT-UDG54G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SSQ-A0500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Rombica[_ ])?Cinema4K_v01`),
		regexp.MustCompile(`(?i)(55MT-UDG54G|Infinity K8|Smart Box (?:Q1|v00[3-9]|Quad|Ultra HD v002|4K V001|[ABCDXYZ]1|[AGDFQL]2|[AFG]3|H4)|TV (?:Ultima|Fly)|Smart Stick Pro|TV Mercury|TV Air)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RM(D)?[-_](974R|600|550|790)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rover ([0-9]+)`),
		regexp.MustCompile(`(?i)(?:Rover[ ]?Pad|RoverPhone|(?:Air|Art|Sky) 7\.85 3G|Pro_Q(?:8|10)_LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RoverPhone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro_Q(8|10)_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Rover[ ]?Pad)?sky 7\.85(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Air|Art) 7\.85 3G`),
		regexp.MustCompile(`(?i)RoverPad (10\.4|Air S70|9\.7 3G|Sky 9\.7|3W A73|3W7|3WT70|3W9\.4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RQ[ -](Regal R8|713S|712|768)|Bishop-RQ451)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RQ (Regal R8)`),
		regexp.MustCompile(`(?i)RQ-(713S|712|768)`),
		regexp.MustCompile(`(?i)(?:RugGear|RG(?:310|500|65[05]|702|7[13]0|850)|RG725)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RG[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FieldPad 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FieldPad 8)`),
		regexp.MustCompile(`(?i)Rhino-Quest(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rhino-Quest(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ruio[ _]|(?:M671M4|i7Plus|S5[05]06|S518)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ruio[ _](S4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ruio[ _])?(S5|i7)Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S5[05]06|S518)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Runbo|F1-TT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Runbo[ _-]?(X5-W|F1 Plus|[PF]1-TT|F1-EN|[FH]1|TT|Q5-S|X5-King|X6|Q5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RYTE U55 LTE|RT701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RYTE (U55 LTE)`),
		regexp.MustCompile(`(?i)(RT701)`),
		regexp.MustCompile(`(?i)(GT40 Ultra)(?: Build|[);])`),
		regexp.MustCompile(`(?i)S-TELL|(?:M630|M55[78]|P760|P750i|M555i|M580|M457|M655)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P760|P750i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S-TELL[ _])?M([0-9]{3}|555i|M580|M655)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S2TEL[ _-]`),
		regexp.MustCompile(`(?i)S2TEL-(Q8)`),
		regexp.MustCompile(`(?i)(?:20220728MT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S2[23])_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEEWO[ _](SD02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEG, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:GO[35]E|5101J|GO3C(?: Plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5101J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO3C Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO3C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GO[35]E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(32SN6000H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem|StarTab|(?:Android 8(?:[\d.]*);(?: [\w-]+;)? (?:AURA (?:PLUS|ULTRA)|AURA))(?: Build|[;)])`),
		regexp.MustCompile(`(?i)StarXtrem II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarXtrem ?([3-6])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarXtrem(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail[ _]?([1-9])[ _]([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail[ _]?([1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURA PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aura ULTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT 6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT II Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarText II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarText(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarNaute II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARNAUTE ?([1-4])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarNaute(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem)[^;/]*) Build`),
		regexp.MustCompile(`(?i)SGIN_X10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BHX-UH200|BID-AT200`),
		regexp.MustCompile(`(?i)BHX-UH200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BID-AT200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Modern[ _](?:S10?|S[3679]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LYNX_LUXE|Hyper X Dragon|HYPER X BLADE(?: II)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Atractivo|SmartabS4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Atractivo)`),
		regexp.MustCompile(`(?i)(?:CRUSH_X565|BLAZE_X500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMUX ?BOX A1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SNAMI[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)SOLE[_ ]POP[_ ]S([45]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOLO[_ ](?:Aspire(?: M)?)|Inspire_U5(?:_PLUS)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOLO[_ ](Aspire(?: M)?))`),
		regexp.MustCompile(`(?i)(?:GRAVITY [34]G(?:_2019)?|GRAVITY2-4G|GRAVITY_OCTACORE|GRAVITY[ -](?:Max|SE|PRO|2-MAX|2)|SPC (?:GEN|SMART)|SPC_ALIEN(?:_STICK)?|SPC Glow9\.7|Lightyear|Laika|L70_Lite|L60 Turbo|L60 Pro|FLOW 7|SMART_ULTIMATE(?:_64)?|Discovery Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRAVITY ([34])G_2019`),
		regexp.MustCompile(`(?i)GRAVITY ([34])G`),
		regexp.MustCompile(`(?i)GRAVITY 2|GRAVITY2-4G`),
		regexp.MustCompile(`(?i)SPC Glow9\.7`),
		regexp.MustCompile(`(?i)SMART_ULTIMATE(?:_64)?`),
		regexp.MustCompile(`(?i)(L60 Turbo|L60 Pro|Discovery Pro)`),
		regexp.MustCompile(`(?i)Spurt[_ ]|(?: K700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Spurt[_ ])?K([78]00)`),
		regexp.MustCompile(`(?i)SQOOL-V(41?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y777_Fire)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AERIAL(?: PLUS)?|BLOCK_MINI|BLOCK GO|BLOCK 3|Fractal|Joy Pro|Origins Pro|SLAY II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STG[ _](A[12] Pro|[AS]1|X[1-3]|X20|S[1-3]0|[BCHP]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK[_ ]|(?:Storm 2e Pluz|Life 7S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK[_ ]Transporter[_ ]1`),
		regexp.MustCompile(`(?i)STK[_ ]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)STK[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)LEAP-S1|SH6B7CE_EU012`),
		regexp.MustCompile(`(?i)(SH6B7CE)_(EU012)`),
		regexp.MustCompile(`(?i)SUNWIND[_ ]|SUN[-_]LED\d+|(?:SKY 9 [EA]\d+ 3G|Sky (?:126[24]C|1123B|7143B|8244B|8421D|1430D) [43]G|SKY Kids 70 SS7238PG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY ([79]) ([EA]\d+) 3G`),
		regexp.MustCompile(`(?i)Sky (\d{4}[BCD]) ([34])G`),
		regexp.MustCompile(`(?i)SUN[-_]LED(\d+\w{1,2}\d+)`),
		regexp.MustCompile(`(?i)(?:SCHR9G[RL]|PRA(?:U8|100|557|507)|ZUR(?:722M|70016W?|700[RW]|805A))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCHR9G[RL]`),
		regexp.MustCompile(`(?i)PRA(U8|100|557|507)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZUR(70016W?|700[RW]|805A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWOFY[_ ]`),
		regexp.MustCompile(`(?i)SWOFY[_ ]M503-Pro`),
		regexp.MustCompile(`(?i)Young (Y56|Y36\+|Y[35]5|Y51\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Safaricom|NEON[_ ]RAY|(?:NEON_NOVA|NEON PLUS|NEON PLUS|NEON LITE|Neon Storm|SFCSTB2LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ET Kimem(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Safaricom_Kimem_Kerefa_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SAGEM|portalmmm/2\.0 (?:SG|my)`),
		regexp.MustCompile(`(?i)SAGEM-(my[a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)SAGEM ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAGEM-([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 ((?:SG|my)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)Sagemcom[;, \-_]|(DIW3930)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DI384|DIW350|DIW387|DIW3930)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sagemcom[;,] ([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sagemcom\-OTT\-([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sagemcom_Broadband_SAS,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:STS5[57]0|STS502)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(STS5[57]0)`),
		regexp.MustCompile(`(?i)(STS502)`),
		regexp.MustCompile(`(?i)SAMSUNG|FamilyHub|Maple |Maple2012|SMART-TV.+Tizen.+SamsungBrowser|Gear Live|(?:SEC_)?SC-(?:001|01[EFGHKLM]|02[CGHJKLMF]|03[EFJKL]|04[EFJLG]|05[GL]|(?:4[12]|5[1-4])A|5[1-5]B|5[1-5]C|56C|5[23]D)|N[57]100|N5110|N9100|S(?:CH|GH|PH|EC|AM|HV|HW|M)-|GT-|Galaxy|(?:portalmmm|o2imode)/2\.0 [SZ]|sam[rua]|beyond[02]q?|crownq?lte|vollo Vi86(?:[);/ ]|$)|(?:lineage_|aokp_|rr_)?(?:serranoltexx|j5y17lte|Santos103G|fortuna3g|Verizon-SM)|(?:OTV-)?SMT-E5015|ISW11SC|40[34]SC|SC(?:G1[6789]|G2[01]|V3[1-9]|V4[0-9]|51Aa|-56B|T21|G0[1-9]|G1[0-5]|L2[234])(?:-[uj])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OTV-)?SMT-E5015`),
		regexp.MustCompile(`(?i)Samsung, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-)?N5100`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T677(?:[ATV]|N[KL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T670(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-)?N5110`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N5120`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT|SM)-N8000`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N8010`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N8020`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P1000M?|SCH-I800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P3100B?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P311[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5100|SCH-I915`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P511[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T217T`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5200|Santos103G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5210`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5220`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6201`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6810`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P7100`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P75[01]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T321`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T905`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P600`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P60[12]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P605|P607T)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P901`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P905`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P587|P588C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P583(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P205(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T307U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T297`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T505[CN]?|T507)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T50[03](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T22[57]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X216`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X218`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X210`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X115`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X110`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T11[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X205`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T830[X]?|T837R4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T837P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T835[CN]?|T837[VTA]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T725[CN]?|T720X|T727(?:R4|[AUV])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T720(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T865N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T867(?:R4|[VU])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P615[CN]?|P61[379])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P610X?|P620)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T860X?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T866N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X916[CB]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X810`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-X818U|SM-X816[BN])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X716`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X616`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X(?:518U|516)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X610`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T111`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T116(?:BU|NU|NY)?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T2105|T212)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T210R?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T21(?:[15]|7[AS])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T230(?:NU)?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T23[15]|403SC|SM-T321`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T239|T237[PV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T232(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T312`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T311`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T315`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T33[215]|T337[AVT])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T520`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T53[15]|T537[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T536(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T320`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T325`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T525`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T530(?:NU)?|T533)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T705|T707[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:T805|T807[PV]?)|SCT21)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T813|T810)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T719[CY]?|T715(?:N0|[CY])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T71[03]|T710X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T815|T817[ATW]?|T818[ATVW]?|T819[Y]?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T820`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T82[57]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T975N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T970(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T976[BN]|T978U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T870(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T875N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T878U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T73[57]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-T736|SM-T738[UTV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T733`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X906`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X80[68]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X706`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T280`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T285`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T3[58]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P350|T3[58]5|T357[TW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T387(?:AA|R4|VK|[TPVW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T295`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T290`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P355([MY])?|T550)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P550|P555(M)?|T555)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T58[05]|P58[05])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T587[P]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T59[057]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T51(?:7P|[057])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T37[57]|T378[KLSV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T56[02]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T561`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T567V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X306`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T365(?:F0|[MY])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T395[CN]?|T397U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T390(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T575N?|T577U?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T545|T547U?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T540(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P902|P907A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-T2519`),
		regexp.MustCompile(`(?i)SM-R8[76]0`),
		regexp.MustCompile(`(?i)SM-R90[05]`),
		regexp.MustCompile(`(?i)SM-R91[05]`),
		regexp.MustCompile(`(?i)Family ?Hub`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A245`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A256`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G850(?:8S|[AFKLMSWXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A605K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A202K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5510`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5512`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B7510`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5801`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8000`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7530`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8350`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?OMNIA7`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SGH-i677`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SGH-i917`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SGH-i937`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I8150|SM-T255S)`),
		regexp.MustCompile(`(?i)SC-01H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5830`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G357(?:FZ|M)|G310HN)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8160`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G313(?:HY|M[LUY]|[FM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G316M`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G313[HU]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G316U|G318(?:H|ML))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G9100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHV-E120`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8190`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I826[02]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHW-M570S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G386W`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3589W`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8320`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I85[23]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3858`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G600S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E426S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I855[028]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G381[28]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8580`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8730`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:E500(?:HQ|YZ|[0FHM])|S978L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E700[09FHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I90(?:00|08|18|88)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9001`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9003`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9010`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9070`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I910[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?ISW11SC`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9103`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9105`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G730(?:W8|[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I919[025]|SCH-I435)|(?:lineage_|aokp_)?serranoltexx`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9515`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9295`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9300|SCH-(?:I535|I939|L710))|SC-03E`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9305|SCH-R530)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S975L|GT-I950[025]|SC-04E|SCH-(?:I545|I959|R970)|SGH-M919N?|Galaxy-S4|SHV-E300K)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9506)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHV-E330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5280`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5301`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G110[BHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5360`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6312`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G130(?:BT|HN|[EHMU])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G130BU`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6790`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6810`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6812`),
		regexp.MustCompile(`(?i)SC-04J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SC-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7275`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7500`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-S7560|SCH-I699)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7390`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7580`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I739`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-S7562|SCH-I919)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7582`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G31[36]HU|G313HZ)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7710`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G388F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G389F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G390[FWY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G398FN`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G715(?:FN|U1|[AUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G889(?:YB|[AFG])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G525[FN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G736`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8500`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8530`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8600`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5380`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7250`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5250`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5780`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7230`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:C101|C105([AL])?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:C111(M)?|C115)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G318[HM]Z`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G355(?:6D|[89HM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G350`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G360[FH]?|S820L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G361[FH]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G386F|G3518(?:_TD)?|G3586V)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3568V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G5108Q?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3815`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G80[01]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G9009D`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G900FD`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G900|G906[KLS]|S902L|S903VL|G490F)|Galaxy-S5|SCL23|SC-04F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G901F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G870[AFW]|SC-02G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G903[FMW]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G860P`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G920(?:F[DQ]|W8|[089AFIKLPRSTVX])?|SM-S906L|SM-S907VL)|SC-05G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G890A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G925[0ADFJIKLPRSTVWX]|SCV31|404SC|SC-04G|SM-G828)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G928(?:7C|N0|R4|W8|[07ACFGIKLPSTVX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-|Verizon-)?SM-G930(?:AZ|FD|R[467]|T1|V[CL]|W8|[0AFKLPRSTUVX8])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G935(?:R4|W8|[0AFKLPSTUVX])|SC-02H|SCV33|Galaxy s7 edge`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G891A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G950[08FNUW]?|SCV36|SC-02J`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G8750`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G892[AU]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G955[0AFKLNPRTUVWX]?|SCV35|SC-03J`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G960[0FNUWX]?|SCV38|SC-02K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G965[0FNUWX]|SCV39|SC-03K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:G973|G977[BNPTU])|SCV41|SC-03L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S10 Lite|G770(?:U1|F))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G975[08FUNWX]|SCV42|SC-04L)`),
		regexp.MustCompile(`(?i)(?:(?:SAMSUNG-)?SM-G970(?:U1|[08FUNWX])|beyond0q?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G980F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G981(?:U1|[0BNUVW])|SCG01|SC-51A|SC51Aa`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G780`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G781(?:U1|[0BNUVW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G988(?:U1|[0BNQUW])|SCG03`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G985F|SCG02`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G986(?:U1|[0BNUW])|SC-52A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G991V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G991(?:U1|R4|[0ABNWQU])|SCG09`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G990`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SC-51B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G998(?:U1|[0BNUWTP])|SC-52B)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G996(?:U1|[0BNWUP])|SCG10`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S901(?:U1|[0BENUW])|SC-51C|SCG13`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S908(?:U1|[0BENUW])|SCG14|SC-52C`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S906(?:U1|[0BENUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S911|SCG19)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S916`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S918|SC-52D|SCG20)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S711)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S921`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S926)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S928`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F700(?:U1|[0FNUW])|SCV47`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F707(?:U1|[0BNUW])|SCG04`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I829`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SCH-R740|SGH-S730)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-S738`),
		regexp.MustCompile(`(?i)vollo Vi86(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G386(?:T1|T)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A716S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A015(?:DL|[TU]1|[AFGMUV])|S111DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A013[FGM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A025(?:[AFGM]|AZ)?|S124DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A037[F]?|SM-S13[45]DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A035[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A047`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A042[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A045`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A032[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A022[GMF]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A055`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A057`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A260[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S115(?:DL)?|SM-A115V)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-[AS]146)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A145)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A156|SM-S156V)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A155)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A225[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A226L`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A226|SC-56B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A300(?:FU|YZ|XU|XZ|[09FGHMXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A310(?:N0|[FMXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A320(?:FL|[FXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A346`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A356`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A430F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A500(?:YZ|[9LSWY])?|SM-A5OOH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A500[0FGHKM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A500(?:FU|X)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A510[08FKLMSXY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A520[FKLSWX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A525`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SC-53B|SM-A526)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A528`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A600(?:AZ|FN|GN|T1|[AFGNPTUX])|SM-A6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A605(?:[FG]N|[08FGX])|SM-A6\+`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G6200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A606[0Y]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A700(?:YD|[09FHKLSX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A710[08FKLMSXY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A720[FMSX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A750(?:GN|[CFGNX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A71(?:5[FW])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A725[FM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A736`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A716(?:U1|[0BUVT])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A(?:530F|800[0FISXY])|SCV32`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G885[FSY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A810(?:YZ|[FS])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A8s|G887[0F])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A530[MNWX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A730[FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A900[0F]`),
		regexp.MustCompile(`(?i)SM-A9\[7\]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A920[0FXN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G885[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A9 Pro|A910[0F]|G887N)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A105[FGMN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A107[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S102DL|A102[NUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A115(?:A[PZ]|U1|[AFMUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A12(?:5[AFMNUWTPV]|7[FM])|S127DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A136(?:U1|[BMWUS])|S136DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A135|SM-A137F)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A205(?:U1|YN|[FGSWU])|S205DL)|SC-02M|SCV46`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A215(?:DL|R4|U1|[UWTP])|SM-S215DL|SC-42A|SCV49|SM-A102J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A217[FMN](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A202[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A207[0FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A235`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A23[36]|SM-S236|SC-56C|SCG18`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A305(?:[FGY]N|GT|[FGN])|SCV43)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A307(?:FN|GN|GT|[FG])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A315[FGN](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A325`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:A326(?:BR|U1|[BUWJ])|S326DL)|SCG08)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A336`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A405(?:F[NM]|S)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A305[018](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A415F|SC-41A|SCV48)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-[AS]426`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A505(?:F[GN]|U1|YN|[FGNUWX])|S506DL|505FN)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A5070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A507FN`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A515[FUW]|S515DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A516(?:U1|[0BNUVT])|SC-54A|SCG07)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A536V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A536|SC-53C|SCG15|SM-S536DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A546S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A546|SC-53D|SCG21)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?: SM-A556)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A705(?:GM|[MYF]N|[0FUWX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A707[0FW]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A805[0FNX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A908[BN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A9080`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E025F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F127G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E135F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E146B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E156B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E225F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E236`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E346`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F415F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E426B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E5260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E546`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E625`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9301I`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S120VL`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SGH-T399`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J100(?:FN|VPP|MU|[FGHMY])|S777C)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J105[BFHYM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J106[BFHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J120(?:ZN|[AFGHMPTW])|J05H)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J110[FGHLM]|J111[FM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J200[FGHMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J200BT`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J260AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J260([AFGMY]|T1)|S260DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J(?:210F|250[FGMNY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S367VL|S357BL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J311(?:[09]|9S)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S320VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S327VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327(?:T1|[ATW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327(?:[FP]|R4)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337R4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327VPP`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S337TL`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J3109`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J300H|J320(?:[ZF]N|R4|W8|YZ|[AFGHMNPVY]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J330(?:FN|[08FGLN])|J327(?:R[76]|U))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337(?:VPP|[AWPUV])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G400[FG]|J400[FGM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J500(?:FN|N0|[78FGHMY])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J510(?:[FGMU]N|FQ|[8FGHKLSY])?|5108|G510H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J530[GY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J530|(?:lineage_)?j5y17lte`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G570[0FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J600[FGLN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J610[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J410[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J415(?:[FG]N|[FGN])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J710FN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J7[01]0(?:FN|MN|[8FHKM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J700P`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J700(?:T1|T)|J710GN|J7109?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J730[K]|J727(?:R4|[AFSU]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J737(?:R4|T1|VPP|[APSTUV])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C710F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G610[FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G611(?:FF|MT|M)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G615F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S727VL|S737TL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J7 Pro|J730(?:GM|[FG]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J701[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J720[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S767VL|S757BL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J727[PTV]`),
		regexp.MustCompile(`(?i)SM-J7\[7\]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J810|SM-J8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SM-J9\[7\] Prime`),
		regexp.MustCompile(`(?i)SM-J9\[8\] Pro`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M015[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-[EM]045F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M013F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M017F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M025F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M022[FGM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M105[FGMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M107F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M115[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M127[FGN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M135`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M136`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M146B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:M205(?:[FGMN]|FN)|M20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M215F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M215G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M225`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M236L`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M236`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:M307(?:FN|[0F])|M30s)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M305?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M315F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M325F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M326`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M336`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M317F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M346`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M405`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M426`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M515F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M526`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M536S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M536`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M546`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M625`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M546`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W201([689])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2022`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2020`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2021`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A826`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2015`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G910S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G550(?:FY|T[12]?)|S550TL|G55[01]0|G5520)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G5528`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G600(?:FY|[0F])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G610[0KLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G611[FKLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C500[0X]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C501[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C5560`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C700[0X]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C701[08FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C710[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C900[08FY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z130H`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z200[FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z300H`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z400[FY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G150(?:N[0KLS])?|G155S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G16(?:0N|[05]0?|5N))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J321AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J326AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J336AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J727AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:F900[0FUW]|F907[BN])|SCV44`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W9023`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W7023`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W7024`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F711|SCG12|SC-54B)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F721|SC-54C|SCG17)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F731)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F741)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F916(?:U1|[0BNQUW])|SCG05`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F926|SC-55B|SCG11)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F936|SCG16|SC-55C)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F946)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9060(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9063`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9(?:080|128)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9168`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9082`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N7000`),
		regexp.MustCompile(`(?i)(?:SC-01G|SCL24)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N935[FSLK](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:(?:GT-)?N7100|SCH-(?:I605|N719|R950)|SPH-L900|Galaxy Note 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N7105`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G710(?:2T|5[HL]|[25689KLS])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G720(?:AX|N0|[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:SAMSUNG-)?SM-(?:G530(?:[689]W|[AF]Z|BT|MU|R[47]|[AFHMPTWY])|G531[FH]|S920L)|(?:rr_)?fortuna3g)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G531(?:BT|[MY])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532MT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532[MG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N7502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N750[05LQ]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N9002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-9005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-N900(?:W8|[05689][VQ]?|[AKLPSTV])?|SCL22|SC-01F|SC-02F)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:N910|910U)|N9100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N916[KLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N915`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N920(?:R[467]|W8|[0ACFGIKLPSTVX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N9208`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G750(?:8Q|[9AFH])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I915[028]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I920[05]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-N930(?:R[467]|W8|[0AFKLPSTUVX])|SCV34)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-N950|SCV37|SC-01K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N960|SCV40|SC-01L)|crownqlte`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N975(?:U1|XU|[0CFUWX])|SM-N976[0BVNQU]|SC-01M|SCV45)|Galaxy Note 10\+`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-(?:N970(?:U1|W8|[089DFJKLSUWX])|N971N)|Galaxy Note 10`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-N770[FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N981(?:B/DS|U1|[0BNUW]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N985(?:F/DS|F))|Galaxy Note 20 Ultra`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N980(?:F/DS|F)|Galaxy Note 20)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N986(?:B/DS|U1|[0BCNUW])|SC-53A|SCG06)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W750V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G310R5`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-E2152`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(GT-(P|N8|N5)[0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?((?:SM-[TNP]|GT-P)[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)((?:SCH|SGH|SPH|SHV|SHW|GT|SM)-[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)Galaxy ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Galaxy ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG[\-][ ]?([a-z0-9]+[\-_][a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG;[ ]?([a-z0-9]+[\-_][a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG[ _/\-]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)SAMSUNG;[ ]?([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)SEC_SC-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SEC-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:portalmmm|o2imode)/2\.0 ([SZ][a-z0-9]+)`),
		regexp.MustCompile(`(?i)sam([rua][0-9]+)`),
		regexp.MustCompile(`(?i)(T3G_04|TWIFI-06)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMTRON_W_)?(43SA70[15]|50SA707|55SA703)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:8312D|G(60[25]|70[3568]G?|785|803)|N83(?:-2cpu)?|N91) Build`),
		regexp.MustCompile(`(?i)G(60[25]|70[3568]G?|785|803)`),
		regexp.MustCompile(`(?i)Sansui[_ ]|(?:S505024)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sansui[_ ](Switch|Play|Fun|SA4[01]|U4[56]|U3[02]|Nova)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SANTIN|(?:BiTBiZ_V58|ACTOMA ACE|DREAMPLUS03A|Candy U7 Pro|GAAMII|RS635H|HY-002 Plus|HongQi HQ1|G101-OG|HEXIN-H2-A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BiTBiZ_V58(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAAMII G1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAAMII(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEXIN-H2-A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Candy U7 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DREAMPLUS03A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GreenOrange(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLASSONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)halove(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ACTOMA ACE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)monica(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HongQi HQ1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POWER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GALAZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEWDUN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEXIN[_ -](H2-A|H3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HY-002 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G101-OG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SANTIN[ _][#]?(Dante|Candy U7|Armor(?: 2)?|YSL-Y7|ANT\.W|N[13]|JS|S6|V9(?:[ _]Pro)?|Life Shine|ovvi|D|11 XS Max|SHUGUO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RS635H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Santin[ _#]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Sanyo|MobilePhone[ ;]`),
		regexp.MustCompile(`(?i)SCP-?6750`),
		regexp.MustCompile(`(?i)SCP-?6760`),
		regexp.MustCompile(`(?i)SCP-?6780`),
		regexp.MustCompile(`(?i)SANYO[ /_-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)MobilePhone ([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i) (TB-PO1|TB-B01|TB-G01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SberBox|SaluteTV|SBDV-00006)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCHNEIDER[;,]`),
		regexp.MustCompile(`(?i)Schok[ _]|FreedomTurboXL`),
		regexp.MustCompile(`(?i)(SL-LED24S90T2S|SL-LED32S49T2S|SL-LED43S98T2SU|SL-LED43S94T2S|SL-LED55S01T2SU)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Pi 5\.5L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Seatel[ _](L2|V8[AE]|T[5-8]|R6|V[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Seeken[ _-]`),
		regexp.MustCompile(`(?i)Seeken[_ -](SG1|SJ1)`),
		regexp.MustCompile(`(?i)Seeken[_ -](ST-101)`),
		regexp.MustCompile(`(?i)Selecline[ _]|(?:S4T7IN|ST19101|S3T10IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ST19101|S4T7IN|S3T10IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Selecline 10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Selenga[ _](A[1345])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sencor|(?:ELEMENT[ _]?(?:(?:7|8|9\.7|10[ _]1)(?:[ _]?V[23])?|P[0-9]+|10\.1 Q001)|10_1Q205|ELEMENT-P5501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?Element (10\.1) (Q001)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2[ _]BASIC`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT8`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT10[ _]1`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?(7Q105)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?(10)_(1Q205|1Q102)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _-]?P([0-9]+)`),
		regexp.MustCompile(`(?i)Sencor[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Sendo([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Senkatel[ _]|(?:MaximusT1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Senkatel[ _](T1009|T8002|T701[12]|T9702)`),
		regexp.MustCompile(`(?i)SENSEIT[ _]?([^;/)]+)( Build|\))`),
		regexp.MustCompile(`(?i)Senwa|(?:S\-?(?:471|7[12]5|6[01]5|915|905TL|1000|5018)|V705B|LS50F| LS50?|LS5518H|LS5718|LS5018F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?471(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?905TL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?5018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5018F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?(615|7[12]5|915)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V705B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS50F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5518H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Senwa[ _-]*([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:AUTOID ?(?:9N|Q[79])|CRUISE[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CRUISE[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUTOID ?(9N|Q[79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NBP-60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHARP|SBM|SH-?[0-9]+[a-z]?(?:[);/ ]|$)|AQUOS|(?:SH-T01|SH-M26|SH-M0[14-9]|SH-M1[1-7](?:-y)?|S[357]-SH|SH-[MZ]([12]0|01|22)|SH-C06|SH-[CL]02|SH-RM(?:1[1258]|02)|SH-R?M19s?|SH-R10A|[34]04SH|401SH|[45]02SH|306SH|[36]05SH|70[1246]SH|80[138]SH|90[1678]SH|50[3679]SH|SHL2[1235]|SHV4[0-8]|SHV3[1-9](?:[-_]u)?|FS80(?:1[08]|32|28|0[29])|TG-L900S|NP601SH|403SH|603SH|SHF3[1-4]|SHV4[035][-_]u|SW001SH|SHG0[1-9]|X4-SH|A002SH|DM-01[JH]|A[01]01SH|606SH|FS801[56]|d-41A|d-51C|NP80[567]SH|NP501SH|A00[34]SH|A102SH|IS05|SH-(?:S50|53A|51B|[HDA]01|01FDQ|S40P|M24)|LP-0[12]|FS8014|SBM00[35]SH|SBM103SH|A10[345]SH|lineage_ss2|LCD_xxSUFOC475A|A20[1248]SH|FS802[56]|ADS1|STTM21VAPP|NPA205SH|SHG10|SHT21|A301SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)506SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)603SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)50[23]SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[34]04SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)606SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)507SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S3-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S5-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S7-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X4-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG06|A10[34]SH|SH-M20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-51C|A204SH|SHG08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-(?:M26|54D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M07(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A003SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-S40P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-54B|SHG05|SH-R?M19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG07|SH-RM19s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A208SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-53C|SH-M24|SHG10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG03|A004SH|SH-M17|SH-53A|A105SH|SH-S50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-D01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M12(?:-y)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-H01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-[MZ]10|801SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-M13|906SH|SH-01M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG04|A102SH|SH-RM18|Aquos zero6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG02|A002SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-Z01|Aquos S2 4/64)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-02E|SH-01[GH]|SH-04H|SH-09D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-01FDQ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-?06D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHL2[1235]|SH-M01|SH-01E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(203SH|30[23]SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-L02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:605SH|SH-03J|SHV39)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:701SH|SHV41|SH-M06)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-M09|SHV42|706SH|SH-03K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)803SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:908SH|SHG01|SH-M14)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M16(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-C02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-C06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHF3[1-4])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A201SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-02J|SH-04G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-02H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)30[56]SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)402SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)403SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:509SH|SH-R10A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP601SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV40|SHV3[24])(?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)702SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aquos P6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV3[183](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8010|SH-M08|SHV43(?:-u)?|SH-01[KL]|lineage_ss2|Aquos S2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8016(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV46|SH-R?M11|901SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV44|808SH|SH-04L|SH-03G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8032|FS8015|SH-02M|SHV45(?:-U)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV48|907SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-RM12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-RM15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-51B|A101SH|SH-M22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A202SH|SH-52C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-51D|A301SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-52D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV3[57](?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TG-L900S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8026(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8002|SHV47)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHG09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SW001SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DM-01[JH])`),
		regexp.MustCompile(`(?i)NP80[56]SH`),
		regexp.MustCompile(`(?i)LP-0([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(00[35]SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(103SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM200SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-08E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHT21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(d-41A|d-51C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SH-T01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LC-(?:[0-9]{2})[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHARP-AQUOS|AQUOSBrowser`),
		regexp.MustCompile(`(?i)SHARP[ -]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)AQUOS[ _-]TV([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(?:SHARP|SBM)([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(SH-?[0-9]+[a-z]?|IS05|ADS1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHIFT6mq?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STV[-_](40LED25S|40LED42S|32LED42S|32LED30C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHTRIH-SMARTPOS-F2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PNT-704[025])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SICO[_ ](?:PLUS|e1002|Topaz)|(?:Express3-Max|SSR3-1-51-5M|SSD-1-53-13M|Mega2(?:max)?|Express3|Diamond 2|Plus3_4G|Plus2 4G|Infinity Max|Nile X|More_3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SICO[_ ]PLUS2|Plus2 4G`),
		regexp.MustCompile(`(?i)SICO[_ ]PLUS`),
		regexp.MustCompile(`(?i)SICO[_ ]Topaz`),
		regexp.MustCompile(`(?i)SICO[_ ]e1002`),
		regexp.MustCompile(`(?i)SIEMENS|SIE-|portalmmm/2\.0 SI|(?:S55|SL45i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SIE-)?(S[56]5|S40|C45|ME45|SLIK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SIEMENS[ \-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SIE(?:MENS )?[\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:SIE-)?(SL45i)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 (SI[a-z0-9]+)`),
		regexp.MustCompile(`(?i)Sigma|(X[_-]Style[ _]?Tab[_ ]A(\d+)|Tab_A1025_X-treme|X[-_ ]?treme[-_ ]?(?:PQ[0-9]{2}|PQ18_MAX)|X-Style_(?:S550[12]|S3502)|Tab A1015|Tab A802|Tab_A1010_Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?treme[-_ ]?PQ([0-9]{2})[_ ]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?treme[-_ ]?PQ([0-9]{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[_-]Style[ _]?Tab[_ ]A(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab (A1015|A802)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab_A1010_Neo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?Style[-_ ]S([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Silelis[ _](T-1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TangoTab|Presto[ )]|PicassoTab_[X9]|PICASSOTABX14|Ultimax|Valumax|S72-B|SX2W`),
		regexp.MustCompile(`(?i)TangoTab[_ ]?(\d+|X)`),
		regexp.MustCompile(`(?i)PicassoTab_?(X14|XL?|9)`),
		regexp.MustCompile(`(?i)(NP602SI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Singtech|(?:Sapphire[_ ](?:H50S|H7S?|H90)|Infinity_I(?:1|_Mix))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sapphire[_ ](H50S|H7S?|H90)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Singtech[ _](Q2|S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity_I1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity_I_Mix(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Siragon|(?:SP[_-](?:5[0124]50|5[34]00|61[05]0|7200))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Siragon[_ ])?(?:SP[_-](5[0124]50|5[34]00|61[05]0|7200))`),
		regexp.MustCompile(`(?i)(?:FINNEY U1|SOLARIN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FINNEY U1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOLARIN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)APRIX C55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SKY|Elite|Fuego)[_ ][3-7]\.[05](?:[A-Z]{1,2})?|Elite[ _](?:PHOTOPRO|5_0T|M45|[45]T|45T|GO|A63Max|M5Plus|T8Plus|T[46]|[ABCDHP]5|5_5_Octa|Octa|[BCEFGHJPTVR]55|[AB]65|G63|N55|T10)|Platinum[_ ](?:5\.0M|5\.5C|[56]\.[05]\+?|[ABCMP]4|[ACGKV]55|[ABDEFGHJKM]5|A7|A57|P9|X|UNO|VIEW2|O|4\.0|4_0Plus)|PLATINUMVIEW|SKY[ _](?:55M|Pro_III|PAD10|PAD8)|SKYVISION|SKY B(?:lack|63)| SKY[ _]Prestige|Sky Vision2|PRO_SELFIE|Premier5|Sky,`),
		regexp.MustCompile(`(?i)Platinum[_ ](?:5\.0M|M5)`),
		regexp.MustCompile(`(?i)Platinum[_ ]5\.5C`),
		regexp.MustCompile(`(?i)Platinum[_ ]([56])\.([05])\+`),
		regexp.MustCompile(`(?i)Platinum[ _]4\.0`),
		regexp.MustCompile(`(?i)Platinum[_ ](P9) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Platinum[_ ]B4P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Platinum[_ ]([ABCMP]4|[ACGK]55|[ABDEFGHJKM]5|A7|A57|P9|X|UNO|O|6\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Platinum[_ ]?VIEW(2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY[ _]PAD10Max`),
		regexp.MustCompile(`(?i)SKY[ _]PAD8Pro`),
		regexp.MustCompile(`(?i)SKY[ _]PAD(10|8)`),
		regexp.MustCompile(`(?i)Elite_Octaplus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite[_ ]T8Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite_OctaXS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite OctaX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite Octa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite OctaMax(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite ([ENP])55Max`),
		regexp.MustCompile(`(?i)Elite[ _](M45|Go|[45]T|T[46]|[ABCDHP]5|[A-HJPTVR]55|[AB]65|G63|45T|N55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite (T10)`),
		regexp.MustCompile(`(?i)Elite[_ ]([3-7])[\._]([05](?:[A-Z]{1,2})?\+?)`),
		regexp.MustCompile(`(?i)Fuego[_ ]([3-7]\.[05](?:[A-Z]{1,2})?\+?)`),
		regexp.MustCompile(`(?i)SKY Black ?(2)?`),
		regexp.MustCompile(`(?i)SKY 5\.0Pro II`),
		regexp.MustCompile(`(?i)SKY[ _]PrestigeX`),
		regexp.MustCompile(`(?i)SKY[ _]Prestige`),
		regexp.MustCompile(`(?i)SKY[_ ]([3-7]\.[05](?:[A-Z]{1,2})?)`),
		regexp.MustCompile(`(?i)Sky, (XiOneUK|LlamaUK), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)SKYSTREAM[_ ](?:3Plus|One)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKYSTREAM[_ ]3Plus`),
		regexp.MustCompile(`(?i)SKYSTREAM[_ ]One`),
		regexp.MustCompile(`(?i)(?:SKYLINE[_ ])?(32YST5970|50UST5970|24YST5970|40LST5970|32YST5975|43LST5975|43U6510|5[58]U7510|43LST5970)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sky_?worth|SWTV-|(?:FlowBox-F1|SWTV|SW-22AE NF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SWTV-2[02]AE(?:-PRO|-FHD)?)`),
		regexp.MustCompile(`(?i)Sky_?worth ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Android.+(?:Safari)(?: Build|\) AppleWebKit)|SMADL[ _]`),
		regexp.MustCompile(`(?i)Android.+(?:Safari)(?: Build|\) AppleWebKit)`),
		regexp.MustCompile(`(?i)SMADL[ _]Matri([2X])`),
		regexp.MustCompile(`(?i)Smailo_(2GO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Coral 4|Slide Lite|Notrino|Smart PRIME II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Coral 4|Slide Lite|Notrino|Smart PRIME II)`),
		regexp.MustCompile(`(?i)SK5501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SK5501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMARTBOOK[ _]S`),
		regexp.MustCompile(`(?i)SMARTBOOK[ _]SB ?13`),
		regexp.MustCompile(`(?i)SMARTBOOK[ _](S9Q9|S7QS|S9\+)`),
		regexp.MustCompile(`(?i)(ST1009|ST7160|ST1009X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Android 7(?:[\d.]*);(?: [\w-]+;)? M512| M520| M700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M512|M520|M700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smartfren|Androtab|Andromax|PD6D1J|AD682J|AD68[89]G|AD6B1H|AD9A1H|AD682H|AD683G`),
		regexp.MustCompile(`(?i)Andromax[ _\-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Andromax[ _\-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Smartfren[ _\-]([^/;\)]+)(?: Build|[/;\)])`),
		regexp.MustCompile(`(?i)(Androtab[^/;]+) Build`),
		regexp.MustCompile(`(?i)Smartisan[_ ]|(SM(?:70[15]|[89]01|919)|OD10[35]|YQ60[1357]|DT2002C|DE106|DT190[12]A|O[CE]106|OS103|O[CS]105)[ /;\)]`),
		regexp.MustCompile(`(?i)SM70[15]`),
		regexp.MustCompile(`(?i)YQ60[1357]`),
		regexp.MustCompile(`(?i)OD10[35]`),
		regexp.MustCompile(`(?i)OS105[ /;\)]`),
		regexp.MustCompile(`(?i)DE106[ /;\)]`),
		regexp.MustCompile(`(?i)OE106[ /;\)]`),
		regexp.MustCompile(`(?i)OC10[56][ /;\)]`),
		regexp.MustCompile(`(?i)DT2002C[ /;\)]`),
		regexp.MustCompile(`(?i)DT190[12]A[ /;\)]`),
		regexp.MustCompile(`(?i)OS103[ /;\)]`),
		regexp.MustCompile(`(?i)Smarty[_ ]`),
		regexp.MustCompile(`(?i)Mini ?(7L?)`),
		regexp.MustCompile(`(?i)Smooth|S2 Advance(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth 5\.5 lite`),
		regexp.MustCompile(`(?i)Smooth (5\.[05]|6\.[015])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth626(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth 6\.26 (Lite|Max|Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth Note 6\.8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth (8GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smotreshka Box (115NA|413NA|213a?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)soda (?:S2|[SE]1|FIRE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)soda (S2|[SE]1)`),
		regexp.MustCompile(`(?i)Softbank|J-PHONE`),
		regexp.MustCompile(`(?i)Softbank/[12]\.0/([a-z0-9]+)`),
		regexp.MustCompile(`(?i)([a-z0-9]+);Softbank;`),
		regexp.MustCompile(`(?i)J-PHONE/[0-9]\.[0-9]/([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(SS5214G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLAS[;,]`),
		regexp.MustCompile(`(?i)SOLONE|(?:E1457|W145[02]|Sun_S5501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLONE[ _]Elite[ _]L5501`),
		regexp.MustCompile(`(?i)SOLONE[ _]SUMO[_ ]S5001`),
		regexp.MustCompile(`(?i)SOLONE[ _](SL-K40|S5002)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sonim[ -]|XP(?:[67]7|[358]8|99)00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP3400`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP3800`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP3900`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP5800`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP5700`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP6700`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP7700`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP8800`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP9900`),
		regexp.MustCompile(`(?i)Sony(?: ?Ericsson)?|SGP|Xperia|(?:[4-9]0[12])SO|C1[569]0[45]|C2[01]0[45]|C230[45]|C530[236]|C550[23]|C6[56]0[236]|C6616|C68(?:0[26]|[34]3)|C69(?:0[236]|16|43)|D(?:200[45]|21(?:0[45]|14)|22(?:0[236]|12|43)|230[2356]|240[36]|2502|2533|510[236]|530[36]|5316|5322|5503|58[03]3|65(?:0[23]|43|63)|66[03458]3|66[14]6|6708)|E(?:20[0345]3|2006|210[45]|2115|2124|230[36]|2312|23[356]3|530[36]|53[3456]3|5506|55[356]3|56[46305][36]|58[02]3|6508|65[35]3|66[0358]3|68[358]3)|F(?:311[12356]|331[13]|321[12356]|5[13]21|5122|813[12]|833[12])|G(?:2299|312[135]|311[26]|322[136]|3212|331[123]|3412|3416|342[136]|823[12]|834[123]|8[14]4[12]|8188)|H(?:3113|3123|3133|3213|3223|3311|3321|3413|4113|4133|4213|4233|4311|4331|4413|4433|4493|8116|8166|82[1679]6|83[12]4|8416|9436|9493)|I(?:3[12]23|3213|[34]113|[34]312|4193|42[19]3|4332)|J(?:3173|3273|81[17]0|82[17]0|91[15]0|92[16]0)|(?:WT|LT|SO|ST|SK|MK)[0-9]+[a-z]+[0-9]*(?: Build|\))|X?L39H|XM50[ht]|XQ-[A-Z]{2}[0-9]{2}|W960|portalmmm/2\.0 K|S3[69]h|SOG(?:0[1-9]|10)|SOL2[2-6]|SOT[23]1|SOV3[1-9]|SOV4[0-3]|X10[ia]v?|E1[05][ai]v?|MT[0-9]{2}[a-z]? Build|SO-0(?:[12]C|[2-5]D|[1-4]E|[1-5]F|[1-5]G|[1-4]H|[1-4]J|[1-5]K|1M|[1-3]L)|R800[aix]|LiveWithWalkman|BRAVIA|SGP771|E3 Dual|A[012]01SO|A204SO|A[12]02SO|SO-[45]1[AB]|SO-5[1234][ABCD]|A[12]03SO|A002SO|NW-(A[13]00|ZX500|Z1000)Series|NSZ-GS7|SmartWatch 3|SVP-DTV15`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E10[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E15[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(LT15[ai]?v?|SO-01C)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT18[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT11`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT15`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT27`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MK16[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST15[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST17[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-02L`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST18[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SK17[ai]?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?X10[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)M1`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?R800`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?WT19|LiveWithWalkman`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?CK13i`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?CK15[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F100i`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J105`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J108`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J10`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U10`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U100`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U1`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U5`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U8`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W100`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W150`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W960`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?WT13`),
		regexp.MustCompile(`(?i)SO-01E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ-BE[4-7]2`),
		regexp.MustCompile(`(?i)XQ-AQ[56]2`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I(?:4113|31[12]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J3173(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SO-41B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A203SO|SO-53C|SOG08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A001SO|XQ-AU42|XQ-AU51|XQ-A[TU]52|SO-41A|SOV43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A001SO|XQ-AU42|XQ-AU51|XQ-A[TU]52|SO-41A|SOV43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A10[12]SO|SO-52B|SOG04|XQ-BT52)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SO-52D|XQ-DC72|XQ-DC54)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:XQ-ES[45]4|XQ-ES72|SOG14|SO-52E|A402SO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ-BT44(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:XQ-CC72|XQ-CC[45]4|SOG07|SO-52C|A202SO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I(?:42[19]3|32[12]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I4193`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J(?:9110|81[17]0)|SOV40|SO-03L|802SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J9150)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG01|SO-51A|XQ-AT42|XQ-AT51|SO51Aa|XQ-AT72)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SO-51B|SOG03|XQ-BC[4567]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG06|XQ-CT[67]2|SO-51C|A201SO|XQ-CT[45]4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG10|SO-51D|XQ-DQ(?:[67]2|[45]4))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:XQ-EC72|XQ-EC54|XQ-EC44|SOG13|SO-51E|A401SO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT22i|Xperia P`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT25i|Xperia V`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J92[16]0`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J82[17]0|SO-01M|SOV41|901SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG02|A002SO|XQ-AS[4567]2|SO-52A)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:XQ-DE72|XQ-DE[45]4)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SO-53B|A103SO|SOG05|XQ-BQ[4567]2)`),
		regexp.MustCompile(`(?i)(?:SOG09|XQ-CQ72|SO-54C|XQ-CQ[45]4|XQ-CQ62|A204SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOV42|902SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J3273`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26ii`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26i|Xperia S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-02C`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-03D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26w`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT28[aih]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT29i|Xperia TX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT30a`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT30p`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST21[ia]2`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST21[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST23[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST25[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL22`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL21`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST26[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST27[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C150[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C160[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E210[45]|E2115|E2124)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E20[05]3|E2006`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C190[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C200[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C210[45]|S36h`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C230[45]|S39h`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C530[236]|Xperia SP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C550[23]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C650[236]|Xperia ZL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL25(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C66(?:0[236]|16)|SO-02E)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C68(?:0[26]|[34]3)|XL39H|SOL24)|Xperia Z Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xperia Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D200[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D21(?:0[45]|14)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D22(?:0[236]|43)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2212|E3 Dual`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E20[34]3`),
		regexp.MustCompile(`(?i)H33[12]1`),
		regexp.MustCompile(`(?i)H43[13]1`),
		regexp.MustCompile(`(?i)I43[13]2`),
		regexp.MustCompile(`(?i)XQ-AD5[12]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2302`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D230[356]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D240[36]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E230[36]|E23[35]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E2312|E2363)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E56[05][36]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E56[436]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2502`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2533`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E53[05]3|E5306`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E53[0346]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E5506|E5553`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E55[36]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D510[236]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D530[36]|D5316|XM50[ht])`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D5322`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D5503|Xperia Z1 Compact`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C69(?:0[236]|16|43)|SOL23|L39H|SO-0[12]F)|Xperia Z1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D58[03]3|SO-02G)|Xperia Z3 Compact(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP561|SOT21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D65(?:0[23]|43)|SO-03F)|Xperia Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D66[045]3|D66[14]6|SO-01G|SOL26|401SO)|Xperia Z3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D6633|D6683)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E65[35]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D6708)`),
		regexp.MustCompile(`(?i)SOV31|402SO|SO-03G`),
		regexp.MustCompile(`(?i)SGP771|SOT31|SO-05G`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E58[02]3|SO-02H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E66[05]3|SOV32|501SO|SO-01H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E66[38]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E68[58]3|SO-03H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E6833`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F311[135]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F311[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F321[135]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F321[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F833[12]|SOV34|601SO|SO-01J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:701SO|SOV36|G834[123]|SO-01K)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G8441|SO-02K`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F331[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G312[135]|G311[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G341[26]|G342[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G3426`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G322[136]|G3212`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H31[123]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H41[13]3`),
		regexp.MustCompile(`(?i)H44[19]3|H3413`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H(?:3213|3223|4213|4233)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G823[12]|SOV35|602SO|SO-03J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:G814[12]|G8188|SO-04[JK])`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:H83[12]4|H82[17]6|SOV37|SO-03K|H8296|702SO)`),
		regexp.MustCompile(`(?i)(?:H81[16]6|SOV38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:H(8416|9436|9493)|SO-01L|SOV39|801SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G331[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G3312`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-04E`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-04D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-05D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5121`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5122`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5321|SO-02J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:F8131|502SO|SOV33|SO-04H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F8132`),
		regexp.MustCompile(`(?i)(?:Sony)?(?:SGP(?:311|312|321)|(Sony)?SO-03E|Tablet Z LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP712(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP(?:511|512|521)(?:[);/ ]|$)|SO-05F`),
		regexp.MustCompile(`(?i)SGP(?:6[124]1|612)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGPT(?:12|121|122|123|13|131|132|133)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BRAVIA )(2K GB ATV3|[48]K UR[123]|4K GB ATV3|4K GB|4K VH21|4K VH2|4K 2015|2015|VH1|VU[12]|VU31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SVP-DTV15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NSZ-GS7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sony-BRAVIA-VH1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NW-(A[13]00|Z1000|ZX500)Series`),
		regexp.MustCompile(`(?i)BDPlayer; ([0-9a-z\-_]+);`),
		regexp.MustCompile(`(?i)BDP(201[3-7])`),
		regexp.MustCompile(`(?i)SonyBDP|SonyDBV|BDPlayer`),
		regexp.MustCompile(`(?i)(?:Sony-)?(KDL?-?[0-9a-z]+)`),
		regexp.MustCompile(`(?i)Opera TV Store.*(?:Sony-)([0-9a-z\-_]+)`),
		regexp.MustCompile(`(?i)((?:WT|SO|ST|SK|MK)[0-9]+[a-z]*[0-9]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)(MT[0-9]{2}[a-z]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 K([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SonyEricsson ?IS11S`),
		regexp.MustCompile(`(?i)Sony ?Ericsson?([^/;]*) Build`),
		regexp.MustCompile(`(?i)SonyEricsson([CGJKPTWZ][0-9]+[a-z]+)/`),
		regexp.MustCompile(`(?i)Sony ?Ericsson ?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Sony Corporation/([^/;]*)\)`),
		regexp.MustCompile(`(?i)Sony (Tablet[^/;]*) Build`),
		regexp.MustCompile(`(?i)(SGP[^/;]*) Build`),
		regexp.MustCompile(`(?i)Xperia ([^/;]*Tablet[^/;]*) Build`),
		regexp.MustCompile(`(?i)Xperia ([^;/]+) \(AOSP\) Build`),
		regexp.MustCompile(`(?i)Xperia ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(XQ-[A-Z]{2}[0-9]{2})`),
		regexp.MustCompile(`(?i)Sony[ -]?([^/;]*) Build`),
		regexp.MustCompile(`(?i)Sony[ -]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Soullink[ _](S1)`),
		regexp.MustCompile(`(?i)((?:SM-LED32M(?:1[014]|0[49])S)|SM-QLED50T2SU|SM-LED(?:24M0[69]S|43M02S|40M04S|(?:5[05]|43)M0[12]SU|32M13S|65M0[12]SU))(?:_-Ver01)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOYES[ _](?:[67]S|XS|XS11)|S10-H|XS12 PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOYES[ _]([67]S|XS11|XS)`),
		regexp.MustCompile(`(?i)Spark Plus 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sparx[ _]|(?:NEO_6|NEO 5|Neo_6_plus|Neo 5 Pro|Neo X|Edge 20 Pro|Ultra 8 Pro)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Neo ([578]) Pro`),
		regexp.MustCompile(`(?i)Neo[ _]([5687])[ _]Plus`),
		regexp.MustCompile(`(?i)Neo[ _]([567])`),
		regexp.MustCompile(`(?i)(Versity (?:9640|9553))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CARBONO_5|CUARZO_6|DIAMANTE_5|VULCANO_55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VULCANO_55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CARBONO_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUARZO_6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIAMANTE_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice|(?:Xlife[-_ ](?:\d+Q?|Victor5|M5q\+|M5 Pro|Proton5|Electro55HD))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Spice_)?Xlife[-_ ](\d+Q?|M5\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xlife-M5q\+`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(7\d{2})N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(7\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(\d{3})N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(\d{3})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Spice[-_ ]?([^/;]+)(?:/|$)`),
		regexp.MustCompile(`(?i)AQT(100|8[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:N(?:9[5678]00|8800|9000|9977)|Star[ _]N9589)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Star_)?N(9[5678]00|8800|9977|9589)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starlight|(?:My_Star_X|My_star_18|RIO STAR|C_Note(?:_Pro)?|Star_Mix_2|I_STAR_PLUS|star_plus_plus|star_two|I star (?:one|two))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I star two|star_two`),
		regexp.MustCompile(`(?i)(?:Starmobile (?:Play (?:Neo|Spark|GO|Click|Max)|Astra)|DIAMOND D1|UP[_ ](?:Sense|Rave|Groove|Octa|Prime|Selfie|Snap|Xtreme|XL|Max|Vision|Neo)|PLAY (?:Club|Style|Click LTE|Dash)|ENGAGE7\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starmobile PLAY GO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starmobile ASTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIAMOND D1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Starmobile )?Play (Neo|Spark|Click|Club|Style|Max|Dash)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UP[_ ](Sense|Rave|Groove|Octa|Prime|Selfie|Snap|Xtreme|XL|Max|Vision|Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ENGAGE7\+`),
		regexp.MustCompile(`(?i)Andromeda[ _]S(707|84[05]|850|8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart_Starwind|(?:SW-LED(?:24SG303|32SB30[02]|42SB300|43SB304|40SG300|40SB304|43SG30[20]|43UB404|43UG40[0135]|32SG3(?:0[01245]|11)|55UG40[03]|58UG401|5[05]UB401|50UG40[03]|65UG403|5[08]UB400|58UA401))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SW-LED(\d{2}[SU][ABG]\d{3})`),
		regexp.MustCompile(`(?i)STX[ -]([^;/]+)|STONE EVO`),
		regexp.MustCompile(`(?i)STX[ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)STX[ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)eZee[^a-z]*Tab ?([^;/]*) Build|STOREX LinkBox`),
		regexp.MustCompile(`(?i)eZee[^a-z]*Tab ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)StrawBerry[ _]`),
		regexp.MustCompile(`(?i)StrawBerry[ _](SX|QX15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B3 (?:Maxi|Simply)|B3Pro|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:B1s|HT28|HT16))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B3 (?:Maxi|Simply)|B1s|HT28|HT16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B3Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STYLO|(?:TARISTAB[234]|Luna|CPE91|VS571|VS5502|S57_A[ZL]URE|BOLD_PLUS|INKOSI(?:_PRO)?|INKULU_PRO|Ithemba|S56 MIST|S55 Nova|INKOSI_PRO_4G|S40_VISTA|S50_JADE|S50_BOLD|S64_ALPHA|S53_STARK|S40_LIFE|LIFE_2|S49[_ ](?:MONO|POISE|ECO)| [27]21|721_PRO|DQR22|MOSCOW|STEP_UP|ARCTIC|S61 JAZZ|DVK87 Orion 8 Tab|DVK82 Mercury)(?:[);/ ]|$)| (?:BRAVE|SATURN)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)STYLO[ _](F1|Viva)`),
		regexp.MustCompile(`(?i)STYLO[ _]SONIC`),
		regexp.MustCompile(`(?i)([27]21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STYLO[ _]S9[_ ]TOPAZ`),
		regexp.MustCompile(`(?i)SV61 VECTOR\+`),
		regexp.MustCompile(`(?i)SM61 MAGIC\+`),
		regexp.MustCompile(`(?i)S49[_ ]POISE`),
		regexp.MustCompile(`(?i)S49[_ ]MONO`),
		regexp.MustCompile(`(?i)S49[_ ]ECO`),
		regexp.MustCompile(`(?i)Stylo[_ ](521)`),
		regexp.MustCompile(`(?i)(VS571|VS5502)`),
		regexp.MustCompile(`(?i)TARISTAB([2-4])`),
		regexp.MustCompile(`(?i)SUBOR[ _]`),
		regexp.MustCompile(`(?i)SUBOR[ _](S5|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUBOR[_ ]K10PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR[ _]`),
		regexp.MustCompile(`(?i)SUGAR Y([78]) MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR S60 pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR F7 Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR[ _]([^);/]+) ?Dual(?: Build|[);])`),
		regexp.MustCompile(`(?i)SUGAR[ _]([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Cyclone (?:Voyager|X8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cyclone (?:Voyager 2|Voyager))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cyclone X8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUNVAN[ _\-]`),
		regexp.MustCompile(`(?i)SUNVAN[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)SUNVAN[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(Model Y)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1s-G|T2s_LITE|V2_PRO-ST)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T2s_LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1s)-G`),
		regexp.MustCompile(`(?i)(?:SS4G9 Mira|SS4G7 Sole|SS4G1 Luna|SS4G8 Nora|SS4G6 Lola|SN7014S?|SN7016|SN10016|SN01DNGL300|SUNNY (?:SS01|S52D)|SUNNY;SmartTV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SS4G9 Mira|SS4G7 Sole|SS4G1 Luna|SS4G8 Nora|SS4G6 Lola)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUNNY (SS01|S52D)`),
		regexp.MustCompile(`(?i)(SN7014S?|SN7016|SN10016)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUNNY;SmartTV`),
		regexp.MustCompile(`(?i)SN01DNGL300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB(?:2323GMQC|1081|918QC|917QC-(?:8|16)GB)|TAB1090)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sunwell_)?(?:T95ZPLUS|T95[KU]PRO|MINIM8S|MXQ-H3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sunwell_)?T95ZPLUS`),
		regexp.MustCompile(`(?i)(T95[KU])PRO`),
		regexp.MustCompile(`(?i)MINIM8S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MXQ-H3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPER GENERAL[;,]`),
		regexp.MustCompile(`(?i)SuperBOX_S2PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SC-[0-9]+[a-z]+|SC-2110)`),
		regexp.MustCompile(`(?i)(?:SuperTab(?:A10|K7|S7G)|K7 Kids)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SuperTab(A10|K7|S7G)`),
		regexp.MustCompile(`(?i)SUPRA|NVTAB 7\.0 3G|M74C 3G`),
		regexp.MustCompile(`(?i)SUPRA[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(NVTAB 7\.0 3G|M74C 3G)`),
		regexp.MustCompile(`(?i)(SN10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOLT_(5XL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUZUKI[ _]|(?:ECOPAD7|SUMOPad10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUMOPAD(8100|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SBX604)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Slate2|Swipe_(?:Elite_3M?|Strike8)|Elite_(?:Grace|VR)|EliteDual|Elite (?:Prime|Star|Note|Sense|Power)|Konnect (?:Prime|Power|Neo 4G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Swipe_)?Elite[_ ]?(Sense|VR|3M?|Grace|Star|Prime|Note|Dual|Power)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slate2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Swipe[_ ]Strike8`),
		regexp.MustCompile(`(?i)swisstone (SD 5[13]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)eSmart[_ ]([EM]2|M3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RS-403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SYMPHONY[ \_]([a-z0-9]+)|(?:(?:roar[ _](?:V20|A50|V78|E80|V150))|innova[123]0|roarV95|ZVIII?|V10[25]|V1[23]0|V128|V14[012]|V1[45]5|SYMTAB\d+| (?:i9[79]|i7[245]|i8[05]|i6[568]|i30|i1[58]|i120|Z30 pro|Z60 plus|[ZR]30|V9[246789]|V75m)|INOVA|Android 7(?:[\d.]*);(?: [\w-]+;)? P11|Android 6.*; (?:V75|i2[015])|EASY_NAV_2|G10\+|helio 30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)innova([123]0)`),
		regexp.MustCompile(`(?i)roar[ _]?(V20|A50|E80|V78|V95|V150)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z30|P7) pro`),
		regexp.MustCompile(`(?i)(Z60) plus`),
		regexp.MustCompile(`(?i)G10\+`),
		regexp.MustCompile(`(?i)(V141|V1[23]0|V10[25]|V128|V14[012]|i9[79]|i7[245]|i8[05]|i6[568]|i30|i1[58]|i120|V1[45]5|[ZR]30|V9[246789]|V75m?|i2[015]|P11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SYMPHONY[ \_]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SYMTAB(\d+)`),
		regexp.MustCompile(`(?i)(SYX-(?:T70[04]|T10[12]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)System76 Galago Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T-Mobile[ _][a-z0-9 ]+|(?:REVVLRY\+?|REVVL V\+ 5G|REVVL 2(?: PLUS)?|5062[ZW]|5007[ZW]|T790[WZ]|Telekom Puls|TMAF0[23]5G|TMRVL4G|TMRV0[67]P?5G|T Phone|T Tablet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5062[ZW]`),
		regexp.MustCompile(`(?i)5007[ZW]`),
		regexp.MustCompile(`(?i)T790[WZ]`),
		regexp.MustCompile(`(?i)REVVL V\+ 5G`),
		regexp.MustCompile(`(?i)REVVL 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TMAF025G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TMRV075G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TMAF035G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TMRV07P5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Telekom Puls(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T Phone Pro \((2023)\)`),
		regexp.MustCompile(`(?i)T Phone \((2023)\)`),
		regexp.MustCompile(`(?i)T Phone Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T Phone (\d*)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T Phone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T Tablet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T-Mobile[ _]([a-z0-9_ ]+) Build`),
		regexp.MustCompile(`(?i)T-Mobile[ _]([a-z0-9_ ]+)`),
		regexp.MustCompile(`(?i)T96mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TADAAM BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TAG[ -]TAB[ -]III?|TAGPhone)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG[ -]TAB[ -](III?)`),
		regexp.MustCompile(`(?i)TAGPhone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAUBE[;,]`),
		regexp.MustCompile(`(?i)Ignis [89]`),
		regexp.MustCompile(`(?i)Ignis ([89])`),
		regexp.MustCompile(`(?i)TCL,|smarttv_AFTMM-TCL|AFTMD002|AFTSHN02|AFTMD001|TCL[_ -][a-z0-9]+|(?:TCL[_ -][^;/]+ Build)|TCL72563C|(?:TCLGalaG60(?:\(9108A\))?|4163D|4187[DMU]|4188[CLRSVO]|5004S|5033TP|5087Z|5101A|5102[BKLMOP]|5107G|5124J|5130[JMEI]|5133MP|5133A|5148A|5152D|5159[AJ]|5164[AD]|5199I|6102[ADH]|6125[ADFH]|6127[AI]|6156[ADH]|6159[AK]|6165[AHS]|7040N|8491X|9048S|9060[GX]|9080G|9081X|9295G|9296[GQ]|A(?:50[2789]|600)DL|T(?:60[123]|701)DL|T(?:506D|671[EFGHO]|676[HJK]|766[AHJSU]|767[GHW]|770[BH]|771K|773O|774[BH]|775[BH]|776[HO]|779W|780H|781SPP|781S|781|782H|790[SY]|799[BH]|810[HS])|Percee TV|9183W|9198S|9309X2|9317X1|8[14]96G|916[016]G| 9061| 8182| 8167| 8095|BeyondTV\d?|UnionTV|T507U|5131[AG]|T610[KE]|T612B|9132[GS]|9137W|T430W|T431[DUQ]|T501[CL]|T768S|9494G|9460G|9466X|T60[79]DL)(?:_(?:RU|EEA|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TCLGalaG60(?:\(9108A\))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5004S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T430W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T501[CL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T779W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5[01]33[MT]P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4187D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:4163D|4188S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5131[AG]`),
		regexp.MustCompile(`(?i)T431[DUQ](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6102[AD](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5164[AD](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6102H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T506D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T507U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T610[KE](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T774[BH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T775B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T775H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6125[ADFH]`),
		regexp.MustCompile(`(?i)6127[AI]`),
		regexp.MustCompile(`(?i)6156[ADH]`),
		regexp.MustCompile(`(?i)6159[AK]`),
		regexp.MustCompile(`(?i)5199I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A509DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A600DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5102[LO](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5152D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5133A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5102[BKMP](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5159[AJ](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5101A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5107G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5124J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5130[JEI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4187[MU](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5148A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5130M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T780H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T782H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T790Y(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T790S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TCL[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)TCL[_ -]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(7040N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A502DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A507DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A508DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T601DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T609DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T770[HB](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T766[AHJSU](?:_(?:EEA|TR|RU))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T671[HFEO](?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T768S(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6165[AHS]`),
		regexp.MustCompile(`(?i)T676[KJ]`),
		regexp.MustCompile(`(?i)(?:4188[CLRO]|T602DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T781S|T781SPP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T776[HO]`),
		regexp.MustCompile(`(?i)T767[GW](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T671G|T701DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T767H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T773O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5087Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T781(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T810[SH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T799[BH]`),
		regexp.MustCompile(`(?i)T771K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T607DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T612B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8095(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9048S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9198S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9460G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9183W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:9061|9081X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8496G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8196G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9309X2(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:8167)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:8182)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9060G|9161G`),
		regexp.MustCompile(`(?i)9060X|9160G`),
		regexp.MustCompile(`(?i)(Percee TV|UnionTV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BeyondTV(\d)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:43|55)S62FS|(?:43|50)P65US|U(?:43|60|65)P60|65P4USM|(?:40|49)S62|L32S6|55P610|50P8S|55S62|(?:43|50)P6US|55DP60)`),
		regexp.MustCompile(`(?i)AFTMD002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTSHN02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTMD001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TCL,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(K(?:24|32)DLX9HS|K40DLM8FS|K40DLX9FS|K50DLX9US|K50DLJ10US|K43DLJ10US|K32DLX10HS|K32DLJ12HS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Build/TDTech|(?:NAT-TN70|TDT-MA01|AVA-PA00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECHNOSAT[ _]`),
		regexp.MustCompile(`(?i)TECHNOSAT[ _](W2)`),
		regexp.MustCompile(`(?i)TEENO[_ ](S9|A1|i12|S11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TENPLUS[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)TETC[ -](F\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIANYU ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TIANYU-KTOUCH/([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:TIMVISIONBOX|TIM_BOX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Metal_Tablet_10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MT-1011QR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOGO[_ ]`),
		regexp.MustCompile(`(?i)TOOGO[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(ArtiDiag800 BT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOPSHOWS[ _-](X[19])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:T1[235]|T151|T2[1268])-EEA|W-?109)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T1[235]|T151|T2[1268])-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)W-?109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TPS-(SC10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Magictab (?:9GX|7GE|718))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TT20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NuclearSX-SP5)`),
		regexp.MustCompile(`(?i)Amazing[ _](X[35]s|X[123567]|A5S|A3[025]|A[468]|A4S|A5[057]|P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](X[35])s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](A5S|X[123567]|A[468]|A4S|A5[057]|A3[025])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWZ[-_ ](?:TabPlay|Y6[08]|Y52|A49|A[59]5|A567|AA8|QQ[12])|TWZQQ1|(?:OX_X1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWZ[_ ]TabPlay[_ ](12[56])`),
		regexp.MustCompile(`(?i)TWZ[-_ ]?(Y6[08]|Y52|A49|A[59]5|A567|AA8|QQ[12])`),
		regexp.MustCompile(`(?i)(TYD-109([_ ]Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TP_1_3000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID169|MID211H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Nitro 551)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA-(?:2[_ ](?:3G|Pro)|5[05][_ ]Power|[1-4]|[1246]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tanix|(?:TX[53] MAX|TX[69]s|TX3 Mini|TX3MINI|TX5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TX([69])s`),
		regexp.MustCompile(`(?i)Tanix (A3)`),
		regexp.MustCompile(`(?i)TX([35]) MAX`),
		regexp.MustCompile(`(?i)TX3 Mini|TX3MINI`),
		regexp.MustCompile(`(?i)TeachTouch[_ ]`),
		regexp.MustCompile(`(?i)TeachTouch (Table)`),
		regexp.MustCompile(`(?i)TECTOY_5029Y(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tech[ _]?pad|XTAB[ _-]|(?:3G_16|Dual (?:C1081HD|C981HD)|S813G|NOTE[_ ]4CAM|M5(?:Go|Plus)|M6Plus|Android 8(?:[\d.]*);(?: [\w-]+;)? 816x?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tech ?Pad[_ ](10Y|9x|i700|10Z|7QC|10QC)`),
		regexp.MustCompile(`(?i)TechPad[_ ]3Gx`),
		regexp.MustCompile(`(?i)Android 8(?:[\d.]*);(?: [\w-]+;)? (816x?)`),
		regexp.MustCompile(`(?i)Dual (C981HD|C1081HD)`),
		regexp.MustCompile(`(?i)XTAB[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)M5(Go|Plus)`),
		regexp.MustCompile(`(?i)NOTE[ _]4CAM`),
		regexp.MustCompile(`(?i)Tech ?pad[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)TECHSMART[_ ]`),
		regexp.MustCompile(`(?i)TECHSMART[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)TechniPhone 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:UP10SI[34]6LA|UP918|UP7[67]8|UP1018|UP10_SH36LAG|Ultrapad_UP10\.S36LA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(UP10SI[34]6LA|UP918|UP778|UP768|UP1018)`),
		regexp.MustCompile(`(?i)(?:Ultrapad_)?UP10[_.](SH36LAG|S36LA)`),
		regexp.MustCompile(`(?i)Allwinner Nitro Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Teclast|P80_G3M2|TLA00[12]|TLA016|X98 Air III|M20_4G|X98 Air II\(HG5N\)|Tbook|X80 Power\(B2N4\)|P80H\(D1C2\)|T20\(T2E1\)|(?:[TM]40 Plus|T30|P80[XHT]|P20HD|P10[_ ]HD|M40|P10SE?|M30_Pro|M40SE|P8[05]|P25(?:_T)?|P85T|P[23]0S|P[34]0HD|T40S)_(?:ROW|EEA|RUS|W_EEA)|P20HD\(N6H5\)|T40 Plus\(M7T3\)|T40Pro|T40 PRO(?:\(T1A1\))?|T10\(E3C[56]\)|P10S\(N4H5\)|98\(M1E[45789]\)|98\(M3E3\)|X10 \(M1D3\)|M89 Pro|M40\(N9H[123]\)|P20HD\(N6H7\)|M40SE\(M5T3\)|M40(?:SE?|Pro|Air)_(?:ROW|EEA|RUS)|P30Air|P10HD_Lite|(?:T50|M40_?Plus|M40 Pro|T50Pro_W|TLG01|P26T|P40S)_(?:ROW|EEA)|M40Plus_EEA|P40HD_T_(?:EEA|ROW)|T40_Plus_RUS|T40 Air|(?: (?:T4[05]HD|P30T|P80X|M50HD))|(?:Android 13(?:[\d.]*);(?: [\w-]+;)? (?:M50 Pro|T[56]0)|T50HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tbook[_ -]([^;/]+)(?: Build|[;)]|$)`),
		regexp.MustCompile(`(?i)T10\(E3C[56]\)`),
		regexp.MustCompile(`(?i)T20\(T2E1\)`),
		regexp.MustCompile(`(?i)X10 \(M1D3\)`),
		regexp.MustCompile(`(?i)P10S(?:\(N4H5\)|_(?:ROW|EEA))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P20HD_?(?:ROW|EEA|RUS)|P20HD\(N6H[57]\)`),
		regexp.MustCompile(`(?i)P10[_ ]HD_(?:ROW|EEA)`),
		regexp.MustCompile(`(?i)P80[_ ](?:ROW|EEA)|P80_G3M2`),
		regexp.MustCompile(`(?i)P85[_ ](?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)M([43]0)[_ ]?Pro[_ ](?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)M40\(N9H[123]\)`),
		regexp.MustCompile(`(?i)M40[_ ]Plus`),
		regexp.MustCompile(`(?i)M40S[_ ](?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)M40 Plus|M40Plus_`),
		regexp.MustCompile(`(?i)T40 ?PRO`),
		regexp.MustCompile(`(?i)T40[ _]Plus(?:_(?:ROW|EEA|RUS)|\(M7T3\))`),
		regexp.MustCompile(`(?i)T(4[05])HD`),
		regexp.MustCompile(`(?i)M(50)HD`),
		regexp.MustCompile(`(?i)P80H\(D1C2\)`),
		regexp.MustCompile(`(?i)(P80[Xh]|P30HD|T30|M40|P25(?:_T)?|P10SE|T40S|P[24]0S|T[56]0|TLG01|P26T|P85T|P30T|T50HD)(?:[_ ](?:ROW|EEA))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)98\(M1E[45789]\)|98\(M3E3\)`),
		regexp.MustCompile(`(?i)X80 Power\(B2N4\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X98 Air III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X98 Air II\(HG5N\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Teclast[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Tecno|Phantom[56]|Phantom6-Plus|Phantom6S|DP7C ?Pro-SGA1|(?:DP7CPRO|DP8D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Phantom([56])`),
		regexp.MustCompile(`(?i)TECNO[ _]AD8`),
		regexp.MustCompile(`(?i)TECNO[ _]AD9`),
		regexp.MustCompile(`(?i)TECNO[ _]AC8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AD10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AD11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AB7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AX8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]F4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IA5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID3k(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID5b(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID5a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN1 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]7C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P701(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DP7C ?Pro-SGA1|TECNO[ _]DP7CPRO|DP7CPRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P703(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P704a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]DP10A Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]P904(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DP8D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]RC6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CB7[j]?`),
		regexp.MustCompile(`(?i)Tecno[- _]C9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CF7[kS]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CF8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CC7S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CC9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:CC6|KC3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD6S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD8j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:CE9h|CE7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD6j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE7j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG8h?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:Mobile )?CH9n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:Mobile )?CH6[nh]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CH7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:CH6i|CI6n?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:Mobile )?CI8n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CI7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CK7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CK6n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CK8nB?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CK9n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CL6[ks]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CL9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CL7[ks]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CL8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA6S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA8S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]Camon CX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CX Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]F3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]SA2S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1[fg](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:RA8|KB2h)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB2j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BA2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB8S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB6S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]SC7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BB2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BB4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC2c?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC3?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC1s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD2[dp]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]L6502S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]W5006S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD4[ai]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD4[jh](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BE7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BE6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BE8[i]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?BF6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BF7h?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BG6[ih](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]SA1S Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KG5[mh]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:Mobile )?BF7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:Mobile )?BG6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:Mobile )?KJ5n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:Mobile )?BG7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:Mobile )?KJ6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:Mobile )?KJ7s?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KA7O?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]LB6?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KB7j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KB8?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:KC8S?|KC2j?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:KC6S?|KC1j)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]BB4k(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD6a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD7[hS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE5[jk]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:KF6(?:ks|[nhmjki])?|PR651[EH]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF7j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF6p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?KG6k?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG5[nkjq]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG7[nh]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO(?: Mobile)?[ _]KG6p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO(?: Mobile)?[ _]KG8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KH7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG5p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KH6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile[ _])?KI5[km]`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile[ _])?KI5`),
		regexp.MustCompile(`(?i)TECNO[ _]KI8`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile[ _])?KI7`),
		regexp.MustCompile(`(?i)TECNO[ _]KC1h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE5S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KC1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]K9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KA9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]DP8D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](P702AS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA7 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LB7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LC6a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]LB8a?`),
		regexp.MustCompile(`(?i)TECNO[ _]LC7S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LC8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]J8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]RA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]W3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]WX3P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LD7j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE6h?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?LG6n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LH6n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE6j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LF7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LG7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LG8n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LH7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?LH8n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?LI9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?LI7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?LI6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno (F2) ?LTE`),
		regexp.MustCompile(`(?i)(?:TECNO[-_])?L8Plus`),
		regexp.MustCompile(`(?i)TECNO[ _-]?(T611)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Tecno[ _-]?([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)Preo[ _]`),
		regexp.MustCompile(`(?i)Preo[ _]P([23])`),
		regexp.MustCompile(`(?i)Tele2[ _]|Tele2fon`),
		regexp.MustCompile(`(?i)Tele2fon[_ ]V6`),
		regexp.MustCompile(`(?i)Tele2[ _](Mi[dn]i)[ _]1[_.]1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _]Midi[ _]2[_.]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _]((?:Maxi|Midi)(?:[_ ](?:Plus|LTE))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _](Mi[dn]i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TELEFUNKEN|Foxtrot|TEL-1013GIQA|TEL-1014GIQ|TEL-73GIQA|TEL-74GIQ|TF-SP(?:500[12]|4002)|(TF-MID(?:[78]02G|70[78]G|80[46]G|9705RG|9707G|7805G|100[57]G|1010G))| TF5X| TF6|TF500|TF501_EC|(TF-LED(?:32S14T2S|43S9[57]T2SU|50S0[34]T2SU|50S25T2SU|55S11T2SU|58S06T2SU|65S75T2SU|32S39T2S|32S08T2S|32S5[289]T2S|32S60T2S|32S7[045]T2S|40S63T2S|40S19T2S|40S41T2S|43S94T2S|43S22T2SU)(?:-1)?)|LTE_LIMA|LTE Mike|Diamond_LTE|Outdoor (?:LTE|WT4|WT4-S)|TELP-1013KBC`),
		regexp.MustCompile(`(?i)TEL-(1014GIQ|74GIQ|73GIQA(?:11)?)`),
		regexp.MustCompile(`(?i)(?:TELEFUNKEN)?(TF-SP(?:500[12]|4002)|Outdoor (?:LTE|WT4-S|WT4)|Foxtrot|TF5X|TF6)`),
		regexp.MustCompile(`(?i)(TF-MID(?:[78]02G|70[78]G|80[46]G|9705RG|9707G|7805G|100[57]G|1010G)|TF501_EC|TELP-1013KBC)`),
		regexp.MustCompile(`(?i)(TF-LED(?:\d{2}S\d{2}T2SU?)|TF500)`),
		regexp.MustCompile(`(?i)TELEFUNKEN, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)TELEGO|Wise2_plus`),
		regexp.MustCompile(`(?i)Telego[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Telenor|(?:Infinity[_ ](?:E[2-5]|K2?|A2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Telenor[ _]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Infinity[ _](E[2-5]|K2?|A2)`),
		regexp.MustCompile(`(?i)Telit_Mobile_Terminals-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Telit[\-_]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(TVB-100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Telma|(?:F1x4G|Feel_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TELMA F1\+4G`),
		regexp.MustCompile(`(?i)TELMA[_ ]FEEL`),
		regexp.MustCompile(`(?i)Telma[_ ](F2|Titan[_ ]4G|EGO)`),
		regexp.MustCompile(`(?i)TELO[_ ](?:TE6|M5|TE580_CO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TELO[_ ](TE6|TE580_CO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TPS3[29]0`),
		regexp.MustCompile(`(?i)TPS(3[29]0)`),
		regexp.MustCompile(`(?i)Teracube (2e|One)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hudl (?:[^/;]+)(?: Build|[;)])|W032i-C3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hudl ([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)W032i-C3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASEBOOK_3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ThL[ _-]|(?:Knight 2|THL5000|T200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)THL ?(5000)`),
		regexp.MustCompile(`(?i)(T200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Box 1 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Box 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ThL[ _-]*([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)ThL[ _-]*([^ ;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Primo(7|8)|QM73[45]-8G|QM734-2|QM736-8G\(HD\)|8950|MID1002|5014G|TEO(?:13P|10[SM]|8M|7RK|X10[23]|104G)|Friendly_TH101|Delight TH201|TEOX10-MT8SL128LTE|HERO10RK|SPTEO10BK16|Origin_679(?:_Pro)?)(?:[);/ ]|$)|(?:Tlink|Every)[0-9]+|THOMSON[, ]`),
		regexp.MustCompile(`(?i)Primo(7|8)`),
		regexp.MustCompile(`(?i)QM736-8G\(HD\)`),
		regexp.MustCompile(`(?i)8950(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TEO(13P|10[SM]|7RK|104G|X10[23]|8M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(5014G|T510H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tlink([0-9]+)`),
		regexp.MustCompile(`(?i)Origin[_ ]679[_ ]Pro`),
		regexp.MustCompile(`(?i)Origin[_ ]679`),
		regexp.MustCompile(`(?i)Every([0-9]+)`),
		regexp.MustCompile(`(?i)THOMSON[ _]SEREA500`),
		regexp.MustCompile(`(?i)((?:49|55)UC6306|55UC63|32HD55|40FD54|55UD63)`),
		regexp.MustCompile(`(?i)Thuraya[ _](X5-Touch)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TiPhone ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TIVO[ ,-]`),
		regexp.MustCompile(`(?i)(?:TiVo|VirginMedia), (?:OnDemand_)?([a-z0-9]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)TiVo-([a-z0-9]+)-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Tibuta[_ ]`),
		regexp.MustCompile(`(?i)Tibuta[_ ]MasterPad-(E100)`),
		regexp.MustCompile(`(?i)TIS001[_-]|TIS_?001`),
		regexp.MustCompile(`(?i)TIS001[_-]S([34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIS001[_-]T2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIS_?001([ABC])?`),
		regexp.MustCompile(`(?i)(TC1050G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tmovi[ _]|(?:Infinit[ _](?:Lite[_ ]2|X[_ ]CAM)|Infinit (?:MX(?: Pro)?|2)|Vision_PRO|VISION ULTRA|Epix|Yeah_Go|Insignia Delta 2|Insignia_(?:Delta3|Lab))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tmovi[ _]Prime`),
		regexp.MustCompile(`(?i)Infinit[_ ]X[_ ]CAM`),
		regexp.MustCompile(`(?i)Infinit[_ ]Lite([_ ]2)?`),
		regexp.MustCompile(`(?i)Insignia_(Lab)`),
		regexp.MustCompile(`(?i)Insignia[ _]Delta[ _]?([32])`),
		regexp.MustCompile(`(?i)Tinai (K[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TiNMO[- _](A11|K3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MiTraveler 958)`),
		regexp.MustCompile(`(?i)Tolino Tab ([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)TONE[ _-](e19|m1[57]|e2[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOKY (A19|W1|T8[368]|T1982)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOKY A9PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Coto[_ ]|X1013`),
		regexp.MustCompile(`(?i)TopDevice|TDTV\d{2}[BC]S\d{2}[FHU]|TDT45(?:18|41)_4G|TDT3778_Wi_E|TDT3887_Wi_D|TDT4528_4G_E`),
		regexp.MustCompile(`(?i)(?:TopDevice_)?(TDTV\d{2}[BC]S\d{2}[FHU])`),
		regexp.MustCompile(`(?i)KIDS(09|708)`),
		regexp.MustCompile(`(?i)Toplux ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TOPSION|TP01_box(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TOREX[- _](?:PS12|S18|S27|PAD 8 ?PRO|PAD818)|PAD831B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOREX-(PS12)`),
		regexp.MustCompile(`(?i)(?:TOREX[_ ])?PAD(831B|818)`),
		regexp.MustCompile(`(?i)TOREX PAD 8 ?PRO`),
		regexp.MustCompile(`(?i)TOREX[- ](S18|S27)`),
		regexp.MustCompile(`(?i)(?:EGO[ _](?:Max[ _]S|Surf[_ ][iS]|Phab 3G|Note 4G)|DROIDZ (?:Drive\+|ATOM [SX]|Portal(?: X)?|Swivel|Smart|Trend|Force|Span|Play|Blast|Sport|Excel|Motion|Sky 3g|Rotate|Duo(?: Slim)?|Dash(?: X)?|Quad|Match TV|Beat TV|Avatar TV|Easy|Push i|Edge\+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DROIDZ (Duo(?: Slim)?|Dash(?: X)?|Push i|Edge\+|Drive\+|Portal(?: X)?)`),
		regexp.MustCompile(`(?i)DROIDZ (Swivel|Trend|Force|Span|Smart|Atom X|Blast|Sport|Quad|Beat TV|Avatar TV|Match TV|Easy|Excel|Play|Rotate|Motion)`),
		regexp.MustCompile(`(?i)EGO[ _](Max[ _]S|Surf[_ ][iS])`),
		regexp.MustCompile(`(?i)Toshiba|TSBNetTV/|portalmmm/[12]\.0 TS|(?:T-01C|T-0[12]D|IS04|IS11T|AT1S0|AT300SE|AFTBOXE1|AFTDCT31|AFTHA00[2-4]|AT(?:7-C|10-A|10[PL]E-A|100|200|270|300|330|374|400|470|500a?|503|570|703|830)|AFTKMST12|AFTBAMR311|SATELLITE (?:C655|L50-C|Pro L300|A100))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AT(100|200|270|300|330|374|400|470|500|503|570|703|830)`),
		regexp.MustCompile(`(?i)AT10([PL])E-A`),
		regexp.MustCompile(`(?i)SATELLITE (C655|Pro L300|A100)`),
		regexp.MustCompile(`(?i)AFTBOXE1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTHA002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTHA003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTHA004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOSHIBA;SmartTV;([a-z0-9_ \-]+);`),
		regexp.MustCompile(`(?i)TOSHIBA, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Toshiba[ /_\-]?([a-z0-9_ \-]+) Build`),
		regexp.MustCompile(`(?i)Toshiba[ /_\-]?([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12]\.0 (TS[a-z0-9 ]+)`),
		regexp.MustCompile(`(?i) (770[NG]|1100AS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOUCHMATE|(TM-(?:MID870SB|MID1050WKD|MID1020A|MID794C|MID795|MID710|MID798|MID792|MID788D|SM500N|SM410|MID1010))`),
		regexp.MustCompile(`(?i)(TM-(?:MID1020A|MID794C|MID795|MID710|MID798|MID792|MID788D|MID10[14]0))`),
		regexp.MustCompile(`(?i)(TM-(?:SM500N|SM410))`),
		regexp.MustCompile(`(?i)Touchmate ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Transpeed[_ ]|(?:TR99 MINI\+|TR99|8K618-T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TR99 MINI\+`),
		regexp.MustCompile(`(?i)(?:Transpeed[_ ])?(TR99|H616|6K|X4S?|8K618-T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TrekStor|Surftab) ([^/;]+)(?: Build|\))|Surftab[^;\)]*(?:[;\)]|$)|ST10216-2A|ST13416-1|VT10416-[12]|TFQCOAL01232|TFMTKAW01232|Xintroni10\.1`),
		regexp.MustCompile(`(?i)ST10216-2A|VT10416-[12]`),
		regexp.MustCompile(`(?i)TrekStor ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Surftab ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Surftab[ _]([^;\)]*)(?:[;\)]|$)`),
		regexp.MustCompile(`(?i)(TFQCOAL01232)`),
		regexp.MustCompile(`(?i)Xintroni10\.1`),
		regexp.MustCompile(`(?i)Trevi[ _]|TAB[ _]10[ _]3G[ _]V16|TAB[ _](7|8)[ _]3G[ _]V8|TAB9 3G|MINITAB 3GV|Phablet[ _](?:4|4\.5|5|5\,3|6)[ _]?[CSQ]|REVERSE[ _]5\.5[ _]?Q`),
		regexp.MustCompile(`(?i)TAB[ _]?(7|8)[ _]3G[ _]V8`),
		regexp.MustCompile(`(?i)TAB[ _]?9[ _]3G[ _]V8`),
		regexp.MustCompile(`(?i)TAB[ _]?9[ _]3G`),
		regexp.MustCompile(`(?i)TAB[ _]10[ _]3G[ _]V16`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4[ _]?C`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4[ _]?S`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4\.5[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]5[ _]?S`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]5,3[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?REVERSE[ _]5\.5[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]6[ _]?S`),
		regexp.MustCompile(`(?i)Trevi[_]([^;/]+) Build`),
		regexp.MustCompile(`(?i)TriaPlayBox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A23 Max|A75 Pro Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Passion[-_](?:1S|PRO|PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Trio V51 DT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Orion R68G|Draco AW80|Draco H3|Vega S95_(?:Meta|Pro|Telos))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) TRUE BEYOND TAB 3G|HPH07|SMART[ _](4G Adventure(?: Pro)?|MAX 4\.0 PLUS|4G[ _](?:MAX 5\.5|GEN C [45]\.[05]|M1 Plus|Champion|Speedy 5\.0 Plus|Speedy[_ ]5inch|P1))|Alpha 5G|SMART Champ 4\.0|TRUE SMART 7\.0 Quadcore|SMART 4G M1|SMART TAB 4G (?:e-Biz|M1)`),
		regexp.MustCompile(`(?i)Alpha 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART MAX 4\.0 PLUS`),
		regexp.MustCompile(`(?i)SMART Champ 4\.0`),
		regexp.MustCompile(`(?i)SMART 4G Gen C ([45]\.[05])`),
		regexp.MustCompile(`(?i)SMART 4G Speedy 5\.0 Plus`),
		regexp.MustCompile(`(?i)SMART 4G MAX 5\.5`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]Speedy[_ ]5inch`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]Champion`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]P1 Prime`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]P1`),
		regexp.MustCompile(`(?i)SMART[ _]4G M1 Plus`),
		regexp.MustCompile(`(?i)TRUE SMART 7\.0 Quadcore`),
		regexp.MustCompile(`(?i)(SSB-508[ED])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TL554B|TC504B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail TT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Turbo[_ ]?(?:X5[_ ]?(?:Max|Black|Space|Hero)|X8|X6[ _]Z|X[ _]Ray)|Monsterpad7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX5Space(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX5Hero(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX[ _]Ray(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]?X5[ _]?Black(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X5[ _]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X6[ _]Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Monsterpad7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[-_]X|(?:TURBOX_I4G|Hive V 3G|Calltab10\.1|Calltab2GB10|Calltab7inch|Turbox_S3|Fire_II_WiFi|Breeze IV|Aqua_II|RainbowIII3G|RubikII7|Rubik 10\.1 II|Rubik_10_III|QUAD-CORE A33 inet)(?:[);/ ]|$)|Mercury|(?:android 8([\d.]*);(?: [\w-]+;)? Dream)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo-X_A2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo-X_e3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mercury`),
		regexp.MustCompile(`(?i)Turbo-X_pi_4G|Turbo_X_Pi 1 4G`),
		regexp.MustCompile(`(?i)Turbo-X Ice(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aqua_II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hive V 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fire_II_WiFi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Breeze IV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RubikII7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rubik 10\.1 II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rubik_10_III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RainbowIII3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Calltab10\.1`),
		regexp.MustCompile(`(?i)TURBO-X, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Turbo-X Tablet([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Turbo-X ([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:Turbokids[-_ ]?(TMNT|3G|S4|Princess|3GNEW)|Monsterpad 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbokids[-_ ]?3GNEW`),
		regexp.MustCompile(`(?i)Turbokids[-_ ]?(TMNT|3G|S4|Princess)`),
		regexp.MustCompile(`(?i)Turbopad[-_ ]?(72[34]|80[23]|912|101[456]|Pro)(?:NEW)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TURKCELL[_ ]`),
		regexp.MustCompile(`(?i)Turbo T50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T([124-8])0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxi Plus 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MaxiPRO5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turkcell_T_Tablet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(STV-32DHBK2R-T9|TQ55UFBTV1|TD86UFBTV1|TQ50UFBCV1|TD32HF[GW]EV1|TD43FFGTV1|TD50UFGEV1|TD55UFBHV1|TD55UFGEV1|TD(?:[67]5|43)UFGCV1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TwinTAB|(?:MQ703G)(?:_1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MQ703G)(?:_1)?`),
		regexp.MustCompile(`(?i)TwinTAB-(T103GQ1)`),
		regexp.MustCompile(`(?i)(?:TWOE[-_ ]E450R|F534L|F572L|E500A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWOE[-_ ](E450R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F534L|F572L|E500A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tymes[ _](V5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TT175(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Liantong)?(?:VP00[1235])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP001`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP002`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP003`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP005`),
		regexp.MustCompile(`(?i)(USCC-[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)TV3[45]8_?(?:DVB|ISDB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TV348_DVB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TV348_ISDB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TV358DVB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGINE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGINE;SmartTV;([a-z0-9_ \-]+)V[ST];`),
		regexp.MustCompile(`(?i)UMI(?:DIGI)?[ _]|(?:A[5]_Pro|.+; A[79] Pro|S3_Pro|ROME[_ ]X|BISON|hammer_S|S2 LITE|London|Z2_PRO|C NOTE 2|A11 Pro Max|Power 3|Android 10(?:[\d.]*);(?: [\w-]+;)? (?:A3[SX]|A7S)|RP0[1234]|MT01|MP0[1-9]|MP1[78]|MP2[67]|MP34|Plus E|S2_PRO|RP05|One Pro|Diamond_X|TG3DBG1MA|Android [67](?:[\d.]*);(?: [\w-]+;)? Z Pro|Android 8(?:[\d.]*);(?: [\w-]+;)? A1_PRO|RP08|MP29|MP33|MP13|MP38|PR4JBX20A|PG2309GBA)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MT01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(A[13579]|Z2|S3)[_ ]Pro`),
		regexp.MustCompile(`(?i)MP01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP05(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP33(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP34(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP08(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP27(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)PG2309GBA(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP38(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP26(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)ROME[_ ]X`),
		regexp.MustCompile(`(?i)RP05(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP02(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP03(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP04(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)UMI[_ ]SUPER`),
		regexp.MustCompile(`(?i)UMI[_ ]ZERO`),
		regexp.MustCompile(`(?i)MP02(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP08(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP03(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP04(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP06(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(A3[SX]|A7S)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(?:UMI_)?(London|Diamond(?:_X)?)`),
		regexp.MustCompile(`(?i)UMI(?:DIGI)?[ _]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)UNIWA[ _]|(?:W888)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNIWA[ _](X5|F40)`),
		regexp.MustCompile(`(?i)(W888)`),
		regexp.MustCompile(`(?i)UNNO[_ ]`),
		regexp.MustCompile(`(?i)UNNO[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)UOOGOU[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)UTOK (45[01]D)|(?:Dorel \d|Dorel 3S|Hello 7Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UTOK (45[01]D)`),
		regexp.MustCompile(`(?i)Dorel (\d)`),
		regexp.MustCompile(`(?i)utstar[ _-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)UTIME[ _](U6|G7|U100|[TX]1|FX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uzbekistan(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGOOS[-_ ]|(?:Android 11(?:[\d.]*);(?: [\w-]+;)? UT8|TOX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGOOS-UT3 ?Plus`),
		regexp.MustCompile(`(?i)(UT8|TOX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGOOS[- _](\w{2}\d+\w?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A101S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uhappy|UP?580|UP350|UP[35679]20`),
		regexp.MustCompile(`(?i)UP([35679]20)`),
		regexp.MustCompile(`(?i)Uhappy[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Uhappy[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone|Gemini Pro|Power[ _]Armor14|Power 3S|Power_[356]|Power_5S|S(?:10|9)_Pro|(?:Note [89]P|Note 1[23]P|Armor(?:[ _](?:[2367]|2S|X[236]|6[SE]|3WT|3W|X))?|U00[78][ _]Pro|Be[ _]X|Be[ _]Touch(?:[ _][23])?|Be[ _](?:One|Pure|Pro)(?:[ _]Lite)?|Note 14|Note (?:11P|7T)|Note 16 Pro|Tiger_lite|Note_7P|Note 10P|Paris_(?:Lite|X)|Paris|P6000_Plus|Vienna|GQ3060TF3|Android 11(?:[\d.]*);(?: [\w-]+;)? Note 6P?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S(10|9)_Pro`),
		regexp.MustCompile(`(?i)Be[ _]Touch([ _][23])?`),
		regexp.MustCompile(`(?i)Be[ _]Pure[ _]Lite`),
		regexp.MustCompile(`(?i)Be[ _]Pure`),
		regexp.MustCompile(`(?i)Be[ _]One[ _]Lite`),
		regexp.MustCompile(`(?i)Be[ _]One`),
		regexp.MustCompile(`(?i)Be[ _]X`),
		regexp.MustCompile(`(?i)Be[ _]Pro`),
		regexp.MustCompile(`(?i)U(00[78]) Pro`),
		regexp.MustCompile(`(?i)Power[ _]Armor[ _]?(\d+)[ _]Pro`),
		regexp.MustCompile(`(?i)Power Armor (\d+|19T|X11|18T|16S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]6S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GQ3060TF3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([679])E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([25])S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]3W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]3WT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _](1\d|11T) 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _](8) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([236789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor Pad([^;/)]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Armor([^;/)]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Gemini Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power[_ ]([356][SL]?)`),
		regexp.MustCompile(`(?i)Note[ _]([78]P|7T|6|14)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Note[ _](16) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Note ([69]|1[123]|10)P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone[_ ]Tab[_ ]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Ulefone[_ ](X|S1[ _]Pro|S[17])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Ulefone[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)VisionBook[ _]|([78]Qa_3G|7A_3G|VB_10Q_Plus|10A_LTE_eea|(?:8|10)C_LTE|10L-PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VisionBook[ _](?:10Qi|7Q[i]?|8Q[ei]?|P70|8Qi_3G)(?:[ _](?:[34]G|Plus|LTE))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(7A(?:[ _](?:[34]G)))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([78])Qa_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_10Q_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(8|10)C_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_10Q_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10A_LTE_eea(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VB_10Q_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_P50Plus_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VisionBook[ _](?:P50 LTE|P55 X2 LTE|P55 LTE(?: Pro)?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S900PROBT|S900_Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uniden[ _](C505|Prime 500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Titan(_pocket)?|Jelly(?:-Pro| Star|2(?:_JP)?| 2E)|Atom_X?L|Ticktock(?:-S)?|UNIA62_S01|Titan Slim|TANK 01|TANK 2 PRO|TANK2|TANK 3|TANK MINI 1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Jelly)-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jelly2(?:_JP)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Titan|Atom_X?L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TANK ?([23])`),
		regexp.MustCompile(`(?i)U((?:67[013]|680)C|(?:452|504)TL|683CL|69[36]CL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNIQCELL_|(?:[AQ]5\.8|UNI (?:10X|GO))(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)UNIQCELL_A4(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(Space A5\.8|Q5\.8|UNI (?:10X|GO))(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)Uniscope[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Uniscope[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(UT10)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(?:EA500Plus|EA630)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA500Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EA630)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SDOTT0202|SDSTB02)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)Plasma Mobile|WebTV/(\d+\.\d+)|TV Bro| BOX|BOX | BOX |roku|YouView|DirectFB|avdn/|wired|wireless|AndroidTV|cordova-amazon-fireos|wv-atv|SDSTB|SDOTT|(?:M10 Ultra|FO-R15|TVBOX|Smart[ _-]?TV|SmartATV|M8S\+ 4K|PCBox|rk(?:3128|322x|3368)(?:[_-]box)?|H10 PLAY|Smart AIO TV|TVBOX_L|L-BOX|TVBOX-5G|mips.+(?:Opera TV|wireless|wired)|smartbox|TV BOX|BOX TV|I12Pro Max|(?:audi_)?ks1280x480|AT&T TV|RealtekATV|AOSP on r33a0|tv001 on rtd289x|hx322x_box|X98_S500|8K3528-T|MX10|V88|H8S|X92|AI PONT|tv\.plus|WayDroid x86_64 Device|MediaBox)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WebTV/(\d+\.\d+)`),
		regexp.MustCompile(`(?i)M10 Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FO-R15|X98_S500|8K3528-T|MX10|V88|H8S|X92|AI PONT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOX|BOX | BOX |roku|YouView|DirectFB|avdn/|wired|wireless|AndroidTV|cordova-amazon-fireos|wv-atv|SDSTB|SDOTT|(Smart[ _-]?TV|SmartATV|PCBox|hx322x_box|rk(?:3128|322x|3368)(?:[_-]box)?|TVBOX|Smart AIO TV|TVBOX_L|L-BOX|TVBOX-5G|AT&T TV|RealtekATV|TV Bro|AOSP on r33a0|tv001 on rtd289x|tv.plus|MediaBox)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S\+ 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H10 PLAY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Opera TV|wireless|wired|smartbox|TV BOX|BOX TV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I12Pro Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:audi_)?ks1280x480`),
		regexp.MustCompile(`(?i)Unnecto|(?:U513|U5151|U61[1356]|U7[12]0|U-830|U90[35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNSP7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNSP7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Unonu[ _-]|(?:U4001|UT3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U4001|UT3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Unonu[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Unonu[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QOOQ|QOOQ-V[1-5]0?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QOOQ-V([1-5])0?`),
		regexp.MustCompile(`(?i)(?:DT[245]0|i6200[AS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DT[245]0|i6200[AS])`),
		regexp.MustCompile(`(?i)(Albatros C2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V-HOME_)?(32LH1210|43LF1210|(?:5[05]|65|43)LU1210|24LH1211|24LH1203)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V[- ]hope[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:VPA051|VA-10J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VA-10J)`),
		regexp.MustCompile(`(?i)VANWIN[ -_]?(V62)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VAVA[ _](X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Camellia_II|Cactus II|Maple III|Maple-II|Cactus-Pro|LavenderII|Jasmine-II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Camellia_II|Cactus II|Maple III)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Maple|Jasmine|Lavender)-?II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VDVD[_ ](P20|IX21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEON[_ ]|VEON[_ ](?:C8680)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEON[_ ](C8680)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEON 4K Smart TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VETAS[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VGOTEL|(?:Venture V(?:[278]|12)|VentureV10|Ocean[_ ][689]|Ocean9L|NEW (?:1[01256]|2[024]|[57])|V TAB 2|i_Smart)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venture ?V([278]|1[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ocean[_ ]?([689]|9L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEW (\d+)`),
		regexp.MustCompile(`(?i)VIDA[-_ ](?:i-?([45]01|512|450)|V401)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIDA[-_ ](?:i-?(\d+))`),
		regexp.MustCompile(`(?i)VIDA[-_ ](V401)`),
		regexp.MustCompile(`(?i)(?:vi20220819)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V-Z[45]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VILLAON[_ ]`),
		regexp.MustCompile(`(?i)VILLAON[_ ]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)A631LO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P662LO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S661LS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F30UP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVIMAGE[ _]([^/;)]+)(?:_EEA)?(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:LIGHT MINI|VIWA A5\+|LIGHT PLUS|LIGHT ONE|POWER P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIWA A5\+`),
		regexp.MustCompile(`(?i)VK-VK([79]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:VK700)-MAX|VK700 Pro|T5SE|VK700[0X]|vk6050|vk6735|vk700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VK700)-MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VK700) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T5SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VK(700[0X]|6050|6735|700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNT_Tab8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOCAL[ _](V[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOGA[ _]`),
		regexp.MustCompile(`(?i)(VOL001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VK-740-BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VucaPad_(\w+)`),
		regexp.MustCompile(`(?i)ZYVV1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vankyo[_ ]|(?:QTAB1010X|S10_ROW|S[23]0_EEA|Z[14]_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vankyo[_ ]S(10|[78])`),
		regexp.MustCompile(`(?i)(S[23]0|Z[14])_EEA`),
		regexp.MustCompile(`(?i)QTAB(1010X)`),
		regexp.MustCompile(`(?i)Vargo[; _]|(?:V210101|Android 8(?:[\d.]*);(?: [\w-]+;)? VX4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V210101|VX4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M910A|M783K|M783K-16G|M1072R-3G|KingPad[_ ](?:[KM]10|SA10|SA8|Z10)(?:Pro)?)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KingPad[_ ]([KM]10|SA10|SA8|Z10)(Pro)?`),
		regexp.MustCompile(`(?i)(M910A|M783K|M783K-16G|M1072R-3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vega (Q7128)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LD-24SR(?:4715|4815|4850)BS|LD-65SU8815BS|LD-32SR(?:4850|4815|511[25])BS|LD-39SR4815BS|LD-50SU(?:8921|8815)BS|LD-55SU8815BS|LD-43SU8821BS|LD-43SF(?:4850|4815)BS(?:-T9)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CX-508|CX-551|Reiv 500|Creon F5|Isprit U50|Isprit-U50-LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Isprit U50|Isprit-U50-LTE`),
		regexp.MustCompile(`(?i)(CX-508|CX-551|Reiv 500|Creon F5)`),
		regexp.MustCompile(`(?i)(ACE10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VCT([a-z0-9_-]+)|CT9A03W23|CT9A06P23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCT9B06Q22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CT9A03W23|CT9A06P23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCT([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:RP-UDM0[12]A|RP-UDP05A|JO-UQM10A|UQM1[23]A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RP-UDM0[12]A|RP-UDP05A|JO-UQM10A)`),
		regexp.MustCompile(`(?i)(UQM1[23]A)`),
		regexp.MustCompile(`(?i)QTA(SUN[12]|XIA1|QZ3|QZ3KID|IR7)|QMV7[AB]|WTVIS01`),
		regexp.MustCompile(`(?i)QTAXIA1|QTAIR7`),
		regexp.MustCompile(`(?i)QMV7[AB]`),
		regexp.MustCompile(`(?i)Vernee|(?:Mars Pro|Apollo[ _](?:Lite|X)|Thor (?:E|Plus)|X2_euro|M7_EEA|T3 Pro|V2 Pro|Apollo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Apollo[ _]Lite`),
		regexp.MustCompile(`(?i)Apollo[ _]X`),
		regexp.MustCompile(`(?i)(V2|T3) Pro`),
		regexp.MustCompile(`(?i)Vernee[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Vernee[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)MotionE11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V-Pad Pop)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vertex[_ -]|(?:Luck|Luck_L1[02]0_[34]G|Lion_Dual|V709X|TAB X8|TAB X10|Tab [43]G (?:7-2|8-1|10-1)|Tab_3G_7-1|Pro_P3[01]0_4G|Lion_DC|Baccara|Eagle[ _]4G|ImpressMAX|Lion [1-3])(?:[);/ ]|$)|Impress[ _]([^;/]+)(?:Build|\))`),
		regexp.MustCompile(`(?i)(?:Vertex_)?Luck[_ ]L[_ ](5045)[_ ]([34])G`),
		regexp.MustCompile(`(?i)(Lion_Dual|Lion_DC|Baccara|Eagle[ _]4G|Luck[_ ]L1[023]0(?:[_ ][34]G)?|Luck)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Impress ?MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMPRESS ECLIPSE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro_P(3[01]0)_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Impress_Luck[_ ]?4G_NFC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lion ([1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Impress[ _][a-z]+)([34])G(?:Build|\))`),
		regexp.MustCompile(`(?i)(Impress[ _](?:[^;/]+))(?:Build|\))`),
		regexp.MustCompile(`(?i)(V709X)`),
		regexp.MustCompile(`(?i)TAB X(8|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab[ _]([43])G[ _]([78]|10)-([21])`),
		regexp.MustCompile(`(?i)Vertu[ ]?([a-z0-9]+)|(?:ASTER(?: [PT])?|CONSTELLATION X|VTL-202[12]01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASTER( [PT])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VTL-202101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VTL-202201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CONSTELLATION X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vertu[ ]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5009`),
		regexp.MustCompile(`(?i)verykool[ _]?S5001`),
		regexp.MustCompile(`(?i)verykool[ _]?S5004`),
		regexp.MustCompile(`(?i)verykool[ _]?S5007`),
		regexp.MustCompile(`(?i)verykool[ _]?s5015`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5011`),
		regexp.MustCompile(`(?i)verykool[ _]?s5019`),
		regexp.MustCompile(`(?i)verykool[ _]?S5005`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5560`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5200`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5050`),
		regexp.MustCompile(`(?i)verykool[ _]?S5030`),
		regexp.MustCompile(`(?i)verykool[ _]?s5527`),
		regexp.MustCompile(`(?i)verykool[ _]?s5526`),
		regexp.MustCompile(`(?i)verykool[ _]?S5530`),
		regexp.MustCompile(`(?i)verykool[ _]?S5525`),
		regexp.MustCompile(`(?i)verykool[ _]?S5524`),
		regexp.MustCompile(`(?i)verykool[ _]?s5516`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5550`),
		regexp.MustCompile(`(?i)verykool[ _]?s5035`),
		regexp.MustCompile(`(?i)verykool[ _]?s5034`),
		regexp.MustCompile(`(?i)verykool[ _]?s5037`),
		regexp.MustCompile(`(?i)verykool[ _]?s5036`),
		regexp.MustCompile(`(?i)verykool[ _]?s6005x`),
		regexp.MustCompile(`(?i)verykool[ _]?SL6010`),
		regexp.MustCompile(`(?i)verykool[ _]?S4006[QT]?`),
		regexp.MustCompile(`(?i)verykool[ _]?S4007`),
		regexp.MustCompile(`(?i)verykool[ _]?S4008`),
		regexp.MustCompile(`(?i)verykool[ _]?s5017|Dorado s5017`),
		regexp.MustCompile(`(?i)verykool[ _]?s4510`),
		regexp.MustCompile(`(?i)verykool[ _]?s5204`),
		regexp.MustCompile(`(?i)verykool[ _]?s5205`),
		regexp.MustCompile(`(?i)verykool[ _]?s5528Jr`),
		regexp.MustCompile(`(?i)verykool[ _]?s5528`),
		regexp.MustCompile(`(?i)verykool[ _]?s5702`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5029`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5565`),
		regexp.MustCompile(`(?i)verykool[ _]?TL8010`),
		regexp.MustCompile(`(?i)verykool[ _]?T7440`),
		regexp.MustCompile(`(?i)verykool[ _]?T7445`),
		regexp.MustCompile(`(?i)verykool[ _]?([^/;)]+)(?:[ _]SL?[0-9]{4}[QT]?)(?: Build|[);])`),
		regexp.MustCompile(`(?i)verykool[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VESTA_SMART|VESTA32LD86(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vestel[ _,/\-]|Venus[ _](GO|E[2-5]|V[1-9]|Z[1-9]0)|V_?TAB|VP74|VT97PRO|VSP145M|VSP250[GS]|VSP355[GS]|V3_5580_Dual|V TAB Z[12]`),
		regexp.MustCompile(`(?i)V_TAB_([0-9]{4}[A-Z]?)`),
		regexp.MustCompile(`(?i)V[_ ]TAB[_ ](Z[12])`),
		regexp.MustCompile(`(?i)Venus[ _]V([1-9])([ _][0-9]{4})?`),
		regexp.MustCompile(`(?i)Venus[ _]Z([1-9]0)`),
		regexp.MustCompile(`(?i)Venus[ _]GO`),
		regexp.MustCompile(`(?i)Venus[ _]E2 Plus`),
		regexp.MustCompile(`(?i)Venus[ _]E([345])`),
		regexp.MustCompile(`(?i)Vestel[ _]5530[ _]Dual`),
		regexp.MustCompile(`(?i)Vestel[ _](5000|5530)`),
		regexp.MustCompile(`(?i)VESTEL\-v\.tv\.([0-9]{4})`),
		regexp.MustCompile(`(?i)VESTEL, ([a-z0-9_ \-]+), (?:wired|wireless)|\+CE-HTML`),
		regexp.MustCompile(`(?i)(?:Zippers Tab 10i 3G)|Vexia FCS E2 CLM`),
		regexp.MustCompile(`(?i)(Zippers Tab 10i 3G)`),
		regexp.MustCompile(`(?i)ViBox[ _](V[25])[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VI10[68]|VI86)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Videocon[_ \-]|(?:VT75C|V50DC|V406018|V512930|V50(?:2430|3630|4730|5024|5430|4630|5[98]20)|Z45_(?:Dazzle|Amaze)|Z45Q Star|Z50 Nova)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Videocon[_ \-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)VT75C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V502430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V50DC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505024(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V503630(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V504730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V406018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V512930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V505430|V504630)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z45_(Dazzle|Amaze)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z45Q Star(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z50 Nova(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ViewSonic|ViewPad|ViewPhone|(?:IFP(?:98|86|[67]5)50-3|VSD[0-9]+|vsi7q_1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?V500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ViewSonic A8\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?ViewPhone ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?ViewPad[ _]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(VSD[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IFP(98|86|[67]5)50-3`),
		regexp.MustCompile(`(?i)Vinabox[-_ ]X(\d*)[-_ ](2018)`),
		regexp.MustCompile(`(?i)Vinabox[-_ ]X(\d*)[-_ ]?Plus`),
		regexp.MustCompile(`(?i)Vinabox[-_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VMP-(015-162|021-82|041-162|011-81|025-324|045-664|046-664)(?:[);/ ]|$)|VMP023\.`),
		regexp.MustCompile(`(?i)VMP023\.`),
		regexp.MustCompile(`(?i)(XA Pro) Build`),
		regexp.MustCompile(`(?i)VMP0617(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z08MK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO[_ ]`),
		regexp.MustCompile(`(?i)ViPro S20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO PRO2X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vipro Edge 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO PRO[ _-]?([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V608C|V50[15]c|VT701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(50[15]|608)C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VT701)`),
		regexp.MustCompile(`(?i)XS100MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vision ?Touch`),
		regexp.MustCompile(`(?i)(?:Prime10(?:SE|ES)|Elite(?:7QS|8QI|9QL|10QH(?:Pro)?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime10(SE|ES)`),
		regexp.MustCompile(`(?i)Elite(7QS|8QI|9QL|10QH)`),
		regexp.MustCompile(`(?i)Vitelcom|portalmmm/[12]\.0 TSM`),
		regexp.MustCompile(`(?i)TSM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TSM([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12]\.0 (TSM[a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(24LH1207|43L[FU]1204|50LU1204|43LF1212)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SMART[_ ]EV[56]|EV7_Pro|EV6 ELITE|EV5 X|EV7_Play| EV7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EV7)_Pro`),
		regexp.MustCompile(`(?i)(EV6) ELITE`),
		regexp.MustCompile(`(?i)(EV7)_Play`),
		regexp.MustCompile(`(?i)EV7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART[_ ](EV[56])`),
		regexp.MustCompile(`(?i)VIVAX|(?:Fly4|Fly5[_ ]Lite|Fun[_ ]S500|Point[_ ](?:X[12]|X50[123]|X450)|SMART FLY V500|PRO3|32LE77SM|40LE77SM|FUN S1|FUN_S20|TPC[-_ ](?:7121|80[56])3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly5[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART FLY V500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Point_X([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fun[_ ]S500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUN[ _]S(10?|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[ _]Fly ?(\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[ _]Fly[ _]V(1|550)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIVAX )?(Point[ _](?:X551|X50[123]|X450))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART Point X5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[_ ]PRO[_ ]?(3|M1)`),
		regexp.MustCompile(`(?i)(?:VIVAX[ _])?TPC[-_ ](105|7121|806)_?([34])G`),
		regexp.MustCompile(`(?i)(?:TABLET )?TPC[-_ ](\d+) ?([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIVAX-)?(40LE78T2S2SM|32LE77SM|40LE77SM)`),
		regexp.MustCompile(`(?i)((?:VIV-|BBG-)?vivo)|iQOO Neo \d|(?:V1730(D[AT]|GA)|V18(?:01A0|13B[AT])|1819|V1937|I(?:192[78]|201[28]|2218)|V(?:2026|2031|2036|2043)_21|V1936TL|V1936AL|V(?:1732|1809|181[3468]|182[149]|183[1268]|1901|191[13469]|192[1-48]|193[0246]|194[15]|195[05]|196[235]|198[16]|1990|201[12]|202[03-5]|203[146]|204[6789]|205[45679]|2066B|206[1568]|207[23]|208[05]|2099|2106|211[18]|212[135]|213[346]|214[1358]|2162)A|V1824BA|V(?:1731|1818|2020)CA|V(?:1818|1938)CT|V(?:1730|2031)EA|V(?:1732|1809|181[3468]|182[19]|183[1268]|1901|1913|1938)T|I201[19]|I2126|X50 Pro\+|I220[123678]|I2127|I221[234679]|I222[03]|I230[124]|I2009|I2017|I2022|V1962BA|V1930|PA2170|PA23[57]3|V20(?:0[1256]|0[215]A|[34]4|29_PK|4[57]A?|23EA|2[2-9]|3[0-35-9]|4[0-3568]|5[02-5789]|6[015689]|69B?A|70)|V21(?:0[12459]|1[01]|2[04-79]|3[012459]A?|7[12]A|4[0-79]|40A|6[0289]|64[KP]A|6[234568]A|7[08]A|1[4-8]A?|0[28]A?|5[4678]A|5[0-478]|8[03568]A|80GA|66(?:BA)?|56FA|9[069]A|99GA)|V22(?:8[2345]A|7[01289]A|5[0123]|30EA|4[0246789]|41HA|5[46]A?|3[016789]|34(?:_PK)?|3[01289]A|4[2345]A|[34]1A|2[12589]|2[079]A|[36]6A|0[37]A|0[1-9]|1[789]A|1[24789])|V23(?:4[34]A|4[12356]|12BA|24HA|61GA|66[GH]A|3[1-46789]|3[4789]A|39FA|0[1-479]A|0[23789]|52A?|5[015]|5[349]A|6[14]A|2[0-57]|2[3479]A|1[0124-9]|1[23478]A)|V24(?:0[16]|1[02]|03A)|I2306|S7t 5G| (?:Y30g|Y20T|Y31s 5G|Y33s|Y50t|Y55s 5G)|iQOO (?:U[13]x?|Z1x 5G|Z5x|[578]|Z[153])|NEX 3s? 5G|Z5x 712|iPA2375|PA2473|Y51A|Y51 PK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2170A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y20T|Y30g)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2324A|V2309(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2366[GH]A`),
		regexp.MustCompile(`(?i)V2309A|V2308`),
		regexp.MustCompile(`(?i)(?:V2307|V2343A|V2401)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2336(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1824[B]?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1955A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2171A|I2017)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2172A|I2022)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2243A|I2212)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2220|V2307A`),
		regexp.MustCompile(`(?i)I192[78](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2165A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2049A|I2009|iQOO 7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2231A|I2214)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2304|V2339A`),
		regexp.MustCompile(`(?i)V2154A|iQOO Neo 5S`),
		regexp.MustCompile(`(?i)I2012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1922A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1916A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1914A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1981A|iQOO Neo 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1936(?:TL|A[L]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2055A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2118A|iQOO Neo 5 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2199A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1986A|iQOO Z1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2012A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQOO Z1x 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2073A|I2011|iQOO Z3 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1919A|iQOO Z5x`),
		regexp.MustCompile(`(?i)I2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2148A|iQOO Z5`),
		regexp.MustCompile(`(?i)(?:I220[236]|I2127|V2220A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2126(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2208(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I22(?:13|07)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2301(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2216(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2223(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2302|I2218`),
		regexp.MustCompile(`(?i)I2219|V2353A`),
		regexp.MustCompile(`(?i)(?:V2023A|iQOO U1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2065A|iQOO U1x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2061A|iQOO U3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2143A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2106A|iQOO U3x 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2025A|iQOO 5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2024A|iQOO 5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2141A|iQOO 8 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2136A|iQOO 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2339(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2337(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2025)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2066|V2108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2061(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2055(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2040(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo 1921(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo 1916(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1805(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1912|V1923A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1924A|NEX 3 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1950A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEX 3s 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1821[AT]|vivo 1813)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo ONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2115A|V2141|V2157|V2150`),
		regexp.MustCompile(`(?i)V2253|V2312`),
		regexp.MustCompile(`(?i)V2320|V2199GA`),
		regexp.MustCompile(`(?i)V2334(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2346(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2338(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2203A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1831[AT]`),
		regexp.MustCompile(`(?i)V1832[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2121A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V211[56]`),
		regexp.MustCompile(`(?i)V220[19]|V2242(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V22(?:31|46)`),
		regexp.MustCompile(`(?i)V2352(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2244(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2318(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2343(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V23(?:27|14)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1932[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1962A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2162A?`),
		regexp.MustCompile(`(?i)V2020C?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031EA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2080A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S7t 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2072A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2048A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1941A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1928A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1804(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1806(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1819(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1818(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 19(?:10|09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1907(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 19(?:20(?:_20)?|19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1933(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2022(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]1601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1611(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (1713|1612)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2166BA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1716|1850)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1723(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1727|V9Youth)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1851|V9Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo V3Max(?: [AL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X9s Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X9s(?: [AL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2241A|V2218(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2219(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X5Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X20Plus UD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1721(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X20Plus(?: a)?|vivo 1720)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X21i(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X21UD(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1725|X21A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1814[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1809[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1816[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V18(38|29)[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1836[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1938CT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1938T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2001A|vivo 2004)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1937|V1937)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2005A|vivo 2006)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2011A|X50 Pro\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V20(?:46|59)A|V2045)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2085A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2047A|V2046)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2056A|V2047)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2134A|V2105)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2145A|V2114)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2133A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2104(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2144|V2183A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V218[56]A|V2145`),
		regexp.MustCompile(`(?i)V2208(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X([0-9])Plus(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1929|2015)(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1902(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2310|V2331`),
		regexp.MustCompile(`(?i)(?:V2333|V2345)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2410(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V22[01]4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1906(?:_20)?|V2236A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2239|V2412`),
		regexp.MustCompile(`(?i)V2166(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2203|V222[19])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V225[24]|V2325)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2217|V2236|V2234_PK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2234)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2332|V2406`),
		regexp.MustCompile(`(?i)vivo 19(?:04|40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2102(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1901(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V212[05]|V2139)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2147|V2212`),
		regexp.MustCompile(`(?i)vivo 1915(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V202[79](?:_PK)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2207|V2238)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2206(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1613(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2043_21|V2048)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V205[24]|V2070|V2101|V2034)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2037(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2129(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2065(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2038(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2043(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(?:2041|2060)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2152(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2149(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2140(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V213[15](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2023(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1901[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1930A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 193[89]|V203[46]A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2160(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2099A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2066[B]?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2036(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2068A?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2228(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2057(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2109|Y33s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2146(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2166A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2205(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2247|V2324)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2248(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1934A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1965A|vivo 1935)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2023EA|Y50t)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(?:2024|203[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y51 PK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2054A|Y31s 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2057A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2053(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1606(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1606a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2058|V2111A|V2123A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2164A|Y55s 5G`),
		regexp.MustCompile(`(?i)V2311|V2225`),
		regexp.MustCompile(`(?i)vivo 1719(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1714|Y69A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2002A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1724|Y71A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1801i?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1731CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2059(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2124(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2156F?A`),
		regexp.MustCompile(`(?i)V1913[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 180([38]|8i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1812(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1732[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:Y83A?|1802)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1726(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1730EA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1823|1908)(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 181[17](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1820(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1945A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2026|V2033|V2042)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V20[63]9|V2026_21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 18(16|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1818[AT]|vivo 181[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1818C[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1807(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1813[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1801A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1918|1951|Z1Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1730D[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1917(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1813B[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo Z3x|V1730GA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1921A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1911A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1990A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1963A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2142(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo Y75s|V2069BA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X710L?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X6SPlus(?: [AD])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X6S(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X([5679]|20)[ALD]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X5Pro(?: L)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y66i(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y(\d{2})[AL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay(\d)S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay(\d)[AL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vizio|(?:VAP430|VTAB1008|XR6[PM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIZIO ([a-z0-9_-]+) ViziOS/`),
		regexp.MustCompile(`(?i)(VTAB1008|XR6[PM]10)`),
		regexp.MustCompile(`(?i)VIZ(?:101|070)TAB[78]11`),
		regexp.MustCompile(`(?i)VIZ070TAB(\d{3})`),
		regexp.MustCompile(`(?i)VIZ101TAB(\d{3})`),
		regexp.MustCompile(`(?i)(?:Vodacom)[ _]|(?:Kicka 5 Plus 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Vodacom)[ _](Power Tab 10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _-]|VodafoneSmartChat|Smart Ultra 6|Smart ?Tab ?(?:III? ?)?(?:4G|7|10)[;/ )-]|(?:GigaTV|VFD[ _][0-9]+|VFD[37]20|VF6[89]5|VF-(696|1397|795|895N|1497)|SmartV22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD 50[012]`),
		regexp.MustCompile(`(?i)VFD 51[0123]`),
		regexp.MustCompile(`(?i)VFD 52[789]`),
		regexp.MustCompile(`(?i)Vodafone[ _]875(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]975N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]785(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD 525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]890N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]985N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart ?Tab ?3G`),
		regexp.MustCompile(`(?i)Smart ?Tab ?4G`),
		regexp.MustCompile(`(?i)Smart ?Tab ?4`),
		regexp.MustCompile(`(?i)SmartTab7[);/ -]`),
		regexp.MustCompile(`(?i)SmartTab10[);/ -]`),
		regexp.MustCompile(`(?i)Smart ?Tab ?II ?7`),
		regexp.MustCompile(`(?i)Smart ?Tab ?II ?10`),
		regexp.MustCompile(`(?i)Smart ?Tab ?III ?7`),
		regexp.MustCompile(`(?i)Smart ?Tab ?III ?10`),
		regexp.MustCompile(`(?i)Vodafone TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD[ _]([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Vodafone[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Volla Phone (22|X23)`),
		regexp.MustCompile(`(?i)VOLT[_ ](SV451[_ ]Vision)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vonino|Epic (?:E8|P7)|Epic_(?:M8|P7)|Gyga[ _](?:X|S|QS|XS)|Jax[ _](?:QS|[SXQN]|Mini)|Magnet[ _](?:M[19]|G[135]0|W10)|Navo_QS|Navo S|Onyx_(QS|Z)|Orin_QS|Pluri[ _](?:[BCMQ]7|[CQM]8)|Sirius_QS|Spirit QS|Volt[ _][XS]|Xavy[_ ]([GT]7|L8)|Xylo[ _][XSPQT]|Zun[ _](?:N|X[OS]?)|JAX_N|Druid_L10|iMart_Pro|MusicPAD_[HM]1`),
		regexp.MustCompile(`(?i)Zun[ _](N|X[OS]?)`),
		regexp.MustCompile(`(?i)Xylo[ _]([PSXQT])`),
		regexp.MustCompile(`(?i)Volt[ _]S_A7`),
		regexp.MustCompile(`(?i)Volt[ _]S`),
		regexp.MustCompile(`(?i)Volt[ _]X`),
		regexp.MustCompile(`(?i)Gyga[ _]QS`),
		regexp.MustCompile(`(?i)Gyga[ _]XS`),
		regexp.MustCompile(`(?i)Gyga[ _](S|X)`),
		regexp.MustCompile(`(?i)Jax[ _]QS`),
		regexp.MustCompile(`(?i)Jax[ _]S_A7`),
		regexp.MustCompile(`(?i)Jax[ _]([SQXN])`),
		regexp.MustCompile(`(?i)Jax[ _]Mini`),
		regexp.MustCompile(`(?i)Epic[_ ]([EM]8|P7)`),
		regexp.MustCompile(`(?i)Pluri_M([78])_2020`),
		regexp.MustCompile(`(?i)Pluri[ _]([BCMQ])7`),
		regexp.MustCompile(`(?i)Pluri[ _]([CQM])8`),
		regexp.MustCompile(`(?i)Druid[_ ](L10)`),
		regexp.MustCompile(`(?i)Magnet[_ ]M10[_ ]2020`),
		regexp.MustCompile(`(?i)Magnet[_ ](G50)[_ ]Pro`),
		regexp.MustCompile(`(?i)Magnet[ _](M[19]|G[135]0|W10)`),
		regexp.MustCompile(`(?i)Navo[_ ](Q?S)`),
		regexp.MustCompile(`(?i)Onyx_(QS|Z)`),
		regexp.MustCompile(`(?i)Xavy[_ ]([GT]7|L8)`),
		regexp.MustCompile(`(?i)MusicPAD_([HM]1)`),
		regexp.MustCompile(`(?i)(HK1 (?:Max|MINI\+?|PLUS|PRO)|KK MAX|VONTAR[_ -](?:Z[58]|[VH]1|KIII|MX-4K|X[234]|R3)|H618|DQ08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DQ08(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VONTAR[_ -](Z[58]|[VH]1|KIII|MX-4K|X[234]|H618|R3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KK MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 MINI\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VORAGO|(?:PAD-7-V5|PAD-7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PAD-7-V5|PAD-7)`),
		regexp.MustCompile(`(?i)(?:SXPro|S7-classic|SXPRO_classic|QuartzLITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VORKE[ _](Z[157]|Z6(?: Plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VORMOR-X5-pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Android 13(?:[\d.]*);(?: [\w-]+;)? (?:HD65)|ZG65|SYNQ|CMG101|CM62|CG65|T10M_Pro|HD62|HD65_Ultra|ZTAB10|BTAB10|HD65[ _](?:Choice|Select|PLUS)|ZG55|ZG65 Pro|V39TPHE01S|V32TPHDE1S|V24TPHDE1S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HD65[_ ]Ultra`),
		regexp.MustCompile(`(?i)HD65[_ ]Select`),
		regexp.MustCompile(`(?i)HD65[_ ]PLUS`),
		regexp.MustCompile(`(?i)(SYNQ|HD6[25]|CM62|CG65|ZG55|HD65|ZG65)`),
		regexp.MustCompile(`(?i)(CMG101)`),
		regexp.MustCompile(`(?i)(V39TPHE01S|V32TPHDE1S|V24TPHDE1S)`),
		regexp.MustCompile(`(?i)VOTO[ _\-]|VT8[89]8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOTO[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)VOTO[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(VT8[89]8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Voxtel_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:VOYO[_ ](?:A15)|i8-Max|Q101-4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i8-Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Q101)-4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOYO[_ ](A15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Joy [123]\+|Joy [34]|Active 1\+|Bee 3|Active [13]|V341U|Bee Lite|Aris| Bee|Star [345])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy ([123])\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy ([34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active 1\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bee 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bee(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Star (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V341U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VSUN (?:ILLUSION|RACE|V9|TOUCH)|Aqua Tough|MERCURY Tough|MARS TOUCH|MARS NOTE|MARS NOCAM|SATURN SELFIE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILLUSION(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MARS TOUCH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SATURN SELFIE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RACE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VSUN TOUCH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (81V)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VP5004A|VS5513|VS4011|VR6031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VP5004A|VR6031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS5513(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS4011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexo-TAB-7(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Nexo-TAB-7(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:X9 CALL2| WO [89])(?: Build|[);])`),
		regexp.MustCompile(`(?i)WO ([89])`),
		regexp.MustCompile(`(?i)(F808NM|F803YM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(WUD55H7762SN|WUD55G7762S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WE (A[15]0|B3|F[12]0|E[12]|L[3469]|R[34]|V[34]|S1|X[13]|T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WIWA DREAM PLAYER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)W10_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TD-TP010G-2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (P10X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WALKER[;,]`),
		regexp.MustCompile(`(?i)Walton|Walpad|RX7 Mini|Primo[ _](?:C[1234]?|D[1-689]|E[1-589]|F8s|EF[23]?|EM|F[1-79]i?|G[1-9]|GF[234]?|GH[23]?|GM|H[2-689M]|H10|H7s|N[F1]?|NX2?|R[1-689]|R[HM]2?|RX[23]?|S[1-8]|V1|X[1-4]|Z|[ZV]X)|Orbit M20|Orbit Y(?:2[10]|[57]0)|XANON X20|NEXG N(?:7[0-3]|25|[689])`),
		regexp.MustCompile(`(?i)Walpad[ _]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Primo H8 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo (RM2|ZX2|NX4) mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo H8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RX7 Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Orbit Y(\d{2})`),
		regexp.MustCompile(`(?i)Orbit M(\d{2})`),
		regexp.MustCompile(`(?i)NEXG N(7[0-3]|25|[689])`),
		regexp.MustCompile(`(?i)Primo[ _]([^;/)]+)[ _]Plus(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Primo[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Walton[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Waltter NEO 10\.1`),
		regexp.MustCompile(`(?i)(?:ZC-339)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZC-339)`),
		regexp.MustCompile(`(?i)V10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO 8475(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(WM1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:C81W_EEA|P16W|F21W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P16W|C81W|F21W)(?:_EEA)?`),
		regexp.MustCompile(`(?i)(?:20200808A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)weplus_3|WEIMEI_NEON2`),
		regexp.MustCompile(`(?i)WELLCOM[ _\-/]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Westerndigital|WDSimpleBrowser`),
		regexp.MustCompile(`(?i)WESTPOINT[;,]`),
		regexp.MustCompile(`(?i)(TETS-4919SM)`),
		regexp.MustCompile(`(?i)Wexler|(?:MOBI 7 LTE|ULTIMA 7 TWIST PLUS|ULTIMA 7|ULTIMA [78] TWIST|TAB10iQ3G|TAB[ _]10Q)(?:[);/ ]|$)|ZEN[ _](?:4\.[57]|5)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?ZEN[ _]4\.5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?ZEN[ _]4\.7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?ZEN[ _]5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZEN[ _]5\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[._-])?TAB[ _]?10Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB10iQ3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wexler[ _\-\.]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Wexler[ _\-\.]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ULTIMA 7 TWIST PLUS|ULTIMA [78] TWIST|ULTIMA 7 OCTA|ULTIMA 7|MOBI 7 LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AM1010V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB-8US2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wieppo (S6 Lite|S[658]|E1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wigor (?:V4))(?:[);/ ]|$)|Android 7(?:[\d.]*);(?: [\w-]+;)? V3(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Wigor (V4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V3)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:WIKO[_ -])|(?:WIKO-)?CINK_[a-z0-9_]+|(?:WIKO-)?HIGHWAY_[a-z0-9_]+|(?:WIKO-)?(?:Cink([^/;]*)|Highway([^/;]*)|Iggy|Stairway|Rainbow ?(Jam|Lite|Up)?|Darkside|Darkmoon|Darkfull|Darknight|Freddy|FEVER|Jerry[2]?|Sublim|Ozzy|JIMMY|Barry|Birdy|Bloom|Getaway|Goa[^nalplus]|Kite|Robby|Lenny[2-9]?|Slide2?|Sunset[2-9]?|Sunny[2-9]?|Tommy[2-9]?|PULP(?: Fab)?|Wax|HARRY|Ridge[^\splus](?: Fab)?|U FEEL(?: Prime| Lite)?|U PULSE(?: LITE)?|View2 (?:Go|Plus)|View XL|View Prime)(?: Plus)?(?: 4G)?(?: Build|$)?|W_(?:C8[06]0|K[346]00|P130|P200|C200SN)|WC300|W-(?:V7[23]0|V745|V755|V8[035]0|P[36]11|K130|K211|K3[68]0|K420|K510S?|K521|K560|K610|K630)-(?:BYT|EEA|FRA|OPE|SU[IN]|SWI|TIM|TMV|TVM|DU|T[HV]|ID)|WIM Lite|W-V851|W-V6[08]0|W-V750BN|W-V770|W-K200|W-U300|(?:U307AS|CINK PEAX 2|HIGHWAY PURE|C210AE|v3913|U614AS|V3991AN|v12fnlite|K-KOOL|p6901|U616AT|VHEM|KENNY|View Go| WIM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V770`),
		regexp.MustCompile(`(?i)(?:WIKO-)?VHEM`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U616AT`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V745`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V750`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V755-EEA`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Cink Peax 2`),
		regexp.MustCompile(`(?i)(?:Wiko-)?Cink([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?CINK_([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY PURE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY STAR`),
		regexp.MustCompile(`(?i)(?:Wiko-)?Highway([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY_([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Iggy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?FEVER`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Stairway`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge Fab 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Rainbow ([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Rainbow`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkside`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkmoon`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkfull`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darknight`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sublim`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ozzy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Barry`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Birdy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Bloom2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Bloom`),
		regexp.MustCompile(`(?i)(?:WIKO-)?JIMMY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Jerry2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Jerry`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Getaway`),
		regexp.MustCompile(`(?i)(?:WIKO-)?KENNY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Goa`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Freddy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Kite`),
		regexp.MustCompile(`(?i)C210AE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U307AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U316AT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)v3913(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?3 Max`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?4 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?([2-9])`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Slide2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Slide`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunset2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunset`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny3 Mini`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny3`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny2`),
		regexp.MustCompile(`(?i)W-K211-(?:TH|TVM)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny`),
		regexp.MustCompile(`(?i)(?:W_K600|Tommy3|W_C200SN)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Wax`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HARRY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?WIM Lite|p6901`),
		regexp.MustCompile(`(?i)(?:WIKO-)?WIM`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp Fab 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp Fab`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Robby(2)?`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U PULSE LITE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U PULSE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL LITE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL PRIME`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View2 Go`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View XL`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View Prime`),
		regexp.MustCompile(`(?i)W_P130|View Go`),
		regexp.MustCompile(`(?i)W-V800-(TVM|TIM|EEA|OPE|DU)`),
		regexp.MustCompile(`(?i)W-K130-(?:OPE|EEA|BYT)`),
		regexp.MustCompile(`(?i)W-K510-(?:TVM|EEA|OPE|SUN|BYT|TH)|W-K510S-SWI`),
		regexp.MustCompile(`(?i)W-K560-(?:EEA|TVM)`),
		regexp.MustCompile(`(?i)W-K610-(?:SUI|FRA)`),
		regexp.MustCompile(`(?i)W-V720-(?:EEA|OPE|SUN)`),
		regexp.MustCompile(`(?i)W-P311-(?:EEA|OPE|TVM)`),
		regexp.MustCompile(`(?i)W-P611-(?:EEA|OPE)`),
		regexp.MustCompile(`(?i)W-V830-(?:EEA|OPE|ID)`),
		regexp.MustCompile(`(?i)W-V730-(?:EEA|TVM|ID|OPE)`),
		regexp.MustCompile(`(?i)W-U300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U520AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U614AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K-KOOL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wiko ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Wileyfox|(?:Swift 2|crackling)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wileyfox Spark \+`),
		regexp.MustCompile(`(?i)Wileyfox; Pro`),
		regexp.MustCompile(`(?i)Swift 2 (X|Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Swift 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wileyfox (Spark|Swift)`),
		regexp.MustCompile(`(?i)Wileyfox ([^/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:NOTE GRACE V)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wink[_ ]|SWITRON-i12A`),
		regexp.MustCompile(`(?i)Wink[_ ]((?:Glory|World|Share|City)(?:[_ ](?:SE|S))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wink[ _](Primo|Highway)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Winmax[ _](?:XC14|XC[46]|TX30)|PolarH4|Tiger_X12)(?:[);/ ]|$)|MAUI.+Winmax_BD45`),
		regexp.MustCompile(`(?i)Winmax[ _](XC14|XC[46])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winmax[ _](TX30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAUI.+Winmax_(BD45)`),
		regexp.MustCompile(`(?i)Winnovo|(?:T10LTE|H(?:7|10)_US)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T10LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H(7|10)_US(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winnovo[ _]?(M866|M798|VTab|750[PK]|T2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winnovo[ _](V51)`),
		regexp.MustCompile(`(?i)Winnovo[ _](K5[46]|K43)[a-z]{2}`),
		regexp.MustCompile(`(?i)Winstar S-?5`),
		regexp.MustCompile(`(?i)Winstar S-?5`),
		regexp.MustCompile(`(?i)(WISENET5|WPOS-3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WIZARPOS[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)miSmart|miTab|WIAM[ _]\#?\d+|WOLDER`),
		regexp.MustCompile(`(?i)WIAM[_ ]\#?65[_ ]lite`),
		regexp.MustCompile(`(?i)(?:WOLDER_)?WIAM[ _]\#?(\d+)`),
		regexp.MustCompile(`(?i)WOLDER[_ ](\d+)`),
		regexp.MustCompile(`(?i)miSmart[ \-_]?([^/]+) Build`),
		regexp.MustCompile(`(?i)miTab[_ ]PRO[_ ]10[_ ]plus`),
		regexp.MustCompile(`(?i)miTab[ \-_]?([^/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)AT[ _-]AS([0-9A-Z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:W55SE|W626 LITE|WS054|WS067|WS5SE|WS626)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wonu ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SP5026i-Scorpio|SP5040-Casiopea`),
		regexp.MustCompile(`(?i)TERRA[ _]PAD[ _](\d+)(_V2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]|Nimbus 101Q`),
		regexp.MustCompile(`(?i)Nimbus ?(101Q|115|1100RX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WOXTER[ _]I-101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]([SQ]X) ?([0-9A-Z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[_ ](?:Zielo[ _])?(Q27|Z800|Z420)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)G1LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[-]?BO (V[78]|V1[01]|V[89]\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:XM-SW1|X63Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[-_]TIGI|Hope(?:[78]|10)[_ ](?:Mate|Max|Pro|Plus|LTE)|JOY(?:10|8) Mate|JOY10_LTE|Photo_P15_Lite|SHARP_2|SHARP1|V18 pro_A`),
		regexp.MustCompile(`(?i)X[_ ]TIGI[_ ]JOY7_TV`),
		regexp.MustCompile(`(?i)(?:X_TIGI_)?JOY(10|[78])[ _]Mate`),
		regexp.MustCompile(`(?i)Hope([78])[_ ](Mate|Max)`),
		regexp.MustCompile(`(?i)Hope ?8 LTE`),
		regexp.MustCompile(`(?i)Hope10[_ ]Pro`),
		regexp.MustCompile(`(?i)Hope10[_ ]Plus`),
		regexp.MustCompile(`(?i)X-TIGI[_ ]V28[_ ]LTE`),
		regexp.MustCompile(`(?i)X[-_]TIGI[_ ]V19`),
		regexp.MustCompile(`(?i)X[-_]TIGI[_ ]A1[_ ]?Plus`),
		regexp.MustCompile(`(?i)X-TIGI[_ ]Photo[_ ]P11`),
		regexp.MustCompile(`(?i)SHARP_?([12])`),
		regexp.MustCompile(`(?i)X[-_]TIGI[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)X-View|ZEN_U5\+|AMBER_KIDS|Proton_Amber_HD|Proton_Neon|PROTON_JADE_2_PRO|TitaniumGTColorsGO`),
		regexp.MustCompile(`(?i)ZEN_U5\+`),
		regexp.MustCompile(`(?i)(?:X96Air_(?:A100|100W|V2|P[1-3])|X96_X6_I|X96Max_Plus_?(?:Ultra|[25]|Q[12])?|X96MATE_PLUS|X96MINI_11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X96Air_(100W|A100|V2|P[1-3])`),
		regexp.MustCompile(`(?i)X96Max_Plus_?([25]|Q[12])`),
		regexp.MustCompile(`(?i)X96Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XCOM[ _](?:X520|ISMART)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XCOM[ _](X520)`),
		regexp.MustCompile(`(?i)XCOM[ _]ISMART`),
		regexp.MustCompile(`(?i)(V1277)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGEM[;,]`),
		regexp.MustCompile(`(?i)XGEM[;,] ?([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:XGIMI TV|XK03H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X4000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YT5760[ABL]|YT5716C?|YT7216C?|YT7260[BL]|YT9216[BC]J|YT9213AJ|YT9270)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Enia)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(XDSR785HDR_AVANT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGODY|(?:Y19\(EU\)|XGT_EEA|N01Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGODY Y17(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y19\(EU\)`),
		regexp.MustCompile(`(?i)XGODY_X96(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(XDH-(?:0F-A1|1[78]-A1|21-A1|29-B1|2A-B1)|XD-SDD05-2101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LA2-(?:L|S[N]?)|HLA Note(?:3|1-L)|L7620DE|20190416Q|20170608S|20180322D|20190325D|20190718Q|20190417Q|20180101M|20170605Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLA Note3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLA Note1-L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LA2-(?:L|S[N]?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(20190416Q|L7620DE|20180101M|20170605Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20170608S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20180322D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190325D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190718Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190417Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi| ONC(?: Build|[;)])|MiTV-\w|Mi9 ?(?:Lite|SE)|MiProj(?:A1|M05)|Mi9 Pro 5G|(?:Mi5X|MI [a-z0-9]+|Mi-4c|MI-One[ _]?[a-z0-9]+|MIX(?: 2S?)?|MIX 2S ART|pomelo|rubyplus|AFTBTX4)(?:[);/ ]|$)|HM (?:[^/;]+) (?:Build|MIUI)|(?:2014501|2014011|201481[12378]|201302[23]|2013061) Build|Redmi|POCOPHONE|(?:SHARK )?KTUS-[AH]0|(?:SHARK )?(KLE|KSR|MBU|PAR)-[AH]0|SK[RW]-[AH]0|PRS-[AH]0|POCO F1|DLT-[AH]0|MIBOX[234]([_ ]PRO)?|MiTV4[ACSX]?|AWM-A0|MI CC 9 Meitu Edition|MiBOX1S|M2006J10C|M2006C3(?:L[IGC]|LVG|MN?G|MT)|M2007J1(?:7[CGI]|SC)|M2002(?:J9[SEG]|F4LG)|HM2014819|WT88047|210611(?:8C|19(?:BI|[AD]G|AL))|M2001(?:J[12]G|C3K3I)|M2004J1(?:5SC|9AG)|M2004J(?:7[AB]|19)[CG]|M2012K11(?:[CGI]|A[CI])|M2011K2[CG]|M2011J18C|M2006C3[ML]II|M2003J(?:15SC|15SS|6B2G|6A1G|6A1I)|M2007J3S[ICYGP]|M2007J22[CG]|M2103K19[CGYI]|M2101K(?:[79]AG|7AI|7B[GI]|6[GIRP]|7BNY|9[GCR])|M2010J19S[CGYIL]|M2102(?:K1AC|K1[CG]|J2SC)|HM NOTE 1(?:LTE|W)|MI[_ ]PLAY|Qin 1s\+|Qin ?2(?: Pro)?|MI_(NOTE_Pro|5X|4i|(?:A2|8)_Lite)|A001XM|lancelot|XIG0[1-5]|2107119DC|M1810F6LI|M2101K(?:7BL|9AI)|A101XM|M2012K10C|M2104K10AC|M19(?:01F7[1S]|10F4S|08(?:F1XE|C3JGG)|08C3J[IH]|06F9S[IH]|02F1G|03C3GI)|21051182[CG]|21081111RG|2109119D[GI]|21091116(?:AI|[AU]?C|i|U[GI])|220111(?:7T[LGIY]|19TI|19UY|6S[IRC]|6TG|[67]SG|7SL)|21121(?:119S[CG]|23A[CG]|119VL|210C)|2204121(?:6[CI]|6UC|9[CGI]|9NY|1AC)|220333Q(?:AG|NY|L|BI)|2107113S[IGR]|22031(?:29G|116BG|21C)|PAR-H0|M2105K81A?C|2109119BC|2202(?:1119KR|1211RC|33L2[CGI])|22011(?:2[23][CG]|211C|16TI|17S[YI])|joyeuse|galahad|hydrogen|begonia|kenzo|willow|beryllium|rosemary| MDG1|KLE-AO|Mi ?Pad ?\d|220612(?:18C|[23]SC)|2207(?:12(?:2MC|12AG|19AI)|33S(?:F?G|[ILH])|43FI)|2208(?:7RA4DI|1212(?:U?G|C)|128(?:1AC|3[GC]))|Black Shark|MZB82(?:98|5[57])IN|MZB0A5[HE]IN|2210(?:1317C|1320C|1316(?:U[PG]|UCP?|[CIG])|1(?:29SG|32[CG]))|2211(?:13(?:3[CG]|17I)|1317G)|23013RK75C|2305(?:3RN02[AYLI]|4RA19C)|2209(?:5RA98C|116AG|129SC)|2212(?:0RN86[CGIH]|6RN91Y|ARNC4L|2RK93C|7RK46C)|2302(?:6RN54G|1RAA(?:EG|2Y)|7RAD4I|8R(?:N4D[GI]|A60L|NCA[GI]))|angelican|vnd_camellia|2304(?:9RAD8C|FPN6D[GC]|6RP50C|3RP34[CGI]|6PNC9C)|2303(?:0RAC7Y|CRA44A|ERA42L)|M1908C3(?:[KJI]G|KH|I[CH])|M1906G7G|M1903(?:F10I|C3GG|C3EI)|M1904F3BG|Hongmi [45]A?|M1912G7B[CE]|2307(?:7RABDC|6RN4BI|6RA4BR|6RN8DY|8PND5G|8RKD5C|6RA4BC|3RPBF[GCL]|BRPDCC)|2310(?:6RN0DA|8RN04Y)|2312(?:CRNCCL|DRA50G|9RAA4G|9RA5FL|9RN51[HX]|CRAD3C|DRAAB[CGI]|7PN0C[CG]|DRA50[CI]|4RA7EO|4RN87[CIG])|2311(?:6PN5B[CG]|BPN23C|7RA68G|DRN14I|7RK66C|FRAFDC|DRK48C|3RKC6C)|2308(?:CPXD0C|8PND5R)|24018RPAC[CG]|2404(?:ARN45A|8RN6CG|0RN64Y)|2405(?:3PY09C|CRPFDG)|2306EPN60G|23090(?:RA98[CGI])|23100RN82L|2406(?:9RA21C|ERN9CI)|2403(?:1PN0DC|0PN60G)|QIN3ULTRA|FengMiProjA2|A401XM|MZB8458IN|M1805E10A|M1803D5XA|2407(?:2PX77C|FRK8EC)`),
		regexp.MustCompile(`(?i)SKR-[AH]0`),
		regexp.MustCompile(`(?i)SKW-[AH]0`),
		regexp.MustCompile(`(?i)DLT-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KLE-A[0O]`),
		regexp.MustCompile(`(?i)(?:SHARK )?KSR-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KLE-H0`),
		regexp.MustCompile(`(?i)(?:SHARK )?MBU-H0`),
		regexp.MustCompile(`(?i)(?:SHARK )?MBU-A0`),
		regexp.MustCompile(`(?i)(?:SHARK )?PRS-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?PAR-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KTUS-[AH]0`),
		regexp.MustCompile(`(?i)Black Shark ([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Xiaomi_2014501|2014501 Build`),
		regexp.MustCompile(`(?i)Xiaomi_2014011|2014011 Build`),
		regexp.MustCompile(`(?i)Xiaomi_201302[23]|201302[23] Build`),
		regexp.MustCompile(`(?i)Xiaomi[_-]2014818|2014818 Build`),
		regexp.MustCompile(`(?i)Xiaomi_2014817|2014817 Build`),
		regexp.MustCompile(`(?i)Xiaomi[_-]201481[123]|201481[123] Build`),
		regexp.MustCompile(`(?i)Hongmi ([45]A?)`),
		regexp.MustCompile(`(?i)MI[_ ]PLAY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi ?9 ?SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Mi ?9 Lite|M1904F3BG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xiaomi_)?M1902F1[GT]`),
		regexp.MustCompile(`(?i)MI CC 9e|MI CC9e`),
		regexp.MustCompile(`(?i)MI CC ?9 Pro`),
		regexp.MustCompile(`(?i)MI CC 9(?: Meitu Edition)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xiaomi_)?(?:M2001J2E_TD-LTE|M2001J2G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xiaomi_)?(?:Mi 10 Pro|M2001J1[EG](?:_TD-LTE)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2011K2[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116UI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11AI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K11I|Mi 11X Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J3S[GI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J3S[CYP](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J1SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2102J2SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2002J9[EGS]|XIG01|Mi 10 Lite 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K11G|MZB0A5EIN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2107113S[IGR]|Xiaomi 11T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21081111RG|Xiaomi 11T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2109119DI|(?:Xiao)?mi 11 Lite (?:5G )?NE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K9[GCR]|2109119DG|Mi 11 Lite 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K9A[GI]|Mi 11 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2102K1[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2102K1AC|Mi 11 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201122[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201123[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2209116AG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22071212AG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2207122MC|Xiaomi 12 Pro Dimensity)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22081212(?:U?G|C)|Xiaomi 12T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2206122SC|Xiaomi 12S Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2206123SC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2203121C|Xiaomi 12S Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2203129G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2112123A[CG]|Xiaomi 12X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2210132[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2210129SG|Xiaomi 13 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2211133[CG](?:[);/ ]|$)|Xiaomi 13(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:2304FPN6D[CG]|Xiaomi 13 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23078PND5G|23088PND5R|Xiaomi 13T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2306EPN60G|XIG04)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23127PN0C[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:24031PN0DC|24030PN60G|Xiaomi 14 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2311(?:6PN5B[CG]|BPN23C)|Xiaomi 14 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI[ _]8[ _]?Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 8 Explorer Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 8 ([a-z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi 9T Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Mi ?9 Pro 5G|M1908F1XE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 9 Transparent Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI ([89]) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 5s Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi_MDT2|Mi5X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi_2013061|2013061 Build`),
		regexp.MustCompile(`(?i)Mi[- ]([43])c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 4W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi_4i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 4 ?LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI MAX ([23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MI MAX|hydrogen)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi[ _]A2[ _]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1906F9S[IH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2106118C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1803D5XA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi MIX 3 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX ([23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX 2S ART(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX 2S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)24072PX77C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi Note 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCOPHONE[ _]F1|POCO F1|beryllium|M1805E10A`),
		regexp.MustCompile(`(?i)M1903C3G[IG]`),
		regexp.MustCompile(`(?i)24069RA21C|Redmi Turbo 3`),
		regexp.MustCompile(`(?i)MDG1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WT88047(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM2014819(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 2A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 1S[CW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2001C3K3I|MZB8298IN|M1908C3K[GH]|MZB8458IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZB825[57]IN|M1908C3I[CG]|M1908C3IH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 8A (Dual|Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J7AC|M2004J15SC|Redmi 10X (?:4G|LTE))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)220333Q(?:AG|NY|L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2310(?:6RN0DA|8RN04Y|0RN82L)|2311DRN14I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2404ARN45A|24040RN64Y`),
		regexp.MustCompile(`(?i)(?:23124RN87[CIG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J19[CG]|M2006C3MII|lancelot|galahad|M2004J19AG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J19I|Redmi 9 Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2010J19SI|Redmi 9 Power)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3L[GCI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3LII(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MZB0A5HIN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3M[GT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3LVG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2010J19S[GYL]|pomelo|Redmi 9T, Note 9 4G, 9 Power)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 9T NFC(?:_SN)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2006C3MNG|Redmi 9C NFC|angelican)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041219(?:G|NY)|Redmi 10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061119D[CG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:220333QBI|Redmi 10 Power)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)220233L2[CGI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061119A[GL]|21121119(?:SG|VL)|22011119UY|Redmi 10 2022)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041219I|Redmi 10 Prime\+ 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22011119TI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061119[BT]I|Redmi 10 Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J7BC|Redmi 10X Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22120RN86[CGIH]|22126RN91Y|2212ARNC4L`),
		regexp.MustCompile(`(?i)23053RN02[AYLI]`),
		regexp.MustCompile(`(?i)(?:23076(?:RN8DY|RA4BR|RN4BI)|23077RABDC|XIG03|Redmi 12 5G|A401XM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22071219AI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K20 Pro Premium Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K20Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30 Pro Zoom Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30 Pro Zoom(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30S Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K([23]0) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1912G7B[CE](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30i 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22021211RC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K10C|Redmi K40 Gaming)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K40 Pro\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K11C|Redmi K40 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2006J10C|Redmi K30 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22011211C|Redmi K50 Pro`),
		regexp.MustCompile(`(?i)22127RK46C|Redmi K60 Pro`),
		regexp.MustCompile(`(?i)23078RKD5C|Redmi K60 Ultra`),
		regexp.MustCompile(`(?i)Redmi Y1 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONC(?: Build|[;)])|M1810F6LI`),
		regexp.MustCompile(`(?i)Redmi (\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 4 Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:220733SFG|Redmi A1\+|220743FI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)220733S[GHIL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2302(?:8RN4D[GI]|6RN54G)`),
		regexp.MustCompile(`(?i)23028RNCA[GI]`),
		regexp.MustCompile(`(?i)23129RN51[XH]`),
		regexp.MustCompile(`(?i)Qin ?2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qin 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2107119DC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2109119BC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2209129SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23046PNC9C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)24053PY09C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Civi 1S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2105K81AC|22081281AC|(?:Xiao)?mi Pad 5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21051182[CG]|(?:Xiao)?mi Pad 5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2105K81C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23046RP50C|Pad 6 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23043RP34[CGI]|Xiaomi Pad 6(?: Build|[;)])`),
		regexp.MustCompile(`(?i)2307BRPDCC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:24018RPAC[CG]|Xiaomi Pad 6S Pro 12\.4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI (?:PAD ?4 ?PLUS|Pad4\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD4 Wi-?Fi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI ?PAD 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22081283[GC](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2405CRPFDG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23073RPBF[GCL]|Redmi Pad SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FengMiProjA2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIBOX3[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIBOX([234])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiBOX1S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MSSP[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MTEQ0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-AESP0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-(?:ANSP0|AYFR0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOOQ0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOSR1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOOQ1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOOR4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MiTV-AXSO0|MiTV4(?:A|-ANSM0)|MiTV-MSSP0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-AXSO[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV(4[CSXI]|4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-AFKR0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTBTX4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-([A-Z]{4}[0-9]{1})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2011J18C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22061218C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2308CPXD0C|Mix Fold 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM NOTE 1W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM NOTE 1TD (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)HM NOTE 1(?:LTE|S)(?:W|GLOBAL|TD)? (?:Build|MIUI)|HM NOTE 1LTE`),
		regexp.MustCompile(`(?i)Xiaomi[_ ]2015052`),
		regexp.MustCompile(`(?i)(?:M2010J19SC|M2003J15SS|Redmi Note 9 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2003J6A1G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2003J15SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K7BL|rosemary)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J22G|A001XM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J22C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:joyeuse|M2003J6(?:B2G|A1I))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note 10 Lite|M2002F4LG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note ?9 Pro Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2101K7A[GI]`),
		regexp.MustCompile(`(?i)M2103K19Y|22021119KR`),
		regexp.MustCompile(`(?i)M2101K7B(?:[GI]|NY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2103K19[GC]|Redmi Note 10 5G|vnd_camellia)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2103K19I|A101XM|Redmi Note 10T 5G`),
		regexp.MustCompile(`(?i)XIG02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K6[GIRP]|M2104K10AC|Redmi Note 10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)rubyplus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101316[CIG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101320C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2303(?:0RAC7Y|CRA44A|ERA42L|Redmi Note 12S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2302(?:1RAA2Y|1RAAEG|8RA60L|7RAD4I)|22101317C|22111317G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Redmi Note 12R Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23076RA4BC|Redmi Note 12R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23049RAD8C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23054RA19C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101316UC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101316U[GP])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22101316UCP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22111317I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21091116C|2201116T[IG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2312CRAD3C|2312DRA50C|23117RA68G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2311FRAFDC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2312DRA50[GI]|Redmi Note 13 Pro 5G|XIG05)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2312(?:4RA7EO|9RAA4G|9RA5FL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23090RA98C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23090RA98[GI]|Redmi Note 13 Pro\+ 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2312DRAAB[CGI]|Redmi Note 13 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2201116SC|Redmi Note 11E Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041219C|Redmi Note 11E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041216C|Redmi Note 11T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22041216UC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2201116S[GR]|Redmi Note 11 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2201116SI|Redmi Note 11 Pro\+ 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21091116U[CG]|Redmi Note 11 Pro\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22095RA98C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21121119SC|2201117T[GILY]|Redmi Note 11 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22087RA4DI|Redmi Note 11 SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201117S[GIYL]`),
		regexp.MustCompile(`(?i)(?:22031116BG|Redmi Note 11S 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21091116(?:AI|I)|Redmi Note 11T 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M1908C3J[IH]|M1908C3JG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M1908C3JGG|Redmi Note 8 \(2021\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:begonia|M1906G7G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)willow(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1901F71(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1901F7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note (\d+) Pro Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note (\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi[ _]Note[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Redmi[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Mi Note 10 Pro|M1910F4S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi Note 10|M1910F4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI[ _]Note[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Qin 1s\+`),
		regexp.MustCompile(`(?i)MI[- ]One[ _]?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi[- ]One[ _]?([a-z0-9]+)?(?: Build|[);])`),
		regexp.MustCompile(`(?i)MI[ _]([^;/]*) Build`),
		regexp.MustCompile(`(?i)MI[ _]([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM Note ([^/;]+) (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)HM ([^/;]+) (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)Xiaomi[ _-]([^/;]+)(?: Build|$)`),
		regexp.MustCompile(`(?i)XI[_-]CE(?:655|U55|U[48])`),
		regexp.MustCompile(`(?i)XI[_-]CE(655|U55|U[48])`),
		regexp.MustCompile(`(?i)Xolo|(?:Q600|Q700s?|Q800|Q1000s|Q1000[ _]Opus|Q1010i|Q2000|Omega[ _]5\.[05]|Era5X|Era[ _]2[VX](?:[_ ]3GB)?|era[ _]X|era_HD|era[_ ]4[GK]|Era_4?X(?:_2GB)?|BLACK-1XM|A1000s_Lite|cube 5\.0_2GB|Opus 3|era1X|era [2X]|era1Xpro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLACK-?1XM?`),
		regexp.MustCompile(`(?i)Era[ _]?1X ?Pro`),
		regexp.MustCompile(`(?i)Era[_ ]?([145])X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era_4X_2GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era[ _]2V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)era[_ ](HD|4[GK]|2X?|X)`),
		regexp.MustCompile(`(?i)cube 5\.0_2GB`),
		regexp.MustCompile(`(?i)(Q600 Club|Q600|Q700s?|Q800|Q1000s Plus|Q1000s|Q1000[ _]Opus|Q1010i|Q2000|Omega[ _]5\.[05]|A1000s_Lite|Opus 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xolo[ _]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Xolo[ _]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)XORO[ _]|(?:TelePAD(?:795|731|1032|10A3|7A3)|HMT(?:390Q?|400)|HST 260)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TelePAD(7|10)A3 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TelePAD(795|731|1032)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MegaPAD3204V5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMT(390Q?|400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HST 260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xshitou[_ ](P7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xsmart (?:Nova 7|Mate 10)|CORE_X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xsmart (Nova 7|Mate 10)`),
		regexp.MustCompile(`(?i)(?:Xtouch[ _](?:X10|A5|X)|XBot[_ ](?:Senior|Junior)|X9_16GB|XP10_Wifi)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xtouch[ _](X10|A5|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X9_16GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XBot[_ ](Senior|Junior)`),
		regexp.MustCompile(`(?i)(?:BRIO[_ ]X31|XM14G|X10MT(?:16|87))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BRIO[_ ]X31)`),
		regexp.MustCompile(`(?i)Xpad_(M9_3G)`),
		regexp.MustCompile(`(?i)YASIN ([24])K G Smart TV`),
		regexp.MustCompile(`(?i)YASIN (?:Android|2K) (?:Android )?TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YASIN 4K Android TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YY-\d{3}[a-z]?)`),
		regexp.MustCompile(`(?i)M20201419(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X109|(?:Y103|Y61|Q11)[-_]EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y103|Q11|Y61)[-_]EEA`),
		regexp.MustCompile(`(?i)(X109)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU Fly (\w+)`),
		regexp.MustCompile(`(?i)YUHO_|(?:Netra(?:[_ ](?:Plus|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YUHO_(O2|H2|Y[123])_PRO`),
		regexp.MustCompile(`(?i)(?:YUHO_)?(Vast2?|O[12]|Y2|Netra(?:[_ ](?:Plus|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(L211|N10|U221|U310)-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YUNDOO[ _-]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:YNDX-?00(?:0SB|10[12]|055|07[1235]|09[12])|YandexModule2-00001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YNDX-?(0007[1235]|0009[12]|0010[12])`),
		regexp.MustCompile(`(?i)YNDX-?000SB`),
		regexp.MustCompile(`(?i)YNDX-?00055`),
		regexp.MustCompile(`(?i)Xenta[ \-]Tab|Luna TAB|TAB09-410|TAB10-410|TAB07-485|TAB0[78]-200|TAB08-201-3G|TAB9-200|TAB09-211|TAB10-2[01]1|TAB13-201`),
		regexp.MustCompile(`(?i)Luna TAB07-10[01]`),
		regexp.MustCompile(`(?i)Xenta-TAB07-21[01]`),
		regexp.MustCompile(`(?i)TAB10-2[01]1`),
		regexp.MustCompile(`(?i)M631Y|M685Y4|M651G_MY|YES (?:Altitude 4|MPY(?:48|54))`),
		regexp.MustCompile(`(?i)YES (Altitude 4|MPY(?:48|54))`),
		regexp.MustCompile(`(?i)yestel|(?:T5|T13|X2)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)yestel P30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X2|T5|T13)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Yezz|ANDY[ _]|(?: (?:4E4|5EQ)|A5EI|LIV 1S|LIV1|LIV2[_ ]?LTE|ART ?[123](?:_?PRO|S)?|MAX_1_PLUS|MAX2 PLUS|EPIC T|GO ?[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YEZZ[_-])?(4E4|5EQ|A4M|A5EI)`),
		regexp.MustCompile(`(?i)GO ?([123])`),
		regexp.MustCompile(`(?i)LIV2[_ ]?LTE`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9]\.[0-9][A-Z0-9]*)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9])([0-9][A-Z0-9]*)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9][A-Z0-9]+)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)KB2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YPAD(P70[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YD20[16]|YOTA 3[+])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YD20[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOTA 3[+](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOU-BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOU-BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Youwei[ _]`),
		regexp.MustCompile(`(?i)youwei[ _]mini5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YTONE[ _\-]`),
		regexp.MustCompile(`(?i)YTONE[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)YTONE[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(?:YU5[05]10[A]?|YU4711|AO5510|YU5050|YU501[14]|YU5551|YU Yureka Black|YU 6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5010[A]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AO5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5551(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5510[A]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU4711(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU (Yureka Black)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:N101[ _]DUAL(?:[ _]CORE)?(?:[ _]?2)?(?:[ _]V11)?|N70 DUAL CORE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N(101|70)[ _]DUAL(?:[ _]CORE)?(?:[ _]?2)?`),
		regexp.MustCompile(`(?i)(?:YS[78]pro|YS6 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YS([678]) ?pro`),
		regexp.MustCompile(`(?i)YUNO\.|ULX-(?:55UTCS3234|32TCS226|43UTCS347|39TCS222|50UTCS3234|43FTCS2234|32TCSW2234|24TCS221)`),
		regexp.MustCompile(`(?i)ULX-(\d{2}[FU]?TCSW?\d{2,4})`),
		regexp.MustCompile(`(?i)Yusun|LA2-T`),
		regexp.MustCompile(`(?i)Yusun ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Yusun ([a-z0-9_\-\+]+)`),
		regexp.MustCompile(`(?i)YXTEL_([HU]1|U3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZMOOTH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Odyssey[_ ](?:evo|DTV[67]|J[59]|J10|GLAZE\+?|RANGE|ACE|AEON|VICTORY|SACRED|SAGA|SWIFT|O2|ULTRA|FLAME|POPO|PERRI|TYTAN|HIGH|SOAR|ERA)|ODYSSEY[ _]?NEXT|INTENSE (?:RISE|Hype|GAME))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ODYSSEY[ _]J10[ _]Mini`),
		regexp.MustCompile(`(?i)ODYSSEY[ _](O2|J[95]|DTV[67]|J10)`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]AEON`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]ACE`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]ULTRA`),
		regexp.MustCompile(`(?i)ODYSSEY[ _]?NEXT`),
		regexp.MustCompile(`(?i)ODYSSEY[ _]PERRI`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]FLAME`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]evo`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]Victory`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]SWIFT`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]TYTAN`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]SAGA`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]SACRED`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]POPO`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]RANGE`),
		regexp.MustCompile(`(?i)Odyssey[_ ]GLAZE\+`),
		regexp.MustCompile(`(?i)Odyssey[_ ]GLAZE`),
		regexp.MustCompile(`(?i)Odyssey[_ ]HIGH`),
		regexp.MustCompile(`(?i)Odyssey[_ ]SOAR`),
		regexp.MustCompile(`(?i)Odyssey[_ ]ERA`),
		regexp.MustCompile(`(?i)ZIFRO|(?:ZT-97003G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZT-9700)3G`),
		regexp.MustCompile(`(?i)ZIK[_ ](W1027)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE|AxonPhone|([a-z0-9]+)_USA_Cricket|(?:Blade[ _](?:E01|V0820|L110|L[2357]|L210(?:RU)?|L7A|L8|S6|V[6789]|V8Q|V8 SE|V9 VITA|X7|A(310?|320|460|465|475|510|520|530|602|51|30|3)|V580|V Ultra|Q Lux)|N9[15]8St|N818S|N951[0579]|N91[38]0|N9101|N913[267]|N952[01]|N9560|N9810|N799D|[UV]9180|[UV]9815|Z(?:5151V|610DL|6250CC|6400C|6410S|233V|331|5031O|559DL|6621O|667T|6750M|768G|792|81[25]|818L|82[08]|83[12359]|85[125]|851M|992|(557|71[67]|798|836|861|916)BL|986DL|(232|718|828)TL|(?:233|353|558|717|799|837|862|899|917|963)VL|955A|95[678]|965|97[018]|98[1237]|986U|999|936L)|V769M|Blade Apex2|G (LTE|Lux)|Vec|Z959|V865M|Z3001S|902ZT|KIS II Max|Kis 3|K3DX-V5G|Z930L|Optus X|Blade[ _](A[357] 2019(?:-T)?|A[35] 2020-T|A7S 2020-T|A6 MAX|A0622|X9)|Z3153V|Z836F|Ctyon-A9|602ZT|MO-01[JK]|Z963U|402ZT|P545|P609|P650 Pro|dandelion|901ZT|A00[13]ZT|Z-01K|UZTE (?:GRAND V7|V808)|ZTG01|K8[37]CA|K87CC|VERGATARIO ?5(?:PLUS)?|Axon mini|KIS C341|A103ZT|Z335(?:1S|[23]CA)|Z5156CC|Z5157[VY]|B867RE|MEO Smart A[48]0|SmartA35|P65[10] 2021|Z6201V|Z6252CA|Z6251V?|A2020N3|A2322G|A202ZT|A302ZT|Z719DL|Z5158|Z235[069]|Z2450|B2017G|5G UG Phone U23|ATLAS[ _]W|A2121G|A2022|A202[23]P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5G UG Phone U23|ZTE 7160N`),
		regexp.MustCompile(`(?i)P651 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P650 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)7530N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9040N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9042N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)7531N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2122H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A001ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A003ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A103ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A202ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A302ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTG01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T221(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0616(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3352CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3353CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[_ ]Blade[_ ]A(3[13])[_ ]?(?:Plus|\+)`),
		regexp.MustCompile(`(?i)(?:A7020(?:RU)?|Blade A7S 2020-T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6252CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7030|A71 5G`),
		regexp.MustCompile(`(?i)Z5157[VY]`),
		regexp.MustCompile(`(?i)A0722(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6201V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade 10 Vita(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6251V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE (?:2050|V1050)(?:RU)?`),
		regexp.MustCompile(`(?i)ZTE Axon 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2019G? Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:902ZT|A2020N[23] Pro|A2020N3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2020 SP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A2021[LGH]?|ZTE Axon 11 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2021E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9000N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2322|A2022L`),
		regexp.MustCompile(`(?i)A2023G?`),
		regexp.MustCompile(`(?i)ZTE[ _]?9047`),
		regexp.MustCompile(`(?i)N799D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z818L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3001S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3351S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ctyon-A9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K3DX-V5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE)?N918St(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N958St(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z963U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5156CC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5158(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9130(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9132(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9136(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9137(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9180(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5151V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9517(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z559DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)402ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE[_ ])?Blade[ _]Q[ _]Lux(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T320(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9515(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9519(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9521(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9560(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[UV]9180(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[UV]9815(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[_ ]Blade[_ ](C2|V7)[_ ]Plus`),
		regexp.MustCompile(`(?i)(?:ZTE[_ ])?BA521`),
		regexp.MustCompile(`(?i)(?:ZTE_)?V829`),
		regexp.MustCompile(`(?i)V970M?|V987`),
		regexp.MustCompile(`(?i)Z959(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:[RV]880H|V965)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z95[67]`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Grand[ _]Era`),
		regexp.MustCompile(`(?i)Z331(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N818S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[_ ]V0840(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5031O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P545(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Optus X Start(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BA520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A(5[12]) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L2 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Blade[ _]L2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3 Apex(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]T610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]Blade L4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Blade L5 Plus|BLADE L0510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L7A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L(\d+)(?:RU)?`),
		regexp.MustCompile(`(?i)Blade A([357]) (20(?:19|20))`),
		regexp.MustCompile(`(?i)ZTE BV0720(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A[35] 2020-T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE C880A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A([35]1?) Lite`),
		regexp.MustCompile(`(?i)Blade A(53) Pro`),
		regexp.MustCompile(`(?i)Blade (S6|A[35]1?) Plus`),
		regexp.MustCompile(`(?i)(?:ZTE[ _])?BLADE[ _]A062[02](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE (?:A6 MAX|A0605)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0622(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade S6 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade S6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE A5 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]T617(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE[ _])?Blade[ _]L(210|130)`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Blade_A5_2019`),
		regexp.MustCompile(`(?i)BLADE V Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V6 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V6 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade (?:V7 Lite|V0720)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0710(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V([67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9050N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE 8050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE 8150N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE 8550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BV0800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE Blade V1000|(?:ZTE_)?V1000`),
		regexp.MustCompile(`(?i)Z6750M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade X([79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T630(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade (?:V8Q|V0840)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V8 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE (?:V0850|V8 Mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0920|ZTE-V9VITA`),
		regexp.MustCompile(`(?i)Blade V(9|10) Vita(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V([89]|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Blade[ _])?(Apex2|G (LTE|Lux)|Vec)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z768G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z717[BV]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z233VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z798BL|Z799VL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z792`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z812`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z719DL`),
		regexp.MustCompile(`(?i)Z851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z836BL|Z837VL|Z836F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z861BL|Z862VL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z958|Z955A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)dandelion(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6250CC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE[-_])?Z992`),
		regexp.MustCompile(`(?i)(?:Z999|Z-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B201[56]|Axon mini`),
		regexp.MustCompile(`(?i)A2017[GU]?`),
		regexp.MustCompile(`(?i)(?:A2020(?:RU|[GU])? Pro|Axon 10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V?975|geek`),
		regexp.MustCompile(`(?i)(?:ZTE-)?G-X991`),
		regexp.MustCompile(`(?i)Z936L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MO-01[JK](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V865M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6621O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P650 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V769M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VERGATARIO 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VERGATARIO5PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE V5 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MEO Smart A([48]0)`),
		regexp.MustCompile(`(?i)Smart ?A(35)`),
		regexp.MustCompile(`(?i)ATLAS[ _]W`),
		regexp.MustCompile(`(?i)A2121[GLE]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B867RE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K83CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K87CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K87CC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE-K88(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE-K92(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AxonPhone ([^;/]+) Build`),
		regexp.MustCompile(`(?i)([a-z0-9]+)_USA_Cricket`),
		regexp.MustCompile(`(?i)ZTE[- ](V98|V96A|V81|V70)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ](A(\d+)C?|L111|V580|E01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE Blade A53\+`),
		regexp.MustCompile(`(?i)Blade[_ ]V0730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V0800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE B(A601|A910|A510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE Blade (A[35]1|A7s|C370)`),
		regexp.MustCompile(`(?i)ZTE BA610T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[- ]([a-z0-9\-_ ]+) Build`),
		regexp.MustCompile(`(?i)ZTE-(?:G |G-)?([a-z0-9 _]+)`),
		regexp.MustCompile(`(?i)U?ZTE[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)ZYQ-Q88|(Q(?:2602|262[436]|638|2688|272[89]|3022|3623|TAB Tab4|328 m9|328|668)|J77|Q[._](?:Up|Boss P99|Dee R09|Good M9|Hi|Hot|Me|Mate R99|Next|TOP-X8|You))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q\.Up C5`),
		regexp.MustCompile(`(?i)Q\.Up`),
		regexp.MustCompile(`(?i)Q\.Boss P99`),
		regexp.MustCompile(`(?i)Q[._]Dee R09`),
		regexp.MustCompile(`(?i)Q\.Good M9`),
		regexp.MustCompile(`(?i)Q[._]Hi S1`),
		regexp.MustCompile(`(?i)Q[._]Hi`),
		regexp.MustCompile(`(?i)Q[._]Hot P7 3G`),
		regexp.MustCompile(`(?i)Q[._]Hot`),
		regexp.MustCompile(`(?i)Q[._]Me Phone7 3G`),
		regexp.MustCompile(`(?i)Q[._]Me Plus7`),
		regexp.MustCompile(`(?i)Q[._]Me`),
		regexp.MustCompile(`(?i)Q[._]Mate R99`),
		regexp.MustCompile(`(?i)Q[._]Next B7`),
		regexp.MustCompile(`(?i)Q[._]Next J2`),
		regexp.MustCompile(`(?i)Q[._]TOP-X8`),
		regexp.MustCompile(`(?i)Q[._]You`),
		regexp.MustCompile(`(?i)(ZB30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z3211G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZXT-10HL323S|ZXT-10FL323G-PRO)`),
		regexp.MustCompile(`(?i)ZATEC[_ ]|(?:[ ]WIND|ZPAD_1|ZPLAY1_2018|Zpower_(?:Plus|2018))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZATEC[_ ]GRAVITY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[ ]WIND(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zealot(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(THOR 4 Plus|THOR S|THOR PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)THOR (S|4 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (MC2[27]00|TC15|TC2[01567]|TC5[12567]|TC7[05]x|TC7[57]|TC700H|ET51|MC33|MC93|EC30|PS20J|VC8300)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TC15|TC2[01567]|TC5[12567]|TC7[05]x|TC7[57]|TC700H|MC33|EC30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ET51)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MC2[27]00|MC93|PS20J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VC8300)`),
		regexp.MustCompile(`(?i)ZEEKER[ _](P10|T100)`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]([^/;)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Admire[_ ][^/;]+|Cinemax[^/;)]+)(?:Build|\))|(?:AdmireGlam|M72 Smart)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SENSE\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SWADESH\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SENSE[_ ]DUO`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]CURVE[_ ]NEO`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]CURVE\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]NEO\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]DUO`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SHINE`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]INFINITY`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]Unity`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]STRONG`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]GLORY\+`),
		regexp.MustCompile(`(?i)(M72 Smart)`),
		regexp.MustCompile(`(?i)(Admire[_ ][^/;]+|Cinemax[^/;)]+)(?:Build|\))`),
		regexp.MustCompile(`(?i)Z5007|Z551[679]|Z6001`),
		regexp.MustCompile(`(?i)(?:C-723ULTRA|C-70[13] ?ULTRA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C-(\d+) ?Ultra`),
		regexp.MustCompile(`(?i)ZFINERY900(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIDOO[ _](H6 Pro|X6 Pro|X9S|Z10|X[1589]|X20 Pro|Z9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Eon45i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KidsLegacyTabPro|Zpad-X8-PRO`),
		regexp.MustCompile(`(?i)ZIOX[_ ]|(?:Astra Viva 4G|Astra (?:(?:NXT|Curve|Young) Pro|(?:Metal|Titan|Young|Curve) 4G|Star|Blaze)|Duo(?:tel|pix)[ _]\w\d{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIOX[_ ]F9[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (Viva|Titan|Young|Metal|Curve) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (Star|Blaze)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (NXT|Curve|Young) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Duo(tel|pix)[ _](\w\d{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZM(?:CK|EM|TFTV|TN)[a-z0-9]+)|ZA409`),
		regexp.MustCompile(`(?i)(ZM(?:CK|EM|TFTV|TN)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:K101_EEA|K118)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K(101|118)`),
		regexp.MustCompile(`(?i)Android 8(?:[\d.]*);(?: [\w-]+;)? (LitePro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LT600T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO|(?:ZOPO[_ ])?(HERO2|Flash X3|F2_Color5_5|F5_Color_M5|C2_Color_M4|ZP[0-9]{2,}[^/;]+)(?:\)| Build)`),
		regexp.MustCompile(`(?i)(?:ZOPO_C2_MOD|ZP998)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO 9xxQuad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?ZP980[+](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?ZP980(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP952(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HERO2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP951(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP955(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP950[+h]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP(?:900H?|910)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP(?:800H|810)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP500[+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP330(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F2_Color5_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F5_Color_M5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C2_Color_M4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP5(63|86)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP567(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP300[S+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP200[+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP1790(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP781(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO[_ ]ONE[_ ]([YXTP])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?(Flash X3|X1i|ZP[0-9]{2,}[^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Zuum[ _-]|Android 6.+ UNIQ(?: Build|[);])|(?:ROCKET III?|Akus (?:PRO|[ZP]1?)|AURA_Z|COVET|MAGNO(?:-S)?|ONIX(?: S)?|STEDI|STELLAR(?:[ _](?:Z|PRO|[MP]1|M2))?|GRAVITY [ZM]|AURA (?:PLUS JLO|PRO JLO|PRO|X)|COVET_PRO_LITE|RONI|Android.*; (?:GRANT|LIMIT)|Gravity Life|ULTRA Z)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AKUS ([ZP]1?)`),
		regexp.MustCompile(`(?i)AURA_Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COVET( [XZ])?`),
		regexp.MustCompile(`(?i)MAGNO( C[12]?)?`),
		regexp.MustCompile(`(?i)STELLAR ([MP]\d|Z)`),
		regexp.MustCompile(`(?i)GRAVITY ([MZ])`),
		regexp.MustCompile(`(?i)ROCKET (III?)`),
		regexp.MustCompile(`(?i)Android 6.+; UNIQ(?: Build|[);])`),
		regexp.MustCompile(`(?i)Android.+; LIMIT(?: Build|[);])`),
		regexp.MustCompile(`(?i)Zuum[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Zuum[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZYNC|(Cloud Z5|Z1000|Z18|Z99|Z99[_ ][23]G|Z99|Z900[_ ]Plus|Z909|Z930[+]|Z930)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z18| DuZ99al Core|Z99[_ ][23]G|Z99 Dual Core|Z99|Z900[_ ]Plus|Z909|Z930[+]|Z930)`),
		regexp.MustCompile(`(?i)(Z1000[^/;]+)Build`),
		regexp.MustCompile(`(?i)Cloud (Z5)`),
		regexp.MustCompile(`(?i)ZYNC Cloud[ _]([^;]+)Build`),
		regexp.MustCompile(`(?i)ZYNC[ _]([^;]+)Build`),
		regexp.MustCompile(`(?i)(Desk21T-03)`),
		regexp.MustCompile(`(?i)(AL-555|GI-626|OB[_-](?:421|588|728|627))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OB[_-](421|588|728|627)`),
		regexp.MustCompile(`(?i)Decade 53(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BO-(FRSP4|LFSPBS5|LFSP4|LFSPSL4|LFSPBS5|LFSPSL6QCI)`),
		regexp.MustCompile(`(?i)BO-(FRSP4)`),
		regexp.MustCompile(`(?i)Aquaris|bq [^/;]+ Build|BQS[-_]([0-9]{4})|(BQ(ru)?[_ -][0-9]{3,4})|BQ5059|BQ1008G|BQru_BQru-|Edison 3|Smart_TV_BQ|Fnac 10 3G`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5209L|5044)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:6035L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5535L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-6353L`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-(?:5070|6040L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-(?:6424L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5730L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5731L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-57[46]5L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5533G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5031G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5732L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-6430L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-6630L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-9011[G]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-8068L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(ru)?-(7082)`),
		regexp.MustCompile(`(?i)BQ-7022(G)?`),
		regexp.MustCompile(`(?i)BQ-6200L|BQ-6000L`),
		regexp.MustCompile(`(?i)BQ(?:ru|s)?-6631G`),
		regexp.MustCompile(`(?i)BQ(ru)?[ -]6015L`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5525|6030G|6010G)`),
		regexp.MustCompile(`(?i)BQ-6001L|BQ-6050`),
		regexp.MustCompile(`(?i)BQ-5707G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5702(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5700L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5591|551[89]G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5520L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5519L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5540L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5517L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5516L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5515|6868L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5515L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5512L|5528L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5511L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS[_ ]5505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5521|5594)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5508L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5507L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5504(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-6045L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4030G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5500L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5302G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5301(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5300G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(ru|S)?-(?:5211|5020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5206L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru|S)?-(?:5204|5050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5203(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5202(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5082(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5045L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5047L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:5065|5340)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5046L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-?(?:5059|5514G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BQru_)?BQ(?:ru)?-5058(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5057(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:5056|5030)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-6042l(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5055(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5054(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5052(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-6051G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-5045(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5037|5514L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5035(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5033(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5541L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5022(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5015L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5016G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5012L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5521L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5010G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5000G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5009L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-500[59](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5008L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5007L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5005L|5530L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5003L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5002G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5001L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru|S)?-5000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4702(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4701(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:4585|5011G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4583(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4560(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4555(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:4526|5004G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4516(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4515(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4501G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4077(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4072(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?[- ]402[68](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4008(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4001G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-3510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-3503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1085L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1084L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1083G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1082G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1077L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1057L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1051G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1050G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[-]?1008G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aquaris (M10 FHD|M10 4G|M8)`),
		regexp.MustCompile(`(?i)Aquaris_([AM])4\.5`),
		regexp.MustCompile(`(?i)BQ(?:ru)?[_ -](?:5590|5740G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:6016L|5520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5701L|5060)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BQ-7850|BQ-700[12]G|BQ-8002G|BQ-905[12]G|BQ-9702G|BQ-7056G)`),
		regexp.MustCompile(`(?i)BQ-8006G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7062G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1081G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7802G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7008G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7064G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7050G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7000G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7040G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7038G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7005G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7098G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1045[G]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:1054L|1020L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7083G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-8077L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7083(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1056L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1022l(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1024L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7055L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1025L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Edison 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:bq )?Aquaris ([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:bq )?Aquaris`),
		regexp.MustCompile(`(?i)bq ([^/;]+) Build`),
		regexp.MustCompile(`(?i)eNOVA|(?:TAE08N10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAE08N10)`),
		regexp.MustCompile(`(?i)eSTAR[_ ](?:Grand|GO\!?|Zoom Quad|Gemini|MINI[_ ]3G|BEAUTY|MOON)|(?:Digni-Smart|MERCURY HD Quad core|MID1020L|takee 1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)eSTAR (Grand|GO\!?) (HD Intel|IPS Intel|IPS|HD|Intel) Quad Core 3G`),
		regexp.MustCompile(`(?i)eSTAR (Zoom Quad|Gemini|GO)`),
		regexp.MustCompile(`(?i)eSTAR GRAND HD quad core( [34]G)?`),
		regexp.MustCompile(`(?i)eSTAR[_ ]MINI[_ ]3G`),
		regexp.MustCompile(`(?i)(MID1020L)`),
		regexp.MustCompile(`(?i)eTouch ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Smart-Ex02|Ex-Handy 10)(?: (?:ROW|RUS))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Freebox Player Mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iCherry_?`),
		regexp.MustCompile(`(?i)iCherry[ _](C(?:25[1258]|21[16]|110|121|22[01379]|23[03])|X1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i-Joy|i-Call|(?:Neon[79]|Sygnus|Deox|Elektra (?:M|L|XL|XXL))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra XL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra XXL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neon([79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sygnus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Deox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i-Call ([^;/]+) Build`),
		regexp.MustCompile(`(?i)i-Joy ([^;/]+) Build`),
		regexp.MustCompile(`(?i)i-mate ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)i-mobile[ _]?[a-z0-9]+|i-Style|IQ ?(9\.1|5\.5|5\.6A?)`),
		regexp.MustCompile(`(?i)i-mobile (i-note[^/;]*) Build`),
		regexp.MustCompile(`(?i)i-Style ?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:i-mobile_)?IQ[ _]XPRO2`),
		regexp.MustCompile(`(?i)(?:i-mobile_)?IQ[ _]BIG2`),
		regexp.MustCompile(`(?i)IQ ?(9\.1|5\.5|5\.6A?|II)`),
		regexp.MustCompile(`(?i)i-mobile (IQ[^/;]*) Build`),
		regexp.MustCompile(`(?i)i-mobile(?: )?([a-z0-9\- ]+) Build`),
		regexp.MustCompile(`(?i)i-mobile(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)iBall[ _]([^;/)]+)[ _]Build|iBall[_ ]Slide|(?:Snap[_ ]4G2|3G 1026-Q18|6351-Q400i|iT-KSA0003|iT-KSA0012|iT-KSA0066|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Brisk 4G2|Slide[_ ](?:Dazzle[_ ]3500|Skye_03)|Blaze_V4|Wondro 10|Q27 4G|Andi (?:Wink|5G Blink) 4G|Co-Mate|Nova_4G|Brace-X1|DD-1GB|Elan 4G2|Spirit_X2|Cuddle A4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Snap[_ ]4G2|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Blaze_V4|Wondro 10|Q27 4G|Brisk 4G2|Co-Mate|Nova_4G|Elan 4G2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6351-Q400i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DD-1GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slide[_ ]Dazzle[_ ]3500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1026-Q18(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Brace-X1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0066(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBall[ _]([^;/)]+)(?:[ _]Build|[;)])`),
		regexp.MustCompile(`(?i)AUXUS ([^/;]+) Build`),
		regexp.MustCompile(`(?i)AUXUS (Core[^/;]+) Build`),
		regexp.MustCompile(`(?i)AUXUS ([^/;]+) Build`),
		regexp.MustCompile(`(?i)IBRIT_|(?:SI5[12]|i5Plus|POWER_X|Z2Lite|Diamond Pro Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IBRIT_I([57])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_POWER6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_Speed Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SI51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SI52(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POWER_X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_AF51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iData[ _](K1|50|i3AL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOTEBOOK6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:APACHE G6|iDroid Royal V5|BALR_?X7(?:_PAK)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BALR_?X7`),
		regexp.MustCompile(`(?i)iGET SMART|(?:SMART[_ ](?:L20X|G10[12]|S7[02]|G71|G81[H]?|L10[234]|L11|L3[12]|W[12]0X|W101|W3[12]|W8X|W20[23]|L206)(?:_eea)?|Android 5(?:[\d.]*);(?: [\w-]+;)? (?:S100))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SMART[_ ])?S100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART[_ ](L20X|G10[12]|S7[02]|G71|G81[H]?|L10[234]|L11|W[12]0X|W101|W8X|W3[12]|W20[23]|L206|L3[12])`),
		regexp.MustCompile(`(?i)iHunt|One_ Love_|TIT?AN[_ ]P\d+|Like_(3|4U|3_Pro)|X300 Elite|S10_Tank_2019|S10 Tank PRO 2020|S60 Discovery Plus|S60_Discovery_2019|AlienXLite2020|Alien X (?:Lite|Pro)|Alien_X|(?:Titan ?P6000|S[23]0 Ultra ApeX 2021|S21 Ultra 4G 2021|P11000 Pro|Strong Tablet P15000 Pro|Like 11 Panda Pro|Like_Hi10_2021|Like Hi5|S21 Plus 2021|Like_[78]|Cyber DOG 4G|S10 Tank 2020|(?:S100|S90_)Apex|Tablet PC 10 PRO)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Strong Tablet (P15000|X) Pro`),
		regexp.MustCompile(`(?i)S10[_ ]Tank[_ ]20(19|20)`),
		regexp.MustCompile(`(?i)Tian[ _]P3000`),
		regexp.MustCompile(`(?i)TITAN_P11000_PRO|P11000 Pro`),
		regexp.MustCompile(`(?i)Titan ?P6000`),
		regexp.MustCompile(`(?i)Like_([378])`),
		regexp.MustCompile(`(?i)S(90|100)_?Apex`),
		regexp.MustCompile(`(?i)S([23]0) Ultra ApeX 2021`),
		regexp.MustCompile(`(?i)S(2[234]) ULTRA`),
		regexp.MustCompile(`(?i)(?:iHunt_)?S(2[234])[ _]PLUS`),
		regexp.MustCompile(`(?i)iHunt ([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)iKoMo ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(IK-102[58]|IK-1106|IK-7108|IK-787)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Jarvis7_85)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:iLA[-_ ](?:Silk|X|R1)|R1 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(R1) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iLA[-_ ](Silk|X|R1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILEPO[ _](MXQ-4K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WTAB[ _]?\d{3}|(ITELL[_ ](?:K3300|K3500N?|K4700)|K3102 WIFI|FIVO (?:PLUS|Lite)|Zed Book G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WTAB[ _]?(\d{3}(?:[^;/)]*))(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(ITELL[_ ](?:K3300|K3500N?|K4700))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIVO PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIVO Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Vin 5|Vin3 S|Vin3(?: Lite)?|Messi No\.1|Messi 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vin ?(3|5)`),
		regexp.MustCompile(`(?i)Messi (No\.1|3)`),
		regexp.MustCompile(`(?i)(i5800C|i6800|Victor(?:_S)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IMARS VEGA X7|VIVI_8|MILKY_WAY_M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Revolution A8|muPAD[_ ][KT]10|muPAD10[24]|muPADT7|muPAD 7S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Revolution A8|muPAD[_ ][KT]10)`),
		regexp.MustCompile(`(?i)muPAD[ _]?(10[24]|T7|7S)`),
		regexp.MustCompile(`(?i)(EX1080)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ITP-XD80L)(?: Build|[);])`),
		regexp.MustCompile(`(?i)iNew|(?:V7A|V3 Plus|V3-?E|V3C|FIRE_Tab_6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3-?E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V7A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIRE_Tab_6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iNew[ -_]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:iNO SCOUT 2|SGINO6|iNO S9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iOCEAN|M6752|W180|X7[ _]?S|X8 mini`),
		regexp.MustCompile(`(?i)X7[ _]?S`),
		regexp.MustCompile(`(?i)(M6752|W180) Build`),
		regexp.MustCompile(`(?i)iOCEAN[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)iOCEAN[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)iOutdoor (X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iPEGTOP[ _](Z26)`),
		regexp.MustCompile(`(?i)(?:IPRO_K2_3G|Kylin[ _]5\.[05]S?|KYLIN(?:40|50i)|Jade[78]s|Amber[678]S?|Amber[58]S[ _]Pro|Benny10|Phonenix50S|Ruby5S|Zafiro|I9355A|Opal 4S|Perla|S[45]01A|S200M|WAVE 4\.0 II|WAVE 5\.0|MEGA7|SAMBA65S|S501APlus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kylin_5\.0S`),
		regexp.MustCompile(`(?i)Kylin (5\.[05])`),
		regexp.MustCompile(`(?i)Jade([78])s`),
		regexp.MustCompile(`(?i)WAVE 4\.0 II`),
		regexp.MustCompile(`(?i)WAVE 5\.0`),
		regexp.MustCompile(`(?i)(I9355A|S[45]01A|S200M|Perla)`),
		regexp.MustCompile(`(?i)(IFoo (?:U200|H55|S50))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Frog ?One(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PALADIN EVO)`),
		regexp.MustCompile(`(?i)iRola ([^/;]+) Build|(DX758|DX752|DX752|DX758[ _]?Pro) Build`),
		regexp.MustCompile(`(?i)DX758[ _]?Pro`),
		regexp.MustCompile(`(?i)(DX758|DX752)`),
		regexp.MustCompile(`(?i)iRola ([^/;]+) Build`),
		regexp.MustCompile(`(?i)iRULU[ _-](X11|V[34]|U2|AL101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iRULU[ _-](X11|V[34]|AL101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iRULU[ _](U2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ISWAG[ _]`),
		regexp.MustCompile(`(?i)iSWAG[_ ]ACTIV`),
		regexp.MustCompile(`(?i)iSWAG[_ ]KRONOS`),
		regexp.MustCompile(`(?i)iSWAG[_ ]Lynx`),
		regexp.MustCompile(`(?i)iSWAG[_ ]MEGA`),
		regexp.MustCompile(`(?i)iSWAG[_ ]MANTRA`),
		regexp.MustCompile(`(?i)iSWAG[_ ]NEMESIS`),
		regexp.MustCompile(`(?i)iSWAG[_ ]NEO`),
		regexp.MustCompile(`(?i)ISWAG[_ ]VIPER`),
		regexp.MustCompile(`(?i)(?:IS655|IS[35]30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(IS[35]30)`),
		regexp.MustCompile(`(?i)(IS655)`),
		regexp.MustCompile(`(?i)(I-T60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel|iNote|GP10X2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S665LN?`),
		regexp.MustCompile(`(?i)W6002E?`),
		regexp.MustCompile(`(?i)S663L[NC]`),
		regexp.MustCompile(`(?i)S662LCN?`),
		regexp.MustCompile(`(?i)W5005P?`),
		regexp.MustCompile(`(?i)A509WM?`),
		regexp.MustCompile(`(?i)[LW]6503`),
		regexp.MustCompile(`(?i)L5006[CS]`),
		regexp.MustCompile(`(?i)[LW]6004`),
		regexp.MustCompile(`(?i)itel[ _]A15R`),
		regexp.MustCompile(`(?i)P662LN?`),
		regexp.MustCompile(`(?i)P682LPN?`),
		regexp.MustCompile(`(?i)iNote ([^/;]*)Build`),
		regexp.MustCompile(`(?i)iNote_([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)itel-it(1410|1512|1520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel-it1553(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S11Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel[- ](A14S?|A16 Plus|A44 Power|A23S|A52 Lite)`),
		regexp.MustCompile(`(?i)itel it170([23])`),
		regexp.MustCompile(`(?i)itel A(\d{1,2}) ?Plus`),
		regexp.MustCompile(`(?i)iTel ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)iTel[_ ]([a-z0-9\-_]*)`),
		regexp.MustCompile(`(?i)iTRUCK 7 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LAMCY (?:L3[05]0|C100|L400)|IVA S6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAMCY (L3[05]0|C100|L400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IVA S6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:733|730|766|930)TPC|769TPC(?:II)?|744TPC plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:733|730|766|930)TPC|769TPC(?:II)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Innelo_1|iV 505|Me 1\+|Me 3S|Me [2345]|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:i2_Lite|i2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Me 1\+`),
		regexp.MustCompile(`(?i)Me ([2345]S?)`),
		regexp.MustCompile(`(?i)(?:MC401_GWL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MC401)_GWL`),
		regexp.MustCompile(`(?i)(IX701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iYOU[_ ](M1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Mi7_HERO_(?:BETA|TAB))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi7[_ ]HERO[_ ]BETA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi7[_ ]HERO[_ ]TAB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M10ES11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(I 618 APP plus\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I 618 APP plus\+`),
		regexp.MustCompile(`(?i)ivvi[ _]`),
		regexp.MustCompile(`(?i)ivvi[ _](P60)[_ ](\w\d+)`),
		regexp.MustCompile(`(?i)ivvi[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)mPhone ?([68]|7 Plus|7s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:meanIT[ _](?:C[12]|X10|X[126]|MG430|Q[145]|C[18]0C[18]1)|Smartphone_X5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _]Q1 plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _](C[12]|X[126]|MG430|Q[145])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _](X10|C[18]0C[18]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mipo[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:myPhone|myTab)_?[^;/)]+( Build|[);])|(?:FUN|Pocket|Prime)_18x9|Prime3Lite|Prime_4_Lite|Q-Smart_Plus|Q-Smart_III_Plus|Q_Smart_BE|(?:HAMMER_)?AXE[_ ]M[_ ]LTE|Hammer[_ ](?:Axe)|Cube_LTE|C-Smart_pix|SmartView_9\.6_3G|SmartView_(?:[78]|9_6)_(?:LTE|[34]G)|Android 6(?:[\d.]*);(?: [\w-]+;)? Pocket|Pocket_2|LUNA_II`),
		regexp.MustCompile(`(?i)Cube_LTE|Cube 16GB`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun[_ ]?(\d)[_ ]?Lite`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun[_ ]?(\d)[_ ]?LTE`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun_?([48]|18x9)`),
		regexp.MustCompile(`(?i)(?:HAMMER_)?AXE[_ ]M[_ ]LTE`),
		regexp.MustCompile(`(?i)INFINITY (LTE|3G)`),
		regexp.MustCompile(`(?i)Pocket_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pocket(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myPhone[_ ]Pocket[_ ]Pro`),
		regexp.MustCompile(`(?i)Prime3Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime_18x9(_LTE)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q_Smart_BE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Smart_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartView_9[_.]6_3G`),
		regexp.MustCompile(`(?i)myPhone[ _]([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)myTab[ _]?([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:nJoy[_ ])?(Deimos 7|Kali_8|Turnus_8|Tityos_10|Arcas_7|Theia_10|Chronos_10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)neocore_?`),
		regexp.MustCompile(`(?i)neocore_N1G1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)neocore E1-2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEOCORE_E2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NODROPOUT[_ ]`),
		regexp.MustCompile(`(?i)NODROPOUT[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)phoneOne[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:2000_000170_00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Texet|(NaviPad [^/;]*) Build|TM-(?:1046|1058|1057|1067|3000|3200R|3500|400[34]|4071|450[34]|451[30]|4377|4082R|508[34]|550[358]|5010|5017|507[4-7]|5[23]77|6003|6906|702[13]|7055HD|709[69]|9747BT|9758|9751HD|9767|5513|520[410]|507[13]|558[134]|570[23]|7859|8044|9748[ _]3G|9720|7047HD[ _]3G|9757|9740|4982|4515|4083|500[3567]|5571|3204R|5016|8043|7047HD[ _]3G|8041HD|8066|705[23]|7041|8041HD|8051|8048|974[96]|973[78]W|974[170]|9743W|9750HD|7043XD|7049|7887|7037W|702[46])|TB-(771A|711A)|X Point|X-Force[\(-]?TM-5009\)?|X-Plus[\(-]?TM-5577\)?|TM_5011|X-pad (?:AIR 8|iX 7|NAVI 7\.[35]|NAVI 10|SKY 8\.1|STYLE 8|STYLE 10\.1|HIT|LITE 7\.[12]|QUAD (?:7\.2|10|7)|SHINE 8\.1)(?: 3G)?`),
		regexp.MustCompile(`(?i)(NaviPad [^/;]*) Build`),
		regexp.MustCompile(`(?i)X-pad SHINE 8\.1 3G`),
		regexp.MustCompile(`(?i)X-pad QUAD 7\.2 3G`),
		regexp.MustCompile(`(?i)X-pad LITE (7\.[12])`),
		regexp.MustCompile(`(?i)X-pad STYLE 10\.1 3G`),
		regexp.MustCompile(`(?i)(X-pad (?:AIR 8|iX 7) 3G)`),
		regexp.MustCompile(`(?i)TM-7096|X-pad NAVI 7\.3 3G`),
		regexp.MustCompile(`(?i)X-pad NAVI 7\.5 3G`),
		regexp.MustCompile(`(?i)X-pad SKY 8\.1 3G`),
		regexp.MustCompile(`(?i)TM-1046|X-pad NAVI 10 3G`),
		regexp.MustCompile(`(?i)(TM-(?:1057|1067|6906|8043|9748[_ ]3G|9740|9757(?:[_ ]3G)?|7047HD[ _]3G|9747BT|9751HD|702[13]|705[23]|7041|9720|7047HD[_ ]3G|8044|8041HD|973[78]W|9743W|974[710]|9750HD|7043XD|7037W|702[46])|TB-(?:771A|711A|8041HD))`),
		regexp.MustCompile(`(?i)(TM-(?:3000|3200R|400[34]|4083|4377|4504|451[30]|500[35]|5[23]77|5571|3204R|520[04]|5581|5505|5017|507[13-7]|5081|6003|5513))`),
		regexp.MustCompile(`(?i)TM-508(3|4)`),
		regexp.MustCompile(`(?i)TM-558(3|4)`),
		regexp.MustCompile(`(?i)TM-(5016|3500)`),
		regexp.MustCompile(`(?i)TEXET[_ ]IX-MINI`),
		regexp.MustCompile(`(?i)X-Force[\(-]?TM-5009\)?`),
		regexp.MustCompile(`(?i)X-Plus[\(-]?TM-5577\)?`),
		regexp.MustCompile(`(?i)teXet[_ ]X-medium[_ ]plus`),
		regexp.MustCompile(`(?i)Vmobile[ _]`),
		regexp.MustCompile(`(?i)Vmobile[ _](J7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vmobile XS Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OWN[ _]|(?:S4035[ _][34]G|Smart8|SMART PLUS LTE|FUN VALUE (?:4G|Lite)|FUN_VALUE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUN ([67])`),
		regexp.MustCompile(`(?i)FUN 5\(4G\)`),
		regexp.MustCompile(`(?i)(?:OWN[ _])?(S3000D|S3010|S3020D|S4010|S4025|S4035[ _][34]G)`),
		regexp.MustCompile(`(?i)FUN[_ ]VALUE(?: 4G)?`),
		regexp.MustCompile(`(?i)Smart ?(8|9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART PLUS LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FBMD/(?:Aspire E5-421G|Z5WAL|One S1003);`),
		regexp.MustCompile(`(?i)FBMD/Aspire E5-421G;`),
		regexp.MustCompile(`(?i)FBMD/Z5WAL;`),
		regexp.MustCompile(`(?i)FBMD/One S1003;`),
		regexp.MustCompile(`(?i)FBMD/(?:Alienware [0-9]{2,3}R[0-9]{1,2}|Area-51m|R3|R4|Alienware Aurora R[0-9]+(:? [0-9]+)?);`),
		regexp.MustCompile(`(?i)Alienware 15R3;`),
		regexp.MustCompile(`(?i)Alienware 17R4;`),
		regexp.MustCompile(`(?i)Area-51m;`),
		regexp.MustCompile(`(?i)Aurora (R[0-9]+)`),
		regexp.MustCompile(`(?i)FBMD/(?:K50IN|K54L|T100HAN|T103HAF|UX360CAK|X550LB|X553MA|X555LN|X556UQK);`),
		regexp.MustCompile(`(?i)FBMD/K50IN;`),
		regexp.MustCompile(`(?i)FBMD/K54L;`),
		regexp.MustCompile(`(?i)FBMD/T100HAN;`),
		regexp.MustCompile(`(?i)FBMD/T103HAF;`),
		regexp.MustCompile(`(?i)FBMD/UX360CAK;`),
		regexp.MustCompile(`(?i)FBMD/X550LB;`),
		regexp.MustCompile(`(?i)FBMD/X553MA;`),
		regexp.MustCompile(`(?i)FBMD/X555LN;`),
		regexp.MustCompile(`(?i)FBMD/X556UQK;`),
		regexp.MustCompile(`(?i)FBMD/(?:Latitude E4300|Inspiron 3541|XPS 15 95[35]0);`),
		regexp.MustCompile(`(?i)FBMD/((?:Compaq|HP) |23-f364)`),
		regexp.MustCompile(`(?i)HP EliteBook (25[67]0p)`),
		regexp.MustCompile(`(?i)HP ProBook (440 G5|6[35]60b)`),
		regexp.MustCompile(`(?i)FBMD/(?:37021C5|80E5|80SM|80VR);`),
		regexp.MustCompile(`(?i)FBMD/37021C5;`),
		regexp.MustCompile(`(?i)FBMD/80E5;`),
		regexp.MustCompile(`(?i)FBMD/80SM;`),
		regexp.MustCompile(`(?i)FBMD/80VR;`),
		regexp.MustCompile(`(?i)FBMD/SCL141CTP;`),
		regexp.MustCompile(`(?i)FBMD/TH360R12\.32CTW;`),
		regexp.MustCompile(`(?i)Satellite (A[25]00|C650|C855|L650|S855)`),
		regexp.MustCompile(`(?i)Satellite ([^;\)]+);`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod1[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod2[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod3[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod4[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod5[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod7[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod9[C,_]?1|iPodTouch7`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod`),
		regexp.MustCompile(`(?i)COWON ([^;/]+) Build`),
		regexp.MustCompile(`(?i)FiiO M(1[157]|6)`),
		regexp.MustCompile(`(?i)KuGou[_ -](P5)`),
		regexp.MustCompile(`(?i)Oilsky (M501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SV-MV100)`),
		regexp.MustCompile(`(?i)(?:Sonos/.+\((?:ZP.+)\)|Sonos;)`),
		regexp.MustCompile(`(?i)\((ZPS(?:[13569]|1[1-578]|2[03])|ZP90)\)`),
		regexp.MustCompile(`(?i)Sonos;Beam;`),
		regexp.MustCompile(`(?i)Sonos;Roam;`),
		regexp.MustCompile(`(?i)Sonos;Bookshelf;`),
		regexp.MustCompile(`(?i)Sonos;Move;`),
		regexp.MustCompile(`(?i)Sonos;Play(\d);`),
		regexp.MustCompile(`(?i)Sonos;One;`),
		regexp.MustCompile(`(?i)Sonos;OneSL`),
		regexp.MustCompile(`(?i)YP-(G[SIPB]?1|G[57]0|GB70D)`),
		regexp.MustCompile(`(?i)YP-G[B]?1`),
		regexp.MustCompile(`(?i)Shanling (M6\(21\))`),
		regexp.MustCompile(`(?i)(Y57A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SLTDVD102[34])`),
		regexp.MustCompile(`(?i)(DV-PTB1080)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Erisson[_ ]Shell`),
		regexp.MustCompile(`(?i)ALDINORD[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)ALDISUED[;,]`),
		regexp.MustCompile(`(?i)ALDISUED, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(LE43S5970-20|S50856)`),
		regexp.MustCompile(`(?i)ARRIS[;,]`),
		regexp.MustCompile(`(?i)LGE/XianYou/AWOX; ([a-z0-9]+);`),
		regexp.MustCompile(`(?i)LGE/ATMACA/AXEN; ([a-z0-9]+)-`),
		regexp.MustCompile(`(?i)AYA[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Airties; ?([^);/]+)`),
		regexp.MustCompile(`(?i)LGE/SQY/RCA; ([a-z0-9]+);`),
		regexp.MustCompile(`(?i)Altech UEC; ?([^);/]+)`),
		regexp.MustCompile(`(?i)Altus[;,]`),
		regexp.MustCompile(`(?i)Amazon.+AMZ`),
		regexp.MustCompile(`(?i)Amazon.+AMZ-([a-z0-9_ \-]+)_Build_`),
		regexp.MustCompile(`(?i)ATLANTIC[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Beko[;,]`),
		regexp.MustCompile(`(?i)Blaupunkt_UMC[;,]`),
		regexp.MustCompile(`(?i)Botech[;,]`),
		regexp.MustCompile(`(?i)(ATV R[12])`),
		regexp.MustCompile(`(?i)BUSH[;,]`),
		regexp.MustCompile(`(?i)CLAYTON[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)CECOTEC[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)CELCUS[;,]`),
		regexp.MustCompile(`(?i)Changhong; ?([^);/]+)`),
		regexp.MustCompile(`(?i)CONTINENTAL_EDI[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)CROWN[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)LGE/SILICONPLAYER/DIJITSU; ([a-z0-9]+);`),
		regexp.MustCompile(`(?i)DIKOM[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)DIORA[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Daewoo[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)DIGIHOME[;,]`),
		regexp.MustCompile(`(?i)EAS_ELECTRIC[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)ELECTRONIA[;,]`),
		regexp.MustCompile(`(?i)EDENWOOD[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)ELEKTROLAND[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)ESSENTIELB[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Expressluck[;,]`),
		regexp.MustCompile(`(?i)([24]K)TV`),
		regexp.MustCompile(`(?i)FU[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)FINLUX[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)FUEGO[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)GOGEN[;,]`),
		regexp.MustCompile(`(?i)(OWB|(?:Amazon.+)?Grundig)`),
		regexp.MustCompile(`(?i)Amazon.+Grundig-([a-z0-9_ \-]+)_Build_`),
		regexp.MustCompile(`(?i)HOFER[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)(?:HHW_)?HAIER`),
		regexp.MustCompile(`(?i)HANSEATIC[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)HI-LEVEL[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Hisense|Eurofins_Digital_Testing`),
		regexp.MustCompile(`(?i)(L[A-Z]{2,3}[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,6}[0-9]?[A-Z]?)`),
		regexp.MustCompile(`(?i)(H[A-Z]?[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,4})`),
		regexp.MustCompile(`(?i)Hitachi[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)HORIZON[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)HOTEL[;,]`),
		regexp.MustCompile(`(?i)Humax|hdr1000s`),
		regexp.MustCompile(`(?i)(HD-FOX C|HD (FOX\+|NANO)|iCord (HD\+|MINI|Cable)|(CX|IR)HD-5100(C|S)|HM9503HD)`),
		regexp.MustCompile(`(?i)Humax; ([^);/]+)`),
		regexp.MustCompile(`(?i)HYUNDAI[;,]`),
		regexp.MustCompile(`(?i)(Vantage|VT-100|VT-1)`),
		regexp.MustCompile(`(?i)inverto; ([^);/]+)`),
		regexp.MustCompile(`(?i)(Volksbox Web Edition|Volksbox Essential|Volksbox II|Volksbox)`),
		regexp.MustCompile(`(?i)AFTSO001|JVC[;,]`),
		regexp.MustCompile(`(?i)KUBO[;,]`),
		regexp.MustCompile(`(?i)KALLEY[;,]`),
		regexp.MustCompile(`(?i)KENDO[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)KYDOS[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)LGE ?;`),
		regexp.MustCompile(`(?i)KEY000000(2E|2F|3B|3F)`),
		regexp.MustCompile(`(?i)(NetCast [0-9]{1}\.[0-9]{1}|GLOBAL_PLAT3)`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z0-9]{3}[A-Z]{2})`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z][0-9][A-Z])`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z0-9]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}[A-Z]{2}[0-9]{4}[A-Z0-9]{1}[A-Z]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}NANO[0-9]{3}[A-Z]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}NANO[0-9]{2})`),
		regexp.MustCompile(`(?i)LGE;? (?:HOTEL\-TV; )?([0-9]{2}[a-z0-9]{4,9}(?:\-[a-z]{2,3})?)`),
		regexp.MustCompile(`(?i)LGE;? ?([0-9]{2}[A-Z]{2}[0-9]{2,4}[A-Z]?)`),
		regexp.MustCompile(`(?i)LGE;? ?([0-9]{2}QNED[0-9]{3}[A-Z]{2})`),
		regexp.MustCompile(`(?i)LAURUS[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Lifemaxx[;,]`),
		regexp.MustCompile(`(?i)LINSAR[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Loewe[^$]`),
		regexp.MustCompile(`(?i)([A-Z]{2}[0-9]{3})`),
		regexp.MustCompile(`(?i)DIXONS-LOGIK[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)LUXOR[;,]`),
		regexp.MustCompile(`(?i)MEGA_VISION[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)MStar[;,]`),
		regexp.MustCompile(`(?i)([24])KTV18`),
		regexp.MustCompile(`(?i)MTC[;,]`),
		regexp.MustCompile(`(?i)([24])K_Android_TV_V01`),
		regexp.MustCompile(`(?i)MTK|MediaTek;`),
		regexp.MustCompile(`(?i)(MT[0-9]{4})`),
		regexp.MustCompile(`(?i)MEDION, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)MITCHELL_BROWN[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)NABO[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)NEXON[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)NEXT[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)NORMANDE[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)NOKIA[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)NORDMENDE[;,]`),
		regexp.MustCompile(`(?i)OCEANIC[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)(?:SILICONPLAYER|XianYou)/ONVO`),
		regexp.MustCompile(`(?i)(?:SILICONPLAYER|XianYou)/ONVO; ([a-z0-9]+);`),
		regexp.MustCompile(`(?i)OK[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)ORAVA[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)PROFILO[;,]`),
		regexp.MustCompile(`(?i)Profilo[,;] ?([^),;/]+)`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)PROSONIC[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)VIERA (201[1-9])`),
		regexp.MustCompile(`(?i)(DIGA [A-Z]{1}[0-9]{4})`),
		regexp.MustCompile(`(?i)DIGA Webkit ([A-Z]{1}[0-9]{4})`),
		regexp.MustCompile(`(?i)SmartTV(201[89]|202[0-2])`),
		regexp.MustCompile(`(?i)Panasonic\..+\.([0-9]{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Panasonic;Viera([0-9]{4});`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9_]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Philips|NETTV/`),
		regexp.MustCompile(`(?i)(?:Philips|TPVision)[,;](?: |Philips;)?([^),;/]+)`),
		regexp.MustCompile(`(?i)NETTV/[0-9\.]{5}`),
		regexp.MustCompile(`(?i)POLAROID[;,]`),
		regexp.MustCompile(`(?i)QILIVE[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)REGAL[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)SCBC[;,]`),
		regexp.MustCompile(`(?i)SEG[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)SEHMAX[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Saba[;,]`),
		regexp.MustCompile(`(?i)Salora[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Samsung.*Smart\s*TV|Tizen.*TV|Maple_2011`),
		regexp.MustCompile(`(?i)SmartTV(201[2-9]|202[0-4]):([^);/]+)`),
		regexp.MustCompile(`(?i)SmartTV(201[2-9]|202[0-4])`),
		regexp.MustCompile(`(?i)Selevision; (?:Selevision )?([^);/]+)`),
		regexp.MustCompile(`(?i)(EMC1000i)`),
		regexp.MustCompile(`(?i)(?:UMC-)?Sharp`),
		regexp.MustCompile(`(?i)SHARP, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Sharp[,;] ?([^),;/]+)`),
		regexp.MustCompile(`(?i)(LE[0-9]{3}[A-Z]{0,3})`),
		regexp.MustCompile(`(?i)LC-([^);/,]+)`),
		regexp.MustCompile(`(?i)SILVA_SCHNEIDER[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)LGE/WALTON/SKYTECH; ([a-z0-9-]+);`),
		regexp.MustCompile(`(?i)Sky_worth|SWTV[;,]`),
		regexp.MustCompile(`(?i)Sky_worth;([^);/]+)`),
		regexp.MustCompile(`(?i)Smart[;,]`),
		regexp.MustCompile(`(?i)Smart; ([^);/]+)`),
		regexp.MustCompile(`(?i)([A-Z]{2}[0-9]{2}|ZAPPIX)`),
		regexp.MustCompile(`(?i)(KDL-GR[12])`),
		regexp.MustCompile(`(?i)KDL-GN([56])`),
		regexp.MustCompile(`(?i)(?:BRAVIA )(2K GB ATV3|[48]K UR[123]|4K GB ATV3|4K GB|4K VH2|4K 2015|2015|VH1|VU1)(?:[);/ ]|VH1|4K VH2|$)`),
		regexp.MustCompile(`(?i)(K[DM]L?-?[0-9]{2}[A-Z]{1}[0-9]{4}[A-Z]{1})`),
		regexp.MustCompile(`(?i)(K[DM]L?-?[0-9]{2}[A-Z]{1}[0-9]{3}[A-Z]{1})`),
		regexp.MustCompile(`(?i)(K[DM]L?-?[0-9]{2}[A-Z]{1,2}[0-9]{1,5})`),
		regexp.MustCompile(`(?i)(?:ATMACA|XianYou)/SUNNY`),
		regexp.MustCompile(`(?i)(?:ATMACA|XianYou)/SUNNY; ([a-z0-9]+)-`),
		regexp.MustCompile(`(?i)(?:ATMACA|XianYou)/SUNNY.+(2018)\)`),
		regexp.MustCompile(`(?i)(?:ATMACA|XianYou)/SUNNY;`),
		regexp.MustCompile(`(?i)(?:Amazon.+)?TCL`),
		regexp.MustCompile(`(?i)(32D1820|(?:39|55)D2900|32D2930|(?:32|43)S4900)`),
		regexp.MustCompile(`(?i)TCL[,;] ?([^),;/]+)`),
		regexp.MustCompile(`(?i)Amazon.+TCL-([a-z0-9_ \-]+)_Build_`),
		regexp.MustCompile(`(?i)TDSystems[;,]`),
		regexp.MustCompile(`(?i)SmartTV(2019|2020)`),
		regexp.MustCompile(`(?i)TOKYO[;,]`),
		regexp.MustCompile(`(?i)((DigiCorder|MultyVision|Digit) (ISIO S|ISIO C|ISIO))`),
		regexp.MustCompile(`(?i)TECHNIKA[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)([A-Z]{1}-[0-9]{3})`),
		regexp.MustCompile(`(?i)Techwood[;,]`),
		regexp.MustCompile(`(?i)THOMSON[,]?|THOM`),
		regexp.MustCompile(`(?i)(TB28D19DHS-01|T28D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T32RTM5040|T32D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T43FSL5031|T43D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T40D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T49D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T55D18[SD]FS-01B)`),
		regexp.MustCompile(`(?i)(?:Amazon.+)?Toshiba`),
		regexp.MustCompile(`(?i)(([0-9]{2}|DTV_)[A-Z]{2}[0-9]{1,3})`),
		regexp.MustCompile(`(?i)Amazon.+Toshiba-([a-z0-9_ \-]+)_Build_`),
		regexp.MustCompile(`(?i)THTF_CVTE[;,]`),
		regexp.MustCompile(`(?i)TURBO-X[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)OEM, ([a-z0-9_ \-]+), (?:wired|wireless)|_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)VANGUARD[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)VOX[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)(?:Vestel.+VESTEL|(?:BBC_CUSTOMERS|VESTEL)[;,])`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)videoweb|tv2n`),
		regexp.MustCompile(`(?i)(tv2n)`),
		regexp.MustCompile(`(?i)(videowebtv)`),
		regexp.MustCompile(`(?i)WELLINGTON[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)WONDER[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)WALKER[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)WeByLoewe[;,]`),
		regexp.MustCompile(`(?i)X-VISION[;,]`),
		regexp.MustCompile(`(?i)XGEM[;,]`),
		regexp.MustCompile(`(?i)XGEM[;,] ?([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazon.+Xiaomi`),
		regexp.MustCompile(`(?i)Amazon.+Xiaomi-([a-z0-9_ \-]+)_Build_`),
		regexp.MustCompile(`(?i)LGE/WALTON/SIMFER; ([a-z0-9]+);`),
	}
	__dr_buf = []byte{
		0x4e, 0x69, 0x6b, 0x6f, 0x6e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6f, 0x6c, 0x70,
		0x69, 0x78, 0x20, 0x53, 0x38, 0x30, 0x30, 0x63, 0x53, 0x61, 0x6d, 0x73, 0x75, 0x6e, 0x67, 0x45,
		0x4b, 0x2d, 0x47, 0x4e, 0x31, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x58,
		0x45, 0x4b, 0x2d, 0x47, 0x43, 0x31, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43,
		0x61, 0x6d, 0x65, 0x72, 0x61, 0x45, 0x4b, 0x2d, 0x47, 0x43, 0x31, 0x31, 0x30, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20,
		0x6f, 0x6e, 0x6c, 0x79, 0x45, 0x4b, 0x2d, 0x47, 0x43, 0x32, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x24, 0x31, 0x42, 0x4d, 0x57, 0x63, 0x61,
		0x72, 0x20, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x32, 0x29, 0x4a, 0x65, 0x65, 0x70, 0x57, 0x61, 0x67, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x4d,
		0x41, 0x43, 0x20, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x4d, 0x61, 0x63, 0x20, 0x41, 0x75, 0x64, 0x69,
		0x6f, 0x20, 0x53, 0x70, 0x72, 0x6f, 0x53, 0x70, 0x72, 0x6f, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x54,
		0x65, 0x73, 0x6c, 0x61, 0x51, 0x74, 0x43, 0x61, 0x72, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
		0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x20, 0x53, 0x54, 0x6f, 0x70, 0x77, 0x61, 0x79, 0x73, 0x70, 0x39,
		0x38, 0x35, 0x33, 0x69, 0x5f, 0x31, 0x68, 0x31, 0x30, 0x5f, 0x76, 0x6d, 0x6d, 0x54, 0x53, 0x39,
		0x41, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x47, 0x61, 0x6d,
		0x65, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4a, 0x58, 0x44, 0x4a, 0x58, 0x44, 0x5f, 0x53, 0x36,
		0x30, 0x31, 0x57, 0x49, 0x46, 0x49, 0x53, 0x36, 0x30, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d,
		0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x58, 0x62, 0x6f, 0x78, 0x58, 0x62, 0x6f, 0x78,
		0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x58, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x4f, 0x6e,
		0x65, 0x20, 0x58, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x58, 0x42, 0x4f, 0x58, 0x5f,
		0x4f, 0x4e, 0x45, 0x5f, 0x45, 0x44, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53,
		0x58, 0x62, 0x6f, 0x78, 0x20, 0x33, 0x36, 0x30, 0x4e, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x6f,
		0x24, 0x31, 0x4f, 0x55, 0x59, 0x41, 0x52, 0x65, 0x74, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x50, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x74, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x34,
		0x20, 0x50, 0x72, 0x6f, 0x53, 0x61, 0x6e, 0x79, 0x6f, 0x41, 0x70, 0x6c, 0x69, 0x78, 0x5f, 0x53,
		0x41, 0x4e, 0x59, 0x4f, 0x33, 0x44, 0x4f, 0x20, 0x54, 0x52, 0x59, 0x53, 0x65, 0x67, 0x61, 0x44,
		0x72, 0x65, 0x61, 0x6d, 0x63, 0x61, 0x73, 0x74, 0x41, 0x70, 0x6c, 0x69, 0x78, 0x5f, 0x53, 0x45,
		0x47, 0x41, 0x53, 0x41, 0x54, 0x55, 0x52, 0x4e, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x6f,
		0x6e, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x35, 0x50,
		0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x20, 0x50, 0x52, 0x4f,
		0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x50, 0x6c,
		0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x31, 0x30, 0x6d, 0x6f,
		0x6f, 0x6e, 0x73, 0x74, 0x76, 0x32, 0x45, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e,
		0x65, 0x45, 0x35, 0x30, 0x30, 0x41, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x45, 0x34, 0x35,
		0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x33, 0x36, 0x30, 0x4e, 0x37, 0x4e, 0x37, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4e, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x36, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x4e, 0x36, 0x4e, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4e, 0x34, 0x4e, 0x35, 0x4e, 0x34, 0x41, 0x4e, 0x35, 0x53, 0x4e, 0x34, 0x53, 0x33, 0x47, 0x4e,
		0x45, 0x54, 0x54, 0x39, 0x30, 0x30, 0x33, 0x47, 0x4f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x41,
		0x70, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x33, 0x51, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x50, 0x2d,
		0x50, 0x61, 0x64, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x51, 0x2d, 0x50, 0x61, 0x64, 0x51, 0x6f, 0x6f,
		0x21, 0x20, 0x53, 0x75, 0x72, 0x66, 0x54, 0x53, 0x39, 0x37, 0x30, 0x38, 0x42, 0x53, 0x75, 0x72,
		0x66, 0x20, 0x54, 0x53, 0x31, 0x30, 0x30, 0x39, 0x42, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x51, 0x6f, 0x6f, 0x21, 0x20,
		0x51, 0x2d, 0x42, 0x6f, 0x6f, 0x6b, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x47, 0x6c, 0x61, 0x7a, 0x65,
		0x34, 0x47, 0x6f, 0x6f, 0x64, 0x24, 0x31, 0x20, 0x33, 0x47, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20,
		0x24, 0x31, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x50, 0x65, 0x6f, 0x70, 0x6c,
		0x65, 0x4b, 0x49, 0x44, 0x53, 0x20, 0x53, 0x34, 0x35, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x53, 0x34,
		0x35, 0x34, 0x69, 0x66, 0x65, 0x35, 0x49, 0x56, 0x45, 0x54, 0x61, 0x72, 0x7a, 0x61, 0x6e, 0x20,
		0x46, 0x31, 0x37, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x77, 0x65, 0x67, 0x75, 0x65,
		0x44, 0x52, 0x45, 0x4e, 0x41, 0x44, 0x72, 0x65, 0x6e, 0x61, 0x4b, 0x61, 0x6d, 0x62, 0x61, 0x5f,
		0x32, 0x4b, 0x61, 0x6d, 0x62, 0x61, 0x20, 0x32, 0x4b, 0x61, 0x6d, 0x62, 0x61, 0x38, 0x38, 0x34,
		0x38, 0x41, 0x26, 0x4b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x70, 0x68, 0x6f, 0x6e,
		0x65, 0x41, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x32, 0x30, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x32, 0x31,
		0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x45, 0x63, 0x6f, 0x41, 0x31, 0x20, 0x41, 0x6c, 0x70, 0x68,
		0x61, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x41, 0x39, 0x35, 0x58, 0x41, 0x39, 0x35, 0x58, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x39, 0x35, 0x58, 0x20, 0x46, 0x33, 0x20, 0x53,
		0x6c, 0x69, 0x6d, 0x46, 0x33, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x4d, 0x61, 0x78, 0x2b, 0x41, 0x39,
		0x35, 0x58, 0x5f, 0x46, 0x33, 0x41, 0x69, 0x72, 0x5f, 0x49, 0x49, 0x46, 0x33, 0x20, 0x41, 0x69,
		0x72, 0x20, 0x49, 0x49, 0x41, 0x39, 0x35, 0x58, 0x20, 0x4d, 0x41, 0x58, 0x4d, 0x61, 0x78, 0x41,
		0x39, 0x35, 0x58, 0x20, 0x50, 0x52, 0x4f, 0x50, 0x72, 0x6f, 0x41, 0x39, 0x35, 0x58, 0x20, 0x46,
		0x33, 0x20, 0x41, 0x69, 0x72, 0x46, 0x33, 0x20, 0x41, 0x69, 0x72, 0x5a, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x41, 0x55, 0x57, 0x4d, 0x35, 0x30, 0x41, 0x45, 0x45, 0x5a, 0x4f, 0x41, 0x46,
		0x46, 0x49, 0x58, 0x65, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x75,
		0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x75, 0x73, 0x41,
		0x47, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x47, 0x4d, 0x47, 0x6f, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x24, 0x31, 0x41, 0x39, 0x48, 0x33, 0x48, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x50, 0x24, 0x31, 0x41, 0x49, 0x44, 0x41, 0x54,
		0x41, 0x41, 0x44, 0x54, 0x20, 0x31, 0x30, 0x36, 0x31, 0x41, 0x44, 0x54, 0x31, 0x30, 0x31, 0x32,
		0x4c, 0x41, 0x44, 0x54, 0x20, 0x31, 0x30, 0x31, 0x32, 0x4c, 0x45, 0x4c, 0x44, 0x45, 0x20, 0x31,
		0x30, 0x41, 0x49, 0x52, 0x4f, 0x4e, 0x41, 0x69, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x38, 0x53, 0x41, 0x49, 0x53, 0x69, 0x72, 0x69, 0x73, 0x37, 0x30, 0x38, 0x4c, 0x41,
		0x56, 0x41, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x34, 0x2e, 0x35, 0x4b, 0x69, 0x6e, 0x67, 0x63, 0x6f,
		0x6d, 0x6d, 0x20, 0x43, 0x35, 0x30, 0x30, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x58, 0x33, 0x41, 0x4c, 0x44, 0x49, 0x20, 0x4e,
		0x4f, 0x52, 0x44, 0x41, 0x4c, 0x44, 0x49, 0x20, 0x53, 0xc3, 0x9c, 0x44, 0x41, 0x4c, 0x4c, 0x49,
		0x4e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x41, 0x4d, 0x41, 0x41,
		0x4d, 0x43, 0x56, 0x41, 0x4d, 0x47, 0x4f, 0x4f, 0x41, 0x4d, 0x33, 0x35, 0x30, 0x4a, 0x61, 0x63,
		0x6b, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x69, 0x67, 0x6f, 0x41, 0x4d, 0x34, 0x30, 0x32, 0x50, 0x72,
		0x6f, 0x6e, 0x74, 0x6f, 0x41, 0x4d, 0x34, 0x31, 0x30, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x41, 0x4d,
		0x34, 0x35, 0x30, 0x53, 0x77, 0x69, 0x66, 0x74, 0x41, 0x4d, 0x35, 0x30, 0x38, 0x46, 0x75, 0x65,
		0x67, 0x6f, 0x41, 0x4d, 0x35, 0x30, 0x39, 0x55, 0x6e, 0x6f, 0x41, 0x4d, 0x35, 0x31, 0x35, 0x44,
		0x31, 0x41, 0x4d, 0x35, 0x31, 0x38, 0x43, 0x31, 0x41, 0x4d, 0x35, 0x32, 0x30, 0x41, 0x4d, 0x35,
		0x32, 0x33, 0x41, 0x4d, 0x35, 0x32, 0x37, 0x47, 0x65, 0x6f, 0x41, 0x4d, 0x35, 0x33, 0x30, 0x41,
		0x4d, 0x35, 0x33, 0x35, 0x50, 0x31, 0x41, 0x4d, 0x24, 0x31, 0x41, 0x4e, 0x42, 0x45, 0x52, 0x4e,
		0x49, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x41, 0x4e, 0x53, 0x55, 0x4c, 0x34, 0x30, 0x41, 0x4e,
		0x53, 0x2f, 0x4c, 0x35, 0x31, 0x4c, 0x35, 0x31, 0x41, 0x43, 0x4b, 0x32, 0x33, 0x32, 0x36, 0x41,
		0x72, 0x74, 0x69, 0x61, 0x41, 0x4e, 0x58, 0x4f, 0x4e, 0x49, 0x54, 0x41, 0x4f, 0x43, 0x41, 0x4f,
		0x59, 0x4f, 0x44, 0x4b, 0x47, 0x41, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x54, 0x49, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x41,
		0x52, 0x52, 0x49, 0x53, 0x41, 0x53, 0x53, 0x45, 0x41, 0x54, 0x26, 0x54, 0x45, 0x41, 0x32, 0x31,
		0x31, 0x30, 0x30, 0x35, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x35, 0x47, 0x52, 0x61, 0x64,
		0x69, 0x61, 0x6e, 0x74, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74,
		0x20, 0x4d, 0x61, 0x78, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x35, 0x47, 0x41, 0x78, 0x69, 0x61, 0x43, 0x61, 0x6c, 0x79, 0x70, 0x73, 0x6f, 0x43, 0x61, 0x6c,
		0x79, 0x70, 0x73, 0x6f, 0x20, 0x32, 0x43, 0x61, 0x6c, 0x79, 0x70, 0x73, 0x6f, 0x20, 0x33, 0x4d,
		0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x4d, 0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x4d, 0x61,
		0x78, 0x4d, 0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x61, 0x65,
		0x73, 0x74, 0x72, 0x6f, 0x20, 0x33, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x20, 0x32,
		0x4d, 0x6f, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x20, 0x33, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x61,
		0x74, 0x65, 0x20, 0x34, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x20, 0x4d, 0x61, 0x78,
		0x56, 0x69, 0x73, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x6c, 0x20, 0x35, 0x47, 0x46, 0x75,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x5a, 0x41, 0x54, 0x4d, 0x41, 0x4e, 0x41, 0x54, 0x4d, 0x50, 0x43,
		0x24, 0x31, 0x2d, 0x24, 0x32, 0x41, 0x54, 0x4f, 0x4c, 0x70, 0x65, 0x72, 0x69, 0x70, 0x68, 0x65,
		0x72, 0x61, 0x6c, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x53,
		0x6c, 0x69, 0x6d, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x6c,
		0x69, 0x6d, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x55, 0x50, 0x4f, 0x5a, 0x65, 0x75, 0x73, 0x20,
		0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x55, 0x52, 0x49, 0x53, 0x41, 0x55, 0x58, 0x41, 0x56,
		0x48, 0x45, 0x78, 0x63, 0x65, 0x72, 0x20, 0x47, 0x35, 0x2e, 0x24, 0x31, 0x45, 0x78, 0x63, 0x65,
		0x72, 0x20, 0x47, 0x35, 0x45, 0x78, 0x63, 0x65, 0x72, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x45, 0x78, 0x63, 0x65, 0x72, 0x20, 0x38, 0x41, 0x57, 0x4f, 0x58, 0x41, 0x58, 0x58, 0x41, 0x41,
		0x59, 0x59, 0x41, 0x41, 0x79, 0x61, 0x74, 0x31, 0x30, 0x31, 0x41, 0x79, 0x61, 0x74, 0x20, 0x31,
		0x30, 0x31, 0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x6f, 0x6e, 0x43, 0x61, 0x6d, 0x65,
		0x6c, 0x65, 0x6f, 0x6e, 0x20, 0x43, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x70, 0x65,
		0x65, 0x64, 0x20, 0x24, 0x31, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x58, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x50, 0x65, 0x61,
		0x72, 0x6c, 0x20, 0x41, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x65, 0x61, 0x72, 0x6c, 0x20,
		0x41, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x65, 0x61, 0x72, 0x6c, 0x20, 0x41, 0x24, 0x31,
		0x54, 0x61, 0x6e, 0x6b, 0x20, 0x50, 0x35, 0x35, 0x46, 0x41, 0x53, 0x54, 0x37, 0x20, 0x33, 0x47,
		0x53, 0x75, 0x72, 0x66, 0x20, 0x31, 0x30, 0x30, 0x30, 0x4b, 0x69, 0x64, 0x7a, 0x79, 0x20, 0x37,
		0x30, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x41, 0x63, 0x65, 0x42, 0x75,
		0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x42, 0x75, 0x7a, 0x7a, 0x20,
		0x24, 0x31, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x42, 0x55, 0x5a, 0x5a, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x42, 0x75,
		0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x42, 0x55, 0x5a, 0x5a, 0x20, 0x34, 0x53, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x34, 0x53, 0x42,
		0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20, 0x24, 0x31, 0x55,
		0x52, 0x42, 0x41, 0x4e, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x20,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x41, 0x63, 0x65,
		0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x65, 0x72, 0x44, 0x41, 0x32, 0x32, 0x30, 0x48, 0x51, 0x4c,
		0x44, 0x41, 0x32, 0x34, 0x31, 0x48, 0x4c, 0x41, 0x34, 0x31, 0x30, 0x5f, 0x34, 0x47, 0x41, 0x34,
		0x31, 0x30, 0x20, 0x34, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x20,
		0x4c, 0x54, 0x45, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41, 0x41, 0x54, 0x41, 0x42, 0x24,
		0x31, 0x45, 0x41, 0x43, 0x54, 0x41, 0x42, 0x31, 0x30, 0x32, 0x31, 0x41, 0x43, 0x54, 0x41, 0x42,
		0x24, 0x31, 0x45, 0x54, 0x2d, 0x31, 0x30, 0x38, 0x2d, 0x31, 0x31, 0x41, 0x45, 0x6e, 0x64, 0x75,
		0x72, 0x6f, 0x20, 0x54, 0x31, 0x54, 0x50, 0x41, 0x36, 0x30, 0x57, 0x49, 0x63, 0x6f, 0x6e, 0x69,
		0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x38, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x37, 0x41, 0x31, 0x2d, 0x38, 0x33, 0x30, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20,
		0x41, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x53, 0x41,
		0x33, 0x2d, 0x41, 0x32, 0x30, 0x46, 0x48, 0x44, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41,
		0x33, 0x20, 0x46, 0x48, 0x44, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41, 0x33, 0x49, 0x63,
		0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x49, 0x63, 0x6f, 0x6e, 0x69,
		0x61, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x42, 0x31,
		0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x37, 0x49, 0x63, 0x6f,
		0x6e, 0x69, 0x61, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x38, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20,
		0x4f, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x41, 0x31, 0x30, 0x31, 0x56, 0x61, 0x6e, 0x67, 0x6f, 0x67,
		0x68, 0x41, 0x32, 0x30, 0x30, 0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x45, 0x50, 0x69,
		0x63, 0x61, 0x73, 0x73, 0x6f, 0x41, 0x63, 0x65, 0x72, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x20,
		0x34, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x34, 0x47, 0x41, 0x63, 0x65, 0x72, 0x20, 0x4f,
		0x6e, 0x65, 0x20, 0x37, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x47, 0x54, 0x2d, 0x38, 0x31, 0x30, 0x50,
		0x72, 0x65, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x38, 0x41, 0x63, 0x65, 0x72, 0x5f, 0x6f, 0x6e,
		0x65, 0x5f, 0x38, 0x5f, 0x54, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x54, 0x32, 0x4f, 0x6e,
		0x65, 0x20, 0x38, 0x20, 0x54, 0x34, 0x2d, 0x38, 0x32, 0x4c, 0x45, 0x4e, 0x44, 0x55, 0x52, 0x4f,
		0x20, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x20, 0x54, 0x24, 0x31, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
		0x20, 0x45, 0x37, 0x30, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69,
		0x71, 0x75, 0x69, 0x64, 0x20, 0x45, 0x31, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69,
		0x64, 0x20, 0x45, 0x32, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x45,
		0x33, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x53, 0x31, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
		0x20, 0x53, 0x32, 0x6e, 0x65, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x34, 0x30, 0x30,
		0x6e, 0x65, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x33, 0x30, 0x30, 0x6e, 0x65, 0x6f,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x53, 0x32, 0x30, 0x30, 0x62, 0x65, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x45, 0x31, 0x30, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x24, 0x31,
		0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x31, 0x31, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69,
		0x64, 0x20, 0x5a, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a,
		0x34, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4a, 0x61, 0x64, 0x65,
		0x20, 0x5a, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x35, 0x33, 0x30, 0x4c, 0x69, 0x71,
		0x75, 0x69, 0x64, 0x20, 0x5a, 0x36, 0x33, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a,
		0x36, 0x33, 0x30, 0x53, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x4c,
		0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x71,
		0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x69, 0x71,
		0x75, 0x69, 0x64, 0x20, 0x4d, 0x33, 0x33, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4d,
		0x32, 0x32, 0x30, 0x41, 0x63, 0x65, 0x72, 0x54, 0x44, 0x36, 0x30, 0x30, 0x54, 0x44, 0x36, 0x30,
		0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4a, 0x61, 0x64, 0x65, 0x4c, 0x69, 0x71, 0x75,
		0x69, 0x64, 0x20, 0x58, 0x32, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x54, 0x72, 0x61, 0x76,
		0x65, 0x6c, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x53, 0x70, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x54, 0x72,
		0x61, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x41, 0x73, 0x70, 0x69, 0x72,
		0x65, 0x20, 0x24, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41,
		0x24, 0x31, 0x41, 0x63, 0x74, 0x65, 0x63, 0x6b, 0x41, 0x54, 0x37, 0x32, 0x33, 0x43, 0x41, 0x69,
		0x6b, 0x75, 0x6e, 0x20, 0x41, 0x54, 0x37, 0x32, 0x33, 0x43, 0x42, 0x4c, 0x45, 0x43, 0x4b, 0x42,
		0x6c, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x72, 0x6f, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x33, 0x47, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x41, 0x44, 0x56,
		0x41, 0x4e, 0x20, 0x4d, 0x34, 0x4d, 0x34, 0x41, 0x44, 0x56, 0x41, 0x4e, 0x20, 0x53, 0x34, 0x30,
		0x53, 0x34, 0x30, 0x69, 0x37, 0x55, 0x49, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x69, 0x37, 0x55,
		0x53, 0x35, 0x45, 0x20, 0x4e, 0x58, 0x54, 0x49, 0x24, 0x31, 0x69, 0x34, 0x55, 0x49, 0x34, 0x55,
		0x4e, 0x41, 0x53, 0x41, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x41, 0x53, 0x41, 0x20, 0x50, 0x72,
		0x6f, 0x4e, 0x41, 0x53, 0x41, 0x47, 0x35, 0x47, 0x35, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x53,
		0x35, 0x30, 0x20, 0x34, 0x47, 0x47, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x45, 0x31, 0x43, 0x20, 0x33, 0x47, 0x45, 0x31, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6b,
		0x65, 0x74, 0x73, 0x61, 0x20, 0x32, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74,
		0x72, 0x6f, 0x54, 0x52, 0x37, 0x39, 0x38, 0x39, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x53, 0x50, 0x24, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x50, 0x52, 0x24, 0x31, 0x48,
		0x6f, 0x6c, 0x6c, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x48, 0x4c, 0x24, 0x31, 0x48, 0x6f, 0x6c,
		0x6c, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x24, 0x31, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x74, 0x61,
		0x67, 0x65, 0x20, 0x41, 0x69, 0x72, 0x41, 0x66, 0x72, 0x69, 0x4f, 0x6e, 0x65, 0x70, 0x68, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x43, 0x79, 0x67, 0x6e, 0x75, 0x73, 0x20, 0x58, 0x43, 0x79, 0x67, 0x6e,
		0x75, 0x73, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x5a, 0x32, 0x43, 0x68, 0x61, 0x6d,
		0x70, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x69, 0x6e, 0x6f, 0x6c, 0x4e, 0x75, 0x6d,
		0x79, 0x20, 0x33, 0x47, 0x20, 0x41, 0x58, 0x31, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20, 0x4e,
		0x75, 0x6d, 0x79, 0x20, 0x41, 0x58, 0x31, 0x20, 0x33, 0x47, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33,
		0x47, 0x20, 0x53, 0x77, 0x6f, 0x72, 0x64, 0x4e, 0x4f, 0x56, 0x4f, 0x31, 0x30, 0x20, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x41, 0x58, 0x31, 0x30, 0x50, 0x52, 0x4f, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x41, 0x58, 0x31, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x4e, 0x75, 0x6d, 0x79, 0x5f, 0x33, 0x47, 0x5f, 0x41, 0x58, 0x33, 0x4e,
		0x75, 0x6d, 0x79, 0x20, 0x41, 0x58, 0x33, 0x20, 0x53, 0x77, 0x6f, 0x72, 0x64, 0x4e, 0x75, 0x6d,
		0x79, 0x33, 0x47, 0x54, 0x61, 0x6c, 0x6f, 0x73, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20,
		0x54, 0x61, 0x6c, 0x6f, 0x73, 0x4e, 0x75, 0x6d, 0x79, 0x5f, 0x33, 0x47, 0x5f, 0x42, 0x57, 0x31,
		0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x54, 0x61, 0x6c, 0x6f, 0x73, 0x20, 0x32, 0x4e,
		0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x41, 0x58, 0x39, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33,
		0x47, 0x20, 0x41, 0x58, 0x31, 0x30, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x49, 0x49, 0x20,
		0x33, 0x47, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x2d, 0x49,
		0x49, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x20, 0x33, 0x47, 0x4e, 0x75, 0x6d, 0x79, 0x20,
		0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x2d, 0x49, 0x49,
		0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x20, 0x49, 0x49,
		0x4e, 0x6f, 0x76, 0x6f, 0x37, 0x46, 0x69, 0x72, 0x65, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20,
		0x46, 0x69, 0x72, 0x65, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20, 0x46, 0x6c, 0x61, 0x6d, 0x65,
		0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20, 0x45, 0x6c, 0x66, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37,
		0x4e, 0x75, 0x6d, 0x79, 0x20, 0x24, 0x31, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x24,
		0x32, 0x41, 0x69, 0x72, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x41, 0x69, 0x72, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x45, 0x52, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x4e, 0x43, 0x45, 0x50, 0x45, 0x52,
		0x46, 0x4f, 0x52, 0x4d, 0x41, 0x4e, 0x43, 0x45, 0x20, 0x31, 0x30, 0x78, 0x50, 0x65, 0x72, 0x66,
		0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x31, 0x30, 0x78, 0x41, 0x69, 0x72, 0x69, 0x73,
		0x54, 0x4d, 0x35, 0x30, 0x51, 0x5a, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x41, 0x44, 0x20, 0x38,
		0x33, 0x47, 0x41, 0x69, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x69, 0x72, 0x70, 0x68, 0x61, 0x48,
		0x61, 0x6c, 0x6f, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x69, 0x72, 0x74, 0x65, 0x6c, 0x41,
		0x69, 0x72, 0x70, 0x61, 0x64, 0x20, 0x37, 0x2d, 0x73, 0x41, 0x69, 0x72, 0x50, 0x61, 0x64, 0x20,
		0x37, 0x53, 0x49, 0x6d, 0x61, 0x67, 0x69, 0x6e, 0x65, 0x41, 0x69, 0x75, 0x74, 0x6f, 0x41, 0x69,
		0x77, 0x61, 0x41, 0x57, 0x37, 0x39, 0x30, 0x5a, 0x39, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x5a, 0x39,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x57, 0x35, 0x30, 0x30, 0x41, 0x57, 0x4d, 0x24, 0x31, 0x4d,
		0x33, 0x30, 0x30, 0x41, 0x6a, 0x69, 0x62, 0x61, 0x6a, 0x69, 0x62, 0x20, 0x58, 0x31, 0x4c, 0x31,
		0x41, 0x6b, 0x61, 0x69, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x41, 0x4b, 0x54, 0x42, 0x2d, 0x37,
		0x30, 0x33, 0x4d, 0x5a, 0x69, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x58, 0x24, 0x31, 0x20, 0x4d, 0x65,
		0x74, 0x61, 0x6c, 0x69, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x53, 0x6c, 0x69, 0x6d, 0x58, 0x35, 0x5f, 0x50, 0x52, 0x4f, 0x69, 0x4c, 0x69, 0x6b, 0x65, 0x20,
		0x58, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x55, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x20, 0x24, 0x31, 0x45, 0x63, 0x6f, 0x20, 0x45, 0x32,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x28, 0x24, 0x31, 0x29, 0x53, 0x69, 0x32,
		0x31, 0x35, 0x37, 0x4c, 0x47, 0x33, 0x32, 0x41, 0x6c, 0x62, 0x61, 0x41, 0x6c, 0x62, 0x61, 0x20,
		0x35, 0x37, 0x35, 0x2e, 0x37, 0x31, 0x30, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x54, 0x31, 0x30,
		0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x41, 0x6c, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x34, 0x30,
		0x38, 0x37, 0x55, 0x31, 0x53, 0x45, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x53, 0x74, 0x61, 0x72, 0x36, 0x30,
		0x34, 0x34, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70,
		0x20, 0x55, 0x70, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70,
		0x20, 0x43, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70,
		0x20, 0x43, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x32, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x32, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x20, 0x53, 0x49, 0x4d, 0x35, 0x30, 0x33, 0x36, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20,
		0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70,
		0x20, 0x43, 0x37, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70,
		0x20, 0x43, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x44, 0x31, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x44, 0x33, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x44, 0x35, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x22, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x22,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x2e, 0x35,
		0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x35, 0x22, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x33, 0x20, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x35, 0x30, 0x31, 0x35,
		0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x33,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x35, 0x30, 0x35, 0x31, 0x44, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x34, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x34, 0x2b, 0x37, 0x30, 0x37, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x36, 0x22, 0x35, 0x30, 0x35, 0x37,
		0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x4d,
		0x69, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x53, 0x33, 0x37, 0x30, 0x34, 0x35, 0x59, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x53, 0x37, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x35, 0x30, 0x34, 0x32, 0x54, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x49, 0x64,
		0x6f, 0x6c, 0x58, 0x20, 0x36, 0x30, 0x34, 0x30, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x58, 0x35, 0x30, 0x32, 0x37, 0x42, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x44, 0x61, 0x77, 0x6e, 0x41, 0x37, 0x20, 0x58, 0x4c,
		0x31, 0x42, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x31, 0x42, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x32, 0x29, 0x4f, 0x6e, 0x79, 0x78, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x34, 0x30, 0x33, 0x34, 0x54,
		0x31, 0x45, 0x35, 0x30, 0x30, 0x32, 0x46, 0x31, 0x41, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29,
		0x34, 0x30, 0x36, 0x33, 0x46, 0x31, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x34, 0x30, 0x36, 0x35,
		0x46, 0x31, 0x4c, 0x20, 0x50, 0x72, 0x6f, 0x33, 0x4c, 0x41, 0x35, 0x37, 0x36, 0x43, 0x43, 0x4b,
		0x6f, 0x72, 0x61, 0x20, 0x41, 0x35, 0x37, 0x36, 0x43, 0x43, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x20, 0x32, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x20, 0x34, 0x35, 0x30,
		0x35, 0x34, 0x4e, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x46, 0x69, 0x65,
		0x72, 0x63, 0x65, 0x20, 0x58, 0x4c, 0x36, 0x30, 0x34, 0x32, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x20,
		0x6d, 0x69, 0x6e, 0x69, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x20, 0x6d, 0x69,
		0x6e, 0x69, 0x20, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64,
		0x6f, 0x6c, 0x20, 0x32, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49,
		0x64, 0x6f, 0x6c, 0x20, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49,
		0x64, 0x6f, 0x6c, 0x20, 0x33, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x34, 0x36, 0x30, 0x37, 0x30, 0x4b, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x34, 0x53,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x35,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x35,
		0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20,
		0x58, 0x2b, 0x38, 0x30, 0x33, 0x30, 0x59, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x37, 0x30, 0x35, 0x35, 0x41, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x43, 0x37, 0x30, 0x35,
		0x33, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x58, 0x31, 0x35, 0x30,
		0x36, 0x35, 0x4e, 0x54, 0x52, 0x55, 0x41, 0x35, 0x37, 0x34, 0x42, 0x4c, 0x52, 0x61, 0x76, 0x65,
		0x6e, 0x41, 0x35, 0x37, 0x37, 0x56, 0x4c, 0x5a, 0x69, 0x70, 0x41, 0x34, 0x36, 0x36, 0x42, 0x47,
		0x50, 0x69, 0x78, 0x69, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x65, 0x35, 0x30, 0x35, 0x36, 0x49, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x41, 0x35, 0x37, 0x30, 0x42, 0x4c, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x41, 0x76, 0x69, 0x6f, 0x6e,
		0x20, 0x4c, 0x54, 0x45, 0x41, 0x35, 0x37, 0x31, 0x56, 0x4c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x41, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x34,
		0x47, 0x20, 0x4c, 0x54, 0x45, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x46, 0x69, 0x72, 0x73, 0x74, 0x41, 0x34, 0x36, 0x34, 0x42, 0x47, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x47, 0x6c,
		0x69, 0x74, 0x7a, 0x41, 0x36, 0x32, 0x31, 0x42, 0x4c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x34, 0x30, 0x31,
		0x34, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x33, 0x20, 0x33, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x33, 0x2e, 0x35, 0x22, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x34, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x34, 0x2e,
		0x35, 0x22, 0x20, 0x34, 0x47, 0x39, 0x30, 0x30, 0x32, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x37, 0x22, 0x39, 0x30, 0x30,
		0x37, 0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x33, 0x20, 0x37, 0x22, 0x20, 0x34, 0x47, 0x31, 0x54, 0x31, 0x54, 0x20, 0x31, 0x30, 0x31,
		0x54, 0x20, 0x31, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x31, 0x54, 0x20, 0x31, 0x30, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x54, 0x45, 0x4b, 0x45, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x37,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x39, 0x30, 0x30, 0x39, 0x41, 0x31, 0x54, 0x20, 0x37, 0x39,
		0x33, 0x30, 0x39, 0x58, 0x31, 0x54, 0x20, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x31, 0x54, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x39, 0x30, 0x32, 0x32, 0x58, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x38, 0x22, 0x39,
		0x30, 0x31, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69,
		0x78, 0x69, 0x20, 0x33, 0x20, 0x31, 0x30, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x33, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x34, 0x22,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34,
		0x20, 0x34, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34,
		0x20, 0x35, 0x22, 0x20, 0x33, 0x47, 0x35, 0x30, 0x34, 0x31, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x35, 0x2e, 0x30, 0x22,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34,
		0x20, 0x35, 0x2e, 0x35, 0x22, 0x20, 0x33, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x35, 0x22, 0x20, 0x34, 0x47, 0x35, 0x30,
		0x39, 0x38, 0x4f, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78,
		0x69, 0x20, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x41, 0x35, 0x30, 0x31, 0x44, 0x4c, 0x41,
		0x35, 0x30, 0x33, 0x44, 0x4c, 0x41, 0x31, 0x58, 0x41, 0x78, 0x65, 0x6c, 0x41, 0x33, 0x41, 0x33,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x33, 0x20, 0x58, 0x4c, 0x39, 0x32, 0x30, 0x33, 0x41, 0x41,
		0x33, 0x20, 0x37, 0x22, 0x20, 0x33, 0x47, 0x33, 0x54, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x39, 0x30,
		0x32, 0x36, 0x58, 0x41, 0x33, 0x20, 0x31, 0x30, 0x22, 0x41, 0x35, 0x41, 0x35, 0x20, 0x4c, 0x45,
		0x44, 0x35, 0x30, 0x38, 0x35, 0x4e, 0x41, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x45, 0x44,
		0x41, 0x37, 0x41, 0x33, 0x30, 0x35, 0x30, 0x34, 0x39, 0x53, 0x41, 0x33, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x35, 0x30, 0x34, 0x39, 0x5a, 0x41, 0x33, 0x30, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63,
		0x65, 0x41, 0x35, 0x30, 0x33, 0x58, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x35, 0x30, 0x34,
		0x39, 0x57, 0x52, 0x65, 0x76, 0x76, 0x6c, 0x39, 0x30, 0x30, 0x36, 0x57, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x32, 0x20, 0x37, 0x22, 0x20,
		0x34, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x34, 0x20, 0x36, 0x22, 0x20, 0x33, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x36, 0x22, 0x20, 0x33, 0x47, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x36, 0x22, 0x20, 0x34, 0x47, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x37, 0x22,
		0x20, 0x33, 0x47, 0x39, 0x30, 0x31, 0x35, 0x42, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x37, 0x22, 0x20, 0x34, 0x47, 0x38, 0x30,
		0x36, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x34, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x37, 0x49, 0x32, 0x31, 0x33, 0x39, 0x30,
		0x30, 0x35, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78,
		0x69, 0x20, 0x38, 0x39, 0x30, 0x32, 0x35, 0x51, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x37, 0x22, 0x20, 0x34, 0x47, 0x50, 0x33, 0x32,
		0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x4f, 0x50, 0x20,
		0x38, 0x50, 0x33, 0x31, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x4f, 0x50, 0x20, 0x37, 0x50, 0x33, 0x33, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x37, 0x53, 0x39, 0x30, 0x32, 0x30, 0x41, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x54, 0x72, 0x65, 0x6b, 0x20, 0x48, 0x44,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x47, 0x6f, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x57, 0x61, 0x76, 0x65, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x4f, 0x4e, 0x45,
		0x5f, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x5f, 0x37, 0x36, 0x38, 0x54, 0x49, 0x73, 0x6c, 0x61, 0x6e,
		0x64, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x54, 0x72, 0x69, 0x62, 0x65,
		0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x63,
		0x68, 0x5f, 0x35, 0x38, 0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x35,
		0x38, 0x35, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x4f,
		0x55, 0x43, 0x48, 0x5f, 0x38, 0x33, 0x38, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x38, 0x33, 0x38, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x6f, 0x6e, 0x65, 0x5f,
		0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x38, 0x31, 0x33, 0x64, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x38, 0x31, 0x33, 0x44, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f,
		0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x38, 0x31, 0x33, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x31, 0x33, 0x4f, 0x54, 0x38, 0x37, 0x31, 0x41,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x37, 0x31, 0x41, 0x50, 0x33,
		0x36, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70,
		0x20, 0x31, 0x30, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x24, 0x31, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x24, 0x31, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x54, 0x49, 0x4d, 0x58, 0x4c, 0x54, 0x49, 0x4d, 0x20, 0x58, 0x4c, 0x35,
		0x30, 0x38, 0x35, 0x43, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x4d, 0x69, 0x78, 0x55, 0x33, 0x55, 0x35,
		0x55, 0x35, 0x20, 0x33, 0x47, 0x55, 0x35, 0x20, 0x48, 0x44, 0x34, 0x30, 0x34, 0x37, 0x47, 0x55,
		0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x34, 0x30, 0x34, 0x37, 0x41, 0x55, 0x35, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x34, 0x30, 0x34, 0x34,
		0x4f, 0x43, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x32,
		0x47, 0x6f, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x55, 0x35, 0x30, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x31, 0x31, 0x43, 0x31, 0x43, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x31, 0x58, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x31, 0x56,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x31, 0x56, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x36, 0x30, 0x30, 0x32, 0x4a, 0x31, 0x56, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x33, 0x43,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x31, 0x53, 0x31, 0x53, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x30, 0x29, 0x35, 0x30, 0x33, 0x30, 0x45, 0x31, 0x53, 0x50, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x31, 0x53, 0x45, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x31, 0x56, 0x31, 0x58, 0x35,
		0x30, 0x35, 0x39, 0x53, 0x41, 0x76, 0x61, 0x6c, 0x6f, 0x6e, 0x20, 0x56, 0x35, 0x56, 0x33, 0x35,
		0x30, 0x32, 0x39, 0x45, 0x33, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x33, 0x4c, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x33, 0x56, 0x33, 0x43, 0x36, 0x30, 0x32, 0x37, 0x41, 0x33, 0x48,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x58, 0x33, 0x58, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29,
		0x35, 0x36, 0x30, 0x36, 0x35, 0x41, 0x35, 0x48, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x36, 0x30, 0x36,
		0x32, 0x57, 0x37, 0x33, 0x54, 0x20, 0x31, 0x30, 0x22, 0x33, 0x54, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x4a, 0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x4a, 0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x32, 0x41, 0x6c, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x20, 0x55, 0x50, 0x42, 0x69, 0x67, 0x20, 0x45,
		0x61, 0x73, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x35, 0x30, 0x34, 0x31, 0x43, 0x54, 0x45, 0x54,
		0x52, 0x41, 0x41, 0x6c, 0x63, 0x6f, 0x72, 0x41, 0x6c, 0x66, 0x61, 0x77, 0x69, 0x73, 0x65, 0x5a,
		0x32, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x58,
		0x38, 0x35, 0x30, 0x52, 0x58, 0x38, 0x35, 0x30, 0x20, 0x65, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x6f,
		0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x48, 0x49, 0x4e, 0x45, 0x20, 0x31, 0x32, 0x54,
		0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x54, 0x53, 0x48, 0x49, 0x4e, 0x45, 0x20, 0x31,
		0x32, 0x20, 0x50, 0x52, 0x4f, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x53, 0x48, 0x49, 0x4e, 0x45, 0x20, 0x31, 0x32, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x31,
		0x32, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x53, 0x31, 0x5f, 0x58, 0x53, 0x31, 0x20,
		0x58, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x53, 0x31, 0x53, 0x31, 0x41, 0x6c, 0x6c,
		0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52, 0x49, 0x4f, 0x5f, 0x53, 0x52, 0x69, 0x6f, 0x20, 0x53, 0x41,
		0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52, 0x49, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x52, 0x69,
		0x6f, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52, 0x49, 0x4f,
		0x52, 0x69, 0x6f, 0x48, 0x65, 0x61, 0x74, 0x20, 0x24, 0x31, 0x52, 0x69, 0x6f, 0x20, 0x58, 0x48,
		0x6f, 0x74, 0x20, 0x24, 0x31, 0x41, 0x6c, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x62, 0x65, 0x53, 0x6d,
		0x69, 0x6c, 0x65, 0x20, 0x58, 0x4b, 0x69, 0x64, 0x7a, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x35, 0x58, 0x53, 0x6b, 0x50, 0x61, 0x64, 0x4d, 0x35, 0x53, 0x4d, 0x35, 0x4d, 0x35,
		0x58, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x33, 0x55, 0x36, 0x33, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x58, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x69,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x69, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x35, 0x30,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x58, 0x20, 0x47, 0x61, 0x6d, 0x65,
		0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x41, 0x34, 0x59, 0x6f, 0x75, 0x41, 0x34, 0x20, 0x59,
		0x6f, 0x75, 0x41, 0x58, 0x32, 0x5f, 0x46, 0x72, 0x65, 0x6e, 0x7a, 0x79, 0x41, 0x58, 0x32, 0x20,
		0x46, 0x72, 0x65, 0x6e, 0x7a, 0x79, 0x41, 0x58, 0x35, 0x4e, 0x61, 0x6e, 0x6f, 0x51, 0x41, 0x58,
		0x35, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x51, 0x43, 0x36, 0x5f, 0x44, 0x75, 0x6f, 0x43, 0x36,
		0x20, 0x44, 0x75, 0x6f, 0x45, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x45, 0x24,
		0x31, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x45, 0x33, 0x5f, 0x53, 0x69, 0x67, 0x6e, 0x45, 0x33, 0x20,
		0x53, 0x69, 0x67, 0x6e, 0x45, 0x34, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x45, 0x34, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4d, 0x39, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d, 0x39, 0x20, 0x43,
		0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x34, 0x33, 0x5f, 0x45, 0x61, 0x73, 0x79, 0x50, 0x34,
		0x33, 0x20, 0x45, 0x61, 0x73, 0x79, 0x50, 0x24, 0x31, 0x20, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63,
		0x50, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x36, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x50,
		0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x5f, 0x51, 0x6d, 0x61, 0x78, 0x50, 0x36, 0x20,
		0x51, 0x6d, 0x61, 0x78, 0x50, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x34, 0x5f, 0x51, 0x75,
		0x61, 0x64, 0x50, 0x34, 0x20, 0x51, 0x75, 0x61, 0x64, 0x50, 0x39, 0x5f, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x32, 0x30, 0x31, 0x37, 0x50, 0x39, 0x20, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x50, 0x39, 0x5f, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x53, 0x50, 0x39, 0x20, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x53, 0x50, 0x24, 0x31, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67,
		0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x38, 0x5f, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f,
		0x50, 0x52, 0x4f, 0x50, 0x38, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x24, 0x31, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50,
		0x24, 0x31, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x50, 0x37, 0x5f, 0x53, 0x65, 0x6f, 0x6e,
		0x50, 0x37, 0x20, 0x53, 0x65, 0x6f, 0x6e, 0x50, 0x37, 0x5f, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65,
		0x50, 0x37, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x50, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x66,
		0x65, 0x50, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x66, 0x65, 0x50, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x66,
		0x65, 0x50, 0x31, 0x30, 0x5f, 0x4d, 0x61, 0x78, 0x50, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x50,
		0x31, 0x30, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x31, 0x30, 0x20, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x56, 0x24, 0x31, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x49, 0x20, 0x34, 0x47, 0x56,
		0x31, 0x5f, 0x56, 0x69, 0x70, 0x65, 0x72, 0x5f, 0x49, 0x56, 0x31, 0x20, 0x56, 0x69, 0x70, 0x65,
		0x72, 0x20, 0x49, 0x56, 0x34, 0x5f, 0x56, 0x69, 0x70, 0x65, 0x72, 0x5f, 0x50, 0x52, 0x4f, 0x56,
		0x34, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x5f, 0x56, 0x69,
		0x70, 0x65, 0x72, 0x5f, 0x58, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x56, 0x32, 0x20, 0x56, 0x69, 0x70,
		0x65, 0x72, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x32, 0x20, 0x56, 0x69, 0x70, 0x65,
		0x72, 0x20, 0x24, 0x31, 0x58, 0x34, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x58, 0x37, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x37, 0x20,
		0x53, 0x6f, 0x75, 0x6c, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x38, 0x5f, 0x53, 0x6f, 0x75,
		0x6c, 0x5f, 0x50, 0x72, 0x6f, 0x58, 0x38, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x50, 0x72, 0x6f,
		0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x58,
		0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x24, 0x31, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x53, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x58,
		0x33, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x58, 0x33, 0x20, 0x53, 0x6f,
		0x75, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x32, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65,
		0x5f, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x32, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x53, 0x74, 0x79,
		0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20,
		0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x56, 0x24, 0x31,
		0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x58, 0x32, 0x5f, 0x54, 0x77, 0x69, 0x6e, 0x58, 0x32, 0x20,
		0x54, 0x77, 0x69, 0x6e, 0x41, 0x35, 0x20, 0x45, 0x61, 0x73, 0x79, 0x41, 0x24, 0x31, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x41, 0x35, 0x20, 0x52, 0x65, 0x61, 0x64, 0x79, 0x41, 0x35, 0x53, 0x6d, 0x69,
		0x6c, 0x65, 0x79, 0x41, 0x35, 0x20, 0x53, 0x6d, 0x69, 0x6c, 0x65, 0x79, 0x41, 0x35, 0x5f, 0x51,
		0x75, 0x61, 0x64, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5f, 0x54, 0x4d, 0x41, 0x35, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35, 0x5f, 0x51, 0x75, 0x61, 0x64, 0x41, 0x35,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x41, 0x36, 0x5f, 0x44, 0x75, 0x6f, 0x41, 0x36, 0x20, 0x44, 0x75,
		0x6f, 0x41, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x41, 0x31,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x31, 0x30,
		0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x32, 0x47, 0x42, 0x41, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x41, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x31, 0x30, 0x5f, 0x4d, 0x61, 0x78,
		0x41, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x20, 0x53, 0x41,
		0x4c, 0x4c, 0x56, 0x49, 0x45, 0x57, 0x20, 0x50, 0x34, 0x69, 0x41, 0x6c, 0x6c, 0x44, 0x72, 0x6f,
		0x20, 0x50, 0x34, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x50, 0x32, 0x41, 0x6c, 0x6c,
		0x44, 0x72, 0x6f, 0x56, 0x69, 0x76, 0x61, 0x20, 0x24, 0x31, 0x56, 0x69, 0x76, 0x61, 0x5f, 0x48,
		0x6f, 0x6d, 0x65, 0x56, 0x69, 0x76, 0x61, 0x20, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x6c, 0x6c, 0x76,
		0x69, 0x65, 0x77, 0x43, 0x69, 0x74, 0x79, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x69, 0x74, 0x79, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x43, 0x69, 0x74, 0x79, 0x43,
		0x69, 0x74, 0x79, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x41, 0x58, 0x32, 0x46, 0x72, 0x65,
		0x6e, 0x7a, 0x79, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x32, 0x53, 0x70, 0x65, 0x65, 0x64,
		0x44, 0x75, 0x6f, 0x41, 0x6c, 0x6c, 0x64, 0x72, 0x6f, 0x20, 0x32, 0x20, 0x53, 0x70, 0x65, 0x65,
		0x64, 0x20, 0x44, 0x75, 0x6f, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x33, 0x53, 0x70, 0x65,
		0x65, 0x64, 0x51, 0x75, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x64, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x53,
		0x70, 0x65, 0x65, 0x64, 0x20, 0x51, 0x75, 0x61, 0x64, 0x56, 0x69, 0x76, 0x61, 0x20, 0x48, 0x31,
		0x30, 0x30, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x48, 0x31,
		0x30, 0x30, 0x33, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x69, 0x76, 0x61, 0x20,
		0x48, 0x31, 0x30, 0x30, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x76,
		0x61, 0x5f, 0x31, 0x30, 0x30, 0x33, 0x47, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x76, 0x61,
		0x20, 0x31, 0x30, 0x30, 0x33, 0x47, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x31, 0x30, 0x30, 0x34,
		0x5f, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x76, 0x61, 0x20, 0x48, 0x31, 0x30, 0x30, 0x34, 0x20, 0x4c,
		0x54, 0x45, 0x56, 0x69, 0x76, 0x61, 0x20, 0x48, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x70,
		0x65, 0x65, 0x64, 0x20, 0x49, 0x53, 0x70, 0x65, 0x65, 0x64, 0x41, 0x4c, 0x4c, 0x56, 0x49, 0x45,
		0x57, 0x53, 0x50, 0x45, 0x45, 0x44, 0x41, 0x58, 0x34, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x41, 0x58, 0x34, 0x4e, 0x61, 0x6e, 0x6f, 0x41, 0x58, 0x34, 0x20, 0x4e, 0x61,
		0x6e, 0x6f, 0x41, 0x4c, 0x4c, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x54, 0x58, 0x31, 0x5f, 0x51, 0x75,
		0x61, 0x73, 0x61, 0x72, 0x54, 0x58, 0x31, 0x20, 0x51, 0x75, 0x61, 0x73, 0x61, 0x72, 0x41, 0x58,
		0x24, 0x31, 0x41, 0x6c, 0x6c, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x51, 0x55, 0x41, 0x44, 0x2d,
		0x43, 0x4f, 0x52, 0x45, 0x20, 0x41, 0x36, 0x34, 0x20, 0x70, 0x33, 0x41, 0x36, 0x34, 0x20, 0x51,
		0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x70, 0x33, 0x51, 0x55, 0x41, 0x44, 0x2d,
		0x43, 0x4f, 0x52, 0x45, 0x20, 0x41, 0x33, 0x33, 0x20, 0x79, 0x33, 0x41, 0x33, 0x33, 0x20, 0x51,
		0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x79, 0x33, 0x5a, 0x59, 0x2d, 0x30, 0x37,
		0x42, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4f, 0x63, 0x74, 0x61, 0x2d, 0x54, 0x38, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x20, 0x54, 0x38, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43,
		0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x4b, 0x32, 0x30, 0x30, 0x31, 0x6f, 0x51, 0x55, 0x41,
		0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x4b, 0x32, 0x30, 0x30, 0x31, 0x4f,
		0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x4b, 0x24, 0x31,
		0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x50, 0x24, 0x31,
		0x4f, 0x43, 0x54, 0x41, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x38, 0x4f, 0x43, 0x54, 0x4f,
		0x50, 0x55, 0x53, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x38, 0x51, 0x75, 0x61, 0x64, 0x43,
		0x6f, 0x72, 0x65, 0x2d, 0x52, 0x31, 0x36, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45,
		0x20, 0x52, 0x31, 0x36, 0x41, 0x6c, 0x70, 0x73, 0x41, 0x6c, 0x74, 0x69, 0x63, 0x65, 0x41, 0x6c,
		0x74, 0x69, 0x6d, 0x6f, 0x41, 0x6c, 0x74, 0x75, 0x73, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x28, 0x47, 0x65, 0x6e,
		0x20, 0x31, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x43, 0x75, 0x62, 0x65, 0x20,
		0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x43,
		0x75, 0x62, 0x65, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x54, 0x56, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54,
		0x56, 0x20, 0x34, 0x2d, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x32, 0x2d, 0x53, 0x65, 0x72, 0x69, 0x65,
		0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x2d, 0x32, 0x30, 0x32, 0x32, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x54, 0x56, 0x20, 0x32, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x2d, 0x32, 0x30, 0x32,
		0x32, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x31,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x28,
		0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74,
		0x69, 0x63, 0x6b, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x31, 0x29,
		0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x4f, 0x6d, 0x6e, 0x69, 0x20, 0x51, 0x4c, 0x45,
		0x44, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20,
		0x53, 0x74, 0x69, 0x63, 0x6b, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69,
		0x63, 0x6b, 0x20, 0x34, 0x4b, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69,
		0x63, 0x6b, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x20, 0x4d, 0x61, 0x78,
		0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x37, 0x22, 0x46, 0x69, 0x72, 0x65, 0x20, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x4b, 0x69,
		0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x2e, 0x39,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x2e, 0x39, 0x22, 0x20, 0x34, 0x47, 0x4b, 0x69, 0x6e, 0x64,
		0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44,
		0x58, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20,
		0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x37, 0x22, 0x20, 0x34, 0x47, 0x4b, 0x69,
		0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e,
		0x39, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39, 0x22, 0x20, 0x34, 0x47, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x31, 0x31, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44,
		0x20, 0x36, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x37, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20,
		0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20,
		0x38, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20,
		0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20,
		0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20,
		0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20,
		0x38, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58,
		0x20, 0x38, 0x2e, 0x39, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39,
		0x20, 0x34, 0x47, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x44, 0x34, 0x39, 0x33, 0x30, 0x55, 0x52, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20,
		0x46, 0x69, 0x72, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x45, 0x63, 0x68, 0x6f, 0x45, 0x63, 0x68, 0x6f, 0x20,
		0x44, 0x6f, 0x74, 0x45, 0x63, 0x68, 0x6f, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x24, 0x31, 0x45,
		0x63, 0x68, 0x6f, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29,
		0x45, 0x63, 0x68, 0x6f, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x38, 0x45, 0x63, 0x68, 0x6f, 0x20,
		0x53, 0x68, 0x6f, 0x77, 0x20, 0x31, 0x35, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x41, 0x6c,
		0x65, 0x78, 0x61, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c,
		0x65, 0x78, 0x61, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x73,
		0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41,
		0x6d, 0x69, 0x67, 0x6f, 0x6f, 0x41, 0x6d, 0x69, 0x6e, 0x6f, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x37,
		0x78, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x20, 0x37, 0x78, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x37, 0x41,
		0x6d, 0x69, 0x67, 0x6f, 0x20, 0x37, 0x41, 0x6d, 0x6f, 0x69, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x37, 0x41, 0x38, 0x36, 0x32, 0x57, 0x43, 0x4c, 0x45, 0x56,
		0x45, 0x52, 0x20, 0x4a, 0x4f, 0x59, 0x20, 0x53, 0x34, 0x30, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72,
		0x20, 0x4a, 0x6f, 0x79, 0x20, 0x53, 0x34, 0x30, 0x41, 0x6e, 0x64, 0x6f, 0x77, 0x6c, 0x41, 0x6e,
		0x67, 0x65, 0x6c, 0x54, 0x65, 0x63, 0x68, 0x50, 0x38, 0x30, 0x41, 0x6e, 0x67, 0x65, 0x6c, 0x63,
		0x61, 0x72, 0x65, 0x46, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6e, 0x6b, 0x65, 0x72, 0x4e,
		0x65, 0x62, 0x75, 0x6c, 0x61, 0x20, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x62, 0x61, 0x72, 0x4e, 0x65,
		0x62, 0x75, 0x6c, 0x61, 0x20, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x4e, 0x65, 0x62, 0x75, 0x6c,
		0x61, 0x20, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x72, 0x79,
		0x41, 0x6f, 0x63, 0x6f, 0x73, 0x41, 0x6f, 0x63, 0x77, 0x65, 0x69, 0x58, 0x24, 0x31, 0x41, 0x6f,
		0x72, 0x6f, 0x41, 0x6f, 0x73, 0x6f, 0x6e, 0x52, 0x31, 0x30, 0x24, 0x31, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x53, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x37, 0x20,
		0x37, 0x2e, 0x30, 0x22, 0x53, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x41,
		0x70, 0x70, 0x6c, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x6f, 0x64, 0x41, 0x69, 0x72, 0x50, 0x6c,
		0x61, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x31, 0x2c, 0x31, 0x77, 0x65, 0x61, 0x72, 0x61, 0x62,
		0x6c, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x31, 0x2c, 0x32, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x32, 0x2c, 0x36, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69,
		0x65, 0x73, 0x20, 0x31, 0x20, 0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x32, 0x2c,
		0x37, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x31, 0x20,
		0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x32, 0x2c, 0x33, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x32, 0x20, 0x33, 0x38, 0x6d, 0x6d, 0x57,
		0x61, 0x74, 0x63, 0x68, 0x32, 0x2c, 0x34, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72,
		0x69, 0x65, 0x73, 0x20, 0x32, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x33, 0x20, 0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x33, 0x20, 0x34, 0x32, 0x6d, 0x6d,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x45, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x20, 0x53, 0x45, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x53, 0x45, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x57,
		0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x45, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x20,
		0x34, 0x34, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
		0x20, 0x38, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72,
		0x69, 0x65, 0x73, 0x20, 0x38, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x36,
		0x2c, 0x31, 0x38, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x37, 0x2c, 0x35, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x20, 0x32, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20,
		0x24, 0x31, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72,
		0x69, 0x65, 0x73, 0x20, 0x24, 0x31, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x37, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x37, 0x20, 0x34, 0x35, 0x6d,
		0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x39, 0x20,
		0x34, 0x31, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
		0x20, 0x39, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x63, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32,
		0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x30, 0x2d, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29,
		0x69, 0x4d, 0x61, 0x63, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x69,
		0x4d, 0x61, 0x63, 0x20, 0x32, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x69, 0x4d,
		0x61, 0x63, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32,
		0x30, 0x30, 0x38, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x69,
		0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x69, 0x4d,
		0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x69,
		0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x69, 0x4d,
		0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x69,
		0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x69, 0x4d,
		0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x2d, 0x32,
		0x30, 0x31, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x32, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x34, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x35, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x37, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x37, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x30, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29,
		0x69, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x2d, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61,
		0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30,
		0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x32, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x32,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61,
		0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69,
		0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61,
		0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x35, 0x2d, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41,
		0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31,
		0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30,
		0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32,
		0x2d, 0x32, 0x30, 0x31, 0x33, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x2d, 0x32, 0x30, 0x31, 0x33,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x33, 0x2d, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38,
		0x2d, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x2d, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x36, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x36, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x36, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x36, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33,
		0x2d, 0x32, 0x30, 0x32, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x33, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x34,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x2d, 0x32, 0x30, 0x32, 0x34, 0x29, 0x4d, 0x61, 0x63,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x33, 0x29, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x63, 0x69, 0x6e, 0x74, 0x6f,
		0x73, 0x68, 0x20, 0x47, 0x35, 0x20, 0x28, 0x32, 0x30, 0x30, 0x33, 0x29, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x4d, 0x61, 0x63, 0x69, 0x6e, 0x74, 0x6f, 0x73, 0x68, 0x20, 0x47, 0x35, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x34, 0x2d, 0x32, 0x30, 0x30, 0x35, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x47,
		0x35, 0x20, 0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x47, 0x34, 0x20, 0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x34, 0x20, 0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x69, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x47, 0x34, 0x20, 0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x20,
		0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x4d, 0x61, 0x63,
		0x20, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x69, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35,
		0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x43, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x35, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x73,
		0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x45, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x38, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x52,
		0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x45, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x31, 0x32, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x53, 0x45, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x31, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x31, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x34,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x34, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x31, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x31, 0x35, 0x69, 0x50, 0x61, 0x64, 0x69, 0x50, 0x61, 0x64, 0x20, 0x32, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x33, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x34, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33,
		0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x39, 0x2e,
		0x37, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x35, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x32, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x31, 0x30, 0x2e, 0x35, 0x69, 0x50, 0x61, 0x64, 0x20, 0x36, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x32, 0x20, 0x31, 0x31, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x33, 0x20, 0x31, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x31, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x34, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x33, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x35, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x33, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x39, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x39, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x35, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x41, 0x69, 0x72, 0x20, 0x35, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x34,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x34, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x37, 0x20, 0x31, 0x33, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x37, 0x20, 0x31, 0x33, 0x22,
		0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x36, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x36, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x34, 0x20, 0x31, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x20, 0x31, 0x31, 0x22, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x36, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x36, 0x20, 0x31, 0x32, 0x2e, 0x39,
		0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x36, 0x20, 0x31, 0x31, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x36, 0x20, 0x31,
		0x31, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x31, 0x31, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x20,
		0x31, 0x31, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x37, 0x20, 0x31, 0x33,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x37,
		0x20, 0x31, 0x33, 0x22, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x32, 0x41, 0x70,
		0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x33, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56,
		0x20, 0x34, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x41, 0x70, 0x70,
		0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x41,
		0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x69, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x75, 0x73, 0x41,
		0x71, 0x75, 0x61, 0x72, 0x69, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x2c, 0x20, 0x53, 0x74, 0x64,
		0x2c, 0x20, 0x45, 0x6c, 0x74, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x20,
		0x53, 0x74, 0x64, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
		0x43, 0x4d, 0x50, 0x20, 0x24, 0x31, 0x41, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x20, 0x35, 0x35, 0x20,
		0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x35, 0x35,
		0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x35,
		0x30, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x34, 0x47, 0x34, 0x30, 0x43,
		0x20, 0x54, 0x49, 0x76, 0x32, 0x34, 0x30, 0x63, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75,
		0x6d, 0x20, 0x76, 0x32, 0x34, 0x35, 0x42, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d,
		0x34, 0x35, 0x62, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x41, 0x43, 0x34, 0x35,
		0x42, 0x48, 0x45, 0x34, 0x35, 0x62, 0x20, 0x48, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x34, 0x35, 0x20,
		0x4e, 0x65, 0x6f, 0x6e, 0x58, 0x36, 0x37, 0x20, 0x35, 0x47, 0x31, 0x30, 0x31, 0x42, 0x20, 0x48,
		0x65, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x34, 0x47, 0x54, 0x39, 0x36, 0x20, 0x57, 0x49, 0x46, 0x49,
		0x54, 0x39, 0x36, 0x20, 0x57, 0x69, 0x46, 0x69, 0x35, 0x30, 0x42, 0x20, 0x48, 0x65, 0x6c, 0x69,
		0x75, 0x6d, 0x20, 0x34, 0x47, 0x38, 0x30, 0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x31, 0x30,
		0x31, 0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x20, 0x34, 0x47, 0x37, 0x30, 0x20, 0x41, 0x63,
		0x63, 0x65, 0x73, 0x73, 0x20, 0x33, 0x47, 0x41, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x20, 0x41, 0x63,
		0x63, 0x65, 0x73, 0x73, 0x20, 0x31, 0x30, 0x31, 0x20, 0x33, 0x47, 0x20, 0x56, 0x32, 0x31, 0x30,
		0x31, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x20, 0x33, 0x47, 0x20, 0x56, 0x32, 0x41, 0x43,
		0x31, 0x30, 0x31, 0x50, 0x4c, 0x33, 0x47, 0x56, 0x32, 0x31, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x61,
		0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x33, 0x47, 0x20, 0x56, 0x32, 0x31, 0x30, 0x31, 0x73, 0x20,
		0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x20, 0x41, 0x72, 0x64, 0x6f, 0x69, 0x7a, 0x31, 0x30, 0x31,
		0x73, 0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x54, 0x24, 0x31, 0x20, 0x34, 0x47, 0x43, 0x6f,
		0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x41, 0x72,
		0x63, 0x68, 0x6f, 0x73, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x67, 0x20, 0x76, 0x34, 0x43,
		0x6f, 0x72, 0x65, 0x20, 0x31, 0x30, 0x31, 0x20, 0x33, 0x47, 0x20, 0x56, 0x34, 0x43, 0x6f, 0x72,
		0x65, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x37, 0x39, 0x2e,
		0x34, 0x22, 0x20, 0x46, 0x46, 0x46, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x31, 0x30, 0x31, 0x20,
		0x58, 0x54, 0x69, 0x6b, 0x65, 0x61, 0x73, 0x79, 0x20, 0x31, 0x30, 0x64, 0x54, 0x31, 0x30, 0x31,
		0x20, 0x48, 0x44, 0x20, 0x34, 0x47, 0x54, 0x31, 0x30, 0x31, 0x20, 0x46, 0x48, 0x44, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x41, 0x72, 0x69, 0x61, 0x6e, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x31, 0x30,
		0x30, 0x20, 0x53, 0x54, 0x31, 0x30, 0x30, 0x34, 0x50, 0x47, 0x31, 0x30, 0x30, 0x38, 0x30, 0x20,
		0x53, 0x53, 0x38, 0x30, 0x30, 0x33, 0x50, 0x47, 0x38, 0x30, 0x37, 0x31, 0x20, 0x53, 0x54, 0x37,
		0x30, 0x30, 0x32, 0x50, 0x47, 0x37, 0x31, 0x37, 0x30, 0x20, 0x53, 0x54, 0x37, 0x30, 0x30, 0x31,
		0x52, 0x57, 0x37, 0x30, 0x41, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x42, 0x69, 0x6f, 0x6e, 0x69, 0x71,
		0x20, 0x50, 0x31, 0x31, 0x36, 0x41, 0x72, 0x6b, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x20,
		0x24, 0x31, 0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x50, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x24, 0x31, 0x45, 0x64, 0x67, 0x65, 0x20,
		0x24, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x20,
		0x24, 0x31, 0x45, 0x6c, 0x66, 0x20, 0x53, 0x38, 0x55, 0x6b, 0x6f, 0x7a, 0x69, 0x20, 0x55, 0x24,
		0x31, 0x48, 0x65, 0x72, 0x63, 0x6c, 0x73, 0x20, 0x4c, 0x39, 0x32, 0x35, 0x41, 0x72, 0x6d, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x41, 0x72, 0x6e, 0x6f, 0x76, 0x61, 0x41, 0x52, 0x43, 0x48, 0x4d, 0x39,
		0x30, 0x31, 0x4d, 0x39, 0x30, 0x31, 0x41, 0x4e, 0x37, 0x43, 0x47, 0x32, 0x37, 0x63, 0x20, 0x47,
		0x32, 0x37, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x37, 0x47, 0x33, 0x37, 0x20, 0x47, 0x33, 0x41, 0x4e,
		0x37, 0x49, 0x47, 0x33, 0x37, 0x69, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x42, 0x47, 0x33, 0x37,
		0x62, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x43, 0x47, 0x33, 0x37, 0x63, 0x20, 0x47, 0x33, 0x41,
		0x4e, 0x37, 0x44, 0x47, 0x33, 0x2d, 0x43, 0x50, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x70, 0x61, 0x64,
		0x41, 0x4e, 0x37, 0x44, 0x47, 0x33, 0x37, 0x64, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x46, 0x47,
		0x33, 0x37, 0x66, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x48, 0x47, 0x33, 0x37, 0x68, 0x20, 0x47,
		0x33, 0x41, 0x38, 0x30, 0x4b, 0x53, 0x43, 0x38, 0x41, 0x4e, 0x38, 0x47, 0x32, 0x38, 0x20, 0x47,
		0x32, 0x41, 0x4e, 0x38, 0x47, 0x33, 0x38, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x38, 0x42, 0x47, 0x33,
		0x38, 0x62, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x38, 0x43, 0x47, 0x33, 0x38, 0x63, 0x20, 0x47, 0x33,
		0x41, 0x4e, 0x39, 0x47, 0x32, 0x49, 0x39, 0x69, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x39, 0x47, 0x32,
		0x39, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x39, 0x47, 0x33, 0x39, 0x20, 0x47, 0x33, 0x31, 0x30, 0x20,
		0x47, 0x32, 0x41, 0x31, 0x30, 0x31, 0x42, 0x31, 0x30, 0x31, 0x30, 0x62, 0x20, 0x47, 0x32, 0x31,
		0x30, 0x62, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x31, 0x30, 0x43, 0x47, 0x33, 0x31, 0x30, 0x63, 0x20,
		0x47, 0x33, 0x41, 0x4e, 0x31, 0x30, 0x44, 0x47, 0x33, 0x31, 0x30, 0x64, 0x20, 0x47, 0x33, 0x41,
		0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x39, 0x30, 0x47, 0x33, 0x39, 0x30, 0x20, 0x47, 0x33, 0x41,
		0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x39, 0x30, 0x20, 0x47, 0x34, 0x39, 0x30, 0x20, 0x47, 0x34,
		0x41, 0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x39, 0x37, 0x47, 0x34, 0x39, 0x37, 0x20, 0x47, 0x34,
		0x41, 0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x31, 0x30, 0x31, 0x20, 0x47, 0x34, 0x31, 0x30, 0x31,
		0x20, 0x47, 0x34, 0x41, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x41, 0x72, 0x74, 0x65, 0x6c, 0x52,
		0x33, 0x20, 0x47, 0x54, 0x56, 0x47, 0x61, 0x70, 0x20, 0x59, 0x6f, 0x20, 0x51, 0x55, 0x31, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x55, 0x33, 0x20, 0x34, 0x47, 0x55, 0x24, 0x31, 0x41, 0x6c, 0x6c, 0x6f,
		0x4b, 0x6f, 0x6d, 0x69, 0x20, 0x33, 0x51, 0x32, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x32, 0x31,
		0x41, 0x72, 0x74, 0x69, 0x7a, 0x6c, 0x65, 0x65, 0x41, 0x54, 0x4c, 0x2d, 0x32, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x39, 0x41, 0x72, 0xc3, 0xa7, 0x65, 0x6c, 0x69, 0x6b, 0x41, 0x72, 0x63,
		0x65, 0x6c, 0x69, 0x6b, 0x41, 0x73, 0x61, 0x6e, 0x6f, 0x24, 0x31, 0x24, 0x32, 0x20, 0x24, 0x31,
		0x2e, 0x30, 0x22, 0x41, 0x73, 0x61, 0x6e, 0x7a, 0x6f, 0x53, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x41, 0x73, 0x6b, 0x37, 0x39, 0x31, 0x53, 0x50, 0x20, 0x33, 0x47, 0x41, 0x73, 0x70, 0x65, 0x72,
		0x61, 0x57, 0x72, 0x65, 0x6e, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x32, 0x41, 0x73, 0x73, 0x69, 0x73,
		0x74, 0x61, 0x6e, 0x74, 0x41, 0x73, 0x70, 0x65, 0x72, 0x41, 0x67, 0x69, 0x6f, 0x43, 0x6c, 0x75,
		0x62, 0x41, 0x53, 0x2d, 0x36, 0x30, 0x31, 0x4c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x61,
		0x78, 0x20, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x75, 0x72, 0x66, 0x55, 0x6e, 0x61, 0x6d,
		0x69, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x53, 0x68, 0x6f, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
		0x53, 0x68, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x69, 0x64, 0x52, 0x69, 0x64, 0x65, 0x72, 0x4d, 0x61,
		0x78, 0x20, 0x52, 0x69, 0x74, 0x6d, 0x41, 0x53, 0x2d, 0x35, 0x34, 0x31, 0x32, 0x20, 0x4d, 0x61,
		0x78, 0x41, 0x50, 0x2d, 0x37, 0x32, 0x31, 0x4e, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x50,
		0x2d, 0x39, 0x34, 0x31, 0x43, 0x65, 0x74, 0x75, 0x73, 0x41, 0x50, 0x2d, 0x31, 0x30, 0x36, 0x20,
		0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x41, 0x73, 0x75, 0x73, 0x58, 0x50,
		0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x65, 0x65, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x31, 0x37, 0x31, 0x5a, 0x39, 0x30, 0x36, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x4d, 0x45, 0x31, 0x37, 0x32, 0x56, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61,
		0x64, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x48, 0x44, 0x20, 0x31, 0x30,
		0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x48, 0x44, 0x20, 0x31, 0x30, 0x20,
		0x4c, 0x54, 0x45, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x31, 0x30, 0x5a, 0x31, 0x30, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x5a, 0x31,
		0x30, 0x31, 0x58, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x65,
		0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x20, 0x4d, 0x45, 0x31, 0x30, 0x33, 0x4b, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x48, 0x44, 0x20, 0x37, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x38, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x39, 0x4d, 0x65, 0x4d,
		0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x48, 0x44, 0x20, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20,
		0x53, 0x49, 0x4d, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x54, 0x72,
		0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46,
		0x37, 0x30, 0x31, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x31, 0x30, 0x33, 0x43, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
		0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x31, 0x30, 0x33, 0x43,
		0x47, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x54, 0x46, 0x33, 0x30, 0x30, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
		0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x33, 0x30, 0x33, 0x4b, 0x54, 0x72, 0x61,
		0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x54, 0x72,
		0x69, 0x6f, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x20, 0x53, 0x4c, 0x31, 0x30, 0x31, 0x45, 0x65,
		0x65, 0x20, 0x50, 0x61, 0x64, 0x20, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x20, 0x53, 0x4c, 0x31,
		0x30, 0x31, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x43, 0x20, 0x37, 0x2e, 0x30, 0x50, 0x30,
		0x30, 0x38, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x5a,
		0x38, 0x50, 0x30, 0x30, 0x31, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x5a, 0x31, 0x30, 0x5a,
		0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x5a, 0x38, 0x73, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20,
		0x37, 0x2e, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x5a, 0x65, 0x6e,
		0x50, 0x61, 0x64, 0x20, 0x53, 0x20, 0x38, 0x2e, 0x30, 0x50, 0x30, 0x32, 0x37, 0x5a, 0x65, 0x6e,
		0x50, 0x61, 0x64, 0x20, 0x33, 0x53, 0x20, 0x31, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20,
		0x33, 0x53, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20,
		0x33, 0x20, 0x38, 0x2e, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x41, 0x53,
		0x55, 0x53, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x50, 0x31, 0x38, 0x30, 0x31, 0x2d,
		0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x69, 0x4f,
		0x20, 0x50, 0x31, 0x38, 0x30, 0x31, 0x20, 0x31, 0x38, 0x2e, 0x34, 0x22, 0x41, 0x53, 0x55, 0x53,
		0x20, 0x54, 0x41, 0x42, 0x20, 0x41, 0x38, 0x54, 0x41, 0x42, 0x20, 0x41, 0x38, 0x46, 0x6f, 0x6e,
		0x65, 0x70, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x36, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x37, 0x46, 0x6f, 0x6e, 0x65, 0x70,
		0x61, 0x64, 0x20, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x46, 0x6f, 0x6e,
		0x65, 0x70, 0x61, 0x64, 0x20, 0x38, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61,
		0x78, 0x20, 0x53, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x50,
		0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x61, 0x64, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x58, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x54, 0x30, 0x30, 0x38, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x45, 0x50, 0x61,
		0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x54, 0x30, 0x30, 0x34, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x41, 0x52, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x38, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x5a, 0x65, 0x6e, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x39, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x56, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x56,
		0x20, 0x4c, 0x69, 0x76, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x43, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4d, 0x31, 0x5a, 0x65, 0x6e, 0x46,
		0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x31, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4d, 0x32, 0x5a, 0x65, 0x6e, 0x46,
		0x6f, 0x6e, 0x65, 0x20, 0x32, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x45, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x20, 0x4c, 0x31, 0x47, 0x35, 0x35, 0x33, 0x4b, 0x4c,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4c, 0x31, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35,
		0x20, 0x4c, 0x54, 0x45, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x5a, 0x5a, 0x65, 0x6e, 0x46,
		0x6f, 0x6e, 0x65, 0x20, 0x35, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x6e, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x37, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x4d, 0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x4d, 0x32, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x20, 0x54, 0x56, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x47, 0x6f, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x20, 0x35, 0x30, 0x30, 0x30, 0x5a, 0x65, 0x6e, 0x46,
		0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x20, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75,
		0x73, 0x20, 0x33, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x33, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x50,
		0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20,
		0x5a, 0x6f, 0x6f, 0x6d, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x44, 0x65,
		0x6c, 0x75, 0x78, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x65, 0x6c, 0x66,
		0x69, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x5a, 0x65, 0x6e, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x33, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x34, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46,
		0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x4f,
		0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x33, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x52,
		0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x36, 0x44, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x37, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x38, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x53, 0x6e, 0x61, 0x70, 0x64,
		0x72, 0x61, 0x67, 0x6f, 0x6e, 0x20, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x73, 0x5a, 0x4e,
		0x32, 0x32, 0x30, 0x49, 0x43, 0x5a, 0x65, 0x6e, 0x20, 0x41, 0x69, 0x4f, 0x20, 0x5a, 0x4e, 0x32,
		0x32, 0x30, 0x49, 0x43, 0x54, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x20, 0x42, 0x6f, 0x61, 0x72, 0x64,
		0x24, 0x31, 0x61, 0x73, 0x75, 0x73, 0x5f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x63, 0x75,
		0x62, 0x65, 0x43, 0x75, 0x62, 0x65, 0x5a, 0x65, 0x6e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x24, 0x31,
		0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x24, 0x31, 0x43, 0x68,
		0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x24, 0x31,
		0x41, 0x74, 0x68, 0x65, 0x73, 0x69, 0x41, 0x74, 0x6d, 0x61, 0x63, 0x61, 0x20, 0x45, 0x6c, 0x65,
		0x6b, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x6b, 0x41, 0x54, 0x4d, 0x41, 0x43, 0x41, 0x5f, 0x41, 0x74,
		0x6f, 0x6d, 0x41, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x41, 0x74, 0x6f, 0x7a, 0x65, 0x65, 0x59, 0x51,
		0x31, 0x30, 0x53, 0x5f, 0x4d, 0x41, 0x58, 0x59, 0x51, 0x31, 0x30, 0x53, 0x20, 0x4d, 0x61, 0x78,
		0x59, 0x51, 0x31, 0x30, 0x53, 0x5f, 0x47, 0x6f, 0x6c, 0x64, 0x59, 0x51, 0x31, 0x30, 0x53, 0x20,
		0x47, 0x6f, 0x6c, 0x64, 0x41, 0x74, 0x74, 0x69, 0x6c, 0x61, 0x41, 0x74, 0x76, 0x69, 0x6f, 0x41,
		0x75, 0x64, 0x69, 0x6f, 0x76, 0x6f, 0x78, 0x43, 0x44, 0x4d, 0x2d, 0x24, 0x31, 0x41, 0x75, 0x74,
		0x61, 0x6e, 0x41, 0x76, 0x61, 0x79, 0x61, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x4b,
		0x31, 0x37, 0x35, 0x41, 0x76, 0x65, 0x6e, 0x7a, 0x6f, 0x4d, 0x6f, 0x62, 0x20, 0x34, 0x20, 0x34,
		0x47, 0x4d, 0x6f, 0x62, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x41, 0x76, 0x76,
		0x69, 0x6f, 0x43, 0x48, 0x49, 0x56, 0x41, 0x53, 0x5f, 0x35, 0x35, 0x43, 0x68, 0x69, 0x76, 0x61,
		0x73, 0x20, 0x35, 0x35, 0x4d, 0x69, 0x6e, 0x74, 0x5f, 0x4d, 0x33, 0x35, 0x33, 0x4d, 0x69, 0x6e,
		0x74, 0x20, 0x4d, 0x33, 0x35, 0x33, 0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x69, 0x61, 0x5f, 0x32,
		0x30, 0x31, 0x38, 0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x69, 0x61, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x38, 0x29, 0x50, 0x41, 0x44, 0x41, 0x77, 0x6f, 0x77, 0x41, 0x78, 0x69, 0x6f, 0x6f, 0x50, 0x69,
		0x63, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x50, 0x49, 0x43, 0x4f, 0x70, 0x68,
		0x6f, 0x6e, 0x65, 0x5f, 0x4d, 0x32, 0x50, 0x69, 0x63, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x4d, 0x32, 0x20, 0x4d, 0x50, 0x69, 0x63, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x20, 0x33,
		0x47, 0x41, 0x78, 0x78, 0x69, 0x6f, 0x6e, 0x41, 0x54, 0x41, 0x42, 0x2d, 0x24, 0x31, 0x41, 0x7a,
		0x65, 0x79, 0x6f, 0x75, 0x41, 0x7a, 0x75, 0x6d, 0x69, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x41, 0x6b, 0x61, 0x6e, 0x65, 0x41, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x50, 0x45, 0x45,
		0x44, 0x35, 0x35, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x41, 0x35, 0x30,
		0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35, 0x30, 0x20, 0x53,
		0x74, 0x79, 0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x52, 0x4f, 0x20, 0x41, 0x35, 0x35,
		0x20, 0x51, 0x4c, 0x54, 0x35, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x49, 0x52, 0x45, 0x49,
		0x20, 0x41, 0x35, 0x51, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4b, 0x69, 0x72, 0x65, 0x69, 0x20, 0x41,
		0x35, 0x51, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x62, 0x75, 0x20, 0x41, 0x35, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x41, 0x7a, 0x75, 0x70, 0x69, 0x6b, 0x42, 0x41, 0x46, 0x46, 0x24, 0x31, 0x59,
		0x20, 0x46, 0x48, 0x44, 0x24, 0x31, 0x59, 0x20, 0x24, 0x32, 0x42, 0x41, 0x52, 0x54, 0x45, 0x43,
		0x50, 0x69, 0x78, 0x61, 0x76, 0x69, 0x50, 0x69, 0x78, 0x61, 0x76, 0x69, 0x20, 0x24, 0x31, 0x42,
		0x41, 0x53, 0x45, 0x42, 0x41, 0x55, 0x48, 0x4e, 0x42, 0x42, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x50, 0x69, 0x6f,
		0x6e, 0x65, 0x65, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x53, 0x37, 0x30, 0x30, 0x42, 0x46, 0x54,
		0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x20,
		0x54, 0x51, 0x30, 0x36, 0x30, 0x58, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x20, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x54, 0x51, 0x38,
		0x36, 0x33, 0x51, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4d,
		0x6f, 0x7a, 0x67, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x49, 0x37, 0x30, 0x30, 0x41, 0x4a, 0x54, 0x65,
		0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20,
		0x49, 0x37, 0x38, 0x35, 0x41, 0x50, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x58, 0x38, 0x30, 0x30, 0x42, 0x4a, 0x54, 0x65, 0x63,
		0x68, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x49,
		0x31, 0x30, 0x31, 0x42, 0x49, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22,
		0x20, 0x4b, 0x61, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x54, 0x51, 0x37, 0x36,
		0x33, 0x49, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x24, 0x31, 0x22, 0x20, 0x33, 0x47, 0x54,
		0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x47, 0x20, 0x58,
		0x35, 0x39, 0x35, 0x42, 0x54, 0x42, 0x42, 0x4b, 0x24, 0x31, 0x4c, 0x45, 0x58, 0x2d, 0x24, 0x32,
		0x2f, 0x24, 0x33, 0x24, 0x31, 0x4c, 0x45, 0x58, 0x2d, 0x24, 0x32, 0x2f, 0x54, 0x53, 0x32, 0x43,
		0x24, 0x31, 0x4c, 0x45, 0x58, 0x2d, 0x24, 0x32, 0x42, 0x44, 0x46, 0x4d, 0x31, 0x30, 0x37, 0x5a,
		0x4c, 0x38, 0x30, 0x42, 0x4b, 0x39, 0x36, 0x30, 0x4e, 0x20, 0x4d, 0x54, 0x24, 0x31, 0x42, 0x44,
		0x51, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x31, 0x39, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x42, 0x31, 0x39, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x79, 0x42, 0x44, 0x73, 0x68, 0x61, 0x72,
		0x69, 0x6e, 0x67, 0x42, 0x44, 0x53, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x47, 0x48, 0x59,
		0x24, 0x31, 0x59, 0x37, 0x31, 0x30, 0x20, 0x4b, 0x49, 0x44, 0x53, 0x59, 0x37, 0x31, 0x30, 0x20,
		0x4b, 0x69, 0x64, 0x73, 0x4a, 0x4f, 0x59, 0x20, 0x58, 0x32, 0x4a, 0x6f, 0x79, 0x20, 0x58, 0x32,
		0x42, 0x49, 0x48, 0x45, 0x45, 0x42, 0x4c, 0x49, 0x53, 0x53, 0x42, 0x4c, 0x49, 0x53, 0x53, 0x2d,
		0x54, 0x36, 0x54, 0x36, 0x42, 0x4d, 0x41, 0x58, 0x4d, 0x61, 0x78, 0x50, 0x61, 0x64, 0x20, 0x49,
		0x31, 0x30, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x78, 0x50, 0x61, 0x64, 0x20, 0x49, 0x31, 0x31, 0x4d,
		0x61, 0x78, 0x50, 0x61, 0x64, 0x20, 0x49, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x4d,
		0x58, 0x43, 0x42, 0x52, 0x41, 0x56, 0x45, 0x42, 0x52, 0x4f, 0x52, 0x42, 0x53, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x52, 0x75, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x42, 0x59, 0x44, 0x46, 0x6f,
		0x72, 0x20, 0x42, 0x59, 0x44, 0x20, 0x41, 0x55, 0x54, 0x4f, 0x43, 0x61, 0x72, 0x50, 0x61, 0x64,
		0x42, 0x59, 0x59, 0x42, 0x55, 0x4f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x24,
		0x31, 0x42, 0x61, 0x63, 0x6b, 0x63, 0x65, 0x6c, 0x6c, 0x42, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x20,
		0x26, 0x20, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x42, 0x65,
		0x61, 0x66, 0x6f, 0x6e, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x42,
		0x65, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x20,
		0x24, 0x31, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x61, 0x62, 0x45, 0x24, 0x31, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x46, 0x61, 0x73, 0x74, 0x20, 0x32, 0x46, 0x61, 0x73, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x38, 0x20, 0x41, 0x32, 0x33, 0x39, 0x73, 0x42, 0x65, 0x65, 0x62, 0x6f, 0x78, 0x20, 0x24, 0x31,
		0x42, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x47, 0x54, 0x31, 0x47, 0x54, 0x31, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x47, 0x54, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x47, 0x54, 0x20, 0x4b,
		0x69, 0x6e, 0x67, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x54, 0x20, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x49,
		0x49, 0x47, 0x54, 0x20, 0x4b, 0x69, 0x6e, 0x67, 0x52, 0x36, 0x38, 0x20, 0x49, 0x49, 0x42, 0x65,
		0x65, 0x74, 0x65, 0x6c, 0x42, 0x65, 0x69, 0x73, 0x74, 0x61, 0x42, 0x65, 0x6b, 0x6f, 0x42, 0x65,
		0x6c, 0x6c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x50, 0x20, 0x31, 0x30, 0x30, 0x20, 0x58, 0x2d,
		0x50, 0x6c, 0x75, 0x73, 0x42, 0x65, 0x6e, 0x51, 0x42, 0x65, 0x6e, 0x51, 0x2d, 0x53, 0x69, 0x65,
		0x6d, 0x65, 0x6e, 0x73, 0x42, 0x65, 0x6e, 0x57, 0x65, 0x65, 0x57, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x42, 0x65, 0x6e, 0x63, 0x6f, 0x41, 0x45, 0x39, 0x39, 0x35, 0x30, 0x56, 0x36, 0x30, 0x41, 0x45,
		0x39, 0x31, 0x35, 0x30, 0x56, 0x36, 0x32, 0x41, 0x45, 0x39, 0x32, 0x32, 0x30, 0x56, 0x37, 0x30,
		0x41, 0x45, 0x39, 0x30, 0x31, 0x30, 0x56, 0x38, 0x30, 0x41, 0x45, 0x39, 0x31, 0x32, 0x30, 0x56,
		0x39, 0x30, 0x41, 0x45, 0x39, 0x33, 0x31, 0x30, 0x56, 0x39, 0x31, 0x41, 0x48, 0x39, 0x31, 0x31,
		0x30, 0x59, 0x31, 0x31, 0x41, 0x45, 0x39, 0x32, 0x34, 0x30, 0x41, 0x45, 0x39, 0x32, 0x36, 0x30,
		0x53, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x45, 0x39, 0x32, 0x33, 0x30, 0x59, 0x33, 0x32, 0x42,
		0x65, 0x6e, 0x65, 0x73, 0x73, 0x65, 0x42, 0x65, 0x6e, 0x7a, 0x6f, 0x47, 0x2d, 0x50, 0x41, 0x44,
		0x4c, 0x49, 0x54, 0x45, 0x47, 0x50, 0x61, 0x64, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x65, 0x79,
		0x6f, 0x6e, 0x64, 0x53, 0x75, 0x72, 0x76, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x53,
		0x75, 0x72, 0x76, 0x65, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x6d, 0x65, 0x39, 0x48, 0x6f, 0x6d, 0x65,
		0x20, 0x39, 0x42, 0x65, 0x7a, 0x6b, 0x61, 0x6d, 0x42, 0x69, 0x67, 0x62, 0x65, 0x6e, 0x47, 0x61,
		0x6d, 0x65, 0x54, 0x61, 0x62, 0x2d, 0x4f, 0x6e, 0x65, 0x42, 0x69, 0x6c, 0x69, 0x6d, 0x4c, 0x61,
		0x6e, 0x64, 0x42, 0x69, 0x6c, 0x69, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x42, 0x69, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x69, 0x6f, 0x52, 0x75, 0x67, 0x67,
		0x65, 0x64, 0x42, 0x69, 0x6f, 0x57, 0x6f, 0x6c, 0x66, 0x20, 0x38, 0x2d, 0x46, 0x33, 0x30, 0x52,
		0x75, 0x67, 0x67, 0x62, 0x6f, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x69, 0x72,
		0x64, 0x42, 0x69, 0x74, 0x65, 0x6c, 0x42, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x69, 0x74, 0x6d, 0x6f,
		0x72, 0x65, 0x24, 0x31, 0x20, 0x24, 0x32, 0x43, 0x20, 0x33, 0x47, 0x54, 0x61, 0x62, 0x31, 0x30,
		0x31, 0x31, 0x51, 0x20, 0x49, 0x49, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x42, 0x69, 0x74, 0x74, 0x69, 0x75, 0x6d, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x20, 0x32, 0x42, 0x6b, 0x61, 0x76, 0x42, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x42, 0x65, 0x61, 0x72, 0x42, 0x6c, 0x61,
		0x63, 0x6b, 0x20, 0x42, 0x6f, 0x78, 0x54, 0x56, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63,
		0x6b, 0x20, 0x46, 0x6f, 0x78, 0x42, 0x4d, 0x4d, 0x34, 0x34, 0x33, 0x44, 0x42, 0x37, 0x20, 0x46,
		0x6f, 0x78, 0x2b, 0x42, 0x38, 0x20, 0x46, 0x6f, 0x78, 0x42, 0x38, 0x20, 0x46, 0x6f, 0x78, 0x2b,
		0x42, 0x4d, 0x4d, 0x34, 0x34, 0x31, 0x57, 0x42, 0x38, 0x4d, 0x42, 0x4d, 0x4d, 0x34, 0x34, 0x32,
		0x44, 0x42, 0x37, 0x42, 0x4d, 0x4d, 0x35, 0x33, 0x31, 0x44, 0x42, 0x36, 0x42, 0x4d, 0x4d, 0x35,
		0x33, 0x31, 0x41, 0x42, 0x35, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31, 0x41, 0x42, 0x35, 0x2b, 0x42,
		0x34, 0x42, 0x4d, 0x4d, 0x34, 0x34, 0x31, 0x44, 0x42, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42,
		0x4d, 0x4d, 0x35, 0x34, 0x31, 0x42, 0x42, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4e, 0x46,
		0x43, 0x42, 0x4d, 0x4d, 0x35, 0x33, 0x31, 0x42, 0x42, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x32, 0x44, 0x42, 0x33, 0x2b,
		0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31, 0x44, 0x42, 0x33, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31, 0x57,
		0x42, 0x37, 0x52, 0x20, 0x46, 0x6f, 0x78, 0x42, 0x4d, 0x4d, 0x20, 0x35, 0x33, 0x32, 0x20, 0x53,
		0x42, 0x4d, 0x4d, 0x20, 0x35, 0x33, 0x32, 0x53, 0x42, 0x4d, 0x4d, 0x20, 0x24, 0x31, 0x42, 0x6c,
		0x61, 0x63, 0x6b, 0x70, 0x63, 0x73, 0x24, 0x31, 0x2d, 0x42, 0x4c, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x76, 0x69, 0x65, 0x77, 0x41, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x24, 0x31, 0x41, 0x38,
		0x20, 0x4d, 0x61, 0x78, 0x41, 0x38, 0x30, 0x53, 0x41, 0x33, 0x30, 0x2d, 0x52, 0x55, 0x24, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x56, 0x39, 0x30, 0x30, 0x30, 0x50, 0x72, 0x6f, 0x2d, 0x46,
		0x42, 0x56, 0x39, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x20, 0x38, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x38, 0x53, 0x48,
		0x41, 0x52, 0x4b, 0x20, 0x38, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x57, 0x41, 0x56, 0x45,
		0x20, 0x36, 0x43, 0x57, 0x61, 0x76, 0x65, 0x20, 0x36, 0x43, 0x48, 0x45, 0x52, 0x4f, 0x20, 0x31,
		0x30, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x53, 0x4f, 0x4c, 0x49, 0x44, 0x5f, 0x34, 0x47,
		0x31, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x2d, 0x34, 0x20, 0x47, 0x31, 0x53, 0x4f, 0x4c, 0x49, 0x44,
		0x20, 0x34, 0x20, 0x47, 0x32, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x2d, 0x34, 0x20, 0x47, 0x32, 0x41,
		0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x76,
		0x65, 0x20, 0x38, 0x4d, 0x45, 0x47, 0x41, 0x20, 0x31, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x31, 0x54,
		0x61, 0x62, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x31, 0x31, 0x20, 0x53, 0x45, 0x4f, 0x6d, 0x65,
		0x67, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x75, 0x70, 0x75, 0x6e, 0x6b, 0x74, 0x44,
		0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x24, 0x31, 0x43, 0x44, 0x69, 0x73, 0x63,
		0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x41, 0x31, 0x30, 0x2e, 0x33, 0x30, 0x32, 0x44, 0x69, 0x73,
		0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x31, 0x30, 0x30, 0x31, 0x41, 0x44, 0x69, 0x73, 0x63,
		0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x31, 0x30, 0x30, 0x31, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x70,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x32, 0x45, 0x6e, 0x64, 0x65, 0x61, 0x76, 0x6f, 0x75, 0x72,
		0x20, 0x24, 0x31, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x41, 0x74, 0x6c,
		0x61, 0x6e, 0x74, 0x69, 0x73, 0x5f, 0x41, 0x31, 0x30, 0x5f, 0x47, 0x34, 0x30, 0x33, 0x41, 0x74,
		0x6c, 0x61, 0x6e, 0x74, 0x69, 0x73, 0x20, 0x41, 0x31, 0x30, 0x2e, 0x47, 0x34, 0x30, 0x33, 0x41,
		0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x73, 0x20, 0x24, 0x31, 0x53, 0x4c, 0x70, 0x6c, 0x75, 0x73,
		0x30, 0x32, 0x53, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x30, 0x32, 0x42, 0x50, 0x20, 0x24,
		0x31, 0x53, 0x4d, 0x20, 0x30, 0x32, 0x20, 0x32, 0x30, 0x31, 0x39, 0x53, 0x4d, 0x20, 0x30, 0x32,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x42, 0x2d, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x42,
		0x6f, 0x78, 0x20, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x45, 0x20, 0x24, 0x31, 0x42, 0x4c,
		0x2d, 0x39, 0x31, 0x39, 0x38, 0x34, 0x35, 0x42, 0x45, 0x20, 0x63, 0x6c, 0x65, 0x76, 0x65, 0x72,
		0x20, 0x37, 0x2e, 0x30, 0x22, 0x42, 0x6c, 0x6c, 0x6f, 0x63, 0x42, 0x6c, 0x6f, 0x77, 0x4c, 0x61,
		0x73, 0x65, 0x72, 0x54, 0x41, 0x42, 0x31, 0x30, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x31, 0x30, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x54, 0x41, 0x42, 0x31,
		0x31, 0x5f, 0x34, 0x47, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x31, 0x31, 0x20, 0x34, 0x47, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x54, 0x41,
		0x42, 0x38, 0x5f, 0x34, 0x47, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x38, 0x20, 0x34, 0x47, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x54, 0x41,
		0x42, 0x31, 0x30, 0x56, 0x32, 0x32, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x56, 0x32, 0x32, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75,
		0x6d, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20, 0x24, 0x31, 0x42, 0x6c,
		0x61, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x37, 0x5f, 0x33, 0x47, 0x5f, 0x56, 0x32, 0x42, 0x6c, 0x61,
		0x63, 0x6b, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x47, 0x20, 0x56, 0x32, 0x42, 0x6c, 0x61, 0x63,
		0x6b, 0x54, 0x41, 0x42, 0x37, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33,
		0x47, 0x42, 0x6c, 0x75, 0x46, 0x39, 0x32, 0x20, 0x45, 0x20, 0x35, 0x47, 0x41, 0x64, 0x76, 0x61,
		0x6e, 0x63, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x36, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53,
		0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x58, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x74, 0x75, 0x64,
		0x69, 0x6f, 0x20, 0x58, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20,
		0x58, 0x31, 0x30, 0x20, 0x32, 0x30, 0x32, 0x32, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x58,
		0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x30, 0x32, 0x33, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x53, 0x54, 0x55, 0x44, 0x49,
		0x4f, 0x20, 0x47, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x47,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x53, 0x74,
		0x75, 0x64, 0x69, 0x6f, 0x20, 0x35, 0x2e, 0x30, 0x20, 0x4b, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f,
		0x20, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x45, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x74, 0x75, 0x64, 0x69,
		0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x54, 0x55, 0x44,
		0x49, 0x4f, 0x20, 0x4f, 0x4e, 0x45, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x4f, 0x6e, 0x65,
		0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x53, 0x74, 0x75,
		0x64, 0x69, 0x6f, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f,
		0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x24, 0x31, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f,
		0x20, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x45, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x4e, 0x65, 0x6f, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e,
		0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x44, 0x49, 0x41,
		0x4d, 0x4f, 0x4e, 0x44, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f,
		0x6e, 0x64, 0x44, 0x49, 0x41, 0x4d, 0x4f, 0x4e, 0x44, 0x20, 0x4d, 0x44, 0x69, 0x61, 0x6d, 0x6f,
		0x6e, 0x64, 0x20, 0x4d, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
		0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x58, 0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20,
		0x58, 0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x20, 0x32, 0x45, 0x4e, 0x45, 0x52,
		0x47, 0x59, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x20, 0x32, 0x45, 0x6e, 0x65, 0x72, 0x67,
		0x79, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59,
		0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x58, 0x4c, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x58, 0x4c, 0x44, 0x61, 0x73, 0x68, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54,
		0x45, 0x44, 0x41, 0x53, 0x48, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x44, 0x61, 0x73, 0x68,
		0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x61, 0x73, 0x68, 0x20, 0x34, 0x2e, 0x35, 0x44,
		0x61, 0x73, 0x68, 0x20, 0x58, 0x4c, 0x50, 0x75, 0x72, 0x65, 0x20, 0x24, 0x31, 0x50, 0x55, 0x52,
		0x45, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x50, 0x75, 0x72, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42,
		0x6f, 0x6c, 0x64, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x58,
		0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x24,
		0x31, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x4f, 0x4e, 0x45, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e,
		0x65, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x58, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x58, 0x38, 0x4c, 0x69, 0x66, 0x65,
		0x20, 0x58, 0x38, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x4d, 0x41, 0x52, 0x4b, 0x4c, 0x69, 0x66, 0x65,
		0x20, 0x4d, 0x61, 0x72, 0x6b, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4e,
		0x65, 0x6f, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x65, 0x6f, 0x20, 0x24, 0x31, 0x47,
		0x35, 0x30, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x35, 0x2e, 0x35, 0x20,
		0x48, 0x44, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x58, 0x4c, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d,
		0x32, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x24, 0x31, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x33, 0x42, 0x31, 0x31, 0x30, 0x44, 0x4c, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x42, 0x31, 0x35, 0x35, 0x30, 0x56, 0x4c, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x35, 0x47, 0x56, 0x69, 0x65, 0x77, 0x20,
		0x32, 0x42, 0x31, 0x33, 0x35, 0x44, 0x4c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x34, 0x42, 0x31, 0x34,
		0x30, 0x44, 0x4c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x56, 0x49, 0x45, 0x57, 0x20, 0x31, 0x56,
		0x69, 0x65, 0x77, 0x20, 0x31, 0x52, 0x31, 0x20, 0x48, 0x44, 0x52, 0x32, 0x20, 0x4c, 0x54, 0x45,
		0x52, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x24, 0x31, 0x20, 0x28, 0x32, 0x30, 0x24,
		0x32, 0x29, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x24, 0x31,
		0x2e, 0x30, 0x22, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50,
		0x72, 0x6f, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x56, 0x49, 0x56,
		0x4f, 0x20, 0x41, 0x49, 0x52, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x41, 0x69,
		0x72, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x47,
		0x37, 0x43, 0x35, 0x20, 0x24, 0x31, 0x43, 0x24, 0x31, 0x4c, 0x20, 0x28, 0x32, 0x30, 0x24, 0x32,
		0x29, 0x43, 0x35, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x35, 0x4c, 0x20, 0x4d, 0x61, 0x78,
		0x43, 0x24, 0x31, 0x4c, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x56,
		0x69, 0x76, 0x6f, 0x20, 0x35, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x4f,
		0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x30, 0x31, 0x39, 0x56, 0x69, 0x76, 0x6f,
		0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x56, 0x69, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x76, 0x6f,
		0x20, 0x24, 0x31, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x47, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x62,
		0x6f, 0x6f, 0x6b, 0x20, 0x4d, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x24, 0x31, 0x4c, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x24, 0x31, 0x4c, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x38, 0x4c, 0x20, 0x28,
		0x24, 0x31, 0x29, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x49,
		0x49, 0x44, 0x61, 0x73, 0x68, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x75, 0x53, 0x6c, 0x61, 0x74, 0x65,
		0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x75, 0x62, 0x6f, 0x6f, 0x4d, 0x61, 0x79, 0x61, 0x20,
		0x42, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x61, 0x79, 0x61, 0x58, 0x66, 0x69, 0x72, 0x65, 0x32, 0x58,
		0x66, 0x69, 0x72, 0x65, 0x20, 0x32, 0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x34, 0x47,
		0x58, 0x66, 0x69, 0x72, 0x65, 0x44, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x38, 0x5f, 0x70,
		0x6c, 0x75, 0x73, 0x5f, 0x61, 0x53, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x38, 0x61, 0x44,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x36, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x6b, 0x79, 0x42,
		0x53, 0x53, 0x24, 0x31, 0x42, 0x6c, 0x75, 0x65, 0x62, 0x69, 0x72, 0x64, 0x42, 0x6c, 0x75, 0x65,
		0x64, 0x6f, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x67, 0x6f, 0x6f, 0x64, 0x42, 0x4c, 0x55, 0x45, 0x47,
		0x4f, 0x4f, 0x44, 0x56, 0x36, 0x42, 0x6c, 0x75, 0x65, 0x77, 0x61, 0x76, 0x65, 0x33, 0x33, 0x47,
		0x54, 0x20, 0x48, 0x44, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x20, 0x48, 0x44, 0x2b, 0x57, 0x56,
		0x38, 0x52, 0x2d, 0x4d, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x20, 0x52, 0x65, 0x64, 0x20, 0x4d,
		0x61, 0x72, 0x73, 0x68, 0x6d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x56, 0x38, 0x2d, 0x4d, 0x57,
		0x61, 0x76, 0x65, 0x20, 0x38, 0x57, 0x56, 0x38, 0x2d, 0x4c, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38,
		0x20, 0x52, 0x65, 0x64, 0x20, 0x4e, 0x6f, 0x75, 0x67, 0x61, 0x74, 0x42, 0x6d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x41, 0x58, 0x37, 0x4f, 0x4f, 0x41, 0x58, 0x37, 0x30, 0x30, 0x46, 0x55, 0x4e, 0x20,
		0x34, 0x20, 0x32, 0x30, 0x31, 0x38, 0x46, 0x75, 0x6e, 0x20, 0x34, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x38, 0x29, 0x42, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x34, 0x30, 0x42, 0x4c, 0x36,
		0x30, 0x42, 0x4c, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x36, 0x33, 0x42, 0x4c, 0x36,
		0x30, 0x4d, 0x5f, 0x4d, 0x56, 0x30, 0x35, 0x42, 0x4c, 0x36, 0x30, 0x4d, 0x42, 0x35, 0x30, 0x50,
		0x72, 0x6f, 0x42, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x35, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x42, 0x4c, 0x24, 0x31, 0x42, 0x4c, 0x35, 0x31, 0x42, 0x4c, 0x35, 0x33, 0x42, 0x4c, 0x35,
		0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x36, 0x24, 0x31, 0x42, 0x6f, 0x62, 0x61, 0x72, 0x72,
		0x79, 0x4b, 0x31, 0x30, 0x20, 0x53, 0x45, 0x42, 0x6f, 0x6c, 0x76, 0x61, 0x42, 0x2d, 0x54, 0x41,
		0x42, 0x31, 0x30, 0x32, 0x31, 0x42, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x6e, 0x42, 0x6f, 0x6f, 0x73,
		0x74, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6b,
		0x61, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x42, 0x6f, 0x74, 0x65, 0x63, 0x68, 0x57, 0x7a, 0x6f, 0x6e,
		0x65, 0x42, 0x6f, 0x77, 0x61, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x4c,
		0x31, 0x66, 0x2d, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x4c, 0x31, 0x66, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x42, 0x72, 0x61, 0x6e, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x42, 0x36, 0x53, 0x42, 0x36, 0x53,
		0x42, 0x72, 0x61, 0x6e, 0x64, 0x74, 0x42, 0x52, 0x41, 0x4e, 0x44, 0x54, 0x20, 0x46, 0x48, 0x44,
		0x20, 0x54, 0x56, 0x46, 0x48, 0x44, 0x20, 0x54, 0x56, 0x42, 0x72, 0x61, 0x76, 0x69, 0x73, 0x41,
		0x35, 0x30, 0x31, 0x20, 0x42, 0x52, 0x49, 0x47, 0x48, 0x54, 0x41, 0x35, 0x30, 0x31, 0x20, 0x42,
		0x72, 0x69, 0x67, 0x68, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x72,
		0x79, 0x73, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x54, 0x61,
		0x75, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x42, 0x35, 0x30, 0x31, 0x45,
		0x61, 0x73, 0x79, 0x4e, 0x31, 0x2d, 0x35, 0x37, 0x30, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x35,
		0x35, 0x34, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x35, 0x30, 0x30, 0x20, 0x44, 0x69, 0x61,
		0x6d, 0x6f, 0x6e, 0x64, 0x41, 0x35, 0x30, 0x35, 0x20, 0x4a, 0x4f, 0x59, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x41, 0x35, 0x30, 0x35, 0x20, 0x4a, 0x6f, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35,
		0x35, 0x32, 0x20, 0x4a, 0x4f, 0x59, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x35, 0x35, 0x32, 0x20, 0x4a,
		0x6f, 0x79, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x20, 0x41, 0x35, 0x35, 0x31,
		0x41, 0x35, 0x35, 0x31, 0x20, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x41, 0x35, 0x30, 0x33, 0x20, 0x4a,
		0x6f, 0x79, 0x41, 0x35, 0x30, 0x34, 0x20, 0x54, 0x72, 0x61, 0x63, 0x65, 0x41, 0x35, 0x31, 0x32,
		0x20, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x35, 0x31, 0x31,
		0x20, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x41, 0x35, 0x31, 0x30, 0x5f, 0x4a, 0x65, 0x61,
		0x6e, 0x73, 0x5f, 0x34, 0x47, 0x41, 0x35, 0x31, 0x30, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x20,
		0x34, 0x47, 0x41, 0x35, 0x30, 0x39, 0x5f, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x41, 0x35, 0x30, 0x39,
		0x20, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4e, 0x45, 0x4f,
		0x41, 0x34, 0x30, 0x31, 0x20, 0x4e, 0x65, 0x6f, 0x4e, 0x31, 0x5f, 0x35, 0x35, 0x30, 0x5f, 0x43,
		0x72, 0x75, 0x69, 0x73, 0x65, 0x72, 0x4e, 0x31, 0x2d, 0x35, 0x35, 0x30, 0x20, 0x43, 0x72, 0x75,
		0x69, 0x73, 0x65, 0x72, 0x4e, 0x31, 0x5f, 0x35, 0x35, 0x31, 0x20, 0x47, 0x6c, 0x6f, 0x73, 0x73,
		0x4e, 0x31, 0x2d, 0x35, 0x35, 0x31, 0x20, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x42, 0x52, 0x41, 0x56,
		0x49, 0x53, 0x20, 0x4f, 0x4d, 0x45, 0x47, 0x41, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x42, 0x52, 0x41,
		0x56, 0x49, 0x53, 0x20, 0x42, 0x49, 0x5a, 0x42, 0x69, 0x7a, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53,
		0x20, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x53, 0x6c, 0x69, 0x6d, 0x20, 0x33, 0x47, 0x4e, 0x50, 0x20, 0x31, 0x30, 0x34, 0x20, 0x33, 0x47,
		0x4e, 0x50, 0x31, 0x30, 0x34, 0x20, 0x33, 0x47, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4e,
		0x50, 0x20, 0x31, 0x30, 0x33, 0x4e, 0x50, 0x31, 0x30, 0x33, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53,
		0x20, 0x4e, 0x50, 0x20, 0x37, 0x34, 0x37, 0x20, 0x53, 0x44, 0x4e, 0x50, 0x37, 0x34, 0x37, 0x20,
		0x53, 0x44, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4e, 0x50, 0x20, 0x38, 0x34, 0x34, 0x4e,
		0x50, 0x38, 0x34, 0x34, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x42, 0x72,
		0x69, 0x67, 0x6d, 0x74, 0x6f, 0x6e, 0x42, 0x54, 0x50, 0x43, 0x2d, 0x42, 0x54, 0x50, 0x43, 0x2d,
		0x31, 0x30, 0x32, 0x32, 0x51, 0x43, 0x33, 0x47, 0x2d, 0x54, 0x56, 0x42, 0x72, 0x6f, 0x6e, 0x64,
		0x69, 0x43, 0x45, 0x4e, 0x54, 0x55, 0x52, 0x49, 0x4f, 0x4e, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x41,
		0x44, 0x49, 0x41, 0x54, 0x4f, 0x52, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x4f, 0x52, 0x59, 0x20, 0x24,
		0x31, 0x4c, 0x55, 0x58, 0x55, 0x52, 0x59, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x64, 0x6e, 0x69, 0x67,
		0x68, 0x74, 0x20, 0x53, 0x6b, 0x79, 0x53, 0x45, 0x4e, 0x53, 0x55, 0x45, 0x4c, 0x4c, 0x45, 0x20,
		0x24, 0x31, 0x56, 0x49, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x20, 0x24, 0x31, 0x41, 0x4d, 0x49, 0x43,
		0x4f, 0x5f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x34, 0x47, 0x41,
		0x6d, 0x69, 0x63, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x34, 0x47, 0x41, 0x6d, 0x69, 0x63, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x24, 0x31, 0x53, 0x55, 0x52, 0x46, 0x49, 0x4e, 0x47, 0x20, 0x54, 0x41, 0x42,
		0x20, 0x24, 0x31, 0x42, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x67, 0x75, 0x6d, 0x42, 0x75, 0x6e, 0x64,
		0x79, 0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x42, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x42, 0x2d, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x75, 0x73, 0x68, 0x42,
		0x75, 0x73, 0x68, 0x31, 0x30, 0x4e, 0x6f, 0x75, 0x31, 0x30, 0x4e, 0x6f, 0x75, 0x53, 0x70, 0x69,
		0x72, 0x61, 0x20, 0x42, 0x31, 0x20, 0x24, 0x31, 0x22, 0x24, 0x31, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x42, 0x55, 0x53, 0x48, 0x20, 0x53, 0x70, 0x69, 0x72, 0x61, 0x20, 0x42, 0x32, 0x20, 0x35,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x70, 0x69, 0x72, 0x61,
		0x20, 0x42, 0x32, 0x20, 0x35, 0x22, 0x42, 0x75, 0x7a, 0x7a, 0x54, 0x56, 0x43, 0x20, 0x49, 0x64,
		0x65, 0x61, 0x43, 0x4d, 0x24, 0x31, 0x30, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x35, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x6e, 0x6f, 0x61, 0x20, 0x58, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4e, 0x6f, 0x61, 0x20, 0x58, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6e, 0x6f, 0x61, 0x5f,
		0x47, 0x31, 0x4e, 0x6f, 0x61, 0x20, 0x47, 0x31, 0x6e, 0x6f, 0x61, 0x58, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x4e, 0x6f, 0x61, 0x20, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x4f, 0x41, 0x54,
		0x41, 0x42, 0x4e, 0x6f, 0x61, 0x20, 0x54, 0x61, 0x62, 0x43, 0x41, 0x44, 0x45, 0x4e, 0x41, 0x43,
		0x41, 0x47, 0x49, 0x43, 0x41, 0x47, 0x49, 0x2d, 0x43, 0x41, 0x47, 0x49, 0x2d, 0x4f, 0x4d, 0x45,
		0x47, 0x41, 0x43, 0x43, 0x49, 0x54, 0x58, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56,
		0x6f, 0x67, 0x75, 0x65, 0x20, 0x34, 0x30, 0x35, 0x4b, 0x54, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x43, 0x45, 0x4e, 0x54, 0x45, 0x4b, 0x43, 0x54, 0x2d, 0x24, 0x31, 0x43, 0x45, 0x50, 0x54, 0x45,
		0x52, 0x43, 0x47, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20,
		0x24, 0x31, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x36, 0x45, 0x4f, 0x4e, 0x20, 0x42, 0x6c, 0x61,
		0x7a, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x4f, 0x4e, 0x20, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20,
		0x47, 0x6f, 0x6c, 0x64, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x43, 0x47, 0x56, 0x43,
		0x48, 0x43, 0x4e, 0x41, 0x56, 0x43, 0x4b, 0x4b, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x44,
		0x55, 0x4b, 0x45, 0x20, 0x24, 0x31, 0x44, 0x55, 0x4b, 0x45, 0x20, 0x32, 0x43, 0x4f, 0x4d, 0x50,
		0x55, 0x4d, 0x41, 0x58, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x31, 0x30, 0x42, 0x6c, 0x75, 0x65, 0x20,
		0x53, 0x31, 0x30, 0x43, 0x4f, 0x4f, 0x44, 0x2d, 0x45, 0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x20,
		0x34, 0x4b, 0x43, 0x4f, 0x52, 0x4e, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x38, 0x20, 0x33, 0x47,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x52, 0x24, 0x31, 0x30, 0x54, 0x72, 0x6f, 0x6e, 0x69, 0x6b,
		0x20, 0x24, 0x31, 0x43, 0x24, 0x31, 0x43, 0x4f, 0x59, 0x4f, 0x54, 0x45, 0x31, 0x30, 0x39, 0x30,
		0x20, 0x44, 0x56, 0x52, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f,
		0x43, 0x55, 0x42, 0x4f, 0x54, 0x54, 0x41, 0x42, 0x20, 0x4b, 0x49, 0x4e, 0x47, 0x4b, 0x4f, 0x4e,
		0x47, 0x54, 0x61, 0x62, 0x20, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x50, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x68, 0x65,
		0x65, 0x74, 0x61, 0x68, 0x24, 0x31, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x20, 0x32, 0x52,
		0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x20, 0x32, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x52,
		0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x44, 0x49, 0x4e, 0x4f, 0x53, 0x41, 0x55, 0x52, 0x44, 0x69,
		0x6e, 0x6f, 0x73, 0x61, 0x75, 0x72, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x41,
		0x58, 0x4b, 0x49, 0x4e, 0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x41, 0x43, 0x45, 0x20, 0x33, 0x4b,
		0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x41, 0x63, 0x65, 0x20, 0x33, 0x4b, 0x69,
		0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x53, 0x74, 0x61, 0x72, 0x4b, 0x49, 0x4e, 0x47,
		0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69,
		0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x24, 0x31, 0x4b, 0x49, 0x4e, 0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x5f, 0x4d, 0x49, 0x4e, 0x49,
		0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x49,
		0x4e, 0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67,
		0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20,
		0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x4b, 0x49, 0x4e, 0x47, 0x20, 0x4b, 0x4f, 0x4e, 0x47,
		0x20, 0x43, 0x53, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x43, 0x53, 0x4b,
		0x49, 0x4e, 0x47, 0x20, 0x4b, 0x4f, 0x4e, 0x47, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e,
		0x67, 0x51, 0x55, 0x45, 0x53, 0x54, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x51, 0x75, 0x65, 0x73, 0x74,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x55, 0x45, 0x53, 0x54, 0x51, 0x75, 0x65, 0x73, 0x74, 0x58,
		0x32, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x58, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x4f, 0x52,
		0x52, 0x4f, 0x20, 0x30, 0x30, 0x31, 0x5a, 0x6f, 0x72, 0x72, 0x6f, 0x20, 0x30, 0x30, 0x31, 0x4d,
		0x61, 0x6e, 0x69, 0x74, 0x6f, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4d, 0x61, 0x78, 0x20, 0x24, 0x31,
		0x4e, 0x4f, 0x54, 0x45, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x32, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x53, 0x43, 0x55, 0x42, 0x4f, 0x54, 0x5f, 0x4e, 0x4f, 0x56, 0x41, 0x4e,
		0x6f, 0x76, 0x61, 0x43, 0x55, 0x42, 0x4f, 0x54, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x43, 0x55,
		0x42, 0x4f, 0x54, 0x5f, 0x58, 0x31, 0x38, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x31, 0x38, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x48, 0x61, 0x66, 0x75, 0x72, 0x79, 0x20, 0x56, 0x31, 0x43, 0x56, 0x54,
		0x45, 0x43, 0x61, 0x6d, 0x66, 0x6f, 0x6e, 0x65, 0x46, 0x75, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x20,
		0x37, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6e, 0x61, 0x69, 0x6d, 0x61, 0x43, 0x61, 0x6e, 0x61,
		0x6c, 0x20, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x4f, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x63,
		0x65, 0x43, 0x61, 0x6e, 0x61, 0x6c, 0x2b, 0x43, 0x41, 0x4e, 0x41, 0x4c, 0x20, 0x50, 0x4c, 0x55,
		0x53, 0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x43, 0x61, 0x6e, 0x67, 0x75, 0x72, 0x6f, 0x43, 0x61,
		0x70, 0x69, 0x74, 0x65, 0x6c, 0x43, 0x61, 0x70, 0x74, 0x69, 0x76, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x24, 0x31, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x43,
		0x61, 0x72, 0x62, 0x6f, 0x6e, 0x20, 0x31, 0x20, 0x4d, 0x61, 0x72, 0x6b, 0x20, 0x49, 0x49, 0x4f,
		0x6e, 0x65, 0x20, 0x4d, 0x61, 0x72, 0x6b, 0x20, 0x49, 0x49, 0x43, 0x61, 0x72, 0x72, 0x65, 0x66,
		0x6f, 0x75, 0x72, 0x43, 0x54, 0x38, 0x32, 0x30, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x4e, 0x65, 0x6f, 0x32, 0x43, 0x54, 0x24, 0x31, 0x43, 0x61, 0x73,
		0x69, 0x6f, 0x47, 0x27, 0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x61, 0x76, 0x69, 0x6e, 0x65, 0x47,
		0x27, 0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x47, 0x27,
		0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x20, 0x34, 0x47,
		0x20, 0x4c, 0x54, 0x45, 0x43, 0x61, 0x73, 0x70, 0x65, 0x72, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31, 0x43, 0x41, 0x53, 0x50, 0x45,
		0x52, 0x5f, 0x56, 0x49, 0x41, 0x5f, 0x45, 0x31, 0x63, 0x56, 0x49, 0x41, 0x20, 0x45, 0x31, 0x43,
		0x4c, 0x31, 0x30, 0x20, 0x34, 0x2e, 0x35, 0x47, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31, 0x20, 0x33,
		0x47, 0x43, 0x61, 0x74, 0x42, 0x31, 0x35, 0x51, 0x43, 0x41, 0x54, 0x20, 0x42, 0x33, 0x35, 0x42,
		0x33, 0x35, 0x53, 0x36, 0x31, 0x53, 0x36, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x32, 0x32, 0x20,
		0x46, 0x4c, 0x49, 0x50, 0x53, 0x32, 0x32, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x43, 0x61, 0x76, 0x69,
		0x6f, 0x6e, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x42, 0x61, 0x73, 0x65,
		0x20, 0x35, 0x2e, 0x30, 0x22, 0x43, 0x41, 0x56, 0x49, 0x4f, 0x4e, 0x5f, 0x31, 0x30, 0x5f, 0x33,
		0x47, 0x52, 0x51, 0x42, 0x61, 0x73, 0x65, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x52, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x31, 0x22, 0x20, 0x51, 0x75, 0x61,
		0x64, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x32, 0x22, 0x20, 0x51, 0x75, 0x61, 0x64, 0x43,
		0x61, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x31, 0x30, 0x42, 0x61, 0x73,
		0x65, 0x20, 0x31, 0x30, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20,
		0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20,
		0x37, 0x20, 0x51, 0x75, 0x61, 0x64, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20,
		0x51, 0x75, 0x61, 0x64, 0x42, 0x61, 0x73, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x33,
		0x47, 0x20, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x43, 0x65, 0x69, 0x62, 0x61, 0x6c, 0x41, 0x43,
		0x52, 0x55, 0x58, 0xc3, 0x81, 0x63, 0x72, 0x75, 0x78, 0x42, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x52,
		0x49, 0x58, 0x42, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x72, 0x69, 0x78, 0x42, 0x45, 0x54, 0x45, 0x4c,
		0x47, 0x45, 0x55, 0x53, 0x45, 0x42, 0x65, 0x74, 0x65, 0x6c, 0x67, 0x65, 0x75, 0x73, 0x65, 0x4b,
		0x69, 0x6c, 0x2d, 0x38, 0x32, 0x57, 0x46, 0x44, 0x43, 0x4b, 0x69, 0x6c, 0x61, 0x6e, 0x64, 0x20,
		0x54, 0x38, 0x43, 0x65, 0x6c, 0x63, 0x75, 0x73, 0x43, 0x65, 0x6c, 0x6b, 0x6f, 0x6e, 0x34, 0x47,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x38, 0x4d, 0x69, 0x6c, 0x6c, 0x65, 0x6e, 0x6e, 0x69, 0x61, 0x20,
		0x48, 0x65, 0x72, 0x6f, 0x32, 0x47, 0x42, 0x53, 0x74, 0x61, 0x72, 0x32, 0x47, 0x42, 0x20, 0x53,
		0x74, 0x61, 0x72, 0x32, 0x47, 0x42, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x32, 0x47, 0x42, 0x20,
		0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x51, 0x20, 0x32, 0x51, 0x34, 0x47, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x55, 0x6e, 0x69, 0x51, 0x43, 0x65, 0x6c, 0x6c, 0x2d, 0x43, 0x53, 0x75,
		0x6d, 0x6d, 0x69, 0x74, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x43, 0x45, 0x4c, 0x4c, 0x43,
		0x5f, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x65, 0x6c,
		0x6c, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x32, 0x50,
		0x6c, 0x75, 0x73, 0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x43, 0x48, 0x49, 0x43, 0x5f, 0x58, 0x31, 0x43, 0x68, 0x69, 0x63, 0x20, 0x58, 0x31, 0x43,
		0x65, 0x6c, 0x6c, 0x61, 0x63, 0x6f, 0x6d, 0x53, 0x36, 0x32, 0x53, 0x35, 0x31, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x58, 0x35, 0x30, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x43, 0x65, 0x6c, 0x6c,
		0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x73, 0x6d, 0x61, 0x73, 0x20, 0x24, 0x31, 0x43, 0x6f,
		0x73, 0x6d, 0x61, 0x73, 0x50, 0x41, 0x44, 0x55, 0x41, 0x50, 0x61, 0x64, 0x75, 0x61, 0x43, 0x65,
		0x6e, 0x74, 0x72, 0x69, 0x63, 0x50, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x33, 0x47, 0x31,
		0x43, 0x68, 0x61, 0x69, 0x6e, 0x77, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x68, 0x6f, 0x6e,
		0x67, 0x48, 0x4f, 0x4e, 0x20, 0x48, 0x30, 0x31, 0x48, 0x4f, 0x4e, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x48, 0x30, 0x31, 0x47, 0x48, 0x4f, 0x4e, 0x47, 0x56, 0x31, 0x32, 0x56, 0x31, 0x32, 0x43,
		0x68, 0x65, 0x72, 0x72, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x72,
		0x65, 0x20, 0x48, 0x44, 0x20, 0x24, 0x31, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x5f, 0x48, 0x44, 0x5f,
		0x4d, 0x41, 0x58, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x4d, 0x61, 0x78, 0x46,
		0x4c, 0x41, 0x52, 0x45, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x46,
		0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4a, 0x24, 0x31,
		0x73, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x46,
		0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x65, 0x6c, 0x75, 0x78, 0x65, 0x46, 0x6c,
		0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x72,
		0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x58, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46,
		0x6c, 0x61, 0x72, 0x65, 0x20, 0x4a, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x72,
		0x65, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x41, 0x35,
		0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x58, 0x20, 0x56, 0x24, 0x31, 0x46, 0x6c, 0x61, 0x72, 0x65,
		0x20, 0x58, 0x4c, 0x20, 0x32, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x5f, 0x4a, 0x32, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x46,
		0x6c, 0x61, 0x72, 0x65, 0x20, 0x4a, 0x32, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x46, 0x6c,
		0x61, 0x72, 0x65, 0x20, 0x53, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x6c,
		0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x53,
		0x35, 0x4c, 0x69, 0x74, 0x65, 0x44, 0x54, 0x56, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x35,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x44, 0x54, 0x56, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53,
		0x32, 0x20, 0x44, 0x54, 0x56, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x53, 0x33,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x58, 0x4c, 0x20, 0x32, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20,
		0x48, 0x44, 0x20, 0x24, 0x31, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x5f, 0x48, 0x44, 0x5f, 0x44, 0x75,
		0x6f, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x48, 0x44, 0x20, 0x44, 0x75, 0x6f, 0x4f, 0x6d, 0x65,
		0x67, 0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x4f, 0x6d,
		0x65, 0x67, 0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x32, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x58, 0x53, 0x70,
		0x69, 0x6e, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x5f, 0x54,
		0x77, 0x6f, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x54, 0x77, 0x6f, 0x44, 0x65, 0x73, 0x69,
		0x72, 0x65, 0x20, 0x52, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x44, 0x65, 0x73, 0x69, 0x72,
		0x65, 0x20, 0x52, 0x36, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20,
		0x52, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x52, 0x36,
		0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x52, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44,
		0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x52, 0x24, 0x31, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20,
		0x45, 0x79, 0x65, 0x43, 0x4f, 0x53, 0x4d, 0x4f, 0x53, 0x20, 0x54, 0x48, 0x52, 0x45, 0x45, 0x43,
		0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x20, 0x33, 0x43, 0x55, 0x42, 0x49, 0x58, 0x20, 0x43, 0x55, 0x42,
		0x45, 0x20, 0x33, 0x43, 0x75, 0x62, 0x69, 0x78, 0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x33, 0x52,
		0x65, 0x76, 0x65, 0x6c, 0x20, 0x33, 0x47, 0x52, 0x61, 0x64, 0x61, 0x72, 0x20, 0x44, 0x65, 0x6c,
		0x75, 0x78, 0x65, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x52, 0x61,
		0x64, 0x61, 0x72, 0x20, 0x44, 0x65, 0x6c, 0x75, 0x78, 0x65, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65,
		0x72, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x32, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65,
		0x72, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65,
		0x72, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x54, 0x56,
		0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f,
		0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x56, 0x24,
		0x31, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x75, 0x72, 0x61, 0x20, 0x33, 0x73, 0x46,
		0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x75, 0x72, 0x61, 0x20, 0x33, 0x53, 0x4d, 0x41, 0x49,
		0x41, 0x20, 0x50, 0x41, 0x44, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61, 0x69, 0x61, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x68, 0x69, 0x63, 0x6f, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x42, 0x6f, 0x6d, 0x62, 0x6f, 0x41, 0x6c, 0x74,
		0x6f, 0x20, 0x42, 0x6f, 0x6d, 0x62, 0x6f, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x63, 0x6c, 0x61, 0x73,
		0x73, 0x69, 0x63, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x41,
		0x56, 0x41, 0x4e, 0x43, 0x45, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x41, 0x76, 0x61,
		0x6e, 0x63, 0x65, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x41, 0x4c, 0x54, 0x4f, 0x20,
		0x45, 0x73, 0x74, 0x72, 0x65, 0x6c, 0x6c, 0x61, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x45, 0x73, 0x74,
		0x72, 0x65, 0x6c, 0x6c, 0x61, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x4a, 0x55, 0x45, 0x47, 0x4f, 0x41,
		0x6c, 0x74, 0x6f, 0x20, 0x4a, 0x75, 0x65, 0x67, 0x6f, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x53, 0x55,
		0x42, 0x49, 0x52, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x53, 0x75, 0x62, 0x69, 0x72, 0x41, 0x6c, 0x74,
		0x6f, 0x20, 0x24, 0x31, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x24, 0x31, 0x4f, 0x4a, 0x4f, 0x53, 0x20,
		0x4e, 0x55, 0x42, 0x45, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x4e, 0x75, 0x62, 0x65, 0x4f, 0x4a, 0x4f,
		0x53, 0x20, 0x43, 0x41, 0x4d, 0x42, 0x49, 0x4f, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x43, 0x61, 0x6d,
		0x62, 0x69, 0x6f, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x4f, 0x52, 0x4f, 0x4f, 0x6a, 0x6f, 0x73, 0x20,
		0x4f, 0x72, 0x6f, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x4c, 0x55, 0x4e, 0x41, 0x4f, 0x6a, 0x6f, 0x73,
		0x20, 0x4c, 0x75, 0x6e, 0x61, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x43, 0x49, 0x45, 0x4c, 0x4f, 0x4f,
		0x6a, 0x6f, 0x73, 0x20, 0x43, 0x69, 0x65, 0x6c, 0x6f, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x50, 0x4c,
		0x55, 0x53, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x4a, 0x4f, 0x53, 0x20,
		0x56, 0x49, 0x56, 0x49, 0x52, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x56, 0x69, 0x76, 0x69, 0x72, 0x4f,
		0x4a, 0x4f, 0x53, 0x20, 0x44, 0x4f, 0x53, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x4f, 0x6a, 0x6f, 0x73,
		0x20, 0x44, 0x4f, 0x53, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x44, 0x4f,
		0x53, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x44, 0x4f, 0x53, 0x46, 0x55, 0x45, 0x47, 0x4f, 0x20, 0x4d,
		0x41, 0x58, 0x46, 0x75, 0x65, 0x67, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x68, 0x69, 0x6c, 0x69,
		0x47, 0x72, 0x65, 0x65, 0x6e, 0x45, 0x2d, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x24, 0x31, 0x43,
		0x68, 0x69, 0x6e, 0x61, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x36, 0x35, 0x31, 0x43,
		0x59, 0x43, 0x4d, 0x43, 0x43, 0x2d, 0x4d, 0x38, 0x36, 0x30, 0x4e, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x36, 0x35, 0x33, 0x41, 0x33, 0x73, 0x4d, 0x37, 0x36, 0x32, 0x47, 0x43, 0x68, 0x69, 0x6e,
		0x61, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x54, 0x59, 0x48, 0x36, 0x32, 0x32, 0x4d,
		0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x31, 0x31, 0x20, 0x35, 0x47, 0x54, 0x59, 0x48,
		0x36, 0x31, 0x31, 0x4d, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x31, 0x30, 0x20, 0x53,
		0x45, 0x20, 0x35, 0x47, 0x54, 0x59, 0x48, 0x36, 0x31, 0x32, 0x4d, 0x4d, 0x61, 0x69, 0x6d, 0x61,
		0x6e, 0x67, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x54, 0x59, 0x48, 0x36, 0x33, 0x32, 0x4d, 0x4d,
		0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x41, 0x32, 0x30, 0x20, 0x35, 0x47, 0x54, 0x59, 0x48,
		0x36, 0x33, 0x31, 0x4d, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x32, 0x30, 0x20, 0x35,
		0x47, 0x54, 0x59, 0x48, 0x32, 0x31, 0x31, 0x55, 0x54, 0x69, 0x61, 0x6e, 0x79, 0x69, 0x20, 0x4f,
		0x6e, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x54, 0x59, 0x48, 0x32, 0x30, 0x31, 0x48,
		0x54, 0x69, 0x61, 0x6e, 0x79, 0x69, 0x20, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x75, 0x77, 0x69, 0x48,
		0x69, 0x38, 0x24, 0x31, 0x20, 0x51, 0x75, 0x61, 0x64, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x24, 0x31, 0x20, 0x24, 0x32, 0x48, 0x69, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x69, 0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x58, 0x48, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f,
		0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x48, 0x69, 0x24, 0x31,
		0x20, 0x41, 0x69, 0x72, 0x48, 0x69, 0x38, 0x20, 0x53, 0x45, 0x48, 0x69, 0x31, 0x30, 0x20, 0x58,
		0x50, 0x72, 0x6f, 0x48, 0x69, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x31, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x31, 0x30,
		0x53, 0x75, 0x72, 0x50, 0x61, 0x64, 0x48, 0x69, 0x42, 0x6f, 0x78, 0x20, 0x48, 0x65, 0x72, 0x6f,
		0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x43, 0x69, 0x74, 0x79, 0x63, 0x61, 0x6c,
		0x6c, 0x43, 0x6c, 0x61, 0x72, 0x65, 0x73, 0x74, 0x61, 0x41, 0x69, 0x72, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x24, 0x31, 0x43, 0x6c, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x42, 0x38, 0x4c, 0x69, 0x74,
		0x65, 0x42, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x38, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x38,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x35, 0x50, 0x72, 0x6f, 0x42, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x43, 0x6c, 0x65, 0x61, 0x72, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x43, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
		0x74, 0x6f, 0x6e, 0x69, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x28, 0x24, 0x31, 0x29,
		0x4d, 0x46, 0x43, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x46, 0x43, 0x5f, 0x38, 0x43, 0x6c, 0x65, 0x6d, 0x70,
		0x61, 0x64, 0x20, 0x38, 0x43, 0x4c, 0x45, 0x4d, 0x50, 0x41, 0x44, 0x5f, 0x37, 0x5f, 0x53, 0x43,
		0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x37, 0x53, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64,
		0x20, 0x24, 0x31, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x43,
		0x6c, 0x6f, 0x75, 0x64, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x43, 0x35, 0x5f, 0x45,
		0x6c, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x43, 0x35, 0x20, 0x45,
		0x6c, 0x69, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x6e, 0x65, 0x54, 0x68, 0x72,
		0x69, 0x6c, 0x6c, 0x20, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x24, 0x31, 0x54,
		0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x54, 0x68, 0x72, 0x69, 0x6c,
		0x6c, 0x20, 0x53, 0x6e, 0x61, 0x70, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x31, 0x36, 0x47, 0x42, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
		0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c,
		0x20, 0x48, 0x44, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x32, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x45,
		0x78, 0x63, 0x69, 0x74, 0x65, 0x43, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x43, 0x4e, 0x42,
		0x41, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x70, 0x61, 0x64, 0x2b, 0x56,
		0x54, 0x24, 0x31, 0x2b, 0x56, 0x54, 0x51, 0x24, 0x31, 0x43, 0x6c, 0x6f, 0x75, 0x74, 0x48, 0x69,
		0x6e, 0x64, 0x20, 0x35, 0x2e, 0x31, 0x58, 0x34, 0x31, 0x37, 0x20, 0x41, 0x6d, 0x61, 0x7a, 0x65,
		0x58, 0x34, 0x31, 0x38, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x58, 0x34, 0x32, 0x31, 0x20, 0x4e, 0x6f,
		0x76, 0x61, 0x58, 0x34, 0x32, 0x32, 0x20, 0x45, 0x78, 0x6f, 0x74, 0x69, 0x63, 0x58, 0x34, 0x32,
		0x35, 0x20, 0x53, 0x68, 0x61, 0x76, 0x69, 0x74, 0x58, 0x34, 0x32, 0x38, 0x20, 0x41, 0x73, 0x74,
		0x75, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x65, 0x6b, 0x43, 0x6e, 0x4d, 0x43,
		0x6e, 0x4d, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x43, 0x6f,
		0x62, 0x61, 0x6c, 0x74, 0x53, 0x4d, 0x24, 0x31, 0x54, 0x24, 0x31, 0x20, 0x33, 0x47, 0x54, 0x24,
		0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x43, 0x6f, 0x62, 0x79, 0x20, 0x4b, 0x79, 0x72, 0x6f, 0x73,
		0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x31, 0x41, 0x50, 0x72,
		0x69, 0x64, 0x65, 0x20, 0x37, 0x53, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x31, 0x45, 0x50, 0x72,
		0x69, 0x64, 0x65, 0x20, 0x35, 0x43, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x35, 0x58, 0x50, 0x72,
		0x69, 0x64, 0x65, 0x20, 0x31, 0x58, 0x43, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x64, 0x65, 0x20, 0x54,
		0x65, 0x73, 0x6c, 0x61, 0x45, 0x76, 0x6f, 0x20, 0x35, 0x2e, 0x30, 0x49, 0x6d, 0x70, 0x75, 0x6c,
		0x73, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4f, 0x43, 0x54, 0x41, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x2e, 0x31, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x2e,
		0x24, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x54,
		0x65, 0x73, 0x6c, 0x61, 0x5f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x37, 0x38, 0x35, 0x37,
		0x2e, 0x38, 0x35, 0x22, 0x54, 0x54, 0x48, 0x37, 0x48, 0x37, 0x54, 0x54, 0x4c, 0x37, 0x20, 0x42,
		0x75, 0x69, 0x6c, 0x64, 0x4c, 0x37, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x5f, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x5f, 0x4c, 0x37, 0x5f, 0x33, 0x47, 0x4c, 0x37, 0x20, 0x33, 0x47, 0x54, 0x54, 0x4c,
		0x37, 0x31, 0x33, 0x47, 0x4c, 0x37, 0x2e, 0x31, 0x20, 0x33, 0x47, 0x54, 0x54, 0x4c, 0x38, 0x20,
		0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x38, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x5f, 0x54, 0x41, 0x42,
		0x4c, 0x45, 0x54, 0x5f, 0x4d, 0x37, 0x4d, 0x37, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x5f, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x5f, 0x4d, 0x38, 0x4d, 0x38, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x20, 0x58,
		0x54, 0x35, 0x35, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x6f, 0x78, 0x20, 0x58, 0x54, 0x35,
		0x35, 0x30, 0x43, 0x6f, 0x6d, 0x69, 0x6f, 0x47, 0x54, 0x31, 0x30, 0x30, 0x43, 0x54, 0x37, 0x30,
		0x31, 0x57, 0x43, 0x54, 0x37, 0x30, 0x31, 0x47, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x43, 0x54, 0x37,
		0x30, 0x31, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6c, 0x43, 0x6f,
		0x6d, 0x70, 0x61, 0x71, 0x43, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x64, 0x65, 0x52, 0x65, 0x61, 0x64,
		0x4d, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x75, 0x6d, 0x43,
		0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x31, 0x30, 0x46, 0x6c, 0x79, 0x66, 0x69, 0x78, 0x20,
		0x36, 0x43, 0x2d, 0x37, 0x32, 0x31, 0x46, 0x6c, 0x79, 0x66, 0x69, 0x78, 0x20, 0x51, 0x50, 0x6c,
		0x75, 0x73, 0x2d, 0x24, 0x31, 0x20, 0x24, 0x32, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x45, 0x64,
		0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x43, 0x2d, 0x37, 0x35, 0x34, 0x44, 0x72, 0x65, 0x61, 0x6d,
		0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x43, 0x2d, 0x37, 0x35, 0x34, 0x43, 0x6f,
		0x6e, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x48, 0x53, 0x52, 0x61,
		0x6e, 0x67, 0x65, 0x20, 0x48, 0x53, 0x43, 0x6f, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x54, 0x41, 0x42,
		0x20, 0x24, 0x31, 0x50, 0x48, 0x53, 0x2d, 0x36, 0x30, 0x31, 0x43, 0x38, 0x47, 0x54, 0x36, 0x30,
		0x20, 0x50, 0x52, 0x4f, 0x47, 0x54, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x34, 0x2b, 0x20,
		0x4e, 0x6f, 0x69, 0x72, 0x43, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x6c, 0x75, 0x6d, 0x65,
		0x20, 0x50, 0x34, 0x43, 0x32, 0x43, 0x35, 0x43, 0x38, 0x53, 0x43, 0x37, 0x41, 0x6c, 0x6c, 0x75,
		0x72, 0x65, 0x20, 0x41, 0x39, 0x43, 0x36, 0x2b, 0x43, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c,
		0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x32, 0x53, 0x47,
		0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x34, 0x53, 0x50, 0x34, 0x31, 0x33, 0x47, 0x72, 0x69,
		0x66, 0x66, 0x65, 0x20, 0x54, 0x31, 0x50, 0x4b, 0x54, 0x34, 0x31, 0x31, 0x47, 0x72, 0x69, 0x66,
		0x66, 0x65, 0x20, 0x47, 0x32, 0x50, 0x48, 0x51, 0x35, 0x31, 0x39, 0x47, 0x72, 0x69, 0x66, 0x66,
		0x65, 0x20, 0x47, 0x34, 0x53, 0x50, 0x48, 0x51, 0x35, 0x32, 0x30, 0x47, 0x72, 0x69, 0x66, 0x66,
		0x65, 0x20, 0x47, 0x35, 0x50, 0x41, 0x4d, 0x35, 0x32, 0x34, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65,
		0x20, 0x47, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x48, 0x51, 0x35, 0x32, 0x35, 0x47, 0x72,
		0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x36, 0x50, 0x48, 0x51, 0x35, 0x32, 0x36, 0x47, 0x72, 0x69,
		0x66, 0x66, 0x65, 0x20, 0x47, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20,
		0x50, 0x37, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c,
		0x75, 0x6d, 0x65, 0x20, 0x50, 0x35, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x36, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x61, 0x34, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
		0x79, 0x20, 0x41, 0x34, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x65, 0x35, 0x20,
		0x70, 0x72, 0x6f, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x35, 0x49, 0x6e, 0x66,
		0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x49, 0x24, 0x31, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20,
		0x47, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x54, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x54, 0x24, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x54, 0x24, 0x31, 0x50, 0x37, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x34, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54,
		0x45, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x38, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20,
		0x41, 0x35, 0x35, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x31, 0x30, 0x30, 0x41, 0x6c,
		0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x35, 0x35, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x41, 0x6c, 0x6c,
		0x75, 0x72, 0x65, 0x20, 0x41, 0x31, 0x30, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x6c, 0x75,
		0x6d, 0x65, 0x20, 0x50, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65,
		0x20, 0x41, 0x38, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x38, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x35, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x48, 0x31, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x33, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x24, 0x31, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20,
		0x50, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x4e, 0x2d, 0x24, 0x31, 0x43, 0x6f, 0x6e, 0x6e,
		0x65, 0x63, 0x74, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x20, 0x36, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x78, 0x53, 0x45, 0x4e, 0x5f, 0x31, 0x30, 0x35,
		0x35, 0x5f, 0x41, 0x52, 0x4d, 0x53, 0x65, 0x72, 0x65, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x31, 0x30,
		0x35, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x43, 0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73, 0x74,
		0x53, 0x24, 0x31, 0x43, 0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x46, 0x32, 0x46, 0x32,
		0x43, 0x6f, 0x6e, 0x74, 0x69, 0x78, 0x6f, 0x43, 0x58, 0x2d, 0x31, 0x30, 0x34, 0x35, 0x20, 0x33,
		0x47, 0x43, 0x58, 0x2d, 0x31, 0x30, 0x36, 0x35, 0x20, 0x33, 0x47, 0x47, 0x58, 0x2d, 0x31, 0x30,
		0x33, 0x35, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x54, 0x31, 0x31, 0x36,
		0x30, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42, 0x31, 0x30, 0x35, 0x20, 0x33,
		0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42, 0x31, 0x30, 0x38, 0x20, 0x34, 0x47, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54, 0x31, 0x30, 0x37, 0x20, 0x33, 0x47, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x4b, 0x54, 0x31, 0x30, 0x39, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x4b, 0x54, 0x37, 0x31, 0x35, 0x20, 0x33, 0x47, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4b, 0x54, 0x39,
		0x39, 0x35, 0x20, 0x33, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54, 0x31, 0x31, 0x30,
		0x30, 0x47, 0x54, 0x43, 0x6f, 0x6f, 0x6c, 0x70, 0x61, 0x64, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x36, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x43,
		0x37, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x37, 0x4e, 0x37, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x50, 0x4c, 0x55, 0x53, 0x20, 0x43, 0x33, 0x37,
		0x30, 0x31, 0x41, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x50, 0x33,
		0x36, 0x36, 0x37, 0x41, 0x54, 0x54, 0x61, 0x73, 0x6b, 0x65, 0x72, 0x38, 0x31, 0x39, 0x30, 0x51,
		0x31, 0x38, 0x32, 0x35, 0x2d, 0x45, 0x30, 0x4e, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x35,
		0x43, 0x42, 0x65, 0x6c, 0x6c, 0x61, 0x7a, 0x61, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x4c, 0x65,
		0x67, 0x61, 0x63, 0x79, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x53, 0x4c, 0x65, 0x67, 0x61,
		0x63, 0x79, 0x20, 0x53, 0x20, 0x53, 0x52, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x42, 0x72,
		0x69, 0x73, 0x61, 0x53, 0x75, 0x76, 0x61, 0x4e, 0x32, 0x4d, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x31,
		0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x53, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x53, 0x31, 0x43, 0x6f, 0x6f,
		0x6c, 0x20, 0x35, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x6f,
		0x6f, 0x6c, 0x20, 0x33, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x39, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x39,
		0x53, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x32, 0x30, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x32, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x43, 0x50, 0x31, 0x32, 0x50, 0x32, 0x36, 0x41, 0x72, 0x69, 0x73, 0x65, 0x31,
		0x30, 0x41, 0x45, 0x35, 0x30, 0x31, 0x4d, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x45, 0x35, 0x30, 0x32,
		0x4d, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x20, 0x32, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x36, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6f, 0x70, 0x65, 0x72,
		0x73, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
		0x4d, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x54, 0x61, 0x62, 0x4d, 0x79, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x54, 0x61, 0x62, 0x43, 0x6f, 0x76, 0x69, 0x61, 0x43, 0x72, 0x65, 0x73, 0x63,
		0x65, 0x6e, 0x74, 0x57, 0x49, 0x4e, 0x47, 0x20, 0x35, 0x57, 0x69, 0x6e, 0x67, 0x20, 0x35, 0x57,
		0x49, 0x4e, 0x47, 0x39, 0x57, 0x69, 0x6e, 0x67, 0x20, 0x39, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20,
		0x24, 0x31, 0x43, 0x72, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x4c, 0x31, 0x30, 0x31, 0x41, 0x45,
		0x44, 0x65, 0x62, 0x75, 0x74, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x55, 0x36, 0x30, 0x38, 0x30,
		0x41, 0x43, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x47, 0x55, 0x33, 0x38, 0x30, 0x41, 0x43,
		0x44, 0x65, 0x62, 0x75, 0x74, 0x20, 0x53, 0x32, 0x55, 0x36, 0x38, 0x30, 0x41, 0x43, 0x4f, 0x75,
		0x74, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x43, 0x32, 0x31, 0x31, 0x30, 0x30, 0x31, 0x44, 0x72, 0x65,
		0x61, 0x6d, 0x20, 0x35, 0x47, 0x55, 0x33, 0x30, 0x34, 0x41, 0x43, 0x49, 0x63, 0x6f, 0x6e, 0x55,
		0x33, 0x32, 0x35, 0x41, 0x43, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x32, 0x45, 0x43, 0x32, 0x31, 0x31,
		0x30, 0x30, 0x32, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x33, 0x57, 0x54, 0x43, 0x4b, 0x54, 0x30, 0x31,
		0x49, 0x63, 0x6f, 0x6e, 0x20, 0x34, 0x53, 0x4c, 0x31, 0x31, 0x32, 0x43, 0x49, 0x63, 0x6f, 0x6e,
		0x20, 0x35, 0x56, 0x33, 0x35, 0x30, 0x43, 0x49, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x63, 0x65,
		0x45, 0x43, 0x32, 0x31, 0x31, 0x30, 0x30, 0x34, 0x49, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x65,
		0x20, 0x35, 0x47, 0x53, 0x4e, 0x33, 0x30, 0x34, 0x41, 0x45, 0x49, 0x6e, 0x6e, 0x6f, 0x76, 0x61,
		0x74, 0x65, 0x20, 0x45, 0x20, 0x35, 0x47, 0x55, 0x37, 0x30, 0x35, 0x41, 0x43, 0x4f, 0x76, 0x61,
		0x74, 0x69, 0x6f, 0x6e, 0x45, 0x43, 0x31, 0x30, 0x30, 0x32, 0x4f, 0x76, 0x61, 0x74, 0x69, 0x6f,
		0x6e, 0x20, 0x32, 0x55, 0x36, 0x36, 0x38, 0x41, 0x43, 0x4f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
		0x20, 0x33, 0x45, 0x43, 0x32, 0x31, 0x31, 0x30, 0x30, 0x33, 0x53, 0x70, 0x6c, 0x65, 0x6e, 0x64,
		0x6f, 0x72, 0x53, 0x4c, 0x31, 0x30, 0x30, 0x45, 0x41, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x43, 0x72, 0x69, 0x75, 0x73, 0x20, 0x4d, 0x65, 0x61, 0x43, 0x72, 0x6f,
		0x6e, 0x79, 0x37, 0x30, 0x32, 0x31, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x41,
		0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x63, 0x74, 0x69,
		0x6f, 0x6e, 0x2d, 0x58, 0x24, 0x31, 0x43, 0x6f, 0x72, 0x65, 0x2d, 0x24, 0x31, 0x20, 0x47, 0x6f,
		0x43, 0x6f, 0x72, 0x65, 0x2d, 0x24, 0x31, 0x4f, 0x44, 0x59, 0x53, 0x53, 0x45, 0x59, 0x5f, 0x50,
		0x6c, 0x75, 0x73, 0x4f, 0x44, 0x59, 0x53, 0x53, 0x45, 0x59, 0x2b, 0x4f, 0x64, 0x79, 0x73, 0x73,
		0x65, 0x79, 0x20, 0x53, 0x31, 0x4f, 0x44, 0x59, 0x53, 0x53, 0x45, 0x59, 0x20, 0x53, 0x31, 0x54,
		0x72, 0x65, 0x6b, 0x6b, 0x65, 0x72, 0x2d, 0x24, 0x31, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x54, 0x72,
		0x65, 0x6b, 0x6b, 0x65, 0x72, 0x2d, 0x24, 0x31, 0x43, 0x6f, 0x72, 0x65, 0x2d, 0x54, 0x24, 0x31,
		0x43, 0x72, 0x6f, 0x77, 0x6e, 0x42, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x42, 0x39, 0x30, 0x32,
		0x42, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x20, 0x42, 0x39, 0x30, 0x32, 0x43, 0x74, 0x72, 0x6f,
		0x6e, 0x69, 0x71, 0x53, 0x4e, 0x4f, 0x4f, 0x4b, 0x2d, 0x58, 0x31, 0x30, 0x53, 0x6e, 0x6f, 0x6f,
		0x6b, 0x20, 0x58, 0x31, 0x30, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x38, 0x58, 0x55, 0x32, 0x35, 0x47,
		0x54, 0x55, 0x33, 0x30, 0x47, 0x54, 0x32, 0x55, 0x32, 0x37, 0x47, 0x54, 0x54, 0x61, 0x6c, 0x6b,
		0x20, 0x38, 0x55, 0x35, 0x35, 0x47, 0x54, 0x5f, 0x43, 0x38, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x37,
		0x39, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x37, 0x58, 0x55, 0x33, 0x31, 0x47, 0x54, 0x54, 0x61, 0x6c,
		0x6b, 0x20, 0x31, 0x30, 0x54, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x55,
		0x35, 0x35, 0x47, 0x54, 0x54, 0x31, 0x30, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x31, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x55, 0x36, 0x35, 0x47, 0x54, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x39, 0x58,
		0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x38, 0x20, 0x41, 0x69, 0x72, 0x69, 0x57, 0x6f, 0x72, 0x6b,
		0x20, 0x38, 0x20, 0x33, 0x47, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x38, 0x20, 0x55, 0x6c, 0x74,
		0x69, 0x6d, 0x61, 0x74, 0x65, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x55, 0x6c,
		0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x69, 0x57,
		0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20,
		0x31, 0x30, 0x20, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x68, 0x69, 0x70, 0x54, 0x39, 0x37, 0x30, 0x20,
		0x34, 0x47, 0x43, 0x75, 0x69, 0x75, 0x64, 0x63, 0x75, 0x69, 0x75, 0x64, 0x43, 0x75, 0x69, 0x75,
		0x64, 0x20, 0x46, 0x37, 0x46, 0x37, 0x43, 0x77, 0x6f, 0x77, 0x64, 0x65, 0x66, 0x75, 0x43, 0x79,
		0x72, 0x75, 0x73, 0x43, 0x4d, 0x31, 0x37, 0x58, 0x41, 0x43, 0x53, 0x24, 0x31, 0x20, 0x58, 0x41,
		0x44, 0x2d, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x44, 0x54, 0x30, 0x37,
		0x2d, 0x54, 0x41, 0x42, 0x34, 0x47, 0x44, 0x54, 0x30, 0x37, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34,
		0x47, 0x44, 0x41, 0x53, 0x53, 0x44, 0x45, 0x41, 0x4c, 0x44, 0x49, 0x47, 0x44, 0x45, 0x58, 0x50,
		0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x45, 0x53,
		0x32, 0x35, 0x30, 0x20, 0x52, 0x61, 0x67, 0x65, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x4c,
		0x20, 0x34, 0x2e, 0x37, 0x22, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x45, 0x53, 0x32, 0x20, 0x35,
		0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x45, 0x53, 0x32, 0x20, 0x35, 0x22, 0x49, 0x78, 0x69, 0x6f,
		0x6e, 0x20, 0x4d, 0x31, 0x35, 0x30, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x49, 0x78, 0x69, 0x6f,
		0x6e, 0x20, 0x4d, 0x34, 0x34, 0x35, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x32, 0x34, 0x2e, 0x35,
		0x22, 0x20, 0x41, 0x4c, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x41, 0x4c, 0x33, 0x35,
		0x30, 0x35, 0x2e, 0x34, 0x35, 0x22, 0x20, 0x41, 0x53, 0x31, 0x35, 0x35, 0x35, 0x2e, 0x38, 0x35,
		0x22, 0x20, 0x41, 0x53, 0x32, 0x36, 0x30, 0x36, 0x2e, 0x32, 0x32, 0x22, 0x20, 0x41, 0x53, 0x33,
		0x36, 0x30, 0x55, 0x72, 0x73, 0x75, 0x73, 0x20, 0x39, 0x45, 0x56, 0x20, 0x6d, 0x69, 0x6e, 0x69,
		0x20, 0x33, 0x47, 0x55, 0x72, 0x73, 0x75, 0x73, 0x20, 0x39, 0x45, 0x56, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x33, 0x47, 0x55, 0x72, 0x73, 0x75, 0x73, 0x20, 0x24, 0x31, 0x24, 0x31, 0x20, 0x28,
		0x24, 0x32, 0x29, 0x53, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x4c, 0x61, 0x72, 0x75, 0x73, 0x5f, 0x54,
		0x56, 0x31, 0x46, 0x72, 0x65, 0x79, 0x61, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x44, 0x45, 0x59, 0x49,
		0x44, 0x46, 0x4a, 0x41, 0x47, 0x55, 0x41, 0x52, 0x2d, 0x30, 0x31, 0x4a, 0x61, 0x67, 0x75, 0x61,
		0x72, 0x20, 0x30, 0x31, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x24, 0x31, 0x54, 0x49, 0x47,
		0x45, 0x52, 0x2d, 0x30, 0x31, 0x54, 0x69, 0x67, 0x65, 0x72, 0x20, 0x30, 0x31, 0x50, 0x55, 0x4d,
		0x41, 0x2d, 0x30, 0x31, 0x50, 0x75, 0x6d, 0x61, 0x20, 0x30, 0x31, 0x44, 0x47, 0x54, 0x45, 0x43,
		0x44, 0x47, 0x31, 0x30, 0x31, 0x54, 0x42, 0x49, 0x50, 0x53, 0x44, 0x49, 0x41, 0x4c, 0x4e, 0x58,
		0x38, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x44, 0x49, 0x47, 0x49, 0x43, 0x4f, 0x4d, 0x44, 0x54,
		0x6f, 0x6b, 0x44, 0x49, 0x47, 0x49, 0x46, 0x4f, 0x52, 0x53, 0x44, 0x49, 0x4a, 0x49, 0x54, 0x53,
		0x55, 0x44, 0x43, 0x54, 0x20, 0x39, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x41, 0x31, 0x31,
		0x73, 0x44, 0x49, 0x4d, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x20, 0x44, 0x49, 0x4e, 0x47, 0x44, 0x49,
		0x53, 0x48, 0x43, 0x65, 0x6c, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x2b, 0x43, 0x65, 0x6c, 0x65,
		0x72, 0x6f, 0x20, 0x33, 0x20, 0x35, 0x47, 0x2b, 0x43, 0x65, 0x6c, 0x65, 0x72, 0x6f, 0x33, 0x20,
		0x35, 0x47, 0x43, 0x65, 0x6c, 0x65, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x35, 0x47, 0x43, 0x65, 0x6c,
		0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x44, 0x49, 0x58, 0x4f, 0x4e, 0x48, 0x4b, 0x37, 0x2d, 0x33,
		0x35, 0x30, 0x32, 0x53, 0x6f, 0x6c, 0x69, 0x73, 0x44, 0x4e, 0x36, 0x30, 0x31, 0x35, 0x41, 0x73,
		0x74, 0x72, 0x75, 0x6d, 0x54, 0x53, 0x2d, 0x24, 0x31, 0x2d, 0x31, 0x54, 0x53, 0x5f, 0x4d, 0x31,
		0x30, 0x33, 0x41, 0x54, 0x53, 0x2d, 0x4d, 0x31, 0x30, 0x33, 0x41, 0x58, 0x4b, 0x31, 0x20, 0x33,
		0x47, 0x44, 0x4c, 0x59, 0x5a, 0x55, 0x20, 0x44, 0x53, 0x35, 0x33, 0x48, 0x6f, 0x72, 0x69, 0x7a,
		0x6f, 0x6e, 0x20, 0x48, 0x38, 0x44, 0x4c, 0x5f, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x5f,
		0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x20, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x44, 0x4c, 0x5f, 0x33, 0x39,
		0x31, 0x30, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x44, 0x4d,
		0x4f, 0x41, 0x4f, 0x44, 0x4e, 0x53, 0x53, 0x34, 0x30, 0x30, 0x33, 0x41, 0x69, 0x72, 0x54, 0x61,
		0x62, 0x20, 0x24, 0x31, 0x44, 0x4f, 0x52, 0x4c, 0x41, 0x4e, 0x44, 0x44, 0x50, 0x41, 0x44, 0x50,
		0x41, 0x5f, 0x5a, 0x45, 0x54, 0x41, 0x5a, 0x65, 0x74, 0x61, 0x44, 0x52, 0x41, 0x47, 0x4f, 0x4e,
		0x44, 0x53, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x53, 0x49, 0x43, 0x44, 0x55, 0x4e,
		0x4e, 0x53, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x65, 0x77, 0x6f, 0x6f, 0x41,
		0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x20, 0x37, 0x50, 0x44, 0x61, 0x6e, 0x65, 0x77, 0x4b, 0x6f,
		0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x24, 0x31, 0x47, 0x45, 0x4f, 0x44, 0x52, 0x4f, 0x49, 0x44,
		0x5f, 0x41, 0x35, 0x47, 0x65, 0x6f, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x41, 0x35, 0x44, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x44, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x24, 0x31, 0x44,
		0x61, 0x6e, 0x67, 0x63, 0x61, 0x70, 0x48, 0x44, 0x44, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x61,
		0x6e, 0x79, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x20, 0x34, 0x47, 0x58, 0x58, 0x4d, 0x6f,
		0x6e, 0x73, 0x74, 0x65, 0x72, 0x20, 0x34, 0x47, 0x44, 0x61, 0x72, 0x69, 0x61, 0x44, 0x61, 0x74,
		0x61, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x44, 0x61,
		0x74, 0x61, 0x6d, 0x69, 0x6e, 0x69, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x67, 0x44, 0x41, 0x54, 0x41,
		0x4e, 0x47, 0x44, 0x61, 0x74, 0x61, 0x77, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74,
		0x20, 0x53, 0x75, 0x72, 0x66, 0x65, 0x72, 0x20, 0x33, 0x47, 0x35, 0x44, 0x57, 0x2d, 0x55, 0x42,
		0x54, 0x37, 0x57, 0x55, 0x62, 0x69, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x37, 0x57, 0x44, 0x61,
		0x74, 0x73, 0x75, 0x6e, 0x44, 0x41, 0x54, 0x53, 0x55, 0x4e, 0x44, 0x41, 0x54, 0x53, 0x55, 0x4e,
		0x5f, 0x44, 0x35, 0x35, 0x30, 0x30, 0x44, 0x35, 0x35, 0x30, 0x30, 0x44, 0x61, 0x74, 0x73, 0x75,
		0x6e, 0x5f, 0x44, 0x35, 0x30, 0x30, 0x31, 0x44, 0x35, 0x30, 0x30, 0x31, 0x44, 0x61, 0x7a, 0x65,
		0x6e, 0x64, 0x61, 0x7a, 0x65, 0x6e, 0x36, 0x41, 0x44, 0x62, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x44,
		0x42, 0x38, 0x50, 0x4c, 0x55, 0x53, 0x44, 0x42, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x62,
		0x74, 0x65, 0x6c, 0x44, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x53, 0x2d, 0x43, 0x52, 0x31, 0x43, 0x79,
		0x70, 0x68, 0x65, 0x72, 0x43, 0x79, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x43, 0x79, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x44,
		0x53, 0x2d, 0x43, 0x4c, 0x33, 0x43, 0x79, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x33, 0x44, 0x53, 0x2d,
		0x43, 0x4c, 0x32, 0x43, 0x79, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x32, 0x44, 0x53, 0x2d, 0x42, 0x44,
		0x31, 0x42, 0x6f, 0x6c, 0x64, 0x44, 0x53, 0x2d, 0x43, 0x4c, 0x31, 0x43, 0x79, 0x67, 0x6e, 0x61,
		0x6c, 0x44, 0x65, 0x57, 0x61, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x6c, 0x58, 0x43, 0x44, 0x33, 0x35,
		0x56, 0x65, 0x6e, 0x75, 0x65, 0x20, 0x24, 0x31, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x56, 0x65, 0x6e,
		0x75, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x6f, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x43,
		0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x56, 0x65, 0x6e, 0x75,
		0x65, 0x20, 0x37, 0x20, 0x24, 0x31, 0x44, 0x65, 0x6e, 0x61, 0x6c, 0x69, 0x45, 0x2d, 0x54, 0x61,
		0x62, 0x20, 0x24, 0x31, 0x44, 0x65, 0x6e, 0x76, 0x65, 0x72, 0x54, 0x41, 0x51, 0x2d, 0x24, 0x31,
		0x53, 0x44, 0x51, 0x2d, 0x24, 0x31, 0x44, 0x65, 0x73, 0x61, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f,
		0x67, 0x44, 0x69, 0x63, 0x61, 0x6d, 0x44, 0x69, 0x67, 0x69, 0x44, 0x69, 0x67, 0x69, 0x63, 0x65,
		0x6c, 0x44, 0x4c, 0x33, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x44, 0x4c, 0x33, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x4c, 0x33, 0x44, 0x4c, 0x24, 0x31, 0x44, 0x4c,
		0x38, 0x31, 0x30, 0x44, 0x49, 0x47, 0x49, 0x43, 0x45, 0x4c, 0x44, 0x4c, 0x31, 0x70, 0x6c, 0x75,
		0x73, 0x44, 0x4c, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x69, 0x67, 0x69, 0x64, 0x72, 0x61,
		0x67, 0x6f, 0x6e, 0x44, 0x69, 0x67, 0x69, 0x68, 0x6f, 0x6d, 0x65, 0x44, 0x69, 0x67, 0x69, 0x6c,
		0x61, 0x6e, 0x64, 0x44, 0x4c, 0x31, 0x30, 0x30, 0x38, 0x4d, 0x44, 0x69, 0x67, 0x69, 0x74, 0x34,
		0x47, 0x50, 0x6c, 0x61, 0x79, 0x31, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x47, 0x6c, 0x6f, 0x72, 0x79, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x4d,
		0x61, 0x78, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
		0x20, 0x4d, 0x61, 0x78, 0x45, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x69, 0x67, 0x6d, 0x61,
		0x48, 0x49, 0x54, 0x20, 0x33, 0x47, 0x69, 0x44, 0x78, 0x35, 0x48, 0x54, 0x35, 0x30, 0x33, 0x35,
		0x50, 0x47, 0x48, 0x49, 0x54, 0x20, 0x51, 0x35, 0x30, 0x30, 0x20, 0x33, 0x47, 0x48, 0x54, 0x34,
		0x30, 0x33, 0x39, 0x50, 0x47, 0x48, 0x49, 0x54, 0x20, 0x51, 0x34, 0x30, 0x31, 0x20, 0x33, 0x47,
		0x56, 0x53, 0x35, 0x30, 0x33, 0x37, 0x50, 0x4c, 0x56, 0x4f, 0x58, 0x20, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x34, 0x47, 0x50, 0x53, 0x36, 0x30, 0x34, 0x4d, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x36, 0x2e,
		0x30, 0x4c, 0x54, 0x34, 0x30, 0x34, 0x39, 0x50, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x41, 0x74,
		0x6f, 0x6d, 0x20, 0x33, 0x47, 0x4c, 0x54, 0x35, 0x30, 0x34, 0x38, 0x4d, 0x47, 0x4c, 0x69, 0x6e,
		0x78, 0x20, 0x4a, 0x6f, 0x79, 0x20, 0x33, 0x47, 0x4c, 0x54, 0x35, 0x30, 0x35, 0x32, 0x4d, 0x4c,
		0x4c, 0x69, 0x6e, 0x78, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x34, 0x47, 0x4c, 0x54, 0x34, 0x30,
		0x34, 0x37, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x41, 0x6c, 0x66, 0x61, 0x20, 0x33, 0x47,
		0x4c, 0x53, 0x34, 0x30, 0x35, 0x30, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x58, 0x31, 0x20,
		0x33, 0x47, 0x4c, 0x53, 0x34, 0x30, 0x35, 0x31, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x58,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x4c, 0x54, 0x34, 0x30, 0x35, 0x34, 0x4d, 0x47,
		0x4c, 0x69, 0x6e, 0x78, 0x20, 0x41, 0x72, 0x67, 0x6f, 0x20, 0x33, 0x47, 0x4c, 0x53, 0x35, 0x30,
		0x34, 0x31, 0x50, 0x4c, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x54, 0x72, 0x69, 0x78, 0x20, 0x34, 0x47,
		0x4c, 0x53, 0x35, 0x30, 0x34, 0x30, 0x50, 0x4c, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x52, 0x61, 0x67,
		0x65, 0x20, 0x34, 0x47, 0x4c, 0x53, 0x35, 0x30, 0x35, 0x33, 0x4d, 0x4c, 0x4c, 0x69, 0x6e, 0x78,
		0x20, 0x50, 0x61, 0x79, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x24, 0x31, 0x20, 0x33,
		0x47, 0x50, 0x54, 0x34, 0x35, 0x32, 0x45, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x34, 0x2e, 0x35, 0x43,
		0x49, 0x54, 0x49, 0x20, 0x41, 0x54, 0x4c, 0x20, 0x34, 0x47, 0x20, 0x43, 0x53, 0x35, 0x30, 0x32,
		0x39, 0x4d, 0x4c, 0x43, 0x49, 0x54, 0x49, 0x20, 0x41, 0x54, 0x4c, 0x20, 0x34, 0x47, 0x50, 0x72,
		0x6f, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x31, 0x38, 0x20, 0x31, 0x31, 0x22, 0x20, 0x33,
		0x47, 0x50, 0x72, 0x6f, 0x20, 0x48, 0x69, 0x74, 0x20, 0x31, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x35,
		0x31, 0x22, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x31, 0x34, 0x54, 0x53, 0x37,
		0x38, 0x35, 0x34, 0x4d, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x38, 0x2e, 0x31, 0x22, 0x20, 0x33,
		0x47, 0x52, 0x53, 0x31, 0x32, 0x34, 0x39, 0x50, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x38, 0x30,
		0x30, 0x46, 0x20, 0x34, 0x47, 0x48, 0x53, 0x31, 0x30, 0x30, 0x32, 0x50, 0x4c, 0x50, 0x72, 0x6f,
		0x20, 0x48, 0x69, 0x74, 0x20, 0x31, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x48, 0x53, 0x31,
		0x30, 0x30, 0x38, 0x50, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x48, 0x69, 0x74, 0x20, 0x31, 0x30, 0x34,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48, 0x69, 0x74, 0x20, 0x31, 0x36, 0x20, 0x31, 0x30, 0x2e,
		0x34, 0x22, 0x48, 0x53, 0x31, 0x30, 0x30, 0x34, 0x50, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x48, 0x69,
		0x74, 0x20, 0x31, 0x30, 0x38, 0x45, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48, 0x53, 0x31, 0x30,
		0x30, 0x36, 0x50, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x48, 0x69, 0x74, 0x20, 0x31, 0x34, 0x20, 0x31,
		0x30, 0x2e, 0x34, 0x22, 0x48, 0x53, 0x31, 0x30, 0x30, 0x35, 0x50, 0x4c, 0x50, 0x53, 0x31, 0x30,
		0x34, 0x33, 0x4d, 0x47, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x33, 0x22, 0x20,
		0x33, 0x47, 0x54, 0x53, 0x31, 0x30, 0x31, 0x32, 0x45, 0x20, 0x33, 0x47, 0x50, 0x6c, 0x61, 0x6e,
		0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x69, 0x44, 0x78, 0x38, 0x4d, 0x56,
		0x4d, 0x39, 0x30, 0x38, 0x48, 0x43, 0x5a, 0x69, 0x44, 0x78, 0x39, 0x48, 0x49, 0x54, 0x20, 0x34,
		0x47, 0x20, 0x48, 0x54, 0x37, 0x30, 0x37, 0x34, 0x4d, 0x4c, 0x48, 0x49, 0x54, 0x20, 0x34, 0x47,
		0x49, 0x44, 0x73, 0x44, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x43, 0x49, 0x54, 0x49, 0x20, 0x24,
		0x31, 0x57, 0x53, 0x31, 0x32, 0x36, 0x32, 0x52, 0x57, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x31, 0x32,
		0x31, 0x30, 0x42, 0x57, 0x53, 0x38, 0x32, 0x35, 0x33, 0x50, 0x4c, 0x4b, 0x69, 0x64, 0x73, 0x20,
		0x38, 0x32, 0x36, 0x30, 0x43, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x38, 0x32, 0x38, 0x30, 0x43, 0x69,
		0x44, 0x78, 0x44, 0x38, 0x20, 0x33, 0x47, 0x44, 0x2d, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x32, 0x20,
		0x38, 0x4e, 0x53, 0x36, 0x39, 0x30, 0x32, 0x51, 0x4c, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x61,
		0x20, 0x37, 0x2e, 0x32, 0x20, 0x34, 0x47, 0x4e, 0x53, 0x39, 0x37, 0x39, 0x37, 0x4d, 0x47, 0x50,
		0x6c, 0x61, 0x74, 0x69, 0x6e, 0x61, 0x20, 0x37, 0x2e, 0x32, 0x20, 0x33, 0x47, 0x54, 0x54, 0x31,
		0x30, 0x30, 0x34, 0x50, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x31, 0x30, 0x2e, 0x34,
		0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x31, 0x30, 0x30, 0x32, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69,
		0x6d, 0x61, 0x20, 0x44, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x37,
		0x30, 0x32, 0x35, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e, 0x35, 0x22,
		0x20, 0x33, 0x47, 0x54, 0x54, 0x37, 0x30, 0x32, 0x36, 0x4d, 0x57, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x61, 0x20, 0x37, 0x2e, 0x36, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x37, 0x30, 0x32, 0x30, 0x4d,
		0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e, 0x33, 0x22, 0x20, 0x33, 0x47, 0x54,
		0x54, 0x37, 0x30, 0x32, 0x34, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e,
		0x34, 0x22, 0x20, 0x33, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x24, 0x31, 0x20, 0x24,
		0x32, 0x47, 0x54, 0x53, 0x38, 0x32, 0x38, 0x39, 0x50, 0x4c, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61,
		0x20, 0x38, 0x33, 0x30, 0x35, 0x43, 0x20, 0x34, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20,
		0x24, 0x31, 0x20, 0x33, 0x47, 0x69, 0x44, 0x24, 0x31, 0x51, 0x24, 0x32, 0x20, 0x33, 0x47, 0x69,
		0x44, 0x24, 0x31, 0x51, 0x24, 0x32, 0x54, 0x53, 0x37, 0x32, 0x30, 0x33, 0x52, 0x57, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x61, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x37, 0x54, 0x54, 0x37, 0x30, 0x30,
		0x30, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20,
		0x33, 0x47, 0x38, 0x34, 0x30, 0x32, 0x44, 0x20, 0x34, 0x47, 0x31, 0x34, 0x30, 0x32, 0x44, 0x20,
		0x34, 0x47, 0x20, 0x57, 0x53, 0x31, 0x32, 0x35, 0x30, 0x50, 0x4c, 0x31, 0x34, 0x30, 0x32, 0x44,
		0x20, 0x34, 0x47, 0x57, 0x53, 0x31, 0x32, 0x35, 0x31, 0x50, 0x4c, 0x4b, 0x69, 0x64, 0x73, 0x20,
		0x31, 0x32, 0x34, 0x37, 0x43, 0x52, 0x53, 0x31, 0x32, 0x36, 0x37, 0x50, 0x4c, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x34, 0x38, 0x30, 0x45, 0x20, 0x34, 0x47, 0x44, 0x69, 0x4d, 0x61, 0x67, 0x69, 0x63,
		0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x24, 0x31, 0x56, 0x52, 0x20, 0x4c, 0x34, 0x32, 0x44, 0x4d,
		0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31, 0x44, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x79,
		0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x6e, 0x61, 0x78, 0x44, 0x58, 0x20, 0x54, 0x41,
		0x20, 0x24, 0x31, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x54, 0x6f, 0x79, 0x5f, 0x73, 0x74, 0x6f,
		0x72, 0x79, 0x54, 0x4f, 0x59, 0x20, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x44, 0x69, 0x74, 0x65, 0x63,
		0x6d, 0x61, 0x44, 0x69, 0x76, 0x61, 0x44, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x78, 0x53, 0x70,
		0x65, 0x65, 0x64, 0x42, 0x6f, 0x78, 0x20, 0x33, 0x44, 0x69, 0x76, 0x69, 0x73, 0x61, 0x74, 0x4a,
		0x2d, 0x4c, 0x49, 0x4e, 0x4b, 0x20, 0x49, 0x49, 0x4a, 0x2d, 0x4c, 0x69, 0x6e, 0x6b, 0x20, 0x49,
		0x49, 0x58, 0x2d, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x54,
		0x2d, 0x49, 0x49, 0x44, 0x6f, 0x43, 0x6f, 0x4d, 0x6f, 0x44, 0x6f, 0x66, 0x66, 0x6c, 0x65, 0x72,
		0x44, 0x6f, 0x6c, 0x61, 0x6d, 0x65, 0x65, 0x44, 0x6f, 0x6d, 0x2e, 0x72, 0x75, 0x44, 0x6f, 0x6f,
		0x67, 0x65, 0x65, 0x54, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x24, 0x31, 0x54, 0x24, 0x31,
		0x53, 0x54, 0x31, 0x30, 0x45, 0x54, 0x32, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4b, 0x69,
		0x64, 0x54, 0x32, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x56, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x20, 0x4d, 0x61,
		0x78, 0x53, 0x20, 0x70, 0x75, 0x6e, 0x6b, 0x53, 0x20, 0x50, 0x75, 0x6e, 0x6b, 0x53, 0x20, 0x63,
		0x79, 0x62, 0x65, 0x72, 0x53, 0x20, 0x43, 0x79, 0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x65, 0x6e,
		0x63, 0x69, 0x61, 0x32, 0x20, 0x59, 0x31, 0x30, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x61,
		0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x32, 0x20, 0x59, 0x31, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x32, 0x20, 0x59, 0x31, 0x30, 0x30, 0x4c, 0x65,
		0x6f, 0x20, 0x24, 0x31, 0x49, 0x72, 0x6f, 0x6e, 0x20, 0x42, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31,
		0x58, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x24, 0x31, 0x53, 0x42, 0x4c, 0x31, 0x32, 0x30, 0x30, 0x30,
		0x20, 0x50, 0x52, 0x4f, 0x42, 0x4c, 0x31, 0x32, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x44,
		0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x35, 0x35, 0x30, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x42, 0x4c, 0x31, 0x32, 0x30, 0x30, 0x30, 0x56, 0x32, 0x30, 0x50, 0x72, 0x6f, 0x56, 0x32,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x34, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x24, 0x31, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x53, 0x39, 0x36, 0x47, 0x54, 0x53, 0x39, 0x36, 0x20, 0x47, 0x54, 0x4b, 0x49,
		0x53, 0x53, 0x4d, 0x45, 0x2d, 0x44, 0x47, 0x35, 0x38, 0x30, 0x4b, 0x69, 0x73, 0x73, 0x6d, 0x65,
		0x20, 0x44, 0x47, 0x35, 0x38, 0x30, 0x48, 0x69, 0x74, 0x6d, 0x61, 0x6e, 0x5f, 0x44, 0x47, 0x38,
		0x35, 0x30, 0x48, 0x69, 0x74, 0x6d, 0x61, 0x6e, 0x20, 0x44, 0x47, 0x35, 0x38, 0x30, 0x58, 0x39,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x6d, 0x69, 0x6e, 0x69, 0x53, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x78, 0x35, 0x5f, 0x64, 0x6f, 0x6f, 0x67, 0x65, 0x65, 0x58, 0x35, 0x54, 0x35, 0x5f, 0x4c, 0x69,
		0x74, 0x65, 0x54, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x35, 0x6d, 0x61, 0x78, 0x5f, 0x53, 0x58, 0x35, 0x20, 0x4d, 0x61, 0x78,
		0x20, 0x53, 0x53, 0x68, 0x6f, 0x6f, 0x74, 0x20, 0x24, 0x31, 0x49, 0x62, 0x69, 0x7a, 0x61, 0x5f,
		0x46, 0x32, 0x49, 0x62, 0x69, 0x7a, 0x61, 0x20, 0x46, 0x32, 0x59, 0x36, 0x5f, 0x50, 0x69, 0x61,
		0x6e, 0x6f, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x59, 0x36, 0x20, 0x50, 0x69, 0x61, 0x6e, 0x6f,
		0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x59, 0x36, 0x5f, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x59, 0x36,
		0x20, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x59, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x33, 0x44, 0x59,
		0x36, 0x20, 0x4d, 0x61, 0x78, 0x59, 0x37, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x37, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x54, 0x36, 0x70, 0x72, 0x6f, 0x54, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x47, 0x35,
		0x35, 0x30, 0x44, 0x47, 0x35, 0x35, 0x30, 0x20, 0x44, 0x61, 0x67, 0x67, 0x65, 0x72, 0x59, 0x31,
		0x30, 0x30, 0x58, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x31, 0x30, 0x30, 0x58, 0x54, 0x75, 0x72,
		0x62, 0x6f, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x46, 0x31, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x46, 0x31, 0x59, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d,
		0x69, 0x78, 0x20, 0x32, 0x44, 0x6f, 0x6f, 0x70, 0x72, 0x6f, 0x50, 0x33, 0x44, 0x6f, 0x6f, 0x76,
		0x58, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x31, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x44, 0x6f, 0x70, 0x6f, 0x64, 0x44, 0x6f, 0x70, 0x70, 0x69, 0x6f, 0x44, 0x6f, 0x70,
		0x70, 0x69, 0x6f, 0x20, 0x44, 0x50, 0x33, 0x35, 0x35, 0x44, 0x6f, 0x72, 0x6f, 0x38, 0x30, 0x35,
		0x30, 0x38, 0x30, 0x32, 0x30, 0x58, 0x38, 0x30, 0x38, 0x30, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4d, 0x41, 0x58, 0x20, 0x31, 0x30, 0x4d, 0x61, 0x78, 0x20,
		0x31, 0x30, 0x54, 0x31, 0x32, 0x4d, 0x4e, 0x6f, 0x74, 0x65, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31,
		0x44, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x44, 0x52, 0x45, 0x41, 0x4d, 0x53, 0x54,
		0x41, 0x52, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x62, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x67,
		0x61, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x20, 0x35, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x6c, 0x6f,
		0x67, 0x69, 0x63, 0x44, 0x72, 0x6f, 0x78, 0x69, 0x6f, 0x44, 0x74, 0x61, 0x63, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x24, 0x31, 0x44, 0x75, 0x6e, 0x65, 0x20, 0x48, 0x44, 0x53, 0x6f, 0x6c, 0x6f,
		0x20, 0x34, 0x6b, 0x44, 0x75, 0x72, 0x61, 0x62, 0x6f, 0x6f, 0x6b, 0x44, 0x75, 0x75, 0x62, 0x65,
		0x65, 0x44, 0x79, 0x6b, 0x65, 0x6d, 0x61, 0x6e, 0x6e, 0x53, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x6e,
		0x73, 0x63, 0x68, 0x65, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x44, 0x79, 0x6f, 0x6e, 0x45, 0x2d, 0x42,
		0x6f, 0x64, 0x61, 0x52, 0x65, 0x76, 0x6f, 0x20, 0x52, 0x37, 0x37, 0x20, 0x47, 0x50, 0x53, 0x45,
		0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x20, 0x24, 0x31, 0x45, 0x2d, 0x43, 0x65, 0x72, 0x6f, 0x73,
		0x52, 0x65, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6c, 0x75,
		0x74, 0x69, 0x6f, 0x6e, 0x20, 0x48, 0x44, 0x45, 0x2d, 0x74, 0x65, 0x6c, 0x69, 0x24, 0x31, 0x4e,
		0x24, 0x31, 0x43, 0x75, 0x72, 0x69, 0x6f, 0x73, 0x69, 0x74, 0x79, 0x20, 0x4f, 0x39, 0x51, 0x34,
		0x45, 0x42, 0x45, 0x4e, 0x45, 0x42, 0x45, 0x53, 0x54, 0x45, 0x43, 0x4f, 0x4e, 0x45, 0x43, 0x4f,
		0x4f, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x6f,
		0x72, 0x61, 0x45, 0x43, 0x53, 0x54, 0x41, 0x31, 0x30, 0x43, 0x41, 0x33, 0x54, 0x4d, 0x31, 0x30,
		0x35, 0x41, 0x54, 0x4d, 0x31, 0x30, 0x35, 0x45, 0x45, 0x52, 0x6f, 0x63, 0x6b, 0x45, 0x46, 0x54,
		0x45, 0x47, 0x4c, 0x45, 0x47, 0x4c, 0x31, 0x31, 0x51, 0x46, 0x36, 0x31, 0x31, 0x51, 0x46, 0x36,
		0x45, 0x47, 0x4f, 0x54, 0x45, 0x4b, 0x45, 0x4b, 0x49, 0x4e, 0x4f, 0x58, 0x45, 0x38, 0x5f, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x45, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x45, 0x4b, 0x4f, 0x45,
		0x4b, 0x4f, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x32, 0x4b,
		0x32, 0x4b, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x53, 0x74, 0x61,
		0x72, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x45, 0x4b, 0x54, 0x45, 0x4b, 0x2d, 0x24, 0x31, 0x45,
		0x4c, 0x41, 0x52, 0x49, 0x4b, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x47, 0x45,
		0x4e, 0x41, 0x43, 0x4f, 0x4d, 0x45, 0x4e, 0x49, 0x45, 0x45, 0x34, 0x50, 0x72, 0x6f, 0x45, 0x34,
		0x20, 0x50, 0x72, 0x6f, 0x45, 0x54, 0x4f, 0x45, 0x44, 0x31, 0x32, 0x32, 0x31, 0x45, 0x56, 0x50,
		0x41, 0x44, 0x45, 0x56, 0x42, 0x6f, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x56, 0x50, 0x41,
		0x44, 0x2d, 0x50, 0x52, 0x4f, 0x2d, 0x4d, 0x41, 0x58, 0x45, 0x56, 0x42, 0x6f, 0x78, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x57, 0x49, 0x53, 0x4f, 0x43, 0x54, 0x41, 0x20, 0x54,
		0x37, 0x32, 0x30, 0x51, 0x4f, 0x63, 0x74, 0x61, 0x20, 0x54, 0x37, 0x32, 0x30, 0x51, 0x4f, 0x43,
		0x54, 0x41, 0x2d, 0x54, 0x37, 0x30, 0x30, 0x4d, 0x2d, 0x54, 0x32, 0x4f, 0x63, 0x74, 0x61, 0x20,
		0x54, 0x37, 0x30, 0x30, 0x4d, 0x20, 0x54, 0x32, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x58,
		0x4f, 0x57, 0x61, 0x76, 0x65, 0x20, 0x69, 0x30, 0x30, 0x37, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x45,
		0x59, 0x55, 0x45, 0x61, 0x67, 0x6c, 0x65, 0x45, 0x61, 0x67, 0x6c, 0x65, 0x53, 0x6f, 0x61, 0x72,
		0x45, 0x61, 0x73, 0x79, 0x70, 0x69, 0x78, 0x45, 0x61, 0x73, 0x79, 0x50, 0x61, 0x64, 0x20, 0x24,
		0x31, 0x45, 0x63, 0x68, 0x6f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x43, 0x48,
		0x4f, 0x5f, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x48, 0x4f,
		0x52, 0x49, 0x5a, 0x4f, 0x4e, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41,
		0x52, 0x20, 0x24, 0x31, 0x47, 0x45, 0x43, 0x48, 0x4f, 0x5f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f,
		0x34, 0x47, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x34, 0x47, 0x45, 0x69, 0x6e, 0x73, 0x74, 0x65,
		0x69, 0x6e, 0x45, 0x6b, 0x73, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x58, 0x34,
		0x55, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x34, 0x55, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x65,
		0x63, 0x73, 0x6f, 0x6e, 0x4d, 0x65, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4f, 0x6e, 0x65, 0x45,
		0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x65, 0x75, 0x6d, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x61,
		0x24, 0x31, 0x22, 0x20, 0x46, 0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x54, 0x56, 0x35, 0x35, 0x22, 0x20, 0x55, 0x48, 0x44, 0x20, 0x43, 0x75, 0x72, 0x76,
		0x65, 0x64, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x24,
		0x31, 0x22, 0x20, 0x55, 0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x54, 0x56, 0x24, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65,
		0x6d, 0x65, 0x6e, 0x74, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x45, 0x6c,
		0x65, 0x6e, 0x62, 0x65, 0x72, 0x67, 0x45, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x72,
		0x75, 0x6e, 0x6b, 0x56, 0x6f, 0x77, 0x6e, 0x65, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x6f,
		0x77, 0x6e, 0x65, 0x79, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36,
		0x30, 0x30, 0x30, 0x20, 0x30, 0x32, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x30, 0x31, 0x50, 0x36,
		0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6f, 0x6c, 0x64, 0x69, 0x65, 0x72, 0x41, 0x36,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x55, 0x33, 0x48, 0x43,
		0x31, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x58, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x75,
		0x6e, 0x61, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x45, 0x6c, 0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x45, 0x6c, 0x74,
		0x65, 0x78, 0x4e, 0x56, 0x2d, 0x24, 0x31, 0x2d, 0x57, 0x61, 0x63, 0x4e, 0x56, 0x2d, 0x24, 0x31,
		0x4e, 0x56, 0x2d, 0x24, 0x31, 0x2d, 0x57, 0x42, 0x45, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x45, 0x6d,
		0x70, 0x6f, 0x72, 0x69, 0x61, 0x53, 0x33, 0x6d, 0x69, 0x6e, 0x69, 0x53, 0x33, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x45, 0x35, 0x6d, 0x69, 0x6e, 0x69, 0x45, 0x35, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x69, 0x7a, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x61,
		0x78, 0x20, 0x24, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x54,
		0x45, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x34, 0x30, 0x30, 0x53, 0x45, 0x4e, 0x45, 0x52,
		0x47, 0x59, 0x34, 0x30, 0x30, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x34, 0x30, 0x30, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x53, 0x24, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20,
		0x24, 0x31, 0x48, 0x61, 0x72, 0x64, 0x20, 0x43, 0x61, 0x73, 0x65, 0x20, 0x24, 0x31, 0x55, 0x6c,
		0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x20, 0x36, 0x35, 0x47, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
		0x20, 0x53, 0x69, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x69, 0x31, 0x30,
		0x20, 0x44, 0x55, 0x41, 0x4c, 0x69, 0x31, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x45, 0x6e, 0x67,
		0x65, 0x6c, 0x45, 0x6e, 0x6f, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x4e, 0x54, 0x31,
		0x31, 0x51, 0x46, 0x31, 0x32, 0x45, 0x6e, 0x76, 0x69, 0x7a, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x63,
		0x6b, 0x54, 0x61, 0x62, 0x20, 0x44, 0x53, 0x48, 0x31, 0x38, 0x45, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x45, 0x50, 0x31, 0x39, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x45, 0x50, 0x31, 0x39, 0x20, 0x53, 0x74,
		0x61, 0x72, 0x45, 0x50, 0x31, 0x39, 0x45, 0x70, 0x69, 0x63, 0x45, 0x70, 0x69, 0x6b, 0x20, 0x4f,
		0x6e, 0x65, 0x4b, 0x35, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x65, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x52, 0x53, 0x35, 0x35, 0x30, 0x4b, 0x35, 0x30, 0x31, 0x4c, 0x65, 0x6f, 0x4b,
		0x35, 0x30, 0x30, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4b, 0x35, 0x30,
		0x32, 0x4b, 0x35, 0x30, 0x33, 0x54, 0x4c, 0x65, 0x6f, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b,
		0x35, 0x30, 0x33, 0x53, 0x4c, 0x65, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x35, 0x30, 0x33, 0x48,
		0x44, 0x4c, 0x65, 0x6f, 0x20, 0x48, 0x44, 0x4b, 0x35, 0x30, 0x33, 0x4c, 0x65, 0x6f, 0x20, 0x4d,
		0x61, 0x78, 0x4b, 0x35, 0x30, 0x34, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x33, 0x47, 0x58, 0x35,
		0x30, 0x37, 0x54, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x49, 0x49, 0x4b, 0x35, 0x31, 0x30, 0x42,
		0x6f, 0x6c, 0x74, 0x4b, 0x35, 0x31, 0x31, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x4b,
		0x35, 0x33, 0x34, 0x48, 0x61, 0x64, 0x61, 0x4b, 0x35, 0x33, 0x35, 0x48, 0x61, 0x64, 0x61, 0x20,
		0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b, 0x35, 0x34, 0x35, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4b,
		0x35, 0x33, 0x36, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x4b, 0x35, 0x34, 0x30, 0x45, 0x78, 0x63, 0x61,
		0x6c, 0x69, 0x62, 0x75, 0x72, 0x58, 0x34, 0x30, 0x30, 0x50, 0x65, 0x62, 0x62, 0x6c, 0x65, 0x20,
		0x58, 0x34, 0x30, 0x30, 0x4b, 0x35, 0x37, 0x33, 0x50, 0x61, 0x6e, 0x74, 0x68, 0x65, 0x72, 0x4b,
		0x36, 0x30, 0x30, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x4b, 0x36, 0x30, 0x31, 0x4a, 0x75,
		0x70, 0x69, 0x74, 0x65, 0x72, 0x20, 0x4f, 0x6e, 0x65, 0x4b, 0x34, 0x30, 0x36, 0x50, 0x65, 0x62,
		0x62, 0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x34, 0x30, 0x35, 0x50, 0x65, 0x62, 0x62,
		0x6c, 0x65, 0x20, 0x49, 0x49, 0x54, 0x37, 0x30, 0x30, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65,
		0x45, 0x70, 0x73, 0x6f, 0x6e, 0x48, 0x41, 0x31, 0x34, 0x41, 0x20, 0x4c, 0x43, 0x44, 0x20, 0x50,
		0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x71, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x41,
		0x78, 0x69, 0x73, 0x45, 0x72, 0x67, 0x6f, 0x46, 0x35, 0x30, 0x31, 0x5f, 0x4d, 0x61, 0x67, 0x69,
		0x63, 0x46, 0x35, 0x30, 0x31, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x42, 0x35, 0x30, 0x32, 0x20,
		0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x35, 0x30, 0x33, 0x2d, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61,
		0x41, 0x35, 0x30, 0x33, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x42, 0x35, 0x30, 0x36, 0x20,
		0x49, 0x6e, 0x74, 0x72, 0x6f, 0x56, 0x35, 0x35, 0x30, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x42, 0x35, 0x30, 0x34, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x35, 0x30, 0x35, 0x5f, 0x55, 0x6e,
		0x69, 0x74, 0x5f, 0x34, 0x47, 0x42, 0x35, 0x30, 0x35, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x20, 0x34,
		0x47, 0x56, 0x35, 0x35, 0x31, 0x20, 0x41, 0x75, 0x72, 0x61, 0x56, 0x35, 0x34, 0x30, 0x5f, 0x4c,
		0x65, 0x76, 0x65, 0x6c, 0x56, 0x35, 0x34, 0x30, 0x20, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x56, 0x35,
		0x37, 0x30, 0x5f, 0x42, 0x49, 0x47, 0x5f, 0x42, 0x45, 0x4e, 0x56, 0x35, 0x37, 0x30, 0x20, 0x42,
		0x69, 0x67, 0x20, 0x42, 0x65, 0x6e, 0x45, 0x72, 0x67, 0x6f, 0x20, 0x46, 0x35, 0x30, 0x32, 0x46,
		0x35, 0x30, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x41, 0x35, 0x30, 0x30,
		0x20, 0x42, 0x65, 0x73, 0x74, 0x41, 0x35, 0x35, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x20, 0x42, 0x34, 0x30, 0x30, 0x41, 0x35, 0x30, 0x32, 0x20, 0x41, 0x75, 0x72,
		0x75, 0x6d, 0x41, 0x35, 0x35, 0x31, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x34, 0x47, 0x41, 0x35, 0x35,
		0x33, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x35, 0x35, 0x35, 0x20, 0x55, 0x6e, 0x69, 0x76,
		0x65, 0x72, 0x73, 0x65, 0x41, 0x35, 0x35, 0x36, 0x46, 0x35, 0x30, 0x30, 0x46, 0x35, 0x30, 0x31,
		0x42, 0x35, 0x30, 0x30, 0x20, 0x46, 0x69, 0x72, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20,
		0x46, 0x35, 0x30, 0x30, 0x47, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x47, 0x42, 0x54, 0x39, 0x47, 0x6f,
		0x54, 0x61, 0x62, 0x20, 0x47, 0x74, 0x69, 0x38, 0x47, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x47, 0x54,
		0x69, 0x38, 0x54, 0x61, 0x62, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x54, 0x61, 0x62, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x45, 0x52, 0x47,
		0x4f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x78, 0x20, 0x53, 0x58, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x42, 0x6f, 0x78, 0x20, 0x53, 0x58, 0x45, 0x52, 0x47, 0x4f, 0x47, 0x53, 0x47, 0x48,
		0x53, 0x35, 0x35, 0x45, 0x72, 0x69, 0x63, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x33, 0x38, 0x30, 0x45,
		0x72, 0x69, 0x63, 0x79, 0x45, 0x72, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x45, 0x73, 0x73, 0x65, 0x6e,
		0x74, 0x69, 0x61, 0x6c, 0x50, 0x48, 0x2d, 0x31, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x65,
		0x6c, 0x62, 0x48, 0x45, 0x59, 0x6f, 0x75, 0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48,
		0x45, 0x59, 0x6f, 0x75, 0x20, 0x24, 0x31, 0x57, 0x6f, 0x6f, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x45,
		0x74, 0x6f, 0x6e, 0x45, 0x74, 0x75, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x75, 0x72, 0x6f, 0x63, 0x61,
		0x73, 0x65, 0x45, 0x55, 0x54, 0x42, 0x5f, 0x37, 0x35, 0x38, 0x47, 0x5f, 0x54, 0x41, 0x42, 0x49,
		0x5f, 0x41, 0x72, 0x67, 0x6f, 0x73, 0x5f, 0x4b, 0x49, 0x44, 0x53, 0x54, 0x41, 0x42, 0x49, 0x20,
		0x41, 0x72, 0x67, 0x6f, 0x73, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x37, 0x35, 0x38, 0x47, 0x45,
		0x75, 0x72, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x24, 0x31, 0x45, 0x54,
		0x37, 0x30, 0x30, 0x32, 0x43, 0x2d, 0x48, 0x31, 0x32, 0x65, 0x50, 0x61, 0x64, 0x20, 0x34, 0x53,
		0x45, 0x76, 0x65, 0x72, 0x63, 0x6f, 0x73, 0x73, 0x41, 0x37, 0x35, 0x41, 0x20, 0x53, 0x74, 0x61,
		0x72, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x55, 0x35, 0x30, 0x41, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4d, 0x35, 0x30, 0x20, 0x53, 0x74, 0x61, 0x72, 0x4d, 0x35, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x55,
		0x36, 0x20, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x55, 0x36, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x45,
		0x76, 0x65, 0x72, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x72, 0x50, 0x61, 0x64, 0x20, 0x44, 0x43,
		0x2d, 0x24, 0x31, 0x45, 0x76, 0x65, 0x72, 0x65, 0x78, 0x46, 0x69, 0x6e, 0x65, 0x20, 0x37, 0x42,
		0x45, 0x76, 0x65, 0x72, 0x69, 0x73, 0x45, 0x76, 0x65, 0x72, 0x74, 0x65, 0x6b, 0x45, 0x76, 0x65,
		0x72, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x24, 0x31, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x4d, 0x31,
		0x30, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x76, 0x65, 0x72, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x76, 0x65, 0x72,
		0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x34, 0x47, 0x45, 0x76, 0x65, 0x72, 0x24, 0x31, 0x20,
		0x49, 0x49, 0x45, 0x76, 0x6f, 0x6c, 0x69, 0x6f, 0x4d, 0x34, 0x4d, 0x41, 0x47, 0x49, 0x43, 0x4d,
		0x34, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x45, 0x76, 0x6f, 0x6c, 0x69, 0x6f, 0x5f, 0x4d, 0x35,
		0x50, 0x72, 0x6f, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x6f,
		0x45, 0x56, 0x4f, 0x4c, 0x56, 0x45, 0x4f, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x34, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x34, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
		0x64, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56,
		0x20, 0x24, 0x31, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b,
		0x20, 0x51, 0x34, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x51, 0x34, 0x53, 0x74, 0x72, 0x6f, 0x6e,
		0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x44, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x74,
		0x72, 0x6f, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x24, 0x31, 0x53, 0x74, 0x72,
		0x6f, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x51, 0x24, 0x31, 0x24, 0x32, 0x45, 0x76,
		0x6f, 0x6f, 0x45, 0x76, 0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x70,
		0x61, 0x64, 0x20, 0x33, 0x47, 0x20, 0x47, 0x4f, 0x4f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x33, 0x47, 0x20, 0x47, 0x6f, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x33, 0x47, 0x20, 0x32, 0x47, 0x6f, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x50, 0x52, 0x4f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x4c, 0x41, 0x59, 0x5f, 0x50, 0x41, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x58, 0x4c, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x58, 0x4c, 0x50, 0x6c,
		0x61, 0x79, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x54, 0x61, 0x62, 0x20, 0x58, 0x4c, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x20, 0x54, 0x61, 0x62, 0x20, 0x58, 0x4c,
		0x33, 0x47, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x58, 0x4c, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x33, 0x47, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x58, 0x4c, 0x45, 0x78, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x45, 0x58, 0x20, 0x24, 0x31, 0x69, 0x45, 0x78, 0x6d, 0x61, 0x72, 0x74, 0x45, 0x78, 0x70, 0x6c,
		0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x20, 0x37, 0x2e, 0x34, 0x20, 0x33, 0x47,
		0x53, 0x63, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x33, 0x47, 0x54, 0x6f, 0x72, 0x6e, 0x61, 0x64, 0x6f,
		0x20, 0x38, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47,
		0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x20, 0x38, 0x2e, 0x32, 0x20, 0x33, 0x47, 0x43, 0x69,
		0x6e, 0x65, 0x6d, 0x61, 0x54, 0x56, 0x20, 0x33, 0x47, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
		0x79, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x49, 0x49, 0x49, 0x6e,
		0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x24, 0x31, 0x53, 0x75, 0x72, 0x66, 0x65, 0x72, 0x20,
		0x24, 0x31, 0x53, 0x75, 0x72, 0x66, 0x65, 0x72, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x73, 0x51,
		0x75, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x20, 0x24, 0x31,
		0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x20, 0x24, 0x31, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x49,
		0x6e, 0x64, 0x69, 0x67, 0x6f, 0x50, 0x75, 0x6c, 0x73, 0x61, 0x72, 0x54, 0x6f, 0x72, 0x6e, 0x61,
		0x64, 0x6f, 0x20, 0x33, 0x47, 0x46, 0x72, 0x65, 0x73, 0x68, 0x4a, 0x6f, 0x79, 0x54, 0x56, 0x46,
		0x69, 0x6e, 0x4c, 0x61, 0x67, 0x6f, 0x6f, 0x6e, 0x41, 0x33, 0x35, 0x30, 0x54, 0x56, 0x50, 0x61,
		0x72, 0x74, 0x79, 0x52, 0x69, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65,
		0x72, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x4c, 0x69, 0x66, 0x65, 0x20, 0x45, 0x53, 0x50, 0x2d, 0x33, 0x30, 0x30, 0x45, 0x78, 0x74, 0x72,
		0x65, 0x6d, 0x52, 0x6f, 0x63, 0x6b, 0x20, 0x58, 0x24, 0x31, 0x2b, 0x52, 0x4f, 0x43, 0x4b, 0x5f,
		0x58, 0x31, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x20, 0x58, 0x31, 0x31, 0x45, 0x79, 0x65, 0x6d, 0x6f,
		0x6f, 0x4e, 0x58, 0x54, 0x45, 0x50, 0x61, 0x70, 0x65, 0x72, 0x2d, 0x53, 0x31, 0x4e, 0x58, 0x54,
		0x20, 0x45, 0x50, 0x61, 0x70, 0x65, 0x72, 0x20, 0x53, 0x31, 0x45, 0x7a, 0x69, 0x6f, 0x45, 0x7a,
		0x7a, 0x65, 0x45, 0x5a, 0x24, 0x31, 0x46, 0x2b, 0x53, 0x41, 0x35, 0x35, 0x20, 0x32, 0x47, 0x42,
		0x53, 0x41, 0x35, 0x35, 0x53, 0x48, 0x24, 0x31, 0x46, 0x31, 0x35, 0x30, 0x42, 0x32, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x52, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x20, 0x4c, 0x54, 0x44, 0x42, 0x32,
		0x30, 0x32, 0x31, 0x46, 0x32, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5a, 0x38, 0x50, 0x4c,
		0x55, 0x53, 0x5a, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x38, 0x5f, 0x52, 0x4f, 0x4b, 0x52,
		0x69, 0x38, 0x20, 0x52, 0x6f, 0x6b, 0x72, 0x5a, 0x38, 0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5a,
		0x38, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x38, 0x30, 0x73, 0x5f, 0x70, 0x6c, 0x75,
		0x73, 0x46, 0x38, 0x30, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x38, 0x30, 0x20, 0x50, 0x49,
		0x41, 0x42, 0x45, 0x4c, 0x4c, 0x41, 0x46, 0x38, 0x30, 0x20, 0x50, 0x69, 0x61, 0x62, 0x65, 0x6c,
		0x6c, 0x61, 0x43, 0x38, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x43, 0x38, 0x20, 0x46, 0x69, 0x6e,
		0x67, 0x65, 0x72, 0x46, 0x45, 0x4f, 0x4e, 0x41, 0x4c, 0x46, 0x46, 0x46, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x4c, 0x69, 0x66, 0x65, 0x54, 0x41, 0x42, 0x2d, 0x31, 0x30, 0x41, 0x34, 0x46, 0x49,
		0x4c, 0x49, 0x58, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x4d, 0x20, 0x46, 0x58, 0x34, 0x34, 0x32,
		0x33, 0x46, 0x49, 0x53, 0x45, 0x46, 0x69, 0x73, 0x65, 0x5f, 0x4d, 0x33, 0x32, 0x34, 0x33, 0x33,
		0x20, 0x33, 0x47, 0x46, 0x49, 0x54, 0x43, 0x4f, 0x46, 0x4c, 0x59, 0x43, 0x41, 0x54, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x55, 0x6e, 0x69, 0x63, 0x75, 0x6d, 0x20, 0x24,
		0x31, 0x46, 0x4c, 0x59, 0x43, 0x4f, 0x41, 0x59, 0x46, 0x4d, 0x54, 0x31, 0x36, 0x4d, 0x34, 0x48,
		0x49, 0x31, 0x30, 0x35, 0x30, 0x32, 0x34, 0x4e, 0x65, 0x74, 0x73, 0x75, 0x72, 0x66, 0x65, 0x72,
		0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x33, 0x20, 0x42, 0x30,
		0x31, 0x46, 0x4d, 0x54, 0x2d, 0x4e, 0x4d, 0x37, 0x30, 0x35, 0x38, 0x2d, 0x30, 0x32, 0x46, 0x6c,
		0x61, 0x73, 0x68, 0x31, 0x37, 0x36, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x35, 0x33, 0x31, 0x46,
		0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x31, 0x37, 0x36, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x32, 0x33,
		0x32, 0x42, 0x35, 0x32, 0x31, 0x37, 0x35, 0x57, 0x54, 0x31, 0x30, 0x35, 0x30, 0x32, 0x33, 0x31,
		0x31, 0x37, 0x35, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x32, 0x33, 0x31, 0x54, 0x6f, 0x6d, 0x63,
		0x61, 0x74, 0x31, 0x37, 0x35, 0x46, 0x54, 0x31, 0x30, 0x35, 0x30, 0x32, 0x34, 0x31, 0x56, 0x69,
		0x70, 0x65, 0x72, 0x46, 0x4e, 0x42, 0x53, 0x50, 0x35, 0x30, 0x34, 0x35, 0x56, 0x43, 0x6f, 0x6e,
		0x65, 0x58, 0x69, 0x73, 0x20, 0x41, 0x31, 0x43, 0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x41,
		0x32, 0x43, 0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x58, 0x31, 0x43, 0x6f, 0x6e, 0x65, 0x58,
		0x69, 0x73, 0x20, 0x58, 0x32, 0x46, 0x4e, 0x46, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x24, 0x31, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x24, 0x31, 0x69, 0x66, 0x69,
		0x76, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x33, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x33, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x41, 0x69, 0x72, 0x69, 0x66, 0x69, 0x76,
		0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x32, 0x46, 0x4f, 0x4f, 0x44, 0x4f, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x46, 0x6f, 0x72, 0x65,
		0x76, 0x65, 0x72, 0x46, 0x4f, 0x53, 0x53, 0x69, 0x42, 0x4f, 0x54, 0x44, 0x54, 0x31, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x46, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x24, 0x31, 0x46, 0x50, 0x54,
		0x46, 0x61, 0x52, 0x61, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
		0x6b, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x54, 0x56, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x20,
		0x54, 0x56, 0x46, 0x61, 0x63, 0x65, 0x74, 0x65, 0x6c, 0x51, 0x33, 0x51, 0x31, 0x30, 0x51, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x46, 0x61, 0x63, 0x69, 0x6d, 0x65, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x20,
		0x37, 0x46, 0x61, 0x69, 0x72, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x46, 0x61, 0x6d, 0x6f, 0x63, 0x6f,
		0x46, 0x61, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x64, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x52, 0x65, 0x64, 0x20, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f,
		0x6e, 0x35, 0x50, 0x6c, 0x75, 0x73, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x61, 0x6d, 0x6f,
		0x75, 0x73, 0x20, 0x35, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x46, 0x61, 0x6e, 0x74, 0x65, 0x63,
		0x4d, 0x33, 0x30, 0x30, 0x48, 0x46, 0x61, 0x72, 0x45, 0x61, 0x73, 0x54, 0x6f, 0x6e, 0x65, 0x46,
		0x61, 0x72, 0x61, 0x73, 0x73, 0x6f, 0x6f, 0x46, 0x65, 0x6e, 0x67, 0x78, 0x69, 0x61, 0x6e, 0x67,
		0x46, 0x65, 0x6e, 0x6f, 0x74, 0x69, 0x46, 0x45, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x65, 0x72, 0x6f,
		0x46, 0x65, 0x72, 0x6f, 0x5f, 0x59, 0x31, 0x59, 0x31, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x65, 0x20,
		0x59, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x65, 0x20, 0x24, 0x31,
		0x46, 0x45, 0x52, 0x4f, 0x20, 0x50, 0x41, 0x43, 0x45, 0x50, 0x61, 0x63, 0x65, 0x41, 0x34, 0x30,
		0x30, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x30, 0x31, 0x39, 0x41, 0x34, 0x30, 0x30,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x34, 0x30,
		0x30, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x69, 0x47, 0x4f, 0x41, 0x54, 0x52, 0x49, 0x55,
		0x4d, 0x20, 0x49, 0x49, 0x20, 0x46, 0x35, 0x35, 0x4c, 0x32, 0x41, 0x74, 0x72, 0x69, 0x75, 0x6d,
		0x20, 0x49, 0x49, 0x54, 0x52, 0x49, 0x4f, 0x20, 0x46, 0x34, 0x30, 0x4c, 0x54, 0x54, 0x72, 0x69,
		0x6f, 0x20, 0x46, 0x34, 0x30, 0x4c, 0x54, 0x45, 0x50, 0x49, 0x43, 0x20, 0x46, 0x35, 0x30, 0x47,
		0x45, 0x70, 0x69, 0x63, 0x20, 0x46, 0x35, 0x30, 0x47, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x20, 0x4d,
		0x35, 0x30, 0x47, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4d, 0x34, 0x30, 0x35, 0x42, 0x5f, 0x38, 0x47,
		0x42, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x49, 0x49, 0x20, 0x38, 0x47, 0x42, 0x4d, 0x34,
		0x30, 0x35, 0x42, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x49, 0x49, 0x56, 0x49, 0x52, 0x54,
		0x55, 0x45, 0x33, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x49, 0x49, 0x49, 0x43, 0x45, 0x4e,
		0x54, 0x52, 0x49, 0x43, 0x20, 0x53, 0x35, 0x30, 0x47, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63,
		0x20, 0x53, 0x35, 0x30, 0x47, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4a, 0x38, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x20, 0x4a, 0x38, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x5f, 0x6c, 0x6c, 0x4f, 0x72, 0x62, 0x69,
		0x74, 0x20, 0x49, 0x49, 0x46, 0x34, 0x30, 0x47, 0x32, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x46, 0x34, 0x30, 0x47, 0x32, 0x46, 0x69, 0x47, 0x69, 0x4e, 0x6f, 0x70,
		0x61, 0x6c, 0x50, 0x34, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x34, 0x30, 0x48, 0x6f, 0x6c, 0x61,
		0x24, 0x31, 0x74, 0x77, 0x6f, 0x46, 0x6a, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x31, 0x43, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x43, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x35, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x35, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x46,
		0x69, 0x6c, 0x69, 0x6d, 0x6f, 0x46, 0x42, 0x2d, 0x31, 0x30, 0x31, 0x46, 0x69, 0x6e, 0x65, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x6c, 0x75, 0x78, 0x46, 0x49, 0x4e, 0x4c, 0x55, 0x58,
		0x46, 0x69, 0x72, 0x65, 0x46, 0x6c, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x75,
		0x72, 0x69, 0x69, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x56,
		0x69, 0x76, 0x69, 0x64, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72,
		0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x52, 0x61, 0x7a, 0x6f, 0x72, 0x41, 0x75, 0x72, 0x69,
		0x69, 0x20, 0x52, 0x61, 0x7a, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x69,
		0x69, 0x20, 0x44, 0x65, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x44,
		0x72, 0x65, 0x61, 0x6d, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x46,
		0x61, 0x6d, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x41, 0x6d, 0x75, 0x73, 0x65, 0x20, 0x34,
		0x47, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x4f, 0x6e, 0x65,
		0x20, 0x38, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x4f, 0x6e,
		0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x41, 0x75, 0x72, 0x69,
		0x69, 0x20, 0x41, 0x6d, 0x75, 0x73, 0x65, 0x20, 0x33, 0x47, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20,
		0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x4d, 0x61, 0x67, 0x6e,
		0x75, 0x6d, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x56, 0x69, 0x76, 0x69, 0x64, 0x20, 0x50, 0x72,
		0x6f, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x56, 0x69, 0x76, 0x69, 0x64, 0x20, 0x50, 0x72, 0x65,
		0x6d, 0x69, 0x75, 0x6d, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x78, 0x43, 0x69, 0x74, 0x65, 0x41,
		0x75, 0x72, 0x69, 0x69, 0x20, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x20, 0x24, 0x31, 0x41, 0x75,
		0x72, 0x69, 0x69, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x58, 0x54, 0x49, 0x6e, 0x74,
		0x65, 0x6e, 0x73, 0x65, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x34, 0x47, 0x49, 0x6e, 0x74,
		0x65, 0x6e, 0x73, 0x65, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65,
		0x72, 0x20, 0x53, 0x77, 0x65, 0x65, 0x74, 0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x34, 0x47, 0x49, 0x6e, 0x73, 0x70, 0x69,
		0x72, 0x65, 0x20, 0x34, 0x47, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x24, 0x31, 0x46,
		0x6c, 0x75, 0x6f, 0x53, 0x35, 0x35, 0x34, 0x30, 0x32, 0x30, 0x4c, 0x46, 0x5f, 0x50, 0x6c, 0x75,
		0x73, 0x46, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x79, 0x50, 0x61, 0x6e, 0x6f, 0x72, 0x61,
		0x6d, 0x61, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x69, 0x65, 0x77, 0x20, 0x4d, 0x61,
		0x78, 0x53, 0x6c, 0x69, 0x6d, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x35, 0x30, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x72,
		0x6f, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x41, 0x63, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4a, 0x65,
		0x74, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x53, 0x6b, 0x79, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x47, 0x65,
		0x6f, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x5a, 0x65, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x42, 0x75, 0x7a, 0x7a, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x20, 0x34, 0x47, 0x46, 0x53, 0x35, 0x30, 0x36, 0x43,
		0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x33, 0x46, 0x53, 0x34, 0x30, 0x33, 0x43, 0x75, 0x6d, 0x75,
		0x6c, 0x75, 0x73, 0x20, 0x31, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x36, 0x46, 0x53, 0x35,
		0x31, 0x31, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x37, 0x46, 0x53, 0x35, 0x30, 0x39, 0x4e,
		0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x39, 0x46, 0x53, 0x34, 0x30, 0x36, 0x53, 0x74, 0x72, 0x61,
		0x74, 0x75, 0x73, 0x20, 0x35, 0x46, 0x53, 0x34, 0x30, 0x34, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75,
		0x73, 0x20, 0x33, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53, 0x34, 0x30, 0x37,
		0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x36, 0x46, 0x53, 0x34, 0x30, 0x31, 0x53, 0x74,
		0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x31, 0x46, 0x53, 0x34, 0x30, 0x32, 0x53, 0x74, 0x72, 0x61,
		0x74, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53, 0x35, 0x30, 0x31, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73,
		0x20, 0x33, 0x46, 0x53, 0x35, 0x30, 0x32, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x46,
		0x53, 0x35, 0x30, 0x37, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x34, 0x46, 0x53, 0x35, 0x30,
		0x35, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x37, 0x46, 0x53, 0x35, 0x35, 0x31, 0x4e, 0x69,
		0x6d, 0x62, 0x75, 0x73, 0x20, 0x34, 0x46, 0x53, 0x35, 0x31, 0x34, 0x43, 0x69, 0x72, 0x72, 0x75,
		0x73, 0x20, 0x38, 0x46, 0x53, 0x35, 0x35, 0x33, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x39,
		0x46, 0x53, 0x35, 0x35, 0x34, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x46, 0x48, 0x44, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x46,
		0x53, 0x35, 0x31, 0x37, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x31, 0x46, 0x53, 0x35,
		0x31, 0x36, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x32, 0x43, 0x69, 0x72, 0x72, 0x75,
		0x73, 0x20, 0x31, 0x33, 0x46, 0x53, 0x35, 0x32, 0x30, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20,
		0x31, 0x46, 0x53, 0x35, 0x32, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x31, 0x46, 0x53, 0x35, 0x32, 0x32, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x34,
		0x46, 0x53, 0x35, 0x32, 0x33, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x36, 0x46, 0x53,
		0x35, 0x32, 0x34, 0x4b, 0x6e, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x46, 0x53, 0x35, 0x32, 0x36,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53, 0x35, 0x32,
		0x37, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x37, 0x46, 0x53, 0x35, 0x32, 0x38, 0x4d,
		0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x53, 0x35, 0x32, 0x39, 0x43,
		0x68, 0x61, 0x6d, 0x70, 0x46, 0x53, 0x35, 0x33, 0x30, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x58, 0x58, 0x4c, 0x46, 0x53, 0x34, 0x35, 0x34, 0x4e, 0x69, 0x6d, 0x62,
		0x75, 0x73, 0x20, 0x38, 0x46, 0x53, 0x34, 0x35, 0x32, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20,
		0x32, 0x46, 0x53, 0x35, 0x31, 0x32, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x30, 0x46,
		0x53, 0x35, 0x31, 0x30, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x32, 0x46, 0x53, 0x34,
		0x35, 0x31, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x46, 0x53, 0x34, 0x30, 0x35, 0x53,
		0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x34, 0x46, 0x53, 0x34, 0x30, 0x38, 0x53, 0x74, 0x72,
		0x61, 0x74, 0x75, 0x73, 0x20, 0x38, 0x46, 0x53, 0x34, 0x30, 0x39, 0x53, 0x74, 0x72, 0x61, 0x74,
		0x75, 0x73, 0x20, 0x39, 0x46, 0x53, 0x34, 0x35, 0x35, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20,
		0x31, 0x31, 0x46, 0x53, 0x34, 0x35, 0x36, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x34,
		0x46, 0x53, 0x34, 0x35, 0x37, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x35, 0x46, 0x53,
		0x34, 0x35, 0x39, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x36, 0x46, 0x53, 0x34, 0x35,
		0x38, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x37, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
		0x63, 0x4a, 0x61, 0x7a, 0x7a, 0x57, 0x68, 0x69, 0x7a, 0x7a, 0x50, 0x72, 0x69, 0x64, 0x65, 0x46,
		0x69, 0x72, 0x65, 0x62, 0x69, 0x72, 0x64, 0x4d, 0x61, 0x72, 0x61, 0x74, 0x68, 0x6f, 0x6e, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x45, 0x76, 0x6f, 0x6b, 0x65, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x45, 0x72,
		0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x31, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f,
		0x20, 0x33, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x34, 0x45, 0x72, 0x61, 0x20,
		0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x35, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x36,
		0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x39, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61,
		0x6e, 0x6f, 0x20, 0x31, 0x30, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x45, 0x72, 0x61, 0x20, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x32, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d,
		0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x44,
		0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x32, 0x47, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x45, 0x72,
		0x61, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x31, 0x45, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65,
		0x20, 0x32, 0x45, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x34, 0x43, 0x68, 0x69, 0x63,
		0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x20, 0x32,
		0x45, 0x67, 0x6f, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x45, 0x76, 0x6f, 0x20,
		0x54, 0x65, 0x63, 0x68, 0x20, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x33, 0x50, 0x68,
		0x6f, 0x65, 0x6e, 0x69, 0x78, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x32, 0x45, 0x6e,
		0x65, 0x72, 0x67, 0x79, 0x20, 0x32, 0x43, 0x6f, 0x72, 0x61, 0x6c, 0x45, 0x76, 0x6f, 0x20, 0x43,
		0x68, 0x69, 0x63, 0x20, 0x33, 0x45, 0x76, 0x6f, 0x20, 0x54, 0x65, 0x63, 0x68, 0x20, 0x33, 0x45,
		0x72, 0x61, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x33, 0x45, 0x72, 0x61, 0x20, 0x53, 0x74,
		0x79, 0x6c, 0x65, 0x20, 0x34, 0x45, 0x76, 0x6f, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20,
		0x35, 0x54, 0x6f, 0x72, 0x6e, 0x61, 0x64, 0x6f, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x49, 0x51, 0x24,
		0x31, 0x46, 0x6c, 0x79, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x24, 0x31, 0x46, 0x6f, 0x62, 0x65, 0x6d,
		0x46, 0x6f, 0x62, 0x65, 0x6d, 0x20, 0x34, 0x4b, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54,
		0x56, 0x46, 0x6f, 0x6e, 0x64, 0x69, 0x46, 0x6f, 0x6e, 0x6f, 0x73, 0x4f, 0x33, 0x46, 0x6f, 0x72,
		0x6d, 0x75, 0x6c, 0x65, 0x72, 0x53, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x50, 0x72, 0x6f,
		0x46, 0x6f, 0x72, 0x73, 0x74, 0x61, 0x72, 0x41, 0x6d, 0x6f, 0x73, 0x74, 0x61, 0x20, 0x33, 0x47,
		0x35, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x53, 0x68,
		0x69, 0x70, 0x45, 0x6e, 0x69, 0x65, 0x20, 0x45, 0x32, 0x46, 0x6f, 0x75, 0x72, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x53, 0x31, 0x38, 0x35, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x32, 0x53, 0x31,
		0x38, 0x36, 0x5f, 0x53, 0x6b, 0x79, 0x5f, 0x33, 0x53, 0x31, 0x38, 0x36, 0x20, 0x53, 0x6b, 0x79,
		0x20, 0x33, 0x53, 0x36, 0x31, 0x20, 0x45, 0x63, 0x6f, 0x20, 0x32, 0x53, 0x36, 0x32, 0x5f, 0x45,
		0x63, 0x6f, 0x5f, 0x33, 0x53, 0x36, 0x32, 0x20, 0x45, 0x63, 0x6f, 0x20, 0x33, 0x53, 0x37, 0x31,
		0x30, 0x20, 0x52, 0x75, 0x62, 0x79, 0x46, 0x6f, 0x75, 0x72, 0x65, 0x6c, 0x45, 0x61, 0x73, 0x79,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x24, 0x31, 0x46, 0x6f, 0x78, 0x63, 0x6f, 0x6e,
		0x6e, 0x49, 0x6e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x20, 0x4d, 0x24, 0x31, 0x46, 0x6f, 0x78, 0x78,
		0x44, 0x46, 0x72, 0x65, 0x65, 0x59, 0x6f, 0x6e, 0x64, 0x32, 0x33, 0x30, 0x35, 0x30, 0x30, 0x33,
		0x4d, 0x4d, 0x35, 0x41, 0x32, 0x33, 0x30, 0x38, 0x30, 0x30, 0x35, 0x4d, 0x4d, 0x36, 0x32, 0x33,
		0x30, 0x38, 0x30, 0x31, 0x31, 0x4d, 0x32, 0x33, 0x30, 0x36, 0x30, 0x30, 0x34, 0x4d, 0x46, 0x39,
		0x53, 0x46, 0x72, 0x65, 0x65, 0x74, 0x65, 0x6c, 0x46, 0x75, 0x6e, 0x20, 0x2b, 0x46, 0x54, 0x4a,
		0x31, 0x35, 0x32, 0x43, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61, 0x69, 0x20, 0x4d, 0x69, 0x79, 0x61,
		0x62, 0x69, 0x52, 0x65, 0x69, 0x20, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x6f,
		0x72, 0x69, 0x20, 0x35, 0x43, 0x72, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x57, 0x61, 0x76, 0x65,
		0x46, 0x54, 0x4a, 0x31, 0x36, 0x31, 0x41, 0x4d, 0x75, 0x73, 0x61, 0x73, 0x68, 0x69, 0x46, 0x54,
		0x45, 0x31, 0x37, 0x31, 0x41, 0x49, 0x63, 0x65, 0x20, 0x33, 0x49, 0x63, 0x65, 0x20, 0x32, 0x46,
		0x54, 0x45, 0x31, 0x36, 0x31, 0x47, 0x49, 0x63, 0x65, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x46, 0x54, 0x4a, 0x31, 0x36, 0x32, 0x45, 0x52, 0x61, 0x69, 0x6a, 0x69, 0x6e, 0x46, 0x54, 0x31,
		0x34, 0x31, 0x42, 0x4e, 0x69, 0x63, 0x6f, 0x58, 0x4d, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20,
		0x32, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x41, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x33,
		0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x34, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x42, 0x50,
		0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x33, 0x53, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x54, 0x4a, 0x31,
		0x35, 0x32, 0x44, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61, 0x69, 0x20, 0x4b, 0x69, 0x77, 0x61, 0x6d,
		0x69, 0x46, 0x54, 0x4a, 0x31, 0x36, 0x32, 0x42, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61, 0x69, 0x20,
		0x4b, 0x69, 0x77, 0x61, 0x6d, 0x69, 0x20, 0x32, 0x46, 0x54, 0x4a, 0x31, 0x36, 0x31, 0x42, 0x53,
		0x61, 0x6d, 0x75, 0x72, 0x61, 0x69, 0x20, 0x52, 0x65, 0x69, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32,
		0x45, 0x4b, 0x61, 0x74, 0x61, 0x6e, 0x61, 0x20, 0x31, 0x53, 0x41, 0x4b, 0x55, 0x52, 0x41, 0x5f,
		0x46, 0x54, 0x45, 0x31, 0x53, 0x61, 0x6b, 0x75, 0x72, 0x61, 0x20, 0x46, 0x54, 0x45, 0x31, 0x46,
		0x55, 0x4e, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x46, 0x75, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46,
		0x72, 0x75, 0x6e, 0x73, 0x69, 0x46, 0x75, 0x6a, 0x69, 0x74, 0x73, 0x75, 0x41, 0x72, 0x72, 0x6f,
		0x77, 0x73, 0x20, 0x35, 0x47, 0x20, 0x46, 0x2d, 0x35, 0x31, 0x41, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x31, 0x46, 0x45, 0x61, 0x73, 0x79, 0x20, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x4c, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x31, 0x4a, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e,
		0x58, 0x20, 0x46, 0x2d, 0x30, 0x31, 0x4b, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x46, 0x69,
		0x74, 0x20, 0x46, 0x2d, 0x30, 0x31, 0x48, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x58, 0x20,
		0x46, 0x2d, 0x30, 0x32, 0x45, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46,
		0x2d, 0x30, 0x32, 0x47, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x45, 0x46, 0x20, 0x46, 0x4a,
		0x4c, 0x32, 0x31, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x5a, 0x20, 0x46, 0x4a, 0x4c, 0x32,
		0x32, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x32, 0x48,
		0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x39, 0x20, 0x46, 0x2d, 0x35, 0x32, 0x41,
		0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4b, 0x69, 0x73, 0x73, 0x20, 0x46, 0x2d, 0x30, 0x33,
		0x44, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4b, 0x69, 0x73, 0x73, 0x20, 0x46, 0x2d, 0x30,
		0x33, 0x45, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20,
		0x46, 0x2d, 0x30, 0x33, 0x46, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x53, 0x56, 0x20, 0x46,
		0x2d, 0x30, 0x33, 0x48, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4a, 0x20, 0x39, 0x30, 0x31,
		0x46, 0x4a, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x56, 0x20, 0x46, 0x2d, 0x30, 0x34, 0x45,
		0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x34, 0x47, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x46, 0x2d, 0x30, 0x35,
		0x44, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x35, 0x46,
		0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x35, 0x4a, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4b, 0x2d, 0x74, 0x61, 0x69, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x42, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x34, 0x4b, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x42, 0x65, 0x20, 0x33, 0x20, 0x46, 0x2d, 0x30, 0x32, 0x4c, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x42, 0x65, 0x20, 0x34, 0x20, 0x46, 0x2d, 0x34, 0x31, 0x41, 0x41, 0x72, 0x72, 0x6f,
		0x77, 0x73, 0x20, 0x42, 0x65, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x46, 0x2d, 0x34,
		0x31, 0x42, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x36,
		0x45, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0xce, 0xbc, 0x20, 0x46, 0x2d, 0x30, 0x37, 0x44,
		0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x57, 0x65, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0x55, 0x20, 0x38, 0x30, 0x31, 0x46, 0x4a, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x37, 0x45, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x38, 0x44, 0x41, 0x4e, 0x54,
		0x45, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x20, 0x46, 0x2d, 0x30, 0x39, 0x44, 0x52, 0x61, 0x6b, 0x75,
		0x2d, 0x52, 0x61, 0x6b, 0x75, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x46, 0x2d, 0x30, 0x39, 0x45, 0x52, 0x61,
		0x6b, 0x75, 0x2d, 0x52, 0x61, 0x6b, 0x75, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x46, 0x2d, 0x24, 0x31, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x58, 0x20,
		0x46, 0x2d, 0x31, 0x30, 0x44, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4d, 0x65, 0x20, 0x46,
		0x2d, 0x31, 0x31, 0x44, 0x46, 0x2d, 0x31, 0x32, 0x43, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0x4d, 0x30, 0x33, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x52, 0x4d, 0x30, 0x32, 0x41, 0x72,
		0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x5a, 0x30, 0x32, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0x52, 0x58, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4d, 0x30, 0x34, 0x20, 0x50, 0x72, 0x65,
		0x6d, 0x69, 0x75, 0x6d, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4d, 0x24, 0x31, 0x41, 0x72,
		0x72, 0x6f, 0x77, 0x73, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x46, 0x41, 0x52, 0x54, 0x4d,
		0x39, 0x33, 0x33, 0x4b, 0x5a, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x4d, 0x35, 0x30, 0x34, 0x2f, 0x48, 0x41, 0x34, 0x53, 0x74, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x69,
		0x63, 0x4c, 0x49, 0x46, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x20, 0x41, 0x48, 0x35, 0x33, 0x32, 0x4c,
		0x69, 0x66, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x48, 0x35, 0x33, 0x32, 0x46, 0x75, 0x6e,
		0x61, 0x69, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x32, 0x29, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x35, 0x24, 0x31, 0x76, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x24, 0x31, 0x76, 0x32, 0x46, 0x31, 0x30, 0x34, 0x45, 0x56, 0x49, 0x49, 0x20, 0x50,
		0x72, 0x6f, 0x46, 0x31, 0x30, 0x34, 0x45, 0x56, 0x49, 0x49, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f,
		0x67, 0x79, 0x46, 0x78, 0x74, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x31, 0x20, 0x58, 0x47, 0x2d, 0x54,
		0x69, 0x44, 0x45, 0x53, 0x68, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x37, 0x53, 0x68, 0x69, 0x6e, 0x69,
		0x6e, 0x67, 0x20, 0x37, 0x47, 0x2d, 0x54, 0x69, 0x44, 0x45, 0x20, 0x56, 0x36, 0x45, 0x58, 0x54,
		0x52, 0x45, 0x4d, 0x45, 0x20, 0x58, 0x39, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x58,
		0x39, 0x45, 0x58, 0x31, 0x30, 0x47, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x74, 0x65, 0x6c,
		0x6c, 0x61, 0x20, 0x24, 0x31, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x47, 0x44, 0x4c, 0x47, 0x45,
		0x4f, 0x46, 0x4f, 0x58, 0x4d, 0x49, 0x44, 0x24, 0x31, 0x47, 0x45, 0x4f, 0x5a, 0x4f, 0x4e, 0x47,
		0x46, 0x69, 0x76, 0x65, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x47, 0x6f,
		0x6c, 0x64, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x47,
		0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74,
		0x20, 0x47, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65,
		0x6e, 0x74, 0x20, 0x58, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69,
		0x64, 0x65, 0x6e, 0x74, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74,
		0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69,
		0x64, 0x65, 0x6e, 0x74, 0x20, 0x47, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72, 0x65, 0x73,
		0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x47, 0x31, 0x30, 0x20, 0x46, 0x61, 0x73, 0x68, 0x69, 0x6f,
		0x6e, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x47, 0x24, 0x31, 0x50, 0x72,
		0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x24, 0x31,
		0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x6b, 0x53, 0x70, 0x65, 0x65, 0x64, 0x6f, 0x5f, 0x31, 0x53,
		0x70, 0x65, 0x65, 0x64, 0x6f, 0x20, 0x31, 0x47, 0x50, 0x61, 0x64, 0x24, 0x31, 0x47, 0x49, 0x52,
		0x41, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x41, 0x42, 0x35, 0x47, 0x4c, 0x4f, 0x4e, 0x59, 0x58, 0x51,
		0x75, 0x61, 0x72, 0x74, 0x7a, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x58, 0x47, 0x4c, 0x58, 0x20, 0x41,
		0x53, 0x41, 0x41, 0x73, 0x61, 0x53, 0x48, 0x41, 0x48, 0x49, 0x4e, 0x20, 0x49, 0x49, 0x49, 0x53,
		0x68, 0x61, 0x68, 0x69, 0x6e, 0x20, 0x49, 0x49, 0x49, 0x4d, 0x61, 0x61, 0x64, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x61, 0x61, 0x64, 0x47, 0x4f, 0x43, 0x4c, 0x45, 0x56, 0x45, 0x52, 0x51, 0x55,
		0x41, 0x4e, 0x54, 0x55, 0x4d, 0x20, 0x24, 0x31, 0x49, 0x4e, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x41,
		0x20, 0x24, 0x31, 0x54, 0x51, 0x37, 0x30, 0x30, 0x4e, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d,
		0x20, 0x37, 0x30, 0x30, 0x4e, 0x4f, 0x52, 0x49, 0x4f, 0x4e, 0x37, 0x6f, 0x4c, 0x4f, 0x52, 0x49,
		0x4f, 0x4e, 0x20, 0x37, 0x30, 0x4c, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x20, 0x37, 0x30,
		0x30, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x5f, 0x31, 0x30, 0x31, 0x30, 0x5f, 0x4c, 0x69,
		0x74, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x31, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x32, 0x20, 0x24, 0x31, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31,
		0x20, 0x24, 0x32, 0x20, 0x52, 0x75, 0x67, 0x67, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75,
		0x6d, 0x20, 0x24, 0x31, 0x20, 0x52, 0x75, 0x67, 0x67, 0x65, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x51,
		0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x5f, 0x49, 0x49, 0x5f, 0x35, 0x30, 0x30, 0x5f,
		0x4e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x32, 0x20, 0x35, 0x30, 0x30, 0x20, 0x4e,
		0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51,
		0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x4e, 0x45, 0x54, 0x42,
		0x4f, 0x4f, 0x4b, 0x20, 0x52, 0x31, 0x30, 0x33, 0x4e, 0x65, 0x74, 0x62, 0x6f, 0x6f, 0x6b, 0x20,
		0x52, 0x31, 0x30, 0x33, 0x54, 0x65, 0x72, 0x72, 0x61, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x62, 0x72,
		0x61, 0x20, 0x39, 0x37, 0x47, 0x4f, 0x4c, 0x44, 0x42, 0x45, 0x52, 0x47, 0x45, 0x56, 0x4f, 0x2d,
		0x56, 0x58, 0x31, 0x45, 0x56, 0x4f, 0x20, 0x56, 0x58, 0x31, 0x47, 0x4f, 0x4f, 0x44, 0x54, 0x45,
		0x4c, 0x47, 0x24, 0x31, 0x43, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x35, 0x30, 0x47, 0x4f, 0x74, 0x76,
		0x47, 0x54, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x47, 0x54, 0x58, 0x4a, 0x61, 0x63, 0x75, 0x6c, 0x75,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x63, 0x74, 0x69, 0x63, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x49, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x49, 0x20, 0x69, 0x54,
		0x56, 0x39, 0x31, 0x32, 0x69, 0x54, 0x56, 0x39, 0x31, 0x32, 0x47, 0x49, 0x20, 0x55, 0x4e, 0x49,
		0x32, 0x55, 0x6e, 0x69, 0x20, 0x32, 0x47, 0x49, 0x20, 0x46, 0x6c, 0x79, 0x20, 0x54, 0x32, 0x46,
		0x6c, 0x79, 0x20, 0x54, 0x32, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x47, 0x61, 0x72, 0x6d, 0x69, 0x6e,
		0x2d, 0x41, 0x73, 0x75, 0x73, 0x47, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x6e, 0x65, 0x20,
		0x24, 0x31, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x24, 0x31, 0x22, 0x47, 0x61, 0x7a, 0x65, 0x72, 0x47, 0x61, 0x7a, 0x65, 0x72, 0x5f, 0x54, 0x56,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x47, 0x65, 0x61, 0x6e, 0x65, 0x65, 0x47, 0x65,
		0x61, 0x6e, 0x74, 0x47, 0x65, 0x61, 0x72, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47, 0x65,
		0x6d, 0x69, 0x6e, 0x69, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x47, 0x4d, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x33, 0x30, 0x30, 0x47,
		0x4d, 0x20, 0x31, 0x30, 0x47, 0x33, 0x31, 0x30, 0x47, 0x4d, 0x20, 0x32, 0x31, 0x47, 0x35, 0x31,
		0x30, 0x47, 0x4d, 0x20, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x33, 0x31, 0x32, 0x47,
		0x4d, 0x20, 0x32, 0x32, 0x47, 0x33, 0x31, 0x36, 0x47, 0x4d, 0x20, 0x32, 0x33, 0x47, 0x33, 0x31,
		0x34, 0x47, 0x4d, 0x20, 0x32, 0x33, 0x20, 0x53, 0x45, 0x47, 0x35, 0x31, 0x32, 0x47, 0x4d, 0x20,
		0x32, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x37, 0x30, 0x32, 0x47, 0x4d, 0x20, 0x32, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x47, 0x37, 0x30, 0x30, 0x47, 0x4d, 0x20, 0x32, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x47, 0x33, 0x30, 0x31, 0x47, 0x4d, 0x20, 0x32, 0x30, 0x47, 0x35, 0x30, 0x31, 0x47, 0x4d,
		0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x35, 0x31, 0x34, 0x47, 0x4d, 0x20, 0x32, 0x34,
		0x20, 0x50, 0x72, 0x6f, 0x47, 0x4d, 0x20, 0x24, 0x31, 0x44, 0x47, 0x4d, 0x20, 0x36, 0x47, 0x4d,
		0x20, 0x24, 0x31, 0x47, 0x4d, 0x38, 0x20, 0x67, 0x6f, 0x47, 0x4d, 0x20, 0x38, 0x20, 0x47, 0x6f,
		0x47, 0x30, 0x30, 0x38, 0x47, 0x4d, 0x20, 0x39, 0x20, 0x47, 0x6f, 0x47, 0x4d, 0x20, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x47, 0x39, 0x30, 0x31, 0x47, 0x4d, 0x20, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69,
		0x78, 0x20, 0x35, 0x47, 0x47, 0x4d, 0x20, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x31, 0x30,
		0x30, 0x47, 0x4d, 0x20, 0x36, 0x20, 0x44, 0x53, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
		0x79, 0x20, 0x24, 0x31, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x49, 0x49,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x4d, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
		0x79, 0x20, 0x49, 0x49, 0x47, 0x4d, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
		0x20, 0x74, 0x61, 0x62, 0x20, 0x38, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x38, 0x34, 0x47, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x47, 0x65, 0x6e, 0x65,
		0x72, 0x61, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x34, 0x47, 0x34, 0x47, 0x47,
		0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x47, 0x65, 0x6f, 0x74, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x65,
		0x41, 0x6d, 0x69, 0x67, 0x6f, 0x47, 0x65, 0x6f, 0x74, 0x65, 0x78, 0x47, 0x65, 0x74, 0x6e, 0x6f,
		0x72, 0x64, 0x47, 0x66, 0x6f, 0x6e, 0x65, 0x47, 0x68, 0x69, 0x61, 0x53, 0x76, 0x65, 0x67, 0x6c,
		0x69, 0x6f, 0x20, 0x24, 0x31, 0x51, 0x53, 0x37, 0x30, 0x32, 0x47, 0x48, 0x49, 0x41, 0x5f, 0x5a,
		0x45, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x5a, 0x65, 0x75, 0x73, 0x20, 0x33, 0x47, 0x56, 0x45, 0x43,
		0x54, 0x4f, 0x52, 0x5f, 0x53, 0x4c, 0x49, 0x4d, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x53,
		0x6c, 0x69, 0x6d, 0x47, 0x48, 0x49, 0x41, 0x5f, 0x41, 0x58, 0x49, 0x53, 0x37, 0x50, 0x41, 0x78,
		0x69, 0x73, 0x20, 0x37, 0x50, 0x41, 0x58, 0x49, 0x53, 0x37, 0x5f, 0x53, 0x4c, 0x49, 0x4d, 0x41,
		0x78, 0x69, 0x73, 0x20, 0x37, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x41, 0x58, 0x49, 0x53, 0x37, 0x5f,
		0x4c, 0x45, 0x44, 0x41, 0x78, 0x69, 0x73, 0x20, 0x37, 0x20, 0x4c, 0x45, 0x44, 0x47, 0x48, 0x49,
		0x41, 0x5f, 0x41, 0x58, 0x49, 0x53, 0x37, 0x5f, 0x33, 0x47, 0x41, 0x78, 0x69, 0x73, 0x20, 0x37,
		0x20, 0x33, 0x47, 0x47, 0x48, 0x49, 0x41, 0x5f, 0x41, 0x58, 0x49, 0x53, 0x37, 0x41, 0x78, 0x69,
		0x73, 0x20, 0x37, 0x41, 0x37, 0x5f, 0x57, 0x46, 0x41, 0x37, 0x20, 0x57, 0x69, 0x46, 0x69, 0x56,
		0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x54, 0x41, 0x37, 0x57,
		0x46, 0x41, 0x37, 0x20, 0x52, 0x4f, 0x4a, 0x41, 0x47, 0x54, 0x41, 0x37, 0x50, 0x4c, 0x55, 0x53,
		0x41, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x52, 0x45, 0x4f, 0x5f, 0x54, 0x41, 0x42, 0x38,
		0x47, 0x54, 0x52, 0x45, 0x4f, 0x20, 0x54, 0x41, 0x42, 0x38, 0x47, 0x47, 0x54, 0x20, 0x4b, 0x49,
		0x44, 0x53, 0x20, 0x37, 0x47, 0x54, 0x56, 0x52, 0x31, 0x30, 0x53, 0x56, 0x65, 0x63, 0x74, 0x6f,
		0x72, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x47, 0x54, 0x41, 0x42,
		0x50, 0x4e, 0x44, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x50, 0x61, 0x6e, 0x64, 0x61, 0x56, 0x45, 0x4e,
		0x55, 0x53, 0x37, 0x56, 0x45, 0x4e, 0x55, 0x53, 0x20, 0x37, 0x47, 0x68, 0x6f, 0x6e, 0x67, 0x47,
		0x68, 0x6f, 0x73, 0x74, 0x47, 0x30, 0x33, 0x47, 0x69, 0x67, 0x61, 0x62, 0x79, 0x74, 0x65, 0x52,
		0x6f, 0x6d, 0x61, 0x20, 0x52, 0x32, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x6f, 0x6d,
		0x61, 0x20, 0x52, 0x32, 0x53, 0x69, 0x6d, 0x62, 0x61, 0x20, 0x53, 0x58, 0x31, 0x47, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x53, 0x69, 0x6d, 0x62, 0x61, 0x20, 0x53, 0x58, 0x31, 0x47, 0x69, 0x67,
		0x61, 0x73, 0x65, 0x74, 0x47, 0x69, 0x67, 0x61, 0x73, 0x65, 0x74, 0x20, 0x51, 0x56, 0x24, 0x31,
		0x47, 0x53, 0x24, 0x31, 0x47, 0x53, 0x35, 0x37, 0x2d, 0x36, 0x4d, 0x45, 0x20, 0x50, 0x72, 0x6f,
		0x47, 0x53, 0x35, 0x35, 0x2d, 0x36, 0x4d, 0x45, 0x45, 0x39, 0x34, 0x30, 0x2d, 0x32, 0x37, 0x39,
		0x37, 0x2d, 0x30, 0x30, 0x47, 0x58, 0x34, 0x45, 0x39, 0x34, 0x30, 0x2d, 0x32, 0x37, 0x39, 0x37,
		0x2d, 0x30, 0x31, 0x47, 0x58, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x39, 0x34, 0x30, 0x2d, 0x32,
		0x37, 0x36, 0x36, 0x2d, 0x30, 0x30, 0x47, 0x53, 0x33, 0x45, 0x39, 0x34, 0x30, 0x2d, 0x32, 0x37,
		0x39, 0x35, 0x2d, 0x30, 0x30, 0x47, 0x53, 0x34, 0x45, 0x39, 0x34, 0x30, 0x2d, 0x32, 0x38, 0x34,
		0x39, 0x2d, 0x30, 0x30, 0x47, 0x58, 0x36, 0x45, 0x39, 0x34, 0x30, 0x2d, 0x32, 0x38, 0x34, 0x39,
		0x2d, 0x30, 0x31, 0x47, 0x58, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x39, 0x34, 0x30, 0x2d, 0x32,
		0x37, 0x39, 0x36, 0x2d, 0x30, 0x30, 0x47, 0x53, 0x35, 0x45, 0x39, 0x34, 0x30, 0x2d, 0x32, 0x38,
		0x37, 0x38, 0x2d, 0x30, 0x33, 0x47, 0x53, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x53, 0x35,
		0x33, 0x2d, 0x36, 0x4d, 0x45, 0x20, 0x50, 0x75, 0x72, 0x65, 0x47, 0x69, 0x6e, 0x69, 0x57, 0x24,
		0x31, 0x53, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x57, 0x31, 0x37, 0x57, 0x30, 0x38, 0x53, 0x35,
		0x47, 0x69, 0x6e, 0x7a, 0x7a, 0x75, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74,
		0x65, 0x47, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x47, 0x4e, 0x50, 0x32, 0x31, 0x4d, 0x30, 0x32, 0x4d,
		0x31, 0x32, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4e, 0x38, 0x31, 0x30, 0x47,
		0x4e, 0x38, 0x30, 0x30, 0x33, 0x4c, 0x4d, 0x36, 0x4c, 0x57, 0x42, 0x4c, 0x37, 0x35, 0x31, 0x39,
		0x53, 0x36, 0x73, 0x57, 0x42, 0x4c, 0x37, 0x33, 0x36, 0x31, 0x4d, 0x36, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x32, 0x30, 0x31, 0x39, 0x30, 0x36, 0x31, 0x39,
		0x47, 0x4b, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x32, 0x30, 0x31, 0x39, 0x30, 0x34, 0x31, 0x38, 0x51,
		0x4b, 0x36, 0x47, 0x4e, 0x38, 0x30, 0x30, 0x33, 0x47, 0x41, 0x55, 0x30, 0x38, 0x32, 0x30, 0x4b,
		0x38, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4e, 0x53, 0x32, 0x31, 0x36, 0x31, 0x42, 0x4d, 0x31, 0x38,
		0x47, 0x4e, 0x24, 0x31, 0x4d, 0x37, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x35, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x31, 0x31, 0x50, 0x35,
		0x20, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x35, 0x20, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x43, 0x44, 0x4d,
		0x41, 0x4d, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x43, 0x44, 0x4d, 0x41, 0x50, 0x37, 0x20,
		0x4d, 0x61, 0x78, 0x50, 0x38, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x36, 0x20, 0x4d, 0x69, 0x72, 0x72,
		0x6f, 0x72, 0x47, 0x4c, 0x59, 0x31, 0x36, 0x32, 0x30, 0x4d, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x46, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31,
		0x30, 0x33, 0x24, 0x31, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x44, 0x31, 0x47, 0x6c, 0x6f, 0x62,
		0x65, 0x78, 0x58, 0x38, 0x47, 0x55, 0x36, 0x30, 0x31, 0x32, 0x42, 0x47, 0x6c, 0x6f, 0x62, 0x6d,
		0x61, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x66, 0x69, 0x69, 0x73, 0x68, 0x47, 0x70, 0x61, 0x64, 0x5f,
		0x55, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x55, 0x47, 0x70, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72,
		0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x20, 0x53,
		0x74, 0x61, 0x72, 0x53, 0x74, 0x61, 0x72, 0x4f, 0x53, 0x47, 0x6f, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x47, 0x4f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x4f, 0x20,
		0x4f, 0x6e, 0x79, 0x78, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x6f, 0x20, 0x4f, 0x6e, 0x79, 0x78,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x4f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x48, 0x44, 0x47,
		0x6f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x48, 0x44, 0x47, 0x4f, 0x20, 0x4f, 0x6e, 0x79, 0x78,
		0x47, 0x6f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x47, 0x6f, 0x24, 0x31, 0x47, 0x6f, 0x63, 0x6f, 0x6d,
		0x6d, 0x61, 0x48, 0x31, 0x2d, 0x43, 0x2d, 0x41, 0x4c, 0x41, 0x44, 0x45, 0x4e, 0x47, 0x57, 0x35,
		0x47, 0x6f, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x46, 0x31, 0x30, 0x5f, 0x50, 0x52,
		0x49, 0x4d, 0x45, 0x46, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x46, 0x33, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x46, 0x33, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x46, 0x39, 0x5f, 0x50, 0x4c,
		0x55, 0x53, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x37, 0x5f, 0x33, 0x47, 0x54, 0x65, 0x61, 0x6d, 0x20,
		0x37, 0x2e, 0x30, 0x20, 0x33, 0x47, 0x47, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
		0x4e, 0x65, 0x74, 0x74, 0x61, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x2d, 0x24, 0x31, 0x4e,
		0x65, 0x74, 0x74, 0x61, 0x20, 0x33, 0x42, 0x45, 0x4e, 0x47, 0x41, 0x4c, 0x5f, 0x36, 0x42, 0x65,
		0x6e, 0x67, 0x61, 0x6c, 0x20, 0x36, 0x44, 0x45, 0x54, 0x52, 0x4f, 0x49, 0x54, 0x20, 0x33, 0x44,
		0x65, 0x74, 0x72, 0x6f, 0x69, 0x74, 0x20, 0x33, 0x47, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72,
		0x47, 0x6f, 0x6c, 0x79, 0x47, 0x6f, 0x6d, 0x65, 0x43, 0x37, 0x32, 0x43, 0x37, 0x31, 0x43, 0x35,
		0x31, 0x4b, 0x31, 0x55, 0x31, 0x55, 0x37, 0x55, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x55, 0x39,
		0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x31, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x41, 0x4f, 0x53, 0x50, 0x20, 0x6f, 0x6e,
		0x20, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x4e, 0x65, 0x78, 0x75, 0x73,
		0x20, 0x35, 0x41, 0x4f, 0x53, 0x50, 0x20, 0x6f, 0x6e, 0x20, 0x4d, 0x61, 0x6e, 0x74, 0x61, 0x4e,
		0x65, 0x78, 0x75, 0x73, 0x20, 0x31, 0x30, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x53, 0x6c, 0x61,
		0x74, 0x65, 0x46, 0x69, 0x62, 0x65, 0x72, 0x20, 0x24, 0x31, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65,
		0x63, 0x61, 0x73, 0x74, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x63, 0x61, 0x73, 0x74, 0x20, 0x48,
		0x44, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x63, 0x61, 0x73, 0x74, 0x20, 0x48, 0x44, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x32, 0x29, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x63, 0x61, 0x73, 0x74, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54, 0x56, 0x50, 0x69,
		0x78, 0x65, 0x6c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c,
		0x20, 0x33, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x33, 0x61, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x33, 0x20,
		0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x32, 0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65,
		0x6c, 0x20, 0x33, 0x61, 0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x20, 0x58,
		0x4c, 0x47, 0x30, 0x32, 0x30, 0x4d, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x50, 0x49, 0x58,
		0x45, 0x4c, 0x34, 0x58, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x20, 0x58, 0x50, 0x69, 0x78,
		0x65, 0x6c, 0x20, 0x34, 0x61, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x61, 0x20, 0x28, 0x35,
		0x47, 0x29, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x24, 0x31, 0x61, 0x50, 0x69, 0x78, 0x65, 0x6c,
		0x20, 0x35, 0x61, 0x20, 0x35, 0x47, 0x47, 0x30, 0x31, 0x31, 0x41, 0x50, 0x69, 0x78, 0x65, 0x6c,
		0x20, 0x32, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4f, 0x33,
		0x5a, 0x35, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x37, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x35,
		0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x69, 0x78, 0x65, 0x6c,
		0x20, 0x38, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x37, 0x61, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x24, 0x31, 0x50, 0x69,
		0x70, 0x69, 0x74, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x50, 0x69, 0x78,
		0x65, 0x6c, 0x20, 0x43, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x50, 0x69, 0x78, 0x65, 0x6c, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x6f, 0x50, 0x69, 0x78, 0x65,
		0x6c, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x44, 0x54, 0x2d, 0x32, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x36,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x36, 0x49, 0x36, 0x53, 0x49, 0x36, 0x53, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x49, 0x37, 0x49, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x34, 0x20, 0x4d, 0x65,
		0x67, 0x61, 0x47, 0x6f, 0x6f, 0x77, 0x65, 0x65, 0x6c, 0x47, 0x70, 0x6c, 0x75, 0x73, 0x47, 0x4d,
		0x43, 0x2d, 0x37, 0x31, 0x32, 0x37, 0x4d, 0x58, 0x32, 0x30, 0x47, 0x4d, 0x43, 0x2d, 0x36, 0x36,
		0x38, 0x4e, 0x51, 0x32, 0x30, 0x53, 0x47, 0x4d, 0x43, 0x2d, 0x36, 0x36, 0x38, 0x4d, 0x51, 0x32,
		0x30, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x65, 0x47, 0x52, 0x41, 0x44, 0x49, 0x45,
		0x4e, 0x54, 0x45, 0x47, 0x72, 0x61, 0x65, 0x74, 0x7a, 0x47, 0x72, 0x61, 0x70, 0x65, 0x47, 0x54,
		0x4d, 0x2d, 0x35, 0x24, 0x31, 0x47, 0x72, 0x65, 0x61, 0x74, 0x20, 0x41, 0x73, 0x69, 0x61, 0x47,
		0x72, 0x65, 0x65, 0x47, 0x30, 0x35, 0x31, 0x35, 0x44, 0x54, 0x6f, 0x73, 0x6f, 0x74, 0x20, 0x35,
		0x47, 0x47, 0x30, 0x36, 0x31, 0x35, 0x44, 0x54, 0x6f, 0x73, 0x6f, 0x74, 0x20, 0x37, 0x47, 0x47,
		0x72, 0x65, 0x65, 0x6e, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x47, 0x2d, 0x24, 0x31, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x47, 0x2d, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x72, 0x65, 0x65, 0x6e,
		0x20, 0x4f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x4f, 0x20, 0x35, 0x35, 0x33, 0x30, 0x33, 0x43,
		0x35, 0x20, 0x47, 0x4f, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x74, 0x65, 0x6c, 0x58, 0x31, 0x20, 0x4c,
		0x69, 0x67, 0x68, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x52, 0x45,
		0x47, 0x41, 0x4c, 0x20, 0x52, 0x32, 0x52, 0x65, 0x67, 0x61, 0x6c, 0x20, 0x52, 0x32, 0x52, 0x65,
		0x67, 0x61, 0x6c, 0x47, 0x72, 0x65, 0x74, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x42, 0x65, 0x72, 0x77,
		0x65, 0x72, 0x74, 0x47, 0x72, 0x75, 0x6e, 0x64, 0x69, 0x67, 0x41, 0x46, 0x54, 0x45, 0x55, 0x30,
		0x31, 0x34, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x37, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x41, 0x46, 0x54, 0x45, 0x55, 0x46, 0x46, 0x30, 0x31, 0x34, 0x4f, 0x4c,
		0x45, 0x44, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x46, 0x54, 0x45,
		0x55, 0x30, 0x31, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x36, 0x20, 0x48, 0x44, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x47, 0x74, 0x65, 0x6c, 0x41, 0x37, 0x32, 0x37, 0x5f, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x50, 0x72, 0x6f, 0x41, 0x37, 0x32, 0x37, 0x20,
		0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x38, 0x73, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x39, 0x58, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x47, 0x75, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x48, 0x31, 0x33, 0x33, 0x42, 0x65, 0x74,
		0x61, 0x63, 0x72, 0x75, 0x78, 0x48, 0x39, 0x36, 0x4d, 0x61, 0x78, 0x20, 0x52, 0x4b, 0x24, 0x31,
		0x4d, 0x61, 0x78, 0x20, 0x58, 0x32, 0x4d, 0x61, 0x78, 0x20, 0x56, 0x31, 0x31, 0x50, 0x72, 0x6f,
		0x2b, 0x48, 0x41, 0x4f, 0x51, 0x49, 0x4e, 0x48, 0x41, 0x4f, 0x56, 0x4d, 0x48, 0x44, 0x43, 0x48,
		0x31, 0x30, 0x5f, 0x4f, 0x4e, 0x45, 0x48, 0x31, 0x30, 0x20, 0x4f, 0x6e, 0x65, 0x48, 0x45, 0x43,
		0x35, 0x30, 0x53, 0x53, 0x44, 0x2d, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x54, 0x56, 0x2d, 0x52,
		0x31, 0x52, 0x31, 0x20, 0x35, 0x30, 0x53, 0x20, 0x34, 0x4b, 0x48, 0x45, 0x52, 0x4f, 0x53, 0x50,
		0x2d, 0x30, 0x30, 0x31, 0x48, 0x49, 0x50, 0x45, 0x52, 0x24, 0x31, 0x2d, 0x50, 0x61, 0x64, 0x4d,
		0x45, 0x44, 0x49, 0x41, 0x20, 0x53, 0x54, 0x49, 0x43, 0x4b, 0x20, 0x34, 0x4b, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x20, 0x54, 0x56, 0x20, 0x24, 0x31, 0x48, 0x4b, 0x43, 0x48, 0x4b, 0x43, 0x20, 0x34, 0x4b, 0x20,
		0x41, 0x49, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x48, 0x4b, 0x50, 0x72, 0x6f,
		0x48, 0x4c, 0x4c, 0x4f, 0x48, 0x4d, 0x44, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x2b, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x75, 0x6c, 0x73, 0x65, 0x48, 0x4f, 0x4c, 0x4c, 0x45, 0x42, 0x45, 0x52, 0x47, 0x48, 0x47,
		0x54, 0x56, 0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31, 0x48, 0x4f, 0x4e, 0x4b, 0x55, 0x41, 0x48, 0x47,
		0x48, 0x4f, 0x54, 0x52, 0x45, 0x41, 0x4c, 0x53, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x50,
		0x43, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48, 0x50, 0x48, 0x50, 0x20, 0x53, 0x6c, 0x61, 0x74,
		0x65, 0x20, 0x36, 0x20, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x20, 0x54, 0x61, 0x62, 0x53, 0x6c, 0x61,
		0x74, 0x65, 0x20, 0x36, 0x20, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x61, 0x62, 0x48, 0x50, 0x20,
		0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6c,
		0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x32, 0x31, 0x63, 0x6d,
		0x5f, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71,
		0x20, 0x38, 0x32, 0x30, 0x30, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x53, 0x46, 0x46, 0x20,
		0x50, 0x43, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x20, 0x24, 0x31, 0x48, 0x50, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x38, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x6c, 0x61,
		0x74, 0x65, 0x20, 0x38, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x69, 0x50, 0x41, 0x51,
		0x20, 0x24, 0x31, 0x56, 0x65, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24,
		0x31, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x41, 0x49, 0x4f, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x5a,
		0x32, 0x34, 0x30, 0x20, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x74,
		0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x54, 0x43, 0x55, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x55, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x31, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x55, 0x31, 0x32,
		0x20, 0x4c, 0x69, 0x66, 0x65, 0x55, 0x31, 0x31, 0x20, 0x45, 0x79, 0x65, 0x73, 0x49, 0x6d, 0x61,
		0x67, 0x69, 0x6f, 0x45, 0x76, 0x6f, 0x20, 0x33, 0x47, 0x45, 0x76, 0x6f, 0x20, 0x34, 0x47, 0x44,
		0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x32, 0x38, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53,
		0x49, 0x4d, 0x55, 0x31, 0x31, 0x4f, 0x6e, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x4f, 0x6e, 0x65,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x4f,
		0x6e, 0x65, 0x20, 0x58, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x31, 0x30, 0x4a, 0x4a, 0x20, 0x4f,
		0x6e, 0x65, 0x55, 0x32, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x20, 0x42, 0x75, 0x74, 0x74, 0x65,
		0x72, 0x66, 0x6c, 0x79, 0x42, 0x75, 0x74, 0x74, 0x65, 0x72, 0x66, 0x6c, 0x79, 0x20, 0x53, 0x4f,
		0x6e, 0x65, 0x20, 0x4d, 0x39, 0x5f, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x43, 0x61, 0x6d, 0x65,
		0x72, 0x61, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x45, 0x64,
		0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39, 0x4f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x20, 0x53, 0x49, 0x4d, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x37, 0x4f, 0x6e, 0x65,
		0x20, 0x4d, 0x38, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x38, 0x20, 0x45, 0x79, 0x65, 0x4f, 0x6e, 0x65,
		0x20, 0x45, 0x38, 0x4f, 0x6e, 0x65, 0x20, 0x45, 0x39, 0x4f, 0x6e, 0x65, 0x20, 0x45, 0x39, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x39, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x65,
		0x6d, 0x69, 0x78, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x2b, 0x4f, 0x6e, 0x65, 0x20, 0x41, 0x39, 0x41,
		0x44, 0x52, 0x36, 0x33, 0x30, 0x30, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x49, 0x6e, 0x63, 0x72,
		0x65, 0x64, 0x69, 0x62, 0x6c, 0x65, 0x48, 0x54, 0x43, 0x36, 0x34, 0x33, 0x35, 0x4c, 0x56, 0x57,
		0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x44, 0x4e, 0x41, 0x41, 0x44, 0x52, 0x36, 0x34, 0x30, 0x30,
		0x4c, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6c, 0x74, 0x41, 0x44, 0x52, 0x36,
		0x34, 0x31, 0x30, 0x4c, 0x52, 0x41, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x49, 0x6e, 0x63, 0x72,
		0x65, 0x64, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x33, 0x53, 0x50, 0x56, 0x20, 0x45, 0x36, 0x30, 0x30,
		0x53, 0x50, 0x56, 0x20, 0x45, 0x36, 0x35, 0x30, 0x56, 0x6f, 0x78, 0x32, 0x50, 0x59, 0x42, 0x32,
		0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20,
		0x36, 0x32, 0x36, 0x53, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x35, 0x31, 0x30, 0x44, 0x65,
		0x73, 0x69, 0x72, 0x65, 0x20, 0x35, 0x33, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x33,
		0x31, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x33, 0x32, 0x30, 0x44, 0x65, 0x73, 0x69,
		0x72, 0x65, 0x20, 0x36, 0x30, 0x38, 0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x31,
		0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x30, 0x31, 0x44, 0x65, 0x73, 0x69, 0x72,
		0x65, 0x20, 0x36, 0x32, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x32, 0x36, 0x44,
		0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x38, 0x31, 0x36, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20,
		0x35, 0x32, 0x36, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x39, 0x73, 0x44, 0x65, 0x73,
		0x69, 0x72, 0x65, 0x20, 0x36, 0x32, 0x30, 0x47, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49,
		0x4d, 0x45, 0x78, 0x6f, 0x64, 0x75, 0x73, 0x20, 0x31, 0x55, 0x31, 0x39, 0x65, 0x44, 0x65, 0x73,
		0x69, 0x72, 0x65, 0x20, 0x31, 0x30, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x44, 0x65,
		0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x30, 0x20, 0x45, 0x76,
		0x6f, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x65,
		0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x53, 0x74, 0x79,
		0x6c, 0x65, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x48, 0x44, 0x32, 0x48, 0x44, 0x32, 0x50, 0x37, 0x31,
		0x35, 0x61, 0x46, 0x6c, 0x79, 0x65, 0x72, 0x46, 0x6c, 0x79, 0x65, 0x72, 0x20, 0x24, 0x31, 0x4f,
		0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x24, 0x31, 0x20, 0x28, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74,
		0x29, 0x57, 0x69, 0x6c, 0x64, 0x66, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x57, 0x69, 0x6c, 0x64, 0x66, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x48, 0x61, 0x66, 0x75, 0x72, 0x79, 0x47, 0x54, 0x32, 0x30, 0x48, 0x61, 0x69, 0x65, 0x72,
		0x41, 0x32, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x4e, 0x46, 0x43, 0x41, 0x6c, 0x70, 0x68, 0x61,
		0x20, 0x41, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4e, 0x46, 0x43, 0x41, 0x34, 0x5f, 0x4c,
		0x69, 0x74, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x41, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x48, 0x4d, 0x2d, 0x4e, 0x35, 0x30, 0x35, 0x2d, 0x46, 0x4c, 0x49, 0x38, 0x53, 0x35, 0x20, 0x53,
		0x69, 0x6c, 0x6b, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x45, 0x31, 0x33, 0x48,
		0x4d, 0x2d, 0x4e, 0x37, 0x30, 0x30, 0x2d, 0x46, 0x4c, 0x48, 0x4d, 0x2d, 0x4e, 0x37, 0x30, 0x31,
		0x2d, 0x46, 0x4c, 0x48, 0x4d, 0x2d, 0x4e, 0x35, 0x30, 0x31, 0x2d, 0x46, 0x4c, 0x4c, 0x35, 0x36,
		0x48, 0x4d, 0x2d, 0x49, 0x35, 0x35, 0x39, 0x2d, 0x46, 0x4c, 0x4c, 0x35, 0x35, 0x73, 0x48, 0x4d,
		0x2d, 0x49, 0x35, 0x36, 0x30, 0x2d, 0x46, 0x4c, 0x47, 0x37, 0x73, 0x48, 0x4d, 0x2d, 0x47, 0x35,
		0x35, 0x33, 0x2d, 0x46, 0x4c, 0x47, 0x35, 0x31, 0x50, 0x32, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d,
		0x61, 0x78, 0x20, 0x43, 0x34, 0x36, 0x42, 0x32, 0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61,
		0x78, 0x20, 0x45, 0x43, 0x4d, 0x69, 0x6e, 0x74, 0x61, 0x6b, 0x61, 0x68, 0x61, 0x69, 0x65, 0x72,
		0x41, 0x54, 0x56, 0x6e, 0x69, 0x70, 0x70, 0x6f, 0x72, 0x69, 0x68, 0x61, 0x69, 0x65, 0x72, 0x41,
		0x54, 0x56, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x4f, 0x4c, 0x45, 0x44,
		0x20, 0x54, 0x56, 0x20, 0x53, 0x39, 0x68, 0x61, 0x69, 0x65, 0x72, 0x20, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x44, 0x56, 0x42, 0x32, 0x4b, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x44, 0x56, 0x42, 0x32, 0x4b, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x46, 0x46, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x61, 0x69,
		0x70, 0x61, 0x69, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x53, 0x36, 0x48, 0x61, 0x69, 0x78, 0x75,
		0x48, 0x61, 0x6d, 0x6c, 0x65, 0x74, 0x5a, 0x65, 0x6c, 0x69, 0x67, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x24, 0x31, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
		0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x6e, 0x65,
		0x72, 0x67, 0x79, 0x20, 0x32, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x48, 0x61, 0x6d, 0x6d,
		0x65, 0x72, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x32, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20,
		0x32, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x72, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x49, 0x72, 0x6f,
		0x6e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41,
		0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20,
		0x4c, 0x54, 0x45, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x5f,
		0x35, 0x47, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x35, 0x47, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72,
		0x5f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x32, 0x5f, 0x50, 0x52, 0x4f, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x24, 0x31, 0x48, 0x61,
		0x6e, 0x64, 0x68, 0x65, 0x6c, 0x64, 0x48, 0x61, 0x6e, 0x6e, 0x53, 0x70, 0x72, 0x65, 0x65, 0x53,
		0x4e, 0x31, 0x41, 0x54, 0x37, 0x31, 0x57, 0x28, 0x42, 0x29, 0x53, 0x4e, 0x37, 0x30, 0x54, 0x33,
		0x31, 0x53, 0x4e, 0x37, 0x30, 0x54, 0x33, 0x53, 0x4e, 0x37, 0x30, 0x54, 0x35, 0x31, 0x41, 0x53,
		0x4e, 0x39, 0x37, 0x54, 0x34, 0x31, 0x57, 0x54, 0x37, 0x2d, 0x51, 0x43, 0x53, 0x4e, 0x41, 0x54,
		0x37, 0x31, 0x42, 0x55, 0x45, 0x48, 0x61, 0x6e, 0x73, 0x6f, 0x6e, 0x48, 0x61, 0x72, 0x64, 0x6b,
		0x65, 0x72, 0x6e, 0x65, 0x6c, 0x4f, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x20, 0x24, 0x31, 0x48, 0x61,
		0x72, 0x70, 0x65, 0x72, 0x48, 0x61, 0x72, 0x74, 0x65, 0x6e, 0x73, 0x48, 0x54, 0x24, 0x31, 0x2d,
		0x24, 0x32, 0x48, 0x61, 0x73, 0x65, 0x65, 0x48, 0x61, 0x74, 0x68, 0x77, 0x61, 0x79, 0x48, 0x65,
		0x61, 0x64, 0x57, 0x6f, 0x6c, 0x66, 0x48, 0x50, 0x61, 0x64, 0x24, 0x31, 0x57, 0x50, 0x61, 0x64,
		0x24, 0x31, 0x46, 0x50, 0x61, 0x64, 0x33, 0x48, 0x65, 0x69, 0x6d, 0x61, 0x74, 0x48, 0x65, 0x6c,
		0x69, 0x6f, 0x48, 0x65, 0x78, 0x61, 0x42, 0x79, 0x74, 0x65, 0x58, 0x37, 0x48, 0x65, 0x7a, 0x69,
		0x72, 0x65, 0x48, 0x69, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x24, 0x31, 0x42, 0x6f, 0x6f, 0x73,
		0x74, 0x20, 0x47, 0x6f, 0x56, 0x48, 0x49, 0x58, 0x2d, 0x34, 0x30, 0x46, 0x31, 0x35, 0x32, 0x4d,
		0x53, 0x59, 0x62, 0x56, 0x48, 0x49, 0x58, 0x2d, 0x34, 0x30, 0x46, 0x31, 0x35, 0x32, 0x4d, 0x53,
		0x59, 0x56, 0x48, 0x49, 0x58, 0x2d, 0x24, 0x31, 0x48, 0x69, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x46,
		0x49, 0x4f, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x39, 0x20, 0x53, 0x45, 0x4d, 0x4e, 0x54, 0x2d, 0x42,
		0x44, 0x30, 0x30, 0x39, 0x7a, 0x20, 0x35, 0x47, 0x48, 0x65, 0x62, 0x65, 0x2d, 0x42, 0x44, 0x30,
		0x30, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x65, 0x72, 0x61, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x39,
		0x41, 0x4c, 0x48, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x4d, 0x47, 0x5a, 0x2d, 0x42, 0x44, 0x30, 0x30,
		0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x31, 0x53, 0x55, 0x50, 0x2d, 0x42, 0x44, 0x30, 0x30,
		0x31, 0x32, 0x20, 0x53, 0x45, 0x48, 0x69, 0x2d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x48, 0x4c, 0x56,
		0x2d, 0x54, 0x24, 0x31, 0x48, 0x69, 0x42, 0x79, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65,
		0x20, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x36, 0x20,
		0x47, 0x65, 0x6e, 0x20, 0x49, 0x49, 0x49, 0x48, 0x69, 0x47, 0x72, 0x61, 0x63, 0x65, 0x48, 0x69,
		0x48, 0x69, 0x48, 0x49, 0x48, 0x49, 0x2d, 0x24, 0x31, 0x4b, 0x48, 0x2d, 0x54, 0x41, 0x42, 0x2d,
		0x30, 0x31, 0x48, 0x69, 0x4b, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6e, 0x35, 0x46, 0x75, 0x6e, 0x20,
		0x35, 0x48, 0x69, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x24, 0x31, 0x50,
		0x75, 0x72, 0x65, 0x20, 0x33, 0x53, 0x48, 0x69, 0x62, 0x65, 0x72, 0x67, 0x51, 0x4c, 0x45, 0x44,
		0x20, 0x24, 0x31, 0x24, 0x31, 0x59, 0x20, 0x55, 0x48, 0x44, 0x2d, 0x52, 0x24, 0x31, 0x59, 0x20,
		0x55, 0x48, 0x44, 0x48, 0x69, 0x67, 0x68, 0x20, 0x51, 0x48, 0x69, 0x67, 0x68, 0x73, 0x63, 0x72,
		0x65, 0x65, 0x6e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x32, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x45,
		0x76, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x61, 0x78,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x53, 0x70, 0x61, 0x64, 0x65, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x46, 0x65, 0x73, 0x74, 0x20, 0x58, 0x4c, 0x20, 0x50, 0x72,
		0x6f, 0x46, 0x65, 0x73, 0x74, 0x20, 0x58, 0x4c, 0x46, 0x65, 0x73, 0x74, 0x20, 0x50, 0x72, 0x6f,
		0x46, 0x65, 0x73, 0x74, 0x42, 0x61, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x6f, 0x75,
		0x72, 0x50, 0x75, 0x72, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x75, 0x72, 0x65, 0x20,
		0x46, 0x52, 0x61, 0x7a, 0x61, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x61, 0x7a, 0x61, 0x72, 0x45,
		0x61, 0x73, 0x79, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x61, 0x73, 0x79, 0x20, 0x24,
		0x31, 0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x45,
		0x61, 0x73, 0x79, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69,
		0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x32, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x32,
		0x20, 0x53, 0x45, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x33, 0x20, 0x53, 0x45, 0x42, 0x6f, 0x6f,
		0x73, 0x74, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x45, 0x42, 0x6f, 0x6f, 0x73, 0x74,
		0x20, 0x33, 0x5a, 0x65, 0x72, 0x61, 0x20, 0x53, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x61,
		0x73, 0x74, 0x79, 0x56, 0x65, 0x72, 0x67, 0x65, 0x20, 0x4d, 0x57, 0x69, 0x6e, 0x57, 0x69, 0x6e,
		0x45, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x65, 0x73, 0x54,
		0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x52, 0x61, 0x67, 0x65,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x45, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x24, 0x31, 0x43, 0x4f, 0x53, 0x4d, 0x4f, 0x20, 0x44, 0x55, 0x4f, 0x43, 0x6f,
		0x73, 0x6d, 0x6f, 0x20, 0x44, 0x75, 0x6f, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x51, 0x48, 0x69,
		0x70, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x48, 0x69, 0x72, 0x65, 0x6d, 0x63, 0x6f, 0x4d, 0x61,
		0x74, 0x61, 0x64, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x41, 0x69, 0x72, 0x58, 0x36, 0x20,
		0x50, 0x72, 0x6f, 0x48, 0x69, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x45, 0x32, 0x37, 0x30, 0x42, 0x53,
		0x41, 0x53, 0x65, 0x72, 0x6f, 0x20, 0x37, 0x45, 0x32, 0x32, 0x53, 0x65, 0x72, 0x6f, 0x20, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x45, 0x32, 0x32, 0x38, 0x31, 0x53, 0x65, 0x72, 0x6f, 0x20, 0x38, 0x48,
		0x4c, 0x54, 0x45, 0x32, 0x30, 0x32, 0x4e, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x30, 0x33, 0x54, 0x41,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x43, 0x43, 0x48, 0x4c, 0x54, 0x45, 0x37, 0x30, 0x30, 0x54,
		0x41, 0x36, 0x48, 0x4c, 0x54, 0x45, 0x37, 0x33, 0x30, 0x54, 0x41, 0x36, 0x4c, 0x48, 0x4e, 0x52,
		0x33, 0x32, 0x30, 0x54, 0x48, 0x4c, 0x54, 0x45, 0x35, 0x35, 0x36, 0x4e, 0x4d, 0x35, 0x30, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x30, 0x32, 0x31, 0x4d, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x45, 0x35, 0x30, 0x73, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x20, 0x4d, 0x41, 0x58, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x79, 0x20, 0x45, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x20, 0x4d, 0x61, 0x78, 0x48, 0x4c, 0x54,
		0x45, 0x35, 0x30, 0x31, 0x4e, 0x56, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x53, 0x39, 0x30, 0x37,
		0x56, 0x33, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x32, 0x33, 0x45, 0x48, 0x33, 0x30, 0x48, 0x4c, 0x54,
		0x45, 0x37, 0x32, 0x30, 0x45, 0x55, 0x33, 0x30, 0x49, 0x34, 0x36, 0x44, 0x31, 0x47, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78,
		0x20, 0x52, 0x45, 0x47, 0x36, 0x38, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e,
		0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x5a, 0x45, 0x47, 0x39, 0x38, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61,
		0x78, 0x20, 0x55, 0x32, 0x46, 0x32, 0x36, 0x46, 0x32, 0x38, 0x46, 0x32, 0x39, 0x4b, 0x69, 0x6e,
		0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x34, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e,
		0x67, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67,
		0x20, 0x35, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x36, 0x46, 0x38, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x46, 0x33, 0x30, 0x53, 0x46, 0x34, 0x30, 0x46, 0x35, 0x30, 0x46, 0x35,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x31, 0x38, 0x48, 0x32, 0x30, 0x48, 0x4c, 0x54, 0x45,
		0x31, 0x30, 0x33, 0x45, 0x45, 0x32, 0x30, 0x48, 0x69, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x45,
		0x35, 0x30, 0x20, 0x31, 0x32, 0x38, 0x47, 0x45, 0x35, 0x30, 0x48, 0x69, 0x73, 0x65, 0x6e, 0x73,
		0x65, 0x20, 0x45, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x36, 0x34, 0x47, 0x45, 0x35,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x32, 0x39, 0x54, 0x52, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x48, 0x31, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x48, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x4c, 0x54, 0x45, 0x4d, 0x38, 0x30, 0x30,
		0x58, 0x69, 0x61, 0x6f, 0x68, 0x61, 0x69, 0x74, 0x75, 0x6e, 0x20, 0x32, 0x55, 0x34, 0x30, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x45, 0x39, 0x4e, 0x61, 0x6e, 0x61, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x79, 0x20, 0x48, 0x24, 0x31, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x20, 0x45, 0x33, 0x30, 0x20, 0x53, 0x45, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x55,
		0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x55, 0x33, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x48, 0x69, 0x74, 0x61, 0x63, 0x68, 0x69, 0x48, 0x69, 0x74, 0x65, 0x63, 0x68, 0x48, 0x6f,
		0x66, 0x66, 0x6d, 0x61, 0x6e, 0x6e, 0x58, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x6d, 0x61, 0x74, 0x69,
		0x63, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x63, 0x68, 0x41, 0x4c, 0x46, 0x41, 0x20, 0x24,
		0x31, 0x49, 0x64, 0x65, 0x61, 0x6c, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x49, 0x50, 0x53,
		0x24, 0x31, 0x48, 0x54, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x6d, 0x74, 0x6f, 0x6d, 0x50, 0x33, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x53, 0x31, 0x37, 0x48, 0x54, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x54, 0x24, 0x31, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x77, 0x65, 0x6c, 0x6c, 0x53, 0x63, 0x61, 0x6e,
		0x50, 0x61, 0x6c, 0x20, 0x24, 0x31, 0x45, 0x44, 0x41, 0x37, 0x31, 0x53, 0x63, 0x61, 0x6e, 0x50,
		0x61, 0x6c, 0x20, 0x45, 0x44, 0x41, 0x37, 0x31, 0x44, 0x6f, 0x6c, 0x70, 0x68, 0x69, 0x6e, 0x20,
		0x24, 0x31, 0x48, 0x6f, 0x6e, 0x67, 0x54, 0x6f, 0x70, 0x48, 0x6f, 0x6e, 0x67, 0x54, 0x6f, 0x70,
		0x5f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
		0x74, 0x6f, 0x72, 0x48, 0x6f, 0x6f, 0x7a, 0x6f, 0x46, 0x31, 0x33, 0x48, 0x6f, 0x70, 0x65, 0x6c,
		0x61, 0x6e, 0x64, 0x48, 0x59, 0x24, 0x31, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x48,
		0x6f, 0x73, 0x69, 0x6e, 0x48, 0x6f, 0x74, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x48, 0x50,
		0x50, 0x2d, 0x47, 0x53, 0x31, 0x48, 0x50, 0x50, 0x4c, 0x36, 0x30, 0x41, 0x43, 0x68, 0x69, 0x6c,
		0x61, 0x63, 0x61, 0x48, 0x50, 0x50, 0x4c, 0x36, 0x33, 0x41, 0x50, 0x61, 0x6e, 0x63, 0x61, 0x56,
		0x4c, 0x45, 0x35, 0x50, 0x6f, 0x62, 0x6c, 0x61, 0x6e, 0x6f, 0x50, 0x75, 0x79, 0x61, 0x48, 0x50,
		0x50, 0x2d, 0x4c, 0x35, 0x35, 0x42, 0x53, 0x65, 0x72, 0x72, 0x61, 0x6e, 0x6f, 0x48, 0x6f, 0x74,
		0x77, 0x61, 0x76, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x20, 0x56, 0x38, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x48, 0x6f, 0x74, 0x20, 0x36, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x52, 0x38, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x58, 0x31, 0x36, 0x43, 0x79, 0x62, 0x65,
		0x72, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x79, 0x62, 0x65, 0x72, 0x20, 0x58, 0x43,
		0x79, 0x62, 0x65, 0x72, 0x20, 0x24, 0x31, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x24, 0x31,
		0x57, 0x31, 0x30, 0x4d, 0x35, 0x69, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x52, 0x36, 0x30,
		0x54, 0x41, 0x42, 0x20, 0x52, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x52, 0x36,
		0x20, 0x52, 0x72, 0x6f, 0x54, 0x41, 0x42, 0x20, 0x52, 0x36, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x54, 0x61, 0x62, 0x20, 0x52, 0x36, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x54, 0x41, 0x42, 0x20,
		0x52, 0x37, 0x54, 0x61, 0x62, 0x20, 0x52, 0x37, 0x50, 0x65, 0x61, 0x72, 0x6c, 0x20, 0x4b, 0x24,
		0x31, 0x20, 0x28, 0x24, 0x32, 0x29, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x48, 0x6f, 0x77, 0x48, 0x54, 0x2d, 0x31, 0x30, 0x30, 0x31,
		0x47, 0x20, 0x47, 0x6f, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x48, 0x54, 0x2d, 0x24, 0x31, 0x48, 0x75,
		0x61, 0x64, 0x6f, 0x6f, 0x48, 0x47, 0x31, 0x31, 0x48, 0x75, 0x61, 0x67, 0x61, 0x6e, 0x48, 0x75,
		0x61, 0x76, 0x69, 0x4b, 0x48, 0x41, 0x54, 0x41, 0x52, 0x20, 0x48, 0x2d, 0x31, 0x30, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x4b, 0x48, 0x41, 0x54, 0x41, 0x52, 0x20, 0x48, 0x2d, 0x32, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x48, 0x75, 0x61, 0x77, 0x65, 0x69, 0x50, 0x75, 0x72, 0x61, 0x20, 0x37, 0x30, 0x50,
		0x75, 0x72, 0x61, 0x20, 0x37, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x50, 0x75, 0x72, 0x61,
		0x20, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x56, 0x43, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x20, 0x50, 0x75, 0x72, 0x73, 0x65, 0x47, 0x41, 0x52,
		0x2d, 0x41, 0x4e, 0x36, 0x30, 0x48, 0x69, 0x20, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x36, 0x30,
		0x73, 0x20, 0x35, 0x47, 0x47, 0x41, 0x52, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x69, 0x20, 0x45,
		0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x36, 0x30, 0x20, 0x35, 0x47, 0x42, 0x41, 0x4c, 0x2d, 0x41, 0x4e,
		0x32, 0x30, 0x48, 0x69, 0x20, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x47, 0x46, 0x59, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f,
		0x79, 0x20, 0x37, 0x30, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x30, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x30, 0x4d, 0x41, 0x47, 0x2d, 0x41, 0x4e, 0x30, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x30, 0x20, 0x47, 0x54, 0x52, 0x45, 0x50, 0x2d, 0x41,
		0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x41, 0x41, 0x2d, 0x41, 0x4e, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x4d, 0x41, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x31, 0x30, 0x30, 0x46, 0x4e, 0x45, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x37, 0x30, 0x46, 0x4e, 0x45, 0x2d, 0x4e, 0x58, 0x39, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x37, 0x30, 0x20, 0x35, 0x47, 0x53, 0x44, 0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x42, 0x4e, 0x2d, 0x4e,
		0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41,
		0x4e, 0x50, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x41, 0x47, 0x54, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x38, 0x30, 0x20, 0x47, 0x54, 0x41, 0x4e, 0x42, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x38, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x46, 0x6c, 0x61, 0x74, 0x41,
		0x4e, 0x4e, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x30, 0x20,
		0x35, 0x47, 0x47, 0x49, 0x41, 0x2d, 0x41, 0x4e, 0x38, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x38, 0x30, 0x20, 0x53, 0x45, 0x48, 0x50, 0x42, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x39, 0x53, 0x41, 0x73, 0x63, 0x65,
		0x6e, 0x64, 0x20, 0x44, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x44, 0x33, 0x41, 0x73,
		0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20,
		0x59, 0x33, 0x32, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x33, 0x33, 0x30, 0x41,
		0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x43, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20,
		0x47, 0x33, 0x30, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x35, 0x32, 0x37, 0x41,
		0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x36, 0x32, 0x30, 0x53, 0x41, 0x73, 0x63, 0x65, 0x6e,
		0x64, 0x20, 0x47, 0x36, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x37, 0x41,
		0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x37, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x50,
		0x36, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x37, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65,
		0x6e, 0x64, 0x20, 0x50, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x58, 0x54, 0x32, 0x41,
		0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x32, 0x32, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64,
		0x20, 0x59, 0x35, 0x35, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x36, 0x30,
		0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x37, 0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x31, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x45, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x31,
		0x30, 0x53, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x35, 0x53, 0x4d, 0x47, 0x41, 0x2d, 0x41, 0x4c,
		0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x35, 0x30, 0x45, 0x56, 0x45, 0x2d, 0x41, 0x4c,
		0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x35, 0x30, 0x7a, 0x4d, 0x47, 0x41, 0x2d, 0x41,
		0x4c, 0x34, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x36, 0x30, 0x4d, 0x41, 0x4f, 0x2d, 0x41,
		0x4c, 0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x34, 0x47, 0x43, 0x54, 0x52, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20,
		0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x54, 0x47, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x45, 0x6e,
		0x6a, 0x6f, 0x79, 0x20, 0x36, 0x30, 0x58, 0x43, 0x54, 0x52, 0x2d, 0x41, 0x4c, 0x32, 0x30, 0x45,
		0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x47, 0x44, 0x2d, 0x41,
		0x4c, 0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x30, 0x47, 0x52, 0x33, 0x45, 0x6e,
		0x6a, 0x6f, 0x79, 0x20, 0x36, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x36, 0x53, 0x45, 0x6e, 0x6a,
		0x6f, 0x79, 0x20, 0x37, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x53, 0x45, 0x6e, 0x6a, 0x6f,
		0x79, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x38, 0x45,
		0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x38, 0x65, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x39, 0x65, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20,
		0x5a, 0x20, 0x35, 0x47, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20, 0x53, 0x45, 0x45,
		0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x45,
		0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x65, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x32,
		0x59, 0x36, 0x70, 0x47, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x47, 0x36, 0x32, 0x31, 0x47, 0x52, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x37, 0x29, 0x47, 0x52, 0x35, 0x47, 0x52, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47,
		0x58, 0x38, 0x47, 0x38, 0x47, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x50, 0x36, 0x30, 0x50, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x35, 0x30, 0x50,
		0x35, 0x30, 0x45, 0x50, 0x35, 0x30, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x41, 0x4c,
		0x2d, 0x41, 0x4c, 0x36, 0x30, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x53, 0x4c, 0x45, 0x4d,
		0x2d, 0x41, 0x4c, 0x30, 0x30, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x32, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x49,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x32, 0x30, 0x49, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x53,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x49, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x33, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x43, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x58, 0x48, 0x4e, 0x33, 0x2d, 0x55,
		0x30, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34,
		0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34,
		0x43, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x54, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x41, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x35, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x43, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x58, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35,
		0x30, 0x20, 0x53, 0x45, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47,
		0x4c, 0x53, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x30,
		0x47, 0x49, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x30,
		0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x54, 0x4e, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x36, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36,
		0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36,
		0x43, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x58, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x37, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x41,
		0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x43, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x37, 0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x53, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x37, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x41, 0x20,
		0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x38, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x38, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x39, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x43, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x39, 0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x39, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x39, 0x78, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x39, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x48, 0x6f,
		0x6c, 0x6c, 0x79, 0x20, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x48, 0x6f, 0x6c, 0x6c, 0x79,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x32, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61,
		0x67, 0x69, 0x63, 0x20, 0x32, 0x20, 0x33, 0x44, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61,
		0x67, 0x69, 0x63, 0x20, 0x56, 0x32, 0x4c, 0x52, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x56, 0x20, 0x46, 0x6c, 0x69, 0x70,
		0x20, 0x35, 0x47, 0x56, 0x45, 0x52, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x56, 0x73, 0x32, 0x46, 0x52, 0x49, 0x2d, 0x4e, 0x58,
		0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x56, 0x73, 0x46,
		0x52, 0x49, 0x2d, 0x41, 0x4e, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x20, 0x56, 0x73, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x46, 0x52,
		0x49, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69,
		0x63, 0x20, 0x56, 0x73, 0x20, 0x35, 0x47, 0x46, 0x43, 0x50, 0x2d, 0x41, 0x4e, 0x31, 0x30, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x56, 0x33, 0x45, 0x4c, 0x5a,
		0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63,
		0x20, 0x33, 0x45, 0x4c, 0x5a, 0x2d, 0x41, 0x4e, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x4c, 0x5a, 0x2d, 0x41,
		0x4e, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63,
		0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x47, 0x45, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x34, 0x4c, 0x47, 0x45, 0x2d, 0x41,
		0x4e, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x34,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x41, 0x4e, 0x59, 0x2d, 0x4c, 0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x4d,
		0x4f, 0x2d, 0x4e, 0x58, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63,
		0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x20, 0x35, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x54, 0x2d, 0x41, 0x4e, 0x32, 0x30, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d,
		0x61, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x36,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61,
		0x67, 0x69, 0x63, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x20, 0x36, 0x20, 0x52, 0x53, 0x52, 0x42, 0x56, 0x4c, 0x2d, 0x41, 0x4e,
		0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x36, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x31,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x33, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x34, 0x30, 0x20, 0x35, 0x47, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x34, 0x30, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x50, 0x34, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x4e, 0x45, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x33, 0x30, 0x4a, 0x44, 0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x30, 0x20, 0x35, 0x47, 0x56, 0x4e,
		0x45, 0x2d, 0x41, 0x4e, 0x34, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x20, 0x36, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x45,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x34, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34,
		0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x54, 0x52, 0x4b,
		0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x20, 0x34, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x4b, 0x59, 0x2d, 0x41, 0x4e, 0x31, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x37, 0x54, 0x20, 0x35, 0x47,
		0x57, 0x44, 0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x34, 0x30, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x37, 0x61, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x37, 0x62, 0x43, 0x4c, 0x4b, 0x2d, 0x4e, 0x58, 0x32, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x37, 0x62, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x54, 0x4e, 0x45, 0x57, 0x2d, 0x41, 0x4e, 0x39, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x20, 0x56, 0x69, 0x74,
		0x61, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20,
		0x35, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x20, 0x36, 0x54, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x32, 0x30, 0x20, 0x53, 0x45, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x37, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x32,
		0x30, 0x61, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x32, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38, 0x41,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x39, 0x41, 0x43, 0x4c, 0x4b,
		0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20,
		0x38, 0x54, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x56, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x32, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x34, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56,
		0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56,
		0x39, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69, 0x65, 0x77,
		0x20, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x30,
		0x56, 0x4e, 0x41, 0x2d, 0x4c, 0x32, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69, 0x65,
		0x77, 0x20, 0x33, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x59, 0x36, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x59, 0x36, 0x20, 0x49, 0x49, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74,
		0x59, 0x36, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x32,
		0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x58, 0x37, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x58, 0x38, 0x61, 0x52, 0x42, 0x4e, 0x2d, 0x4e, 0x58, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x58, 0x38, 0x61, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x38, 0x62, 0x4c,
		0x4c, 0x59, 0x2d, 0x4e, 0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x30, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x30, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x32, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x4e, 0x45, 0x2d, 0x4e, 0x34,
		0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x38, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x58, 0x36, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x36, 0x61, 0x4a, 0x44, 0x59,
		0x2d, 0x4c, 0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x36, 0x62, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x4b, 0x47, 0x2d, 0x41, 0x4e,
		0x37, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x33, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x41,
		0x4e, 0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x33, 0x30,
		0x54, 0x46, 0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x33,
		0x30, 0x69, 0x54, 0x46, 0x59, 0x2d, 0x41, 0x4e, 0x34, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x49, 0x4f, 0x2d, 0x41,
		0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x34, 0x30, 0x69, 0x41, 0x44, 0x54,
		0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x34, 0x30, 0x20, 0x47,
		0x54, 0x52, 0x4d, 0x4f, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58,
		0x34, 0x30, 0x52, 0x4d, 0x4f, 0x2d, 0x4e, 0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58,
		0x39, 0x61, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x39, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x58, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x35, 0x43, 0x52, 0x54, 0x2d, 0x41,
		0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x35, 0x30, 0x69, 0x4c, 0x4c, 0x59,
		0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x35, 0x30, 0x69, 0x2b,
		0x20, 0x35, 0x47, 0x41, 0x4c, 0x49, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x58, 0x35, 0x30, 0x41, 0x4c, 0x50, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x58, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56,
		0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58, 0x32, 0x49,
		0x64, 0x65, 0x6f, 0x73, 0x20, 0x58, 0x33, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58, 0x35, 0x49,
		0x64, 0x65, 0x6f, 0x73, 0x20, 0x58, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x69, 0x6d, 0x61,
		0x6e, 0x67, 0x20, 0x35, 0x52, 0x49, 0x4f, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4d, 0x61, 0x69, 0x6d,
		0x61, 0x6e, 0x67, 0x20, 0x34, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x38, 0x4d, 0x61,
		0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x39, 0x54, 0x59, 0x48, 0x36, 0x30, 0x31, 0x4d, 0x4d, 0x61,
		0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x39, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e,
		0x67, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x58, 0x53, 0x20, 0x32, 0x54, 0x41, 0x48, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x4d, 0x61, 0x74, 0x65,
		0x20, 0x58, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x33, 0x41, 0x4c, 0x54, 0x2d, 0x41, 0x4c, 0x31,
		0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x35, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x32, 0x54,
		0x45, 0x54, 0x2d, 0x41, 0x4e, 0x35, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x32, 0x20, 0x35,
		0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x31, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74,
		0x65, 0x20, 0x32, 0x30, 0x20, 0x52, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x58,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x35,
		0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x52, 0x53, 0x20, 0x50, 0x6f, 0x72, 0x73,
		0x63, 0x68, 0x65, 0x20, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d,
		0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x4f, 0x48, 0x2d, 0x41, 0x4e, 0x38,
		0x30, 0x20, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x4d, 0x61, 0x74,
		0x65, 0x20, 0x34, 0x30, 0x20, 0x52, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x34, 0x30, 0x45, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x35, 0x30, 0x43, 0x45, 0x54, 0x2d, 0x41, 0x4c, 0x36, 0x30,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x35, 0x30, 0x45, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x36, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x41, 0x4c, 0x4e, 0x2d, 0x41, 0x4c, 0x31, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x42, 0x52, 0x41, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4d,
		0x61, 0x74, 0x65, 0x20, 0x36, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x38, 0x4d, 0x61, 0x74, 0x65,
		0x20, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x74,
		0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x52, 0x53, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x52, 0x53, 0x20, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65, 0x20, 0x44, 0x65,
		0x73, 0x69, 0x67, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x53,
		0x45, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x33, 0x2b, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x32, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x32, 0x49, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x53, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x33, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33,
		0x69, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x34, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x34, 0x65, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x35, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x35, 0x69, 0x59, 0x41, 0x4c, 0x2d, 0x4c, 0x36, 0x31, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x35, 0x54, 0x6e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x35, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x69,
		0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x36, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x36, 0x20, 0x53, 0x45, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x36, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x37, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x4d, 0x41,
		0x4f, 0x2d, 0x4c, 0x58, 0x39, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x31, 0x69, 0x47, 0x4f, 0x41,
		0x2d, 0x41, 0x4c, 0x38, 0x30, 0x55, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x31, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x31, 0x31, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x32, 0x20, 0x56, 0x69, 0x74,
		0x61, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x4f, 0x4e,
		0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x31, 0x20, 0x53, 0x45, 0x41,
		0x44, 0x41, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x55, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x32, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x43, 0x54, 0x52, 0x2d, 0x4c, 0x38, 0x31, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x31, 0x32, 0x69, 0x41, 0x44, 0x41, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x4b, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x31, 0x32, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x69, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x38, 0x69, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x35, 0x47, 0x4a, 0x53, 0x43,
		0x2d, 0x41, 0x4e, 0x30, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x53, 0x45, 0x20, 0x35,
		0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x53, 0x45, 0x20, 0x34, 0x47, 0x43, 0x48, 0x4c,
		0x2d, 0x41, 0x4c, 0x36, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x53, 0x45, 0x20, 0x56,
		0x69, 0x74, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x34, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x39, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x39, 0x20, 0x53, 0x45,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x31, 0x30, 0x20, 0x34, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x30, 0x20, 0x53, 0x45, 0x43,
		0x48, 0x41, 0x2d, 0x41, 0x4c, 0x38, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x30, 0x7a, 0x4d,
		0x41, 0x4f, 0x2d, 0x4c, 0x58, 0x39, 0x4e, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x36, 0x30, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x59, 0x36, 0x31, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x37, 0x30, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x59, 0x39, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x39, 0x31, 0x50, 0x20,
		0x73, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x50,
		0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x5a, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x53, 0x50, 0x31, 0x30, 0x50, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x31, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x50, 0x31, 0x30, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x50, 0x32,
		0x30, 0x50, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x33, 0x30, 0x50, 0x33, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x34, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x50, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x45, 0x50, 0x34, 0x30,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x45, 0x20, 0x4e, 0x46, 0x43, 0x50, 0x34, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x50, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x38,
		0x50, 0x38, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x50, 0x38, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x50, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x50, 0x39, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50,
		0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x50, 0x39,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x39,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x74,
		0x58, 0x59, 0x20, 0x4d, 0x61, 0x78, 0x59, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59,
		0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x33, 0x49, 0x49, 0x59, 0x35, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x59, 0x35,
		0x70, 0x59, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59,
		0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x35, 0x49, 0x49, 0x59, 0x36, 0x59,
		0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x59, 0x36, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x38, 0x29, 0x59, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x36, 0x32, 0x35, 0x59, 0x36, 0x33, 0x35, 0x59, 0x36, 0x33,
		0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x59, 0x36, 0x49, 0x49, 0x59, 0x37,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x59, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x59, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x59, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x45, 0x6e, 0x6a,
		0x6f, 0x79, 0x20, 0x39, 0x59, 0x37, 0x61, 0x59, 0x37, 0x70, 0x59, 0x38, 0x70, 0x59, 0x39, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x39, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59,
		0x39, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x39,
		0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x53, 0x47, 0x54, 0x33, 0x45, 0x76, 0x6f, 0x6c,
		0x75, 0x63, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x55, 0x6c, 0x74, 0x79, 0x6d, 0x20, 0x35, 0x41, 0x73,
		0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x36, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x36, 0x50, 0x47,
		0x44, 0x49, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69,
		0x63, 0x50, 0x61, 0x64, 0x20, 0x31, 0x33, 0x20, 0x57, 0x69, 0x46, 0x69, 0x51, 0x75, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x30, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x32, 0x29, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e,
		0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61,
		0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x4d, 0x61, 0x74, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31,
		0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e,
		0x38, 0x22, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x73, 0x4d, 0x61,
		0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x73, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d,
		0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x53, 0x45, 0x4d,
		0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x44, 0x42, 0x59, 0x32, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x61, 0x74,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x41, 0x69, 0x72, 0x42, 0x54,
		0x4b, 0x2d, 0x41, 0x4c, 0x30, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31,
		0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x42, 0x54, 0x4b, 0x2d, 0x57, 0x30, 0x39, 0x4d, 0x61,
		0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x54, 0x47, 0x52, 0x2d, 0x57, 0x30, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31,
		0x31, 0x2e, 0x35, 0x22, 0x20, 0x53, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x53, 0x45, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x61, 0x70, 0x65, 0x72, 0x20, 0x31, 0x30,
		0x2e, 0x33, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x57, 0x61,
		0x74, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38, 0x2e, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x32, 0x52, 0x4f, 0x44, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x32, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x52, 0x4a, 0x32, 0x2d, 0x57, 0x30,
		0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x31, 0x30,
		0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x52, 0x4a, 0x32, 0x2d, 0x41, 0x4e, 0x30,
		0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x31, 0x30,
		0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x42, 0x52, 0x54, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x42, 0x52, 0x54, 0x2d, 0x41, 0x4e, 0x30, 0x39, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x31, 0x22, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56,
		0x36, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x56, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x4b, 0x4f, 0x42, 0x32, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x37, 0x20, 0x38, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b,
		0x4f, 0x42, 0x32, 0x4b, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x54, 0x38, 0x20, 0x38, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x4f, 0x42, 0x32, 0x2d, 0x41, 0x4c,
		0x30, 0x30, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x37,
		0x20, 0x38, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x47, 0x52, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x4e,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x36, 0x41, 0x47, 0x4d, 0x2d,
		0x57, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58,
		0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47, 0x52, 0x2d, 0x41,
		0x4c, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58,
		0x36, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x45, 0x4c, 0x4e, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x39, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x45, 0x4c, 0x4e, 0x2d, 0x4c, 0x30, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x39, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54,
		0x45, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x36, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x36, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x38, 0x20, 0x31, 0x32, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x39, 0x20, 0x31, 0x32, 0x2e, 0x31, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x39, 0x20,
		0x31, 0x32, 0x2e, 0x31, 0x22, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x43, 0x35, 0x20, 0x38, 0x43, 0x33, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x43, 0x33, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x43, 0x33, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x43, 0x33, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x30, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x43, 0x35, 0x20, 0x38, 0x22, 0x20, 0x4c, 0x54,
		0x45, 0x43, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x31, 0x30, 0x2e, 0x38, 0x22, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x36, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32,
		0x2e, 0x36, 0x22, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x33, 0x2e, 0x32, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x4d, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x58, 0x32, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x4d, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x4d, 0x35, 0x20, 0x38, 0x2e, 0x34, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64,
		0x20, 0x4d, 0x36, 0x20, 0x38, 0x2e, 0x34, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x4d, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33, 0x20, 0x38, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x4d, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x4d, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x30, 0x42, 0x54, 0x56,
		0x2d, 0x44, 0x4c, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x35, 0x41, 0x47, 0x4d, 0x33, 0x2d,
		0x57, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47, 0x4d, 0x33, 0x2d,
		0x41, 0x4c, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x37, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x54, 0x35, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x20, 0x31,
		0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x33, 0x20, 0x31, 0x30, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x33, 0x20, 0x38, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x33, 0x20, 0x37, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x54, 0x32, 0x20, 0x37, 0x2e, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64,
		0x20, 0x54, 0x32, 0x20, 0x37, 0x2e, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x20, 0x31,
		0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x20, 0x37, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x20, 0x38, 0x41, 0x47, 0x53, 0x33, 0x4b,
		0x2d, 0x57, 0x32, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x53, 0x45, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x73, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x41, 0x47, 0x53, 0x33, 0x4b, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x73, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c,
		0x54, 0x45, 0x41, 0x47, 0x52, 0x4b, 0x2d, 0x57, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x41, 0x47, 0x52, 0x4b, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64,
		0x20, 0x54, 0x31, 0x30, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x6e, 0x6a,
		0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x45, 0x6e,
		0x6a, 0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x32, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x43, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x43, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x4f, 0x4e,
		0x2d, 0x41, 0x4c, 0x31, 0x39, 0x42, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43,
		0x35, 0x20, 0x38, 0x22, 0x42, 0x5a, 0x49, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x43, 0x35, 0x65, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x42, 0x5a, 0x49, 0x2d, 0x57, 0x30, 0x30, 0x43, 0x35, 0x65, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x42, 0x5a, 0x54, 0x33, 0x2d, 0x57,
		0x30, 0x39, 0x42, 0x5a, 0x54, 0x33, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x43, 0x35, 0x20, 0x31, 0x30,
		0x2e, 0x34, 0x22, 0x42, 0x5a, 0x44, 0x2d, 0x57, 0x30, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x43, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x42,
		0x5a, 0x44, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x43, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x44, 0x20, 0x54, 0x61, 0x62, 0x20, 0x43, 0x6f, 0x6d,
		0x70, 0x61, 0x63, 0x74, 0x64, 0x74, 0x61, 0x62, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x20, 0x32, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x4c, 0x4c, 0x2d, 0x41,
		0x4c, 0x30, 0x31, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x45,
		0x6c, 0x69, 0x74, 0x65, 0x41, 0x52, 0x43, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x20, 0x34, 0x42, 0x4c, 0x4d, 0x2d, 0x30, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x53,
		0x63, 0x72, 0x65, 0x65, 0x6e, 0x45, 0x43, 0x36, 0x31, 0x30, 0x38, 0x56, 0x24, 0x31, 0x4b, 0x41,
		0x4e, 0x54, 0x2d, 0x33, 0x36, 0x39, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x20, 0x36,
		0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x35, 0x39, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x20, 0x53, 0x20, 0x35, 0x35, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72, 0x65,
		0x65, 0x6e, 0x20, 0x53, 0x20, 0x35, 0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x35, 0x30,
		0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x36, 0x30, 0x53,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x36, 0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x36, 0x30, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20, 0x36, 0x35, 0x22,
		0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53,
		0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x37, 0x35, 0x22, 0x4b,
		0x41, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72,
		0x65, 0x65, 0x6e, 0x20, 0x53, 0x20, 0x37, 0x35, 0x22, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x24, 0x31,
		0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x48, 0x75,
		0x67, 0x65, 0x72, 0x6f, 0x63, 0x6b, 0x54, 0x31, 0x30, 0x31, 0x5f, 0x32, 0x30, 0x32, 0x31, 0x54,
		0x31, 0x30, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x48, 0x75, 0x6d, 0x61, 0x78, 0x48,
		0x75, 0x72, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x65, 0x49, 0x67, 0x6e, 0x69, 0x74, 0x65, 0x56, 0x6f,
		0x72, 0x74, 0x65, 0x78, 0x47, 0x69, 0x67, 0x61, 0x47, 0x6c, 0x61, 0x7a, 0x65, 0x43, 0x6f, 0x62,
		0x72, 0x61, 0x44, 0x5a, 0x49, 0x52, 0x45, 0x44, 0x7a, 0x69, 0x72, 0x65, 0x53, 0x41, 0x47, 0x45,
		0x53, 0x61, 0x67, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x53, 0x6c, 0x61, 0x6d, 0x56, 0x75, 0x6c, 0x63,
		0x61, 0x6e, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x6d,
		0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x69, 0x64, 0x67, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x52, 0x75, 0x73, 0x68, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x72, 0x69, 0x73, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x32, 0x30, 0x32, 0x31, 0x49, 0x72, 0x69, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x78, 0x63, 0x69,
		0x74, 0x65, 0x46, 0x6c, 0x69, 0x6e, 0x74, 0x48, 0x75, 0x73, 0x6b, 0x65, 0x65, 0x56, 0x55, 0x4c,
		0x4b, 0x41, 0x4e, 0x4f, 0x56, 0x75, 0x6c, 0x6b, 0x61, 0x6e, 0x6f, 0x48, 0x79, 0x61, 0x74, 0x74,
		0x61, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x20, 0x24, 0x31, 0x48, 0x79, 0x6b, 0x6b, 0x65, 0x72, 0x48,
		0x79, 0x6b, 0x6b, 0x65, 0x72, 0x5f, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x31, 0x30, 0x4d, 0x79, 0x54,
		0x61, 0x62, 0x31, 0x30, 0x48, 0x79, 0x74, 0x65, 0x72, 0x61, 0x48, 0x79, 0x75, 0x6e, 0x64, 0x61,
		0x69, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20,
		0x53, 0x38, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x49, 0x58, 0x53, 0x65, 0x6f, 0x75, 0x6c,
		0x20, 0x4d, 0x69, 0x78, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x45, 0x43, 0x4f, 0x53, 0x65, 0x6f,
		0x75, 0x6c, 0x20, 0x45, 0x63, 0x6f, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x35, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x24, 0x31, 0x47, 0x32, 0x35, 0x35, 0x32, 0x33,
		0x4b, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x47, 0x32, 0x33, 0x45, 0x74, 0x65,
		0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x47, 0x32, 0x35, 0x35, 0x32, 0x34, 0x4b, 0x45,
		0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x47, 0x32, 0x34, 0x47, 0x32, 0x34, 0x30, 0x32,
		0x37, 0x4b, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x47, 0x32, 0x37, 0x57, 0x32,
		0x35, 0x30, 0x34, 0x32, 0x4c, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x57, 0x34,
		0x32, 0x48, 0x50, 0x35, 0x35, 0x34, 0x4f, 0x4c, 0x35, 0x30, 0x33, 0x46, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x48, 0x59, 0x4d, 0x49, 0x20, 0x35, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x79, 0x6d,
		0x69, 0x20, 0x35, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x34, 0x36, 0x35, 0x47, 0x4f, 0x45,
		0x34, 0x36, 0x35, 0x20, 0x47, 0x6f, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x20, 0x52, 0x4f, 0x43, 0x4b,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x52, 0x6f, 0x63, 0x6b, 0x4c, 0x24, 0x31, 0x4b, 0x6f, 0x72,
		0x61, 0x6c, 0x20, 0x37, 0x57, 0x34, 0x48, 0x54, 0x30, 0x37, 0x30, 0x31, 0x4c, 0x31, 0x36, 0x4b,
		0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x58, 0x4c, 0x48, 0x54, 0x30, 0x37, 0x30, 0x31, 0x57, 0x31,
		0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x57, 0x34, 0x58, 0x48, 0x54, 0x30, 0x37, 0x30,
		0x33, 0x57, 0x30, 0x38, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x57, 0x33, 0x31, 0x30, 0x4c,
		0x42, 0x31, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x4c, 0x42, 0x31, 0x48, 0x54, 0x31,
		0x30, 0x30, 0x34, 0x4c, 0x49, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x58,
		0x4c, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x5f, 0x38, 0x57, 0x32, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20,
		0x38, 0x57, 0x32, 0x48, 0x54, 0x31, 0x30, 0x30, 0x34, 0x4c, 0x31, 0x36, 0x48, 0x54, 0x31, 0x30,
		0x30, 0x33, 0x58, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x58, 0x48, 0x54,
		0x31, 0x30, 0x30, 0x32, 0x57, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x57,
		0x48, 0x54, 0x30, 0x37, 0x30, 0x33, 0x4b, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37,
		0x4d, 0x33, 0x58, 0x48, 0x54, 0x30, 0x37, 0x30, 0x34, 0x4b, 0x30, 0x38, 0x4b, 0x6f, 0x72, 0x61,
		0x6c, 0x20, 0x37, 0x4d, 0x34, 0x31, 0x30, 0x57, 0x42, 0x31, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20,
		0x31, 0x30, 0x57, 0x42, 0x31, 0x31, 0x30, 0x57, 0x42, 0x32, 0x48, 0x79, 0x54, 0x61, 0x62, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x31, 0x30, 0x57, 0x42, 0x32, 0x31, 0x30, 0x4c, 0x41, 0x31, 0x48,
		0x79, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x4c, 0x41, 0x31, 0x48, 0x54,
		0x31, 0x30, 0x30, 0x32, 0x57, 0x33, 0x32, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x58,
		0x33, 0x20, 0x57, 0x69, 0x46, 0x69, 0x48, 0x79, 0x54, 0x61, 0x62, 0x20, 0x37, 0x47, 0x42, 0x31,
		0x48, 0x79, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x37, 0x57, 0x44, 0x31, 0x48,
		0x79, 0x76, 0x65, 0x50, 0x72, 0x79, 0x6d, 0x65, 0x20, 0x30, 0x31, 0x53, 0x54, 0x30, 0x31, 0x53,
		0x74, 0x6f, 0x72, 0x6d, 0x20, 0x53, 0x54, 0x30, 0x31, 0x49, 0x2d, 0x49, 0x4e, 0x4e, 0x43, 0x6f,
		0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20,
		0x33, 0x47, 0x49, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x33,
		0x49, 0x4b, 0x49, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47, 0x4f, 0x35, 0x5f, 0x35, 0x35,
		0x47, 0x6f, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x47, 0x6f, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x42, 0x4c,
		0x45, 0x53, 0x53, 0x5f, 0x47, 0x4f, 0x35, 0x35, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x47, 0x6f,
		0x20, 0x35, 0x2e, 0x35, 0x22, 0x42, 0x4c, 0x45, 0x53, 0x53, 0x50, 0x4c, 0x55, 0x53, 0x42, 0x6c,
		0x65, 0x73, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x4b, 0x55, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x54, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x4d, 0x4f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x51, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x51, 0x32, 0x53, 0x32, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x41, 0x32, 0x53, 0x35, 0x30, 0x20, 0x4c,
		0x69, 0x67, 0x68, 0x74, 0x53, 0x38, 0x30, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x38, 0x39, 0x20,
		0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x38, 0x38, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f,
		0x76, 0x65, 0x72, 0x79, 0x53, 0x39, 0x39, 0x20, 0x4f, 0x63, 0x65, 0x61, 0x6e, 0x53, 0x39, 0x38,
		0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53, 0x38, 0x37, 0x20, 0x52, 0x61, 0x70,
		0x74, 0x6f, 0x72, 0x53, 0x36, 0x37, 0x20, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x37, 0x38, 0x20,
		0x47, 0x6c, 0x6f, 0x72, 0x79, 0x51, 0x38, 0x20, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x44,
		0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x49, 0x49, 0x51, 0x51, 0x24, 0x31, 0x54,
		0x61, 0x62, 0x20, 0x58, 0x39, 0x49, 0x4e, 0x43, 0x41, 0x52, 0x49, 0x4e, 0x51, 0x49, 0x4e, 0x53,
		0x59, 0x53, 0x48, 0x4b, 0x39, 0x2d, 0x34, 0x30, 0x31, 0x30, 0x41, 0x43, 0x37, 0x5f, 0x44, 0x4a,
		0x31, 0x37, 0x41, 0x43, 0x37, 0x2d, 0x44, 0x4a, 0x31, 0x37, 0x49, 0x48, 0x39, 0x2d, 0x4c, 0x36,
		0x31, 0x34, 0x4d, 0x58, 0x20, 0x49, 0x48, 0x39, 0x2d, 0x4c, 0x36, 0x31, 0x34, 0x49, 0x4f, 0x54,
		0x57, 0x45, 0x54, 0x39, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x51, 0x4d, 0x56, 0x69, 0x76, 0x61,
		0x6c, 0x64, 0x69, 0x4e, 0x65, 0x77, 0x74, 0x6f, 0x6e, 0x49, 0x52, 0x41, 0x49, 0x52, 0x41, 0x5f,
		0x44, 0x55, 0x4f, 0x44, 0x75, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x54, 0x49,
		0x54, 0x2d, 0x31, 0x31, 0x30, 0x31, 0x2d, 0x51, 0x55, 0x41, 0x44, 0x31, 0x31, 0x30, 0x31, 0x20,
		0x51, 0x75, 0x61, 0x64, 0x49, 0x55, 0x4e, 0x49, 0x49, 0x63, 0x6f, 0x6e, 0x42, 0x49, 0x54, 0x4e,
		0x54, 0x2d, 0x33, 0x35, 0x30, 0x36, 0x4d, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x65,
		0x72, 0x63, 0x75, 0x72, 0x79, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x46, 0x48, 0x44, 0x4e, 0x54,
		0x2d, 0x30, 0x37, 0x30, 0x34, 0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79,
		0x20, 0x4c, 0x45, 0x4e, 0x54, 0x2d, 0x30, 0x39, 0x30, 0x39, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41,
		0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x49, 0x5a, 0x4e, 0x54, 0x2d, 0x31, 0x30, 0x30, 0x39,
		0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x71, 0x75, 0x61,
		0x64, 0x20, 0x49, 0x49, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20,
		0x4c, 0x45, 0x4e, 0x54, 0x2d, 0x31, 0x30, 0x31, 0x37, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42,
		0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x33, 0x47, 0x20, 0x71, 0x75, 0x61, 0x64, 0x4e, 0x54, 0x2d,
		0x33, 0x36, 0x30, 0x31, 0x50, 0x2f, 0x33, 0x36, 0x30, 0x32, 0x50, 0x4e, 0x65, 0x74, 0x54, 0x41,
		0x42, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x33, 0x36,
		0x30, 0x33, 0x50, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74,
		0x20, 0x33, 0x47, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x32, 0x53,
		0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x48, 0x44, 0x20, 0x33, 0x47,
		0x4e, 0x54, 0x2d, 0x33, 0x38, 0x30, 0x35, 0x43, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53,
		0x6b, 0x61, 0x74, 0x20, 0x33, 0x47, 0x20, 0x71, 0x75, 0x61, 0x64, 0x4e, 0x54, 0x2d, 0x33, 0x37,
		0x30, 0x31, 0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x33, 0x47,
		0x20, 0x64, 0x75, 0x6f, 0x4e, 0x54, 0x2d, 0x33, 0x39, 0x30, 0x35, 0x54, 0x4e, 0x65, 0x74, 0x54,
		0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x5a, 0x58, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d,
		0x30, 0x37, 0x30, 0x31, 0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20,
		0x6e, 0x65, 0x74, 0x4e, 0x54, 0x2d, 0x30, 0x38, 0x30, 0x35, 0x43, 0x4e, 0x65, 0x74, 0x54, 0x41,
		0x42, 0x20, 0x53, 0x6b, 0x61, 0x74, 0x20, 0x4d, 0x58, 0x4e, 0x54, 0x2d, 0x30, 0x39, 0x30, 0x32,
		0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x71, 0x75,
		0x61, 0x64, 0x20, 0x52, 0x58, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x5f, 0x53, 0x70, 0x61, 0x63,
		0x65, 0x5f, 0x33, 0x47, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65,
		0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x32, 0x4d, 0x4e, 0x65, 0x74, 0x54, 0x41,
		0x42, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x20, 0x33, 0x47, 0x20, 0x64, 0x75, 0x6f, 0x4e,
		0x54, 0x2d, 0x33, 0x37, 0x30, 0x33, 0x4d, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x61,
		0x74, 0x72, 0x69, 0x78, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x20, 0x55,
		0x4c, 0x54, 0x52, 0x41, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69,
		0x78, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x54, 0x2d, 0x31, 0x35, 0x30, 0x31, 0x43, 0x43,
		0x61, 0x6c, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x20, 0x31, 0x30, 0x30, 0x54, 0x4f, 0x55, 0x43, 0x41,
		0x4e, 0x20, 0x4e, 0x41, 0x4e, 0x4f, 0x20, 0x34, 0x4b, 0x54, 0x6f, 0x75, 0x63, 0x61, 0x6e, 0x20,
		0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x34, 0x4b, 0x54, 0x4f, 0x55, 0x43, 0x41, 0x4e, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x33, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x54, 0x6f, 0x75, 0x63, 0x61,
		0x6e, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x54,
		0x4f, 0x55, 0x43, 0x41, 0x4e, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x54, 0x6f,
		0x75, 0x63, 0x61, 0x6e, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x49, 0x6d, 0x61,
		0x71, 0x49, 0x4d, 0x41, 0x51, 0x54, 0x65, 0x74, 0x72, 0x61, 0x49, 0x6d, 0x6f, 0x73, 0x65, 0x42,
		0x41, 0x4d, 0x2d, 0x49, 0x49, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
		0x6d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x49, 0x6d, 0x50, 0x61, 0x64, 0x20, 0x24,
		0x31, 0x49, 0x6e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x49, 0x46, 0x39, 0x30, 0x30, 0x31, 0x54, 0x75,
		0x72, 0x62, 0x6f, 0x20, 0x35, 0x49, 0x46, 0x39, 0x30, 0x30, 0x37, 0x49, 0x46, 0x39, 0x30, 0x32,
		0x31, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x46, 0x39,
		0x30, 0x33, 0x35, 0x41, 0x32, 0x49, 0x46, 0x39, 0x30, 0x30, 0x32, 0x4d, 0x35, 0x73, 0x49, 0x46,
		0x39, 0x30, 0x30, 0x33, 0x4d, 0x36, 0x73, 0x49, 0x46, 0x39, 0x30, 0x33, 0x31, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x20, 0x33, 0x49, 0x46, 0x39, 0x30, 0x32, 0x39, 0x56, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x69, 0x67, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49,
		0x46, 0x24, 0x31, 0x61, 0x4d, 0x24, 0x31, 0x49, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x47, 0x4f, 0x52,
		0x49, 0x4c, 0x4c, 0x41, 0x20, 0x39, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x47, 0x6f, 0x72, 0x69, 0x6c,
		0x6c, 0x61, 0x20, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x5f, 0x52, 0x41, 0x49, 0x4e, 0x42,
		0x4f, 0x57, 0x58, 0x20, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x49, 0x6e, 0x63, 0x68, 0x24,
		0x31, 0x22, 0x49, 0x6e, 0x63, 0x6f, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x20, 0x34, 0x50, 0x6c, 0x61,
		0x69, 0x6e, 0x32, 0x20, 0x53, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x20, 0x32, 0x53, 0x4d, 0x41, 0x54,
		0x54, 0x45, 0x52, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x5f, 0x73, 0x45, 0x63,
		0x6f, 0x20, 0x53, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x24, 0x31, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65,
		0x24, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x6f, 0x6e, 0x54, 0x35, 0x45, 0x61, 0x72,
		0x74, 0x68, 0x20, 0x37, 0x22, 0x20, 0x33, 0x47, 0x45, 0x41, 0x52, 0x54, 0x48, 0x31, 0x30, 0x45,
		0x61, 0x72, 0x74, 0x68, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x49, 0x6e, 0x66,
		0x69, 0x6e, 0x69, 0x78, 0x47, 0x54, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x54, 0x20,
		0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x75, 0x7a, 0x7a, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20,
		0x4d, 0x61, 0x72, 0x76, 0x65, 0x6c, 0x53, 0x75, 0x72, 0x66, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x53, 0x75, 0x72, 0x66, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x47, 0x53, 0x75, 0x72,
		0x66, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x53, 0x75, 0x72, 0x66, 0x20, 0x53, 0x70,
		0x69, 0x63, 0x65, 0x53, 0x75, 0x72, 0x66, 0x20, 0x42, 0x72, 0x61, 0x76, 0x6f, 0x53, 0x75, 0x72,
		0x66, 0x20, 0x4e, 0x6f, 0x69, 0x72, 0x52, 0x61, 0x63, 0x65, 0x52, 0x61, 0x63, 0x65, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x52, 0x61, 0x63, 0x65, 0x20, 0x42, 0x6f, 0x6c, 0x74, 0x52, 0x61, 0x63, 0x65,
		0x20, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x51, 0x52, 0x61, 0x63, 0x65, 0x20, 0x42, 0x6f, 0x6c, 0x74,
		0x20, 0x32, 0x52, 0x61, 0x63, 0x65, 0x20, 0x45, 0x61, 0x67, 0x6c, 0x65, 0x52, 0x61, 0x63, 0x65,
		0x20, 0x4a, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x33, 0x30, 0x5a,
		0x65, 0x72, 0x6f, 0x20, 0x33, 0x30, 0x20, 0x35, 0x47, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x5a,
		0x65, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x33, 0x5a, 0x65, 0x72, 0x6f,
		0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x34, 0x5a, 0x65, 0x72,
		0x6f, 0x20, 0x35, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x72,
		0x6f, 0x20, 0x36, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x72,
		0x6f, 0x20, 0x38, 0x69, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x38, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x58, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x58, 0x20, 0x50, 0x72,
		0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x58, 0x20, 0x4e, 0x65, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x48, 0x6f, 0x74, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x48, 0x6f, 0x74,
		0x20, 0x33, 0x48, 0x6f, 0x74, 0x20, 0x33, 0x30, 0x69, 0x48, 0x6f, 0x74, 0x20, 0x33, 0x30, 0x48,
		0x6f, 0x74, 0x20, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x74, 0x20, 0x33, 0x30,
		0x20, 0x35, 0x47, 0x48, 0x6f, 0x74, 0x20, 0x34, 0x30, 0x69, 0x48, 0x6f, 0x74, 0x20, 0x34, 0x30,
		0x48, 0x6f, 0x74, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x53, 0x33,
		0x58, 0x48, 0x6f, 0x74, 0x20, 0x53, 0x48, 0x6f, 0x74, 0x20, 0x53, 0x32, 0x48, 0x6f, 0x74, 0x20,
		0x34, 0x48, 0x6f, 0x74, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x35, 0x48,
		0x6f, 0x74, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x20, 0x36, 0x58, 0x48,
		0x6f, 0x74, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x37, 0x48, 0x6f, 0x74,
		0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x38, 0x48, 0x6f, 0x74, 0x20, 0x39,
		0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x39, 0x48, 0x6f, 0x74, 0x20, 0x39, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x54, 0x48, 0x6f,
		0x74, 0x20, 0x31, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x78, 0x20, 0x58, 0x36, 0x38, 0x39,
		0x44, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x73, 0x20, 0x4e, 0x46, 0x43, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x78, 0x20, 0x58, 0x36, 0x38, 0x39, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x73, 0x48,
		0x6f, 0x74, 0x20, 0x31, 0x30, 0x69, 0x48, 0x6f, 0x74, 0x20, 0x53, 0x33, 0x48, 0x6f, 0x74, 0x20,
		0x31, 0x31, 0x53, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29,
		0x48, 0x6f, 0x74, 0x20, 0x31, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x4e, 0x46, 0x43, 0x48,
		0x6f, 0x74, 0x20, 0x31, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x30, 0x69, 0x48, 0x6f, 0x74, 0x20, 0x32,
		0x30, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x30,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x30, 0x53, 0x48, 0x6f, 0x74, 0x20,
		0x31, 0x32, 0x69, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x48,
		0x44, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x20, 0x48, 0x44, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x33, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x36, 0x20, 0x48, 0x44,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x37, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x38, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x35, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x53, 0x34, 0x48, 0x6f, 0x74, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x32, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x50,
		0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x37, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x69, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x69, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x32, 0x29, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x69, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x56, 0x49,
		0x50, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x4e, 0x46, 0x43, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x31, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x31, 0x53, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x33, 0x29, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x30, 0x69, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x33, 0x30, 0x20, 0x56, 0x49, 0x50, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x34, 0x30, 0x53, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x34, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x30, 0x48, 0x6f, 0x74,
		0x20, 0x24, 0x31, 0x24, 0x32, 0x49, 0x6e, 0x66, 0x6f, 0x4b, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f,
		0x6d, 0x69, 0x72, 0x49, 0x6e, 0x68, 0x6f, 0x6e, 0x49, 0x6e, 0x6b, 0x61, 0x58, 0x39, 0x36, 0x20,
		0x6d, 0x69, 0x6e, 0x69, 0x49, 0x6e, 0x6b, 0x74, 0x69, 0x49, 0x6e, 0x6e, 0x4a, 0x6f, 0x6f, 0x56,
		0x4f, 0x4f, 0x4d, 0x20, 0x54, 0x41, 0x42, 0x20, 0x32, 0x56, 0x6f, 0x6f, 0x6d, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x32, 0x58, 0x33, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x48,
		0x61, 0x6c, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x34, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x34, 0x48, 0x61, 0x6c,
		0x6f, 0x20, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x33,
		0x47, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x32, 0x20, 0x4c, 0x54,
		0x45, 0x46, 0x69, 0x72, 0x65, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69,
		0x72, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5f, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x32, 0x20, 0x41, 0x69,
		0x72, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x20, 0x32, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45,
		0x46, 0x69, 0x72, 0x65, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69,
		0x72, 0x65, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x54,
		0x45, 0x46, 0x69, 0x72, 0x65, 0x33, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x69, 0x72, 0x65, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f,
		0x46, 0x69, 0x72, 0x65, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x34, 0x53, 0x75, 0x70, 0x65, 0x72, 0x62, 0x5f, 0x50, 0x4c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65,
		0x72, 0x42, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x62, 0x53, 0x75, 0x70,
		0x65, 0x72, 0x42, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x54, 0x45, 0x49, 0x6e, 0x6e, 0x6f, 0x73, 0x49, 0x6e, 0x6e, 0x6f,
		0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x4e, 0x4e, 0x4f, 0x24, 0x31, 0x49, 0x6e, 0x6f, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x2b, 0x33, 0x32, 0x50, 0x61, 0x64,
		0x20, 0x32, 0x2b, 0x33, 0x32, 0x50, 0x61, 0x64, 0x20, 0x34, 0x2b, 0x31, 0x32, 0x38, 0x50, 0x61,
		0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x31, 0x2b, 0x31, 0x36, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x69, 0x6e, 0x6f, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x50,
		0x72, 0x6f, 0x49, 0x4e, 0x4f, 0x49, 0x20, 0x65, 0x61, 0x73, 0x79, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x28, 0x24, 0x32, 0x29, 0x41, 0x31, 0x37, 0x30, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x37, 0x32, 0x41, 0x31, 0x38, 0x31, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x31, 0x38, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x31, 0x38, 0x30, 0x41, 0x36, 0x32, 0x49, 0x6e, 0x73, 0x69, 0x67,
		0x6e, 0x69, 0x61, 0x4e, 0x53, 0x2d, 0x50, 0x31, 0x31, 0x41, 0x38, 0x31, 0x30, 0x30, 0x31, 0x31,
		0x2e, 0x36, 0x22, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4e, 0x53, 0x2d,
		0x50, 0x31, 0x36, 0x41, 0x54, 0x30, 0x38, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x38, 0x22, 0x4e, 0x53,
		0x2d, 0x50, 0x30, 0x38, 0x41, 0x37, 0x31, 0x30, 0x30, 0x38, 0x22, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x4e, 0x53, 0x2d, 0x50, 0x31, 0x36, 0x41, 0x54, 0x37, 0x38, 0x35, 0x48, 0x44, 0x46, 0x6c, 0x65,
		0x78, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x41, 0x46, 0x54,
		0x45, 0x41, 0x4d, 0x52, 0x33, 0x31, 0x31, 0x48, 0x44, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x41, 0x46, 0x54, 0x4a, 0x4d, 0x53, 0x54, 0x31, 0x32, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x38, 0x29, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x4e, 0x55, 0x43, 0x31, 0x30, 0x69, 0x33, 0x46, 0x4e,
		0x48, 0x4e, 0x55, 0x43, 0x20, 0x31, 0x30, 0x49, 0x6e, 0x74, 0x65, 0x78, 0x49, 0x4d, 0x30, 0x33,
		0x31, 0x38, 0x4e, 0x44, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x33,
		0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x54, 0x31, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x24, 0x31, 0x41,
		0x71, 0x75, 0x61, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20,
		0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x54, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x46, 0x75, 0x6c, 0x76, 0x75, 0x20,
		0x45, 0x35, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4a, 0x65, 0x77, 0x65, 0x6c, 0x20, 0x32, 0x41, 0x71,
		0x75, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x49, 0x49, 0x49, 0x41, 0x71, 0x75, 0x61, 0x20,
		0x34, 0x2e, 0x30, 0x20, 0x34, 0x47, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x34, 0x47, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x34, 0x47, 0x41,
		0x71, 0x75, 0x61, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x34, 0x47, 0x41, 0x71, 0x75, 0x61,
		0x20, 0x5a, 0x65, 0x6e, 0x69, 0x74, 0x68, 0x41, 0x71, 0x75, 0x61, 0x20, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x49, 0x56, 0x41, 0x71, 0x75, 0x61, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x34,
		0x47, 0x41, 0x71, 0x75, 0x61, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x41, 0x71, 0x75, 0x61, 0x20, 0x41, 0x6d, 0x61, 0x7a, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x71, 0x75, 0x61, 0x20, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x41, 0x71, 0x75, 0x61, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75,
		0x61, 0x20, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x35, 0x2e, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x45, 0x6c, 0x79,
		0x74, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x79, 0x74, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x45, 0x6c, 0x79, 0x74, 0x20, 0x24, 0x31, 0x49, 0x56, 0x30, 0x33, 0x31,
		0x38, 0x4e, 0x44, 0x49, 0x6e, 0x64, 0x69, 0x65, 0x20, 0x31, 0x31, 0x4c, 0x69, 0x6f, 0x6e, 0x73,
		0x20, 0x36, 0x49, 0x6e, 0x66, 0x69, 0x65, 0x20, 0x37, 0x37, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x20,
		0x54, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x6e,
		0x4b, 0x4d, 0x35, 0x50, 0x52, 0x4f, 0x4b, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x72, 0x62,
		0x69, 0x73, 0x49, 0x72, 0x69, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x53, 0x4e, 0x33, 0x30,
		0x56, 0x6f, 0x78, 0x20, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x56, 0x65,
		0x72, 0x6f, 0x56, 0x4f, 0x58, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x56, 0x6f, 0x78, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x4f,
		0x58, 0x20, 0x53, 0x54, 0x45, 0x45, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x78, 0x20,
		0x53, 0x74, 0x65, 0x65, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x4f, 0x58, 0x20, 0x41, 0x6c,
		0x70, 0x68, 0x61, 0x56, 0x6f, 0x78, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x56, 0x4f, 0x58, 0x20,
		0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x56, 0x6f, 0x78, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
		0x56, 0x4f, 0x58, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x78, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x4f, 0x58, 0x20, 0x50, 0x4f, 0x50, 0x20,
		0x50, 0x72, 0x6f, 0x56, 0x6f, 0x78, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65,
		0x78, 0x74, 0x5f, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x50, 0x20, 0x50,
		0x72, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x24, 0x31, 0x49, 0x53, 0x24, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x49, 0x52, 0x53, 0x30, 0x30, 0x32, 0x2d, 0x31, 0x36, 0x49, 0x2d, 0x53, 0x36, 0x49,
		0x53, 0x32, 0x53, 0x58, 0x31, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x31, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x4a, 0x41, 0x59, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x50, 0x43, 0x20, 0x50, 0x41, 0x31, 0x30, 0x2e, 0x31, 0x4d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x50, 0x43, 0x20, 0x24, 0x31, 0x54, 0x50, 0x43, 0x2d, 0x47, 0x31, 0x30, 0x31, 0x31, 0x4c,
		0x54, 0x45, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x50, 0x43, 0x20, 0x47, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x4a, 0x46, 0x6f, 0x6e, 0x65, 0x4a, 0x4b, 0x4c,
		0x4a, 0x50, 0x61, 0x79, 0x4a, 0x52, 0x45, 0x4e, 0x4a, 0x56, 0x43, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x54, 0x56, 0x20, 0x32, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4a, 0x65,
		0x64, 0x69, 0x52, 0x65, 0x6d, 0x69, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x6d, 0x69, 0x78,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4a, 0x65, 0x6b, 0x61, 0x4a, 0x4b, 0x20, 0x24, 0x31, 0x20, 0x33,
		0x47, 0x4a, 0x4b, 0x20, 0x24, 0x31, 0x4a, 0x65, 0x73, 0x79, 0x4a, 0x39, 0x53, 0x5f, 0x50, 0x52,
		0x4f, 0x4a, 0x39, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x69, 0x61, 0x6b, 0x65, 0x4a, 0x4b, 0x2d,
		0x24, 0x31, 0x4a, 0x69, 0x61, 0x79, 0x75, 0x47, 0x34, 0x2f, 0x47, 0x35, 0x4a, 0x59, 0x2d, 0x24,
		0x31, 0x4a, 0x69, 0x6e, 0x20, 0x54, 0x75, 0x4a, 0x69, 0x6e, 0x67, 0x61, 0x4f, 0x70, 0x74, 0x69,
		0x6d, 0x20, 0x34, 0x47, 0x46, 0x72, 0x65, 0x73, 0x68, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x74, 0x7a,
		0x20, 0x4d, 0x31, 0x48, 0x69, 0x74, 0x20, 0x34, 0x47, 0x50, 0x61, 0x73, 0x73, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x50, 0x61, 0x73, 0x73, 0x20, 0x33, 0x47, 0x47, 0x6f, 0x61, 0x6c, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x34, 0x47, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20,
		0x33, 0x47, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x74, 0x61, 0x72, 0x74,
		0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x47, 0x4f, 0x20,
		0x4c, 0x33, 0x42, 0x61, 0x73, 0x63, 0x6f, 0x20, 0x4e, 0x65, 0x6f, 0x42, 0x61, 0x73, 0x63, 0x6f,
		0x20, 0x4d, 0x35, 0x30, 0x30, 0x20, 0x33, 0x47, 0x42, 0x61, 0x73, 0x63, 0x6f, 0x20, 0x24, 0x31,
		0x54, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x20, 0x53, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x47,
		0x4f, 0x20, 0x4c, 0x32, 0x49, 0x47, 0x4f, 0x20, 0x24, 0x31, 0x4a, 0x69, 0x6f, 0x4a, 0x69, 0x6f,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x4a, 0x69, 0x76, 0x69, 0x52, 0x65,
		0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x4f, 0x70, 0x75, 0x73, 0x20,
		0x53, 0x33, 0x4a, 0x53, 0x50, 0x51, 0x36, 0x35, 0x4a, 0x53, 0x50, 0x20, 0x51, 0x36, 0x35, 0x58,
		0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x4b, 0x6c, 0x69, 0x63, 0x6b, 0x20, 0x24, 0x31, 0x58, 0x74,
		0x72, 0x65, 0x6d, 0x65, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x56, 0x69, 0x65, 0x77,
		0x20, 0x24, 0x31, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x24, 0x31, 0x4a, 0x6f, 0x6c, 0x6c,
		0x61, 0x4a, 0x6f, 0x79, 0x4a, 0x6f, 0x79, 0x53, 0x75, 0x72, 0x66, 0x4a, 0x53, 0x31, 0x30, 0x4a,
		0x75, 0x6d, 0x70, 0x65, 0x72, 0x45, 0x5a, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4a, 0x75, 0x6e,
		0x69, 0x70, 0x65, 0x72, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x4a, 0x75, 0x6e, 0x69,
		0x70, 0x65, 0x72, 0x73, 0x2f, 0x43, 0x65, 0x64, 0x61, 0x72, 0x23, 0x43, 0x54, 0x38, 0x43, 0x54,
		0x38, 0x4a, 0x75, 0x73, 0x74, 0x35, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x24, 0x31, 0x46, 0x72,
		0x65, 0x65, 0x64, 0x6f, 0x6d, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d, 0x53,
		0x70, 0x61, 0x63, 0x65, 0x72, 0x20, 0x32, 0x53, 0x53, 0x70, 0x61, 0x63, 0x65, 0x72, 0x20, 0x32,
		0x4a, 0x55, 0x53, 0x54, 0x35, 0x53, 0x50, 0x41, 0x43, 0x45, 0x52, 0x53, 0x70, 0x61, 0x63, 0x65,
		0x72, 0x42, 0x4c, 0x41, 0x53, 0x54, 0x45, 0x52, 0x20, 0x32, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x65,
		0x72, 0x20, 0x32, 0x42, 0x4c, 0x41, 0x53, 0x54, 0x45, 0x52, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x65,
		0x72, 0x4b, 0x2d, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x41, 0x56, 0x54, 0x45, 0x43, 0x48, 0x5f, 0x54,
		0x4f, 0x55, 0x43, 0x48, 0x59, 0x5f, 0x46, 0x32, 0x4e, 0x61, 0x76, 0x74, 0x65, 0x63, 0x68, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x79, 0x20, 0x46, 0x32, 0x4b, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x4b, 0x54, 0x32, 0x30, 0x32, 0x30, 0x31, 0x31, 0x39, 0x39, 0x4b, 0x54, 0x32, 0x30, 0x32, 0x30,
		0x31, 0x31, 0x38, 0x38, 0x54, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x4c,
		0x44, 0x4f, 0x58, 0x2d, 0x32, 0x31, 0x33, 0x30, 0x69, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x4d, 0x61, 0x78, 0x4c, 0x44, 0x4f, 0x58, 0x2d, 0x32, 0x31, 0x32, 0x33, 0x58, 0x31, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x4c, 0x44, 0x4f, 0x58, 0x2d, 0x32, 0x31, 0x32, 0x31, 0x4d, 0x54, 0x34, 0x30,
		0x4c, 0x44, 0x58, 0x41, 0x2d, 0x32, 0x30, 0x32, 0x32, 0x58, 0x32, 0x37, 0x53, 0x20, 0x50, 0x72,
		0x6f, 0x4c, 0x44, 0x58, 0x41, 0x2d, 0x32, 0x31, 0x32, 0x32, 0x58, 0x32, 0x37, 0x53, 0x50, 0x61,
		0x63, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4b, 0x41, 0x54, 0x56, 0x31, 0x4b, 0x44,
		0x44, 0x49, 0x69, 0x69, 0x64, 0x61, 0x20, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x72, 0x20, 0x24,
		0x31, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x72, 0x20, 0x41, 0x30, 0x32, 0x4b, 0x45, 0x4e, 0x53,
		0x48, 0x49, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x5f, 0x43, 0x31, 0x77, 0x41, 0x72, 0x6d, 0x6f, 0x72,
		0x20, 0x43, 0x31, 0x77, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x31, 0x73, 0x4b, 0x49, 0x4e,
		0x47, 0x5a, 0x4f, 0x4e, 0x45, 0x4b, 0x31, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b, 0x4e, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4b, 0x4f, 0x50, 0x4f, 0x4b, 0x52, 0x45, 0x5a, 0x4b, 0x52,
		0x49, 0x50, 0x4b, 0x24, 0x31, 0x4b, 0x52, 0x4f, 0x4e, 0x4f, 0x4e, 0x45, 0x54, 0x31, 0x31, 0x30,
		0x30, 0x4e, 0x45, 0x54, 0x20, 0x31, 0x31, 0x30, 0x30, 0x4e, 0x45, 0x54, 0x20, 0x24, 0x31, 0x4e,
		0x45, 0x54, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x4e, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x74,
		0x72, 0x69, 0x78, 0x4e, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x58, 0x4e, 0x65, 0x74, 0x20, 0x4d, 0x61,
		0x78, 0x4e, 0x65, 0x74, 0x20, 0x24, 0x31, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x4e, 0x65,
		0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x54, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x4b, 0x56, 0x41, 0x44,
		0x52, 0x41, 0x4b, 0x56, 0x41, 0x44, 0x52, 0x41, 0x5f, 0x4b, 0x56, 0x41, 0x44, 0x52, 0x41, 0x5f,
		0x54, 0x54, 0x4b, 0x5a, 0x47, 0x4b, 0x61, 0x61, 0x6e, 0x4b, 0x61, 0x69, 0x6f, 0x6d, 0x79, 0x4b,
		0x61, 0x69, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x20, 0x24, 0x31, 0x4b, 0x61, 0x6c, 0x6c, 0x65, 0x79,
		0x42, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x47, 0x5f, 0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x47,
		0x20, 0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x24, 0x31, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f,
		0x50, 0x52, 0x4f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x6c, 0x65, 0x6d,
		0x65, 0x6e, 0x74, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
		0x74, 0x20, 0x35, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x20, 0x4d, 0x41, 0x58, 0x45, 0x6c,
		0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x20,
		0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x20,
		0x4d, 0x61, 0x78, 0x20, 0x24, 0x31, 0x53, 0x49, 0x4c, 0x56, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x58,
		0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e,
		0x54, 0x20, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x20, 0x51, 0x45, 0x6c, 0x65, 0x6d, 0x65,
		0x6e, 0x74, 0x20, 0x51, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x5f,
		0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x47, 0x4f,
		0x4c, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x6f, 0x6c, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x2d,
		0x42, 0x4f, 0x4f, 0x4b, 0x24, 0x31, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56,
		0x20, 0x24, 0x31, 0x4b, 0x61, 0x6e, 0x6a, 0x69, 0x43, 0x61, 0x74, 0x61, 0x20, 0x37, 0x4b, 0x4a,
		0x2d, 0x47, 0x4f, 0x43, 0x48, 0x49, 0x47, 0x6f, 0x63, 0x68, 0x69, 0x41, 0x69, 0x6c, 0x75, 0x20,
		0x4d, 0x61, 0x78, 0x59, 0x75, 0x62, 0x69, 0x20, 0x33, 0x47, 0x41, 0x6c, 0x66, 0x61, 0x4b, 0x4a,
		0x2d, 0x24, 0x31, 0x4b, 0x4a, 0x2d, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x34, 0x4b, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x34, 0x4b, 0x4b, 0x61, 0x70, 0x73, 0x79, 0x73, 0x4b, 0x61, 0x72, 0x62, 0x6f,
		0x6e, 0x6e, 0x4b, 0x39, 0x20, 0x4b, 0x61, 0x76, 0x61, 0x63, 0x68, 0x20, 0x34, 0x47, 0x4b, 0x39,
		0x20, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x34, 0x47, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x45, 0x63, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x45, 0x63, 0x6f, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34,
		0x47, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65,
		0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x4b, 0x39,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x59, 0x75, 0x76, 0x61, 0x4b, 0x39, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x41, 0x34, 0x30, 0x20, 0x49, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x24, 0x31, 0x20, 0x49, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x4b, 0x39, 0x20, 0x56, 0x69, 0x72, 0x61,
		0x61, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x61, 0x20, 0x53, 0x6c, 0x65, 0x65,
		0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x61, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x34, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x61, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x75, 0x72, 0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x32, 0x41, 0x75, 0x72, 0x61, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x41, 0x75, 0x72, 0x61, 0x20,
		0x43, 0x68, 0x61, 0x6d, 0x70, 0x41, 0x75, 0x72, 0x61, 0x20, 0x53, 0x6c, 0x65, 0x65, 0x6b, 0x20,
		0x34, 0x47, 0x41, 0x6c, 0x66, 0x61, 0x20, 0x41, 0x31, 0x31, 0x34, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x4b, 0x39, 0x20, 0x56, 0x69, 0x72, 0x61, 0x61, 0x74, 0x20, 0x34, 0x47, 0x4d, 0x41, 0x43, 0x48,
		0x46, 0x49, 0x56, 0x45, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x46, 0x69, 0x76, 0x65, 0x4d, 0x41, 0x43,
		0x48, 0x4f, 0x4e, 0x45, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d,
		0x20, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x41,
		0x43, 0x48, 0x4f, 0x4e, 0x45, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d, 0x61,
		0x63, 0x68, 0x20, 0x4f, 0x6e, 0x65, 0x4d, 0x41, 0x43, 0x48, 0x20, 0x53, 0x49, 0x58, 0x20, 0x56,
		0x52, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x53,
		0x69, 0x78, 0x20, 0x56, 0x52, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x53, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x53,
		0x24, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61,
		0x20, 0x34, 0x47, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4a, 0x75, 0x6d, 0x62,
		0x6f, 0x20, 0x32, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4a, 0x75, 0x6d, 0x62,
		0x6f, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d, 0x6f, 0x67, 0x68, 0x75, 0x6c,
		0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x20,
		0x53, 0x37, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x6e,
		0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x33,
		0x44, 0x20, 0x50, 0x6c, 0x65, 0x78, 0x53, 0x32, 0x30, 0x35, 0x32, 0x47, 0x42, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x53, 0x32, 0x35, 0x30, 0x20, 0x32, 0x47, 0x42, 0x4b, 0x2d,
		0x6c, 0x69, 0x74, 0x65, 0x20, 0x46, 0x33, 0x4b, 0x2d, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x46, 0x33,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x6c, 0x65, 0x20, 0x56, 0x41, 0x34, 0x31, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x48, 0x44,
		0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x49, 0x50, 0x53, 0x51,
		0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x56, 0x52, 0x4b, 0x61, 0x74,
		0x61, 0x49, 0x35, 0x54, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x42, 0x6f, 0x78, 0x20, 0x32,
		0x4b, 0x61, 0x7a, 0x61, 0x6d, 0x54, 0x6f, 0x72, 0x6e, 0x61, 0x64, 0x6f, 0x20, 0x33, 0x34, 0x38,
		0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x34, 0x35, 0x30, 0x57, 0x54, 0x72, 0x6f, 0x6f,
		0x70, 0x65, 0x72, 0x20, 0x58, 0x34, 0x2e, 0x30, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x20,
		0x58, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x4b, 0x61, 0x7a, 0x75, 0x6e, 0x61, 0x4b, 0x41, 0x5a, 0x2d,
		0x4e, 0x32, 0x30, 0x65, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x4d, 0x59, 0x46, 0x4c, 0x49, 0x58, 0x4b,
		0x65, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x26, 0x20, 0x53, 0x74, 0x72, 0x61, 0x75, 0x73, 0x73,
		0x41, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x41, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x69,
		0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x69, 0x33, 0x41,
		0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x50, 0x24, 0x31, 0x50, 0x31, 0x20, 0x41, 0x6d,
		0x61, 0x74, 0x65, 0x75, 0x72, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x54, 0x56, 0x54,
		0x56, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x58, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45,
		0x52, 0x5f, 0x38, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x45,
		0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x39, 0x5a, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f,
		0x50, 0x52, 0x4f, 0x5a, 0x4b, 0x65, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x4b,
		0x65, 0x6e, 0x62, 0x6f, 0x45, 0x36, 0x31, 0x50, 0x72, 0x6f, 0x45, 0x36, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x4f, 0x33, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x65, 0x6e, 0x65, 0x6b, 0x73, 0x69,
		0x4c, 0x69, 0x62, 0x65, 0x72, 0x74, 0x79, 0x53, 0x75, 0x6e, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x4b,
		0x65, 0x6e, 0x78, 0x69, 0x6e, 0x64, 0x61, 0x54, 0x68, 0x72, 0x65, 0x65, 0x20, 0x50, 0x72, 0x6f,
		0x6f, 0x66, 0x69, 0x6e, 0x67, 0x73, 0x20, 0x57, 0x24, 0x31, 0x4b, 0x68, 0x61, 0x64, 0x61, 0x73,
		0x4b, 0x69, 0x61, 0x6e, 0x6f, 0x53, 0x6c, 0x69, 0x6d, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31,
		0x43, 0x4f, 0x52, 0x45, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x20, 0x44, 0x55, 0x41, 0x4c, 0x20, 0x33,
		0x47, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x22,
		0x20, 0x50, 0x72, 0x6f, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x35, 0x2e, 0x30,
		0x22, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x36,
		0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x36, 0x20, 0x35, 0x2e, 0x38, 0x35, 0x22,
		0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x22, 0x24,
		0x32, 0x20, 0x24, 0x33, 0x4b, 0x69, 0x6e, 0x67, 0x62, 0x6f, 0x78, 0x4b, 0x69, 0x6e, 0x67, 0x73,
		0x74, 0x61, 0x72, 0x4b, 0x69, 0x6e, 0x67, 0x73, 0x75, 0x6e, 0x4b, 0x69, 0x6e, 0x73, 0x74, 0x6f,
		0x6e, 0x65, 0x4b, 0x69, 0x6f, 0x77, 0x61, 0x24, 0x31, 0x20, 0x43, 0x72, 0x69, 0x73, 0x74, 0x61,
		0x6c, 0x53, 0x35, 0x20, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x53, 0x35, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x4b, 0x69, 0x76, 0x69, 0x24, 0x31, 0x20, 0x76, 0x24, 0x32, 0x4b, 0x6c, 0x69, 0x70, 0x61,
		0x64, 0x4b, 0x4c, 0x36, 0x32, 0x38, 0x5f, 0x48, 0x4c, 0x4b, 0x4c, 0x36, 0x32, 0x38, 0x48, 0x4c,
		0x4b, 0x4c, 0x34, 0x38, 0x39, 0x38, 0x2d, 0x41, 0x35, 0x30, 0x4b, 0x6f, 0x63, 0x61, 0x73, 0x6f,
		0x44, 0x58, 0x37, 0x36, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x36, 0x32, 0x30, 0x30, 0x4d, 0x37,
		0x32, 0x39, 0x4d, 0x58, 0x37, 0x38, 0x30, 0x4d, 0x38, 0x35, 0x31, 0x4d, 0x31, 0x30, 0x35, 0x30,
		0x73, 0x4d, 0x31, 0x30, 0x37, 0x30, 0x4d, 0x58, 0x37, 0x33, 0x36, 0x4b, 0x6f, 0x64, 0x61, 0x6b,
		0x49, 0x4d, 0x35, 0x53, 0x65, 0x72, 0x65, 0x6e, 0x20, 0x24, 0x31, 0x45, 0x6b, 0x74, 0x72, 0x61,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x77, 0x61, 0x79, 0x20, 0x4c, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x77, 0x61, 0x79, 0x20, 0x24, 0x31, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x24, 0x31, 0x4b, 0x6f, 0x67, 0x61, 0x6e, 0x41, 0x67, 0x6f, 0x72, 0x61, 0x20, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x67, 0x6f, 0x72, 0x61, 0x20, 0x58, 0x49, 0x41, 0x67, 0x6f,
		0x72, 0x61, 0x20, 0x31, 0x31, 0x41, 0x67, 0x6f, 0x72, 0x61, 0x20, 0x47, 0x6f, 0x41, 0x67, 0x6f,
		0x72, 0x61, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x67, 0x6f, 0x72, 0x61, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x4b, 0x6f, 0x6d, 0x75, 0x4b, 0x6f, 0x6e, 0x6b, 0x61, 0x4b, 0x43, 0x35, 0x31,
		0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x50, 0x72, 0x6f,
		0x4b, 0x43, 0x35, 0x31, 0x36, 0x45, 0x35, 0x36, 0x36, 0x30, 0x53, 0x56, 0x69, 0x76, 0x61, 0x20,
		0x35, 0x36, 0x36, 0x30, 0x73, 0x57, 0x38, 0x33, 0x30, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x38,
		0x33, 0x30, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x20, 0x24, 0x31, 0x57, 0x39, 0x39, 0x30, 0x54,
		0x75, 0x78, 0x65, 0x64, 0x6f, 0x20, 0x39, 0x39, 0x30, 0x32, 0x4b, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x54, 0x56, 0x4b, 0x6f, 0x6e, 0x72, 0x6f, 0x77, 0x42, 0x69, 0x67, 0x43, 0x6f, 0x6f,
		0x6c, 0x4c, 0x49, 0x4e, 0x4b, 0x35, 0x35, 0x43, 0x6f, 0x6f, 0x6c, 0x2d, 0x4b, 0x43, 0x6f, 0x6f,
		0x6c, 0x20, 0x35, 0x35, 0x53, 0x6f, 0x66, 0x74, 0x20, 0x35, 0x53, 0x6f, 0x66, 0x74, 0x20, 0x35,
		0x50, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x46, 0x69, 0x76, 0x65, 0x4a, 0x75, 0x73, 0x74, 0x20, 0x35,
		0x4c, 0x69, 0x6e, 0x6b, 0x20, 0x35, 0x45, 0x61, 0x73, 0x79, 0x20, 0x35, 0x43, 0x69, 0x74, 0x79,
		0x20, 0x24, 0x31, 0x53, 0x6b, 0x79, 0x20, 0x35, 0x35, 0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x24,
		0x31, 0x4b, 0x2d, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x30, 0x33, 0x4b, 0x6f, 0x6f, 0x62, 0x65,
		0x65, 0x53, 0x4c, 0x30, 0x30, 0x34, 0x54, 0x4b, 0x31, 0x30, 0x30, 0x46, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4b, 0x6f, 0x6f, 0x6c, 0x6e, 0x65, 0x65, 0x4b, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x57, 0x35, 0x30, 0x32, 0x4b, 0x6f, 0x72, 0x69, 0x64, 0x79,
		0x4b, 0x6f, 0x73, 0x6c, 0x61, 0x6d, 0x4b, 0x72, 0x61, 0x66, 0x74, 0x4b, 0x54, 0x56, 0x2d, 0x24,
		0x31, 0x4b, 0x72, 0xc3, 0xbc, 0x67, 0x65, 0x72, 0x26, 0x4d, 0x61, 0x74, 0x7a, 0x4d, 0x4f, 0x56,
		0x45, 0x38, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45, 0x20, 0x38, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x36, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45,
		0x20, 0x36, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45, 0x20, 0x24, 0x31, 0x44, 0x52,
		0x49, 0x56, 0x45, 0x20, 0x34, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x4c, 0x54, 0x45, 0x44, 0x52,
		0x49, 0x56, 0x45, 0x20, 0x24, 0x31, 0x46, 0x4c, 0x4f, 0x57, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x46, 0x4c, 0x4f, 0x57, 0x20, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x4c, 0x4f,
		0x57, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x34, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x56,
		0x45, 0x20, 0x34, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x35, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x56, 0x45,
		0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x36, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x24, 0x31, 0x53, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x24,
		0x31, 0x4d, 0x4f, 0x56, 0x45, 0x20, 0x39, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x31, 0x30,
		0x2e, 0x34, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x38, 0x30, 0x36, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x38, 0x30, 0x37, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x45,
		0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20,
		0x31, 0x30, 0x2e, 0x35, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x37, 0x2e,
		0x31, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x45,
		0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4b, 0x75, 0x6c, 0x69,
		0x61, 0x6f, 0x4b, 0x75, 0x6c, 0x74, 0x4b, 0x75, 0x6d, 0x61, 0x69, 0x4b, 0x75, 0x72, 0x69, 0x6f,
		0x54, 0x61, 0x62, 0x20, 0x32, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x43, 0x31, 0x34, 0x35, 0x30,
		0x30, 0x4b, 0x79, 0x6f, 0x63, 0x65, 0x72, 0x61, 0x4d, 0x69, 0x6c, 0x61, 0x6e, 0x6f, 0x42, 0x61,
		0x6c, 0x6d, 0x75, 0x64, 0x61, 0x20, 0x24, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x24, 0x31, 0x52,
		0x69, 0x73, 0x65, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x47, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20,
		0x45, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x43, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x4a, 0x44,
		0x69, 0x67, 0x6e, 0x6f, 0x20, 0x54, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x58, 0x53, 0x32, 0x44,
		0x69, 0x67, 0x6e, 0x6f, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x32,
		0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x52, 0x61, 0x66, 0x72, 0x65, 0x44, 0x69, 0x67, 0x6e, 0x6f,
		0x20, 0x42, 0x58, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x42, 0x58, 0x20, 0x32, 0x44, 0x69, 0x67,
		0x6e, 0x6f, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x20, 0x52, 0x4d, 0x69, 0x72, 0x61, 0x69,
		0x65, 0x20, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x62, 0x61, 0x72, 0x20, 0x58, 0x56, 0x48, 0x79, 0x64,
		0x72, 0x6f, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x45, 0x44, 0x47, 0x45, 0x48, 0x79, 0x64, 0x72,
		0x6f, 0x20, 0x58, 0x54, 0x52, 0x4d, 0x43, 0x36, 0x37, 0x33, 0x30, 0x48, 0x79, 0x64, 0x72, 0x6f,
		0x20, 0x49, 0x43, 0x4f, 0x4e, 0x43, 0x36, 0x37, 0x35, 0x30, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20,
		0x45, 0x4c, 0x49, 0x54, 0x45, 0x43, 0x36, 0x35, 0x33, 0x30, 0x4e, 0x48, 0x79, 0x64, 0x72, 0x6f,
		0x20, 0x4c, 0x49, 0x46, 0x45, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x57, 0x41, 0x56, 0x45, 0x43,
		0x36, 0x37, 0x34, 0x33, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x52, 0x65, 0x61, 0x63, 0x68, 0x44,
		0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63,
		0x65, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x32, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x33, 0x45, 0x37, 0x31, 0x31, 0x30, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63,
		0x65, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x43, 0x36, 0x39, 0x33, 0x30, 0x44,
		0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x35, 0x47, 0x4b, 0x43, 0x2d, 0x53, 0x37,
		0x30, 0x31, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x4b, 0x59, 0x47, 0x30, 0x31, 0x54, 0x6f, 0x72,
		0x71, 0x75, 0x65, 0x20, 0x35, 0x47, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x53, 0x4d, 0x69, 0x72,
		0x61, 0x69, 0x65, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x31, 0x54, 0x6f, 0x72,
		0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x36, 0x45, 0x61, 0x73, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x72, 0x76, 0x65,
		0x72, 0x61, 0x4d, 0x61, 0x6d, 0x6f, 0x72, 0x69, 0x6e, 0x6f, 0x20, 0x35, 0x47, 0x72, 0x61, 0x74,
		0x69, 0x6e, 0x61, 0x20, 0x34, 0x47, 0x47, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x61, 0x20, 0x24, 0x31,
		0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x58, 0x30, 0x31, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69,
		0x20, 0x24, 0x31, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x32, 0x54, 0x6f, 0x72,
		0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x33, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30,
		0x34, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x20, 0x34, 0x42, 0x61, 0x73,
		0x69, 0x6f, 0x20, 0x33, 0x4b, 0x61, 0x6e, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68,
		0x6f, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x51, 0x58, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x51, 0x5a, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x51, 0x5a, 0x31, 0x30, 0x51, 0x75,
		0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x51, 0x5a, 0x38, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x30, 0x31, 0x52, 0x61, 0x66, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x62, 0x61, 0x72, 0x20,
		0x41, 0x30, 0x33, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x4c, 0x30, 0x31, 0x55, 0x72, 0x62,
		0x61, 0x6e, 0x6f, 0x20, 0x4c, 0x30, 0x32, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x4c, 0x30,
		0x33, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x56, 0x30, 0x31, 0x55, 0x72, 0x62, 0x61, 0x6e,
		0x6f, 0x20, 0x56, 0x30, 0x32, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x56, 0x30, 0x33, 0x44,
		0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x58, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x58,
		0x33, 0x42, 0x72, 0x69, 0x67, 0x61, 0x64, 0x69, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x53, 0x63,
		0x6f, 0x75, 0x74, 0x4c, 0x75, 0x63, 0x65, 0x4b, 0x61, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d,
		0x61, 0x68, 0x6f, 0x20, 0x32, 0x4b, 0x61, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68,
		0x6f, 0x20, 0x32, 0x2b, 0x4b, 0x61, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f,
		0x20, 0x33, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
		0x73, 0x6f, 0x47, 0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x79, 0x70, 0x65, 0x2d, 0x58, 0x58, 0x53,
		0x32, 0x31, 0x35, 0x31, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x4b, 0x5a, 0x20, 0x24, 0x31, 0x4b, 0x79,
		0x6f, 0x77, 0x6f, 0x6e, 0x4b, 0x7a, 0x65, 0x6e, 0x55, 0x72, 0x65, 0x6b, 0x69, 0x5f, 0x55, 0x31,
		0x55, 0x72, 0x65, 0x6b, 0x69, 0x20, 0x55, 0x31, 0x45, 0x76, 0x61, 0x5f, 0x45, 0x30, 0x31, 0x45,
		0x76, 0x61, 0x20, 0x45, 0x30, 0x31, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x56, 0x31, 0x52,
		0x45, 0x58, 0x20, 0x52, 0x58, 0x52, 0x65, 0x78, 0x20, 0x52, 0x58, 0x4c, 0x61, 0x6d, 0x69, 0x61,
		0x20, 0x4c, 0x30, 0x31, 0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x79, 0x20, 0x24, 0x31, 0x44, 0x41,
		0x52, 0x54, 0x20, 0x4b, 0x5a, 0x30, 0x37, 0x44, 0x61, 0x72, 0x74, 0x20, 0x4b, 0x5a, 0x30, 0x37,
		0x4c, 0x2d, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x24,
		0x31, 0x53, 0x61, 0x70, 0x70, 0x68, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x49, 0x51,
		0x4c, 0x43, 0x54, 0x4c, 0x45, 0x4d, 0x46, 0x4f, 0x4c, 0x47, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x44, 0x4d, 0x2d, 0x24, 0x31, 0x4c, 0x37, 0x30,
		0x46, 0x37, 0x30, 0x4c, 0x39, 0x30, 0x4c, 0x38, 0x30, 0x4c, 0x47, 0x2d, 0x44, 0x33, 0x34, 0x30,
		0x46, 0x38, 0x4c, 0x37, 0x30, 0x20, 0x54, 0x72, 0x69, 0x4c, 0x33, 0x30, 0x4c, 0x47, 0x2d, 0x44,
		0x31, 0x36, 0x30, 0x4c, 0x34, 0x30, 0x4c, 0x34, 0x35, 0x4c, 0x33, 0x35, 0x4c, 0x32, 0x30, 0x4c,
		0x36, 0x30, 0x4c, 0x36, 0x30, 0x69, 0x4c, 0x36, 0x35, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30,
		0x41, 0x50, 0x4d, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x34, 0x4c, 0x47, 0x2d, 0x50,
		0x35, 0x30, 0x35, 0x52, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30, 0x56, 0x50, 0x50, 0x5a, 0x6f,
		0x6e, 0x65, 0x20, 0x34, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x32, 0x30, 0x50, 0x4d, 0x54, 0x72, 0x69,
		0x62, 0x75, 0x74, 0x65, 0x20, 0x45, 0x6d, 0x70, 0x69, 0x72, 0x65, 0x4c, 0x47, 0x2d, 0x53, 0x50,
		0x32, 0x30, 0x30, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x44, 0x79, 0x6e, 0x61, 0x73,
		0x74, 0x79, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x35, 0x54, 0x72, 0x69, 0x62, 0x75,
		0x74, 0x65, 0x20, 0x32, 0x4c, 0x47, 0x2d, 0x46, 0x35, 0x37, 0x30, 0x42, 0x61, 0x6e, 0x64, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x56, 0x53, 0x39, 0x33, 0x30, 0x20, 0x34, 0x47, 0x53, 0x70, 0x65, 0x63,
		0x74, 0x72, 0x75, 0x6d, 0x20, 0x49, 0x49, 0x20, 0x34, 0x47, 0x47, 0x32, 0x47, 0x32, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x47, 0x33, 0x47, 0x33, 0x20, 0x56, 0x69, 0x67, 0x6f, 0x72, 0x4c, 0x47, 0x2d,
		0x46, 0x34, 0x31, 0x30, 0x53, 0x47, 0x33, 0x20, 0x41, 0x47, 0x33, 0x53, 0x47, 0x33, 0x20, 0x42,
		0x65, 0x61, 0x74, 0x47, 0x33, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4c, 0x47, 0x2d, 0x46,
		0x34, 0x36, 0x30, 0x47, 0x33, 0x20, 0x43, 0x61, 0x74, 0x2e, 0x20, 0x36, 0x4c, 0x47, 0x2d, 0x44,
		0x37, 0x32, 0x34, 0x47, 0x33, 0x73, 0x47, 0x34, 0x47, 0x34, 0x63, 0x47, 0x34, 0x20, 0x53, 0x74,
		0x79, 0x6c, 0x75, 0x73, 0x47, 0x34, 0x73, 0x4c, 0x47, 0x2d, 0x48, 0x37, 0x33, 0x35, 0x47, 0x34,
		0x20, 0x42, 0x65, 0x61, 0x74, 0x4c, 0x47, 0x2d, 0x48, 0x37, 0x33, 0x31, 0x47, 0x34, 0x20, 0x56,
		0x69, 0x67, 0x6f, 0x72, 0x47, 0x35, 0x20, 0x53, 0x45, 0x47, 0x36, 0x4c, 0x4d, 0x2d, 0x51, 0x38,
		0x35, 0x30, 0x47, 0x37, 0x20, 0x46, 0x69, 0x74, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x31, 0x30, 0x47,
		0x37, 0x20, 0x4f, 0x6e, 0x65, 0x47, 0x20, 0x46, 0x6c, 0x65, 0x78, 0x47, 0x20, 0x46, 0x6c, 0x65,
		0x78, 0x20, 0x32, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x47, 0x2d,
		0x46, 0x34, 0x33, 0x30, 0x4c, 0x47, 0x78, 0x32, 0x47, 0x78, 0x4c, 0x4d, 0x2d, 0x47, 0x38, 0x35,
		0x30, 0x47, 0x38, 0x58, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d, 0x47, 0x38, 0x31,
		0x30, 0x47, 0x38, 0x53, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x57, 0x69, 0x6e, 0x65, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x48, 0x34, 0x31, 0x30, 0x57, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x57, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x47,
		0x57, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4a, 0x61, 0x7a, 0x7a, 0x4b,
		0x32, 0x30, 0x46, 0x36, 0x30, 0x41, 0x4b, 0x41, 0x4c, 0x4d, 0x2d, 0x4b, 0x39, 0x32, 0x30, 0x4b,
		0x39, 0x32, 0x4c, 0x47, 0x4c, 0x34, 0x31, 0x43, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
		0x20, 0x32, 0x4c, 0x47, 0x4c, 0x53, 0x36, 0x36, 0x30, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
		0x4d, 0x61, 0x67, 0x6e, 0x61, 0x4c, 0x47, 0x4c, 0x36, 0x33, 0x42, 0x4c, 0x46, 0x69, 0x65, 0x73,
		0x74, 0x61, 0x46, 0x69, 0x65, 0x73, 0x74, 0x61, 0x20, 0x32, 0x42, 0x65, 0x6c, 0x6c, 0x6f, 0x20,
		0x32, 0x4c, 0x20, 0x42, 0x65, 0x6c, 0x6c, 0x6f, 0x4c, 0x20, 0x46, 0x69, 0x6e, 0x6f, 0x52, 0x69,
		0x73, 0x69, 0x6f, 0x52, 0x69, 0x73, 0x69, 0x6f, 0x20, 0x32, 0x58, 0x33, 0x30, 0x30, 0x53, 0x70,
		0x72, 0x65, 0x65, 0x4c, 0x47, 0x4d, 0x2d, 0x58, 0x34, 0x30, 0x31, 0x53, 0x58, 0x35, 0x30, 0x30,
		0x4c, 0x47, 0x4d, 0x2d, 0x58, 0x31, 0x30, 0x30, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x46,
		0x6f, 0x6c, 0x64, 0x65, 0x72, 0x20, 0x58, 0x31, 0x30, 0x30, 0x53, 0x43, 0x6c, 0x61, 0x73, 0x73,
		0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4f,
		0x6e, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64,
		0x20, 0x32, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x47, 0x4c, 0x47, 0x2d, 0x46, 0x32,
		0x32, 0x30, 0x4b, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x47, 0x4b, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x75, 0x73, 0x20, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x49, 0x49, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x70, 0x74, 0x69,
		0x6d, 0x75, 0x73, 0x20, 0x4c, 0x33, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
		0x20, 0x4c, 0x34, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x34,
		0x20, 0x49, 0x49, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20,
		0x4c, 0x34, 0x30, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x35, 0x20, 0x49, 0x49,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x4c, 0x31, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c,
		0x39, 0x20, 0x49, 0x49, 0x4c, 0x47, 0x2d, 0x50, 0x38, 0x37, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x75, 0x73, 0x20, 0x46, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x46, 0x33, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x46, 0x36, 0x4c, 0x47, 0x2d, 0x55, 0x53, 0x37, 0x38,
		0x30, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x46, 0x37, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x75, 0x73, 0x20, 0x69, 0x74, 0x20, 0x24, 0x31, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20,
		0x4c, 0x54, 0x45, 0x20, 0x32, 0x4c, 0x47, 0x2d, 0x46, 0x32, 0x36, 0x30, 0x53, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x33, 0x4c, 0x47, 0x2d, 0x46, 0x31, 0x32,
		0x30, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x54, 0x61, 0x67,
		0x4c, 0x47, 0x2d, 0x50, 0x37, 0x30, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c,
		0x37, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37, 0x20, 0x49, 0x49, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37, 0x20, 0x49, 0x49, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37, 0x30, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x4c, 0x2d, 0x30, 0x31, 0x44, 0x50, 0x52, 0x41, 0x44,
		0x41, 0x20, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x2d, 0x30, 0x32, 0x44, 0x4c, 0x2d, 0x30,
		0x37, 0x43, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,
		0x20, 0x4c, 0x2d, 0x30, 0x37, 0x43, 0x56, 0x32, 0x30, 0x51, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75,
		0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x35, 0x30, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x79,
		0x4c, 0x47, 0x2d, 0x4c, 0x53, 0x38, 0x34, 0x30, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x34, 0x47,
		0x20, 0x4c, 0x54, 0x45, 0x38, 0x30, 0x31, 0x4c, 0x47, 0x51, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75,
		0x73, 0x4c, 0x47, 0x2d, 0x4d, 0x34, 0x30, 0x30, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x33,
		0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x37, 0x51, 0x37, 0x2b, 0x51, 0x38, 0x2b, 0x51, 0x38, 0x51,
		0x39, 0x51, 0x37, 0x30, 0x51, 0x35, 0x32, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x50, 0x58, 0x4c, 0x47, 0x2d, 0x4d, 0x53, 0x38, 0x37, 0x30, 0x53, 0x70, 0x72, 0x69, 0x6e,
		0x74, 0x20, 0x34, 0x47, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x32,
		0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32, 0x20, 0x56,
		0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x20, 0x33, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20,
		0x33, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x79,
		0x6c, 0x6f, 0x20, 0x34, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x35, 0x53, 0x74, 0x79, 0x6c, 0x6f,
		0x20, 0x36, 0x47, 0x37, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x47, 0x38, 0x32, 0x30,
		0x55, 0x4d, 0x31, 0x47, 0x38, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x47, 0x2d, 0x4d, 0x31,
		0x35, 0x33, 0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30,
		0x43, 0x4d, 0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x20, 0x32, 0x45, 0x73, 0x63, 0x61, 0x70,
		0x65, 0x20, 0x32, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x72,
		0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72,
		0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x72, 0x65,
		0x6d, 0x69, 0x65, 0x72, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x4d, 0x2d, 0x58,
		0x35, 0x32, 0x35, 0x51, 0x36, 0x30, 0x4c, 0x4d, 0x2d, 0x4b, 0x33, 0x31, 0x35, 0x49, 0x4d, 0x57,
		0x33, 0x31, 0x4b, 0x33, 0x31, 0x4c, 0x47, 0x4c, 0x34, 0x32, 0x33, 0x44, 0x4c, 0x53, 0x6f, 0x6c,
		0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x47, 0x2d, 0x46, 0x38, 0x32, 0x30, 0x4c, 0x55, 0x58, 0x32,
		0x58, 0x20, 0x43, 0x61, 0x6d, 0x58, 0x20, 0x4d, 0x61, 0x63, 0x68, 0x58, 0x20, 0x43, 0x68, 0x61,
		0x72, 0x67, 0x65, 0x58, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x47, 0x2d, 0x46, 0x37, 0x34,
		0x30, 0x4c, 0x58, 0x20, 0x53, 0x6b, 0x69, 0x6e, 0x58, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
		0x58, 0x20, 0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x4d, 0x2d, 0x58, 0x35, 0x31, 0x30,
		0x57, 0x4d, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x33, 0x58, 0x34, 0x58, 0x34, 0x2b,
		0x4b, 0x31, 0x31, 0x4b, 0x33, 0x30, 0x4c, 0x4d, 0x58, 0x31, 0x33, 0x30, 0x49, 0x4d, 0x4c, 0x4d,
		0x2d, 0x4b, 0x33, 0x31, 0x30, 0x49, 0x4d, 0x57, 0x31, 0x31, 0x4c, 0x4d, 0x2d, 0x58, 0x36, 0x30,
		0x30, 0x49, 0x4d, 0x57, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x34,
		0x30, 0x5a, 0x4d, 0x57, 0x57, 0x33, 0x30, 0x4c, 0x4d, 0x2d, 0x4b, 0x36, 0x31, 0x30, 0x49, 0x4d,
		0x57, 0x34, 0x31, 0x4c, 0x47, 0x2d, 0x48, 0x35, 0x32, 0x32, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x34, 0x47, 0x4c, 0x47, 0x4c, 0x35, 0x38, 0x56, 0x4c, 0x52, 0x61,
		0x62, 0x65, 0x6c, 0x20, 0x32, 0x4c, 0x47, 0x2d, 0x58, 0x31, 0x39, 0x30, 0x52, 0x61, 0x79, 0x56,
		0x6f, 0x6c, 0x74, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x49, 0x49, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x31,
		0x30, 0x4c, 0x47, 0x4d, 0x2d, 0x4b, 0x31, 0x32, 0x31, 0x4c, 0x47, 0x4d, 0x2d, 0x58, 0x34, 0x30,
		0x31, 0x4c, 0x58, 0x34, 0x30, 0x31, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x32, 0x30, 0x4e, 0x58, 0x34,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4b, 0x34, 0x4b, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x4b,
		0x34, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x32, 0x30, 0x4b,
		0x34, 0x30, 0x4b, 0x34, 0x30, 0x53, 0x4c, 0x4d, 0x2d, 0x4b, 0x34, 0x31, 0x30, 0x4b, 0x34, 0x31,
		0x53, 0x4c, 0x47, 0x2d, 0x58, 0x32, 0x32, 0x30, 0x4b, 0x35, 0x4c, 0x4d, 0x2d, 0x58, 0x35, 0x34,
		0x30, 0x4b, 0x35, 0x30, 0x53, 0x4b, 0x35, 0x30, 0x34, 0x30, 0x32, 0x4c, 0x47, 0x53, 0x70, 0x72,
		0x61, 0x79, 0x4c, 0x2d, 0x30, 0x32, 0x4b, 0x4a, 0x6f, 0x4a, 0x6f, 0x4c, 0x4d, 0x2d, 0x58, 0x36,
		0x32, 0x35, 0x4e, 0x31, 0x58, 0x36, 0x4c, 0x4d, 0x2d, 0x58, 0x36, 0x32, 0x35, 0x4e, 0x58, 0x36,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x41, 0x72, 0x69,
		0x73, 0x74, 0x6f, 0x20, 0x32, 0x41, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x20, 0x33, 0x58, 0x32, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x56, 0x34, 0x30, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x56,
		0x35, 0x30, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d, 0x56, 0x35, 0x31, 0x30, 0x4e,
		0x56, 0x35, 0x30, 0x53, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x32,
		0x30, 0x4e, 0x51, 0x39, 0x32, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x32, 0x37, 0x4c, 0x51, 0x39, 0x20,
		0x4f, 0x6e, 0x65, 0x56, 0x31, 0x30, 0x4b, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4c,
		0x4d, 0x2d, 0x58, 0x32, 0x32, 0x30, 0x51, 0x4d, 0x41, 0x4b, 0x38, 0x73, 0x4b, 0x38, 0x20, 0x34,
		0x47, 0x4b, 0x38, 0x20, 0x56, 0x4b, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x56, 0x33,
		0x30, 0x56, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20,
		0x35, 0x47, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x4d,
		0x2d, 0x47, 0x39, 0x31, 0x30, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x34, 0x47, 0x56, 0x36,
		0x30, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x20, 0x35, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x5a, 0x6f, 0x6e, 0x65, 0x56, 0x33, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
		0x20, 0x5a, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x5a,
		0x6f, 0x6e, 0x65, 0x20, 0x33, 0x4b, 0x33, 0x4b, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29,
		0x4b, 0x37, 0x4b, 0x38, 0x56, 0x53, 0x35, 0x30, 0x30, 0x50, 0x50, 0x4b, 0x31, 0x30, 0x4b, 0x31,
		0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4b, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4b, 0x32, 0x32, 0x4b, 0x33, 0x33, 0x4b, 0x34, 0x32, 0x4b, 0x35, 0x31, 0x4b, 0x35, 0x31, 0x53,
		0x4b, 0x35, 0x32, 0x4b, 0x35, 0x36, 0x4b, 0x35, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x35,
		0x31, 0x51, 0x33, 0x31, 0x51, 0x36, 0x31, 0x51, 0x36, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x34, 0x30,
		0x69, 0x74, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79,
		0x20, 0x34, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x32, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x33, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x75, 0x73, 0x20, 0x56, 0x75, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x56, 0x75, 0x20,
		0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x56, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x75, 0x73, 0x20, 0x34, 0x58, 0x20, 0x48, 0x44, 0x4c, 0x65, 0x6f, 0x6e, 0x4c, 0x65, 0x6f, 0x6e,
		0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x47, 0x4c, 0x31, 0x35, 0x38, 0x56, 0x4c,
		0x52, 0x65, 0x62, 0x65, 0x6c, 0x20, 0x33, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x20, 0x34, 0x52, 0x65,
		0x62, 0x65, 0x6c, 0x56, 0x53, 0x38, 0x37, 0x36, 0x4c, 0x75, 0x63, 0x69, 0x64, 0x20, 0x33, 0x47,
		0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x4c, 0x47, 0x2d, 0x48, 0x37, 0x34, 0x30, 0x47, 0x20, 0x56,
		0x69, 0x73, 0x74, 0x61, 0x20, 0x32, 0x56, 0x53, 0x38, 0x32, 0x30, 0x4c, 0x61, 0x6e, 0x63, 0x65,
		0x74, 0x56, 0x53, 0x38, 0x37, 0x30, 0x20, 0x34, 0x47, 0x4c, 0x75, 0x63, 0x69, 0x64, 0x20, 0x32,
		0x56, 0x53, 0x38, 0x31, 0x30, 0x50, 0x50, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x79, 0x72, 0x65,
		0x4c, 0x47, 0x2d, 0x46, 0x35, 0x38, 0x30, 0x4c, 0x47, 0x65, 0x6e, 0x74, 0x6c, 0x65, 0x47, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x32, 0x56, 0x75, 0x20, 0x33, 0x4c, 0x47, 0x2d, 0x46, 0x4c, 0x34, 0x30,
		0x4c, 0x30, 0x37, 0x30, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4c, 0x47, 0x2d, 0x46, 0x34, 0x34,
		0x30, 0x4c, 0x49, 0x63, 0x65, 0x20, 0x43, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x4c, 0x38, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4c, 0x47, 0x2d, 0x44, 0x33, 0x37, 0x30,
		0x4c, 0x38, 0x30, 0x20, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x59, 0x32, 0x35, 0x57, 0x49, 0x4e,
		0x47, 0x31, 0x30, 0x41, 0x33, 0x30, 0x51, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x46, 0x48,
		0x44, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x4c,
		0x47, 0x2d, 0x56, 0x35, 0x33, 0x33, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x56, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4c,
		0x47, 0x4c, 0x4b, 0x34, 0x33, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x4c, 0x47, 0x2d, 0x4c, 0x4b, 0x34, 0x36, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x46, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30,
		0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x33, 0x4c, 0x47, 0x2d, 0x56, 0x37, 0x30, 0x30, 0x47, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x4c, 0x47, 0x2d, 0x56, 0x34, 0x39, 0x37, 0x47,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4c, 0x47, 0x2d, 0x56,
		0x39, 0x33, 0x35, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x4c, 0x47, 0x2d, 0x56, 0x39, 0x34, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x20, 0x46, 0x48, 0x44, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49,
		0x49, 0x20, 0x38, 0x2e, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x49, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x20, 0x46, 0x48, 0x44, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x49,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x46, 0x48, 0x44, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x47,
		0x2d, 0x50, 0x35, 0x33, 0x30, 0x4c, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x56, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x20, 0x46, 0x48, 0x44, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x4b, 0x38, 0x31, 0x30,
		0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x4b, 0x38,
		0x31, 0x35, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x20, 0x38, 0x2e, 0x33, 0x47, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x58, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4c, 0x47, 0x2d, 0x56, 0x39, 0x33, 0x30,
		0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4c, 0x47, 0x2d,
		0x56, 0x35, 0x33, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x32, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x32, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x4c, 0x47, 0x54, 0x33, 0x32, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x64,
		0x20, 0x50, 0x5a, 0x4c, 0x47, 0x54, 0x33, 0x31, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x64, 0x20,
		0x50, 0x58, 0x4b, 0x45, 0x59, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x30, 0x46, 0x57, 0x65, 0x62,
		0x4f, 0x53, 0x20, 0x54, 0x56, 0x34, 0x37, 0x4c, 0x41, 0x37, 0x39, 0x30, 0x57, 0x2d, 0x5a, 0x41,
		0x4e, 0x65, 0x74, 0x43, 0x61, 0x73, 0x74, 0x4c, 0x47, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x55, 0x72, 0x62, 0x61, 0x6e, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x55, 0x72, 0x62, 0x61,
		0x6e, 0x65, 0x47, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x24, 0x31, 0x4c, 0x4e, 0x4d, 0x42, 0x42,
		0x53, 0x4c, 0x4f, 0x4b, 0x4d, 0x41, 0x54, 0x4c, 0x50, 0x58, 0x2d, 0x47, 0x4c, 0x50, 0x58, 0x2d,
		0x47, 0x20, 0x42, 0x4f, 0x58, 0x4c, 0x50, 0x58, 0x2d, 0x47, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x4d,
		0x61, 0x78, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x54, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x4c, 0x54, 0x5f, 0x53, 0x39, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x53, 0x39, 0x50, 0x37, 0x73, 0x53, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x31,
		0x30, 0x57, 0x37, 0x50, 0x31, 0x30, 0x69, 0x4d, 0x34, 0x30, 0x4d, 0x36, 0x30, 0x4d, 0x32, 0x35,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x57,
		0x4c, 0x59, 0x46, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x34, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20,
		0x32, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x31, 0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x31, 0x4c,
		0x53, 0x2d, 0x35, 0x30, 0x32, 0x31, 0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x32, 0x4c, 0x53, 0x2d,
		0x35, 0x35, 0x30, 0x35, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x46, 0x31, 0x4c, 0x53, 0x2d, 0x34,
		0x35, 0x30, 0x33, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x4c, 0x53, 0x2d, 0x34, 0x35, 0x30, 0x33,
		0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x31, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x33, 0x4c, 0x53,
		0x2d, 0x34, 0x30, 0x30, 0x33, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x34, 0x4c, 0x53, 0x2d, 0x34,
		0x30, 0x30, 0x32, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x35, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30,
		0x35, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x36, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x37, 0x4c,
		0x53, 0x2d, 0x34, 0x30, 0x30, 0x38, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x37, 0x53, 0x46, 0x6c,
		0x61, 0x6d, 0x65, 0x20, 0x38, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x32, 0x57, 0x61, 0x74, 0x65,
		0x72, 0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x35, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20,
		0x34, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x36, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x36, 0x4c,
		0x53, 0x2d, 0x35, 0x30, 0x30, 0x38, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x32, 0x4c, 0x53, 0x2d,
		0x35, 0x30, 0x30, 0x39, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x36, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31,
		0x33, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x34, 0x57, 0x69,
		0x6e, 0x64, 0x20, 0x34, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x30, 0x57, 0x69, 0x6e, 0x64, 0x20,
		0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x35, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x38, 0x4c,
		0x53, 0x2d, 0x35, 0x30, 0x31, 0x36, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x37, 0x4c, 0x53, 0x2d, 0x35,
		0x35, 0x30, 0x34, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x37, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30,
		0x37, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x37, 0x53, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x37,
		0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x38, 0x57,
		0x69, 0x6e, 0x64, 0x20, 0x34, 0x53, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x32, 0x30, 0x57, 0x61, 0x74,
		0x65, 0x72, 0x20, 0x31, 0x30, 0x4c, 0x53, 0x2d, 0x35, 0x32, 0x30, 0x31, 0x57, 0x61, 0x74, 0x65,
		0x72, 0x20, 0x46, 0x31, 0x53, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x32, 0x57, 0x69, 0x6e, 0x64,
		0x20, 0x33, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x33, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x33,
		0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x36, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x39, 0x4c, 0x53,
		0x2d, 0x36, 0x30, 0x30, 0x31, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x32, 0x4c, 0x61, 0x6e, 0x64, 0x20,
		0x52, 0x6f, 0x76, 0x65, 0x72, 0x56, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x33, 0x50, 0x6f,
		0x6c, 0x61, 0x72, 0x33, 0x49, 0x6f, 0x75, 0x74, 0x64, 0x6f, 0x6f, 0x72, 0x20, 0x50, 0x6f, 0x6c,
		0x61, 0x72, 0x20, 0x33, 0x4c, 0x61, 0x6e, 0x64, 0x76, 0x6f, 0x53, 0x36, 0x20, 0x42, 0x75, 0x69,
		0x6c, 0x64, 0x53, 0x36, 0x58, 0x4d, 0x24, 0x31, 0x30, 0x30, 0x24, 0x32, 0x4c, 0x61, 0x6e, 0x69,
		0x6e, 0x4c, 0x61, 0x6e, 0x69, 0x78, 0x49, 0x4c, 0x49, 0x55, 0x4d, 0x5f, 0x50, 0x41, 0x44, 0x5f,
		0x52, 0x58, 0x31, 0x30, 0x76, 0x35, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x52, 0x58, 0x31, 0x30, 0x20, 0x56, 0x35, 0x4c, 0x41, 0x4e, 0x49, 0x58, 0x5f, 0x50, 0x41, 0x44,
		0x5f, 0x45, 0x37, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x50, 0x61, 0x64, 0x20, 0x45, 0x37, 0x49,
		0x6c, 0x69, 0x75, 0x6d, 0x20, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x58, 0x31, 0x32, 0x30, 0x43,
		0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x58, 0x31, 0x32, 0x30, 0x43, 0x49, 0x6c, 0x69, 0x75, 0x6d,
		0x20, 0x24, 0x31, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x24,
		0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x24, 0x31, 0x56, 0x4c, 0x61, 0x72, 0x6b, 0x43, 0x75,
		0x6d, 0x75, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x20, 0x48, 0x44, 0x46, 0x72, 0x65, 0x65, 0x4d,
		0x65, 0x20, 0x58, 0x32, 0x20, 0x24, 0x31, 0x20, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20,
		0x24, 0x32, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20, 0x37, 0x20, 0x33, 0x47,
		0x20, 0x48, 0x44, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20, 0x37, 0x48, 0x44,
		0x20, 0x33, 0x47, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x32, 0x20, 0x24, 0x31, 0x46,
		0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20, 0x37, 0x48, 0x44, 0x46, 0x72, 0x65, 0x65,
		0x4d, 0x65, 0x20, 0x58, 0x34, 0x20, 0x39, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34,
		0x20, 0x37, 0x46, 0x72, 0x65, 0x65, 0x42, 0x69, 0x72, 0x64, 0x20, 0x35, 0x57, 0x69, 0x46, 0x69,
		0x46, 0x72, 0x65, 0x65, 0x42, 0x69, 0x72, 0x64, 0x20, 0x35, 0x20, 0x57, 0x69, 0x46, 0x69, 0x45,
		0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x55, 0x6c, 0x74, 0x69, 0x6d,
		0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x50, 0x48, 0x41, 0x42, 0x4c, 0x45, 0x54, 0x20, 0x37, 0x50,
		0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x37, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x36, 0x2e, 0x30, 0x42, 0x6a, 0x6f, 0x72, 0x6e, 0x20, 0x53, 0x50, 0x2d, 0x35, 0x30, 0x30, 0x43,
		0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x24, 0x31, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f,
		0x4e, 0x6f, 0x64, 0x61, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x4e, 0x6f, 0x64, 0x61,
		0x4c, 0x61, 0x73, 0x65, 0x72, 0x4d, 0x49, 0x44, 0x2d, 0x31, 0x30, 0x38, 0x39, 0x49, 0x50, 0x53,
		0x41, 0x31, 0x30, 0x30, 0x4c, 0x61, 0x76, 0x61, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x32, 0x42,
		0x6c, 0x61, 0x7a, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x7a, 0x65,
		0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x4e,
		0x58, 0x54, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x35, 0x47, 0x4c, 0x58, 0x58, 0x35, 0x30, 0x35,
		0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65, 0x46, 0x6c, 0x61, 0x69, 0x72,
		0x20, 0x24, 0x31, 0x42, 0x65, 0x6e, 0x63, 0x6f, 0x20, 0x59, 0x33, 0x30, 0x42, 0x65, 0x6e, 0x63,
		0x6f, 0x20, 0x59, 0x35, 0x30, 0x42, 0x65, 0x6e, 0x63, 0x6f, 0x20, 0x59, 0x34, 0x30, 0x41, 0x67,
		0x6e, 0x69, 0x20, 0x35, 0x47, 0x41, 0x67, 0x6e, 0x69, 0x20, 0x32, 0x20, 0x35, 0x47, 0x5a, 0x36,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x39, 0x37, 0x20, 0x49, 0x50, 0x53, 0x52, 0x35, 0x73, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x41, 0x39, 0x37, 0x20, 0x32, 0x47, 0x42, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x41, 0x37, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50,
		0x69, 0x78, 0x65, 0x6c, 0x20, 0x56, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x69, 0x78, 0x65,
		0x6c, 0x20, 0x56, 0x24, 0x31, 0x58, 0x31, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x4c, 0x49, 0x72,
		0x69, 0x73, 0x20, 0x58, 0x31, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x58, 0x34, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4c, 0x41, 0x56, 0x41, 0x20, 0x5a, 0x33, 0x20, 0x55, 0x50, 0x5a, 0x33,
		0x4c, 0x45, 0x58, 0x34, 0x30, 0x32, 0x5a, 0x33, 0x33, 0x5a, 0x24, 0x31, 0x5a, 0x35, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x5a, 0x36, 0x5a, 0x32, 0x4c, 0x5a, 0x47, 0x34, 0x30, 0x32, 0x20, 0x4f, 0x4d,
		0x5a, 0x32, 0x31, 0x5a, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x36, 0x30, 0x73, 0x56, 0x32, 0x56,
		0x37, 0x56, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4c, 0x45, 0x39, 0x39, 0x34, 0x30, 0x5f,
		0x57, 0x56, 0x37, 0x73, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x5a, 0x35, 0x33, 0x5a, 0x35, 0x32,
		0x5a, 0x36, 0x32, 0x5a, 0x37, 0x31, 0x5a, 0x39, 0x33, 0x49, 0x72, 0x69, 0x73, 0x20, 0x36, 0x36,
		0x49, 0x72, 0x69, 0x73, 0x20, 0x35, 0x32, 0x49, 0x72, 0x69, 0x73, 0x20, 0x35, 0x34, 0x49, 0x72,
		0x69, 0x73, 0x20, 0x35, 0x39, 0x49, 0x72, 0x69, 0x73, 0x20, 0x34, 0x36, 0x49, 0x72, 0x69, 0x73,
		0x20, 0x34, 0x35, 0x43, 0x49, 0x72, 0x69, 0x73, 0x20, 0x34, 0x35, 0x49, 0x72, 0x69, 0x73, 0x20,
		0x41, 0x74, 0x6f, 0x6d, 0x20, 0x32, 0x58, 0x49, 0x72, 0x69, 0x73, 0x20, 0x41, 0x6c, 0x66, 0x61,
		0x20, 0x4c, 0x5a, 0x34, 0x31, 0x56, 0x38, 0x56, 0x2b, 0x36, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x32,
		0x63, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x32, 0x43, 0x52, 0x31, 0x5f, 0x4c, 0x69, 0x74, 0x65,
		0x52, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x45, 0x39, 0x38, 0x32, 0x30, 0x52, 0x35, 0x4c,
		0x45, 0x39, 0x38, 0x31, 0x30, 0x52, 0x33, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x37, 0x70, 0x6c,
		0x75, 0x73, 0x4c, 0x5a, 0x58, 0x34, 0x31, 0x34, 0x59, 0x75, 0x76, 0x61, 0x20, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x4c, 0x5a, 0x58, 0x34, 0x30, 0x38, 0x59, 0x75, 0x76, 0x61, 0x20, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x4c, 0x49, 0x58, 0x34, 0x30, 0x32, 0x59, 0x75, 0x76, 0x61, 0x20, 0x50, 0x72, 0x6f,
		0x4c, 0x5a, 0x47, 0x34, 0x30, 0x39, 0x59, 0x75, 0x76, 0x61, 0x20, 0x53, 0x74, 0x61, 0x72, 0x4c,
		0x58, 0x58, 0x35, 0x30, 0x38, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x35, 0x47, 0x49, 0x72, 0x69,
		0x73, 0x20, 0x38, 0x38, 0x20, 0x47, 0x6f, 0x46, 0x75, 0x65, 0x6c, 0x20, 0x46, 0x31, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x49, 0x72, 0x69, 0x73, 0x20, 0x46, 0x75, 0x65, 0x6c, 0x20, 0x46, 0x31, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x31, 0x33, 0x36, 0x44,
		0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x31, 0x33, 0x36, 0x4b, 0x4b, 0x54, 0x20, 0x51,
		0x55, 0x41, 0x44, 0x52, 0x41, 0x4b, 0x4b, 0x54, 0x20, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x4b,
		0x4b, 0x54, 0x34, 0x30, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49,
		0x76, 0x6f, 0x72, 0x79, 0x20, 0x24, 0x31, 0x54, 0x38, 0x31, 0x4e, 0x20, 0x55, 0x70, 0x54, 0x38,
		0x31, 0x4e, 0x54, 0x37, 0x31, 0x49, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x49, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x50, 0x61, 0x6e, 0x54, 0x43,
		0x38, 0x30, 0x32, 0x41, 0x4c, 0x65, 0x20, 0x50, 0x61, 0x6e, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54,
		0x43, 0x39, 0x37, 0x30, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x50, 0x61, 0x6e, 0x20, 0x24, 0x31,
		0x4c, 0x65, 0x42, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x45, 0x63, 0x6f, 0x4c, 0x65, 0x20, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x61, 0x78, 0x20, 0x58, 0x39, 0x30, 0x30, 0x2b, 0x4c, 0x65, 0x20, 0x31,
		0x53, 0x4c, 0x65, 0x20, 0x33, 0x53, 0x20, 0x24, 0x31, 0x58, 0x39, 0x30, 0x30, 0x20, 0x42, 0x75,
		0x69, 0x6c, 0x64, 0x4c, 0x65, 0x20, 0x58, 0x39, 0x30, 0x30, 0x4c, 0x65, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x33, 0x4c, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x41, 0x49, 0x4c, 0x65, 0x20,
		0x32, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x32, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x5f,
		0x63, 0x31, 0x30, 0x36, 0x4c, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x58,
		0x24, 0x31, 0x4c, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x24, 0x31, 0x4c,
		0x65, 0x61, 0x64, 0x65, 0x72, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x2d, 0x34, 0x35, 0x20,
		0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x2d, 0x34, 0x35, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x56,
		0x79, 0x70, 0x65, 0x72, 0x20, 0x50, 0x52, 0x4f, 0x56, 0x79, 0x70, 0x65, 0x72, 0x20, 0x50, 0x72,
		0x6f, 0x4c, 0x50, 0x20, 0x44, 0x41, 0x49, 0x53, 0x59, 0x44, 0x61, 0x69, 0x73, 0x79, 0x4c, 0x50,
		0x5f, 0x56, 0x45, 0x59, 0x52, 0x4f, 0x4e, 0x56, 0x65, 0x79, 0x72, 0x6f, 0x6e, 0x4c, 0x50, 0x5f,
		0x50, 0x52, 0x41, 0x44, 0x4f, 0x50, 0x72, 0x61, 0x64, 0x6f, 0x4c, 0x50, 0x5f, 0x42, 0x2d, 0x35,
		0x30, 0x42, 0x35, 0x30, 0x4c, 0x50, 0x5f, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x5f,
		0x53, 0x32, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x20, 0x53, 0x32, 0x49, 0x4e, 0x46,
		0x49, 0x4e, 0x49, 0x54, 0x59, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
		0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x50, 0x5f, 0x49, 0x4e, 0x46, 0x49, 0x4e, 0x49, 0x54,
		0x59, 0x4c, 0x50, 0x5f, 0x45, 0x56, 0x4f, 0x52, 0x41, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x45,
		0x76, 0x6f, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x50, 0x20, 0x54, 0x37, 0x30,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x37, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x50, 0x5f,
		0x54, 0x37, 0x30, 0x54, 0x37, 0x30, 0x4c, 0x65, 0x61, 0x67, 0x6f, 0x6f, 0x4d, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x35, 0x20, 0x45, 0x44, 0x47, 0x45, 0x4d, 0x35, 0x20, 0x45, 0x64, 0x67,
		0x65, 0x4c, 0x65, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4b, 0x49, 0x49, 0x43, 0x41, 0x41, 0x20, 0x50,
		0x4f, 0x57, 0x45, 0x52, 0x4b, 0x49, 0x43, 0x43, 0x41, 0x41, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x4b, 0x49, 0x49, 0x43, 0x41, 0x41, 0x20, 0x4d, 0x49, 0x58, 0x4b, 0x49, 0x43, 0x43, 0x41, 0x41,
		0x20, 0x4d, 0x69, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x53, 0x68, 0x61, 0x72,
		0x6b, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x24, 0x31, 0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x20, 0x31,
		0x41, 0x6c, 0x66, 0x61, 0x20, 0x24, 0x31, 0x58, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x24, 0x31, 0x4c,
		0x65, 0x61, 0x70, 0x61, 0x64, 0x20, 0x37, 0x50, 0x72, 0x6f, 0x4c, 0x65, 0x61, 0x50, 0x61, 0x64,
		0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x45, 0x41, 0x47, 0x4f, 0x4f, 0x5f, 0x4c, 0x45, 0x41,
		0x50, 0x41, 0x44, 0x37, 0x5f, 0x38, 0x4c, 0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x37, 0x4c, 0x65,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x63, 0x74, 0x72, 0x75, 0x73, 0x4c, 0x45,
		0x43, 0x54, 0x2d, 0x54, 0x41, 0x42, 0x24, 0x31, 0x4c, 0x65, 0x64, 0x73, 0x74, 0x61, 0x72, 0x54,
		0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x35, 0x2e, 0x30, 0x4e, 0x6f, 0x76, 0x75, 0x73, 0x20, 0x50,
		0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x4c, 0x65, 0x65, 0x6c, 0x62,
		0x6f, 0x78, 0x4c, 0x65, 0x66, 0x66, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x4c, 0x65, 0x6b, 0x65,
		0x50, 0x61, 0x64, 0x2d, 0x24, 0x31, 0x4c, 0x65, 0x6d, 0x63, 0x6f, 0x4c, 0x65, 0x6d, 0x68, 0x6f,
		0x6f, 0x76, 0x4c, 0x65, 0x6e, 0x63, 0x6f, 0x4c, 0x45, 0x4e, 0x43, 0x4f, 0x20, 0x44, 0x69, 0x76,
		0x65, 0x72, 0x73, 0x6f, 0x2d, 0x37, 0x30, 0x30, 0x44, 0x69, 0x76, 0x65, 0x72, 0x73, 0x6f, 0x20,
		0x37, 0x30, 0x30, 0x54, 0x44, 0x56, 0x39, 0x30, 0x30, 0x4c, 0x65, 0x6e, 0x6f, 0x76, 0x6f, 0x47,
		0x37, 0x38, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x2d, 0x34, 0x30,
		0x54, 0x61, 0x62, 0x20, 0x41, 0x31, 0x30, 0x32, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x31, 0x30, 0x32, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37,
		0x2d, 0x35, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30,
		0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x31, 0x30, 0x2d, 0x37, 0x30, 0x41, 0x32,
		0x31, 0x30, 0x37, 0x41, 0x2d, 0x48, 0x41, 0x32, 0x31, 0x30, 0x37, 0x41, 0x32, 0x31, 0x30, 0x39,
		0x41, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x32, 0x31, 0x30, 0x39, 0x41, 0x54,
		0x61, 0x62, 0x20, 0x32, 0x20, 0x41, 0x31, 0x30, 0x2d, 0x33, 0x30, 0x54, 0x61, 0x62, 0x20, 0x4b,
		0x31, 0x30, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x59, 0x6f, 0x67, 0x61,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x31, 0x59, 0x54, 0x2d, 0x4b, 0x36, 0x30, 0x36, 0x46, 0x59,
		0x6f, 0x67, 0x61, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x42, 0x33, 0x2d, 0x37,
		0x33, 0x30, 0x58, 0x54, 0x41, 0x42, 0x33, 0x20, 0x37, 0x54, 0x41, 0x42, 0x33, 0x20, 0x37, 0x20,
		0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x42, 0x2d, 0x37, 0x37, 0x30, 0x33,
		0x58, 0x54, 0x41, 0x42, 0x33, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x42, 0x33, 0x2d,
		0x58, 0x37, 0x30, 0x4c, 0x54, 0x41, 0x42, 0x33, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x54, 0x42, 0x33, 0x2d, 0x58, 0x37, 0x30, 0x46, 0x54, 0x41, 0x42, 0x33, 0x20, 0x31, 0x30, 0x20,
		0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x41, 0x42, 0x33, 0x20, 0x38, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x54, 0x42, 0x2d, 0x38, 0x58, 0x30, 0x34, 0x46, 0x54, 0x41, 0x42, 0x34, 0x20,
		0x38, 0x20, 0x52, 0x45, 0x4c, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30,
		0x4c, 0x43, 0x54, 0x41, 0x42, 0x32, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30, 0x4c, 0x43, 0x54, 0x41,
		0x42, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x31, 0x30,
		0x54, 0x41, 0x42, 0x33, 0x20, 0x38, 0x54, 0x41, 0x42, 0x33, 0x20, 0x38, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x54, 0x41, 0x42, 0x34, 0x20, 0x31, 0x30, 0x54, 0x41, 0x42, 0x34, 0x20, 0x38, 0x54, 0x42,
		0x2d, 0x38, 0x37, 0x30, 0x34, 0x58, 0x54, 0x41, 0x42, 0x34, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x54, 0x41, 0x42, 0x34, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x41, 0x42,
		0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x41, 0x42, 0x31, 0x30, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31,
		0x30, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x31, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x39, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x31, 0x30, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x31, 0x54, 0x61, 0x62, 0x20,
		0x50, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x42, 0x33, 0x37, 0x30, 0x46, 0x55, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x31, 0x32, 0x54, 0x61, 0x62, 0x20, 0x4b, 0x31, 0x31, 0x54, 0x61, 0x62, 0x20,
		0x51, 0x54, 0x20, 0x4b, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54,
		0x61, 0x62, 0x20, 0x51, 0x54, 0x20, 0x4b, 0x31, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x31, 0x20,
		0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4b, 0x31, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x54, 0x61, 0x62, 0x20, 0x45, 0x37, 0x54, 0x61, 0x62, 0x20, 0x45,
		0x38, 0x54, 0x42, 0x2d, 0x37, 0x33, 0x30, 0x34, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x45, 0x73,
		0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x61, 0x62, 0x20, 0x37, 0x50, 0x42, 0x2d, 0x36,
		0x35, 0x30, 0x35, 0x54, 0x61, 0x62, 0x20, 0x56, 0x37, 0x41, 0x31, 0x30, 0x31, 0x4c, 0x56, 0x54,
		0x61, 0x62, 0x20, 0x36, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x20,
		0x52, 0x65, 0x6c, 0x54, 0x42, 0x2d, 0x58, 0x36, 0x30, 0x35, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31,
		0x30, 0x20, 0x46, 0x48, 0x44, 0x4c, 0x65, 0x6e, 0x6f, 0x76, 0x6f, 0x20, 0x54, 0x42, 0x2d, 0x58,
		0x33, 0x30, 0x36, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x48, 0x44, 0x54, 0x61, 0x62,
		0x20, 0x4d, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33,
		0x29, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29,
		0x54, 0x61, 0x62, 0x20, 0x4d, 0x37, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x37, 0x20, 0x28, 0x47, 0x65,
		0x6e, 0x20, 0x33, 0x29, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x31, 0x30, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x31, 0x30,
		0x20, 0x48, 0x44, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x2e, 0x33, 0x22, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x59, 0x6f, 0x67,
		0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x59,
		0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x38, 0x59, 0x6f, 0x67, 0x61,
		0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33,
		0x20, 0x38, 0x59, 0x54, 0x33, 0x2d, 0x38, 0x35, 0x30, 0x4d, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x33, 0x20, 0x31, 0x30, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x54, 0x61, 0x62, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x42, 0x2d,
		0x4a, 0x37, 0x31, 0x36, 0x46, 0x58, 0x69, 0x61, 0x6f, 0x58, 0x69, 0x6e, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x54, 0x42, 0x31, 0x33, 0x38, 0x46, 0x43, 0x58, 0x69, 0x61, 0x6f, 0x78, 0x69, 0x6e, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x32, 0x29, 0x54, 0x42, 0x33, 0x33, 0x31, 0x46, 0x43, 0x58, 0x69, 0x61, 0x6f, 0x78, 0x69, 0x6e,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x34, 0x29, 0x45,
		0x76, 0x65, 0x72, 0x79, 0x50, 0x61, 0x64, 0x32, 0x59, 0x61, 0x6d, 0x61, 0x64, 0x61, 0x20, 0x45,
		0x76, 0x65, 0x72, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x32, 0x54, 0x42, 0x33, 0x37, 0x31, 0x46,
		0x43, 0x58, 0x69, 0x61, 0x6f, 0x78, 0x69, 0x6e, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x32, 0x2e, 0x37, 0x22, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36,
		0x30, 0x30, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x68, 0x69,
		0x6e, 0x6b, 0x50, 0x61, 0x64, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x54,
		0x68, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x64, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x24, 0x31,
		0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x37, 0x2d, 0x33, 0x30, 0x54, 0x41, 0x42, 0x20, 0x32,
		0x20, 0x41, 0x37, 0x54, 0x42, 0x2d, 0x38, 0x35, 0x30, 0x34, 0x46, 0x54, 0x41, 0x42, 0x20, 0x34,
		0x20, 0x38, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x38, 0x22, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54,
		0x42, 0x2d, 0x58, 0x33, 0x30, 0x34, 0x58, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x54, 0x42, 0x2d, 0x58, 0x33, 0x30, 0x34, 0x46, 0x45, 0x31, 0x30, 0x54, 0x41, 0x42,
		0x20, 0x32, 0x20, 0x41, 0x24, 0x31, 0x59, 0x42, 0x2d, 0x51, 0x35, 0x30, 0x31, 0x46, 0x59, 0x6f,
		0x67, 0x61, 0x20, 0x41, 0x31, 0x32, 0x59, 0x54, 0x2d, 0x58, 0x37, 0x30, 0x35, 0x58, 0x59, 0x6f,
		0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x54, 0x61, 0x62,
		0x20, 0x4d, 0x38, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4d,
		0x38, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x34, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x20,
		0x28, 0x47, 0x65, 0x6e, 0x20, 0x34, 0x29, 0x20, 0x28, 0x32, 0x30, 0x32, 0x34, 0x29, 0x54, 0x61,
		0x62, 0x20, 0x4d, 0x38, 0x20, 0x46, 0x48, 0x44, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x59,
		0x37, 0x30, 0x30, 0x4c, 0x37, 0x31, 0x30, 0x36, 0x31, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20,
		0x59, 0x39, 0x30, 0x4c, 0x37, 0x31, 0x30, 0x39, 0x31, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20,
		0x59, 0x37, 0x30, 0x41, 0x35, 0x73, 0x41, 0x38, 0x5a, 0x32, 0x31, 0x35, 0x31, 0x5a, 0x55, 0x4b,
		0x20, 0x45, 0x64, 0x67, 0x65, 0x5a, 0x55, 0x4b, 0x20, 0x5a, 0x32, 0x5a, 0x32, 0x31, 0x32, 0x31,
		0x5a, 0x55, 0x4b, 0x20, 0x5a, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x55, 0x4b, 0x20, 0x24, 0x31,
		0x4b, 0x33, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x24, 0x31, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b,
		0x34, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x35, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4b, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x4b, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x35, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x41, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x36, 0x30, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x56, 0x69, 0x62, 0x65, 0x20, 0x4b, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69,
		0x62, 0x65, 0x20, 0x4b, 0x35, 0x56, 0x69, 0x62, 0x65, 0x20, 0x5a, 0x32, 0x56, 0x69, 0x62, 0x65,
		0x20, 0x43, 0x56, 0x69, 0x62, 0x65, 0x20, 0x58, 0x32, 0x56, 0x69, 0x62, 0x65, 0x20, 0x58, 0x33,
		0x56, 0x69, 0x62, 0x65, 0x20, 0x58, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x62, 0x65,
		0x20, 0x56, 0x37, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x36, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x24, 0x31, 0x69, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20,
		0x50, 0x72, 0x6f, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b,
		0x39, 0x4b, 0x35, 0x53, 0x4b, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x36, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x56, 0x69, 0x62, 0x65, 0x20, 0x50, 0x31, 0x6d, 0x56, 0x69, 0x62, 0x65, 0x20,
		0x50, 0x31, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x56, 0x69, 0x62, 0x65, 0x20, 0x50, 0x31, 0x56,
		0x69, 0x62, 0x65, 0x20, 0x42, 0x41, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x62, 0x65, 0x20,
		0x53, 0x68, 0x6f, 0x74, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x31, 0x56, 0x69, 0x62, 0x65, 0x20,
		0x53, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x5a, 0x35, 0x73, 0x5a, 0x35, 0x5a, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x5a, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x5a, 0x36, 0x20, 0x50, 0x72,
		0x6f, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x47, 0x54, 0x5a, 0x36, 0x20, 0x59, 0x6f, 0x75,
		0x74, 0x68, 0x53, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x47, 0x54, 0x50, 0x68, 0x61, 0x62, 0x20,
		0x32, 0x50, 0x68, 0x61, 0x62, 0x50, 0x68, 0x61, 0x62, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x64,
		0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x64, 0x74, 0x61, 0x62, 0x20, 0x43, 0x6f, 0x6d,
		0x70, 0x61, 0x63, 0x74, 0x20, 0x34, 0x32, 0x41, 0x58, 0x54, 0x32, 0x30, 0x38, 0x31, 0x2d, 0x34,
		0x4b, 0x31, 0x32, 0x41, 0x32, 0x30, 0x31, 0x30, 0x6c, 0x33, 0x36, 0x41, 0x32, 0x30, 0x31, 0x30,
		0x4b, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x52, 0x2d, 0x31, 0x35, 0x34, 0x31, 0x46, 0x4d,
		0x69, 0x72, 0x61, 0x67, 0x65, 0x20, 0x53, 0x6f, 0x6c, 0x6f, 0x4e, 0x4c, 0x35, 0x48, 0x30, 0x30,
		0x58, 0x58, 0x69, 0x61, 0x6f, 0x78, 0x69, 0x6e, 0x20, 0x31, 0x30, 0x30, 0x50, 0x72, 0x6f, 0x6a,
		0x65, 0x63, 0x74, 0x6f, 0x72, 0x37, 0x30, 0x31, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f,
		0x72, 0x20, 0x37, 0x30, 0x31, 0x49, 0x64, 0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x53, 0x31, 0x34,
		0x35, 0x2d, 0x31, 0x35, 0x49, 0x49, 0x4c, 0x49, 0x64, 0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x53,
		0x31, 0x34, 0x35, 0x2d, 0x31, 0x35, 0x49, 0x57, 0x4c, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x31, 0x34,
		0x41, 0x50, 0x49, 0x20, 0x38, 0x31, 0x53, 0x53, 0x49, 0x64, 0x65, 0x61, 0x43, 0x65, 0x6e, 0x74,
		0x72, 0x65, 0x20, 0x35, 0x32, 0x30, 0x53, 0x2d, 0x32, 0x33, 0x49, 0x4b, 0x55, 0x54, 0x68, 0x69,
		0x6e, 0x6b, 0x50, 0x61, 0x64, 0x20, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x33, 0x37, 0x30, 0x4c, 0x65,
		0x6f, 0x74, 0x65, 0x63, 0x4c, 0x45, 0x53, 0x50, 0x48, 0x35, 0x30, 0x31, 0x31, 0x41, 0x72, 0x67,
		0x6f, 0x6e, 0x20, 0x65, 0x32, 0x35, 0x30, 0x4c, 0x45, 0x53, 0x50, 0x48, 0x35, 0x30, 0x30, 0x33,
		0x42, 0x41, 0x72, 0x67, 0x6f, 0x6e, 0x20, 0x41, 0x32, 0x35, 0x30, 0x42, 0x4c, 0x45, 0x53, 0x50,
		0x48, 0x35, 0x30, 0x31, 0x34, 0x4b, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6e, 0x20, 0x4b, 0x31, 0x35,
		0x30, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x54, 0x33, 0x35, 0x35, 0x53, 0x75,
		0x70, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x61, 0x20, 0x24, 0x31, 0x50, 0x75, 0x6c, 0x73, 0x61, 0x72,
		0x20, 0x24, 0x31, 0x4c, 0x45, 0x54, 0x41, 0x42, 0x39, 0x31, 0x36, 0x4c, 0x2d, 0x50, 0x61, 0x64,
		0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x53, 0x4c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x31,
		0x30, 0x34, 0x47, 0x57, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x65, 0x73, 0x69, 0x61, 0x41,
		0x6e, 0x6f, 0x76, 0x61, 0x20, 0x41, 0x35, 0x4c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x53, 0x34, 0x41,
		0x31, 0x56, 0x65, 0x67, 0x61, 0x53, 0x34, 0x41, 0x32, 0x49, 0x72, 0x69, 0x64, 0x61, 0x53, 0x34,
		0x41, 0x33, 0x50, 0x61, 0x6c, 0x6c, 0x61, 0x64, 0x61, 0x53, 0x34, 0x41, 0x35, 0x4f, 0x78, 0x79,
		0x67, 0x65, 0x6e, 0x53, 0x34, 0x41, 0x34, 0x20, 0x4e, 0x45, 0x4f, 0x4e, 0x53, 0x34, 0x41, 0x34,
		0x20, 0x4e, 0x65, 0x6f, 0x6e, 0x53, 0x35, 0x41, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x73, 0x74,
		0x6f, 0x53, 0x35, 0x41, 0x32, 0x4f, 0x76, 0x65, 0x72, 0x6f, 0x6e, 0x53, 0x35, 0x41, 0x33, 0x43,
		0x61, 0x70, 0x65, 0x6c, 0x6c, 0x61, 0x53, 0x35, 0x41, 0x34, 0x41, 0x72, 0x67, 0x6f, 0x6e, 0x53,
		0x36, 0x41, 0x31, 0x41, 0x6e, 0x74, 0x61, 0x72, 0x65, 0x73, 0x24, 0x31, 0x20, 0x50, 0x52, 0x4f,
		0x20, 0x48, 0x44, 0x24, 0x31, 0x20, 0x48, 0x44, 0x4c, 0x50, 0x48, 0x37, 0x5f, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x79, 0x4c, 0x50, 0x48, 0x37, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65,
		0x78, 0x69, 0x62, 0x6f, 0x6f, 0x6b, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x31, 0x46, 0x52, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x58, 0x4c, 0x4d,
		0x46, 0x43, 0x30, 0x34, 0x35, 0x46, 0x52, 0x54, 0x61, 0x62, 0x54, 0x61, 0x62, 0x4d, 0x46, 0x43,
		0x31, 0x36, 0x33, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x73, 0x74,
		0x65, 0x72, 0x20, 0x33, 0x4d, 0x46, 0x43, 0x31, 0x34, 0x32, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x4d, 0x46, 0x43, 0x32, 0x35, 0x30, 0x46, 0x52, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x4d, 0x46, 0x43, 0x32,
		0x37, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69, 0x6f,
		0x72, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4d, 0x46, 0x43,
		0x32, 0x38, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69,
		0x6f, 0x72, 0x20, 0x32, 0x4d, 0x46, 0x43, 0x31, 0x35, 0x36, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x4f, 0x6e, 0x65, 0x4d, 0x46, 0x43, 0x31, 0x35, 0x35, 0x46, 0x52, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x46, 0x43, 0x31, 0x35,
		0x37, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
		0x20, 0x32, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x46,
		0x43, 0x33, 0x37, 0x35, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x20, 0x32, 0x4d, 0x46, 0x43, 0x31, 0x36, 0x32, 0x46, 0x52, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x46, 0x43, 0x31, 0x38, 0x30, 0x46, 0x52,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x4d,
		0x46, 0x43, 0x31, 0x38, 0x31, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x41, 0x64,
		0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x20, 0x32, 0x4d, 0x46, 0x43, 0x35, 0x30, 0x30, 0x46, 0x52,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x58, 0x4c, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x30, 0x42,
		0x42, 0x46, 0x52, 0x42, 0x61, 0x72, 0x62, 0x69, 0x65, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x4d, 0x46, 0x43, 0x31, 0x39, 0x35, 0x44, 0x43, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x43, 0x61, 0x72, 0x73, 0x20, 0x48, 0x44, 0x4d,
		0x46, 0x43, 0x31, 0x39, 0x35, 0x46, 0x55, 0x46, 0x52, 0x46, 0x75, 0x72, 0x62, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x35, 0x44, 0x50, 0x46, 0x52, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x50, 0x72, 0x69,
		0x6e, 0x63, 0x65, 0x73, 0x73, 0x65, 0x20, 0x48, 0x44, 0x4d, 0x46, 0x43, 0x31, 0x34, 0x30, 0x46,
		0x52, 0x4c, 0x61, 0x70, 0x54, 0x61, 0x62, 0x4d, 0x46, 0x43, 0x31, 0x34, 0x31, 0x46, 0x52, 0x4c,
		0x61, 0x70, 0x54, 0x61, 0x62, 0x20, 0x32, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x74, 0x6f, 0x6e, 0x4c,
		0x69, 0x66, 0x65, 0x6d, 0x61, 0x78, 0x78, 0x4c, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x65, 0x5a,
		0x32, 0x50, 0x4c, 0x55, 0x53, 0x4c, 0x69, 0x6e, 0x67, 0x62, 0x6f, 0x56, 0x65, 0x6e, 0x75, 0x73,
		0x20, 0x50, 0x61, 0x64, 0x31, 0x34, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x31, 0x34, 0x4c, 0x69, 0x6e, 0x67, 0x77, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6e, 0x65, 0x78, 0x4c,
		0x69, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x6e, 0x73, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x6f, 0x57,
		0x65, 0x62, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4c, 0x6f, 0x65, 0x77, 0x65, 0x34, 0x38, 0x41,
		0x38, 0x31, 0x46, 0x45, 0x56, 0x53, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x58, 0x36, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x4c, 0x6f, 0x67, 0x69,
		0x63, 0x20, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c,
		0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x31, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x62, 0x6f, 0x6f,
		0x6b, 0x20, 0x46, 0x31, 0x42, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x4b,
		0x31, 0x30, 0x31, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x4b, 0x53, 0x38,
		0x30, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x6f, 0x6d, 0x54, 0x61, 0x62, 0x5f, 0x53, 0x74, 0x61, 0x6e,
		0x64, 0x5f, 0x50, 0x72, 0x6f, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x74, 0x61, 0x6e,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x61,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x37, 0x39, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x32, 0x34, 0x20, 0x48, 0x44,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x4f, 0x4d, 0x5f, 0x4c, 0x41, 0x5f,
		0x54, 0x41, 0x42, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x37, 0x31, 0x4c, 0x61, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x4c, 0x69, 0x6e, 0x6b, 0x20, 0x37, 0x31, 0x6c, 0x6f, 0x67, 0x69, 0x6b, 0x69, 0x64,
		0x73, 0x34, 0x4c, 0x6f, 0x67, 0x69, 0x6b, 0x69, 0x64, 0x73, 0x20, 0x34, 0x4c, 0x2d, 0x69, 0x78,
		0x69, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x30, 0x31, 0x20, 0x33, 0x47, 0x4c, 0x5f, 0x49,
		0x58, 0x49, 0x52, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x31, 0x30, 0x34, 0x37, 0x48, 0x44, 0x4c, 0x2d,
		0x69, 0x78, 0x69, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x34, 0x37, 0x20, 0x48, 0x44,
		0x4c, 0x49, 0x58, 0x49, 0x52, 0x31, 0x30, 0x34, 0x31, 0x4c, 0x2d, 0x69, 0x78, 0x69, 0x72, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x34, 0x31, 0x4c, 0x2d, 0x69, 0x78, 0x69, 0x72, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x2d, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x2d, 0x69,
		0x74, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x2d, 0x65, 0x6d, 0x65, 0x6e, 0x74,
		0x20, 0x24, 0x31, 0x4c, 0x2d, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x20, 0x42, 0x4f, 0x54, 0x4d, 0x20, 0x42, 0x4f, 0x54, 0x20,
		0x24, 0x31, 0x56, 0x52, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x56, 0x52, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x24, 0x31, 0x24, 0x31, 0x20, 0x42, 0x4f, 0x54, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x24, 0x32, 0x24, 0x31, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x24, 0x32, 0x46,
		0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6f, 0x6c, 0x61, 0x72, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x4f, 0x4c, 0x41, 0x52, 0x53, 0x6f, 0x6c, 0x61, 0x72, 0x4c, 0x75, 0x6e, 0x61, 0x72, 0x20,
		0x50, 0x72, 0x6f, 0x4c, 0x65, 0x20, 0x4c, 0x69, 0x66, 0x74, 0x4c, 0x65, 0x20, 0x4c, 0x69, 0x6e,
		0x6b, 0x4c, 0x65, 0x20, 0x57, 0x61, 0x76, 0x65, 0x4c, 0x65, 0x20, 0x53, 0x77, 0x69, 0x70, 0x65,
		0x4c, 0x65, 0x20, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x4c, 0x65, 0x20, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
		0x63, 0x74, 0x4c, 0x65, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x4c, 0x65, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x4c, 0x65, 0x20, 0x48, 0x6f, 0x6c, 0x61, 0x20, 0x46, 0x52, 0x4c, 0x65, 0x20, 0x48,
		0x6f, 0x6c, 0x61, 0x4c, 0x65, 0x20, 0x4d, 0x6f, 0x6f, 0x76, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x4d,
		0x6f, 0x6f, 0x76, 0x4c, 0x65, 0x20, 0x46, 0x69, 0x74, 0x20, 0x46, 0x52, 0x4c, 0x65, 0x20, 0x46,
		0x69, 0x74, 0x4c, 0x65, 0x20, 0x46, 0x69, 0x7a, 0x7a, 0x4c, 0x65, 0x20, 0x48, 0x6f, 0x70, 0x4c,
		0x65, 0x20, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x4c, 0x65, 0x20, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68,
		0x20, 0x46, 0x52, 0x4c, 0x65, 0x20, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x4c, 0x65, 0x20, 0x4d,
		0x75, 0x73, 0x74, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x4d, 0x75, 0x73, 0x74, 0x4c, 0x65, 0x20, 0x53,
		0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x20, 0x4c, 0x4c, 0x65, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x4c, 0x2d, 0x45, 0x47, 0x41, 0x4e, 0x54, 0x4f, 0x4e, 0x45, 0x2d, 0x52, 0x4c, 0x2d, 0x45, 0x67,
		0x61, 0x6e, 0x74, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x4c, 0x2d, 0x45, 0x47, 0x41, 0x4e, 0x54,
		0x4f, 0x4e, 0x45, 0x4c, 0x2d, 0x45, 0x67, 0x61, 0x6e, 0x74, 0x20, 0x4f, 0x6e, 0x65, 0x4c, 0x65,
		0x20, 0x55, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6b, 0x4c, 0x6f, 0x76, 0x6d, 0x65, 0x4c, 0x75, 0x6d,
		0x69, 0x67, 0x6f, 0x6e, 0x4c, 0x75, 0x6d, 0x69, 0x74, 0x65, 0x6c, 0x4c, 0x75, 0x6d, 0x75, 0x73,
		0x49, 0x4e, 0x4e, 0x4f, 0x20, 0x24, 0x31, 0x49, 0x6f, 0x6e, 0x41, 0x45, 0x4f, 0x4e, 0x20, 0x24,
		0x31, 0x4c, 0x75, 0x6e, 0x61, 0x4c, 0x75, 0x78, 0x6f, 0x72, 0x4c, 0x76, 0x69, 0x6c, 0x6c, 0x65,
		0x4d, 0x2d, 0x48, 0x6f, 0x72, 0x73, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x31, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x20, 0x31, 0x54, 0x6f, 0x70, 0x20, 0x24, 0x31, 0x54, 0x4f, 0x50, 0x5f, 0x4e, 0x6f,
		0x74, 0x65, 0x38, 0x54, 0x6f, 0x70, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x4d, 0x2d, 0x54,
		0x65, 0x63, 0x68, 0x45, 0x52, 0x4f, 0x53, 0x20, 0x34, 0x47, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x34,
		0x47, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x53, 0x74, 0x61, 0x72, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x72, 0x6f,
		0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x43, 0x45, 0x39, 0x41, 0x63, 0x65, 0x20, 0x39,
		0x4a, 0x41, 0x5a, 0x42, 0x41, 0x41, 0x54, 0x45, 0x5a, 0x20, 0x34, 0x47, 0x46, 0x6f, 0x74, 0x6f,
		0x33, 0x46, 0x6f, 0x74, 0x6f, 0x20, 0x33, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x4c, 0x24, 0x31,
		0x4d, 0x2e, 0x54, 0x2e, 0x54, 0x2e, 0x4d, 0x54, 0x54, 0x20, 0x49, 0x44, 0x45, 0x41, 0x4c, 0x49,
		0x64, 0x65, 0x61, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x24, 0x31, 0x4d, 0x33, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x33, 0x55, 0x53, 0x32, 0x30, 0x57, 0x55, 0x53, 0x32, 0x30,
		0x20, 0x57, 0x4d, 0x33, 0x53, 0x4c, 0x32, 0x30, 0x4d, 0x33, 0x20, 0x53, 0x4c, 0x32, 0x30, 0x4d,
		0x34, 0x74, 0x65, 0x6c, 0x53, 0x53, 0x31, 0x30, 0x35, 0x30, 0x53, 0x53, 0x31, 0x30, 0x36, 0x30,
		0x4c, 0x69, 0x76, 0x65, 0x53, 0x53, 0x31, 0x30, 0x37, 0x30, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x53,
		0x53, 0x31, 0x30, 0x38, 0x30, 0x4d, 0x61, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x53, 0x53, 0x31, 0x30,
		0x39, 0x30, 0x4d, 0x61, 0x78, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x53, 0x34, 0x30, 0x32,
		0x30, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x53, 0x34, 0x30, 0x34, 0x30, 0x49, 0x6e, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x53, 0x53, 0x34, 0x30, 0x34, 0x35, 0x53, 0x53, 0x34, 0x33, 0x34, 0x35, 0x53,
		0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x53, 0x34, 0x33, 0x35, 0x30, 0x53, 0x6f,
		0x75, 0x6c, 0x53, 0x53, 0x34, 0x34, 0x34, 0x35, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x41, 0x63,
		0x63, 0x65, 0x73, 0x73, 0x53, 0x53, 0x34, 0x34, 0x35, 0x30, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53,
		0x53, 0x34, 0x34, 0x35, 0x31, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x76, 0x65, 0x53, 0x53, 0x34, 0x34,
		0x35, 0x32, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x53, 0x34, 0x34, 0x35, 0x33, 0x2d, 0x52, 0x52,
		0x31, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x52, 0x32, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x53, 0x34, 0x34, 0x35, 0x33, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72,
		0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x53, 0x34, 0x34, 0x35, 0x35, 0x53, 0x53, 0x34, 0x34, 0x35,
		0x36, 0x45, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x53, 0x34, 0x34, 0x35, 0x37,
		0x2d, 0x52, 0x45, 0x76, 0x65, 0x72, 0x53, 0x53, 0x34, 0x34, 0x35, 0x37, 0x45, 0x6c, 0x65, 0x67,
		0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x53, 0x34,
		0x34, 0x35, 0x38, 0x41, 0x74, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x24, 0x31, 0x4d, 0x41,
		0x47, 0x4d, 0x41, 0x47, 0x43, 0x48, 0x4d, 0x41, 0x58, 0x56, 0x49, 0x4d, 0x53, 0x35, 0x33, 0x31,
		0x4d, 0x53, 0x35, 0x33, 0x31, 0x20, 0x56, 0x65, 0x67, 0x61, 0x4d, 0x53, 0x35, 0x30, 0x32, 0x20,
		0x4f, 0x72, 0x69, 0x6f, 0x6e, 0x4d, 0x41, 0x58, 0x58, 0x4d, 0x42, 0x49, 0x4d, 0x42, 0x4b, 0x4d,
		0x42, 0x4f, 0x58, 0x4d, 0x44, 0x43, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x53, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x72, 0x61, 0x6e, 0x64,
		0x20, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x20, 0x34, 0x47, 0x4d, 0x44, 0x54, 0x56, 0x4d, 0x45, 0x45,
		0x47, 0x4d, 0x45, 0x4f, 0x4d, 0x45, 0x55, 0x4d, 0x49, 0x56, 0x4f, 0x4a, 0x61, 0x7a, 0x7a, 0x20,
		0x24, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x49, 0x57, 0x41, 0x4e, 0x47, 0x4d,
		0x49, 0x58, 0x43, 0x4d, 0x4c, 0x41, 0x42, 0x47, 0x6c, 0x6f, 0x77, 0x79, 0x20, 0x24, 0x31, 0x4d,
		0x4c, 0x4c, 0x45, 0x44, 0x4d, 0x4c, 0x53, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x54, 0x77,
		0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x63, 0x68, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x74,
		0x63, 0x68, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30,
		0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x42, 0x72, 0x61, 0x76, 0x65, 0x20, 0x33, 0x47, 0x69, 0x51,
		0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x66,
		0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x41, 0x6c, 0x75, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x49, 0x64,
		0x65, 0x61, 0x6c, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x43, 0x61,
		0x72, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x42, 0x72, 0x61, 0x69, 0x6e, 0x20, 0x33, 0x47, 0x69,
		0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x56, 0x65, 0x72, 0x73, 0x65, 0x20, 0x34, 0x47, 0x43, 0x6f,
		0x6c, 0x6f, 0x72, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x47, 0x54, 0x4f, 0x50, 0x2d, 0x53,
		0x20, 0x34, 0x47, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61, 0x6c,
		0x6b, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x46, 0x6c, 0x61,
		0x6d, 0x65, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x53, 0x70, 0x69, 0x63, 0x79, 0x69, 0x51,
		0x54, 0x61, 0x6c, 0x6b, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x34, 0x47, 0x43, 0x6f, 0x6c,
		0x6f, 0x72, 0x20, 0x33, 0x20, 0x34, 0x47, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x34, 0x47, 0x69,
		0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x35, 0x2e, 0x35, 0x20,
		0x34, 0x47, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x52, 0x6f, 0x73, 0x65, 0x69, 0x51, 0x54, 0x61,
		0x62, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x4e, 0x6f,
		0x76, 0x65, 0x6c, 0x20, 0x33, 0x47, 0x4a, 0x65, 0x74, 0x20, 0x33, 0x47, 0x54, 0x72, 0x6f, 0x70,
		0x68, 0x79, 0x20, 0x34, 0x47, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x35, 0x2e, 0x32,
		0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x41, 0x75, 0x72, 0x61, 0x53, 0x6c,
		0x69, 0x63, 0x65, 0x20, 0x34, 0x47, 0x41, 0x6e, 0x67, 0x65, 0x6c, 0x20, 0x33, 0x47, 0x41, 0x6e,
		0x67, 0x65, 0x6c, 0x20, 0x33, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x56, 0x69, 0x74,
		0x61, 0x6c, 0x20, 0x34, 0x47, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x34, 0x47, 0x46, 0x35, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x34, 0x47, 0x4d, 0x58, 0x20, 0x34, 0x47, 0x4d, 0x58, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x46, 0x61, 0x62, 0x20, 0x34, 0x47, 0x53, 0x74, 0x61, 0x74,
		0x75, 0x73, 0x20, 0x34, 0x47, 0x4d, 0x6f, 0x72, 0x65, 0x20, 0x34, 0x47, 0x57, 0x61, 0x76, 0x65,
		0x20, 0x34, 0x47, 0x42, 0x72, 0x61, 0x63, 0x65, 0x20, 0x32, 0x30, 0x31, 0x38, 0x20, 0x34, 0x47,
		0x4c, 0x65, 0x76, 0x65, 0x6c, 0x20, 0x34, 0x47, 0x52, 0x75, 0x62, 0x79, 0x20, 0x34, 0x47, 0x44,
		0x58, 0x20, 0x34, 0x47, 0x56, 0x69, 0x73, 0x74, 0x61, 0x20, 0x34, 0x47, 0x53, 0x70, 0x61, 0x63,
		0x65, 0x20, 0x53, 0x20, 0x34, 0x47, 0x52, 0x33, 0x20, 0x34, 0x47, 0x50, 0x68, 0x61, 0x62, 0x20,
		0x36, 0x2e, 0x30, 0x22, 0x44, 0x36, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x61, 0x6c,
		0x41, 0x6c, 0x75, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x47, 0x46, 0x6c,
		0x61, 0x6d, 0x65, 0x20, 0x34, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x43, 0x6f, 0x6c,
		0x6f, 0x72, 0x20, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34,
		0x47, 0x54, 0x38, 0x20, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20,
		0x34, 0x47, 0x69, 0x51, 0x46, 0x32, 0x30, 0x30, 0x4d, 0x4d, 0x49, 0x4d, 0x4f, 0x56, 0x49, 0x53,
		0x55, 0x4e, 0x4d, 0x53, 0x49, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x53, 0x74,
		0x61, 0x72, 0x4d, 0x54, 0x43, 0x4f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x61,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x61, 0x63, 0x65, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x52, 0x61, 0x63, 0x65, 0x20, 0x32, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x4c,
		0x49, 0x4e, 0x45, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x69,
		0x67, 0x68, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x42, 0x69, 0x74, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x52, 0x75, 0x6e, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x75,
		0x72, 0x66, 0x20, 0x32, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x75, 0x72,
		0x66, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20,
		0x34, 0x47, 0x52, 0x65, 0x64, 0x62, 0x6f, 0x78, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x35, 0x53,
		0x42, 0x2d, 0x24, 0x31, 0x44, 0x56, 0x38, 0x33, 0x30, 0x34, 0x2d, 0x43, 0x53, 0x75, 0x70, 0x65,
		0x72, 0x57, 0x61, 0x76, 0x65, 0x20, 0x44, 0x56, 0x38, 0x33, 0x30, 0x34, 0x2d, 0x43, 0x4d, 0x54,
		0x4e, 0x46, 0x61, 0x69, 0x74, 0x68, 0x20, 0x32, 0x39, 0x4b, 0x61, 0x20, 0x43, 0x68, 0x6f, 0x63,
		0x6f, 0x6c, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x66, 0x69, 0x74, 0x20, 0x56, 0x39, 0x30, 0x30, 0x4b,
		0x61, 0x46, 0x69, 0x74, 0x20, 0x56, 0x39, 0x30, 0x30, 0x53, 0x6d, 0x40, 0x72, 0x74, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x24, 0x31, 0x4d, 0x54, 0x4e, 0x2d, 0x38, 0x39, 0x37, 0x38, 0x50, 0x53,
		0x74, 0x65, 0x70, 0x70, 0x61, 0x4d, 0x54, 0x4e, 0x2d, 0x24, 0x31, 0x4d, 0x59, 0x46, 0x4f, 0x4e,
		0x4d, 0x59, 0x50, 0x41, 0x44, 0x37, 0x73, 0x4d, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x73,
		0x4d, 0x61, 0x63, 0x6f, 0x6f, 0x78, 0x4d, 0x43, 0x2d, 0x58, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x4d, 0x61, 0x66, 0x65, 0x4d, 0x61, 0x66, 0x65, 0x5f, 0x4d, 0x38, 0x32, 0x30, 0x53, 0x68, 0x69,
		0x6e, 0x65, 0x20, 0x4d, 0x38, 0x32, 0x30, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x73, 0x65, 0x65, 0x4e,
		0x35, 0x4e, 0x4f, 0x56, 0x41, 0x4e, 0x35, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x49, 0x72, 0x6f, 0x6e,
		0x2b, 0x4e, 0x35, 0x4d, 0x61, 0x78, 0x5f, 0x58, 0x34, 0x4e, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x58, 0x34, 0x4d, 0x61, 0x67, 0x6e, 0x75, 0x73, 0x42, 0x72, 0x61, 0x76, 0x6f, 0x20, 0x24, 0x31,
		0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x6a, 0x65, 0x73,
		0x74, 0x69, 0x63, 0x4a, 0x61, 0x63, 0x6b, 0x4a, 0x6f, 0x65, 0x55, 0x72, 0x61, 0x6e, 0x6f, 0x20,
		0x37, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x72, 0x61, 0x6e, 0x6f, 0x20, 0x24, 0x31, 0x50, 0x6c,
		0x75, 0x74, 0x6f, 0x20, 0x24, 0x31, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x24, 0x32, 0x47, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x54, 0x41,
		0x42, 0x2d, 0x37, 0x31, 0x34, 0x54, 0x61, 0x62, 0x20, 0x37, 0x31, 0x34, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x54, 0x41, 0x42, 0x5f, 0x38, 0x31, 0x34, 0x54, 0x61, 0x62, 0x20, 0x38, 0x31, 0x34, 0x54,
		0x61, 0x62, 0x24, 0x31, 0x43, 0x72, 0x6f, 0x6e, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x6c, 0x61,
		0x74, 0x61, 0x4d, 0x61, 0x6e, 0x67, 0x6f, 0x4d, 0x61, 0x6e, 0x6e, 0x4d, 0x61, 0x6e, 0x74, 0x61,
		0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x53, 0x50, 0x39, 0x35,
		0x30, 0x31, 0x32, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x6f, 0x20, 0x31, 0x4d, 0x53, 0x50, 0x39, 0x35,
		0x30, 0x31, 0x34, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x6f, 0x20, 0x33, 0x4d, 0x53, 0x50, 0x39, 0x35,
		0x30, 0x31, 0x35, 0x4d, 0x65, 0x7a, 0x6f, 0x20, 0x32, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x32,
		0x30, 0x52, 0x6f, 0x63, 0x6b, 0x79, 0x20, 0x32, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x32, 0x31,
		0x52, 0x6f, 0x63, 0x6b, 0x79, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x53, 0x50, 0x39, 0x36,
		0x30, 0x31, 0x37, 0x46, 0x6f, 0x72, 0x74, 0x6f, 0x20, 0x32, 0x4d, 0x53, 0x50, 0x39, 0x36, 0x30,
		0x30, 0x32, 0x46, 0x6f, 0x72, 0x74, 0x6f, 0x20, 0x31, 0x4d, 0x53, 0x50, 0x39, 0x34, 0x35, 0x30,
		0x31, 0x45, 0x61, 0x73, 0x79, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x4d, 0x61, 0x6e, 0x74,
		0x72, 0x61, 0x4d, 0x61, 0x72, 0x61, 0x4d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x4d, 0x45, 0x2d,
		0x24, 0x31, 0x4d, 0x61, 0x73, 0x63, 0x6f, 0x6d, 0x4d, 0x61, 0x73, 0x73, 0x67, 0x6f, 0x56, 0x69,
		0x32, 0x20, 0x53, 0x4d, 0x61, 0x73, 0x73, 0x74, 0x65, 0x6c, 0x4a, 0x75, 0x6e, 0x6f, 0x20, 0x51,
		0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x61, 0x70, 0x69, 0x20, 0x24, 0x31, 0x4e, 0x36, 0x36,
		0x30, 0x53, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x61, 0x62, 0x20, 0x31,
		0x30, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x34, 0x47, 0x54,
		0x61, 0x62, 0x31, 0x30, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x47, 0x47, 0x50, 0x61, 0x64, 0x20, 0x4e, 0x65, 0x6f,
		0x20, 0x51, 0x43, 0x20, 0x34, 0x47, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x74, 0x65, 0x63, 0x68,
		0x4d, 0x61, 0x74, 0x63, 0x6f, 0x20, 0x54, 0x6f, 0x6f, 0x6c, 0x73, 0x4d, 0x61, 0x74, 0x72, 0x69,
		0x78, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x20, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x47,
		0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x37, 0x31, 0x31, 0x36, 0x20, 0x41, 0x35, 0x4d, 0x61, 0x75,
		0x6e, 0x66, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x78, 0x63, 0x6f, 0x6d, 0x24, 0x31, 0x20, 0x53, 0x74,
		0x72, 0x6f, 0x6e, 0x67, 0x4d, 0x53, 0x24, 0x31, 0x52, 0x53, 0x2d, 0x34, 0x30, 0x31, 0x4e, 0x65,
		0x76, 0x61, 0x20, 0x52, 0x69, 0x73, 0x65, 0x20, 0x53, 0x31, 0x4d, 0x61, 0x78, 0x66, 0x6f, 0x6e,
		0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x47, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x69,
		0x58, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x78, 0x74, 0x72, 0x6f, 0x6e, 0x50, 0x6c,
		0x75, 0x74, 0x6f, 0x4d, 0x61, 0x78, 0x77, 0x65, 0x6c, 0x6c, 0x4d, 0x61, 0x78, 0x77, 0x65, 0x73,
		0x74, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x24,
		0x31, 0x4e, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x58, 0x35, 0x35, 0x20,
		0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x5f, 0x35, 0x5f, 0x47, 0x4f, 0x5f, 0x4c, 0x54,
		0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x47, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x41,
		0x73, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x22, 0x56, 0x69,
		0x72, 0x74, 0x75, 0x65, 0x20, 0x5a, 0x35, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x58, 0x34, 0x4e,
		0x69, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x47, 0x4f, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20,
		0x34, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x34, 0x73, 0x4e, 0x69,
		0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31,
		0x20, 0x47, 0x4f, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x36, 0x50, 0x47, 0x72, 0x61,
		0x76, 0x69, 0x74, 0x79, 0x20, 0x36, 0x50, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x35,
		0x2e, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x36, 0x41, 0x73, 0x74, 0x72,
		0x6f, 0x20, 0x36, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x24, 0x31, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x5f, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x5f, 0x39, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x39, 0x4d, 0x61, 0x7a, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x58, 0x4d, 0x61, 0x7a, 0x65,
		0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53, 0x53, 0x42, 0x2d, 0x24, 0x31, 0x4d, 0x65, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x65, 0x63, 0x65,
		0x72, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66,
		0x65, 0x20, 0x4d, 0x37, 0x38, 0x35, 0x58, 0x31, 0x30, 0x31, 0x30, 0x4d, 0x31, 0x37, 0x51, 0x46,
		0x36, 0x20, 0x33, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x31, 0x37, 0x51, 0x46, 0x24, 0x31,
		0x20, 0x24, 0x32, 0x47, 0x38, 0x30, 0x30, 0x50, 0x33, 0x31, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73,
		0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x38, 0x30, 0x30, 0x50,
		0x33, 0x31, 0x43, 0x38, 0x30, 0x30, 0x50, 0x33, 0x32, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x38, 0x30, 0x30, 0x50, 0x33,
		0x32, 0x43, 0x31, 0x30, 0x31, 0x50, 0x35, 0x31, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x31, 0x30, 0x31, 0x50, 0x35, 0x31,
		0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66,
		0x65, 0x20, 0x4d, 0x37, 0x24, 0x31, 0x51, 0x46, 0x36, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x37, 0x31, 0x36, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x46, 0x37, 0x31, 0x36, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x37, 0x31, 0x36, 0x4d, 0x65, 0x63,
		0x6f, 0x6f, 0x6c, 0x4b, 0x4d, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x4d, 0x39, 0x20, 0x54, 0x56,
		0x20, 0x42, 0x6f, 0x78, 0x42, 0x42, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x49, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x57, 0x4d, 0x38, 0x53, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x44, 0x56, 0x42, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x24, 0x31, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x38, 0x53, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x38, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x63, 0x6f, 0x6d, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x35, 0x30, 0x20, 0x33, 0x47, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x37, 0x30, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x37, 0x30, 0x20, 0x53, 0x32, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x2e, 0x37, 0x22,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x4d, 0x58, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x4d, 0x58, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x48, 0x58, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x4d, 0x58, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x48, 0x58, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x47, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x37, 0x35, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x4d, 0x2d,
		0x53, 0x50, 0x31, 0x41, 0x47, 0x4f, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x20, 0x47, 0x6f, 0x20, 0x33, 0x47, 0x4d, 0x2d, 0x53, 0x50, 0x37, 0x78, 0x47,
		0x4f, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x69, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x31, 0x41, 0x45, 0x43, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x69, 0x79, 0x6f, 0x20, 0x31, 0x30, 0x20,
		0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x34, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x34, 0x20, 0x48,
		0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x48, 0x44, 0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x58, 0x20, 0x48, 0x44,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4d,
		0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x4d, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x48, 0x44, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x48, 0x44, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x48, 0x44, 0x20, 0x69, 0x50, 0x72, 0x6f,
		0x24, 0x31, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30,
		0x2e, 0x30, 0x22, 0x20, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x41, 0x7a, 0x69, 0x6d, 0x75,
		0x74, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x20, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x20, 0x33, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x69, 0x79, 0x6f, 0x20, 0x38, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61,
		0x64, 0x20, 0x31, 0x30, 0x20, 0x45, 0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61,
		0x64, 0x20, 0x31, 0x45, 0x59, 0x57, 0x69, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x57, 0x38, 0x30, 0x31,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x42, 0x34, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x35, 0x35, 0x30, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x42, 0x35, 0x30, 0x30, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x35, 0x33, 0x30, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x37, 0x30, 0x30,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x33,
		0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35,
		0x35, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53,
		0x36, 0x35, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20,
		0x53, 0x35, 0x35, 0x31, 0x55, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75,
		0x6f, 0x20, 0x47, 0x34, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f,
		0x20, 0x47, 0x35, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75,
		0x6f, 0x20, 0x53, 0x35, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44,
		0x75, 0x6f, 0x20, 0x24, 0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75,
		0x6f, 0x20, 0x58, 0x24, 0x31, 0x55, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44,
		0x75, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44,
		0x75, 0x6f, 0x20, 0x53, 0x24, 0x31, 0x4d, 0x65, 0x64, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x66, 0x65,
		0x74, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x65, 0x67,
		0x61, 0x46, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x2b, 0x4d, 0x46, 0x4c, 0x6f, 0x67, 0x69,
		0x6e, 0x34, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x6f, 0x67,
		0x69, 0x6e, 0x20, 0x33, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x53, 0x50, 0x2d, 0x41, 0x32, 0x30,
		0x69, 0x4d, 0x69, 0x6e, 0x74, 0x56, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x65, 0x67, 0x61,
		0x63, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x54, 0x54, 0x20, 0x58, 0x76, 0x69, 0x65, 0x77, 0x20, 0x41,
		0x56, 0x31, 0x58, 0x76, 0x69, 0x65, 0x77, 0x2b, 0x4d, 0x65, 0x69, 0x74, 0x75, 0x54, 0x38, 0x54,
		0x38, 0x73, 0x54, 0x39, 0x4d, 0x38, 0x73, 0x32, 0x4d, 0x65, 0x69, 0x7a, 0x75, 0x4d, 0x32, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x24, 0x31, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x31, 0x45, 0x4d,
		0x32, 0x45, 0x4d, 0x32, 0x4d, 0x33, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x35, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x4d, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x33, 0x73, 0x4d, 0x33, 0x20, 0x4d,
		0x61, 0x78, 0x4d, 0x35, 0x63, 0x4d, 0x58, 0x32, 0x4d, 0x58, 0x33, 0x4d, 0x58, 0x34, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x58, 0x34, 0x4d, 0x58, 0x35, 0x6d, 0x31, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c,
		0x4d, 0x31, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x4d, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d,
		0x38, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x52, 0x4f, 0x20, 0x37, 0x50, 0x52, 0x4f, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x52, 0x4f, 0x20, 0x24, 0x31, 0x4d, 0x58, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x31, 0x36, 0x54, 0x31, 0x36, 0x74, 0x68, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x31, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x35, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x31, 0x36, 0x74, 0x68, 0x31, 0x36, 0x58, 0x31, 0x36, 0x31, 0x36, 0x73, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x33, 0x4d, 0x65, 0x6c, 0x72, 0x6f, 0x73, 0x65, 0x53, 0x39, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x32, 0x30, 0x31, 0x39, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x53, 0x6c, 0x69,
		0x6d, 0x20, 0x33, 0x2e, 0x34, 0x22, 0x4d, 0x65, 0x6d, 0x75, 0x70, 0x53, 0x6c, 0x69, 0x64, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x50, 0x61, 0x64, 0x20, 0x4e,
		0x47, 0x24, 0x31, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x50, 0x61, 0x64, 0x20, 0x4e, 0x47, 0x24, 0x31,
		0x20, 0x33, 0x47, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x50, 0x61, 0x64, 0x20, 0x37, 0x30, 0x34, 0x24,
		0x31, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x47, 0x6f, 0x50, 0x6f,
		0x72, 0x74, 0x61, 0x6c, 0x47, 0x6f, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x20, 0x47, 0x6f, 0x51,
		0x75, 0x65, 0x73, 0x74, 0x20, 0x33, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x32, 0x51, 0x75, 0x65,
		0x73, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x65, 0x74, 0x7a, 0x4d, 0x45, 0x54, 0x5a, 0x20, 0x32,
		0x4b, 0x20, 0x54, 0x56, 0x4d, 0x69, 0x58, 0x7a, 0x6f, 0x4d, 0x45, 0x24, 0x31, 0x20, 0x24, 0x32,
		0x47, 0x4d, 0x58, 0x31, 0x30, 0x32, 0x31, 0x20, 0x33, 0x47, 0x4d, 0x58, 0x24, 0x31, 0x20, 0x34,
		0x47, 0x4d, 0x45, 0x31, 0x30, 0x32, 0x35, 0x20, 0x33, 0x47, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x4d,
		0x61, 0x78, 0x41, 0x51, 0x35, 0x30, 0x30, 0x31, 0x20, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x41, 0x51, 0x35, 0x30, 0x30, 0x31, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x4a, 0x75,
		0x69, 0x63, 0x65, 0x20, 0x32, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x44, 0x6f, 0x6f, 0x64,
		0x6c, 0x65, 0x20, 0x32, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x34, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x4a, 0x75, 0x69, 0x63, 0x65, 0x20, 0x34, 0x43,
		0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x34, 0x35, 0x36, 0x30, 0x4d,
		0x4d, 0x58, 0x49, 0x4e, 0x20, 0x32, 0x42, 0x49, 0x4e, 0x20, 0x32, 0x43, 0x49, 0x4e, 0x20, 0x31,
		0x42, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x41, 0x31, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
		0x20, 0x45, 0x76, 0x6f, 0x6b, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
		0x20, 0x35, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43,
		0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x54, 0x61, 0x62, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x51, 0x24,
		0x31, 0x51, 0x34, 0x31, 0x37, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x4d, 0x65, 0x67, 0x61,
		0x51, 0x33, 0x35, 0x30, 0x52, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x4d, 0x61, 0x67, 0x6e,
		0x75, 0x73, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x34, 0x38, 0x30, 0x43, 0x61, 0x6e,
		0x76, 0x61, 0x73, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x32, 0x51, 0x33, 0x38, 0x30, 0x43,
		0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x51, 0x33, 0x35, 0x31, 0x43,
		0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x51, 0x33, 0x35, 0x30, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x33, 0x34, 0x39, 0x43, 0x61, 0x6e, 0x76,
		0x61, 0x73, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x34, 0x42, 0x6f, 0x6c, 0x74, 0x20,
		0x50, 0x61, 0x63, 0x65, 0x51, 0x34, 0x30, 0x39, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x47,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x51, 0x34, 0x31, 0x35, 0x43, 0x61, 0x6e, 0x76, 0x61,
		0x73, 0x20, 0x50, 0x61, 0x63, 0x65, 0x51, 0x33, 0x34, 0x30, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65,
		0x20, 0x32, 0x59, 0x55, 0x20, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x59, 0x55, 0x35, 0x30,
		0x34, 0x30, 0x59, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x59, 0x55, 0x20, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x53, 0x20, 0x59, 0x55, 0x35, 0x35,
		0x33, 0x30, 0x51, 0x34, 0x32, 0x34, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69,
		0x65, 0x51, 0x34, 0x31, 0x30, 0x31, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x57, 0x61, 0x72, 0x72, 0x69,
		0x6f, 0x72, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x33, 0x35, 0x32, 0x42, 0x6f, 0x6c,
		0x74, 0x20, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x34, 0x42, 0x6f, 0x6c, 0x74, 0x20,
		0x24, 0x31, 0x51, 0x33, 0x30, 0x36, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x33, 0x47, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x51, 0x34, 0x32, 0x36, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x20,
		0x32, 0x4e, 0x38, 0x32, 0x31, 0x36, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x4e,
		0x31, 0x31, 0x4e, 0x38, 0x33, 0x30, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x4e, 0x31, 0x32, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x49, 0x6e, 0x66,
		0x69, 0x6e, 0x69, 0x74, 0x79, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x34, 0x34, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x51, 0x33, 0x35, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20,
		0x32, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x4d, 0x61, 0x67,
		0x6e, 0x75, 0x73, 0x20, 0x48, 0x44, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x58, 0x70, 0x72,
		0x65, 0x73, 0x73, 0x20, 0x32, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x58, 0x70, 0x72, 0x65,
		0x73, 0x73, 0x56, 0x64, 0x65, 0x6f, 0x20, 0x34, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x31,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42,
		0x68, 0x61, 0x72, 0x61, 0x74, 0x20, 0x24, 0x31, 0x69, 0x4f, 0x6e, 0x65, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x49, 0x4e, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x49, 0x4e, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x32, 0x49, 0x4e, 0x20, 0x31, 0x62, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x24, 0x31, 0x4b, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x34, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x34, 0x33, 0x35, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x35, 0x33, 0x32, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x33, 0x35, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x33,
		0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x34, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x35, 0x35, 0x30, 0x52, 0x4d, 0x2d, 0x31, 0x30, 0x31, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x36, 0x33, 0x38, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x58, 0x4c, 0x20,
		0x4c, 0x54, 0x45, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x58, 0x4c, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x4c,
		0x54, 0x45, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x36, 0x35, 0x30, 0x52, 0x4d, 0x2d, 0x31, 0x31, 0x35, 0x32, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x36, 0x35, 0x30, 0x20, 0x53, 0x53, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38,
		0x35, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x20, 0x58, 0x4c, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30,
		0x20, 0x58, 0x4c, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x31, 0x33, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x31, 0x35,
		0x33, 0x30, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x33,
		0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x53, 0x75, 0x72,
		0x66, 0x61, 0x63, 0x65, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x32, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63,
		0x65, 0x20, 0x44, 0x75, 0x6f, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x33, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x68, 0x45,
		0x54, 0x57, 0x31, 0x30, 0x31, 0x47, 0x54, 0x45, 0x2d, 0x54, 0x61, 0x62, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x45, 0x2d, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x69, 0x67, 0x68, 0x74, 0x69,
		0x65, 0x72, 0x4d, 0x69, 0x6e, 0x69, 0x78, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x38, 0x48, 0x4e, 0x45,
		0x4f, 0x20, 0x55, 0x32, 0x32, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x4e, 0x45, 0x4f, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x45, 0x4f, 0x20,
		0x58, 0x38, 0x38, 0x69, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x37, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x35,
		0x4e, 0x45, 0x4f, 0x20, 0x58, 0x24, 0x31, 0x4e, 0x45, 0x4f, 0x20, 0x55, 0x31, 0x4e, 0x45, 0x4f,
		0x20, 0x5a, 0x36, 0x34, 0x4e, 0x45, 0x4f, 0x20, 0x55, 0x39, 0x48, 0x50, 0x65, 0x61, 0x72, 0x6c,
		0x20, 0x24, 0x31, 0x45, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x64, 0x4d, 0x34, 0x43, 0x52, 0x43, 0x6c,
		0x6f, 0x76, 0x65, 0x72, 0x56, 0x69, 0x72, 0x47, 0x6f, 0x4f, 0x72, 0x69, 0x6f, 0x6e, 0x4d, 0x69,
		0x6e, 0x74, 0x74, 0x43, 0x6f, 0x6f, 0x6c, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x20, 0x24, 0x31, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x73,
		0x68, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x6f, 0x4d, 0x6f, 0x62, 0x69,
		0x78, 0x20, 0x4d, 0x36, 0x4d, 0x69, 0x6f, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64,
		0x20, 0x37, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x4d, 0x69, 0x6f, 0x6e, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x6f, 0x6e,
		0x65, 0x20, 0x49, 0x49, 0x49, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x33, 0x50, 0x32, 0x2b, 0x4d, 0x69,
		0x6f, 0x6e, 0x65, 0x5f, 0x50, 0x55, 0x42, 0x47, 0x5f, 0x31, 0x50, 0x55, 0x42, 0x47, 0x20, 0x31,
		0x4d, 0x69, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x53, 0x20, 0x6d, 0x61, 0x78, 0x58, 0x53, 0x20, 0x4d,
		0x61, 0x78, 0x4e, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x72, 0x61, 0x79, 0x54, 0x50,
		0x4d, 0x34, 0x47, 0x5f, 0x57, 0x54, 0x38, 0x54, 0x50, 0x4d, 0x34, 0x47, 0x20, 0x57, 0x54, 0x38,
		0x4d, 0x49, 0x44, 0x4d, 0x20, 0x24, 0x31, 0x4d, 0x50, 0x4d, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x74,
		0x63, 0x68, 0x65, 0x6c, 0x6c, 0x20, 0x26, 0x20, 0x42, 0x72, 0x6f, 0x77, 0x6e, 0x4d, 0x69, 0x74,
		0x6f, 0x33, 0x32, 0x35, 0x35, 0x41, 0x33, 0x37, 0x20, 0x5a, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4d, 0x69, 0x74, 0x73, 0x75, 0x62, 0x69, 0x73, 0x68, 0x69, 0x4d, 0x69, 0x74, 0x73, 0x75, 0x69,
		0x4d, 0x6f, 0x62, 0x65, 0x6c, 0x6c, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x50, 0x33, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x50, 0x33, 0x4d, 0x6f, 0x62, 0x69, 0x49, 0x6f, 0x54, 0x4d, 0x6f, 0x62, 0x69, 0x47,
		0x6f, 0x20, 0x32, 0x4d, 0x6f, 0x62, 0x69, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x62, 0x69, 0x57, 0x69, 0x72, 0x65, 0x4b, 0x41, 0x4e, 0x55, 0x4e,
		0x41, 0x4b, 0x61, 0x6e, 0x75, 0x6e, 0x61, 0x4b, 0x57, 0x41, 0x4e, 0x49, 0x54, 0x41, 0x4b, 0x77,
		0x61, 0x6e, 0x69, 0x74, 0x61, 0x4d, 0x6f, 0x62, 0x69, 0x47, 0x6f, 0x32, 0x4c, 0x4d, 0x6f, 0x62,
		0x69, 0x47, 0x6f, 0x20, 0x32, 0x4c, 0x4d, 0x6f, 0x62, 0x69, 0x63, 0x65, 0x6c, 0x45, 0x70, 0x69,
		0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x49, 0x58, 0x20, 0x50, 0x52, 0x4f, 0x49, 0x58,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x58, 0x20, 0x50, 0x52, 0x4f, 0x52, 0x58, 0x20, 0x50, 0x72, 0x6f,
		0x49, 0x58, 0x2d, 0x31, 0x49, 0x58, 0x4c, 0x45, 0x47, 0x45, 0x4e, 0x44, 0x20, 0x4d, 0x41, 0x58,
		0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x45, 0x47, 0x45, 0x4e, 0x44,
		0x20, 0x50, 0x52, 0x4f, 0x5f, 0x31, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45,
		0x42, 0x4c, 0x49, 0x4e, 0x4b, 0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x45,
		0x70, 0x69, 0x63, 0x20, 0x24, 0x31, 0x42, 0x45, 0x52, 0x52, 0x59, 0x31, 0x42, 0x65, 0x72, 0x72,
		0x79, 0x20, 0x31, 0x42, 0x45, 0x52, 0x52, 0x59, 0x20, 0x50, 0x52, 0x4f, 0x42, 0x65, 0x72, 0x72,
		0x79, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x45, 0x52, 0x52, 0x59, 0x20, 0x32, 0x42, 0x65, 0x72, 0x72,
		0x79, 0x20, 0x32, 0x54, 0x52, 0x45, 0x4e, 0x44, 0x59, 0x20, 0x32, 0x54, 0x72, 0x65, 0x6e, 0x64,
		0x79, 0x20, 0x32, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x45, 0x52,
		0x52, 0x59, 0x42, 0x65, 0x72, 0x72, 0x79, 0x54, 0x52, 0x45, 0x4e, 0x44, 0x59, 0x20, 0x50, 0x4c,
		0x55, 0x53, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x52, 0x45,
		0x4e, 0x44, 0x59, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x52, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x59, 0x50, 0x45, 0x5f, 0x58, 0x48,
		0x79, 0x70, 0x65, 0x20, 0x58, 0x48, 0x59, 0x50, 0x45, 0x48, 0x79, 0x70, 0x65, 0x44, 0x41, 0x4e,
		0x44, 0x59, 0x5f, 0x5a, 0x41, 0x4d, 0x44, 0x61, 0x6e, 0x64, 0x79, 0x20, 0x5a, 0x61, 0x6d, 0x44,
		0x41, 0x4e, 0x44, 0x59, 0x44, 0x61, 0x6e, 0x64, 0x79, 0x4d, 0x45, 0x54, 0x52, 0x4f, 0x32, 0x4d,
		0x65, 0x74, 0x72, 0x6f, 0x20, 0x32, 0x41, 0x53, 0x54, 0x52, 0x4f, 0x56, 0x45, 0x4e, 0x55, 0x53,
		0x5f, 0x47, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x47, 0x6f, 0x54, 0x41, 0x4e, 0x47, 0x4f, 0x5f,
		0x4c, 0x49, 0x54, 0x45, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x45,
		0x4e, 0x44, 0x59, 0x5f, 0x44, 0x53, 0x46, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x44, 0x53, 0x52, 0x45,
		0x42, 0x45, 0x4c, 0x52, 0x55, 0x42, 0x59, 0x52, 0x75, 0x62, 0x79, 0x52, 0x37, 0x4f, 0x52, 0x45,
		0x4f, 0x4f, 0x72, 0x65, 0x6f, 0x47, 0x4c, 0x4f, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x5f, 0x31, 0x54,
		0x69, 0x74, 0x61, 0x6e, 0x20, 0x31, 0x5a, 0x4f, 0x4f, 0x4d, 0x5f, 0x31, 0x5a, 0x6f, 0x6f, 0x6d,
		0x20, 0x31, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x44, 0x53, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x44, 0x53,
		0x46, 0x41, 0x4d, 0x45, 0x5f, 0x44, 0x53, 0x46, 0x61, 0x6d, 0x65, 0x20, 0x44, 0x53, 0x46, 0x41,
		0x4d, 0x45, 0x46, 0x61, 0x6d, 0x65, 0x42, 0x45, 0x41, 0x4d, 0x53, 0x48, 0x49, 0x46, 0x54, 0x53,
		0x68, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4e, 0x65, 0x6f,
		0x20, 0x4c, 0x54, 0x45, 0x4e, 0x45, 0x4f, 0x5f, 0x31, 0x4e, 0x65, 0x6f, 0x4e, 0x65, 0x6f, 0x5f,
		0x50, 0x6c, 0x75, 0x73, 0x4e, 0x65, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x69, 0x6f, 0x20,
		0x24, 0x31, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x53, 0x77, 0x69,
		0x74, 0x63, 0x68, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x47,
		0x6f, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x31, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x31,
		0x50, 0x4c, 0x55, 0x53, 0x5f, 0x31, 0x52, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x6c, 0x69,
		0x6b, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x43, 0x6c, 0x69, 0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43,
		0x4c, 0x49, 0x4b, 0x43, 0x6c, 0x69, 0x6b, 0x56, 0x58, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56,
		0x58, 0x24, 0x31, 0x50, 0x55, 0x4c, 0x53, 0x45, 0x5f, 0x31, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20,
		0x31, 0x50, 0x55, 0x52, 0x45, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x50, 0x75, 0x72, 0x65, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x46, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x46, 0x65, 0x6e,
		0x64, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x4f, 0x4f, 0x4d, 0x2d, 0x48, 0x5a, 0x6f, 0x6f,
		0x6d, 0x20, 0x48, 0x5a, 0x4f, 0x4f, 0x4d, 0x5a, 0x6f, 0x6f, 0x6d, 0x46, 0x65, 0x76, 0x65, 0x72,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x46, 0x45, 0x56, 0x45, 0x52, 0x5f, 0x50, 0x4c,
		0x55, 0x53, 0x46, 0x65, 0x76, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x62, 0x69,
		0x69, 0x73, 0x74, 0x61, 0x72, 0x58, 0x31, 0x20, 0x24, 0x31, 0x45, 0x31, 0x20, 0x53, 0x65, 0x6c,
		0x66, 0x69, 0x65, 0x58, 0x51, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x4c,
		0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x53, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20,
		0x53, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x53, 0x32,
		0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x4a, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x37, 0x29, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x4a, 0x4c, 0x61, 0x69,
		0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x4a, 0x32, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74,
		0x61, 0x72, 0x20, 0x5a, 0x55, 0x4d, 0x42, 0x4f, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5a, 0x75,
		0x6d, 0x62, 0x6f, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x75, 0x6e,
		0x61, 0x20, 0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x4c, 0x41,
		0x49, 0x20, 0x59, 0x75, 0x6b, 0x69, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x75, 0x6b, 0x69, 0x4c, 0x61,
		0x69, 0x20, 0x5a, 0x6f, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x65, 0x6e,
		0x61, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61,
		0x72, 0x5f, 0x5a, 0x4f, 0x52, 0x4f, 0x5f, 0x34, 0x47, 0x5a, 0x6f, 0x72, 0x6f, 0x20, 0x34, 0x47,
		0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x4c, 0x41, 0x49, 0x20, 0x35, 0x31, 0x32, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x4c, 0x61, 0x69,
		0x20, 0x35, 0x31, 0x32, 0x4c, 0x61, 0x69, 0x20, 0x35, 0x30, 0x34, 0x24, 0x31, 0x6d, 0x6f, 0x62,
		0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x4c, 0x41, 0x49, 0x20, 0x59, 0x4c, 0x61, 0x69, 0x20,
		0x59, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x50, 0x52, 0x49, 0x4d, 0x45,
		0x20, 0x58, 0x20, 0x32, 0x30, 0x31, 0x37, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x58, 0x43, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x20, 0x58, 0x20, 0x4d, 0x41, 0x58,
		0x20, 0x32, 0x30, 0x31, 0x38, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x58, 0x20, 0x4d, 0x61, 0x78,
		0x4b, 0x6f, 0x6f, 0x6c, 0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20,
		0x4b, 0x41, 0x54, 0x20, 0x34, 0x35, 0x32, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4b, 0x61, 0x74,
		0x20, 0x34, 0x35, 0x32, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x4c, 0x41,
		0x49, 0x5f, 0x59, 0x4f, 0x4c, 0x4c, 0x4f, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x61, 0x69,
		0x20, 0x59, 0x6f, 0x6c, 0x6c, 0x6f, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x4b, 0x69, 0x6e,
		0x67, 0x64, 0x6f, 0x6d, 0x47, 0xc3, 0xa9, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x20, 0x31, 0x32, 0x36,
		0x4d, 0x6f, 0x62, 0x69, 0x6f, 0x6c, 0x61, 0x4d, 0x53, 0x35, 0x30, 0x58, 0x36, 0x41, 0x74, 0x6d,
		0x6f, 0x73, 0x20, 0x49, 0x49, 0x50, 0x6f, 0x6c, 0x79, 0x73, 0x20, 0x4d, 0x53, 0x34, 0x35, 0x4c,
		0x31, 0x4d, 0x53, 0x35, 0x35, 0x58, 0x36, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x49, 0x49, 0x4d, 0x53, 0x35, 0x35, 0x58, 0x35, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x53, 0x35, 0x35, 0x4c, 0x31, 0x47, 0x41, 0x49, 0x41, 0x4d, 0x53, 0x35, 0x30,
		0x4c, 0x31, 0x49, 0x6e, 0x74, 0x69, 0x4d, 0x42, 0x2d, 0x32, 0x39, 0x30, 0x30, 0x20, 0x51, 0x55,
		0x41, 0x54, 0x54, 0x52, 0x4f, 0x4d, 0x42, 0x2d, 0x32, 0x39, 0x30, 0x30, 0x20, 0x51, 0x75, 0x61,
		0x74, 0x74, 0x72, 0x6f, 0x4d, 0x53, 0x34, 0x33, 0x41, 0x33, 0x30, 0x30, 0x30, 0x4d, 0x53, 0x34,
		0x35, 0x41, 0x34, 0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x34, 0x35, 0x4d, 0x53, 0x35, 0x30,
		0x41, 0x34, 0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30, 0x4d, 0x53, 0x35, 0x30, 0x41,
		0x34, 0x35, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30, 0x20, 0x45, 0x6c, 0x65, 0x67, 0x61,
		0x6e, 0x63, 0x65, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x35, 0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20,
		0x35, 0x30, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x38, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x36, 0x30,
		0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x31, 0x36,
		0x4d, 0x53, 0x35, 0x30, 0x42, 0x31, 0x31, 0x30, 0x30, 0x30, 0x57, 0x61, 0x76, 0x65, 0x35, 0x57,
		0x61, 0x76, 0x65, 0x20, 0x35, 0x4d, 0x6f, 0x62, 0x69, 0x73, 0x74, 0x65, 0x6c, 0x4d, 0x6f, 0x62,
		0x6f, 0x4d, 0x6f, 0x62, 0x76, 0x6f, 0x69, 0x54, 0x69, 0x63, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x24, 0x31, 0x4d, 0x6f, 0x64, 0x65, 0x63, 0x6f, 0x6d, 0x58, 0x69, 0x6e, 0x6f, 0x20, 0x5a, 0x24,
		0x31, 0x20, 0x58, 0x24, 0x32, 0x45, 0x43, 0x48, 0x4f, 0x20, 0x4c, 0x4f, 0x4c, 0x4c, 0x59, 0x45,
		0x63, 0x68, 0x6f, 0x20, 0x4c, 0x6f, 0x6c, 0x6c, 0x79, 0x46, 0x72, 0x65, 0x65, 0x54, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x57, 0x61, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x4d, 0x6f, 0x66, 0x75, 0x74, 0x4d, 0x6f, 0x6f, 0x6e, 0x64, 0x72, 0x6f, 0x70, 0x4d, 0x49,
		0x41, 0x44, 0x30, 0x31, 0x4d, 0x6f, 0x73, 0x69, 0x6d, 0x6f, 0x73, 0x69, 0x6d, 0x6f, 0x6d, 0x6f,
		0x33, 0x73, 0x6d, 0x6f, 0x6d, 0x6f, 0x33, 0x53, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x4d, 0x6f, 0x74,
		0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x4d, 0x4f, 0x54, 0x2d, 0x56, 0x33, 0x36, 0x30, 0x56, 0x33, 0x36,
		0x30, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x74, 0x61, 0x62, 0x20, 0x67, 0x37, 0x30, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x47, 0x37, 0x30, 0x58, 0x54, 0x32, 0x32, 0x36, 0x31, 0x2d,
		0x31, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x47, 0x36, 0x32, 0x53, 0x70, 0x69,
		0x63, 0x65, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x4f, 0x54, 0x4f,
		0x52, 0x4f, 0x4c, 0x41, 0x20, 0x45, 0x36, 0x53, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x36, 0x53,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x52, 0x61, 0x7a, 0x72, 0x20, 0x34, 0x30, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x58, 0x54, 0x32, 0x33, 0x32, 0x33, 0x2d, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x52,
		0x61, 0x7a, 0x72, 0x20, 0x34, 0x30, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x72,
		0x61, 0x7a, 0x72, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x30, 0x32, 0x33, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x52, 0x61, 0x7a, 0x72, 0x2b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x6d, 0x6f,
		0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x72, 0x61, 0x7a, 0x72, 0x20, 0x32, 0x30, 0x32, 0x33,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x52, 0x61, 0x7a, 0x72, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29,
		0x58, 0x54, 0x32, 0x32, 0x35, 0x31, 0x2d, 0x31, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x52, 0x61, 0x7a,
		0x72, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x73, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x4d, 0x45, 0x46, 0x69, 0x72, 0x65, 0x45, 0x64, 0x67, 0x65, 0x20, 0x53, 0x45, 0x64,
		0x67, 0x65, 0x20, 0x28, 0x24, 0x31, 0x29, 0x45, 0x64, 0x67, 0x65, 0x20, 0x34, 0x30, 0x20, 0x4e,
		0x65, 0x6f, 0x45, 0x64, 0x67, 0x65, 0x20, 0x53, 0x33, 0x30, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f,
		0x6c, 0x61, 0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x75, 0x6c, 0x74, 0x72, 0x61,
		0x45, 0x64, 0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x6d, 0x6f, 0x74,
		0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x6e, 0x65,
		0x6f, 0x45, 0x64, 0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x4e, 0x65, 0x6f, 0x58, 0x54, 0x32, 0x32,
		0x30, 0x31, 0x2d, 0x31, 0x45, 0x64, 0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x45,
		0x64, 0x67, 0x65, 0x20, 0x32, 0x30, 0x45, 0x64, 0x67, 0x65, 0x20, 0x53, 0x20, 0x50, 0x72, 0x6f,
		0x44, 0x65, 0x66, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x6f, 0x74, 0x6f, 0x73, 0x6d, 0x61,
		0x72, 0x74, 0x51, 0x75, 0x65, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x72, 0x65, 0x20, 0x58, 0x54, 0x44,
		0x65, 0x66, 0x79, 0x44, 0x65, 0x66, 0x79, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x44, 0x65,
		0x66, 0x79, 0x20, 0x58, 0x54, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x61, 0x6c, 0x44, 0x72, 0x6f, 0x69,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x6c, 0x75, 0x78, 0x65, 0x50, 0x72, 0x69,
		0x6d, 0x75, 0x73, 0x49, 0x72, 0x6f, 0x6e, 0x52, 0x6f, 0x63, 0x6b, 0x41, 0x74, 0x72, 0x69, 0x78,
		0x4d, 0x6f, 0x74, 0x6f, 0x6c, 0x75, 0x78, 0x65, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x2d, 0x53, 0x49,
		0x4d, 0x41, 0x74, 0x72, 0x69, 0x78, 0x20, 0x54, 0x56, 0x41, 0x74, 0x72, 0x69, 0x78, 0x20, 0x48,
		0x44, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x47, 0x6c, 0x61, 0x6d, 0x4d, 0x69,
		0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69,
		0x66, 0x79, 0x20, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x54, 0x38, 0x38, 0x32, 0x44, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x56, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20,
		0x52, 0x41, 0x5a, 0x52, 0x20, 0x69, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x34, 0x50, 0x68, 0x6f,
		0x74, 0x6f, 0x6e, 0x20, 0x51, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x66, 0x79, 0x20, 0x4d,
		0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x4d, 0x44, 0x72, 0x6f, 0x69,
		0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52,
		0x20, 0x44, 0x31, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x44, 0x33,
		0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x48, 0x44, 0x44, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x6d, 0x6f, 0x74, 0x6f,
		0x20, 0x67, 0x35, 0x32, 0x6a, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x32,
		0x6a, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x32, 0x6d, 0x6f, 0x74, 0x6f,
		0x20, 0x67, 0x35, 0x33, 0x79, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x33,
		0x79, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x33, 0x58, 0x54, 0x32, 0x33,
		0x34, 0x33, 0x2d, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x34, 0x20, 0x35, 0x47, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x47, 0x38, 0x32, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x31, 0x30, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x58, 0x54, 0x32, 0x31, 0x32, 0x37, 0x2d, 0x32,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x31, 0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x38, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x45, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x33, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x33, 0x30, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x45, 0x32, 0x20, 0x28, 0x34, 0x47, 0x2d, 0x4c, 0x54, 0x45, 0x29, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x45, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x36, 0x20, 0x28, 0x58, 0x54, 0x32, 0x30,
		0x30, 0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x35, 0x20, 0x43, 0x72, 0x75,
		0x69, 0x73, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x35, 0x20, 0x53, 0x75, 0x70, 0x72, 0x61,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x35, 0x20, 0x47, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45,
		0x24, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x73, 0x58, 0x54, 0x32, 0x30, 0x38, 0x31, 0x2d,
		0x31, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4d, 0x61, 0x78,
		0x78, 0x20, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x43,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x43, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x75, 0x72,
		0x62, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x32, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x34, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x73, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x36, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x37, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x33, 0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35,
		0x30, 0x58, 0x54, 0x32, 0x31, 0x37, 0x31, 0x2d, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35,
		0x31, 0x58, 0x54, 0x32, 0x31, 0x37, 0x31, 0x2d, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35,
		0x31, 0x20, 0x35, 0x47, 0x58, 0x54, 0x32, 0x31, 0x36, 0x39, 0x2d, 0x31, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x37, 0x31, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20, 0x53,
		0x74, 0x79, 0x6c, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20, 0x50, 0x75, 0x72, 0x65, 0x20,
		0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20, 0x46, 0x6f,
		0x72, 0x63, 0x65, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x44, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x5a, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x34, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x33, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x5a, 0x32, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x33, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x4d, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x33, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x53, 0x33, 0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x33,
		0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x64, 0x67, 0x65, 0x20, 0x58, 0x33, 0x30, 0x20, 0x35,
		0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x34, 0x30, 0x50, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x50, 0x33, 0x30, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x45,
		0x64, 0x67, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x24, 0x31, 0x29, 0x45, 0x64, 0x67,
		0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x54, 0x32, 0x32, 0x30, 0x31, 0x2d, 0x32, 0x45, 0x64,
		0x67, 0x65, 0x20, 0x58, 0x33, 0x30, 0x45, 0x64, 0x67, 0x65, 0x20, 0x24, 0x31, 0x20, 0x46, 0x75,
		0x73, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x67, 0x65, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x45, 0x64, 0x67, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x64, 0x67, 0x65, 0x20,
		0x24, 0x31, 0x20, 0x4e, 0x65, 0x6f, 0x45, 0x64, 0x67, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x45, 0x64, 0x67, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x58, 0x54, 0x32, 0x33, 0x30, 0x33, 0x2d, 0x32, 0x45, 0x64, 0x67, 0x65, 0x20, 0x34,
		0x30, 0x45, 0x64, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x6e,
		0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x20, 0x48, 0x79, 0x70, 0x65, 0x72,
		0x4f, 0x6e, 0x65, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x4f, 0x6e, 0x65, 0x20, 0x46, 0x75, 0x73, 0x69,
		0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f,
		0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x74, 0x6f, 0x72,
		0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x4f, 0x6e, 0x65,
		0x20, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f,
		0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x20, 0x61, 0x63, 0x65, 0x4f, 0x6e, 0x65, 0x20,
		0x35, 0x47, 0x20, 0x55, 0x57, 0x20, 0x41, 0x63, 0x65, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c,
		0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x4f, 0x6e, 0x65, 0x20, 0x35,
		0x47, 0x20, 0x55, 0x57, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x41, 0x63, 0x65, 0x6d, 0x6f,
		0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x76, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x28,
		0x58, 0x54, 0x32, 0x31, 0x31, 0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20,
		0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x24, 0x31, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x20, 0x28, 0x24, 0x31, 0x29,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x58, 0x54, 0x32, 0x33, 0x31, 0x35, 0x2d, 0x31, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x58, 0x54, 0x32, 0x31, 0x31, 0x35, 0x2d, 0x31, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20,
		0x35, 0x47, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x73, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x47, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29,
		0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x6f, 0x74, 0x6f,
		0x20, 0x67, 0x20, 0x70, 0x72, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x72, 0x6f,
		0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x70, 0x75, 0x72, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x20, 0x50, 0x75, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x66, 0x61, 0x73,
		0x74, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x46, 0x61, 0x73, 0x74, 0x6d, 0x6f, 0x74, 0x6f,
		0x20, 0x67, 0x20, 0x35, 0x47, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x20, 0x35, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x35,
		0x47, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x35,
		0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x34, 0x30, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x58, 0x54, 0x32, 0x32, 0x33, 0x33, 0x2d,
		0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x34, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x36,
		0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x36, 0x30, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x24, 0x31, 0x24, 0x32, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x32, 0x34, 0x20, 0x70, 0x6f, 0x77,
		0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x32, 0x34, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x28, 0x58, 0x54, 0x31, 0x39, 0x32, 0x35,
		0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x46, 0x6f, 0x72, 0x67,
		0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x6f,
		0x20, 0x28, 0x58, 0x54, 0x31, 0x39, 0x35, 0x32, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x24, 0x31, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x20,
		0x28, 0x58, 0x54, 0x31, 0x39, 0x35, 0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x24, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x24, 0x31, 0x20, 0x53, 0x75, 0x70, 0x72, 0x61, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x6d, 0x6f, 0x74, 0x6f, 0x20,
		0x67, 0x20, 0x67, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x47, 0x6f, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x58, 0x24, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x4d, 0x61, 0x78, 0x78, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x24, 0x31, 0x24, 0x32, 0x24, 0x33, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x24, 0x31, 0x24, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x69, 0x58,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x33, 0x36, 0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x41, 0x43, 0x54,
		0x56, 0x58, 0x54, 0x32, 0x30, 0x37, 0x31, 0x2d, 0x34, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x35, 0x47,
		0x52, 0x41, 0x5a, 0x52, 0x20, 0x28, 0x24, 0x31, 0x29, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x24, 0x31,
		0x52, 0x49, 0x5a, 0x52, 0x20, 0x24, 0x31, 0x52, 0x49, 0x5a, 0x52, 0x20, 0x24, 0x31, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x20, 0x24, 0x31, 0x4d, 0x6f, 0x76, 0x69,
		0x63, 0x46, 0x34, 0x35, 0x30, 0x32, 0x4d, 0x6f, 0x76, 0x69, 0x74, 0x65, 0x6c, 0x4d, 0x6f, 0x78,
		0x65, 0x65, 0x4d, 0x48, 0x2d, 0x54, 0x36, 0x30, 0x30, 0x30, 0x32, 0x31, 0x36, 0x30, 0x4d, 0x54,
		0x2d, 0x54, 0x38, 0x24, 0x31, 0x4d, 0x70, 0x6d, 0x61, 0x6e, 0x4d, 0x50, 0x31, 0x30, 0x30, 0x69,
		0x20, 0x4f, 0x43, 0x54, 0x41, 0x4d, 0x50, 0x51, 0x43, 0x47, 0x31, 0x30, 0x20, 0x33, 0x47, 0x4d,
		0x75, 0x6c, 0x74, 0x69, 0x50, 0x4f, 0x53, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6c, 0x61, 0x73, 0x65,
		0x72, 0x46, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x47, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x32, 0x47, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x20, 0x53, 0x45, 0x47, 0x45,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x24, 0x31, 0x20, 0x35, 0x47, 0x4d, 0x53, 0x36, 0x30, 0x46, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4d, 0x53, 0x34, 0x35, 0x53, 0x5f, 0x41, 0x36, 0x5f, 0x53, 0x65, 0x6e,
		0x69, 0x6f, 0x72, 0x4d, 0x53, 0x34, 0x35, 0x53, 0x20, 0x41, 0x36, 0x20, 0x53, 0x65, 0x6e, 0x69,
		0x6f, 0x72, 0x4d, 0x53, 0x34, 0x35, 0x53, 0x5f, 0x41, 0x36, 0x5f, 0x54, 0x65, 0x65, 0x6e, 0x4d,
		0x53, 0x34, 0x35, 0x53, 0x20, 0x41, 0x36, 0x20, 0x54, 0x65, 0x65, 0x6e, 0x4d, 0x37, 0x20, 0x33,
		0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x53, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x37,
		0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x24, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x31,
		0x30, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x37, 0x53, 0x51, 0x43, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x20, 0x33, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f,
		0x72, 0x65, 0x4d, 0x4c, 0x24, 0x31, 0x2d, 0x4d, 0x37, 0x73, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x4d, 0x37, 0x73, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x4c, 0x30, 0x31,
		0x2d, 0x4d, 0x37, 0x20, 0x53, 0x44, 0x4d, 0x31, 0x30, 0x41, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d,
		0x39, 0x20, 0x33, 0x47, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20, 0x41, 0x31, 0x30, 0x58, 0x38, 0x20,
		0x34, 0x47, 0x4d, 0x24, 0x31, 0x20, 0x33, 0x47, 0x4b, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x4d, 0x77, 0x61, 0x6c, 0x69, 0x6d, 0x75, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x79,
		0x47, 0x69, 0x63, 0x61, 0x48, 0x44, 0x52, 0x20, 0x24, 0x31, 0x20, 0x42, 0x6f, 0x78, 0x51, 0x75,
		0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x74, 0x76,
		0x20, 0x62, 0x6f, 0x78, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x45, 0x6e,
		0x6a, 0x6f, 0x79, 0x20, 0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x41, 0x54, 0x56, 0x24, 0x31, 0x4d,
		0x79, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x28,
		0x50, 0x48, 0x29, 0x6d, 0x79, 0x54, 0x24, 0x31, 0x20, 0x44, 0x54, 0x56, 0x6d, 0x79, 0x41, 0x24,
		0x31, 0x20, 0x44, 0x54, 0x56, 0x41, 0x38, 0x39, 0x38, 0x20, 0x44, 0x55, 0x4f, 0x41, 0x38, 0x39,
		0x38, 0x20, 0x44, 0x75, 0x6f, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x59, 0x32, 0x37,
		0x6d, 0x79, 0x32, 0x37, 0x4d, 0x59, 0x38, 0x30, 0x37, 0x6d, 0x79, 0x58, 0x31, 0x6d, 0x79, 0x58,
		0x49, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6d, 0x79, 0x58, 0x49, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x6d, 0x79, 0x58, 0x49, 0x24, 0x31, 0x6d, 0x79, 0x24, 0x31, 0x6d, 0x79, 0x57, 0x58, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x42, 0x72, 0x6f, 0x77, 0x6e, 0x20, 0x31, 0x42, 0x72, 0x6f, 0x77, 0x6e,
		0x20, 0x32, 0x4d, 0x79, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x38,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d,
		0x79, 0x57, 0x69, 0x67, 0x6f, 0x4d, 0x79, 0x57, 0x69, 0x67, 0x6f, 0x20, 0x43, 0x69, 0x74, 0x79,
		0x33, 0x43, 0x69, 0x74, 0x79, 0x20, 0x33, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x47, 0x49,
		0x49, 0x49, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x47, 0x33, 0x4d, 0x79, 0x67, 0x50, 0x61,
		0x64, 0x4d, 0x79, 0x6d, 0x61, 0x67, 0x61, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x4d, 0x79, 0x72, 0x69,
		0x61, 0x5f, 0x46, 0x49, 0x56, 0x45, 0x46, 0x69, 0x76, 0x65, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x34, 0x47, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x34, 0x47,
		0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x57, 0x69, 0x64, 0x65, 0x5f, 0x34, 0x47, 0x57, 0x69, 0x64,
		0x65, 0x20, 0x34, 0x47, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x57, 0x69, 0x64, 0x65, 0x5f, 0x32,
		0x57, 0x69, 0x64, 0x65, 0x20, 0x32, 0x4d, 0x79, 0x72, 0x6f, 0x73, 0x4d, 0x79, 0x73, 0x74, 0x65,
		0x72, 0x79, 0x4d, 0x49, 0x44, 0x2d, 0x24, 0x31, 0x4e, 0x2d, 0x6f, 0x6e, 0x65, 0x4e, 0x50, 0x61,
		0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x4e, 0x50,
		0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x70, 0x61, 0x64, 0x53, 0x4e, 0x50, 0x61, 0x64, 0x20,
		0x53, 0x4e, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4e, 0x41, 0x53, 0x43, 0x4f, 0x54, 0x41, 0x4e,
		0x47, 0x4f, 0x20, 0x37, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x37, 0x53, 0x4e, 0x41, 0x50, 0x5f,
		0x50, 0x52, 0x4f, 0x53, 0x6e, 0x61, 0x70, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x45, 0x43, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x73, 0x20, 0x41, 0x6d, 0x61, 0x64, 0x61, 0x6e, 0x61, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x73, 0x20, 0x55, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20,
		0x24, 0x31, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x54, 0x31, 0x30, 0x20,
		0x46, 0x48, 0x44, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x4c, 0x41, 0x56, 0x49, 0x45,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x54, 0x31, 0x32, 0x20, 0x51, 0x48, 0x44, 0x4c, 0x41, 0x56, 0x49,
		0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x54, 0x31, 0x31, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49,
		0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x54, 0x37, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49, 0x45,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x54, 0x38, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x54, 0x45, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x54, 0x53, 0x24, 0x31, 0x4e, 0x45, 0x4b, 0x4f, 0x4c, 0x54,
		0x2d, 0x24, 0x31, 0x4e, 0x45, 0x54, 0x57, 0x49, 0x54, 0x4e, 0x45, 0x56, 0x49, 0x52, 0x4e, 0x45,
		0x58, 0x42, 0x4f, 0x58, 0x4d, 0x58, 0x51, 0x2d, 0x50, 0x72, 0x6f, 0x2d, 0x4e, 0x45, 0x58, 0x42,
		0x4f, 0x58, 0x4d, 0x58, 0x51, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x58, 0x51, 0x2d, 0x4e, 0x45, 0x58,
		0x42, 0x4f, 0x58, 0x4d, 0x58, 0x51, 0x4e, 0x45, 0x58, 0x4f, 0x4e, 0x4e, 0x45, 0x58, 0x54, 0x4e,
		0x47, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x63, 0x73, 0x4e, 0x47, 0x4d, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x35, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x32, 0x47, 0x42, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x6f, 0x75, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x50,
		0x24, 0x31, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x4c, 0x44,
		0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x20, 0x4c, 0x4e, 0x47, 0x70,
		0x6f, 0x6e, 0x4e, 0x49, 0x4e, 0x45, 0x54, 0x45, 0x43, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x54, 0x61,
		0x62, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d,
		0x20, 0x31, 0x30, 0x20, 0x47, 0x33, 0x4e, 0x49, 0x4e, 0x45, 0x54, 0x4f, 0x4c, 0x4f, 0x47, 0x59,
		0x4e, 0x4f, 0x41, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x46, 0x6f, 0x72, 0x74, 0x65, 0x48, 0x75, 0x6d,
		0x6d, 0x65, 0x72, 0x4c, 0x45, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x4c, 0x45, 0x48, 0x75,
		0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x5f, 0x52, 0x48, 0x75, 0x6d, 0x6d, 0x65,
		0x72, 0x20, 0x52, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x20,
		0x53, 0x45, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x45, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x53, 0x45, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x48, 0x33, 0x53, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x20, 0x48, 0x33, 0x4c, 0x6f, 0x6f, 0x70, 0x48, 0x34, 0x53, 0x45, 0x4d, 0x47, 0x31, 0x32, 0x48,
		0x34, 0x34, 0x53, 0x45, 0x48, 0x31, 0x30, 0x4c, 0x45, 0x53, 0x50, 0x52, 0x49, 0x4e, 0x54, 0x34,
		0x47, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x53, 0x45, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x53, 0x45,
		0x56, 0x69, 0x76, 0x6f, 0x20, 0x34, 0x47, 0x4e, 0x4f, 0x42, 0x55, 0x58, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x4e, 0x58, 0x35, 0x4e, 0x4f, 0x47, 0x41, 0x4e, 0x4f,
		0x47, 0x41, 0x50, 0x41, 0x44, 0x20, 0x37, 0x47, 0x4e, 0x4f, 0x47, 0x41, 0x50, 0x41, 0x44, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x47, 0x48, 0x44, 0x4e, 0x4f, 0x47, 0x41, 0x50, 0x41, 0x44,
		0x20, 0x31, 0x30, 0x48, 0x44, 0x50, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x43, 0x20, 0x4c, 0x69,
		0x76, 0x65, 0x4e, 0x4f, 0x56, 0x4f, 0x4e, 0x54, 0x54, 0x20, 0x57, 0x65, 0x73, 0x74, 0x48, 0x69,
		0x6b, 0x61, 0x72, 0x69, 0x42, 0x6f, 0x78, 0x2b, 0x20, 0x24, 0x31, 0x4e, 0x55, 0x55, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x20, 0x38, 0x53, 0x36, 0x30, 0x30, 0x33, 0x4c,
		0x58, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x35, 0x37, 0x30, 0x34, 0x4c, 0x53, 0x36, 0x35,
		0x31, 0x32, 0x4c, 0x41, 0x31, 0x35, 0x53, 0x36, 0x30, 0x30, 0x31, 0x4c, 0x53, 0x35, 0x35, 0x30,
		0x31, 0x4c, 0x4d, 0x31, 0x39, 0x4e, 0x35, 0x37, 0x30, 0x32, 0x4c, 0x53, 0x36, 0x35, 0x30, 0x31,
		0x4c, 0x4e, 0x35, 0x35, 0x30, 0x31, 0x4c, 0x41, 0x35, 0x4c, 0x4e, 0x35, 0x30, 0x30, 0x32, 0x4c,
		0x41, 0x37, 0x4c, 0x53, 0x36, 0x33, 0x30, 0x33, 0x4c, 0x41, 0x39, 0x4c, 0x4e, 0x35, 0x35, 0x30,
		0x32, 0x4c, 0x41, 0x31, 0x30, 0x4c, 0x4e, 0x36, 0x30, 0x30, 0x31, 0x4c, 0x41, 0x32, 0x33, 0x53,
		0x35, 0x37, 0x30, 0x31, 0x4c, 0x4d, 0x34, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x59, 0x58, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x59, 0x58, 0x5f, 0x41, 0x31, 0x41, 0x6c, 0x74, 0x65,
		0x72, 0x4e, 0x59, 0x58, 0x5f, 0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x4e, 0x59, 0x58, 0x5f, 0x45, 0x47,
		0x4f, 0x45, 0x67, 0x6f, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x45, 0x4e, 0x49, 0x58, 0x46, 0x65, 0x6e,
		0x69, 0x78, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c, 0x59, 0x5f, 0x49, 0x49, 0x46, 0x6c, 0x79, 0x20,
		0x49, 0x49, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c, 0x59, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x46, 0x6c,
		0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c, 0x59, 0x4e, 0x59, 0x58,
		0x5f, 0x48, 0x49, 0x54, 0x48, 0x69, 0x74, 0x4e, 0x59, 0x58, 0x5f, 0x4a, 0x41, 0x4b, 0x4a, 0x61,
		0x6b, 0x4e, 0x59, 0x58, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x4a, 0x6f, 0x69, 0x6e, 0x4e, 0x59, 0x58,
		0x5f, 0x4e, 0x4f, 0x42, 0x41, 0x5f, 0x49, 0x49, 0x4e, 0x6f, 0x62, 0x61, 0x20, 0x49, 0x49, 0x4e,
		0x59, 0x58, 0x5f, 0x4e, 0x4f, 0x42, 0x41, 0x4e, 0x6f, 0x62, 0x61, 0x4e, 0x59, 0x58, 0x5f, 0x4f,
		0x52, 0x42, 0x49, 0x53, 0x4f, 0x72, 0x62, 0x69, 0x73, 0x52, 0x65, 0x78, 0x4e, 0x59, 0x58, 0x5f,
		0x53, 0x48, 0x41, 0x44, 0x45, 0x53, 0x68, 0x61, 0x64, 0x65, 0x4e, 0x59, 0x58, 0x5f, 0x53, 0x4b,
		0x59, 0x53, 0x6b, 0x79, 0x4e, 0x59, 0x58, 0x5f, 0x53, 0x50, 0x41, 0x52, 0x4b, 0x4e, 0x59, 0x58,
		0x5f, 0x56, 0x4f, 0x58, 0x4e, 0x59, 0x58, 0x5f, 0x5a, 0x45, 0x55, 0x5a, 0x5f, 0x48, 0x44, 0x5a,
		0x65, 0x75, 0x73, 0x20, 0x48, 0x44, 0x47, 0x4c, 0x41, 0x4d, 0x41, 0x52, 0x47, 0x4f, 0x4e, 0x6f,
		0x72, 0x62, 0x69, 0x73, 0x4e, 0x61, 0x62, 0x69, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x48, 0x44, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x42, 0x69, 0x67, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x48, 0x44, 0x20, 0x24, 0x31, 0x2e, 0x30, 0x22, 0x4e, 0x42, 0x54, 0x59, 0x30, 0x37, 0x53,
		0x4d, 0x4b, 0x47, 0x42, 0x61, 0x72, 0x62, 0x69, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x4e, 0x42, 0x46, 0x50, 0x30, 0x37, 0x50, 0x4d, 0x4b, 0x47, 0x46, 0x69, 0x73, 0x68,
		0x65, 0x72, 0x20, 0x50, 0x72, 0x69, 0x63, 0x65, 0x20, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
		0x67, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x4e, 0x42, 0x30, 0x32, 0x2d,
		0x4e, 0x56, 0x37, 0x41, 0x32, 0x53, 0x20, 0x54, 0x61, 0x62, 0x4e, 0x41, 0x42, 0x49, 0x32, 0x2d,
		0x4e, 0x56, 0x37, 0x41, 0x32, 0x20, 0x54, 0x61, 0x62, 0x4e, 0x61, 0x6e, 0x68, 0x6f, 0x46, 0x31,
		0x30, 0x31, 0x4e, 0x61, 0x6f, 0x6d, 0x69, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x6d, 0x62,
		0x61, 0x72, 0x44, 0x61, 0x6d, 0x6d, 0x61, 0x72, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
		0x4e, 0x61, 0x76, 0x52, 0x6f, 0x61, 0x64, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x79, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x68, 0x61, 0x6e, 0x64, 0x79, 0x4e, 0x65, 0x78, 0x6f,
		0x20, 0x48, 0x61, 0x6e, 0x64, 0x79, 0x4e, 0x45, 0x58, 0x4f, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54,
		0x20, 0x44, 0x55, 0x4f, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x44,
		0x75, 0x6f, 0x4e, 0x45, 0x58, 0x4f, 0x20, 0x45, 0x56, 0x4f, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x45,
		0x76, 0x6f, 0x4d, 0x4f, 0x56, 0x49, 0x4f, 0x20, 0x32, 0x4d, 0x6f, 0x76, 0x69, 0x6f, 0x20, 0x32,
		0x4e, 0x61, 0x76, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x50, 0x2d, 0x37, 0x35, 0x32, 0x47, 0x6f, 0x4e,
		0x50, 0x2d, 0x37, 0x35, 0x32, 0x20, 0x47, 0x6f, 0x4e, 0x61, 0x76, 0x69, 0x74, 0x65, 0x63, 0x68,
		0x4e, 0x61, 0x76, 0x69, 0x74, 0x65, 0x6c, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x24, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x45, 0x39, 0x30, 0x30, 0x20, 0x46, 0x75, 0x6c, 0x6c, 0x20, 0x48,
		0x44, 0x4e, 0x61, 0x76, 0x6f, 0x6e, 0x4d, 0x69, 0x7a, 0x75, 0x20, 0x4d, 0x35, 0x30, 0x35, 0x20,
		0x4c, 0x54, 0x45, 0x4d, 0x69, 0x7a, 0x75, 0x20, 0x24, 0x31, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d,
		0x65, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x46, 0x69, 0x6e,
		0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x46, 0x69,
		0x6e, 0x65, 0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20,
		0x46, 0x69, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65,
		0x20, 0x46, 0x69, 0x6e, 0x65, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x43, 0x68, 0x69,
		0x65, 0x66, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x75, 0x72, 0x65, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x75, 0x72, 0x65, 0x53,
		0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x75, 0x72, 0x65, 0x20, 0x4d,
		0x69, 0x63, 0x72, 0x6f, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54,
		0x34, 0x30, 0x30, 0x20, 0x33, 0x47, 0x20, 0x32, 0x30, 0x31, 0x37, 0x54, 0x34, 0x30, 0x30, 0x20,
		0x33, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75,
		0x6d, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x24, 0x31, 0x50, 0x6c, 0x61, 0x74,
		0x69, 0x6e, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x4f, 0x72, 0x70, 0x68, 0x65, 0x75, 0x73, 0x20, 0x33, 0x47, 0x50, 0x72,
		0x65, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x52, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x20,
		0x33, 0x47, 0x20, 0x38, 0x47, 0x42, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x4e, 0x65, 0x63, 0x6e, 0x6f, 0x74, 0x4e, 0x65, 0x64, 0x61, 0x70, 0x68, 0x6f,
		0x6e, 0x65, 0x4e, 0x65, 0x66, 0x66, 0x6f, 0x73, 0x43, 0x35, 0x4c, 0x59, 0x35, 0x30, 0x4e, 0x65,
		0x66, 0x66, 0x6f, 0x73, 0x20, 0x58, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x6f, 0x6c,
		0x69, 0x78, 0x54, 0x37, 0x4e, 0x65, 0x6f, 0x6d, 0x69, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x49, 0x51,
		0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x24, 0x31, 0x47, 0x54, 0x61, 0x62,
		0x20, 0x37, 0x22, 0x20, 0x24, 0x31, 0x47, 0x4e, 0x51, 0x54, 0x2d, 0x37, 0x57, 0x54, 0x61, 0x62,
		0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4e, 0x65, 0x6f, 0x72, 0x65, 0x67, 0x65, 0x6e,
		0x74, 0x4b, 0x54, 0x31, 0x30, 0x30, 0x37, 0x4e, 0x65, 0x74, 0x42, 0x6f, 0x78, 0x4e, 0x45, 0x54,
		0x42, 0x4f, 0x58, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x4e, 0x65, 0x74, 0x67, 0x65, 0x61,
		0x72, 0x47, 0x54, 0x56, 0x31, 0x30, 0x30, 0x4e, 0x65, 0x6f, 0x54, 0x56, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x4e, 0x65, 0x74, 0x6d, 0x61, 0x6b, 0x4e, 0x65, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37,
		0x4e, 0x65, 0x75, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x49, 0x4d, 0x2d, 0x4e, 0x65, 0x75, 0x54,
		0x61, 0x62, 0x4e, 0x65, 0x77, 0x20, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x65, 0x77,
		0x20, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x4e, 0x65, 0x77, 0x61, 0x6c, 0x4e, 0x65, 0x77, 0x67,
		0x65, 0x6e, 0x4e, 0x65, 0x77, 0x6c, 0x61, 0x6e, 0x64, 0x4e, 0x4c, 0x53, 0x2d, 0x4d, 0x54, 0x39,
		0x30, 0x4d, 0x54, 0x39, 0x30, 0x20, 0x4f, 0x72, 0x63, 0x61, 0x4e, 0x4c, 0x53, 0x2d, 0x4d, 0x54,
		0x36, 0x35, 0x4d, 0x54, 0x36, 0x35, 0x20, 0x42, 0x65, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x49, 0x56,
		0x4e, 0x4c, 0x53, 0x2d, 0x4e, 0x46, 0x54, 0x31, 0x30, 0x4e, 0x46, 0x54, 0x31, 0x30, 0x20, 0x50,
		0x69, 0x6c, 0x6f, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x77, 0x6d, 0x61, 0x6e, 0x4e, 0x65,
		0x77, 0x73, 0x4d, 0x79, 0x4e, 0x65, 0x77, 0x73, 0x64, 0x61, 0x79, 0x4e, 0x65, 0x78, 0x61, 0x4e,
		0x65, 0x78, 0x69, 0x61, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x26, 0x20, 0x4e, 0x65, 0x78, 0x74,
		0x53, 0x74, 0x61, 0x72, 0x32, 0x30, 0x30, 0x30, 0x20, 0x57, 0x69, 0x46, 0x69, 0x32, 0x30, 0x30,
		0x30, 0x2d, 0x48, 0x44, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x32, 0x30, 0x30, 0x30, 0x20, 0x48, 0x44,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x30, 0x37, 0x31, 0x4d, 0x79, 0x42, 0x6f, 0x78, 0x4e, 0x65,
		0x78, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4e, 0x58, 0x30, 0x30, 0x38, 0x48, 0x44, 0x38, 0x47, 0x50,
		0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x38, 0x20, 0x48, 0x44, 0x4e, 0x58, 0x41, 0x38, 0x51,
		0x43, 0x31, 0x31, 0x36, 0x41, 0x72, 0x65, 0x73, 0x20, 0x38, 0x4e, 0x58, 0x41, 0x38, 0x4c, 0x54,
		0x45, 0x31, 0x31, 0x36, 0x41, 0x72, 0x65, 0x73, 0x20, 0x38, 0x4c, 0x4e, 0x58, 0x31, 0x36, 0x41,
		0x38, 0x31, 0x31, 0x36, 0x4b, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x38, 0x4e, 0x58, 0x31, 0x36,
		0x41, 0x31, 0x30, 0x31, 0x33, 0x32, 0x53, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x31, 0x30, 0x4e,
		0x58, 0x31, 0x36, 0x41, 0x31, 0x31, 0x32, 0x36, 0x34, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x31,
		0x31, 0x4e, 0x45, 0x58, 0x54, 0x31, 0x30, 0x31, 0x35, 0x42, 0x41, 0x50, 0x41, 0x72, 0x65, 0x73,
		0x20, 0x31, 0x30, 0x4e, 0x58, 0x41, 0x31, 0x30, 0x31, 0x4c, 0x54, 0x45, 0x31, 0x31, 0x36, 0x41,
		0x72, 0x65, 0x73, 0x20, 0x31, 0x30, 0x4c, 0x4e, 0x58, 0x41, 0x31, 0x31, 0x36, 0x51, 0x43, 0x31,
		0x36, 0x34, 0x41, 0x72, 0x65, 0x73, 0x20, 0x31, 0x31, 0x4e, 0x58, 0x4d, 0x39, 0x30, 0x38, 0x48,
		0x43, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x39, 0x4e, 0x58, 0x30, 0x31, 0x30, 0x48,
		0x49, 0x38, 0x47, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x20, 0x48, 0x69,
		0x4e, 0x58, 0x37, 0x38, 0x35, 0x51, 0x43, 0x38, 0x47, 0x4e, 0x58, 0x4d, 0x39, 0x30, 0x30, 0x4d,
		0x43, 0x38, 0x20, 0x48, 0x44, 0x4e, 0x58, 0x4d, 0x37, 0x32, 0x36, 0x50, 0x72, 0x65, 0x6d, 0x69,
		0x75, 0x6d, 0x20, 0x37, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x61, 0x62, 0x4e, 0x65, 0x78, 0x74, 0x62,
		0x69, 0x74, 0x4e, 0x6f, 0x61, 0x69, 0x6e, 0x4e, 0x4f, 0x41, 0x49, 0x4e, 0x4e, 0x6f, 0x62, 0x62,
		0x79, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x78, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x36, 0x54, 0x41, 0x2d,
		0x31, 0x30, 0x34, 0x31, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x38, 0x20, 0x53, 0x69, 0x72, 0x6f,
		0x63, 0x63, 0x6f, 0x38, 0x20, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x63, 0x6f, 0x4e, 0x6f, 0x6b, 0x69,
		0x61, 0x20, 0x37, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x37, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x36, 0x2e,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x35, 0x2e, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x2e,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x20, 0x56, 0x20, 0x54, 0x65, 0x6c, 0x6c,
		0x61, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x38, 0x20, 0x56, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57,
		0x38, 0x56, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x58, 0x2b, 0x43, 0x31, 0x30, 0x30, 0x4e, 0x31,
		0x35, 0x31, 0x44, 0x4c, 0x43, 0x32, 0x30, 0x30, 0x4e, 0x31, 0x35, 0x30, 0x44, 0x4c, 0x4e, 0x31,
		0x33, 0x37, 0x34, 0x44, 0x4c, 0x47, 0x33, 0x30, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x31, 0x35, 0x35,
		0x44, 0x4c, 0x4e, 0x31, 0x35, 0x33, 0x30, 0x44, 0x4c, 0x47, 0x34, 0x30, 0x30, 0x20, 0x35, 0x47,
		0x58, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x52, 0x58, 0x2d, 0x35, 0x31, 0x20, 0x4e, 0x39, 0x30,
		0x30, 0x4e, 0x39, 0x30, 0x30, 0x41, 0x73, 0x68, 0x61, 0x20, 0x35, 0x30, 0x30, 0x35, 0x31, 0x33,
		0x30, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4e, 0x6f, 0x6b,
		0x69, 0x61, 0x35, 0x32, 0x33, 0x30, 0x4e, 0x75, 0x72, 0x6f, 0x6e, 0x4e, 0x6f, 0x6b, 0x69, 0x61,
		0x35, 0x32, 0x33, 0x33, 0x35, 0x32, 0x33, 0x33, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x35, 0x38, 0x30,
		0x30, 0x64, 0x2d, 0x31, 0x35, 0x38, 0x30, 0x30, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4d,
		0x75, 0x73, 0x69, 0x63, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x36, 0x32, 0x31, 0x30, 0x4e, 0x61, 0x76,
		0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x53,
		0x61, 0x70, 0x70, 0x68, 0x69, 0x72, 0x65, 0x20, 0x41, 0x72, 0x74, 0x65, 0x4e, 0x4f, 0x4b, 0x49,
		0x41, 0x2d, 0x52, 0x48, 0x2d, 0x31, 0x37, 0x32, 0x32, 0x38, 0x30, 0x4e, 0x4f, 0x4b, 0x49, 0x41,
		0x2d, 0x52, 0x48, 0x2d, 0x32, 0x37, 0x36, 0x32, 0x32, 0x35, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d,
		0x52, 0x48, 0x2d, 0x33, 0x34, 0x36, 0x35, 0x38, 0x35, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d, 0x52,
		0x48, 0x2d, 0x34, 0x38, 0x33, 0x31, 0x30, 0x35, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d, 0x52, 0x4d,
		0x2d, 0x31, 0x31, 0x33, 0x32, 0x30, 0x35, 0x38, 0x30, 0x38, 0x20, 0x50, 0x75, 0x72, 0x65, 0x56,
		0x69, 0x65, 0x77, 0x24, 0x31, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x24, 0x31, 0x20,
		0x53, 0x6c, 0x69, 0x64, 0x65, 0x24, 0x31, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x41, 0x73, 0x68, 0x61,
		0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x32, 0x30, 0x54, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x35, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x32, 0x36, 0x52,
		0x4d, 0x2d, 0x38, 0x34, 0x36, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x32, 0x30, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x35,
		0x52, 0x4d, 0x2d, 0x31, 0x30, 0x32, 0x37, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x36,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x31, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37,
		0x32, 0x30, 0x54, 0x52, 0x4d, 0x2d, 0x38, 0x38, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37,
		0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x37, 0x33, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x30, 0x30, 0x43, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x38, 0x30, 0x30, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x38, 0x32, 0x30,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x32, 0x30, 0x52, 0x4d, 0x2d, 0x39, 0x38, 0x34, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x30,
		0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x39, 0x32, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x32, 0x39, 0x4c, 0x75, 0x6d, 0x69,
		0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x4d, 0x2d, 0x31, 0x30, 0x34, 0x35, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x39, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x31, 0x30, 0x32, 0x30,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x31, 0x35, 0x32, 0x30, 0x2e, 0x31, 0x54, 0x24, 0x31, 0x53,
		0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x65, 0x6d, 0x6f,
		0x20, 0x52, 0x58, 0x2d, 0x33, 0x34, 0x4e, 0x38, 0x30, 0x30, 0x4e, 0x6f, 0x6d, 0x69, 0x45, 0x76,
		0x6f, 0x20, 0x4d, 0x32, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x33, 0x45,
		0x76, 0x6f, 0x20, 0x4d, 0x31, 0x69, 0x35, 0x30, 0x36, 0x20, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x69,
		0x35, 0x37, 0x33, 0x30, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x74,
		0x65, 0x2d, 0x58, 0x49, 0x72, 0x6f, 0x6e, 0x2d, 0x58, 0x49, 0x72, 0x6f, 0x6e, 0x2d, 0x58, 0x31,
		0x49, 0x72, 0x6f, 0x6e, 0x2d, 0x4d, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x34, 0x45, 0x76, 0x6f, 0x20,
		0x58, 0x32, 0x45, 0x76, 0x6f, 0x20, 0x58, 0x45, 0x76, 0x6f, 0x20, 0x58, 0x31, 0x45, 0x76, 0x6f,
		0x20, 0x5a, 0x42, 0x65, 0x61, 0x74, 0x20, 0x4d, 0x42, 0x65, 0x61, 0x74, 0x20, 0x4d, 0x31, 0x53,
		0x70, 0x61, 0x63, 0x65, 0x20, 0x58, 0x32, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x53, 0x70,
		0x61, 0x63, 0x65, 0x20, 0x58, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x31, 0x49, 0x6e, 0x66,
		0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x58, 0x31, 0x4a, 0x75, 0x6d, 0x70, 0x43, 0x31, 0x30, 0x31,
		0x30, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x32, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x32, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x20, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x33,
		0x47, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x20, 0x33, 0x47, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20,
		0x50, 0x72, 0x6f, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x32, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20,
		0x33, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x33, 0x20, 0x33, 0x47, 0x43,
		0x6f, 0x72, 0x73, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x33, 0x47, 0x43,
		0x6f, 0x72, 0x73, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20,
		0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x33,
		0x20, 0x33, 0x47, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x32, 0x20, 0x33, 0x47, 0x4c, 0x69, 0x62,
		0x72, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x34, 0x20,
		0x33, 0x47, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x6d,
		0x75, 0x54, 0x31, 0x38, 0x53, 0x33, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x33, 0x30, 0x4e,
		0x6f, 0x6f, 0x6e, 0x74, 0x65, 0x63, 0x4e, 0x6f, 0x6f, 0x6e, 0x74, 0x65, 0x63, 0x20, 0x4e, 0x6f,
		0x72, 0x64, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x4e, 0x6f, 0x72, 0x64, 0x6d, 0x65, 0x6e, 0x64, 0x65,
		0x4e, 0x6f, 0x72, 0x74, 0x68, 0x54, 0x65, 0x63, 0x68, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61,
		0x64, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x4e, 0x6f, 0x73, 0x4e, 0x6f, 0x76, 0x75, 0x20, 0x49,
		0x49, 0x49, 0x4e, 0x6f, 0x76, 0x75, 0x20, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x75, 0x4e, 0x65, 0x76,
		0x61, 0x20, 0x38, 0x30, 0x52, 0x6f, 0x79, 0x61, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x20,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x30, 0x36, 0x33, 0x41, 0x31, 0x34, 0x32, 0x32, 0x61, 0x4e,
		0x6f, 0x75, 0x73, 0x4e, 0x53, 0x35, 0x35, 0x31, 0x31, 0x4e, 0x6f, 0x76, 0x61, 0x63, 0x6f, 0x6d,
		0x53, 0x50, 0x59, 0x42, 0x4f, 0x58, 0x53, 0x31, 0x31, 0x53, 0x70, 0x79, 0x20, 0x42, 0x6f, 0x78,
		0x20, 0x53, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x70, 0x79, 0x20, 0x42, 0x6f, 0x78,
		0x20, 0x53, 0x31, 0x31, 0x4e, 0x6f, 0x76, 0x65, 0x78, 0x4e, 0x6f, 0x76, 0x65, 0x79, 0x46, 0x6f,
		0x72, 0x63, 0x65, 0x20, 0x24, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x41, 0x31, 0x30, 0x50,
		0x72, 0x6f, 0x20, 0x4b, 0x31, 0x30, 0x4e, 0x6f, 0x76, 0x69, 0x53, 0x65, 0x61, 0x4e, 0x75, 0x41,
		0x6e, 0x73, 0x4e, 0x45, 0x4f, 0x20, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x4e, 0x75,
		0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x62, 0x69, 0x61, 0x4e, 0x50, 0x30, 0x31, 0x4a,
		0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67,
		0x20, 0x50, 0x61, 0x64, 0x38, 0x31, 0x35, 0x30, 0x4e, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x47, 0x5a,
		0x32, 0x33, 0x35, 0x32, 0x4e, 0x4e, 0x65, 0x6f, 0x20, 0x32, 0x20, 0x35, 0x47, 0x4e, 0x58, 0x37,
		0x31, 0x31, 0x4a, 0x5a, 0x35, 0x30, 0x4e, 0x58, 0x37, 0x31, 0x32, 0x4a, 0x5a, 0x35, 0x30, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x58, 0x37, 0x31, 0x33, 0x4a, 0x5a, 0x35, 0x30, 0x53, 0x20,
		0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x32, 0x31, 0x4a, 0x5a, 0x36, 0x30, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x4e, 0x58, 0x36, 0x36, 0x37, 0x4a, 0x5a, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e,
		0x58, 0x37, 0x30, 0x31, 0x4a, 0x5a, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x30,
		0x32, 0x4a, 0x5a, 0x34, 0x30, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x30, 0x39, 0x4a,
		0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4e,
		0x58, 0x37, 0x32, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x38,
		0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x36, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61,
		0x67, 0x69, 0x63, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x30, 0x39, 0x53, 0x52,
		0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x37, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x52,
		0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x37, 0x4e, 0x58, 0x36, 0x36, 0x39, 0x4a,
		0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x36, 0x4e, 0x58, 0x36, 0x36, 0x36,
		0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x36, 0x52, 0x4e, 0x58, 0x36,
		0x31, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x4d, 0x61, 0x72,
		0x73, 0x4e, 0x58, 0x36, 0x32, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63,
		0x20, 0x33, 0x5a, 0x35, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x5a, 0x35, 0x53, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x4e, 0x58, 0x35, 0x30, 0x33, 0x41, 0x5a, 0x35, 0x53, 0x4e, 0x58, 0x35, 0x30, 0x36, 0x4a,
		0x5a, 0x37, 0x4e, 0x58, 0x35, 0x30, 0x37, 0x4a, 0x5a, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e,
		0x58, 0x35, 0x30, 0x35, 0x4a, 0x5a, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x58, 0x35, 0x30, 0x38,
		0x4a, 0x5a, 0x39, 0x5a, 0x39, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x5a, 0x39, 0x20, 0x4d, 0x61, 0x78,
		0x4e, 0x58, 0x35, 0x31, 0x32, 0x4a, 0x5a, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x4e, 0x58, 0x35, 0x33, 0x31, 0x4a, 0x5a, 0x31, 0x31, 0x4e, 0x58, 0x35, 0x32, 0x33, 0x4a,
		0x5f, 0x56, 0x31, 0x5a, 0x31, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x31, 0x31, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x53, 0x5a, 0x31, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x36, 0x30,
		0x36, 0x4a, 0x5a, 0x31, 0x38, 0x4e, 0x58, 0x36, 0x31, 0x36, 0x4a, 0x5a, 0x31, 0x38, 0x53, 0x4e,
		0x58, 0x36, 0x31, 0x31, 0x4a, 0x5a, 0x31, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35,
		0x35, 0x31, 0x4a, 0x4e, 0x58, 0x35, 0x36, 0x33, 0x4a, 0x5a, 0x31, 0x37, 0x5a, 0x31, 0x37, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35, 0x38, 0x39, 0x4a, 0x5a, 0x31, 0x37, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x53, 0x4e, 0x58, 0x35, 0x39, 0x31, 0x4a, 0x5a, 0x31, 0x37, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4e, 0x58, 0x35, 0x39, 0x35, 0x4a, 0x5a, 0x31, 0x37, 0x53, 0x4e, 0x58, 0x36, 0x31,
		0x32, 0x4a, 0x56, 0x31, 0x38, 0x4e, 0x58, 0x36, 0x32, 0x37, 0x4a, 0x5a, 0x32, 0x30, 0x4e, 0x58,
		0x35, 0x31, 0x33, 0x4a, 0x4d, 0x79, 0x20, 0x50, 0x72, 0x61, 0x67, 0x75, 0x65, 0x4e, 0x58, 0x36,
		0x30, 0x31, 0x4a, 0x4e, 0x58, 0x36, 0x30, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x4e, 0x58, 0x36, 0x35, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69,
		0x63, 0x20, 0x35, 0x47, 0x4e, 0x58, 0x36, 0x35, 0x31, 0x4a, 0x4e, 0x58, 0x35, 0x37, 0x33, 0x4a,
		0x4d, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x58, 0x39, 0x30, 0x37, 0x4a, 0x4d, 0x32, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x4e, 0x58, 0x35, 0x34, 0x31, 0x4a, 0x4e, 0x31, 0x4e, 0x58, 0x35, 0x39,
		0x37, 0x4a, 0x4e, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x58, 0x35, 0x37, 0x35, 0x4a, 0x4e,
		0x32, 0x4e, 0x33, 0x4e, 0x75, 0x62, 0x69, 0x61, 0x20, 0x38, 0x30, 0x31, 0x31, 0x4e, 0x38, 0x30,
		0x4e, 0x75, 0x76, 0x6f, 0x4e, 0x44, 0x34, 0x35, 0x4e, 0x76, 0x69, 0x64, 0x69, 0x61, 0x54, 0x65,
		0x67, 0x72, 0x61, 0x4e, 0x6f, 0x74, 0x65, 0x2d, 0x50, 0x31, 0x36, 0x34, 0x30, 0x54, 0x65, 0x67,
		0x72, 0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x31, 0x36, 0x34, 0x30, 0x53, 0x48, 0x49,
		0x45, 0x4c, 0x44, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44,
		0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x4e, 0x56, 0x49, 0x44, 0x49,
		0x41, 0x5f, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x32, 0x30, 0x31,
		0x39, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x54, 0x56, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x56,
		0x49, 0x44, 0x49, 0x41, 0x20, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x48, 0x49, 0x45, 0x4c,
		0x44, 0x20, 0x54, 0x56, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44,
		0x20, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x2b, 0x41, 0x69, 0x72, 0x33, 0x36,
		0x30, 0x20, 0x48, 0x44, 0x20, 0x32, 0x2e, 0x30, 0x33, 0x36, 0x30, 0x20, 0x48, 0x44, 0x33, 0x36,
		0x30, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x2e, 0x30,
		0x33, 0x36, 0x30, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x36,
		0x30, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x48, 0x44,
		0x54, 0x56, 0x46, 0x61, 0x62, 0x20, 0x47, 0x6f, 0x4f, 0x32, 0x4f, 0x41, 0x53, 0x59, 0x53, 0x4f,
		0x49, 0x4e, 0x4f, 0x4d, 0x4f, 0x4b, 0x53, 0x49, 0x4f, 0x4b, 0x57, 0x55, 0x53, 0x49, 0x47, 0x4d,
		0x41, 0x50, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x4c, 0x54, 0x4f, 0x4f, 0x4d, 0x49, 0x58,
		0x58, 0x36, 0x30, 0x30, 0x20, 0x4e, 0x46, 0x43, 0x4f, 0x4e, 0x4e, 0x32, 0x6b, 0x20, 0x54, 0x56,
		0x20, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x32, 0x4b, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63,
		0x6b, 0x4f, 0x4e, 0x56, 0x4f, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x75, 0x6d, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x54, 0x56, 0x4f, 0x4e, 0x59, 0x58, 0x20,
		0x42, 0x4f, 0x4f, 0x58, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x20, 0x24, 0x31, 0x4e, 0x6f, 0x76, 0x61,
		0x41, 0x69, 0x72, 0x43, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x4d, 0x43,
		0x5f, 0x4e, 0x6f, 0x76, 0x61, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x69, 0x72, 0x32,
		0x50, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x41, 0x69, 0x72, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4e, 0x6f, 0x74, 0x65, 0x41, 0x69, 0x72, 0x32, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x32, 0x4e, 0x6f, 0x76, 0x61, 0x33, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x33, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x6f, 0x6b, 0x65, 0x32, 0x43, 0x6f, 0x6c,
		0x6f, 0x72, 0x50, 0x6f, 0x6b, 0x65, 0x20, 0x32, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x6f,
		0x6b, 0x65, 0x33, 0x50, 0x6f, 0x6b, 0x65, 0x20, 0x33, 0x4b, 0x41, 0x4e, 0x54, 0x32, 0x4b, 0x61,
		0x6e, 0x74, 0x20, 0x32, 0x4b, 0x6f, 0x6e, 0x20, 0x54, 0x69, 0x6b, 0x69, 0x20, 0x24, 0x31, 0x4c,
		0x6f, 0x6d, 0x6f, 0x6e, 0x6f, 0x73, 0x6f, 0x76, 0x46, 0x61, 0x75, 0x73, 0x74, 0x20, 0x24, 0x31,
		0x44, 0x61, 0x72, 0x77, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x4d, 0x43, 0x5f, 0x47, 0x41, 0x4d, 0x41,
		0x34, 0x47, 0x61, 0x6d, 0x61, 0x20, 0x34, 0x47, 0x41, 0x4c, 0x49, 0x4c, 0x45, 0x4f, 0x47, 0x61,
		0x6c, 0x69, 0x6c, 0x65, 0x6f, 0x47, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x37, 0x47, 0x6f, 0x20,
		0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x37, 0x4d, 0x43, 0x5f, 0x43, 0x72, 0x69, 0x73, 0x74, 0x6f,
		0x34, 0x4d, 0x6f, 0x6e, 0x74, 0x65, 0x20, 0x43, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x20, 0x34, 0x4c,
		0x69, 0x76, 0x69, 0x6e, 0x67, 0x20, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x4e, 0x6f,
		0x74, 0x65, 0x41, 0x69, 0x72, 0x33, 0x43, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x33, 0x43, 0x54, 0x61, 0x62, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x43, 0x50, 0x72, 0x6f, 0x54, 0x61,
		0x62, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x50, 0x50,
		0x4f, 0x41, 0x31, 0x31, 0x41, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x4a, 0x55, 0x31, 0x31, 0x30,
		0x41, 0x31, 0x69, 0x20, 0x35, 0x47, 0x50, 0x4a, 0x53, 0x31, 0x31, 0x30, 0x41, 0x32, 0x78, 0x20,
		0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x36, 0x38, 0x31, 0x41, 0x33, 0x78, 0x20, 0x35, 0x47, 0x50,
		0x4a, 0x42, 0x31, 0x31, 0x30, 0x41, 0x32, 0x20, 0x35, 0x47, 0x50, 0x4b, 0x41, 0x31, 0x31, 0x30,
		0x41, 0x33, 0x20, 0x35, 0x47, 0x41, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x31,
		0x31, 0x78, 0x41, 0x31, 0x32, 0x41, 0x31, 0x35, 0x73, 0x41, 0x31, 0x36, 0x73, 0x43, 0x50, 0x48,
		0x32, 0x34, 0x32, 0x31, 0x41, 0x31, 0x36, 0x65, 0x41, 0x31, 0x36, 0x6b, 0x43, 0x50, 0x48, 0x32,
		0x34, 0x37, 0x37, 0x41, 0x31, 0x37, 0x43, 0x50, 0x48, 0x32, 0x34, 0x37, 0x31, 0x41, 0x31, 0x37,
		0x6b, 0x43, 0x50, 0x48, 0x32, 0x31, 0x38, 0x35, 0x50, 0x43, 0x48, 0x4d, 0x30, 0x30, 0x43, 0x50,
		0x48, 0x31, 0x39, 0x32, 0x33, 0x41, 0x31, 0x6b, 0x43, 0x50, 0x48, 0x32, 0x30, 0x37, 0x31, 0x41,
		0x31, 0x31, 0x6b, 0x43, 0x50, 0x48, 0x31, 0x39, 0x32, 0x35, 0x41, 0x31, 0x73, 0x41, 0x31, 0x36,
		0x43, 0x50, 0x48, 0x32, 0x35, 0x39, 0x31, 0x41, 0x31, 0x38, 0x41, 0x33, 0x37, 0x66, 0x24, 0x31,
		0x41, 0x33, 0x37, 0x66, 0x41, 0x33, 0x38, 0x41, 0x33, 0x39, 0x41, 0x33, 0x36, 0x41, 0x33, 0x31,
		0x41, 0x33, 0x33, 0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x35, 0x33, 0x20,
		0x35, 0x47, 0x41, 0x33, 0x32, 0x41, 0x33, 0x35, 0x41, 0x35, 0x32, 0x41, 0x35, 0x33, 0x41, 0x35,
		0x33, 0x73, 0x41, 0x35, 0x33, 0x73, 0x20, 0x35, 0x47, 0x41, 0x35, 0x34, 0x20, 0x35, 0x47, 0x41,
		0x35, 0x34, 0x41, 0x35, 0x34, 0x73, 0x41, 0x35, 0x35, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32,
		0x33, 0x32, 0x35, 0x41, 0x35, 0x35, 0x43, 0x50, 0x48, 0x32, 0x36, 0x33, 0x31, 0x41, 0x36, 0x30,
		0x41, 0x35, 0x35, 0x73, 0x20, 0x35, 0x47, 0x50, 0x46, 0x56, 0x4d, 0x31, 0x30, 0x41, 0x35, 0x36,
		0x20, 0x35, 0x47, 0x41, 0x35, 0x37, 0x41, 0x35, 0x37, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29,
		0x50, 0x48, 0x4a, 0x31, 0x31, 0x30, 0x41, 0x35, 0x38, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32,
		0x35, 0x37, 0x37, 0x41, 0x35, 0x38, 0x50, 0x46, 0x54, 0x4d, 0x31, 0x30, 0x41, 0x39, 0x37, 0x50,
		0x48, 0x41, 0x31, 0x32, 0x30, 0x41, 0x39, 0x36, 0x41, 0x35, 0x53, 0x41, 0x37, 0x31, 0x41, 0x37,
		0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x41, 0x37, 0x33, 0x20, 0x35, 0x47, 0x41, 0x37,
		0x34, 0x41, 0x37, 0x34, 0x20, 0x35, 0x47, 0x41, 0x37, 0x32, 0x6e, 0x20, 0x35, 0x47, 0x43, 0x50,
		0x48, 0x32, 0x33, 0x37, 0x35, 0x41, 0x37, 0x36, 0x41, 0x37, 0x37, 0x41, 0x37, 0x37, 0x20, 0x35,
		0x47, 0x41, 0x37, 0x38, 0x20, 0x35, 0x47, 0x41, 0x37, 0x38, 0x41, 0x37, 0x39, 0x41, 0x37, 0x39,
		0x20, 0x35, 0x47, 0x41, 0x37, 0x37, 0x73, 0x41, 0x37, 0x6e, 0x41, 0x37, 0x78, 0x41, 0x38, 0x33,
		0x41, 0x38, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x41, 0x39, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x30, 0x29, 0x41, 0x39, 0x31, 0x41, 0x39, 0x32, 0x41, 0x39, 0x32, 0x73, 0x41, 0x39, 0x33,
		0x41, 0x39, 0x33, 0x73, 0x50, 0x46, 0x55, 0x4d, 0x31, 0x30, 0x41, 0x39, 0x36, 0x20, 0x35, 0x47,
		0x43, 0x50, 0x48, 0x32, 0x35, 0x32, 0x39, 0x41, 0x39, 0x38, 0x20, 0x35, 0x47, 0x41, 0x39, 0x34,
		0x41, 0x39, 0x35, 0x41, 0x39, 0x78, 0x41, 0x58, 0x35, 0x41, 0x58, 0x35, 0x73, 0x41, 0x58, 0x37,
		0x43, 0x50, 0x48, 0x32, 0x33, 0x34, 0x31, 0x46, 0x32, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x32,
		0x31, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x50, 0x48,
		0x32, 0x35, 0x32, 0x37, 0x46, 0x32, 0x33, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x36, 0x30,
		0x33, 0x46, 0x32, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x36,
		0x34, 0x33, 0x46, 0x32, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x46, 0x31, 0x31,
		0x46, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x37, 0x46, 0x31, 0x37, 0x20, 0x50, 0x72,
		0x6f, 0x46, 0x31, 0x73, 0x46, 0x33, 0x46, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x35, 0x20,
		0x59, 0x6f, 0x75, 0x74, 0x68, 0x46, 0x37, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x46, 0x39, 0x46,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x39, 0x73, 0x46, 0x31, 0x39, 0x20, 0x50, 0x72, 0x6f,
		0x46, 0x31, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x69, 0x6e, 0x64,
		0x20, 0x35, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x69, 0x6e,
		0x64, 0x20, 0x37, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x37, 0x61, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4e,
		0x20, 0x35, 0x47, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4e, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4e, 0x32,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x4e, 0x32, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x46, 0x69, 0x6e, 0x64,
		0x20, 0x4e, 0x33, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4e, 0x33, 0x46,
		0x69, 0x6e, 0x64, 0x20, 0x43, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x47,
		0x75, 0x69, 0x74, 0x61, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4d, 0x65, 0x6c, 0x6f, 0x64, 0x79,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x4d, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x57, 0x61,
		0x79, 0x20, 0x53, 0x55, 0x6c, 0x69, 0x6b, 0x65, 0x20, 0x32, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x4c, 0x61, 0x6d, 0x62, 0x6f, 0x72, 0x67, 0x68, 0x69,
		0x6e, 0x69, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x32, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x32,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x20, 0x4e,
		0x65, 0x6f, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x69, 0x6e,
		0x64, 0x20, 0x58, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x35,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x45, 0x4d, 0x31,
		0x30, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x46, 0x4d,
		0x31, 0x30, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x36, 0x50, 0x48, 0x5a, 0x31, 0x31, 0x30, 0x46,
		0x69, 0x6e, 0x64, 0x20, 0x58, 0x37, 0x50, 0x48, 0x59, 0x31, 0x31, 0x30, 0x46, 0x69, 0x6e, 0x64,
		0x20, 0x58, 0x37, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x50, 0x48, 0x59, 0x31, 0x32, 0x30, 0x46,
		0x69, 0x6e, 0x64, 0x20, 0x58, 0x37, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x53, 0x45, 0x4a,
		0x6f, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x37, 0x78, 0x4b, 0x39, 0x78, 0x4b, 0x31, 0x30,
		0x78, 0x4b, 0x39, 0x73, 0x4b, 0x31, 0x30, 0x20, 0x35, 0x47, 0x4b, 0x31, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x4b, 0x31, 0x31, 0x20, 0x35, 0x47, 0x41, 0x31, 0x20, 0x35, 0x47, 0x4b,
		0x31, 0x31, 0x78, 0x20, 0x35, 0x47, 0x4b, 0x31, 0x32, 0x20, 0x35, 0x47, 0x4e, 0x31, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x4e, 0x65, 0x6f,
		0x20, 0x37, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x73, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x52, 0x31, 0x31,
		0x52, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x31, 0x4b, 0x52, 0x31, 0x78, 0x52, 0x31,
		0x31, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x31, 0x31, 0x73, 0x52, 0x31, 0x35, 0x52, 0x31,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x31, 0x35, 0x78, 0x52, 0x31, 0x37, 0x52, 0x58, 0x31, 0x37,
		0x4e, 0x65, 0x6f, 0x52, 0x58, 0x31, 0x37, 0x20, 0x4e, 0x65, 0x6f, 0x52, 0x31, 0x35, 0x20, 0x44,
		0x72, 0x65, 0x61, 0x6d, 0x20, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x31, 0x35, 0x20, 0x4e,
		0x65, 0x6f, 0x52, 0x31, 0x37, 0x20, 0x4e, 0x65, 0x6f, 0x52, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f,
		0x52, 0x31, 0x4c, 0x52, 0x31, 0x53, 0x52, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x37, 0x73,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x37, 0x73, 0x52, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52,
		0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x46, 0x52, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52,
		0x39, 0x73, 0x52, 0x39, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x6e, 0x6f, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x41, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x58, 0x20, 0x5a, 0x6f, 0x6f,
		0x6d, 0x50, 0x43, 0x43, 0x54, 0x30, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x58, 0x50,
		0x48, 0x57, 0x31, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x43, 0x50, 0x48, 0x32,
		0x35, 0x33, 0x31, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x31, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x31, 0x32, 0x43, 0x50, 0x48, 0x32, 0x36, 0x32, 0x35, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31,
		0x32, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x36, 0x33, 0x37, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x31, 0x32, 0x20, 0x46, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x36, 0x38, 0x37, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x31, 0x32, 0x20, 0x46, 0x20, 0x34, 0x47, 0x43, 0x50, 0x48, 0x32, 0x36, 0x32,
		0x39, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x32, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x32, 0x46, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x32, 0x5a, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x41,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x34, 0x20, 0x34, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x53,
		0x45, 0x20, 0x35, 0x47, 0x20, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x5a, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x34, 0x46, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x41,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x35, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x4b, 0x52, 0x65, 0x6e, 0x6f, 0x35,
		0x20, 0x4b, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x4b, 0x20, 0x35, 0x47, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x35, 0x46, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x5a, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20,
		0x5a, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37,
		0x43, 0x50, 0x48, 0x32, 0x33, 0x34, 0x33, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x5a, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x37, 0x41, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x20, 0x53, 0x45, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x50, 0x46, 0x5a, 0x4d, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x2b, 0x43, 0x50, 0x48, 0x32, 0x34, 0x35, 0x37, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x38,
		0x20, 0x5a, 0x50, 0x47, 0x42, 0x4d, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x38, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x38, 0x54, 0x50, 0x48, 0x4d, 0x31, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x39, 0x50, 0x47, 0x57, 0x31, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x39, 0x20, 0x50, 0x72,
		0x6f, 0x2b, 0x50, 0x47, 0x58, 0x31, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x39, 0x20, 0x50,
		0x72, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x39, 0x20, 0x41, 0x4b, 0x39, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x4b, 0x39, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x41, 0x63, 0x65,
		0x20, 0x32, 0x20, 0x45, 0x56, 0x41, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x41, 0x63, 0x65, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x41, 0x63, 0x65, 0x20, 0x32, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x4b, 0x33, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x5a, 0x41, 0x35, 0x39, 0x73, 0x43, 0x50, 0x48, 0x32, 0x36, 0x31, 0x37,
		0x41, 0x35, 0x39, 0x20, 0x35, 0x47, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x4f, 0x50, 0x44,
		0x32, 0x33, 0x30, 0x31, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x32, 0x4f, 0x50, 0x44,
		0x32, 0x33, 0x30, 0x32, 0x50, 0x61, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x4f, 0x50, 0x44, 0x32, 0x32,
		0x30, 0x31, 0x50, 0x61, 0x64, 0x20, 0x32, 0x4f, 0x50, 0x44, 0x32, 0x31, 0x30, 0x31, 0x50, 0x61,
		0x64, 0x20, 0x57, 0x69, 0x46, 0x69, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x36, 0x6d, 0x6d,
		0x4f, 0x57, 0x31, 0x39, 0x57, 0x32, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x31, 0x6d, 0x6d,
		0x4f, 0x57, 0x32, 0x30, 0x57, 0x31, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x32, 0x20, 0x34, 0x36,
		0x6d, 0x6d, 0x4e, 0x31, 0x54, 0x4f, 0x53, 0x43, 0x41, 0x4c, 0x4d, 0x4f, 0x44, 0x45, 0x52, 0x4e,
		0x20, 0x38, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x6e, 0x20, 0x38, 0x50, 0x49, 0x4c, 0x4f, 0x54, 0x20,
		0x32, 0x50, 0x69, 0x6c, 0x6f, 0x74, 0x20, 0x32, 0x43, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x46,
		0x4c, 0x41, 0x54, 0x20, 0x31, 0x43, 0x46, 0x6c, 0x61, 0x74, 0x20, 0x31, 0x43, 0x53, 0x36, 0x30,
		0x50, 0x72, 0x6f, 0x53, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x69, 0x67, 0x65, 0x72, 0x20,
		0x24, 0x31, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x20, 0x38, 0x4f, 0x54, 0x54, 0x4f, 0x4f, 0x55,
		0x4a, 0x49, 0x41, 0x32, 0x30, 0x31, 0x38, 0x2d, 0x53, 0x31, 0x30, 0x4d, 0x41, 0x58, 0x53, 0x31,
		0x30, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x32, 0x30, 0x53, 0x32, 0x37, 0x20, 0x50, 0x4c, 0x55, 0x53,
		0x53, 0x32, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x58, 0x20, 0x54, 0x41, 0x42, 0x4f, 0x78,
		0x2d, 0x70, 0x30, 0x31, 0x30, 0x2d, 0x32, 0x4f, 0x59, 0x53, 0x49, 0x4e, 0x4f, 0x61, 0x6c, 0x65,
		0x41, 0x70, 0x65, 0x78, 0x20, 0x24, 0x31, 0x4f, 0x61, 0x6e, 0x67, 0x63, 0x63, 0x4f, 0x62, 0x61,
		0x62, 0x6f, 0x78, 0x4f, 0x42, 0x41, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x33, 0x4f, 0x62, 0x65,
		0x72, 0x4f, 0x62, 0x69, 0x53, 0x4a, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x53, 0x6b, 0x69, 0x70, 0x70,
		0x65, 0x72, 0x46, 0x6c, 0x61, 0x63, 0x6f, 0x6e, 0x50, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x46, 0x6f,
		0x78, 0x57, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x65, 0x4c, 0x65, 0x6f, 0x70, 0x61, 0x72,
		0x64, 0x42, 0x6f, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6f, 0x61, 0x50, 0x65, 0x6c, 0x69,
		0x63, 0x61, 0x6e, 0x4f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x43, 0x72, 0x61, 0x6e, 0x65, 0x48,
		0x6f, 0x72, 0x6e, 0x62, 0x69, 0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72,
		0x4f, 0x64, 0x6f, 0x74, 0x70, 0x61, 0x64, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x20, 0x46, 0x72,
		0x75, 0x69, 0x74, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x56, 0x24, 0x31, 0x50, 0x6f, 0x6d, 0x65,
		0x6c, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x2b, 0x4f, 0x64, 0x79, 0x73, 0x58, 0x65, 0x6c, 0x69, 0x6f,
		0x20, 0x48, 0x44, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x24,
		0x31, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x54, 0x41, 0x42, 0x33, 0x58,
		0x65, 0x6c, 0x69, 0x6f, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x62, 0x20, 0x33, 0x54,
		0x48, 0x41, 0x4e, 0x4f, 0x53, 0x5f, 0x31, 0x30, 0x54, 0x68, 0x61, 0x6e, 0x6f, 0x73, 0x20, 0x31,
		0x30, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x31, 0x30, 0x5f, 0x50,
		0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x4e, 0x65, 0x78, 0x74,
		0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f,
		0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x37, 0x5f, 0x33, 0x47, 0x58, 0x65,
		0x6c, 0x69, 0x6f, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x62, 0x20, 0x37, 0x20, 0x33,
		0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30, 0x45, 0x58, 0x54, 0x52, 0x45, 0x4d, 0x45, 0x58,
		0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x58, 0x45,
		0x4c, 0x49, 0x4f, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c,
		0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x58, 0x45, 0x4c,
		0x49, 0x4f, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x58,
		0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x58, 0x65, 0x6c,
		0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x50, 0x52,
		0x4f, 0x5f, 0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x31,
		0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
		0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
		0x43, 0x54, 0x38, 0x50, 0x4c, 0x55, 0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x38,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x37, 0x50, 0x52, 0x4f,
		0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x41, 0x56,
		0x45, 0x4e, 0x5f, 0x58, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x5f, 0x4c, 0x54, 0x45, 0x4d, 0x61, 0x76,
		0x65, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x20, 0x48, 0x44, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x61, 0x76,
		0x65, 0x6e, 0x5f, 0x54, 0x31, 0x30, 0x5f, 0x70, 0x72, 0x6f, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20,
		0x54, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x41, 0x56, 0x45, 0x4e, 0x5f, 0x58, 0x31, 0x30,
		0x5f, 0x48, 0x44, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x20, 0x48, 0x44, 0x4d,
		0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x33, 0x47, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x76, 0x65,
		0x6e, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x4d, 0x41, 0x56, 0x45, 0x4e, 0x5f, 0x37, 0x5f, 0x50,
		0x4c, 0x55, 0x53, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52,
		0x61, 0x70, 0x69, 0x64, 0x20, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x52, 0x61, 0x70, 0x69, 0x64, 0x20,
		0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x41, 0x4f, 0x5f, 0x58, 0x31, 0x30, 0x54, 0x61, 0x6f,
		0x20, 0x58, 0x31, 0x30, 0x53, 0x50, 0x41, 0x43, 0x45, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53,
		0x5f, 0x33, 0x47, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x33, 0x47, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x31, 0x30, 0x53,
		0x45, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x20, 0x53, 0x45,
		0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x4f, 0x4e, 0x45, 0x31, 0x30, 0x53, 0x70, 0x61, 0x63, 0x65,
		0x20, 0x4f, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x53, 0x50, 0x41, 0x43, 0x45, 0x31, 0x30, 0x5f, 0x50,
		0x52, 0x4f, 0x5f, 0x33, 0x47, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x33, 0x47, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x4a, 0x75, 0x6e, 0x69, 0x6f,
		0x72, 0x54, 0x38, 0x50, 0x72, 0x6f, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x54, 0x38, 0x20,
		0x50, 0x72, 0x6f, 0x4a, 0x55, 0x4e, 0x49, 0x4f, 0x52, 0x5f, 0x38, 0x5f, 0x50, 0x52, 0x4f, 0x4a,
		0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x44, 0x4d, 0x38, 0x31,
		0x36, 0x48, 0x43, 0x4e, 0x65, 0x6f, 0x20, 0x58, 0x45, 0x4f, 0x53, 0x31, 0x30, 0x45, 0x4f, 0x53,
		0x20, 0x31, 0x30, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x56,
		0x32, 0x50, 0x61, 0x63, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x56, 0x32, 0x50,
		0x61, 0x63, 0x65, 0x20, 0x31, 0x30, 0x41, 0x45, 0x4f, 0x4e, 0x41, 0x65, 0x6f, 0x6e, 0x46, 0x41,
		0x4c, 0x43, 0x4f, 0x4e, 0x5f, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x46,
		0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47,
		0x46, 0x55, 0x53, 0x49, 0x4f, 0x4e, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x37, 0x55, 0x6e,
		0x6f, 0x20, 0x58, 0x24, 0x31, 0x41, 0x44, 0x4d, 0x38, 0x30, 0x30, 0x30, 0x4b, 0x50, 0x54, 0x69,
		0x74, 0x61, 0x6e, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x5f, 0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45, 0x54,
		0x69, 0x74, 0x61, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x59, 0x52, 0x4f, 0x5f,
		0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x50, 0x79, 0x72, 0x6f, 0x20, 0x37, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4e, 0x4f, 0x56, 0x41, 0x5f, 0x58, 0x37, 0x5f, 0x50,
		0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x58, 0x37, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x33, 0x47, 0x4f, 0x44, 0x59, 0x53, 0x5f, 0x4e, 0x4f, 0x56, 0x41, 0x5f, 0x58,
		0x37, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x58, 0x37, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4e, 0x4f, 0x54, 0x4f, 0x53, 0x70, 0x6c, 0x75, 0x73,
		0x33, 0x47, 0x4e, 0x6f, 0x74, 0x6f, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4d,
		0x41, 0x56, 0x45, 0x4e, 0x5f, 0x47, 0x31, 0x30, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x47, 0x31,
		0x30, 0x50, 0x45, 0x44, 0x49, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x57, 0x50, 0x65, 0x64, 0x69,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x57, 0x4e, 0x6f, 0x74, 0x65, 0x54, 0x61, 0x62, 0x5f, 0x50,
		0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4f, 0x41,
		0x4c, 0x5f, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x47, 0x6f, 0x61, 0x6c,
		0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x49, 0x65, 0x6f, 0x73, 0x20,
		0x51, 0x75, 0x61, 0x64, 0x20, 0x57, 0x49, 0x65, 0x6f, 0x73, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x20,
		0x31, 0x30, 0x49, 0x65, 0x6f, 0x73, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x4e,
		0x45, 0x52, 0x4f, 0x4e, 0x4e, 0x65, 0x72, 0x6f, 0x6e, 0x4e, 0x65, 0x6f, 0x20, 0x36, 0x20, 0x4c,
		0x54, 0x45, 0x53, 0x4c, 0x41, 0x44, 0x45, 0x5f, 0x58, 0x35, 0x35, 0x53, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x58, 0x35, 0x35, 0x49, 0x65, 0x6f, 0x73, 0x20, 0x24, 0x31, 0x4e, 0x6f, 0x6f, 0x6e, 0x4e,
		0x6f, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x6b, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x30, 0x29, 0x4f, 0x6b, 0x61, 0x70, 0x69, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
		0x65, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x2b,
		0x4f, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x4b, 0x2d, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x31, 0x31, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x31, 0x31, 0x4f, 0x6c, 0x61, 0x78, 0x4f, 0x63, 0x65, 0x61, 0x6e,
		0x20, 0x4b, 0x38, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x31, 0x32, 0x4f, 0x6c, 0x6b, 0x79, 0x61,
		0x4f, 0x6c, 0x6c, 0x65, 0x65, 0x30, 0x30, 0x38, 0x20, 0x54, 0x77, 0x6f, 0x41, 0x4f, 0x6c, 0x79,
		0x6d, 0x70, 0x69, 0x61, 0x54, 0x72, 0x65, 0x6b, 0x4f, 0x6e, 0x64, 0x61, 0x54, 0x39, 0x20, 0x53,
		0x4d, 0x49, 0x44, 0x56, 0x38, 0x32, 0x30, 0x57, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53,
		0x56, 0x38, 0x39, 0x31, 0x57, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x38, 0x39,
		0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x33, 0x47,
		0x20, 0x41, 0x69, 0x72, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x31, 0x31, 0x36,
		0x77, 0x2d, 0x44, 0x75, 0x61, 0x6c, 0x4f, 0x53, 0x56, 0x31, 0x31, 0x36, 0x77, 0x20, 0x33, 0x47,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x43, 0x48, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x41,
		0x69, 0x72, 0x20, 0x43, 0x48, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31,
		0x39, 0x20, 0x34, 0x47, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x38, 0x56, 0x39,
		0x31, 0x39, 0x20, 0x34, 0x47, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x38,
		0x56, 0x39, 0x37, 0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x34, 0x56, 0x39, 0x31, 0x39, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x20, 0x34, 0x56, 0x39, 0x38, 0x39, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f,
		0x72, 0x65, 0x38, 0x56, 0x39, 0x38, 0x39, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x20, 0x38, 0x4f, 0x4e, 0x44, 0x41, 0x20, 0x56, 0x39, 0x38, 0x39, 0x56, 0x39, 0x38, 0x39, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x20, 0x38, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x32, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x6f, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x31, 0x30, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x34, 0x47, 0x56, 0x38, 0x30, 0x20, 0x53, 0x45, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x32, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x32, 0x30, 0x20, 0x53, 0x45, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x53, 0x45,
		0x56, 0x31, 0x30, 0x20, 0x34, 0x47, 0x4f, 0x6e, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x58, 0x2d,
		0x6d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x49, 0x49, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x2d, 0x4d, 0x75,
		0x73, 0x69, 0x63, 0x20, 0x49, 0x49, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x2d, 0x4d, 0x75, 0x73, 0x69,
		0x63, 0x20, 0x49, 0x49, 0x49, 0x58, 0x2d, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x24, 0x31, 0x4f,
		0x6e, 0x65, 0x4c, 0x65, 0x72, 0x6e, 0x4f, 0x6e, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x32, 0x52,
		0x31, 0x32, 0x31, 0x31, 0x52, 0x20, 0x35, 0x47, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x63, 0x65, 0x20,
		0x33, 0x41, 0x63, 0x65, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x63, 0x65,
		0x20, 0x33, 0x56, 0x41, 0x63, 0x65, 0x20, 0x32, 0x41, 0x63, 0x65, 0x20, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x41, 0x63, 0x65, 0x20, 0x32, 0x56, 0x41, 0x63, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x63,
		0x65, 0x20, 0x52, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
		0x4e, 0x6f, 0x72, 0x64, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x32, 0x54, 0x4e, 0x6f,
		0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x36, 0x31, 0x33, 0x4e,
		0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x34, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20,
		0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45,
		0x20, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x33,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x33, 0x20, 0x35,
		0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x33, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e,
		0x31, 0x30, 0x30, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x32, 0x30, 0x30, 0x20, 0x35, 0x47, 0x43,
		0x50, 0x48, 0x32, 0x33, 0x38, 0x39, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x33, 0x30, 0x30, 0x20,
		0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x32, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72,
		0x64, 0x20, 0x4e, 0x33, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x33, 0x30,
		0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x32, 0x30, 0x20, 0x53,
		0x45, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31, 0x30, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31,
		0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x32, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43,
		0x45, 0x20, 0x32, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x38, 0x54, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x38, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x39, 0x52, 0x54, 0x20, 0x35, 0x47, 0x39, 0x52, 0x31,
		0x30, 0x52, 0x31, 0x30, 0x52, 0x20, 0x35, 0x47, 0x31, 0x30, 0x54, 0x20, 0x35, 0x47, 0x31, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x37, 0x54, 0x37, 0x54, 0x20, 0x50, 0x72,
		0x6f, 0x37, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x38, 0x54, 0x2b, 0x20, 0x35, 0x47,
		0x33, 0x54, 0x35, 0x54, 0x36, 0x54, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x2e, 0x36, 0x31, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x50, 0x61, 0x64, 0x20, 0x47, 0x6f, 0x20, 0x31, 0x31, 0x2e, 0x33,
		0x35, 0x22, 0x4f, 0x6e, 0x69, 0x64, 0x61, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x4f, 0x6e, 0x69, 0x78, 0x38, 0x22, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x33, 0x47, 0x4f, 0x6e, 0x6b, 0x79, 0x6f, 0x4f, 0x6f, 0x6b, 0x65, 0x65, 0x4f,
		0x6f, 0x6b, 0x65, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x6f, 0x72, 0x65, 0x64, 0x6f, 0x6f, 0x4f, 0x70,
		0x65, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x45, 0x61, 0x73, 0x79, 0x5f, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x5f, 0x32, 0x45, 0x61, 0x73, 0x79, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32,
		0x4f, 0x70, 0x65, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x4a, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4a, 0x58, 0x4f, 0x70, 0x65, 0x6c, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x58, 0x31, 0x20, 0x34, 0x47, 0x4f, 0x70, 0x65, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x36, 0x4f,
		0x70, 0x65, 0x6e, 0x62, 0x6f, 0x78, 0x41, 0x53, 0x5f, 0x34, 0x4b, 0x5f, 0x43, 0x49, 0x5f, 0x50,
		0x52, 0x4f, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x43, 0x49, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x53, 0x5f, 0x34, 0x4b, 0x5f, 0x43, 0x49,
		0x5f, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x43, 0x49, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x43, 0x49, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x53,
		0x20, 0x34, 0x4b, 0x20, 0x24, 0x31, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x41, 0x53, 0x31, 0x5f, 0x48, 0x44, 0x41, 0x53, 0x31, 0x20, 0x48, 0x44, 0x41, 0x53, 0x20, 0x34,
		0x4b, 0x4f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x5f, 0x34, 0x5f, 0x30,
		0x53, 0x69, 0x67, 0x6d, 0x61, 0x20, 0x34, 0x2e, 0x30, 0x42, 0x65, 0x65, 0x74, 0x61, 0x5f, 0x34,
		0x5f, 0x30, 0x42, 0x65, 0x65, 0x74, 0x61, 0x20, 0x34, 0x2e, 0x30, 0x41, 0x63, 0x74, 0x69, 0x76,
		0x65, 0x20, 0x35, 0x2e, 0x30, 0x4f, 0x70, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x75, 0x73, 0x61, 0x69,
		0x20, 0x24, 0x31, 0x4f, 0x70, 0x74, 0x6f, 0x6d, 0x61, 0x4f, 0x70, 0x74, 0x6f, 0x6d, 0x61, 0x2d,
		0x55, 0x48, 0x44, 0x55, 0x48, 0x44, 0x35, 0x35, 0x4f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x43,
		0x2f, 0x49, 0x48, 0x44, 0x39, 0x32, 0x4c, 0x69, 0x76, 0x65, 0x62, 0x6f, 0x78, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x4e, 0x6f, 0x6c, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x6f, 0x6c, 0x61, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x4e, 0x6f, 0x6c, 0x61, 0x20, 0x66, 0x75, 0x6e, 0x4e, 0x6f, 0x6c, 0x61,
		0x20, 0x46, 0x75, 0x6e, 0x4e, 0x65, 0x76, 0x61, 0x20, 0x7a, 0x65, 0x6e, 0x4e, 0x65, 0x76, 0x61,
		0x20, 0x5a, 0x65, 0x6e, 0x4e, 0x65, 0x76, 0x61, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x65,
		0x76, 0x61, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x72, 0x61, 0x20, 0x32, 0x53, 0x65,
		0x67, 0x6f, 0x46, 0x75, 0x6e, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4f, 0x72, 0x61, 0x6e, 0x67,
		0x65, 0x20, 0x4d, 0x6f, 0x75, 0x76, 0x65, 0x20, 0x32, 0x4d, 0x6f, 0x75, 0x76, 0x65, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x49, 0x49, 0x4d, 0x6f, 0x75, 0x76, 0x65, 0x54, 0x61, 0x62, 0x37, 0x57, 0x49,
		0x46, 0x49, 0x4d, 0x6f, 0x75, 0x76, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x6f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x54, 0x61, 0x62, 0x5f, 0x37, 0x5f, 0x34,
		0x47, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x34, 0x47, 0x44, 0x69, 0x76, 0x65, 0x20, 0x24, 0x31,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x44, 0x69, 0x76, 0x65, 0x20, 0x24, 0x31, 0x53, 0x50, 0x56, 0x20,
		0x24, 0x31, 0x4f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x50, 0x69, 0x4f, 0x72, 0x62, 0x69, 0x63,
		0x52, 0x36, 0x37, 0x38, 0x45, 0x4c, 0x52, 0x43, 0x35, 0x30, 0x31, 0x4c, 0x53, 0x6c, 0x69, 0x6d,
		0x52, 0x43, 0x35, 0x34, 0x35, 0x4c, 0x4d, 0x61, 0x75, 0x69, 0x52, 0x43, 0x35, 0x35, 0x35, 0x4c,
		0x57, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x43, 0x32, 0x32, 0x30, 0x30, 0x4c, 0x4a, 0x6f, 0x75,
		0x72, 0x6e, 0x65, 0x79, 0x20, 0x56, 0x52, 0x43, 0x36, 0x30, 0x38, 0x4c, 0x52, 0x43, 0x36, 0x30,
		0x39, 0x4c, 0x52, 0x38, 0x4c, 0x35, 0x54, 0x54, 0x61, 0x62, 0x38, 0x20, 0x35, 0x47, 0x4f, 0x72,
		0x62, 0x69, 0x74, 0x61, 0x4f, 0x72, 0x62, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x69,
		0x73, 0x73, 0x69, 0x6d, 0x6f, 0x43, 0x52, 0x41, 0x4e, 0x45, 0x2d, 0x45, 0x56, 0x42, 0x4f, 0x75,
		0x6b, 0x69, 0x4f, 0x4b, 0x50, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x75, 0x6b, 0x69, 0x74, 0x65,
		0x6c, 0x57, 0x50, 0x32, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4b, 0x37, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x78, 0x55, 0x38, 0x20, 0x55, 0x6e, 0x69, 0x76,
		0x65, 0x72, 0x73, 0x65, 0x20, 0x54, 0x61, 0x70, 0x52, 0x54, 0x37, 0x20, 0x54, 0x49, 0x54, 0x41,
		0x4e, 0x20, 0x35, 0x47, 0x52, 0x54, 0x37, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x35, 0x47,
		0x52, 0x54, 0x37, 0x20, 0x54, 0x49, 0x54, 0x41, 0x4e, 0x52, 0x54, 0x37, 0x20, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x78, 0x4f, 0x56, 0x2d, 0x56, 0x31, 0x30, 0x56,
		0x65, 0x72, 0x74, 0x69, 0x73, 0x20, 0x59, 0x61, 0x72, 0x64, 0x56, 0x65, 0x72, 0x74, 0x69, 0x73,
		0x20, 0x35, 0x30, 0x32, 0x31, 0x20, 0x41, 0x69, 0x6d, 0x56, 0x65, 0x72, 0x74, 0x69, 0x73, 0x20,
		0x34, 0x30, 0x30, 0x34, 0x20, 0x59, 0x6f, 0x75, 0x56, 0x65, 0x72, 0x74, 0x69, 0x73, 0x20, 0x24,
		0x31, 0x4c, 0x69, 0x76, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x37, 0x30, 0x33, 0x32, 0x4c, 0x69, 0x76,
		0x65, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x37, 0x30, 0x33, 0x32, 0x51, 0x75, 0x61, 0x6c, 0x63, 0x6f,
		0x72, 0x65, 0x20, 0x31, 0x30, 0x31, 0x30, 0x51, 0x75, 0x61, 0x6c, 0x63, 0x6f, 0x72, 0x65, 0x20,
		0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x4f, 0x76, 0x76, 0x69, 0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x20,
		0x58, 0x31, 0x4f, 0x77, 0x77, 0x6f, 0x43, 0x61, 0x72, 0x6e, 0x69, 0x76, 0x61, 0x6c, 0x20, 0x42,
		0x35, 0x4f, 0x79, 0x73, 0x74, 0x65, 0x72, 0x73, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20,
		0x38, 0x30, 0x30, 0x69, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x50, 0x61, 0x63, 0x69,
		0x66, 0x69, 0x63, 0x20, 0x45, 0x49, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x56, 0x49, 0x6e, 0x64, 0x69,
		0x61, 0x6e, 0x20, 0x56, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x24, 0x31, 0x41, 0x74,
		0x6c, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x20, 0x24, 0x31, 0x41, 0x72, 0x63, 0x74, 0x69, 0x63, 0x20,
		0x24, 0x31, 0x41, 0x6e, 0x74, 0x61, 0x72, 0x63, 0x74, 0x69, 0x63, 0x20, 0x45, 0x4c, 0x69, 0x66,
		0x65, 0x20, 0x34, 0x47, 0x54, 0x37, 0x34, 0x4d, 0x61, 0x69, 0x5f, 0x33, 0x47, 0x54, 0x37, 0x34,
		0x4d, 0x41, 0x69, 0x20, 0x33, 0x47, 0x4f, 0x79, 0x79, 0x75, 0x54, 0x31, 0x31, 0x20, 0x33, 0x47,
		0x4f, 0x7a, 0x6f, 0x6e, 0x65, 0x48, 0x44, 0x50, 0x2d, 0x55, 0x50, 0x4d, 0x6f, 0x64, 0x65, 0x20,
		0x31, 0x20, 0x52, 0x52, 0x4d, 0x6f, 0x64, 0x65, 0x20, 0x31, 0x20, 0x52, 0x53, 0x4d, 0x6f, 0x64,
		0x65, 0x20, 0x31, 0x20, 0x4d, 0x44, 0x2d, 0x30, 0x31, 0x50, 0x50, 0x41, 0x47, 0x52, 0x41, 0x45,
		0x52, 0x50, 0x41, 0x50, 0x59, 0x52, 0x45, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x31, 0x22, 0x50,
		0x43, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x51, 0x55, 0x49, 0x43, 0x4b, 0x54, 0x41, 0x42, 0x20,
		0x50, 0x4c, 0x55, 0x53, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x43, 0x42, 0x4f, 0x58, 0x41, 0x72, 0x74, 0x2d, 0x50, 0x43, 0x42, 0x2d, 0x56, 0x31,
		0x31, 0x36, 0x41, 0x72, 0x74, 0x42, 0x65, 0x65, 0x2d, 0x50, 0x43, 0x42, 0x2d, 0x56, 0x32, 0x31,
		0x36, 0x42, 0x65, 0x65, 0x43, 0x6c, 0x61, 0x70, 0x2d, 0x50, 0x43, 0x42, 0x2d, 0x49, 0x33, 0x31,
		0x36, 0x43, 0x6c, 0x61, 0x70, 0x50, 0x43, 0x42, 0x2d, 0x54, 0x31, 0x30, 0x33, 0x43, 0x75, 0x72,
		0x69, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x43, 0x42, 0x2d, 0x54, 0x31, 0x30, 0x34, 0x4b, 0x6f,
		0x76, 0x61, 0x20, 0x54, 0x37, 0x33, 0x30, 0x4b, 0x6f, 0x76, 0x61, 0x5f, 0x50, 0x6c, 0x75, 0x73,
		0x5f, 0x50, 0x43, 0x42, 0x5f, 0x54, 0x37, 0x33, 0x35, 0x4b, 0x6f, 0x76, 0x61, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x54, 0x37, 0x33, 0x35, 0x50, 0x43, 0x44, 0x50, 0x4c, 0x35, 0x37, 0x31, 0x55,
		0x53, 0x4a, 0x61, 0x67, 0x75, 0x61, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x50, 0x43,
		0x44, 0x20, 0x41, 0x72, 0x67, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x61, 0x50, 0x45, 0x41, 0x51, 0x50,
		0x45, 0x54, 0x20, 0x24, 0x31, 0x50, 0x49, 0x4e, 0x45, 0x50, 0x49, 0x52, 0x41, 0x4e, 0x48, 0x41,
		0x50, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x20, 0x35, 0x20, 0x54, 0x61, 0x62, 0x20, 0x57, 0x68, 0x69, 0x74, 0x65, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x35, 0x50, 0x69, 0x72, 0x61, 0x6e, 0x68, 0x61, 0x38, 0x30, 0x33, 0x32,
		0x38, 0x30, 0x33, 0x32, 0x50, 0x49, 0x58, 0x50, 0x52, 0x4f, 0x4c, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x4f, 0x43, 0x4f, 0x46, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x36, 0x58, 0x36, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x58, 0x36, 0x20, 0x35, 0x47, 0x58, 0x36, 0x20, 0x4e, 0x65, 0x6f,
		0x46, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d,
		0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x34, 0x20, 0x35, 0x47, 0x32, 0x33, 0x31,
		0x32, 0x38, 0x50, 0x43, 0x33, 0x33, 0x49, 0x4d, 0x36, 0x20, 0x35, 0x47, 0x32, 0x33, 0x30, 0x37,
		0x36, 0x50, 0x43, 0x34, 0x42, 0x49, 0x4d, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d,
		0x36, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x32, 0x30, 0x31, 0x30,
		0x4a, 0x31, 0x39, 0x47, 0x43, 0x4d, 0x33, 0x20, 0x53, 0x45, 0x58, 0x33, 0x20, 0x4e, 0x46, 0x43,
		0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x33, 0x20, 0x47, 0x54, 0x58, 0x35, 0x20, 0x35, 0x47,
		0x58, 0x34, 0x20, 0x47, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x34, 0x20, 0x47, 0x54, 0x58, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x58, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47,
		0x46, 0x33, 0x20, 0x47, 0x54, 0x46, 0x34, 0x20, 0x47, 0x54, 0x46, 0x34, 0x43, 0x33, 0x43, 0x33,
		0x31, 0x43, 0x34, 0x30, 0x43, 0x35, 0x30, 0x32, 0x32, 0x31, 0x32, 0x37, 0x50, 0x43, 0x39, 0x35,
		0x49, 0x43, 0x35, 0x35, 0x32, 0x33, 0x31, 0x32, 0x42, 0x50, 0x43, 0x35, 0x31, 0x48, 0x43, 0x36,
		0x31, 0x43, 0x36, 0x35, 0x46, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x20, 0x47, 0x54, 0x20,
		0x50, 0x72, 0x6f, 0x32, 0x34, 0x30, 0x35, 0x43, 0x50, 0x43, 0x46, 0x42, 0x47, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x32, 0x2e, 0x31, 0x22, 0x50, 0x4f, 0x50, 0x54, 0x45, 0x4c, 0x50, 0x39, 0x30, 0x30,
		0x30, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x50, 0x54, 0x56, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x50, 0x52,
		0x4f, 0x46, 0x69, 0x4c, 0x4f, 0x50, 0x55, 0x4c, 0x49, 0x44, 0x50, 0x56, 0x42, 0x6f, 0x78, 0x50,
		0x56, 0x42, 0x4f, 0x58, 0x5f, 0x50, 0x35, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x35, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63,
		0x68, 0x20, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x72, 0x6d, 0x61, 0x64, 0x69,
		0x6c, 0x6c, 0x6f, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x72, 0x64,
		0x20, 0x42, 0x65, 0x6c, 0x6c, 0x44, 0x41, 0x59, 0x54, 0x4f, 0x4e, 0x41, 0x2d, 0x47, 0x31, 0x32,
		0x44, 0x61, 0x79, 0x74, 0x6f, 0x6e, 0x61, 0x20, 0x47, 0x31, 0x32, 0x4d, 0x4f, 0x4e, 0x5a, 0x41,
		0x2d, 0x54, 0x37, 0x4d, 0x6f, 0x6e, 0x7a, 0x61, 0x20, 0x54, 0x37, 0x53, 0x49, 0x4c, 0x56, 0x45,
		0x52, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x2d, 0x54, 0x31, 0x30, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72,
		0x73, 0x74, 0x6f, 0x6e, 0x65, 0x20, 0x54, 0x31, 0x30, 0x45, 0x61, 0x73, 0x79, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x54, 0x56, 0x31, 0x31, 0x48, 0x43, 0x50, 0x61, 0x64, 0x70, 0x72, 0x6f, 0x47, 0x54,
		0x34, 0x30, 0x70, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x47, 0x54, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x4d, 0x61, 0x78, 0x50, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x50, 0x61, 0x6c, 0x61, 0x64,
		0x69, 0x6e, 0x20, 0x54, 0x56, 0x50, 0x61, 0x6c, 0x6d, 0x54, 0x72, 0x65, 0x6f, 0x20, 0x24, 0x31,
		0x54, 0x75, 0x6e, 0x67, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x56, 0x47, 0x31, 0x30, 0x30, 0x50, 0x65,
		0x70, 0x69, 0x74, 0x6f, 0x50, 0x61, 0x6e, 0x61, 0x63, 0x6f, 0x6d, 0x54, 0x2d, 0x69, 0x37, 0x30,
		0x38, 0x44, 0x50, 0x61, 0x6e, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x50, 0x2d, 0x73, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x62, 0x6f,
		0x6f, 0x6b, 0x20, 0x24, 0x31, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x50, 0x45, 0x6c, 0x75, 0x67,
		0x61, 0x20, 0x58, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x49, 0x37, 0x45, 0x6c, 0x75, 0x67, 0x61,
		0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x78, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x78,
		0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x2d, 0x30, 0x32, 0x44, 0x54, 0x6f, 0x75, 0x67,
		0x68, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x61, 0x64, 0x20,
		0x46, 0x5a, 0x2d, 0x24, 0x31, 0x50, 0x35, 0x35, 0x20, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x34, 0x47,
		0x50, 0x35, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x24, 0x31, 0x20, 0x4e, 0x58, 0x54, 0x50, 0x39,
		0x30, 0x32, 0x69, 0x50, 0x61, 0x6e, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x20, 0x4d, 0x49, 0x4c,
		0x20, 0x44, 0x4c, 0x4e, 0x41, 0x56, 0x69, 0x65, 0x72, 0x61, 0x20, 0x43, 0x61, 0x73, 0x74, 0x45,
		0x6c, 0x75, 0x67, 0x61, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x50,
		0x61, 0x6e, 0x61, 0x76, 0x6f, 0x78, 0x50, 0x61, 0x6e, 0x6f, 0x50, 0x61, 0x6e, 0x6f, 0x64, 0x69,
		0x63, 0x50, 0x61, 0x6e, 0x6f, 0x72, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61, 0x6e, 0x74, 0x65, 0x63,
		0x68, 0x41, 0x44, 0x52, 0x39, 0x31, 0x30, 0x4c, 0x53, 0x74, 0x61, 0x72, 0x20, 0x51, 0x49, 0x4d,
		0x2d, 0x41, 0x38, 0x36, 0x30, 0x56, 0x65, 0x67, 0x61, 0x20, 0x4e, 0x6f, 0x20, 0x36, 0x49, 0x4d,
		0x2d, 0x41, 0x38, 0x35, 0x30, 0x56, 0x65, 0x67, 0x61, 0x20, 0x52, 0x33, 0x49, 0x4d, 0x2d, 0x41,
		0x38, 0x37, 0x30, 0x4b, 0x56, 0x65, 0x67, 0x61, 0x20, 0x49, 0x72, 0x6f, 0x6e, 0x50, 0x61, 0x72,
		0x72, 0x6f, 0x74, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
		0x72, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x45, 0x56, 0x31, 0x20, 0x50, 0x52, 0x4f, 0x45,
		0x56, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x65, 0x6c, 0x69, 0x74, 0x74, 0x50, 0x65, 0x6c, 0x69,
		0x74, 0x74, 0x20, 0x54, 0x31, 0x20, 0x4d, 0x41, 0x58, 0x54, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x50,
		0x65, 0x6c, 0x69, 0x74, 0x74, 0x20, 0x54, 0x31, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x6f, 0x6f, 0x58, 0x38, 0x20, 0x50, 0x72, 0x6f,
		0x2b, 0x70, 0x65, 0x6e, 0x64, 0x6f, 0x6f, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x69, 0x6e, 0x69,
		0x58, 0x31, 0x31, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x35, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x65,
		0x6e, 0x74, 0x61, 0x50, 0x53, 0x36, 0x35, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x53,
		0x36, 0x35, 0x30, 0x57, 0x53, 0x37, 0x30, 0x34, 0x44, 0x58, 0x54, 0x2d, 0x50, 0x61, 0x64, 0x20,
		0x57, 0x53, 0x37, 0x30, 0x34, 0x44, 0x58, 0x50, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d,
		0x45, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x69, 0x78, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x37,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x6c, 0x69, 0x6d, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
		0x72, 0x20, 0x58, 0x35, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x24, 0x31, 0x50, 0x65, 0x72,
		0x66, 0x65, 0x6f, 0x50, 0x65, 0x72, 0x66, 0x65, 0x6f, 0x5f, 0x50, 0x46, 0x5f, 0x41, 0x34, 0x35,
		0x35, 0x31, 0x43, 0x48, 0x52, 0x4f, 0x4e, 0x4f, 0x50, 0x65, 0x72, 0x66, 0x65, 0x6f, 0x5f, 0x50,
		0x46, 0x5f, 0x41, 0x34, 0x35, 0x35, 0x32, 0x52, 0x41, 0x54, 0x45, 0x50, 0x65, 0x72, 0x66, 0x65,
		0x6f, 0x5f, 0x50, 0x46, 0x5f, 0x41, 0x34, 0x35, 0x35, 0x33, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58,
		0x50, 0x68, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x43, 0x6c, 0x75, 0x65, 0x20, 0x4c, 0x45, 0x6e, 0x65,
		0x72, 0x67, 0x79, 0x20, 0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x33, 0x2b, 0x45, 0x6e,
		0x65, 0x72, 0x67, 0x79, 0x20, 0x34, 0x53, 0x43, 0x6c, 0x75, 0x65, 0x20, 0x32, 0x53, 0x43, 0x6c,
		0x75, 0x65, 0x20, 0x24, 0x31, 0x50, 0x68, 0x69, 0x6c, 0x63, 0x6f, 0x48, 0x49, 0x54, 0x20, 0x50,
		0x31, 0x30, 0x61, 0x48, 0x69, 0x74, 0x20, 0x50, 0x31, 0x30, 0x61, 0x48, 0x69, 0x74, 0x20, 0x24,
		0x31, 0x50, 0x48, 0x36, 0x30, 0x44, 0x31, 0x36, 0x44, 0x53, 0x47, 0x57, 0x4e, 0x34, 0x4b, 0x50,
		0x54, 0x42, 0x37, 0x50, 0x41, 0x50, 0x68, 0x69, 0x6c, 0x69, 0x70, 0x73, 0x58, 0x65, 0x6e, 0x69,
		0x75, 0x6d, 0x20, 0x24, 0x31, 0x24, 0x31, 0x2f, 0x39, 0x36, 0x20, 0x34, 0x4b, 0x20, 0x55, 0x48,
		0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x55, 0x48, 0x44, 0x20, 0x28, 0x24,
		0x31, 0x2d, 0x32, 0x30, 0x24, 0x32, 0x29, 0x24, 0x31, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45,
		0x4d, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x75, 0x2d, 0x72, 0x61, 0x79, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x65, 0x72, 0x20, 0x28, 0x42, 0x44, 0x50, 0x24, 0x31, 0x29, 0x4e, 0x65, 0x74, 0x54,
		0x56, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x55, 0x48, 0x44, 0x20, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x55,
		0x48, 0x44, 0x46, 0x69, 0x73, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6d,
		0x61, 0x78, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x58, 0x4d, 0x61, 0x72, 0x73, 0x56, 0x65,
		0x6e, 0x75, 0x73, 0x20, 0x58, 0x50, 0x69, 0x50, 0x4f, 0x50, 0x69, 0x70, 0x6f, 0x4d, 0x39, 0x50,
		0x72, 0x6f, 0x50, 0x69, 0x63, 0x6f, 0x4e, 0x65, 0x6f, 0x33, 0x20, 0x4c, 0x69, 0x6e, 0x6b, 0x4e,
		0x65, 0x6f, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72,
		0x52, 0x31, 0x64, 0x76, 0x72, 0x37, 0x30, 0x30, 0x70, 0x69, 0x44, 0x56, 0x52, 0x37, 0x30, 0x30,
		0x50, 0x49, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x42, 0x44, 0x50, 0x2d, 0x31, 0x36, 0x30, 0x50, 0x69,
		0x6f, 0x6e, 0x65, 0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x50,
		0x69, 0x78, 0x65, 0x6c, 0x61, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x65, 0x75, 0x6d, 0x20, 0x24, 0x31,
		0x50, 0x69, 0x78, 0x65, 0x6c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x69, 0x78, 0x75, 0x73, 0x52,
		0x69, 0x64, 0x65, 0x20, 0x24, 0x31, 0x47, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x54, 0x68, 0x72, 0x65,
		0x65, 0x20, 0x76, 0x24, 0x31, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x54, 0x77, 0x6f, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x46, 0x69, 0x76, 0x65, 0x68, 0x69, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x70, 0x72,
		0x69, 0x6e, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x57, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x65,
		0x46, 0x6f, 0x6c, 0x69, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x37, 0x20, 0x33, 0x47, 0x48,
		0x69, 0x4d, 0x61, 0x78, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x4a, 0x6f, 0x6b, 0x65, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42,
		0x6c, 0x61, 0x7a, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x52, 0x61, 0x7a,
		0x65, 0x50, 0x69, 0x78, 0x75, 0x73, 0x5f, 0x4a, 0x65, 0x74, 0x4a, 0x65, 0x74, 0x70, 0x69, 0x78,
		0x75, 0x73, 0x20, 0x68, 0x69, 0x74, 0x20, 0x32, 0x48, 0x69, 0x74, 0x20, 0x32, 0x50, 0x6c, 0x61,
		0x6e, 0x65, 0x74, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x47, 0x65, 0x6d,
		0x69, 0x6e, 0x69, 0x20, 0x34, 0x47, 0x50, 0x6c, 0x61, 0x74, 0x6f, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x4e, 0x6f, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x4e, 0x6f, 0x77, 0x20, 0x54, 0x56,
		0x20, 0x42, 0x6f, 0x78, 0x20, 0x32, 0x50, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x4d, 0x4f, 0x4d, 0x4f,
		0x6d, 0x69, 0x6e, 0x69, 0x53, 0x4d, 0x4f, 0x4d, 0x4f, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x53,
		0x6d, 0x6f, 0x6d, 0x6f, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x47, 0x53, 0x4d, 0x4f, 0x4d,
		0x4f, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x47, 0x53, 0x4d, 0x4f, 0x4d, 0x4f, 0x20, 0x24,
		0x31, 0x50, 0x6c, 0x75, 0x6d, 0x5a, 0x34, 0x30, 0x35, 0x47, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x33,
		0x5a, 0x34, 0x30, 0x37, 0x41, 0x78, 0x65, 0x20, 0x34, 0x5a, 0x35, 0x31, 0x36, 0x43, 0x6f, 0x6d,
		0x70, 0x61, 0x73, 0x73, 0x5a, 0x35, 0x31, 0x38, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73, 0x20,
		0x32, 0x5a, 0x35, 0x31, 0x39, 0x47, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x35, 0x5a, 0x38, 0x31, 0x31,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x78, 0x20, 0x31, 0x31, 0x5a, 0x37, 0x30, 0x39, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x61, 0x78, 0x20, 0x37, 0x5a, 0x37, 0x31, 0x32, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x61, 0x78, 0x20, 0x31, 0x32, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x6c,
		0x75, 0x7a, 0x7a, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x31, 0x30,
		0x20, 0x33, 0x47, 0x41, 0x31, 0x30, 0x53, 0x55, 0x52, 0x46, 0x70, 0x61, 0x64, 0x20, 0x32, 0x53,
		0x55, 0x52, 0x46, 0x70, 0x61, 0x64, 0x20, 0x33, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x22, 0x53,
		0x55, 0x52, 0x46, 0x70, 0x61, 0x64, 0x20, 0x34, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x69, 0x6e, 0x74,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x4d, 0x38, 0x30, 0x50, 0x6f, 0x69, 0x6e, 0x74,
		0x20, 0x6f, 0x66, 0x20, 0x56, 0x69, 0x65, 0x77, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x56, 0x2d, 0x48,
		0x44, 0x4d, 0x49, 0x2d, 0x4b, 0x42, 0x2d, 0x30, 0x31, 0x48, 0x44, 0x4d, 0x49, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x44, 0x6f, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x4f, 0x56,
		0x5f, 0x54, 0x56, 0x2d, 0x48, 0x44, 0x4d, 0x49, 0x2d, 0x32, 0x30, 0x30, 0x42, 0x54, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x50, 0x43, 0x20, 0x48, 0x44, 0x4d, 0x49, 0x20, 0x44, 0x6f, 0x6e, 0x67, 0x6c,
		0x65, 0x4d, 0x4f, 0x42, 0x2d, 0x35, 0x30, 0x34, 0x35, 0x4d, 0x6f, 0x62, 0x69, 0x69, 0x20, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x30, 0x34, 0x35, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42,
		0x2d, 0x50, 0x35, 0x30, 0x36, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35, 0x30, 0x36, 0x20, 0x4e, 0x61,
		0x76, 0x69, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35, 0x30, 0x37, 0x20, 0x4e, 0x61, 0x76, 0x69, 0x50,
		0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x35, 0x32, 0x37, 0x53, 0x4f, 0x4e, 0x59, 0x58,
		0x20, 0x35, 0x32, 0x37, 0x53, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x35, 0x34,
		0x37, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35, 0x34, 0x37, 0x20, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x4f,
		0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x52, 0x4f, 0x54, 0x41, 0x42, 0x32, 0x36, 0x50, 0x72,
		0x6f, 0x54, 0x61, 0x62, 0x20, 0x32, 0x36, 0x20, 0x58, 0x58, 0x4c, 0x20, 0x49, 0x50, 0x53, 0x50,
		0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x32, 0x35, 0x58, 0x58, 0x4c, 0x50, 0x4f, 0x56, 0x5f, 0x54,
		0x41, 0x42, 0x2d, 0x50, 0x4c, 0x31, 0x30, 0x31, 0x35, 0x4d, 0x6f, 0x62, 0x69, 0x69, 0x20, 0x31,
		0x30, 0x31, 0x35, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x31, 0x30, 0x32, 0x33, 0x32, 0x2d, 0x33, 0x47,
		0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x30, 0x32, 0x33, 0x32, 0x20, 0x33, 0x47, 0x50, 0x72, 0x6f,
		0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4d, 0x6f, 0x62, 0x69, 0x69, 0x20, 0x24, 0x31, 0x50, 0x6f,
		0x6c, 0x61, 0x72, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x6c, 0x61,
		0x72, 0x6f, 0x69, 0x64, 0x50, 0x34, 0x30, 0x30, 0x35, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20,
		0x43, 0x34, 0x50, 0x35, 0x30, 0x30, 0x35, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x43, 0x35,
		0x50, 0x34, 0x30, 0x30, 0x36, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x44, 0x34, 0x50, 0x53,
		0x50, 0x54, 0x44, 0x32, 0x31, 0x4e, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x44, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x50, 0x34, 0x35, 0x32, 0x36, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20,
		0x45, 0x50, 0x53, 0x50, 0x43, 0x4c, 0x33, 0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20,
		0x43, 0x36, 0x50, 0x35, 0x30, 0x30, 0x36, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x50,
		0x35, 0x35, 0x32, 0x36, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x53, 0x50, 0x43, 0x4b, 0x32, 0x30, 0x4e, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20,
		0x4b, 0x32, 0x50, 0x53, 0x50, 0x43, 0x4b, 0x32, 0x31, 0x4e, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f,
		0x20, 0x4b, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x35, 0x30, 0x32, 0x36, 0x41, 0x43, 0x6f,
		0x73, 0x6d, 0x6f, 0x20, 0x4c, 0x50, 0x53, 0x50, 0x43, 0x4c, 0x32, 0x30, 0x41, 0x30, 0x43, 0x6f,
		0x73, 0x6d, 0x6f, 0x20, 0x4c, 0x32, 0x50, 0x53, 0x50, 0x43, 0x4d, 0x32, 0x30, 0x41, 0x30, 0x43,
		0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4d, 0x32, 0x50, 0x35, 0x30, 0x34, 0x36, 0x41, 0x43, 0x6f, 0x73,
		0x6d, 0x6f, 0x20, 0x50, 0x35, 0x73, 0x50, 0x35, 0x35, 0x32, 0x35, 0x41, 0x43, 0x6f, 0x73, 0x6d,
		0x6f, 0x20, 0x51, 0x35, 0x73, 0x50, 0x35, 0x30, 0x34, 0x37, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f,
		0x20, 0x5a, 0x50, 0x53, 0x50, 0x43, 0x5a, 0x32, 0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f,
		0x20, 0x5a, 0x32, 0x50, 0x35, 0x30, 0x32, 0x35, 0x41, 0x4c, 0x35, 0x73, 0x50, 0x72, 0x6f, 0x34,
		0x36, 0x31, 0x31, 0x50, 0x52, 0x4f, 0x35, 0x30, 0x32, 0x33, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f,
		0x6d, 0x20, 0x35, 0x50, 0x52, 0x4f, 0x56, 0x34, 0x30, 0x30, 0x41, 0x67, 0x61, 0x74, 0x65, 0x50,
		0x52, 0x4f, 0x56, 0x33, 0x35, 0x30, 0x50, 0x72, 0x6f, 0x56, 0x33, 0x35, 0x30, 0x53, 0x69, 0x67,
		0x6d, 0x61, 0x20, 0x35, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x50, 0x53, 0x50, 0x54, 0x33, 0x35, 0x30,
		0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x33, 0x35, 0x30, 0x20, 0x47, 0x72, 0x69, 0x73, 0x50, 0x53,
		0x4e, 0x2d, 0x48, 0x31, 0x31, 0x36, 0x53, 0x6e, 0x61, 0x70, 0x50, 0x75, 0x72, 0x65, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x33, 0x47, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x50,
		0x6f, 0x6c, 0x65, 0x73, 0x74, 0x61, 0x72, 0x50, 0x6f, 0x6c, 0x79, 0x50, 0x61, 0x64, 0x50, 0x6f,
		0x6c, 0x79, 0x74, 0x72, 0x6f, 0x6e, 0x52, 0x32, 0x35, 0x30, 0x38, 0x52, 0x6f, 0x63, 0x6b, 0x65,
		0x74, 0x20, 0x51, 0x2d, 0x46, 0x69, 0x76, 0x65, 0x52, 0x32, 0x34, 0x30, 0x31, 0x52, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x20, 0x32, 0x58, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x52, 0x32, 0x34,
		0x30, 0x32, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x52, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x65,
		0x74, 0x20, 0x52, 0x32, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x52, 0x33, 0x52, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x20, 0x53, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x53, 0x32, 0x52,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54,
		0x33, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x36, 0x20, 0x53, 0x45, 0x52, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x20, 0x54, 0x36, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x37, 0x52,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x34, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x4a,
		0x65, 0x74, 0x7a, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x4a, 0x65, 0x74, 0x7a, 0x20, 0x35,
		0x2e, 0x30, 0x34, 0x47, 0x34, 0x35, 0x30, 0x5a, 0x61, 0x70, 0x20, 0x35, 0x57, 0x36, 0x35, 0x30,
		0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x57, 0x37,
		0x34, 0x35, 0x32, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x53, 0x32, 0x57, 0x37, 0x35, 0x35,
		0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x56, 0x35, 0x57, 0x38, 0x35, 0x37, 0x30, 0x51,
		0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x56, 0x37, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x4c,
		0x35, 0x30, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x53, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x34, 0x47, 0x35, 0x30, 0x30, 0x5a, 0x61, 0x70, 0x20, 0x36,
		0x20, 0x43, 0x6c, 0x65, 0x6f, 0x57, 0x38, 0x34, 0x38, 0x30, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61,
		0x6c, 0x20, 0x34, 0x20, 0x57, 0x38, 0x34, 0x38, 0x30, 0x57, 0x37, 0x35, 0x33, 0x31, 0x57, 0x69,
		0x7a, 0x61, 0x72, 0x64, 0x20, 0x56, 0x57, 0x37, 0x34, 0x33, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72,
		0x61, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x57, 0x37, 0x34, 0x33, 0x30, 0x5a, 0x61, 0x70, 0x20,
		0x36, 0x20, 0x50, 0x6f, 0x73, 0x68, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x46, 0x6c, 0x61, 0x7a, 0x5a, 0x61, 0x70, 0x20, 0x36,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x50, 0x6f, 0x73, 0x68, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x50, 0x57, 0x31, 0x31, 0x30, 0x30, 0x53, 0x51, 0x32, 0x33, 0x35, 0x32,
		0x52, 0x32, 0x35, 0x35, 0x42, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x54, 0x38, 0x43, 0x6f, 0x73,
		0x6d, 0x69, 0x63, 0x61, 0x20, 0x54, 0x37, 0x38, 0x30, 0x30, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74,
		0x20, 0x50, 0x61, 0x64, 0x50, 0x6f, 0x6d, 0x70, 0x50, 0x6f, 0x70, 0x70, 0x6f, 0x78, 0x50, 0x6f,
		0x70, 0x70, 0x6f, 0x78, 0x20, 0x50, 0x33, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65, 0x50, 0x6f,
		0x72, 0x73, 0x63, 0x68, 0x65, 0x20, 0x52, 0x65, 0x61, 0x72, 0x20, 0x53, 0x65, 0x61, 0x74, 0x20,
		0x45, 0x6e, 0x74, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72,
		0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x59, 0x50,
		0x59, 0x5f, 0x53, 0x34, 0x35, 0x30, 0x59, 0x50, 0x59, 0x20, 0x53, 0x34, 0x35, 0x30, 0x54, 0x77,
		0x69, 0x73, 0x74, 0x20, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20,
		0x35, 0x20, 0x4d, 0x61, 0x78, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x34, 0x20, 0x24, 0x31, 0x59,
		0x4f, 0x4c, 0x4f, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x34, 0x20, 0x46, 0x69, 0x74, 0x55, 0x50,
		0x20, 0x33, 0x32, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x77,
		0x69, 0x73, 0x74, 0x20, 0x34, 0x47, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x34, 0x54, 0x31, 0x30,
		0x38, 0x35, 0x4d, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x58, 0x4d, 0x31,
		0x30, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x58, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
		0x76, 0x6f, 0x20, 0x42, 0x47, 0x48, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x54, 0x77, 0x69, 0x73,
		0x74, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x65,
		0x74, 0x61, 0x6c, 0x20, 0x33, 0x32, 0x47, 0x42, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x65,
		0x74, 0x61, 0x6c, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x54, 0x77, 0x69, 0x73,
		0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x32, 0x20, 0x46, 0x69,
		0x74, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x32, 0x20, 0x47, 0x6f, 0x54, 0x77, 0x69, 0x73, 0x74,
		0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x58, 0x4c, 0x54, 0x77,
		0x69, 0x73, 0x74, 0x20, 0x53, 0x45, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x24, 0x31, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x49, 0x59, 0x70, 0x79, 0x20, 0x24, 0x31, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20,
		0x54, 0x61, 0x62, 0x4d, 0x41, 0x58, 0x49, 0x20, 0x32, 0x30, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x32,
		0x30, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x6f, 0x31, 0x38, 0x36, 0x48, 0x53, 0x32, 0x30, 0x38, 0x30,
		0x35, 0x33, 0x31, 0x41, 0x58, 0x45, 0x5f, 0x49, 0x49, 0x41, 0x78, 0x65, 0x20, 0x49, 0x49, 0x41,
		0x78, 0x65, 0x31, 0x38, 0x36, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x35, 0x33, 0x31, 0x50, 0x35,
		0x34, 0x31, 0x31, 0x38, 0x35, 0x46, 0x54, 0x35, 0x30, 0x35, 0x30, 0x32, 0x33, 0x31, 0x50, 0x35,
		0x31, 0x31, 0x31, 0x38, 0x36, 0x46, 0x54, 0x31, 0x30, 0x38, 0x30, 0x32, 0x33, 0x31, 0x50, 0x35,
		0x37, 0x31, 0x31, 0x38, 0x36, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x32, 0x33, 0x32, 0x50, 0x36,
		0x33, 0x30, 0x58, 0x24, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x50, 0x72, 0x65, 0x73,
		0x74, 0x69, 0x67, 0x69, 0x6f, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x69, 0x6f, 0x20, 0x35,
		0x35, 0x30, 0x30, 0x20, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x35, 0x35, 0x30, 0x30, 0x20, 0x44, 0x75, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x50, 0x53, 0x50, 0x35, 0x35, 0x35, 0x31, 0x44,
		0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x53, 0x35, 0x50, 0x53, 0x50, 0x37, 0x35, 0x39,
		0x30, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x56, 0x37, 0x20, 0x4c, 0x54, 0x45,
		0x50, 0x53, 0x50, 0x37, 0x35, 0x35, 0x31, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20,
		0x53, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x34, 0x37, 0x30, 0x44, 0x55, 0x4f,
		0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x58, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x33, 0x30, 0x44,
		0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x5a, 0x35, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33,
		0x33, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x5a, 0x33, 0x50, 0x53, 0x50, 0x35,
		0x35, 0x31, 0x35, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x50, 0x35, 0x50, 0x53,
		0x50, 0x35, 0x35, 0x35, 0x32, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x52, 0x35,
		0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x30, 0x36, 0x44, 0x55, 0x4f, 0x47, 0x72,
		0x61, 0x63, 0x65, 0x20, 0x51, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x31, 0x44, 0x55, 0x4f,
		0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37,
		0x35, 0x30, 0x31, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x52, 0x37, 0x50, 0x53,
		0x50, 0x37, 0x35, 0x37, 0x30, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x50, 0x37,
		0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x37, 0x32, 0x44, 0x55, 0x4f, 0x47, 0x72,
		0x61, 0x63, 0x65, 0x20, 0x42, 0x37, 0x50, 0x53, 0x50, 0x33, 0x35, 0x35, 0x32, 0x44, 0x55, 0x4f,
		0x4d, 0x75, 0x7a, 0x65, 0x20, 0x48, 0x33, 0x50, 0x53, 0x50, 0x35, 0x35, 0x32, 0x33, 0x44, 0x55,
		0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x48, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x33,
		0x35, 0x31, 0x35, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x4d, 0x33, 0x20, 0x4c, 0x54,
		0x45, 0x50, 0x53, 0x50, 0x33, 0x34, 0x39, 0x35, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20,
		0x56, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33, 0x34, 0x44, 0x55, 0x4f,
		0x4d, 0x75, 0x7a, 0x65, 0x20, 0x4b, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35,
		0x31, 0x33, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x44, 0x35, 0x20, 0x4c, 0x54, 0x45,
		0x50, 0x53, 0x50, 0x35, 0x35, 0x32, 0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x42,
		0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x38, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20,
		0x58, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x35, 0x33, 0x44, 0x55, 0x4f,
		0x4d, 0x75, 0x7a, 0x65, 0x20, 0x46, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35,
		0x30, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x41, 0x35, 0x50, 0x53, 0x50, 0x35,
		0x35, 0x34, 0x35, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x45, 0x35, 0x20, 0x4c, 0x54,
		0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x31, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20,
		0x45, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x31, 0x44, 0x55, 0x4f,
		0x4d, 0x75, 0x7a, 0x65, 0x20, 0x47, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35,
		0x32, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x47, 0x35, 0x20, 0x4c, 0x54, 0x45,
		0x50, 0x53, 0x50, 0x37, 0x35, 0x35, 0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x47,
		0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x31, 0x30, 0x44, 0x55, 0x4f, 0x4d,
		0x75, 0x7a, 0x65, 0x20, 0x43, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x43,
		0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20,
		0x42, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65,
		0x20, 0x46, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x37, 0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a,
		0x65, 0x20, 0x4a, 0x33, 0x50, 0x53, 0x50, 0x35, 0x35, 0x32, 0x34, 0x44, 0x55, 0x4f, 0x4d, 0x75,
		0x7a, 0x65, 0x20, 0x4a, 0x35, 0x50, 0x53, 0x50, 0x37, 0x35, 0x31, 0x31, 0x44, 0x55, 0x4f, 0x4d,
		0x75, 0x7a, 0x65, 0x20, 0x42, 0x37, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x34, 0x44, 0x55, 0x4f,
		0x57, 0x69, 0x7a, 0x65, 0x20, 0x55, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x33, 0x44, 0x55,
		0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x56, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x31, 0x36, 0x44,
		0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x59, 0x41, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x30,
		0x36, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x59, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34,
		0x32, 0x33, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x52, 0x33, 0x50, 0x53, 0x50, 0x33,
		0x34, 0x37, 0x31, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x51, 0x33, 0x20, 0x4c, 0x54,
		0x45, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x30, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20,
		0x47, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33, 0x37, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65,
		0x20, 0x4e, 0x56, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x32, 0x38, 0x44, 0x55, 0x4f, 0x57, 0x69,
		0x7a, 0x65, 0x20, 0x50, 0x58, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x32, 0x37, 0x44, 0x55, 0x4f,
		0x57, 0x69, 0x7a, 0x65, 0x20, 0x4e, 0x4b, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x36, 0x38, 0x44,
		0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x4f, 0x4b, 0x33, 0x53, 0x49, 0x4c, 0x56, 0x45, 0x52,
		0x20, 0x50, 0x4f, 0x53, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x20, 0x50, 0x4f, 0x53, 0x50, 0x4d,
		0x54, 0x33, 0x32, 0x37, 0x37, 0x5f, 0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x50,
		0x4d, 0x54, 0x34, 0x33, 0x33, 0x37, 0x5f, 0x33, 0x47, 0x53, 0x65, 0x65, 0x64, 0x20, 0x41, 0x37,
		0x20, 0x33, 0x47, 0x50, 0x4d, 0x54, 0x33, 0x39, 0x39, 0x37, 0x5f, 0x57, 0x5f, 0x44, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x4b, 0x69, 0x64, 0x73, 0x50, 0x4d, 0x54, 0x33, 0x31, 0x30, 0x33, 0x5f, 0x57,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x4d, 0x54,
		0x33, 0x31, 0x30, 0x34, 0x5f, 0x57, 0x69, 0x5f, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4b, 0x69,
		0x64, 0x73, 0x20, 0x55, 0x70, 0x50, 0x4d, 0x54, 0x34, 0x35, 0x31, 0x31, 0x5f, 0x34, 0x47, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x4d, 0x54, 0x34,
		0x32, 0x30, 0x38, 0x4e, 0x6f, 0x64, 0x65, 0x20, 0x41, 0x38, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x54,
		0x34, 0x37, 0x37, 0x31, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x41, 0x31, 0x30, 0x20, 0x33, 0x47, 0x50,
		0x4d, 0x50, 0x37, 0x30, 0x37, 0x30, 0x43, 0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x34, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22,
		0x20, 0x33, 0x47, 0x47, 0x65, 0x6f, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f,
		0x75, 0x72, 0x20, 0x33, 0x47, 0x65, 0x6f, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x37,
		0x37, 0x37, 0x37, 0x47, 0x65, 0x6f, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f,
		0x75, 0x72, 0x20, 0x32, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47,
		0x50, 0x4d, 0x54, 0x33, 0x32, 0x38, 0x37, 0x5f, 0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x20, 0x38, 0x2e, 0x30, 0x20, 0x33, 0x47,
		0x50, 0x4d, 0x54, 0x34, 0x32, 0x33, 0x38, 0x5f, 0x34, 0x47, 0x51, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64, 0x20, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x20,
		0x24, 0x32, 0x47, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x4d, 0x75,
		0x7a, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x20,
		0x4d, 0x61, 0x78, 0x50, 0x54, 0x56, 0x24, 0x31, 0x43, 0x49, 0x53, 0x24, 0x32, 0x4d, 0x75, 0x6c,
		0x74, 0x69, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x24, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x70, 0x61, 0x64, 0x50, 0x44, 0x2d, 0x33, 0x31, 0x32, 0x37, 0x4e, 0x43, 0x50, 0x44, 0x2d, 0x33,
		0x31, 0x32, 0x37, 0x50, 0x72, 0x69, 0x6d, 0x75, 0x78, 0x49, 0x4f, 0x58, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x20, 0x36, 0x4b, 0x61, 0x70, 0x70, 0x61, 0x20, 0x24,
		0x31, 0x4b, 0x61, 0x70, 0x70, 0x61, 0x42, 0x65, 0x74, 0x61, 0x20, 0x32, 0x4f, 0x6d, 0x65, 0x67,
		0x61, 0x20, 0x36, 0x20, 0x34, 0x47, 0x55, 0x50, 0x5a, 0x6f, 0x6e, 0x64, 0x61, 0x20, 0x34, 0x53,
		0x69, 0x72, 0x6f, 0x63, 0x6f, 0x20, 0x36, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x6f, 0x20, 0x59, 0x50,
		0x72, 0x69, 0x74, 0x6f, 0x6d, 0x4d, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x31, 0x30,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x4b, 0x37, 0x5f, 0x41, 0x31, 0x30, 0x31, 0x4b, 0x37, 0x20, 0x41,
		0x31, 0x30, 0x31, 0x4d, 0x31, 0x30, 0x5f, 0x41, 0x69, 0x72, 0x4d, 0x31, 0x30, 0x20, 0x41, 0x69,
		0x72, 0x4d, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x37, 0x5f, 0x45, 0x45, 0x41, 0x50, 0x37, 0x50, 0x37, 0x50, 0x52, 0x4f, 0x54, 0x72,
		0x6f, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x50, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x72, 0x69, 0x78,
		0x74, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x53, 0x63, 0x61, 0x6e, 0x50, 0x4c, 0x54, 0x24, 0x31, 0x50,
		0x4c, 0x54, 0x24, 0x31, 0x47, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72,
		0x6f, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x20, 0x58, 0x4c, 0x4d, 0x35,
		0x30, 0x34, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x20, 0x58, 0x50, 0x72, 0x6f, 0x6c, 0x6f, 0x67,
		0x79, 0x50, 0x72, 0x6f, 0x74, 0x72, 0x75, 0x6c, 0x79, 0x50, 0x75, 0x6e, 0x6f, 0x73, 0x50, 0x75,
		0x72, 0x69, 0x73, 0x6d, 0x4c, 0x69, 0x62, 0x72, 0x65, 0x6d, 0x20, 0x35, 0x51, 0x2d, 0x42, 0x6f,
		0x78, 0x51, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x51, 0x2e, 0x42, 0x65, 0x6c, 0x6c, 0x51, 0x54,
		0x41, 0x42, 0x31, 0x30, 0x45, 0x57, 0x51, 0x46, 0x58, 0x51, 0x49, 0x4e, 0x51, 0x4c, 0x69, 0x6e,
		0x6b, 0x53, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x20, 0x38, 0x51, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x4a, 0x61, 0x7a, 0x7a, 0x58, 0x20, 0x4a, 0x53, 0x37, 0x20, 0x50, 0x52, 0x4f, 0x4a, 0x61,
		0x7a, 0x7a, 0x20, 0x58, 0x20, 0x4a, 0x53, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x61, 0x7a, 0x7a,
		0x20, 0x58, 0x20, 0x4a, 0x53, 0x24, 0x31, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x41, 0x31, 0x20, 0x6c,
		0x69, 0x74, 0x65, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x41, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e,
		0x6f, 0x69, 0x72, 0x20, 0x24, 0x31, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x41, 0x36, 0x30, 0x30, 0x5a,
		0x31, 0x32, 0x20, 0x50, 0x52, 0x4f, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x5a, 0x31, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x45, 0x32, 0x20, 0x4e, 0x6f, 0x69, 0x72, 0x48, 0x6f, 0x74, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x32, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x4c, 0x54, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56,
		0x69, 0x65, 0x77, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x37, 0x30, 0x30, 0x20,
		0x50, 0x52, 0x4f, 0x20, 0x49, 0x49, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x49,
		0x49, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x37,
		0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x37, 0x30, 0x30, 0x20,
		0x50, 0x52, 0x4f, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x33, 0x35, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x4c, 0x55, 0x4e, 0x41, 0x20, 0x50, 0x52, 0x4f, 0x4c, 0x75, 0x6e, 0x61, 0x20,
		0x50, 0x72, 0x6f, 0x56, 0x49, 0x54, 0x41, 0x20, 0x53, 0x56, 0x69, 0x74, 0x61, 0x20, 0x53, 0x4e,
		0x49, 0x43, 0x45, 0x20, 0x53, 0x4e, 0x69, 0x63, 0x65, 0x20, 0x53, 0x56, 0x24, 0x31, 0x20, 0x4d,
		0x65, 0x74, 0x61, 0x6c, 0x69, 0x24, 0x31, 0x69, 0x20, 0x28, 0x32, 0x30, 0x24, 0x32, 0x29, 0x69,
		0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x24, 0x31, 0x29, 0x69, 0x36, 0x69, 0x20, 0x32, 0x30, 0x32,
		0x30, 0x69, 0x36, 0x69, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x69, 0x38, 0x69, 0x20, 0x50,
		0x52, 0x4f, 0x69, 0x38, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x38, 0x69, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x51, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x49, 0x38, 0x69, 0x69, 0x38, 0x69, 0x69,
		0x36, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x4f, 0x4e, 0x45, 0x69, 0x36, 0x20, 0x4d, 0x65,
		0x74, 0x61, 0x6c, 0x20, 0x4f, 0x6e, 0x65, 0x69, 0x36, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20,
		0x48, 0x44, 0x69, 0x36, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x28, 0x24, 0x31, 0x29, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x48, 0x44, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x6f, 0x63, 0x6b, 0x65,
		0x74, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4d, 0x61, 0x72, 0x6b, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x20, 0x32, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
		0x20, 0x74, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x54, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x73,
		0x61, 0x6e, 0x74, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x53, 0x61,
		0x6e, 0x74, 0x6f, 0x73, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50,
		0x52, 0x4f, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f,
		0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x4c, 0x69,
		0x6e, 0x71, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x69, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x4c, 0x69,
		0x56, 0x32, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x24, 0x31, 0x20, 0x54, 0x61, 0x62, 0x51,
		0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x51, 0x54, 0x45, 0x43, 0x48, 0x51, 0x4d,
		0x50, 0x20, 0x24, 0x31, 0x51, 0x57, 0x41, 0x54, 0x54, 0x51, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x51,
		0x37, 0x53, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x37, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x34,
		0x47, 0x51, 0x37, 0x53, 0x35, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x37, 0x20, 0x35, 0x2e, 0x35,
		0x22, 0x20, 0x34, 0x47, 0x51, 0x38, 0x53, 0x35, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x32, 0x51, 0x38,
		0x20, 0x35, 0x2e, 0x35, 0x22, 0x20, 0x34, 0x47, 0x51, 0x38, 0x53, 0x36, 0x49, 0x4e, 0x34, 0x47,
		0x51, 0x38, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x38, 0x53, 0x35, 0x49, 0x4e,
		0x34, 0x47, 0x50, 0x51, 0x38, 0x20, 0x35, 0x2e, 0x31, 0x22, 0x20, 0x34, 0x47, 0x51, 0x39, 0x53,
		0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51,
		0x39, 0x53, 0x35, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x20,
		0x34, 0x47, 0x51, 0x31, 0x30, 0x53, 0x35, 0x33, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x31, 0x30, 0x20,
		0x35, 0x2e, 0x33, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x53, 0x35, 0x37, 0x49, 0x4e, 0x34,
		0x47, 0x51, 0x31, 0x30, 0x20, 0x35, 0x2e, 0x37, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x20,
		0x35, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x53, 0x36, 0x49, 0x4e, 0x34, 0x47,
		0x51, 0x31, 0x30, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x36, 0x54, 0x37, 0x49,
		0x4e, 0x51, 0x37, 0x54, 0x31, 0x30, 0x49, 0x4e, 0x50, 0x51, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x51, 0x38, 0x54, 0x31, 0x30, 0x49, 0x4e, 0x51, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x51, 0x39, 0x54, 0x37, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20,
		0x34, 0x47, 0x51, 0x39, 0x54, 0x39, 0x49, 0x4e, 0x51, 0x39, 0x20, 0x39, 0x2e, 0x30, 0x22, 0x51,
		0x39, 0x54, 0x31, 0x30, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x34, 0x47, 0x51, 0x54, 0x32, 0x31, 0x31, 0x30, 0x31, 0x51, 0x31, 0x2d, 0x32, 0x31, 0x51,
		0x54, 0x32, 0x31, 0x30, 0x38, 0x42, 0x50, 0x51, 0x34, 0x2d, 0x32, 0x31, 0x39, 0x37, 0x52, 0x2d,
		0x32, 0x39, 0x37, 0x52, 0x32, 0x51, 0x6e, 0x65, 0x74, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x48, 0x79, 0x6e, 0x65, 0x78, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x6b, 0x20, 0x4b, 0x31, 0x48, 0x79,
		0x6e, 0x65, 0x78, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x79, 0x6e, 0x65, 0x78,
		0x20, 0x24, 0x31, 0x4c, 0x65, 0x76, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x41, 0x73, 0x74, 0x6f, 0x6e,
		0x20, 0x41, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x74, 0x65, 0x6b, 0x51, 0x75, 0x61,
		0x6e, 0x74, 0x75, 0x6d, 0x4c, 0x69, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x6f, 0x20, 0x32,
		0x51, 0x72, 0x61, 0x73, 0x68, 0x4d, 0x55, 0x56, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x55, 0x56, 0x20,
		0x55, 0x70, 0x55, 0x70, 0x51, 0x2d, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x6f, 0x20, 0x24, 0x31, 0x51,
		0x2d, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x37, 0x30, 0x4d, 0x51, 0x2d, 0x57, 0x61, 0x76, 0x65,
		0x20, 0x24, 0x31, 0x51, 0x75, 0x61, 0x74, 0x72, 0x6f, 0x51, 0x75, 0x62, 0x6f, 0x4d, 0x69, 0x6e,
		0x65, 0x72, 0x76, 0x61, 0x58, 0x36, 0x36, 0x38, 0x5f, 0x36, 0x34, 0x47, 0x42, 0x58, 0x36, 0x36,
		0x38, 0x54, 0x31, 0x30, 0x34, 0x51, 0x75, 0x65, 0x63, 0x68, 0x75, 0x61, 0x51, 0x75, 0x65, 0x63,
		0x68, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x52, 0x41, 0x50, 0x54, 0x4f,
		0x52, 0x52, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x69, 0x70, 0x75, 0x73, 0x54, 0x69, 0x6e,
		0x6b, 0x75, 0x51, 0x75, 0x6d, 0x6f, 0x56, 0x65, 0x67, 0x61, 0x20, 0x24, 0x31, 0x59, 0x6f, 0x6f,
		0x64, 0x61, 0x53, 0x69, 0x72, 0x69, 0x75, 0x73, 0x20, 0x24, 0x31, 0x51, 0x75, 0x65, 0x73, 0x74,
		0x20, 0x24, 0x31, 0x51, 0x77, 0x61, 0x72, 0x65, 0x54, 0x42, 0x2d, 0x39, 0x37, 0x31, 0x38, 0x51,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x54, 0x42, 0x2d, 0x31, 0x33, 0x38, 0x30, 0x51, 0x50, 0x72, 0x6f,
		0x20, 0x34, 0x54, 0x42, 0x2d, 0x31, 0x33, 0x31, 0x37, 0x51, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x54,
		0x42, 0x2d, 0x31, 0x35, 0x31, 0x37, 0x44, 0x54, 0x61, 0x62, 0x62, 0x79, 0x52, 0x2d, 0x54, 0x56,
		0x42, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x52, 0x43, 0x41, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x73, 0x52, 0x43, 0x41, 0x52, 0x45, 0x4e, 0x4f, 0x35, 0x30, 0x31, 0x31, 0x36, 0x31, 0x39, 0x52,
		0x43, 0x54, 0x36, 0x35, 0x31, 0x33, 0x57, 0x38, 0x37, 0x47, 0x61, 0x6c, 0x69, 0x6c, 0x65, 0x6f,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65,
		0x72, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x72, 0x20, 0x49, 0x49,
		0x49, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x37, 0x37, 0x33, 0x57, 0x32, 0x32,
		0x42, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x72, 0x20, 0x49, 0x49, 0x20, 0x37, 0x2e, 0x30, 0x22,
		0x41, 0x74, 0x6c, 0x61, 0x73, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x32,
		0x30, 0x33, 0x57, 0x34, 0x36, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x20, 0x49, 0x49, 0x52, 0x43, 0x54, 0x36, 0x41, 0x30, 0x36, 0x50, 0x32,
		0x32, 0x45, 0x6e, 0x64, 0x65, 0x61, 0x76, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20,
		0x48, 0x44, 0x56, 0x69, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e,
		0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x36, 0x30, 0x33, 0x57, 0x34, 0x37, 0x4d, 0x37, 0x56, 0x69,
		0x6b, 0x69, 0x6e, 0x67, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x52, 0x43, 0x54,
		0x36, 0x36, 0x31, 0x33, 0x57, 0x32, 0x33, 0x50, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x31, 0x2e, 0x36, 0x22, 0x52, 0x43, 0x54, 0x24, 0x31, 0x52, 0x43, 0x24, 0x31,
		0x52, 0x45, 0x44, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x67, 0x65, 0x6e, 0x20, 0x4f, 0x6e, 0x65, 0x52,
		0x45, 0x47, 0x41, 0x4c, 0x52, 0x65, 0x67, 0x61, 0x6c, 0x20, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
		0x20, 0x54, 0x56, 0x52, 0x49, 0x4d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79,
		0x20, 0x44, 0x54, 0x45, 0x4b, 0x36, 0x30, 0x4b, 0x45, 0x59, 0x6f, 0x6e, 0x65, 0x42, 0x42, 0x43,
		0x31, 0x30, 0x30, 0x2d, 0x31, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x45, 0x59, 0x32, 0x20,
		0x4c, 0x45, 0x4b, 0x45, 0x59, 0x32, 0x42, 0x42, 0x46, 0x31, 0x30, 0x30, 0x2d, 0x38, 0x4b, 0x45,
		0x59, 0x32, 0x20, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x42, 0x42, 0x46, 0x31, 0x30, 0x30, 0x2d,
		0x39, 0x4b, 0x45, 0x59, 0x32, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x42, 0x47, 0x31, 0x30,
		0x30, 0x2d, 0x31, 0x42, 0x42, 0x48, 0x31, 0x30, 0x30, 0x2d, 0x31, 0x45, 0x76, 0x6f, 0x6c, 0x76,
		0x65, 0x20, 0x58, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x50, 0x72,
		0x69, 0x76, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x44, 0x54, 0x45,
		0x4b, 0x35, 0x30, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x24, 0x31,
		0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x62,
		0x6f, 0x6f, 0x6b, 0x39, 0x33, 0x30, 0x30, 0x43, 0x75, 0x72, 0x76, 0x65, 0x20, 0x33, 0x47, 0x20,
		0x39, 0x33, 0x30, 0x30, 0x43, 0x75, 0x72, 0x76, 0x65, 0x20, 0x24, 0x31, 0x39, 0x36, 0x33, 0x30,
		0x54, 0x6f, 0x75, 0x72, 0x20, 0x39, 0x36, 0x33, 0x30, 0x39, 0x37, 0x32, 0x30, 0x54, 0x6f, 0x72,
		0x63, 0x68, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x52,
		0x4f, 0x41, 0x44, 0x4d, 0x41, 0x58, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x75, 0x73, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x20, 0x37, 0x52, 0x4f, 0x43, 0x48, 0x52, 0x4f, 0x69, 0x4b, 0x52, 0x54, 0x20, 0x50,
		0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x63, 0x6b, 0x20, 0x24, 0x31, 0x70, 0x6f,
		0x70, 0x70, 0x65, 0x72, 0x32, 0x50, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x20, 0x32, 0x52, 0x54, 0x4b,
		0x45, 0x53, 0x4b, 0x49, 0x4d, 0x4f, 0x21, 0x52, 0x61, 0x6b, 0x75, 0x74, 0x65, 0x6e, 0x5a, 0x52,
		0x30, 0x31, 0x42, 0x69, 0x67, 0x33, 0x39, 0x31, 0x37, 0x4a, 0x52, 0x42, 0x69, 0x67, 0x20, 0x53,
		0x50, 0x37, 0x31, 0x30, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x33, 0x33, 0x30, 0x43, 0x33, 0x33, 0x30,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x37, 0x38, 0x30, 0x48, 0x61, 0x6e, 0x64, 0x20, 0x35, 0x47,
		0x52, 0x61, 0x6d, 0x6f, 0x73, 0x4d, 0x4f, 0x53, 0x31, 0x6d, 0x61, 0x78, 0x4d, 0x4f, 0x53, 0x31,
		0x20, 0x4d, 0x61, 0x78, 0x57, 0x32, 0x32, 0x50, 0x52, 0x4f, 0x20, 0x33, 0x47, 0x57, 0x32, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x52, 0x61, 0x73, 0x70, 0x62, 0x65, 0x72, 0x72, 0x79,
		0x52, 0x61, 0x76, 0x6f, 0x7a, 0x52, 0x61, 0x79, 0x6c, 0x61, 0x6e, 0x64, 0x7a, 0x58, 0x50, 0x4f,
		0x57, 0x45, 0x52, 0x5f, 0x50, 0x36, 0x30, 0x30, 0x30, 0x58, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20,
		0x50, 0x36, 0x30, 0x30, 0x30, 0x52, 0x61, 0x7a, 0x65, 0x72, 0x52, 0x61, 0x7a, 0x65, 0x72, 0x20,
		0x45, 0x64, 0x67, 0x65, 0x20, 0x35, 0x47, 0x45, 0x64, 0x67, 0x65, 0x20, 0x35, 0x47, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x32, 0x52, 0x65, 0x61, 0x63, 0x68, 0x52, 0x65, 0x61, 0x64, 0x62, 0x6f,
		0x79, 0x43, 0x31, 0x38, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52,
		0x65, 0x61, 0x6c, 0x6d, 0x65, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x34, 0x34, 0x50, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x37, 0x30, 0x50, 0x31, 0x20, 0x35,
		0x47, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x33, 0x34, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x30, 0x47,
		0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x35, 0x32, 0x47, 0x54,
		0x20, 0x4e, 0x65, 0x6f, 0x20, 0x36, 0x47, 0x54, 0x20, 0x36, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x35,
		0x33, 0x47, 0x54, 0x20, 0x36, 0x54, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x35, 0x30, 0x47, 0x54, 0x20,
		0x4e, 0x65, 0x6f, 0x20, 0x36, 0x20, 0x53, 0x45, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x30, 0x30, 0x47,
		0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x20, 0x53, 0x45, 0x51, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x4d, 0x58, 0x33, 0x36, 0x36, 0x33, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x52, 0x4d, 0x58, 0x31, 0x38, 0x32, 0x37, 0x33, 0x69, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x52,
		0x4d, 0x58, 0x31, 0x39, 0x39, 0x33, 0x58, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32,
		0x31, 0x31, 0x37, 0x51, 0x32, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x37, 0x33, 0x51,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32, 0x32, 0x30, 0x35, 0x51, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x31, 0x36, 0x31, 0x51, 0x33, 0x20, 0x35,
		0x47, 0x52, 0x4d, 0x58, 0x33, 0x34, 0x36, 0x32, 0x51, 0x33, 0x74, 0x52, 0x4d, 0x58, 0x33, 0x33,
		0x37, 0x32, 0x51, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x33, 0x34, 0x37, 0x38, 0x51,
		0x35, 0x52, 0x4d, 0x58, 0x33, 0x35, 0x37, 0x34, 0x51, 0x35, 0x69, 0x58, 0x37, 0x20, 0x35, 0x47,
		0x58, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x58, 0x54, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x35, 0x69, 0x52, 0x4d, 0x58, 0x31, 0x39, 0x32, 0x39, 0x35, 0x73, 0x36, 0x69, 0x52, 0x4d, 0x58,
		0x32, 0x30, 0x30, 0x32, 0x36, 0x53, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32, 0x31,
		0x30, 0x33, 0x37, 0x49, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x37, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x31,
		0x31, 0x35, 0x58, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65,
		0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x4d, 0x58, 0x33, 0x30, 0x38, 0x31, 0x38,
		0x69, 0x52, 0x4d, 0x58, 0x33, 0x33, 0x38, 0x31, 0x38, 0x73, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x34,
		0x31, 0x38, 0x20, 0x35, 0x47, 0x39, 0x69, 0x52, 0x4d, 0x58, 0x33, 0x36, 0x31, 0x32, 0x39, 0x69,
		0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x35, 0x32, 0x31, 0x39, 0x20, 0x35, 0x47, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52,
		0x4d, 0x58, 0x33, 0x36, 0x31, 0x37, 0x31, 0x30, 0x73, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33,
		0x37, 0x34, 0x31, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58,
		0x33, 0x37, 0x34, 0x30, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x4d, 0x58, 0x33, 0x37,
		0x37, 0x31, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x37,
		0x37, 0x30, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x38, 0x35, 0x31,
		0x31, 0x78, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x38, 0x30, 0x31, 0x31, 0x20, 0x35,
		0x47, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x34, 0x32, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x34, 0x33, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d,
		0x58, 0x33, 0x38, 0x34, 0x31, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x4d, 0x58, 0x33,
		0x38, 0x34, 0x30, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58,
		0x33, 0x38, 0x36, 0x37, 0x31, 0x32, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x39,
		0x39, 0x31, 0x32, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x37, 0x31, 0x52, 0x4d, 0x58,
		0x33, 0x39, 0x39, 0x38, 0x31, 0x32, 0x78, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x39,
		0x33, 0x31, 0x32, 0x78, 0x35, 0x53, 0x43, 0x31, 0x31, 0x43, 0x31, 0x32, 0x43, 0x31, 0x35, 0x43,
		0x31, 0x35, 0x20, 0x51, 0x75, 0x61, 0x6c, 0x63, 0x6f, 0x6d, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74,
		0x69, 0x6f, 0x6e, 0x43, 0x31, 0x37, 0x43, 0x32, 0x30, 0x43, 0x32, 0x31, 0x43, 0x32, 0x31, 0x59,
		0x43, 0x32, 0x35, 0x43, 0x32, 0x35, 0x73, 0x43, 0x32, 0x35, 0x59, 0x43, 0x33, 0x30, 0x52, 0x4d,
		0x58, 0x33, 0x36, 0x39, 0x30, 0x43, 0x33, 0x30, 0x73, 0x43, 0x33, 0x33, 0x43, 0x33, 0x35, 0x52,
		0x4d, 0x58, 0x33, 0x37, 0x31, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x33, 0x30, 0x52, 0x4d, 0x58,
		0x33, 0x37, 0x36, 0x35, 0x43, 0x35, 0x31, 0x73, 0x43, 0x35, 0x33, 0x52, 0x4d, 0x58, 0x33, 0x39,
		0x33, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x33, 0x39, 0x43, 0x36, 0x33, 0x52, 0x4d, 0x58, 0x33,
		0x38, 0x39, 0x30, 0x43, 0x36, 0x37, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x38, 0x32, 0x43, 0x36, 0x37,
		0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x31, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x39,
		0x37, 0x43, 0x36, 0x35, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x33, 0x31, 0x43, 0x31,
		0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x47, 0x54, 0x20, 0x35, 0x52, 0x4d, 0x58, 0x33,
		0x38, 0x38, 0x38, 0x47, 0x54, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x33, 0x37,
		0x30, 0x39, 0x47, 0x54, 0x20, 0x33, 0x47, 0x54, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x54,
		0x20, 0x32, 0x52, 0x4d, 0x58, 0x33, 0x35, 0x35, 0x31, 0x47, 0x54, 0x20, 0x32, 0x20, 0x45, 0x78,
		0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x47, 0x54, 0x20,
		0x4e, 0x65, 0x6f, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x32, 0x47, 0x54, 0x20, 0x4e, 0x65,
		0x6f, 0x20, 0x33, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x35, 0x30, 0x57,
		0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x54, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20,
		0x32, 0x54, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x30, 0x31, 0x47, 0x54, 0x20, 0x4d, 0x61, 0x73, 0x74,
		0x65, 0x72, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f,
		0x20, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x32, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x39, 0x33, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x32,
		0x30, 0x52, 0x4d, 0x58, 0x32, 0x30, 0x35, 0x30, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x32, 0x30,
		0x41, 0x52, 0x4d, 0x58, 0x33, 0x31, 0x37, 0x31, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x33, 0x30,
		0x41, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x35, 0x36, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x33, 0x30,
		0x52, 0x4d, 0x58, 0x33, 0x32, 0x34, 0x32, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x33, 0x30, 0x20,
		0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x34, 0x33, 0x30, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35,
		0x30, 0x41, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x38, 0x36, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35,
		0x30, 0x52, 0x4d, 0x58, 0x33, 0x35, 0x37, 0x32, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30,
		0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x33, 0x39, 0x35, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20,
		0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x33, 0x33, 0x39, 0x36, 0x4e, 0x61, 0x72,
		0x7a, 0x6f, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4e, 0x61, 0x72, 0x7a,
		0x6f, 0x20, 0x35, 0x30, 0x41, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x4d, 0x58, 0x33, 0x32,
		0x33, 0x35, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x69, 0x52, 0x4d, 0x58, 0x33, 0x35,
		0x30, 0x36, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x69, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x35, 0x30, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x36, 0x30,
		0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x36, 0x38, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20,
		0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x36, 0x31,
		0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x4e, 0x35, 0x33, 0x58, 0x35, 0x30, 0x20, 0x35, 0x47, 0x58,
		0x35, 0x30, 0x74, 0x20, 0x35, 0x47, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x65, 0x72, 0x58, 0x33, 0x20, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x5a, 0x6f,
		0x6f, 0x6d, 0x52, 0x4d, 0x58, 0x32, 0x30, 0x38, 0x33, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x65, 0x20,
		0x58, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x35, 0x47, 0x58, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x35, 0x47, 0x51, 0x33, 0x73, 0x56, 0x35, 0x20, 0x35, 0x47, 0x56, 0x33, 0x20, 0x35, 0x47, 0x52,
		0x4d, 0x58, 0x33, 0x36, 0x31, 0x38, 0x56, 0x31, 0x31, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33,
		0x31, 0x32, 0x35, 0x56, 0x31, 0x31, 0x73, 0x20, 0x35, 0x47, 0x56, 0x31, 0x33, 0x20, 0x35, 0x47,
		0x56, 0x31, 0x35, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x35, 0x37, 0x31, 0x56, 0x32, 0x33,
		0x52, 0x4d, 0x58, 0x33, 0x35, 0x37, 0x36, 0x56, 0x32, 0x33, 0x69, 0x52, 0x4d, 0x58, 0x33, 0x34,
		0x37, 0x35, 0x56, 0x32, 0x35, 0x52, 0x4d, 0x58, 0x33, 0x36, 0x31, 0x39, 0x52, 0x4d, 0x58, 0x33,
		0x37, 0x38, 0x33, 0x56, 0x35, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x38, 0x31, 0x56, 0x35, 0x30,
		0x73, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x39, 0x35, 0x52, 0x4d, 0x58, 0x32, 0x32, 0x30, 0x32, 0x47,
		0x54, 0x20, 0x35, 0x47, 0x50, 0x61, 0x64, 0x50, 0x61, 0x64, 0x20, 0x58, 0x50, 0x61, 0x64, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x34, 0x4b, 0x20, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x20, 0x54, 0x56,
		0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x64,
		0x62, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x57, 0x69, 0x7a, 0x70, 0x61, 0x64,
		0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x72, 0x20, 0x56, 0x38, 0x52, 0x65, 0x64, 0x77, 0x61, 0x79,
		0x72, 0x65, 0x64, 0x77, 0x61, 0x79, 0x31, 0x30, 0x5f, 0x6c, 0x69, 0x74, 0x65, 0x31, 0x30, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x72, 0x65, 0x64, 0x77, 0x61, 0x79, 0x37, 0x5f, 0x70, 0x72, 0x6f, 0x52,
		0x65, 0x64, 0x77, 0x61, 0x79, 0x5f, 0x37, 0x52, 0x65, 0x65, 0x64, 0x65, 0x72, 0x41, 0x38, 0x69,
		0x2d, 0x51, 0x32, 0x41, 0x38, 0x69, 0x20, 0x51, 0x32, 0x50, 0x31, 0x31, 0x53, 0x45, 0x5f, 0x41,
		0x72, 0x74, 0x50, 0x31, 0x31, 0x53, 0x45, 0x20, 0x41, 0x72, 0x74, 0x4d, 0x31, 0x30, 0x53, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x31, 0x30, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x20, 0x47, 0x6f, 0x4d, 0x38,
		0x47, 0x6f, 0x32, 0x30, 0x32, 0x30, 0x4d, 0x38, 0x20, 0x47, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x30, 0x29, 0x24, 0x31, 0x20, 0x47, 0x6f, 0x4d, 0x31, 0x30, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20,
		0x4d, 0x61, 0x78, 0x4d, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x31,
		0x32, 0x43, 0x75, 0x72, 0x76, 0x65, 0x50, 0x31, 0x32, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65, 0x50,
		0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x4c, 0x50, 0x31,
		0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50,
		0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75, 0x65, 0x5f, 0x4d, 0x61, 0x6b, 0x73, 0x50, 0x31, 0x33, 0x20,
		0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x6b, 0x73, 0x50, 0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75,
		0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5f, 0x32, 0x30, 0x32, 0x32, 0x50, 0x31, 0x33, 0x20, 0x42,
		0x6c, 0x75, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x50,
		0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x31, 0x33, 0x20,
		0x42, 0x6c, 0x75, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75,
		0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x31, 0x50, 0x31,
		0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61,
		0x78, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x24, 0x31, 0x29, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x28, 0x32, 0x30, 0x32, 0x24, 0x31, 0x29, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c,
		0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75, 0x65, 0x50, 0x31,
		0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x31, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x31, 0x39,
		0x20, 0x4d, 0x61, 0x78, 0x4c, 0x20, 0x31, 0x32, 0x38, 0x47, 0x42, 0x53, 0x31, 0x39, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x4c, 0x53, 0x31, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x53, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x31, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x53, 0x20, 0x45, 0x64, 0x67, 0x65, 0x53, 0x31, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x53, 0x53, 0x31, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x32, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x6c, 0x4e, 0x41,
		0x54, 0x52, 0x65, 0x6c, 0x6e, 0x64, 0x6f, 0x6f, 0x52, 0x65, 0x6d, 0x64, 0x75, 0x6e, 0x52, 0x44,
		0x24, 0x31, 0x52, 0x65, 0x6e, 0x6f, 0x76, 0x61, 0x52, 0x65, 0x76, 0x6f, 0x52, 0x65, 0x76, 0x6f,
		0x5f, 0x59, 0x6f, 0x75, 0x70, 0x6c, 0x75, 0x73, 0x59, 0x6f, 0x75, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x52, 0x65, 0x76, 0x6f, 0x6d, 0x6f, 0x76, 0x69, 0x6c, 0x53, 0x36, 0x35, 0x32, 0x33, 0x53, 0x32,
		0x31, 0x52, 0x68, 0x69, 0x6e, 0x6f, 0x50, 0x61, 0x63, 0x65, 0x20, 0x41, 0x31, 0x52, 0x69, 0x63,
		0x6f, 0x68, 0x72, 0x69, 0x63, 0x6f, 0x68, 0x5f, 0x72, 0x69, 0x63, 0x6f, 0x68, 0x5f, 0x6d, 0x66,
		0x70, 0x61, 0x70, 0x6e, 0x6c, 0x4d, 0x46, 0x50, 0x52, 0x69, 0x6b, 0x6f, 0x6d, 0x61, 0x67, 0x69,
		0x63, 0x4d, 0x4b, 0x24, 0x31, 0x52, 0x69, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x42, 0x65, 0x6c,
		0x6c, 0x73, 0x52, 0x49, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x20, 0x42, 0x45, 0x4c, 0x4c, 0x53, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x31, 0x30, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x31, 0x30,
		0x31, 0x20, 0x34, 0x47, 0x52, 0x69, 0x6e, 0x6e, 0x6f, 0x52, 0x69, 0x74, 0x6d, 0x69, 0x78, 0x52,
		0x4d, 0x44, 0x2d, 0x24, 0x31, 0x52, 0x4d, 0x50, 0x2d, 0x24, 0x31, 0x52, 0x69, 0x74, 0x7a, 0x76,
		0x69, 0x76, 0x61, 0x53, 0x35, 0x30, 0x30, 0x43, 0x52, 0x69, 0x76, 0x69, 0x65, 0x72, 0x61, 0x52,
		0x69, 0x76, 0x6f, 0x53, 0x54, 0x4f, 0x52, 0x4d, 0x5f, 0x53, 0x38, 0x70, 0x6c, 0x75, 0x73, 0x53,
		0x74, 0x6f, 0x72, 0x6d, 0x20, 0x53, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x54, 0x4f, 0x52,
		0x4d, 0x5f, 0x53, 0x38, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x53, 0x38, 0x50, 0x68, 0x61, 0x6e,
		0x74, 0x6f, 0x6d, 0x20, 0x50, 0x5a, 0x24, 0x31, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20,
		0x52, 0x58, 0x24, 0x31, 0x52, 0x68, 0x79, 0x74, 0x68, 0x6d, 0x20, 0x52, 0x58, 0x24, 0x31, 0x52,
		0x69, 0x7a, 0x7a, 0x65, 0x6e, 0x52, 0x6f, 0x61, 0x64, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x6f,
		0x61, 0x64, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x41, 0x6e, 0x20,
		0x53, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x41, 0x6e, 0x20, 0x53, 0x52, 0x6f, 0x61, 0x6d, 0x20, 0x43,
		0x61, 0x74, 0x52, 0x6f, 0x6b, 0x69, 0x74, 0x4f, 0x72, 0x62, 0x20, 0x53, 0x49, 0x4f, 0x20, 0x50,
		0x72, 0x6f, 0x49, 0x4f, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x4f, 0x20, 0x33, 0x44, 0x52,
		0x6f, 0x6b, 0x75, 0x33, 0x39, 0x33, 0x30, 0x58, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x52,
		0x6f, 0x6b, 0x75, 0x34, 0x36, 0x34, 0x30, 0x58, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x44, 0x69, 0x67,
		0x69, 0x74, 0x61, 0x6c, 0x20, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65,
		0x72, 0x52, 0x6f, 0x6d, 0x62, 0x69, 0x63, 0x61, 0x6d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x4a, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34,
		0x4b, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x20, 0x34, 0x4b, 0x20, 0x76, 0x30, 0x31, 0x52, 0x6f,
		0x73, 0x73, 0x26, 0x4d, 0x6f, 0x6f, 0x72, 0x52, 0x4d, 0x24, 0x31, 0x2d, 0x24, 0x32, 0x52, 0x6f,
		0x76, 0x65, 0x72, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x20, 0x51,
		0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x6b, 0x79, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x20,
		0x33, 0x47, 0x24, 0x31, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x20, 0x33, 0x47, 0x52, 0x6f, 0x79,
		0x51, 0x75, 0x65, 0x65, 0x6e, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x2d, 0x52, 0x51, 0x34, 0x35,
		0x31, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x52, 0x6f, 0x79, 0x6f, 0x6c, 0x65, 0x46, 0x6c, 0x65,
		0x78, 0x50, 0x61, 0x69, 0x20, 0x32, 0x46, 0x6c, 0x65, 0x78, 0x50, 0x61, 0x69, 0x52, 0x75, 0x67,
		0x47, 0x65, 0x61, 0x72, 0x52, 0x47, 0x37, 0x32, 0x35, 0x52, 0x75, 0x67, 0x67, 0x65, 0x54, 0x65,
		0x63, 0x68, 0x52, 0x75, 0x67, 0x67, 0x65, 0x78, 0x52, 0x68, 0x69, 0x6e, 0x6f, 0x20, 0x51, 0x75,
		0x65, 0x73, 0x74, 0x52, 0x75, 0x69, 0x6f, 0x4d, 0x36, 0x37, 0x31, 0x4d, 0x34, 0x43, 0x6f, 0x6c,
		0x61, 0x20, 0x34, 0x47, 0x52, 0x75, 0x6e, 0x62, 0x6f, 0x46, 0x31, 0x2d, 0x54, 0x54, 0x52, 0x75,
		0x6e, 0x62, 0x6f, 0x50, 0x32, 0x52, 0x75, 0x70, 0x61, 0x50, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64,
		0x20, 0x41, 0x35, 0x58, 0x52, 0x79, 0x74, 0x65, 0x53, 0x2d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53,
		0x2d, 0x54, 0x45, 0x4c, 0x4c, 0x53, 0x32, 0x54, 0x65, 0x6c, 0x53, 0x41, 0x49, 0x4c, 0x46, 0x49,
		0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x41, 0x4e, 0x59, 0x53, 0x41, 0x4e, 0x59, 0x20, 0x56,
		0x38, 0x53, 0x41, 0x4e, 0x59, 0x20, 0x56, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x45, 0x42, 0x42, 0x45, 0x53, 0x45, 0x45, 0x57, 0x4f, 0x53, 0x45, 0x47, 0x53,
		0x45, 0x4d, 0x50, 0x20, 0x54, 0x43, 0x4c, 0x4c, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x4f,
		0x21, 0x20, 0x33, 0x43, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x4f, 0x21, 0x20, 0x33, 0x43, 0x53,
		0x45, 0x4e, 0x4e, 0x41, 0x53, 0x46, 0x52, 0x53, 0x74, 0x61, 0x72, 0x58, 0x74, 0x72, 0x65, 0x6d,
		0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x20, 0x24, 0x31, 0x53, 0x74,
		0x61, 0x72, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c,
		0x20, 0x33, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x32, 0x53, 0x74, 0x61,
		0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x53, 0x74, 0x61,
		0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61,
		0x69, 0x6c, 0x41, 0x75, 0x72, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x61, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x41, 0x75, 0x72, 0x61, 0x53, 0x74, 0x61, 0x72, 0x53, 0x68, 0x69,
		0x6e, 0x65, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x33, 0x53,
		0x74, 0x61, 0x72, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x69,
		0x63, 0x74, 0x20, 0x36, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x34,
		0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x33, 0x53, 0x74, 0x61, 0x72,
		0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x61,
		0x72, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64,
		0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x54, 0x65, 0x78, 0x74, 0x20, 0x32, 0x53, 0x74, 0x61,
		0x72, 0x54, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x61, 0x75, 0x74, 0x65, 0x20, 0x32,
		0x53, 0x74, 0x61, 0x72, 0x4e, 0x61, 0x75, 0x74, 0x65, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72,
		0x4e, 0x61, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x54, 0x61, 0x62, 0x53, 0x47, 0x49, 0x4e,
		0x58, 0x31, 0x30, 0x53, 0x4b, 0x20, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6e, 0x64, 0x42,
		0x48, 0x58, 0x2d, 0x55, 0x48, 0x32, 0x30, 0x30, 0x42, 0x20, 0x54, 0x56, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x33, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x4b, 0x47, 0x53, 0x4b,
		0x4b, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4c, 0x59, 0x4e, 0x58, 0x5f, 0x4c, 0x55, 0x58,
		0x45, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x4c, 0x75, 0x78, 0x65, 0x48, 0x79, 0x70, 0x65, 0x72, 0x20,
		0x58, 0x20, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x48, 0x59, 0x50, 0x45, 0x52, 0x20, 0x58, 0x20,
		0x42, 0x4c, 0x41, 0x44, 0x45, 0x20, 0x49, 0x49, 0x48, 0x79, 0x70, 0x65, 0x72, 0x20, 0x58, 0x20,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x49, 0x49, 0x48, 0x59, 0x50, 0x45, 0x52, 0x20, 0x58, 0x20,
		0x42, 0x4c, 0x41, 0x44, 0x45, 0x48, 0x79, 0x70, 0x65, 0x72, 0x20, 0x58, 0x20, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x45, 0x43, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x61, 0x62,
		0x53, 0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x61, 0x62, 0x20, 0x53, 0x34, 0x53, 0x4d, 0x54, 0x20,
		0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x43, 0x52, 0x55, 0x53, 0x48, 0x5f, 0x58, 0x35, 0x36,
		0x35, 0x43, 0x72, 0x75, 0x73, 0x68, 0x20, 0x58, 0x35, 0x36, 0x35, 0x42, 0x4c, 0x41, 0x5a, 0x45,
		0x5f, 0x58, 0x35, 0x30, 0x30, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x58, 0x35, 0x30, 0x30, 0x53,
		0x4d, 0x55, 0x58, 0x53, 0x4e, 0x41, 0x4d, 0x49, 0x53, 0x4f, 0x4c, 0x45, 0x50, 0x6f, 0x70, 0x20,
		0x53, 0x24, 0x31, 0x53, 0x4f, 0x4c, 0x4f, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x55,
		0x35, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x20, 0x55, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x55, 0x35, 0x49,
		0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x20, 0x55, 0x35, 0x53, 0x4f, 0x53, 0x48, 0x53, 0x6f, 0x73,
		0x68, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x50, 0x43, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59,
		0x5f, 0x4f, 0x43, 0x54, 0x41, 0x43, 0x4f, 0x52, 0x45, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79,
		0x20, 0x4f, 0x63, 0x74, 0x61, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x24, 0x31, 0x47, 0x47, 0x72, 0x61, 0x76, 0x69,
		0x74, 0x79, 0x20, 0x24, 0x31, 0x47, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x4d, 0x61,
		0x78, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x20, 0x50, 0x52, 0x4f, 0x47, 0x72, 0x61, 0x76,
		0x69, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x20, 0x53,
		0x45, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x53, 0x45, 0x47, 0x52, 0x41, 0x56, 0x49,
		0x54, 0x59, 0x2d, 0x32, 0x2d, 0x4d, 0x41, 0x58, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20,
		0x32, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x32, 0x47, 0x6c,
		0x6f, 0x77, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x79, 0x65, 0x61, 0x72,
		0x4c, 0x37, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x37, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x46, 0x4c, 0x4f, 0x57, 0x20, 0x37, 0x46, 0x6c, 0x6f, 0x77, 0x20, 0x37, 0x4c, 0x61, 0x69, 0x6b,
		0x61, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x53,
		0x50, 0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54,
		0x20, 0x4c, 0x49, 0x54, 0x45, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53,
		0x50, 0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x4d, 0x41, 0x58, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x53, 0x50,
		0x43, 0x20, 0x47, 0x45, 0x4e, 0x20, 0x4d, 0x41, 0x58, 0x47, 0x65, 0x6e, 0x20, 0x4d, 0x61, 0x78,
		0x53, 0x50, 0x43, 0x20, 0x47, 0x45, 0x4e, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x47, 0x65, 0x6e, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x53, 0x50, 0x43, 0x20, 0x47, 0x45, 0x4e, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x47, 0x65, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x50, 0x43, 0x20, 0x47, 0x45, 0x4e, 0x47,
		0x65, 0x6e, 0x53, 0x50, 0x43, 0x5f, 0x41, 0x4c, 0x49, 0x45, 0x4e, 0x5f, 0x53, 0x54, 0x49, 0x43,
		0x4b, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x53, 0x50, 0x43, 0x5f,
		0x41, 0x4c, 0x49, 0x45, 0x4e, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x53, 0x50, 0x55, 0x52, 0x54, 0x53,
		0x51, 0x4f, 0x4f, 0x4c, 0x56, 0x24, 0x31, 0x53, 0x53, 0x4b, 0x59, 0x53, 0x54, 0x46, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x46, 0x72, 0x61, 0x63, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x69, 0x67,
		0x69, 0x6e, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x20, 0x50, 0x4c,
		0x55, 0x53, 0x41, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x45, 0x52,
		0x49, 0x41, 0x4c, 0x41, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4d,
		0x49, 0x4e, 0x49, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x4c, 0x4f,
		0x43, 0x4b, 0x20, 0x33, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x33,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x20, 0x33, 0x42, 0x6c, 0x6f, 0x63,
		0x6b, 0x20, 0x33, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x20, 0x47, 0x4f, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
		0x20, 0x47, 0x6f, 0x53, 0x4c, 0x41, 0x59, 0x20, 0x49, 0x49, 0x53, 0x6c, 0x61, 0x79, 0x20, 0x49,
		0x49, 0x4a, 0x6f, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x54, 0x47, 0x20, 0x54, 0x65, 0x6c, 0x65,
		0x63, 0x6f, 0x6d, 0x53, 0x54, 0x4b, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x38, 0x4c, 0x69, 0x66, 0x65,
		0x20, 0x37, 0x53, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x32, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x7a,
		0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x32, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x79, 0x6e,
		0x63, 0x20, 0x35, 0x7a, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
		0x72, 0x74, 0x65, 0x72, 0x20, 0x31, 0x53, 0x54, 0x52, 0x4f, 0x4e, 0x47, 0x4c, 0x45, 0x41, 0x50,
		0x2d, 0x53, 0x31, 0x53, 0x55, 0x4e, 0x57, 0x49, 0x4e, 0x44, 0x53, 0x6b, 0x79, 0x20, 0x24, 0x31,
		0x20, 0x24, 0x32, 0x20, 0x33, 0x47, 0x53, 0x4b, 0x59, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x37,
		0x30, 0x53, 0x6b, 0x79, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x37, 0x30, 0x53, 0x6b, 0x79, 0x20,
		0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x53, 0x55, 0x4e, 0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31, 0x53,
		0x57, 0x49, 0x53, 0x53, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x53, 0x43, 0x48, 0x4f,
		0x4e, 0x20, 0x52, 0x39, 0x50, 0x52, 0x41, 0x24, 0x31, 0x5a, 0x55, 0x52, 0x37, 0x32, 0x32, 0x4d,
		0x5a, 0x37, 0x32, 0x20, 0x67, 0x6f, 0x5a, 0x55, 0x52, 0x24, 0x31, 0x53, 0x57, 0x4f, 0x46, 0x59,
		0x4d, 0x35, 0x30, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x59, 0x48, 0x59, 0x6f, 0x75, 0x6e, 0x67,
		0x20, 0x24, 0x31, 0x53, 0x61, 0x62, 0x61, 0x53, 0x61, 0x62, 0x61, 0x20, 0x53, 0x61, 0x66, 0x61,
		0x72, 0x69, 0x63, 0x6f, 0x6d, 0x45, 0x54, 0x20, 0x4b, 0x69, 0x6d, 0x65, 0x6d, 0x4b, 0x69, 0x6d,
		0x65, 0x6d, 0x20, 0x4b, 0x65, 0x72, 0x65, 0x66, 0x61, 0x20, 0x34, 0x47, 0x4e, 0x45, 0x4f, 0x4e,
		0x5f, 0x52, 0x41, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x52, 0x61, 0x79,
		0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x52, 0x61, 0x79, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x4e, 0x45, 0x4f, 0x4e, 0x5f, 0x52, 0x41, 0x59, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x52,
		0x61, 0x79, 0x4e, 0x45, 0x4f, 0x4e, 0x20, 0x52, 0x41, 0x59, 0x20, 0x32, 0x4e, 0x65, 0x6f, 0x6e,
		0x20, 0x52, 0x61, 0x79, 0x20, 0x32, 0x4e, 0x45, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x56, 0x41, 0x4e,
		0x65, 0x6f, 0x6e, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x4e, 0x45, 0x4f, 0x4e, 0x20, 0x50, 0x4c, 0x55,
		0x53, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x45, 0x4f, 0x4e, 0x20, 0x4c,
		0x49, 0x54, 0x45, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x6f, 0x6e,
		0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x53, 0x46, 0x43, 0x53, 0x54, 0x42, 0x32, 0x4c, 0x49, 0x54,
		0x45, 0x53, 0x54, 0x42, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x61, 0x67, 0x65, 0x6d, 0x53,
		0x61, 0x67, 0x65, 0x6d, 0x63, 0x6f, 0x6d, 0x53, 0x61, 0x69, 0x65, 0x74, 0x53, 0x69, 0x63, 0x75,
		0x72, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x47, 0x54, 0x2d, 0x42, 0x39,
		0x31, 0x35, 0x30, 0x48, 0x6f, 0x6d, 0x65, 0x20, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x4d, 0x54, 0x2d,
		0x45, 0x35, 0x30, 0x31, 0x35, 0x4d, 0x61, 0x70, 0x6c, 0x65, 0x20, 0x4d, 0x61, 0x70, 0x6c, 0x65,
		0x32, 0x30, 0x31, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x32, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x31,
		0x38, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x56,
		0x69, 0x65, 0x77, 0x20, 0x31, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x37, 0x22, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x33, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x4e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x37,
		0x22, 0x53, 0x43, 0x2d, 0x30, 0x31, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x37, 0x2e, 0x37, 0x22, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x76, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x33,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x31, 0x32, 0x2e, 0x32, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x32, 0x30, 0x31, 0x34, 0x20,
		0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x32, 0x30,
		0x31, 0x34, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x32, 0x30, 0x31, 0x34,
		0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x50, 0x52, 0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x20, 0x4c, 0x54,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x36, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68,
		0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20,
		0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e,
		0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x30, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x38, 0x2e, 0x37, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x38, 0x2e, 0x37, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x39, 0x2b, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x39, 0x2b,
		0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x39, 0x20, 0x38, 0x2e, 0x37, 0x22, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x39, 0x20, 0x38, 0x2e, 0x37, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x38, 0x20, 0x31, 0x30, 0x2e,
		0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x35,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x53, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53,
		0x20, 0x50, 0x65, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x34, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x36, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x53, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36,
		0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x35,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x20, 0x31,
		0x31, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x31, 0x34, 0x2e,
		0x36, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x39, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x31, 0x34, 0x2e, 0x36, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x53, 0x39, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x31, 0x34, 0x2e, 0x36, 0x22, 0x20, 0x35,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x39, 0x2b, 0x20,
		0x31, 0x32, 0x2e, 0x34, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x53, 0x39, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x39, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x39, 0x20,
		0x46, 0x45, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x39, 0x20, 0x46, 0x45, 0x20, 0x31, 0x30, 0x2e,
		0x39, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x53, 0x39, 0x20, 0x46, 0x45, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x33, 0x20, 0x56, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20, 0x2b, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20,
		0x38, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20,
		0x38, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x31, 0x30, 0x2e, 0x35,
		0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x53, 0x32, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c,
		0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x32, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x53, 0x32, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x33, 0x20, 0x39, 0x2e, 0x37,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x53, 0x33, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22,
		0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x37, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34,
		0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x37, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37,
		0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x46, 0x45, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37,
		0x20, 0x46, 0x45, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x46, 0x45, 0x20, 0x31, 0x32, 0x2e,
		0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x31, 0x34, 0x2e, 0x36, 0x22,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38,
		0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38,
		0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x39, 0x2e, 0x37,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x36, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x36, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20,
		0x39, 0x2e, 0x36, 0x22, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x45, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x34, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x35, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
		0x20, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x33, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41,
		0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69,
		0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x32,
		0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x51, 0x53, 0x4d, 0x2d,
		0x52, 0x38, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x53, 0x4d,
		0x2d, 0x56, 0x37, 0x30, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61,
		0x72, 0x53, 0x4d, 0x2d, 0x52, 0x33, 0x35, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x47, 0x65, 0x61, 0x72, 0x20, 0x46, 0x69, 0x74, 0x53, 0x4d, 0x2d, 0x52, 0x33, 0x38, 0x30, 0x30,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x32, 0x53, 0x53, 0x4d,
		0x2d, 0x52, 0x33, 0x38, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61,
		0x72, 0x20, 0x32, 0x20, 0x4e, 0x65, 0x6f, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x32, 0x35, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76,
		0x65, 0x20, 0x32, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52,
		0x38, 0x33, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x53, 0x4d, 0x2d,
		0x52, 0x38, 0x33, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x20, 0x4c,
		0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x36, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x37,
		0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x20,
		0x34, 0x34, 0x6d, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x34, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x20, 0x35, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x35, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x53, 0x4d, 0x2d,
		0x52, 0x39, 0x32, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x30, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x39,
		0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x30, 0x35,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x36, 0x6d,
		0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x39, 0x35, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x20, 0x34, 0x36, 0x6d, 0x6d, 0x53,
		0x4d, 0x2d, 0x52, 0x38, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x31, 0x35, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x20,
		0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x38, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63,
		0x20, 0x34, 0x32, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x35, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53,
		0x4d, 0x2d, 0x52, 0x36, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61,
		0x72, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x34, 0x33, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52,
		0x37, 0x36, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53,
		0x33, 0x20, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x20, 0x34, 0x36, 0x6d, 0x6d, 0x53,
		0x4d, 0x2d, 0x52, 0x37, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61,
		0x72, 0x20, 0x53, 0x32, 0x20, 0x34, 0x33, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x33, 0x30,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x32, 0x20, 0x34,
		0x34, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x35, 0x30, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53,
		0x20, 0x34, 0x30, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x33, 0x32, 0x47, 0x65, 0x61, 0x72,
		0x20, 0x53, 0x32, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x36, 0x35, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x33, 0x20, 0x46, 0x72,
		0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x20, 0x33, 0x33, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37,
		0x37, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x33,
		0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x53, 0x4d, 0x2d,
		0x52, 0x38, 0x34, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x33, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38,
		0x34, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33,
		0x20, 0x34, 0x35, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x35, 0x30, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x53,
		0x4d, 0x2d, 0x52, 0x38, 0x35, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x20, 0x33, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x20, 0x34, 0x47, 0x47, 0x65, 0x61, 0x72,
		0x20, 0x4c, 0x69, 0x76, 0x65, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x20, 0x48, 0x75, 0x62, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x32, 0x35, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x6c, 0x70,
		0x68, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x68, 0x61, 0x74, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x65, 0x61, 0x6e, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x20, 0x50, 0x72,
		0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x44, 0x75,
		0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x70, 0x69, 0x63, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x33, 0x4f, 0x6d, 0x6e,
		0x69, 0x61, 0x20, 0x49, 0x49, 0x4f, 0x6d, 0x6e, 0x69, 0x61, 0x20, 0x4d, 0x4f, 0x6d, 0x6e, 0x69,
		0x61, 0x20, 0x57, 0x4f, 0x6d, 0x6e, 0x69, 0x61, 0x20, 0x37, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x20,
		0x46, 0x6c, 0x61, 0x73, 0x68, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x20,
		0x53, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x53,
		0x74, 0x79, 0x6c, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x32,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x20, 0x49, 0x49, 0x20, 0x48, 0x44, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x56, 0x61,
		0x6c, 0x75, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x31, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x42, 0x65, 0x61, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x42, 0x65, 0x61, 0x6d, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x69, 0x64,
		0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x69, 0x64, 0x65, 0x20, 0x35, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x69, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57,
		0x69, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x45, 0x78, 0x70,
		0x72, 0x65, 0x73, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x45, 0x35, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x45, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x4c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x47, 0x69, 0x6f,
		0x72, 0x67, 0x69, 0x6f, 0x20, 0x41, 0x72, 0x6d, 0x61, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x20, 0x57, 0x69, 0x4d, 0x41, 0x58, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x52, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x33, 0x20, 0x6d, 0x69,
		0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x6d, 0x69, 0x6e, 0x69,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20,
		0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34,
		0x20, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20,
		0x49, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x4c, 0x54, 0x45, 0x2b, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x54, 0x41, 0x52, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x4f,
		0x43, 0x4b, 0x45, 0x54, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x59, 0x20, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x4b, 0x69, 0x74, 0x74, 0x79, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59,
		0x6f, 0x75, 0x6e, 0x67, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x46, 0x41, 0x4d, 0x45, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20,
		0x4e, 0x46, 0x43, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x41, 0x4d, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x41, 0x4d, 0x45, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x46, 0x65, 0x65, 0x6c, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x43, 0x45,
		0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x43, 0x45, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58,
		0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63,
		0x6f, 0x76, 0x65, 0x72, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f,
		0x76, 0x65, 0x72, 0x20, 0x33, 0x20, 0x56, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58,
		0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63,
		0x6f, 0x76, 0x65, 0x72, 0x20, 0x34, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63,
		0x6f, 0x76, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58,
		0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x35, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f,
		0x57, 0x61, 0x76, 0x65, 0x20, 0x49, 0x49, 0x57, 0x61, 0x76, 0x65, 0x20, 0x33, 0x57, 0x61, 0x76,
		0x65, 0x20, 0x59, 0x57, 0x61, 0x76, 0x65, 0x20, 0x4d, 0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x32,
		0x35, 0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x33, 0x33, 0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x37,
		0x38, 0x57, 0x61, 0x76, 0x65, 0x20, 0x37, 0x32, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x34, 0x20, 0x7a, 0x6f, 0x6f, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4b, 0x20,
		0x7a, 0x6f, 0x6f, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x56, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x32, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x34,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4d, 0x61, 0x78,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x45, 0x58, 0x50, 0x52, 0x45, 0x53, 0x53, 0x20, 0x49,
		0x49, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x2d, 0x53, 0x49,
		0x4d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x35, 0x20, 0x4c, 0x54, 0x45, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20,
		0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20,
		0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x4b, 0x20, 0x53,
		0x70, 0x6f, 0x72, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x36, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x36, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x36, 0x20, 0x45, 0x64, 0x67, 0x65, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x37, 0x20, 0x45, 0x64, 0x67,
		0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x37, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76,
		0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x38, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x38, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x39, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x39, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x2b, 0x53, 0x43, 0x2d, 0x30, 0x35, 0x4c, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x2b, 0x20, 0x4f, 0x6c, 0x79, 0x6d, 0x70,
		0x69, 0x63, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20, 0x46, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20, 0x46, 0x45, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x2b, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x2b, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x32, 0x31, 0x20, 0x46, 0x45, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x32, 0x31, 0x20, 0x35, 0x47, 0x20, 0x4f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63, 0x20, 0x47, 0x61,
		0x6d, 0x65, 0x73, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x2b, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x32,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x32,
		0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x32, 0x33, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x33,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x33,
		0x20, 0x46, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x34, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x34, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x32, 0x34, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a,
		0x20, 0x46, 0x6c, 0x69, 0x70, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c,
		0x69, 0x70, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x74, 0x65, 0x6c,
		0x6c, 0x61, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20,
		0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f,
		0x76, 0x65, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x65, 0x6e, 0x74, 0x75, 0x72,
		0x61, 0x56, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x56, 0x69, 0x38, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x76, 0x61, 0x6e, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x20,
		0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30,
		0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x31, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x32, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x30, 0x33, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x33,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x34, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x30, 0x34, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x34,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x33, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x30, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x35, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x31, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x34,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x34, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x35, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x31, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x32, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x42, 0x75, 0x64, 0x64, 0x79, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x32, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33,
		0x34, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x35, 0x20, 0x35,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x44, 0x75, 0x6f,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35,
		0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36,
		0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x35, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x35, 0x32, 0x73, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x36, 0x73, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x36, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37,
		0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x31, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x20, 0x53, 0x74,
		0x61, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x38, 0x2b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x20,
		0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38,
		0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x53, 0x74, 0x61, 0x72, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x30,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x30, 0x65, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x31, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x33,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x33, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32,
		0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x31, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x32, 0x30, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32,
		0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x33, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x32, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x33, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x30, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x33, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x32, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x34, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x30,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x34, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x35, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x30, 0x73, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35,
		0x31, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x33, 0x20, 0x35,
		0x47, 0x20, 0x55, 0x57, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x33, 0x20, 0x35,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20,
		0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x34, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x35, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x37, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x30, 0x73,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x39, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x30, 0x20, 0x35,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x30, 0x32, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x46, 0x31, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x31, 0x33,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x31, 0x34, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x46, 0x31, 0x35, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x46, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x32, 0x33, 0x20, 0x35,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x33, 0x34, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x34, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46,
		0x34, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x35, 0x32, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x35, 0x34, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x36, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4c, 0x75, 0x6e, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31,
		0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x31, 0x20, 0x41, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x50, 0x75, 0x72, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x33, 0x20, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x53, 0x6b,
		0x79, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x4c, 0x75, 0x6e, 0x61, 0x20,
		0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x45, 0x6d, 0x65, 0x72,
		0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x41, 0x75, 0x72, 0x61,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x53, 0x74, 0x61, 0x72, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x35, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x36, 0x2b, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x34, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x34, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e,
		0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x37, 0x2b, 0x20, 0x28, 0x43, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20,
		0x53, 0x6b, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x43, 0x6f,
		0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x44, 0x75, 0x6f, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x56, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x37, 0x20, 0x37, 0x53, 0x4d, 0x2d, 0x4a, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x2d, 0x4a,
		0x38, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x39, 0x20, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x39, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4d, 0x2d, 0x41, 0x33,
		0x32, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x20, 0x35, 0x47,
		0x53, 0x4d, 0x2d, 0x4d, 0x33, 0x33, 0x36, 0x4b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x75, 0x6d, 0x70, 0x20, 0x32, 0x53, 0x4d, 0x2d, 0x4d, 0x34, 0x34, 0x36, 0x4b, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4d, 0x30, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x34, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x31, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x31, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x30, 0x32, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31,
		0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x31, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4d, 0x31, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x33,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x34, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4d, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x31, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x42, 0x75, 0x64, 0x64, 0x79, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32,
		0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x30, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4d, 0x33, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4d, 0x33, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33,
		0x31, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x34, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x34, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4d, 0x34, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x35, 0x31,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x35, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x33, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4d, 0x35, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4d, 0x35, 0x34, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x36,
		0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x30, 0x31, 0x24, 0x31, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57,
		0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x31, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e,
		0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x37, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4f, 0x6e, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x43, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x35, 0x35, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x43, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x38, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x5a, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x32, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x34,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x6f, 0x6c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x6f, 0x6c,
		0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x6f, 0x6c, 0x20, 0x33, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x48, 0x61, 0x6c, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x6d, 0x70, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x6d, 0x70, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x33, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x33, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x33, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x34, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a,
		0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x2b, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x46, 0x61, 0x6e, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x49, 0x49, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x49, 0x49, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x56, 0x45, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20,
		0x28, 0x54, 0x56, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33,
		0x20, 0x4e, 0x65, 0x6f, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4d, 0x65, 0x67, 0x61, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x65, 0x67,
		0x61, 0x20, 0x35, 0x2e, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x65, 0x67, 0x61,
		0x20, 0x36, 0x2e, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x20, 0x35, 0x47, 0x41, 0x74, 0x69, 0x76, 0x20, 0x53, 0x45, 0x47, 0x72, 0x65, 0x61,
		0x74, 0x43, 0x61, 0x6c, 0x6c, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x33, 0x45, 0x32, 0x31,
		0x35, 0x32, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x33, 0x43, 0x68,
		0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x43, 0x2d,
		0x30, 0x32, 0x43, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x2d, 0x54, 0x56, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x24, 0x31, 0x53, 0x43, 0x2d, 0x24, 0x31, 0x53, 0x43, 0x48, 0x2d, 0x24, 0x31, 0x53,
		0x61, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x53, 0x61, 0x6d, 0x74, 0x72, 0x6f, 0x6e, 0x53, 0x61, 0x6e,
		0x65, 0x69, 0x4e, 0x38, 0x33, 0x4e, 0x39, 0x31, 0x38, 0x33, 0x31, 0x32, 0x44, 0x47, 0x31, 0x30,
		0x31, 0x53, 0x61, 0x6e, 0x6b, 0x65, 0x79, 0x54, 0x41, 0x42, 0x37, 0x41, 0x33, 0x47, 0x30, 0x35,
		0x54, 0x41, 0x42, 0x2d, 0x37, 0x41, 0x33, 0x47, 0x30, 0x35, 0x53, 0x61, 0x6e, 0x73, 0x75, 0x69,
		0x53, 0x35, 0x30, 0x35, 0x30, 0x32, 0x34, 0x53, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x42, 0x69, 0x54,
		0x42, 0x69, 0x5a, 0x20, 0x56, 0x35, 0x38, 0x47, 0x41, 0x41, 0x4d, 0x49, 0x49, 0x20, 0x47, 0x31,
		0x47, 0x41, 0x41, 0x4d, 0x49, 0x49, 0x48, 0x65, 0x78, 0x69, 0x6e, 0x20, 0x48, 0x32, 0x2d, 0x41,
		0x43, 0x61, 0x6e, 0x64, 0x79, 0x20, 0x55, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x72, 0x65, 0x61,
		0x6d, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x30, 0x33, 0x41, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x20,
		0x4f, 0x6e, 0x65, 0x48, 0x61, 0x6c, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x74, 0x6f, 0x6d, 0x61, 0x20,
		0x41, 0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x48, 0x6f, 0x6e, 0x67, 0x51, 0x69, 0x20,
		0x48, 0x51, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x7a, 0x4e, 0x65, 0x77, 0x64, 0x75, 0x6e, 0x48, 0x65,
		0x78, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x48, 0x59, 0x2d, 0x30, 0x30, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x47, 0x31, 0x30, 0x31, 0x2d, 0x4f, 0x47, 0x4b, 0x61, 0x74, 0x61, 0x6e, 0x61, 0x20, 0x45,
		0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x20, 0x58, 0x49, 0x6e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74,
		0x6f, 0x49, 0x6e, 0x6e, 0x75, 0x65, 0x6e, 0x64, 0x6f, 0x53, 0x61, 0x76, 0x69, 0x6f, 0x53, 0x62,
		0x65, 0x72, 0x53, 0x63, 0x68, 0x6e, 0x65, 0x69, 0x64, 0x65, 0x72, 0x53, 0x63, 0x68, 0x6f, 0x6b,
		0x53, 0x63, 0x68, 0x6f, 0x6b, 0x20, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x56, 0x35, 0x35, 0x56,
		0x6f, 0x6c, 0x74, 0x20, 0x53, 0x56, 0x35, 0x35, 0x46, 0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x58, 0x4c, 0x46, 0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d, 0x20, 0x54, 0x75,
		0x72, 0x62, 0x6f, 0x20, 0x58, 0x4c, 0x53, 0x63, 0x6f, 0x6f, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x73,
		0x6d, 0x6f, 0x73, 0x53, 0x65, 0x61, 0x74, 0x65, 0x6c, 0x53, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x53,
		0x65, 0x6c, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x61, 0x53,
		0x65, 0x6c, 0x66, 0x69, 0x78, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x53, 0x45, 0x4c, 0x46, 0x49,
		0x58, 0x5f, 0x53, 0x4c, 0x41, 0x53, 0x48, 0x36, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x36, 0x56,
		0x4f, 0x59, 0x41, 0x47, 0x45, 0x52, 0x2d, 0x56, 0x34, 0x35, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65,
		0x72, 0x20, 0x56, 0x34, 0x35, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x45, 0x53, 0x37, 0x33,
		0x32, 0x5f, 0x45, 0x58, 0x50, 0x45, 0x52, 0x49, 0x55, 0x53, 0x45, 0x53, 0x37, 0x33, 0x32, 0x20,
		0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x75, 0x73, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x51,
		0x35, 0x5f, 0x55, 0x52, 0x42, 0x41, 0x4e, 0x51, 0x35, 0x20, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x53,
		0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x51, 0x33, 0x5f, 0x52, 0x45, 0x42, 0x45, 0x4c, 0x51, 0x33,
		0x20, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x51, 0x36, 0x5f,
		0x53, 0x54, 0x41, 0x4c, 0x4c, 0x49, 0x4f, 0x4e, 0x51, 0x36, 0x20, 0x53, 0x74, 0x61, 0x6c, 0x6c,
		0x69, 0x6f, 0x6e, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x56, 0x34, 0x31, 0x5f, 0x50, 0x52,
		0x4f, 0x5f, 0x4d, 0x41, 0x52, 0x44, 0x49, 0x47, 0x52, 0x41, 0x53, 0x56, 0x34, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x4d, 0x61, 0x72, 0x64, 0x69, 0x67, 0x72, 0x61, 0x73, 0x53, 0x65, 0x6e, 0x63,
		0x6f, 0x72, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x24, 0x31, 0x22, 0x20, 0x24, 0x32,
		0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x37, 0x20, 0x56, 0x33, 0x45, 0x6c, 0x65, 0x6d,
		0x65, 0x6e, 0x74, 0x20, 0x37, 0x20, 0x56, 0x32, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x45, 0x6c,
		0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x37, 0x20, 0x56, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
		0x74, 0x20, 0x38, 0x20, 0x56, 0x33, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x38, 0x20,
		0x56, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x38, 0x45, 0x6c, 0x65, 0x6d, 0x65,
		0x6e, 0x74, 0x20, 0x39, 0x2e, 0x37, 0x20, 0x56, 0x33, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
		0x20, 0x39, 0x2e, 0x37, 0x20, 0x56, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x39,
		0x2e, 0x37, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x24, 0x31,
		0x2e, 0x24, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x24, 0x31, 0x53, 0x65,
		0x6e, 0x64, 0x6f, 0x53, 0x65, 0x6e, 0x6b, 0x61, 0x74, 0x65, 0x6c, 0x4d, 0x61, 0x78, 0x69, 0x6d,
		0x75, 0x73, 0x54, 0x31, 0x30, 0x30, 0x31, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x54,
		0x31, 0x30, 0x30, 0x31, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x69, 0x74, 0x53, 0x65, 0x6e, 0x77, 0x61,
		0x4f, 0x64, 0x69, 0x6e, 0x49, 0x6e, 0x69, 0x7a, 0x69, 0x6f, 0x49, 0x6e, 0x69, 0x7a, 0x69, 0x6f,
		0x20, 0x4c, 0x54, 0x45, 0x56, 0x37, 0x30, 0x35, 0x42, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73,
		0x54, 0x68, 0x6f, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x6c, 0x79, 0x44, 0x69, 0x61, 0x6d, 0x6f,
		0x6e, 0x64, 0x53, 0x65, 0x75, 0x69, 0x63, 0x41, 0x55, 0x54, 0x4f, 0x49, 0x44, 0x20, 0x24, 0x31,
		0x53, 0x65, 0x77, 0x6f, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x70, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x58, 0x78, 0x33, 0x53, 0x54, 0x54, 0x4d, 0x32, 0x31, 0x56, 0x41, 0x50, 0x50, 0x52, 0x6f, 0x75,
		0x76, 0x6f, 0x20, 0x56, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x58, 0x78, 0x33, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x58, 0x78, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x58, 0x78, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x65, 0x61, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e,
		0x65, 0x20, 0x53, 0x33, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20,
		0x53, 0x35, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x37,
		0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x34, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x57, 0x69, 0x73, 0x68, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x57, 0x69,
		0x73, 0x68, 0x20, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x48, 0x2d, 0x4d, 0x30, 0x34,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x38, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x34, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x34, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x36, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x36, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x37, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53,
		0x65, 0x6e, 0x73, 0x65, 0x20, 0x35, 0x47, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x44, 0x31, 0x30,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49,
		0x4d, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x74, 0x61, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x5a, 0x65, 0x72, 0x6f, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x20,
		0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x36, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x32, 0x20, 0x28, 0x43, 0x31, 0x30, 0x29, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x5a, 0x65, 0x74, 0x61, 0x44, 0x72,
		0x61, 0x67, 0x6f, 0x6e, 0x20, 0x51, 0x75, 0x65, 0x73, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x48, 0x2d, 0x30, 0x36, 0x44, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x58, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x4c, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x52, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52,
		0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x32, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63,
		0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x35, 0x47, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x53, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x34, 0x20,
		0x53, 0x49, 0x4d, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x56, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x56, 0x37, 0x2b, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x20, 0x24, 0x31, 0x53, 0x69, 0x6d,
		0x70, 0x6c, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34,
		0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x45, 0x76, 0x65, 0x72, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43, 0x72, 0x79,
		0x73, 0x74, 0x61, 0x6c, 0x20, 0x58, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43, 0x72, 0x79, 0x73,
		0x74, 0x61, 0x6c, 0x20, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x33, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x53, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x36, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x53, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x52, 0x33, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x53, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x53, 0x33, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x34, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x52, 0x37, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x52, 0x38, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x55, 0x4c, 0x75, 0x6e,
		0x61, 0x20, 0x53, 0x42, 0x31, 0x30, 0x41, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x61, 0x73,
		0x69, 0x6f, 0x20, 0x32, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
		0x53, 0x74, 0x61, 0x72, 0x20, 0x57, 0x61, 0x72, 0x73, 0x53, 0x48, 0x2d, 0x52, 0x4d, 0x30, 0x32,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x48, 0x2d, 0x52, 0x4d, 0x30, 0x32, 0x34, 0x30, 0x31,
		0x53, 0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x34, 0x30, 0x31, 0x53, 0x48, 0x44, 0x69, 0x73,
		0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x41, 0x30, 0x30,
		0x31, 0x53, 0x48, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f,
		0x20, 0x35, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x20, 0x33,
		0x4e, 0x50, 0x41, 0x32, 0x30, 0x35, 0x53, 0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65,
		0x69, 0x74, 0x61, 0x69, 0x20, 0x34, 0x4e, 0x50, 0x38, 0x30, 0x37, 0x53, 0x48, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x20, 0x31, 0x30, 0x4e, 0x50, 0x35, 0x30,
		0x31, 0x53, 0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x4c,
		0x65, 0x69, 0x63, 0x61, 0x20, 0x4c, 0x65, 0x69, 0x74, 0x7a, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x24, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x70, 0x61, 0x67, 0x6f, 0x73, 0x20, 0x24, 0x31, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x2d, 0x74, 0x61, 0x69, 0x50, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
		0x65, 0x20, 0x36, 0x53, 0x68, 0x61, 0x72, 0x70, 0x20, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50,
		0x61, 0x64, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x61, 0x64, 0x20, 0x53, 0x48, 0x54, 0x32,
		0x31, 0x4c, 0x43, 0x44, 0x5f, 0x78, 0x78, 0x53, 0x55, 0x46, 0x4f, 0x43, 0x34, 0x37, 0x35, 0x41,
		0x4c, 0x43, 0x44, 0x2d, 0x36, 0x30, 0x53, 0x55, 0x34, 0x37, 0x35, 0x41, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x4e, 0x65, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x54, 0x56, 0x24, 0x31, 0x53, 0x68, 0x69, 0x66, 0x74, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x73,
		0x53, 0x68, 0x69, 0x76, 0x61, 0x6b, 0x69, 0x53, 0x54, 0x56, 0x2d, 0x24, 0x31, 0x53, 0x68, 0x74,
		0x72, 0x69, 0x6b, 0x68, 0x2d, 0x4d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x6f, 0x73, 0x20, 0x46,
		0x32, 0x53, 0x68, 0x75, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x69, 0x63, 0x6f, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x32, 0x4d, 0x6f, 0x72, 0x65, 0x5f, 0x33, 0x4d, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x50, 0x6c,
		0x75, 0x73, 0x33, 0x5f, 0x34, 0x47, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x54, 0x6f, 0x70, 0x61,
		0x7a, 0x4d, 0x65, 0x67, 0x61, 0x32, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x32, 0x20,
		0x4d, 0x61, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x32, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x32, 0x4e, 0x69,
		0x6c, 0x65, 0x20, 0x58, 0x53, 0x53, 0x52, 0x33, 0x2d, 0x31, 0x2d, 0x35, 0x31, 0x2d, 0x35, 0x4d,
		0x53, 0x53, 0x44, 0x2d, 0x31, 0x2d, 0x35, 0x33, 0x2d, 0x31, 0x33, 0x4d, 0x45, 0x31, 0x30, 0x30,
		0x32, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x33, 0x2d, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x70,
		0x72, 0x65, 0x73, 0x73, 0x20, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
		0x73, 0x33, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x33, 0x53, 0x69, 0x65, 0x6d, 0x65,
		0x6e, 0x73, 0x58, 0x2d, 0x54, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x51, 0x24, 0x31, 0x20, 0x4d,
		0x61, 0x78, 0x58, 0x2d, 0x54, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x51, 0x24, 0x31, 0x58, 0x2d,
		0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x24, 0x31, 0x54, 0x61, 0x62,
		0x5f, 0x41, 0x31, 0x30, 0x32, 0x35, 0x5f, 0x58, 0x2d, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x58, 0x2d,
		0x54, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x31, 0x30, 0x32, 0x35, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x31, 0x30, 0x31, 0x30, 0x20, 0x4e, 0x65, 0x6f, 0x58, 0x2d, 0x53, 0x74,
		0x79, 0x6c, 0x65, 0x20, 0x53, 0x24, 0x31, 0x53, 0x69, 0x6c, 0x65, 0x6c, 0x69, 0x73, 0x53, 0x69,
		0x6c, 0x65, 0x6e, 0x74, 0x20, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x53, 0x69, 0x6d, 0x62, 0x61, 0x6e, 0x73, 0x54, 0x61,
		0x6e, 0x67, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x54, 0x61,
		0x62, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x6d, 0x61, 0x78, 0x50,
		0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65,
		0x73, 0x74, 0x6f, 0x53, 0x37, 0x32, 0x2d, 0x42, 0x53, 0x58, 0x32, 0x57, 0x53, 0x69, 0x6d, 0x70,
		0x6c, 0x79, 0x53, 0x69, 0x6e, 0x67, 0x74, 0x65, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x79, 0x20, 0x49, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x49, 0x20,
		0x4d, 0x69, 0x78, 0x53, 0x69, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x53, 0x50, 0x2d, 0x24, 0x31, 0x53,
		0x69, 0x72, 0x69, 0x6e, 0x20, 0x4c, 0x61, 0x62, 0x73, 0x46, 0x69, 0x6e, 0x6e, 0x65, 0x79, 0x20,
		0x55, 0x31, 0x53, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x6e, 0x53, 0x69, 0x73, 0x77, 0x6f, 0x6f, 0x41,
		0x70, 0x72, 0x69, 0x78, 0x20, 0x43, 0x35, 0x35, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d,
		0x20, 0x35, 0x2e, 0x30, 0x4d, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x35, 0x2e,
		0x35, 0x43, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x5f, 0x34, 0x5f,
		0x30, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x34, 0x2e,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x34,
		0x2e, 0x30, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x42, 0x34, 0x50, 0x6c, 0x61, 0x74,
		0x69, 0x6e, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20,
		0x56, 0x69, 0x65, 0x77, 0x24, 0x31, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78,
		0x50, 0x61, 0x64, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4b, 0x59, 0x56, 0x49, 0x53, 0x49,
		0x4f, 0x4e, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x79, 0x20, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x32, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x20, 0x4f, 0x63, 0x74, 0x61, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x54,
		0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f, 0x63, 0x74, 0x61,
		0x20, 0x58, 0x53, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x20, 0x58, 0x45,
		0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f,
		0x63, 0x74, 0x61, 0x4d, 0x61, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x5f, 0x35, 0x5f, 0x35, 0x5f,
		0x4f, 0x63, 0x74, 0x61, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x4f, 0x63,
		0x74, 0x61, 0x45, 0x4c, 0x49, 0x54, 0x45, 0x20, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x52, 0x4f,
		0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x45,
		0x6c, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x35, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x20, 0x4d, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31,
		0x35, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x41, 0x36, 0x33, 0x4d,
		0x61, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x41, 0x36, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x53,
		0x4b, 0x59, 0x20, 0x42, 0x36, 0x33, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x42, 0x36, 0x33, 0x45,
		0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x46, 0x75, 0x65, 0x67, 0x6f, 0x20,
		0x24, 0x31, 0x53, 0x4b, 0x59, 0x5f, 0x50, 0x72, 0x6f, 0x5f, 0x49, 0x49, 0x49, 0x50, 0x72, 0x6f,
		0x20, 0x49, 0x49, 0x49, 0x50, 0x52, 0x4f, 0x5f, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x45, 0x50, 0x72,
		0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x53, 0x4b, 0x59, 0x20, 0x35, 0x35, 0x4d, 0x35,
		0x35, 0x4d, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x35, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65,
		0x72, 0x20, 0x35, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20, 0x58, 0x50, 0x72, 0x65,
		0x73, 0x74, 0x69, 0x67, 0x65, 0x45, 0x4d, 0x31, 0x35, 0x30, 0x51, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x45, 0x53, 0x31, 0x33, 0x30, 0x51, 0x20, 0x31, 0x54, 0x42, 0x45, 0x53, 0x31, 0x34, 0x30, 0x51,
		0x20, 0x32, 0x54, 0x42, 0x45, 0x53, 0x32, 0x34, 0x30, 0x45, 0x53, 0x33, 0x34, 0x30, 0x51, 0x20,
		0x32, 0x54, 0x42, 0x20, 0x56, 0x33, 0x53, 0x6b, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
		0x49, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6b, 0x79, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x6b,
		0x79, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x6f, 0x78, 0x2d, 0x46, 0x31,
		0x53, 0x57, 0x2d, 0x32, 0x32, 0x41, 0x45, 0x20, 0x4e, 0x46, 0x53, 0x57, 0x54, 0x56, 0x2d, 0x32,
		0x32, 0x41, 0x45, 0x20, 0x4e, 0x46, 0x53, 0x6d, 0x61, 0x64, 0x6c, 0x53, 0x61, 0x66, 0x61, 0x72,
		0x69, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x69, 0x6c, 0x6f, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x20, 0x49, 0x49, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x49, 0x49, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4b, 0x61, 0x73, 0x73, 0x65,
		0x6c, 0x53, 0x4b, 0x35, 0x35, 0x30, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x6f, 0x6b,
		0x53, 0x42, 0x31, 0x33, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x61, 0x62, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x65, 0x78, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e, 0x53, 0x37, 0x20, 0x42, 0x75,
		0x69, 0x6c, 0x64, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x37, 0x2e, 0x30, 0x50, 0x44, 0x36, 0x44, 0x31, 0x4a, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61,
		0x78, 0x20, 0x56, 0x33, 0x73, 0x41, 0x44, 0x36, 0x38, 0x32, 0x4a, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x6d, 0x61, 0x78, 0x20, 0x54, 0x41, 0x44, 0x36, 0x38, 0x38, 0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x6d, 0x61, 0x78, 0x20, 0x43, 0x32, 0x41, 0x44, 0x36, 0x38, 0x39, 0x47, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x6d, 0x61, 0x78, 0x20, 0x69, 0x33, 0x41, 0x44, 0x36, 0x38, 0x32, 0x48, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x69, 0x33, 0x73, 0x41, 0x44, 0x36, 0x42, 0x31, 0x48, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x47, 0x32, 0x20, 0x48, 0x6f, 0x74, 0x41, 0x44,
		0x39, 0x41, 0x31, 0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x47, 0x32, 0x41,
		0x44, 0x36, 0x38, 0x33, 0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x49, 0x42,
		0x32, 0x36, 0x44, 0x32, 0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x4c, 0x4e,
		0x65, 0x77, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x2d, 0x69, 0x4e, 0x65, 0x77,
		0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x49, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x6d, 0x61, 0x78, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x69, 0x73, 0x61, 0x6e, 0x54,
		0x31, 0x53, 0x4d, 0x38, 0x30, 0x31, 0x54, 0x32, 0x53, 0x4d, 0x39, 0x30, 0x31, 0x4d, 0x31, 0x53,
		0x4d, 0x39, 0x31, 0x39, 0x4d, 0x31, 0x4c, 0x4e, 0x75, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32,
		0x73, 0x4e, 0x75, 0x74, 0x20, 0x33, 0x4e, 0x75, 0x74, 0x20, 0x32, 0x4e, 0x75, 0x74, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x33, 0x4a, 0x69, 0x61, 0x6e, 0x47, 0x75, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x69, 0x73, 0x61, 0x6e, 0x20, 0x55, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x55, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x31, 0x30, 0x4c, 0x53, 0x6d, 0x6f, 0x6f,
		0x74, 0x68, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x32, 0x20, 0x41, 0x64, 0x76, 0x61,
		0x6e, 0x63, 0x65, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x6f, 0x6f, 0x74,
		0x68, 0x20, 0x36, 0x2e, 0x32, 0x36, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x36, 0x2e, 0x32,
		0x36, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x36, 0x2e, 0x38, 0x53, 0x6d, 0x6f, 0x74, 0x72, 0x65, 0x73, 0x68, 0x6b, 0x61, 0x53, 0x6f, 0x62,
		0x69, 0x65, 0x54, 0x65, 0x63, 0x68, 0x53, 0x4f, 0x42, 0x49, 0x45, 0x54, 0x45, 0x43, 0x48, 0x20,
		0x53, 0x4c, 0x50, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x33, 0x44, 0x20,
		0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x6f, 0x64, 0x61, 0x73, 0x6f, 0x64,
		0x61, 0x20, 0x46, 0x49, 0x52, 0x45, 0x53, 0x6f, 0x66, 0x74, 0x62, 0x61, 0x6e, 0x6b, 0x53, 0x6f,
		0x68, 0x6f, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x6f, 0x6c, 0x61, 0x73, 0x53, 0x6f, 0x6c,
		0x6f, 0x6e, 0x65, 0x45, 0x31, 0x34, 0x35, 0x37, 0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x49, 0x72,
		0x6f, 0x6e, 0x20, 0x45, 0x31, 0x34, 0x35, 0x37, 0x57, 0x31, 0x34, 0x35, 0x30, 0x57, 0x69, 0x6e,
		0x64, 0x20, 0x42, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x20, 0x57, 0x31, 0x34, 0x35, 0x30, 0x57, 0x31,
		0x34, 0x35, 0x32, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x57, 0x31, 0x34, 0x35,
		0x32, 0x53, 0x4f, 0x4c, 0x4f, 0x4e, 0x45, 0x20, 0x41, 0x34, 0x37, 0x53, 0x4c, 0x2d, 0x41, 0x34,
		0x37, 0x53, 0x75, 0x6e, 0x5f, 0x53, 0x35, 0x35, 0x30, 0x31, 0x53, 0x75, 0x6e, 0x20, 0x53, 0x35,
		0x35, 0x30, 0x31, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4c, 0x35, 0x35, 0x30, 0x31, 0x53, 0x75,
		0x6d, 0x6f, 0x20, 0x53, 0x35, 0x30, 0x30, 0x31, 0x53, 0x6f, 0x6e, 0x69, 0x6d, 0x58, 0x50, 0x33,
		0x34, 0x30, 0x30, 0x58, 0x50, 0x33, 0x58, 0x50, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x50,
		0x35, 0x73, 0x58, 0x50, 0x35, 0x58, 0x50, 0x36, 0x58, 0x50, 0x37, 0x58, 0x50, 0x38, 0x58, 0x50,
		0x31, 0x30, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x31, 0x30, 0x20, 0x6d, 0x69, 0x6e,
		0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x31, 0x30, 0x20, 0x6d, 0x69, 0x6e, 0x69,
		0x20, 0x70, 0x72, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x38, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72,
		0x63, 0x20, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6e, 0x65, 0x6f, 0x20, 0x56, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6e, 0x65, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x53, 0x6f, 0x6c, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x63, 0x65,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x72, 0x61, 0x79, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x58, 0x31, 0x30, 0x41, 0x73, 0x70, 0x65, 0x6e, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x50,
		0x4c, 0x41, 0x59, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x63, 0x72, 0x6f, 0x20, 0x53,
		0x4c, 0x69, 0x76, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x57, 0x61, 0x6c, 0x6b, 0x6d, 0x61,
		0x6e, 0x74, 0x78, 0x74, 0x74, 0x78, 0x74, 0x20, 0x70, 0x72, 0x6f, 0x4a, 0x61, 0x6c, 0x6f, 0x75,
		0x4e, 0x61, 0x69, 0x74, 0x65, 0x43, 0x65, 0x64, 0x61, 0x72, 0x45, 0x6c, 0x6d, 0x48, 0x61, 0x7a,
		0x65, 0x6c, 0x41, 0x69, 0x6e, 0x6f, 0x59, 0x61, 0x72, 0x69, 0x53, 0x61, 0x74, 0x69, 0x6f, 0x56,
		0x69, 0x76, 0x61, 0x7a, 0x56, 0x69, 0x76, 0x61, 0x7a, 0x20, 0x70, 0x72, 0x6f, 0x5a, 0x79, 0x6c,
		0x6f, 0x53, 0x70, 0x69, 0x72, 0x6f, 0x59, 0x65, 0x6e, 0x64, 0x6f, 0x57, 0x39, 0x36, 0x30, 0x4d,
		0x69, 0x78, 0x20, 0x57, 0x61, 0x6c, 0x6b, 0x6d, 0x61, 0x6e, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x41, 0x58, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4f, 0x2d, 0x30, 0x34, 0x46, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x32, 0x53, 0x4f, 0x2d, 0x30, 0x32, 0x44, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x4e, 0x58, 0x47, 0x32, 0x32, 0x39, 0x39, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x52, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4f, 0x2d, 0x30, 0x34, 0x47,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x31, 0x30, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x63, 0x65, 0x20, 0x49, 0x49, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x63, 0x65, 0x20, 0x49, 0x49, 0x49, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x31, 0x30, 0x20, 0x49, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20,
		0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x56, 0x49, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x49, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x31, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69,
		0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x31, 0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20,
		0x49, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20, 0x49, 0x56, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31,
		0x20, 0x56, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x50, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35,
		0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x56, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x49, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x35, 0x20, 0x49, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x38, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x53, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x61, 0x72, 0x63, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x6f,
		0x20, 0x48, 0x44, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x6f, 0x20, 0x53,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x69, 0x6f, 0x6e, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x54, 0x58, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x20, 0x4c, 0x54, 0x45, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x74, 0x69,
		0x70, 0x6f, 0x20, 0x64, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x74, 0x69,
		0x70, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6d, 0x69, 0x72, 0x6f, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x55, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x55, 0x4c, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x56, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4a, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x67, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x45, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x34, 0x47,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x43, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x50, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x52, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x4c,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x4c, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x5a, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x45, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x33,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x34, 0x67, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x4c, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x32, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x49, 0x33, 0x33, 0x31, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x4c, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x4d, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x32,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x32, 0x20, 0x41, 0x71, 0x75, 0x61, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x34, 0x20, 0x41, 0x71, 0x75, 0x61, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x4d, 0x34, 0x20, 0x41, 0x71, 0x75, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d,
		0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x33, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x33, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x43, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x34, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x35, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x35, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x33,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x31, 0x20, 0x43, 0x6f, 0x6d,
		0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x31, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x57,
		0x69, 0x66, 0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x20, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x57, 0x69, 0x46, 0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a,
		0x32, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a,
		0x32, 0x44, 0x36, 0x35, 0x36, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x61,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x5a, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33,
		0x2b, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x76, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x5a, 0x34, 0x45, 0x36, 0x35, 0x30, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x5a, 0x34, 0x76, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x20, 0x43, 0x6f, 0x6d,
		0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x58, 0x41, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x58, 0x41, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58,
		0x41, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x5a, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x31, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x31, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63,
		0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x58, 0x41, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41,
		0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41,
		0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48,
		0x34, 0x34, 0x33, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x73, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x48, 0x38, 0x32, 0x36, 0x36, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x53, 0x4f, 0x2d,
		0x30, 0x35, 0x4b, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x20, 0x43, 0x6f,
		0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x20,
		0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x5a, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x31, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x41, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x47, 0x58, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x58, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x20, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x20, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
		0x61, 0x6e, 0x63, 0x65, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x33, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x53, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x42, 0x72, 0x61, 0x76, 0x69,
		0x61, 0x20, 0x24, 0x31, 0x42, 0x72, 0x61, 0x76, 0x69, 0x61, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x35, 0x29, 0x42, 0x72, 0x61, 0x76, 0x69, 0x61, 0x20, 0x56, 0x48, 0x31, 0x57, 0x61,
		0x6c, 0x6b, 0x6d, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x42, 0x44, 0x50, 0x37, 0x47, 0x42, 0x44, 0x50,
		0x38, 0x47, 0x5f, 0x41, 0x58, 0x42, 0x44, 0x50, 0x38, 0x47, 0x20, 0x41, 0x58, 0x42, 0x44, 0x56,
		0x37, 0x47, 0x5f, 0x4e, 0x56, 0x42, 0x44, 0x56, 0x37, 0x47, 0x20, 0x4e, 0x56, 0x42, 0x44, 0x50,
		0x39, 0x47, 0x5f, 0x41, 0x58, 0x44, 0x42, 0x44, 0x50, 0x39, 0x47, 0x20, 0x41, 0x58, 0x44, 0x42,
		0x6c, 0x75, 0x2d, 0x72, 0x61, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x28, 0x24,
		0x31, 0x29, 0x42, 0x6c, 0x75, 0x2d, 0x72, 0x61, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
		0x61, 0x72, 0x63, 0x6f, 0x20, 0x49, 0x53, 0x31, 0x31, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x24, 0x31, 0x53, 0x6f, 0x75, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x6f, 0x75, 0x6e, 0x64,
		0x6d, 0x61, 0x78, 0x53, 0x6f, 0x79, 0x65, 0x73, 0x53, 0x31, 0x30, 0x2d, 0x48, 0x58, 0x53, 0x31,
		0x32, 0x20, 0x50, 0x52, 0x4f, 0x58, 0x53, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61,
		0x72, 0x78, 0x45, 0x64, 0x67, 0x65, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x6f,
		0x20, 0x37, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x65, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x4e, 0x65, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x20, 0x31, 0x31, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x70, 0x61, 0x72, 0x78, 0x20, 0x53, 0x37, 0x53, 0x37, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72,
		0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x56, 0x75, 0x6c,
		0x63, 0x61, 0x6e, 0x6f, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x6f,
		0x20, 0x35, 0x2e, 0x30, 0x22, 0x43, 0x75, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x36, 0x2e, 0x30, 0x22,
		0x44, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x65, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x58, 0x6c, 0x69,
		0x66, 0x65, 0x20, 0x24, 0x31, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x35, 0x51, 0x2b, 0x58,
		0x6c, 0x69, 0x66, 0x65, 0x2d, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65,
		0x20, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x56, 0x69, 0x63,
		0x74, 0x6f, 0x72, 0x35, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72,
		0x20, 0x35, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x20,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x45, 0x6c, 0x65, 0x63, 0x74,
		0x72, 0x6f, 0x35, 0x35, 0x48, 0x44, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x45, 0x6c, 0x65, 0x63,
		0x74, 0x72, 0x6f, 0x20, 0x35, 0x35, 0x20, 0x48, 0x44, 0x4d, 0x69, 0x2d, 0x24, 0x31, 0x4e, 0x4d,
		0x69, 0x2d, 0x24, 0x31, 0x41, 0x51, 0x54, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x39, 0x30,
		0x30, 0x30, 0x53, 0x74, 0x61, 0x72, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x79, 0x5f, 0x53, 0x74,
		0x61, 0x72, 0x5f, 0x58, 0x4d, 0x79, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x58, 0x4d, 0x79, 0x5f,
		0x73, 0x74, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x4d, 0x79, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x31,
		0x38, 0x52, 0x49, 0x4f, 0x20, 0x53, 0x54, 0x41, 0x52, 0x52, 0x69, 0x6f, 0x20, 0x53, 0x74, 0x61,
		0x72, 0x43, 0x5f, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x43, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x5f, 0x4e, 0x6f, 0x74, 0x65, 0x43, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x53, 0x74, 0x61, 0x72, 0x5f, 0x4d, 0x69, 0x78, 0x5f, 0x32, 0x53, 0x74, 0x61, 0x72, 0x20,
		0x4d, 0x69, 0x78, 0x20, 0x32, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x50, 0x4c, 0x55, 0x53,
		0x49, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x20, 0x53, 0x74, 0x61,
		0x72, 0x20, 0x54, 0x77, 0x6f, 0x49, 0x20, 0x73, 0x74, 0x61, 0x72, 0x20, 0x6f, 0x6e, 0x65, 0x49,
		0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x4f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x6c, 0x69, 0x67,
		0x68, 0x74, 0x5f, 0x52, 0x4f, 0x4d, 0x45, 0x5f, 0x58, 0x52, 0x6f, 0x6d, 0x65, 0x20, 0x58, 0x73,
		0x74, 0x61, 0x72, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x61,
		0x72, 0x2b, 0x2b, 0x53, 0x74, 0x61, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x47, 0x6f, 0x41, 0x73, 0x74, 0x72, 0x61, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64,
		0x20, 0x44, 0x31, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x55, 0x50, 0x20, 0x24, 0x31, 0x45,
		0x6e, 0x67, 0x61, 0x67, 0x65, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x61, 0x72,
		0x77, 0x61, 0x79, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x61, 0x20, 0x53, 0x24, 0x31,
		0x53, 0x74, 0x61, 0x72, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x57, 0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31,
		0x53, 0x74, 0x6f, 0x6e, 0x65, 0x78, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x78, 0x65, 0x5a, 0x65, 0x65,
		0x27, 0x54, 0x61, 0x62, 0x24, 0x31, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x58, 0x20, 0x4c, 0x69, 0x6e,
		0x6b, 0x42, 0x6f, 0x78, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x6f, 0x78, 0x53, 0x74, 0x72, 0x61, 0x77,
		0x42, 0x65, 0x72, 0x72, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x53, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x54, 0x45, 0x50, 0x5f,
		0x55, 0x50, 0x53, 0x74, 0x65, 0x70, 0x20, 0x55, 0x70, 0x49, 0x4e, 0x4b, 0x4f, 0x53, 0x49, 0x5f,
		0x50, 0x52, 0x4f, 0x5f, 0x34, 0x47, 0x49, 0x6e, 0x6b, 0x6f, 0x73, 0x69, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x34, 0x47, 0x37, 0x32, 0x31, 0x5f, 0x50, 0x52, 0x4f, 0x37, 0x32, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x53, 0x39, 0x20, 0x54, 0x6f, 0x70, 0x61, 0x7a, 0x53, 0x56, 0x36, 0x31, 0x20, 0x56, 0x65,
		0x63, 0x74, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x36, 0x31, 0x20, 0x4d, 0x61,
		0x67, 0x69, 0x63, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x36, 0x31, 0x20, 0x4a, 0x41, 0x5a, 0x5a,
		0x53, 0x36, 0x31, 0x20, 0x4a, 0x61, 0x7a, 0x7a, 0x53, 0x35, 0x37, 0x5f, 0x41, 0x5a, 0x55, 0x52,
		0x45, 0x53, 0x35, 0x37, 0x20, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x53, 0x35, 0x37, 0x5f, 0x41, 0x4c,
		0x55, 0x52, 0x45, 0x53, 0x35, 0x37, 0x20, 0x41, 0x6c, 0x75, 0x72, 0x65, 0x53, 0x35, 0x36, 0x20,
		0x4d, 0x49, 0x53, 0x54, 0x53, 0x35, 0x36, 0x20, 0x4d, 0x69, 0x73, 0x74, 0x43, 0x50, 0x45, 0x39,
		0x31, 0x53, 0x35, 0x34, 0x20, 0x5a, 0x65, 0x6e, 0x53, 0x35, 0x35, 0x20, 0x4e, 0x6f, 0x76, 0x61,
		0x53, 0x34, 0x30, 0x5f, 0x56, 0x49, 0x53, 0x54, 0x41, 0x53, 0x34, 0x30, 0x20, 0x56, 0x69, 0x73,
		0x74, 0x61, 0x53, 0x35, 0x30, 0x5f, 0x4a, 0x41, 0x44, 0x45, 0x53, 0x35, 0x30, 0x20, 0x4a, 0x61,
		0x64, 0x65, 0x53, 0x35, 0x30, 0x5f, 0x42, 0x4f, 0x4c, 0x44, 0x53, 0x35, 0x30, 0x20, 0x42, 0x6f,
		0x6c, 0x64, 0x49, 0x74, 0x68, 0x65, 0x6d, 0x62, 0x61, 0x41, 0x52, 0x43, 0x54, 0x49, 0x43, 0x41,
		0x72, 0x63, 0x74, 0x69, 0x63, 0x53, 0x35, 0x33, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x4b, 0x53, 0x35,
		0x33, 0x20, 0x53, 0x74, 0x61, 0x72, 0x6b, 0x53, 0x34, 0x30, 0x5f, 0x4c, 0x49, 0x46, 0x45, 0x53,
		0x34, 0x30, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x49, 0x46, 0x45, 0x5f, 0x32, 0x4c, 0x69, 0x66,
		0x65, 0x20, 0x32, 0x4d, 0x4f, 0x53, 0x43, 0x4f, 0x57, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77, 0x53,
		0x34, 0x39, 0x20, 0x50, 0x6f, 0x69, 0x73, 0x65, 0x53, 0x34, 0x39, 0x20, 0x4d, 0x6f, 0x6e, 0x6f,
		0x53, 0x34, 0x39, 0x20, 0x45, 0x63, 0x6f, 0x53, 0x36, 0x34, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41,
		0x53, 0x36, 0x34, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x44, 0x51, 0x52, 0x32, 0x32, 0x49, 0x4e,
		0x4b, 0x4f, 0x53, 0x49, 0x5f, 0x50, 0x52, 0x4f, 0x49, 0x6e, 0x6b, 0x6f, 0x73, 0x69, 0x20, 0x50,
		0x72, 0x6f, 0x49, 0x4e, 0x4b, 0x4f, 0x53, 0x49, 0x49, 0x6e, 0x6b, 0x6f, 0x73, 0x69, 0x49, 0x4e,
		0x4b, 0x55, 0x4c, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x49, 0x6e, 0x6b, 0x75, 0x6c, 0x75, 0x20, 0x50,
		0x72, 0x6f, 0x42, 0x4f, 0x4c, 0x44, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x42, 0x6f, 0x6c, 0x64, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x42, 0x72, 0x61, 0x76, 0x65, 0x52, 0x41, 0x49, 0x4e, 0x52, 0x61, 0x69,
		0x6e, 0x53, 0x41, 0x54, 0x55, 0x52, 0x4e, 0x44, 0x56, 0x4b, 0x38, 0x32, 0x20, 0x4d, 0x65, 0x72,
		0x63, 0x75, 0x72, 0x79, 0x54, 0x61, 0x72, 0x69, 0x73, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31,
		0x44, 0x56, 0x4b, 0x38, 0x37, 0x4f, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x38, 0x20, 0x54, 0x61, 0x62,
		0x53, 0x75, 0x62, 0x6f, 0x72, 0x53, 0x75, 0x67, 0x61, 0x72, 0x59, 0x24, 0x31, 0x20, 0x4d, 0x61,
		0x78, 0x46, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x75, 0x6d, 0x76, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x53, 0x75, 0x6e, 0x56, 0x61, 0x6e, 0x53, 0x75, 0x6e, 0x6d, 0x61, 0x78, 0x53, 0x75, 0x6e,
		0x6d, 0x69, 0x54, 0x32, 0x73, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x32, 0x5f, 0x50, 0x52, 0x4f,
		0x2d, 0x53, 0x54, 0x56, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x54, 0x53, 0x75, 0x6e, 0x6e,
		0x79, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x53,
		0x75, 0x6e, 0x73, 0x74, 0x65, 0x63, 0x68, 0x53, 0x75, 0x6e, 0x76, 0x65, 0x6c, 0x6c, 0x54, 0x39,
		0x35, 0x5a, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4d, 0x38, 0x53, 0x4d,
		0x58, 0x51, 0x2d, 0x48, 0x33, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72,
		0x61, 0x6c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x42, 0x4f, 0x58, 0x53, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x75, 0x70, 0x65, 0x72, 0x53, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x75, 0x70, 0x65, 0x72, 0x54,
		0x61, 0x62, 0x4b, 0x37, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x53, 0x75, 0x70, 0x72, 0x61, 0x53, 0x75,
		0x70, 0x72, 0x61, 0x69, 0x6d, 0x53, 0x75, 0x72, 0x67, 0x65, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x24,
		0x31, 0x53, 0x75, 0x7a, 0x75, 0x6b, 0x69, 0x53, 0x75, 0x6d, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x24,
		0x31, 0x45, 0x43, 0x4f, 0x50, 0x41, 0x44, 0x37, 0x45, 0x43, 0x4f, 0x50, 0x61, 0x64, 0x20, 0x37,
		0x53, 0x76, 0x65, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x70, 0x65, 0x4b, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
		0x74, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4b, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x4b, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x4e, 0x65, 0x6f, 0x20,
		0x34, 0x47, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x32, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20,
		0x38, 0x53, 0x77, 0x69, 0x73, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x53, 0x77, 0x69, 0x74, 0x65, 0x6c,
		0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x53, 0x79, 0x63, 0x6f, 0x52, 0x53, 0x2d,
		0x34, 0x30, 0x33, 0x53, 0x79, 0x6d, 0x70, 0x68, 0x6f, 0x6e, 0x79, 0x5a, 0x56, 0x49, 0x49, 0x49,
		0x49, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x20, 0x24, 0x31, 0x5a, 0x56, 0x49, 0x49, 0x49, 0x4e, 0x4f,
		0x56, 0x41, 0x69, 0x4e, 0x6f, 0x76, 0x61, 0x53, 0x79, 0x6d, 0x70, 0x68, 0x6f, 0x6e, 0x79, 0x20,
		0x41, 0x74, 0x6f, 0x6d, 0x20, 0x69, 0x69, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x49, 0x49, 0x52, 0x6f,
		0x61, 0x72, 0x20, 0x24, 0x31, 0x47, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x68, 0x65, 0x6c,
		0x69, 0x6f, 0x20, 0x33, 0x30, 0x53, 0x79, 0x6d, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x45, 0x41,
		0x53, 0x59, 0x5f, 0x4e, 0x41, 0x56, 0x5f, 0x32, 0x45, 0x61, 0x73, 0x79, 0x20, 0x4e, 0x61, 0x76,
		0x20, 0x32, 0x53, 0x79, 0x72, 0x6f, 0x78, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x37, 0x36, 0x47,
		0x61, 0x6c, 0x61, 0x67, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x2d, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x54, 0x4d, 0x52, 0x56, 0x4c, 0x34, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x56, 0x52,
		0x45, 0x56, 0x56, 0x4c, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x45, 0x56, 0x56, 0x4c,
		0x20, 0x34, 0x54, 0x4d, 0x52, 0x56, 0x30, 0x36, 0x35, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20,
		0x36, 0x78, 0x20, 0x35, 0x47, 0x54, 0x4d, 0x52, 0x56, 0x30, 0x36, 0x50, 0x35, 0x47, 0x52, 0x45,
		0x56, 0x56, 0x4c, 0x20, 0x36, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x45, 0x56,
		0x56, 0x4c, 0x20, 0x35, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x32, 0x20, 0x50, 0x4c, 0x55,
		0x53, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x45, 0x56,
		0x56, 0x4c, 0x20, 0x56, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x52, 0x59, 0x52,
		0x45, 0x56, 0x56, 0x4c, 0x20, 0x32, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x36, 0x20, 0x35, 0x47,
		0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x37, 0x20, 0x35, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20,
		0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x37, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x54, 0x65, 0x6c, 0x65, 0x6b, 0x6f, 0x6d, 0x20, 0x50, 0x75,
		0x6c, 0x73, 0x54, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x54,
		0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x24, 0x31, 0x29, 0x54,
		0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x28, 0x24, 0x31, 0x29, 0x54, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31,
		0x54, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x54,
		0x39, 0x36, 0x54, 0x41, 0x44, 0x41, 0x41, 0x4d, 0x54, 0x41, 0x47, 0x20, 0x54, 0x65, 0x63, 0x68,
		0x54, 0x41, 0x47, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65,
		0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x54, 0x41, 0x55, 0x42, 0x45, 0x54, 0x42, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x49, 0x67, 0x6e, 0x69, 0x73, 0x20, 0x24, 0x31, 0x54, 0x43, 0x4c, 0x47, 0x61, 0x6c, 0x61,
		0x20, 0x47, 0x36, 0x30, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x49, 0x6f, 0x6e, 0x20, 0x58, 0x53, 0x74,
		0x79, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x32, 0x30, 0x31, 0x32, 0x30, 0x35, 0x33, 0x30, 0x34,
		0x33, 0x30, 0x33, 0x34, 0x30, 0x33, 0x33, 0x30, 0x35, 0x33, 0x30, 0x35, 0x69, 0x33, 0x30, 0x36,
		0x34, 0x30, 0x35, 0x34, 0x30, 0x38, 0x34, 0x30, 0x20, 0x53, 0x45, 0x32, 0x30, 0x4c, 0x32, 0x30,
		0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x45,
		0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x30, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x30,
		0x45, 0x33, 0x30, 0x45, 0x32, 0x30, 0x59, 0x32, 0x30, 0x42, 0x43, 0x39, 0x41, 0x33, 0x58, 0x4c,
		0x35, 0x4c, 0x39, 0x4c, 0x39, 0x53, 0x4c, 0x31, 0x30, 0x4c, 0x31, 0x30, 0x2b, 0x4c, 0x31, 0x30,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x65, 0x78, 0x31, 0x30,
		0x20, 0x35, 0x47, 0x31, 0x30, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x4c, 0x58, 0x41, 0x32, 0x58,
		0x58, 0x34, 0x20, 0x35, 0x47, 0x34, 0x30, 0x20, 0x58, 0x45, 0x20, 0x35, 0x47, 0x31, 0x30, 0x4c,
		0x31, 0x30, 0x20, 0x53, 0x45, 0x32, 0x30, 0x20, 0x53, 0x45, 0x32, 0x30, 0x20, 0x41, 0x33, 0x30,
		0x20, 0x53, 0x45, 0x34, 0x31, 0x38, 0x38, 0x56, 0x33, 0x30, 0x20, 0x4c, 0x45, 0x33, 0x30, 0x2b,
		0x54, 0x36, 0x37, 0x36, 0x48, 0x33, 0x30, 0x33, 0x30, 0x20, 0x5a, 0x33, 0x30, 0x20, 0x56, 0x20,
		0x35, 0x47, 0x54, 0x36, 0x30, 0x33, 0x44, 0x4c, 0x33, 0x30, 0x20, 0x54, 0x33, 0x30, 0x20, 0x35,
		0x47, 0x33, 0x30, 0x20, 0x58, 0x45, 0x20, 0x35, 0x47, 0x33, 0x30, 0x20, 0x58, 0x4c, 0x32, 0x30,
		0x52, 0x20, 0x35, 0x47, 0x32, 0x30, 0x53, 0x32, 0x30, 0x20, 0x58, 0x45, 0x32, 0x30, 0x20, 0x35,
		0x47, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x34, 0x30, 0x52, 0x20, 0x35, 0x47,
		0x49, 0x4f, 0x4e, 0x20, 0x56, 0x4e, 0x78, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x20, 0x34, 0x30,
		0x39, 0x34, 0x39, 0x34, 0x47, 0x4e, 0x78, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x20, 0x31, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x39, 0x34, 0x36, 0x36, 0x58, 0x4e, 0x78, 0x74, 0x50, 0x61, 0x70, 0x65,
		0x72, 0x20, 0x31, 0x31, 0x39, 0x33, 0x31, 0x37, 0x58, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x37, 0x54, 0x4b, 0x45, 0x45, 0x20, 0x4d, 0x61, 0x78, 0x54, 0x61, 0x62,
		0x20, 0x38, 0x22, 0x20, 0x34, 0x47, 0x39, 0x31, 0x33, 0x32, 0x47, 0x54, 0x61, 0x62, 0x20, 0x38,
		0x22, 0x39, 0x31, 0x33, 0x32, 0x53, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x39, 0x32,
		0x39, 0x35, 0x47, 0x31, 0x30, 0x20, 0x54, 0x61, 0x62, 0x4d, 0x61, 0x78, 0x20, 0x34, 0x47, 0x39,
		0x32, 0x39, 0x36, 0x47, 0x31, 0x30, 0x20, 0x54, 0x61, 0x62, 0x4d, 0x61, 0x78, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x39, 0x32, 0x39, 0x36, 0x51, 0x31, 0x30, 0x20, 0x54, 0x61, 0x62, 0x4d, 0x61, 0x78,
		0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30,
		0x20, 0x35, 0x47, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x73, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x54, 0x61, 0x62,
		0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x54,
		0x61, 0x62, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x61, 0x62, 0x20, 0x37, 0x4c, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x4c, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x20, 0x34, 0x47, 0x54, 0x61, 0x62,
		0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x20, 0x34, 0x47, 0x39, 0x31, 0x33, 0x37, 0x57, 0x54, 0x61,
		0x62, 0x20, 0x38, 0x20, 0x4c, 0x45, 0x39, 0x31, 0x36, 0x36, 0x47, 0x54, 0x61, 0x62, 0x20, 0x31,
		0x31, 0x20, 0x4c, 0x54, 0x45, 0x38, 0x34, 0x39, 0x31, 0x58, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30,
		0x4c, 0x39, 0x30, 0x38, 0x30, 0x47, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x73, 0x20, 0x34, 0x47,
		0x42, 0x65, 0x79, 0x6f, 0x6e, 0x64, 0x20, 0x54, 0x56, 0x20, 0x24, 0x31, 0x54, 0x43, 0x4c, 0x37,
		0x32, 0x35, 0x36, 0x33, 0x43, 0x37, 0x32, 0x35, 0x36, 0x33, 0x43, 0x73, 0x6d, 0x61, 0x72, 0x74,
		0x74, 0x76, 0x5f, 0x41, 0x46, 0x54, 0x4d, 0x4d, 0x2d, 0x54, 0x43, 0x4c, 0x2d, 0x54, 0x53, 0x38,
		0x30, 0x31, 0x31, 0x54, 0x53, 0x38, 0x30, 0x31, 0x31, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56,
		0x20, 0x33, 0x2d, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29,
		0x46, 0x48, 0x44, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x33, 0x29, 0x34, 0x4b, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x33, 0x29, 0x54, 0x44, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x44, 0x20,
		0x54, 0x65, 0x63, 0x68, 0x4e, 0x41, 0x54, 0x2d, 0x54, 0x4e, 0x37, 0x30, 0x4e, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x56, 0x41, 0x2d, 0x50, 0x41, 0x30, 0x30, 0x54, 0x44, 0x54, 0x2d, 0x4d, 0x41,
		0x30, 0x31, 0x54, 0x45, 0x43, 0x48, 0x4e, 0x4f, 0x53, 0x41, 0x54, 0x58, 0x39, 0x38, 0x6d, 0x69,
		0x6e, 0x69, 0x58, 0x39, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x45, 0x45, 0x4e, 0x4f, 0x54,
		0x45, 0x4e, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x54, 0x43, 0x54, 0x49, 0x41, 0x4e, 0x59, 0x55,
		0x54, 0x49, 0x4d, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x4a, 0x43, 0x4d, 0x65, 0x74, 0x61,
		0x6c, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x31, 0x30, 0x54, 0x4a, 0x44, 0x54, 0x4f,
		0x4f, 0x47, 0x4f, 0x54, 0x4f, 0x50, 0x44, 0x4f, 0x4e, 0x54, 0x4f, 0x50, 0x53, 0x48, 0x4f, 0x57,
		0x53, 0x54, 0x4f, 0x53, 0x43, 0x49, 0x44, 0x4f, 0x57, 0x31, 0x30, 0x39, 0x54, 0x4f, 0x58, 0x54,
		0x4f, 0x58, 0x31, 0x54, 0x50, 0x53, 0x54, 0x54, 0x45, 0x43, 0x54, 0x54, 0x4b, 0x2d, 0x54, 0x56,
		0x54, 0x54, 0x4b, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x32, 0x31, 0x34, 0x53, 0x42, 0x2d, 0x32, 0x31,
		0x34, 0x54, 0x54, 0x66, 0x6f, 0x6e, 0x65, 0x54, 0x54, 0x32, 0x30, 0x54, 0x56, 0x43, 0x4e, 0x75,
		0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x53, 0x58, 0x2d, 0x53, 0x50, 0x35, 0x54, 0x57, 0x4d, 0x41,
		0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x53, 0x41, 0x6d, 0x61, 0x7a, 0x69, 0x6e,
		0x67, 0x20, 0x24, 0x31, 0x54, 0x57, 0x5a, 0x54, 0x61, 0x62, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24,
		0x31, 0x4f, 0x58, 0x5f, 0x58, 0x31, 0x4f, 0x58, 0x20, 0x58, 0x31, 0x54, 0x59, 0x44, 0x54, 0x61,
		0x69, 0x67, 0x61, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x69, 0x67, 0x61, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x54, 0x61, 0x6b, 0x61, 0x72, 0x61, 0x54, 0x61, 0x6c, 0x69,
		0x75, 0x73, 0x54, 0x61, 0x6d, 0x62, 0x6f, 0x54, 0x61, 0x6e, 0x69, 0x78, 0x54, 0x58, 0x24, 0x31,
		0x73, 0x54, 0x58, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x54, 0x58, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x54, 0x58, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x65, 0x61, 0x63, 0x68, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x54, 0x65, 0x63, 0x54, 0x6f, 0x79, 0x4f, 0x4e, 0x20, 0x31, 0x32, 0x38, 0x47, 0x42,
		0x54, 0x65, 0x63, 0x68, 0x50, 0x61, 0x64, 0x53, 0x38, 0x31, 0x33, 0x47, 0x54, 0x65, 0x63, 0x68,
		0x50, 0x61, 0x64, 0x31, 0x30, 0x51, 0x43, 0x31, 0x30, 0x51, 0x43, 0x54, 0x65, 0x63, 0x68, 0x50,
		0x61, 0x64, 0x5f, 0x31, 0x30, 0x78, 0x78, 0x31, 0x30, 0x58, 0x58, 0x54, 0x65, 0x63, 0x68, 0x50,
		0x61, 0x64, 0x37, 0x30, 0x33, 0x37, 0x30, 0x33, 0x33, 0x47, 0x78, 0x33, 0x47, 0x5f, 0x31, 0x36,
		0x33, 0x47, 0x2d, 0x31, 0x36, 0x58, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x4d, 0x35, 0x20, 0x24,
		0x31, 0x4d, 0x36, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x34, 0x20, 0x43, 0x61, 0x6d, 0x54, 0x65, 0x63, 0x68, 0x5f, 0x50, 0x61, 0x64,
		0x5f, 0x4b, 0x61, 0x69, 0x6f, 0x73, 0x5f, 0x4f, 0x6e, 0x65, 0x5f, 0x33, 0x47, 0x4b, 0x61, 0x69,
		0x6f, 0x73, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x54, 0x65, 0x63, 0x68, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x53, 0x61, 0x74, 0x54, 0x65, 0x63, 0x68, 0x6e,
		0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x70, 0x63,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x50, 0x61, 0x64, 0x20, 0x55, 0x50, 0x31, 0x30, 0x24, 0x31, 0x54, 0x65, 0x63, 0x68, 0x73, 0x74,
		0x6f, 0x72, 0x6d, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x65, 0x63, 0x68,
		0x77, 0x6f, 0x6f, 0x64, 0x54, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x62, 0x6f, 0x6f, 0x6b,
		0x20, 0x24, 0x31, 0x54, 0x31, 0x30, 0x54, 0x32, 0x30, 0x50, 0x31, 0x30, 0x53, 0x50, 0x32, 0x30,
		0x48, 0x44, 0x50, 0x34, 0x30, 0x48, 0x44, 0x50, 0x38, 0x30, 0x54, 0x41, 0x70, 0x65, 0x78, 0x20,
		0x50, 0x31, 0x30, 0x48, 0x44, 0x50, 0x31, 0x30, 0x48, 0x44, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x41,
		0x70, 0x65, 0x78, 0x20, 0x50, 0x31, 0x30, 0x48, 0x44, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x33,
		0x30, 0x53, 0x50, 0x38, 0x35, 0x4d, 0x32, 0x30, 0x5f, 0x34, 0x47, 0x4d, 0x32, 0x30, 0x20, 0x34,
		0x47, 0x4d, 0x38, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x4c, 0x41, 0x30, 0x30, 0x32, 0x4d, 0x33,
		0x30, 0x20, 0x34, 0x47, 0x54, 0x4c, 0x41, 0x30, 0x31, 0x36, 0x4d, 0x31, 0x36, 0x4d, 0x34, 0x30,
		0x41, 0x69, 0x72, 0x4d, 0x34, 0x30, 0x20, 0x41, 0x69, 0x72, 0x4d, 0x34, 0x30, 0x53, 0x45, 0x4d,
		0x34, 0x30, 0x20, 0x53, 0x45, 0x4d, 0x34, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x34, 0x30,
		0x53, 0x54, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x34, 0x30, 0x20, 0x41, 0x69, 0x72, 0x54,
		0x4c, 0x41, 0x30, 0x30, 0x31, 0x54, 0x34, 0x30, 0x54, 0x34, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x54, 0x24, 0x31, 0x48, 0x44, 0x4d, 0x24, 0x31, 0x48, 0x44, 0x54, 0x35, 0x30, 0x50, 0x72, 0x6f,
		0x5f, 0x57, 0x54, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x38, 0x30, 0x68, 0x50, 0x38, 0x30,
		0x58, 0x50, 0x33, 0x30, 0x41, 0x69, 0x72, 0x50, 0x33, 0x30, 0x20, 0x41, 0x69, 0x72, 0x54, 0x50,
		0x61, 0x64, 0x20, 0x39, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x34, 0x47, 0x58, 0x39,
		0x38, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x58, 0x39, 0x38, 0x20, 0x41, 0x69, 0x72, 0x20, 0x49,
		0x49, 0x49, 0x58, 0x39, 0x38, 0x20, 0x41, 0x69, 0x72, 0x20, 0x49, 0x49, 0x54, 0x65, 0x63, 0x6e,
		0x6f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x36,
		0x2d, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x36, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x36, 0x53, 0x50, 0x68, 0x61, 0x6e,
		0x74, 0x6f, 0x6d, 0x20, 0x36, 0x53, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x24, 0x31,
		0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x58, 0x32, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f,
		0x6d, 0x20, 0x58, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20,
		0x58, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x56, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x50,
		0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x56, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x50, 0x68, 0x61,
		0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x39, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x38, 0x54,
		0x45, 0x43, 0x4e, 0x4f, 0x20, 0x57, 0x58, 0x33, 0x4c, 0x54, 0x45, 0x57, 0x58, 0x33, 0x20, 0x4c,
		0x54, 0x45, 0x54, 0x45, 0x43, 0x4e, 0x4f, 0x2d, 0x57, 0x33, 0x57, 0x33, 0x46, 0x34, 0x20, 0x50,
		0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69,
		0x54, 0x77, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x41, 0x69, 0x72, 0x20, 0x32,
		0x2b, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x41, 0x63, 0x65, 0x20, 0x32, 0x43, 0x61, 0x6d,
		0x6f, 0x6e, 0x20, 0x69, 0x32, 0x58, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x32, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x20, 0x32, 0x43, 0x61, 0x6d, 0x6f,
		0x6e, 0x20, 0x69, 0x53, 0x6b, 0x79, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x53, 0x6b, 0x79,
		0x20, 0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x53, 0x6b, 0x79, 0x20, 0x33, 0x44, 0x72,
		0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x43, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61,
		0x64, 0x20, 0x37, 0x44, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x43, 0x20,
		0x50, 0x72, 0x6f, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x46, 0x44, 0x72,
		0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x47, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61,
		0x64, 0x20, 0x31, 0x30, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61,
		0x64, 0x20, 0x31, 0x30, 0x44, 0x20, 0x34, 0x47, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64,
		0x20, 0x38, 0x44, 0x52, 0x37, 0x2b, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x34, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x39, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x31, 0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x32, 0x20, 0x41, 0x69, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x31, 0x35, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20, 0x41, 0x69, 0x72, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x31, 0x36, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69,
		0x65, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20, 0x53, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36,
		0x20, 0x53, 0x45, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x37, 0x43, 0x61, 0x6d, 0x6f, 0x6e,
		0x20, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x37, 0x50,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x38, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x38, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x38,
		0x50, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x39, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x39, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x32, 0x30, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x32, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x32, 0x30, 0x20,
		0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x35, 0x47, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x33, 0x30, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69,
		0x65, 0x72, 0x20, 0x35, 0x47, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x35, 0x47,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x43,
		0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x4d, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x58, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43,
		0x58, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x58, 0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x70,
		0x20, 0x31, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x46, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x53, 0x50, 0x6f, 0x70,
		0x20, 0x32, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x6f, 0x70, 0x20,
		0x32, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x58, 0x20, 0x41, 0x69,
		0x72, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x58, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x41, 0x69, 0x72,
		0x50, 0x6f, 0x70, 0x20, 0x33, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x6f, 0x70, 0x20, 0x34, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70,
		0x20, 0x34, 0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x50,
		0x6f, 0x70, 0x20, 0x35, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x58, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x20,
		0x47, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x43, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x20, 0x4c, 0x54,
		0x45, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x50,
		0x50, 0x6f, 0x70, 0x20, 0x36, 0x50, 0x6f, 0x70, 0x20, 0x36, 0x20, 0x47, 0x6f, 0x50, 0x6f, 0x70,
		0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x37, 0x50, 0x6f, 0x70, 0x20, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x38, 0x53, 0x41, 0x31, 0x73, 0x20, 0x50, 0x72,
		0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x34, 0x29, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x32, 0x30, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x30, 0x43, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x20,
		0x59, 0x6f, 0x75, 0x74, 0x68, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x34, 0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x20, 0x41, 0x69, 0x72,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x36, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x36,
		0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x36, 0x20, 0x47, 0x6f, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x37, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x37, 0x50, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x37, 0x54,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x43, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x50, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x54, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x39, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x39, 0x54, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x43, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x31, 0x30, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x47, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x30, 0x29, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x59, 0x6f, 0x75, 0x74,
		0x68, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x43, 0x4d, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61,
		0x64, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x32, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69,
		0x72, 0x20, 0x31, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x33, 0x50, 0x6f, 0x75, 0x76,
		0x6f, 0x69, 0x72, 0x20, 0x33, 0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72,
		0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x34,
		0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6f, 0x6f,
		0x6d, 0x20, 0x4a, 0x38, 0x52, 0x37, 0x20, 0x34, 0x47, 0x57, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x57,
		0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x45, 0x43, 0x4e, 0x4f, 0x20, 0x53, 0x39, 0x50, 0x6f,
		0x76, 0x61, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x4e, 0x65, 0x6f, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x4e,
		0x65, 0x6f, 0x20, 0x32, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x50, 0x6f,
		0x76, 0x61, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x47, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x50,
		0x6f, 0x76, 0x61, 0x20, 0x33, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x47, 0x50, 0x6f, 0x76, 0x61,
		0x20, 0x34, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x76, 0x61,
		0x20, 0x35, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x50,
		0x6f, 0x76, 0x61, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x50, 0x6f, 0x76, 0x61,
		0x20, 0x36, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x36, 0x20, 0x4e, 0x65, 0x6f, 0x4c, 0x38, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x54, 0x65, 0x6b, 0x6e, 0x6f, 0x73, 0x61, 0x50, 0x72, 0x65, 0x6f, 0x20, 0x54,
		0x65, 0x6b, 0x6e, 0x6f, 0x73, 0x61, 0x20, 0x50, 0x31, 0x50, 0x72, 0x65, 0x6f, 0x20, 0x50, 0x31,
		0x50, 0x72, 0x65, 0x6f, 0x20, 0x50, 0x24, 0x31, 0x54, 0x65, 0x6c, 0x65, 0x32, 0x24, 0x31, 0x20,
		0x31, 0x2e, 0x31, 0x4d, 0x69, 0x64, 0x69, 0x20, 0x32, 0x2e, 0x30, 0x54, 0x65, 0x6c, 0x65, 0x66,
		0x75, 0x6e, 0x6b, 0x65, 0x6e, 0x54, 0x45, 0x4c, 0x2d, 0x31, 0x30, 0x31, 0x33, 0x47, 0x49, 0x51,
		0x41, 0x47, 0x69, 0x71, 0x61, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x54, 0x45,
		0x4c, 0x2d, 0x24, 0x31, 0x46, 0x6f, 0x78, 0x74, 0x72, 0x6f, 0x74, 0x32, 0x46, 0x6f, 0x78, 0x74,
		0x72, 0x6f, 0x74, 0x20, 0x32, 0x4c, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x41, 0x4c, 0x69, 0x6d,
		0x61, 0x20, 0x4c, 0x54, 0x45, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x5f, 0x4c, 0x54, 0x45,
		0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x54, 0x45, 0x20, 0x4d,
		0x69, 0x6b, 0x65, 0x4d, 0x69, 0x6b, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x65, 0x6c, 0x65, 0x67,
		0x6f, 0x54, 0x45, 0x4c, 0x45, 0x47, 0x4f, 0x2d, 0x57, 0x35, 0x30, 0x33, 0x57, 0x35, 0x30, 0x33,
		0x54, 0x65, 0x6c, 0x65, 0x67, 0x6f, 0x5f, 0x4a, 0x4f, 0x59, 0x32, 0x4a, 0x6f, 0x79, 0x20, 0x32,
		0x57, 0x69, 0x73, 0x65, 0x32, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x57, 0x69, 0x73, 0x65, 0x20, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x65, 0x6c, 0x65, 0x6e, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x69,
		0x61, 0x54, 0x65, 0x6c, 0x69, 0x61, 0x20, 0x62, 0x6f, 0x78, 0x54, 0x65, 0x6c, 0x69, 0x74, 0x54,
		0x65, 0x6c, 0x6b, 0x6f, 0x6d, 0x54, 0x65, 0x6c, 0x6c, 0x79, 0x54, 0x59, 0x35, 0x35, 0x5f, 0x31,
		0x54, 0x59, 0x35, 0x35, 0x2d, 0x31, 0x54, 0x65, 0x6c, 0x6d, 0x61, 0x54, 0x65, 0x6c, 0x6d, 0x61,
		0x5f, 0x46, 0x31, 0x5f, 0x4d, 0x61, 0x78, 0x5f, 0x34, 0x47, 0x46, 0x31, 0x20, 0x4d, 0x61, 0x78,
		0x20, 0x34, 0x47, 0x46, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x34, 0x47, 0x46, 0x31, 0x78,
		0x34, 0x47, 0x46, 0x31, 0x78, 0x20, 0x34, 0x47, 0x46, 0x65, 0x65, 0x6c, 0x5f, 0x50, 0x6c, 0x75,
		0x73, 0x46, 0x65, 0x65, 0x6c, 0x54, 0x65, 0x6c, 0x6f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73,
		0x54, 0x45, 0x4c, 0x4f, 0x5f, 0x4d, 0x35, 0x54, 0x65, 0x6c, 0x70, 0x6f, 0x54, 0x50, 0x53, 0x24,
		0x31, 0x54, 0x65, 0x72, 0x61, 0x63, 0x75, 0x62, 0x65, 0x54, 0x65, 0x73, 0x63, 0x6f, 0x48, 0x75,
		0x64, 0x6c, 0x20, 0x24, 0x31, 0x4f, 0x70, 0x33, 0x6e, 0x20, 0x44, 0x6f, 0x74, 0x74, 0x54, 0x65,
		0x74, 0x72, 0x61, 0x74, 0x61, 0x62, 0x43, 0x61, 0x73, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x33,
		0x54, 0x68, 0x4c, 0x4b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x32, 0x42, 0x6f, 0x78, 0x20, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x42, 0x6f, 0x78, 0x20, 0x31, 0x54, 0x68, 0x6f, 0x6d, 0x73, 0x6f, 0x6e,
		0x51, 0x4d, 0x37, 0x33, 0x34, 0x2d, 0x32, 0x51, 0x4d, 0x37, 0x33, 0x34, 0x2d, 0x38, 0x47, 0x51,
		0x4d, 0x37, 0x33, 0x35, 0x2d, 0x38, 0x47, 0x51, 0x4d, 0x37, 0x33, 0x36, 0x2d, 0x38, 0x47, 0x20,
		0x28, 0x48, 0x44, 0x29, 0x33, 0x47, 0x20, 0x38, 0x39, 0x35, 0x30, 0x53, 0x50, 0x54, 0x45, 0x4f,
		0x31, 0x30, 0x42, 0x4b, 0x31, 0x36, 0x54, 0x45, 0x4f, 0x31, 0x30, 0x42, 0x4b, 0x31, 0x36, 0x54,
		0x45, 0x4f, 0x58, 0x31, 0x30, 0x2d, 0x4d, 0x54, 0x38, 0x53, 0x4c, 0x31, 0x32, 0x38, 0x4c, 0x54,
		0x45, 0x54, 0x45, 0x4f, 0x58, 0x31, 0x30, 0x54, 0x45, 0x4f, 0x24, 0x31, 0x48, 0x45, 0x52, 0x4f,
		0x31, 0x30, 0x52, 0x4b, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x52, 0x4b, 0x54, 0x6c, 0x69,
		0x6e, 0x6b, 0x24, 0x31, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x20, 0x36, 0x37, 0x39, 0x20, 0x50,
		0x72, 0x6f, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x20, 0x36, 0x37, 0x39, 0x45, 0x76, 0x65, 0x72,
		0x79, 0x24, 0x31, 0x44, 0x65, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x54, 0x48, 0x32, 0x30, 0x31,
		0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x5f, 0x54, 0x48, 0x31, 0x30, 0x31, 0x46, 0x72,
		0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x20, 0x54, 0x48, 0x31, 0x30, 0x31, 0x53, 0x65, 0x72, 0x65,
		0x61, 0x20, 0x35, 0x30, 0x30, 0x54, 0x68, 0x75, 0x72, 0x61, 0x79, 0x61, 0x54, 0x69, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x54, 0x69, 0x56, 0x6f, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x20, 0x34, 0x4b,
		0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x34, 0x4b, 0x54, 0x43, 0x44, 0x38, 0x46, 0x36, 0x30,
		0x30, 0x30, 0x24, 0x32, 0x54, 0x69, 0x62, 0x75, 0x74, 0x61, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
		0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x54, 0x69, 0x67, 0x65, 0x72, 0x73, 0x54, 0x49, 0x53, 0x30,
		0x30, 0x31, 0x20, 0x53, 0x24, 0x31, 0x54, 0x49, 0x53, 0x30, 0x30, 0x31, 0x20, 0x54, 0x32, 0x54,
		0x49, 0x53, 0x30, 0x30, 0x31, 0x24, 0x31, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x24, 0x31, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x54, 0x69, 0x6d, 0x6f, 0x76, 0x69, 0x54, 0x4d, 0x4f, 0x56, 0x49, 0x5f,
		0x59, 0x45, 0x41, 0x48, 0x5f, 0x42, 0x45, 0x41, 0x54, 0x59, 0x65, 0x61, 0x68, 0x20, 0x42, 0x65,
		0x61, 0x74, 0x59, 0x65, 0x61, 0x68, 0x4c, 0x49, 0x56, 0x45, 0x59, 0x65, 0x61, 0x68, 0x20, 0x4c,
		0x49, 0x56, 0x45, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x58, 0x20, 0x43, 0x61, 0x6d,
		0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x4d, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x4d, 0x58, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20,
		0x32, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x24, 0x31, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20,
		0x50, 0x72, 0x6f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x20, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x45, 0x70, 0x69, 0x78, 0x59,
		0x65, 0x61, 0x68, 0x5f, 0x47, 0x6f, 0x59, 0x65, 0x61, 0x68, 0x20, 0x47, 0x6f, 0x49, 0x6e, 0x73,
		0x69, 0x67, 0x6e, 0x69, 0x61, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x61,
		0x20, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x20, 0x24, 0x31, 0x54, 0x69, 0x6e, 0x61, 0x69, 0x54, 0x69,
		0x6e, 0x6d, 0x6f, 0x54, 0x69, 0x76, 0x61, 0x78, 0x54, 0x6f, 0x6c, 0x69, 0x6e, 0x6f, 0x54, 0x6f,
		0x6c, 0x69, 0x6e, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x6f, 0x6e, 0x65, 0x54,
		0x6f, 0x6f, 0x6b, 0x79, 0x54, 0x4f, 0x4f, 0x4b, 0x59, 0x41, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x54, 0x6f, 0x70, 0x20, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x74, 0x6f, 0x20, 0x57, 0x34,
		0x31, 0x38, 0x43, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x31, 0x31, 0x37, 0x43, 0x6f, 0x74, 0x6f, 0x20,
		0x54, 0x31, 0x31, 0x37, 0x58, 0x31, 0x30, 0x31, 0x33, 0x43, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x34,
		0x30, 0x30, 0x31, 0x37, 0x54, 0x34, 0x30, 0x30, 0x31, 0x37, 0x54, 0x6f, 0x70, 0x44, 0x65, 0x76,
		0x69, 0x63, 0x65, 0x54, 0x44, 0x54, 0x34, 0x35, 0x31, 0x38, 0x5f, 0x34, 0x47, 0x54, 0x44, 0x54,
		0x34, 0x35, 0x34, 0x31, 0x5f, 0x34, 0x47, 0x54, 0x44, 0x54, 0x33, 0x37, 0x37, 0x38, 0x5f, 0x57,
		0x69, 0x5f, 0x45, 0x54, 0x44, 0x54, 0x33, 0x38, 0x38, 0x37, 0x5f, 0x57, 0x69, 0x5f, 0x44, 0x54,
		0x44, 0x54, 0x34, 0x35, 0x32, 0x38, 0x5f, 0x34, 0x47, 0x5f, 0x45, 0x54, 0x6f, 0x70, 0x65, 0x6c,
		0x6f, 0x74, 0x65, 0x6b, 0x4b, 0x49, 0x44, 0x53, 0x24, 0x31, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x6c, 0x75, 0x78, 0x54, 0x6f, 0x70, 0x73,
		0x69, 0x6f, 0x6e, 0x54, 0x50, 0x30, 0x31, 0x54, 0x6f, 0x72, 0x65, 0x78, 0x44, 0x52, 0x4f, 0x49,
		0x44, 0x5a, 0x20, 0x24, 0x31, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5a, 0x20, 0x53, 0x6b, 0x79, 0x20,
		0x33, 0x67, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5a, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x33, 0x47, 0x44,
		0x52, 0x4f, 0x49, 0x44, 0x5a, 0x20, 0x41, 0x54, 0x4f, 0x4d, 0x20, 0x53, 0x44, 0x52, 0x4f, 0x49,
		0x44, 0x5a, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x53, 0x45, 0x47, 0x4f, 0x20, 0x24, 0x31, 0x45,
		0x47, 0x4f, 0x20, 0x50, 0x68, 0x61, 0x62, 0x20, 0x33, 0x47, 0x45, 0x47, 0x4f, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x34, 0x47, 0x54, 0x6f, 0x73, 0x68, 0x69, 0x62, 0x61, 0x54, 0x2d, 0x30, 0x31,
		0x43, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x54, 0x2d, 0x30, 0x31, 0x43, 0x54, 0x2d, 0x30, 0x31,
		0x44, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x54, 0x2d, 0x30, 0x31, 0x44, 0x54, 0x2d, 0x30, 0x32,
		0x44, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x54, 0x2d, 0x30, 0x32, 0x44, 0x49, 0x53, 0x30, 0x34,
		0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x49, 0x53, 0x30, 0x34, 0x49, 0x53, 0x31, 0x31, 0x54, 0x52,
		0x65, 0x67, 0x7a, 0x61, 0x20, 0x49, 0x53, 0x31, 0x31, 0x54, 0x41, 0x54, 0x37, 0x2d, 0x43, 0x41,
		0x54, 0x31, 0x53, 0x30, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54, 0x31, 0x53, 0x30, 0x41,
		0x54, 0x33, 0x30, 0x30, 0x53, 0x45, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54, 0x33, 0x30,
		0x30, 0x53, 0x45, 0x41, 0x54, 0x35, 0x30, 0x30, 0x61, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41,
		0x54, 0x35, 0x30, 0x30, 0x61, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54, 0x24, 0x31, 0x45,
		0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x41, 0x54, 0x31, 0x30, 0x24, 0x31, 0x2d, 0x41, 0x41, 0x54,
		0x31, 0x30, 0x2d, 0x41, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x41, 0x54, 0x31, 0x30, 0x2d,
		0x41, 0x53, 0x41, 0x54, 0x45, 0x4c, 0x4c, 0x49, 0x54, 0x45, 0x20, 0x4c, 0x35, 0x30, 0x2d, 0x43,
		0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4c, 0x35, 0x30, 0x43, 0x53, 0x61,
		0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x36, 0x35, 0x55, 0x46, 0x33, 0x44,
		0x36, 0x33, 0x44, 0x41, 0x41, 0x46, 0x54, 0x4b, 0x4d, 0x53, 0x54, 0x31, 0x32, 0x34, 0x33, 0x4c,
		0x46, 0x37, 0x31, 0x31, 0x55, 0x32, 0x30, 0x41, 0x46, 0x54, 0x44, 0x43, 0x54, 0x33, 0x31, 0x34,
		0x4b, 0x20, 0x55, 0x48, 0x44, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x46, 0x54, 0x42,
		0x41, 0x4d, 0x52, 0x33, 0x31, 0x31, 0x34, 0x33, 0x4c, 0x46, 0x34, 0x32, 0x31, 0x55, 0x31, 0x39,
		0x56, 0x33, 0x35, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x54, 0x53, 0x42, 0x4e, 0x65, 0x74, 0x54, 0x56, 0x2f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x6d, 0x61, 0x74, 0x65, 0x54, 0x4d, 0x2d,
		0x4d, 0x49, 0x44, 0x38, 0x37, 0x30, 0x53, 0x42, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x61, 0x6e,
		0x20, 0x38, 0x22, 0x54, 0x4d, 0x2d, 0x4d, 0x49, 0x44, 0x31, 0x30, 0x35, 0x30, 0x57, 0x4b, 0x44,
		0x4d, 0x65, 0x67, 0x61, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x33, 0x47, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x65, 0x65, 0x64, 0x54, 0x52, 0x39,
		0x39, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x72, 0x65, 0x6b, 0x53,
		0x74, 0x6f, 0x72, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x53,
		0x54, 0x31, 0x33, 0x34, 0x31, 0x36, 0x2d, 0x31, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20,
		0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x20, 0x31, 0x33, 0x2e, 0x34, 0x22, 0x53, 0x75, 0x72,
		0x66, 0x74, 0x61, 0x62, 0x20, 0x74, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x20, 0x53, 0x31, 0x31,
		0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x20,
		0x53, 0x31, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x30, 0x53,
		0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x46, 0x4d, 0x54, 0x4b, 0x41, 0x57,
		0x30, 0x31, 0x32, 0x33, 0x32, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x31, 0x35,
		0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x58, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x6e, 0x20,
		0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x72, 0x65, 0x76, 0x69, 0x54, 0x41, 0x42, 0x20,
		0x24, 0x31, 0x20, 0x33, 0x47, 0x20, 0x56, 0x38, 0x54, 0x41, 0x42, 0x20, 0x39, 0x20, 0x33, 0x47,
		0x20, 0x56, 0x38, 0x54, 0x41, 0x42, 0x20, 0x39, 0x20, 0x33, 0x47, 0x54, 0x41, 0x42, 0x20, 0x31,
		0x30, 0x20, 0x33, 0x47, 0x20, 0x56, 0x31, 0x36, 0x4d, 0x49, 0x4e, 0x49, 0x54, 0x41, 0x42, 0x20,
		0x33, 0x47, 0x56, 0x4d, 0x49, 0x4e, 0x49, 0x54, 0x41, 0x42, 0x20, 0x33, 0x47, 0x20, 0x56, 0x50,
		0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x34, 0x20, 0x43, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x34, 0x20, 0x53, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x34, 0x2e, 0x35,
		0x51, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x35, 0x20, 0x53, 0x50, 0x68, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x35, 0x2e, 0x33, 0x20, 0x51, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x35, 0x2e, 0x35, 0x20, 0x51, 0x20, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x45, 0x50, 0x68,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x36, 0x20, 0x53, 0x54, 0x72, 0x69, 0x61, 0x50, 0x6c, 0x61,
		0x79, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x66, 0x6f, 0x6e, 0x65, 0x50,
		0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x31, 0x53, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e,
		0x20, 0x31, 0x53, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x73, 0x73, 0x69,
		0x6f, 0x6e, 0x5f, 0x50, 0x72, 0x6f, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72,
		0x6f, 0x54, 0x72, 0x69, 0x6f, 0x56, 0x35, 0x31, 0x44, 0x54, 0x54, 0x72, 0x6f, 0x6e, 0x73, 0x6d,
		0x61, 0x72, 0x74, 0x54, 0x72, 0x75, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x35, 0x47, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x34, 0x2e, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x20, 0x34, 0x2e, 0x30,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x47, 0x65, 0x6e, 0x20, 0x43, 0x20, 0x24,
		0x31, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64,
		0x79, 0x20, 0x35, 0x2e, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20,
		0x34, 0x47, 0x20, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75,
		0x72, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x34, 0x47, 0x20, 0x41,
		0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47,
		0x20, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x34, 0x47, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x35, 0x2e, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x34, 0x47, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x79, 0x20, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x34, 0x47, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x34, 0x47, 0x20, 0x50, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x50, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47,
		0x20, 0x4d, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x34, 0x47,
		0x20, 0x4d, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x4d, 0x31, 0x53, 0x4d,
		0x41, 0x52, 0x54, 0x20, 0x54, 0x41, 0x42, 0x20, 0x34, 0x47, 0x20, 0x4d, 0x31, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x47, 0x20, 0x4d, 0x31, 0x53, 0x4d, 0x41, 0x52,
		0x54, 0x20, 0x54, 0x41, 0x42, 0x20, 0x34, 0x47, 0x20, 0x65, 0x2d, 0x42, 0x69, 0x7a, 0x20, 0x50,
		0x52, 0x4f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x47, 0x20, 0x65,
		0x2d, 0x42, 0x69, 0x7a, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x54, 0x41,
		0x42, 0x20, 0x34, 0x47, 0x20, 0x65, 0x2d, 0x42, 0x69, 0x7a, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x34, 0x47, 0x20, 0x65, 0x2d, 0x42, 0x69, 0x7a, 0x54, 0x52, 0x55, 0x45,
		0x20, 0x42, 0x45, 0x59, 0x4f, 0x4e, 0x44, 0x20, 0x54, 0x41, 0x42, 0x20, 0x33, 0x47, 0x42, 0x65,
		0x79, 0x6f, 0x6e, 0x64, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x30, 0x20, 0x51, 0x75, 0x61, 0x64, 0x43, 0x6f, 0x72,
		0x65, 0x48, 0x50, 0x48, 0x30, 0x37, 0x49, 0x44, 0x20, 0x54, 0x56, 0x20, 0x48, 0x50, 0x48, 0x30,
		0x37, 0x54, 0x72, 0x75, 0x65, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x54, 0x75, 0x43, 0x45, 0x4c, 0x54,
		0x75, 0x6e, 0x69, 0x73, 0x69, 0x65, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x53, 0x74,
		0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x62, 0x79, 0x20, 0x54, 0x54, 0x58, 0x35, 0x20,
		0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x35, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x58, 0x20, 0x52, 0x61,
		0x79, 0x58, 0x35, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x58, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x58,
		0x36, 0x20, 0x5a, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x64, 0x20, 0x37, 0x22,
		0x54, 0x75, 0x72, 0x62, 0x6f, 0x2d, 0x58, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x78, 0x5f, 0x53, 0x33,
		0x53, 0x33, 0x45, 0x33, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x54, 0x75, 0x72, 0x62, 0x6f,
		0x2d, 0x58, 0x5f, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x45, 0x70, 0x73, 0x69, 0x6c, 0x6f,
		0x6e, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x2d, 0x58, 0x20, 0x6c, 0x61, 0x6d, 0x64, 0x61, 0x4c, 0x61,
		0x6d, 0x64, 0x61, 0x50, 0x69, 0x20, 0x34, 0x47, 0x54, 0x55, 0x52, 0x42, 0x4f, 0x58, 0x5f, 0x49,
		0x34, 0x47, 0x49, 0x20, 0x34, 0x47, 0x49, 0x63, 0x65, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x2d, 0x58,
		0x20, 0x43, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x49, 0x49, 0x43, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x49,
		0x49, 0x41, 0x71, 0x75, 0x61, 0x20, 0x49, 0x49, 0x48, 0x69, 0x76, 0x65, 0x20, 0x56, 0x20, 0x33,
		0x47, 0x48, 0x69, 0x76, 0x65, 0x20, 0x56, 0x49, 0x46, 0x69, 0x72, 0x65, 0x20, 0x49, 0x49, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x42, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x20, 0x49, 0x56, 0x52, 0x75, 0x62,
		0x69, 0x6b, 0x20, 0x49, 0x49, 0x20, 0x37, 0x22, 0x52, 0x75, 0x62, 0x69, 0x6b, 0x20, 0x49, 0x49,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x52, 0x75, 0x62, 0x69, 0x6b, 0x20, 0x49, 0x49, 0x49, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x20, 0x49, 0x49, 0x49,
		0x20, 0x33, 0x47, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x43, 0x61, 0x6c, 0x6c, 0x74, 0x61, 0x62, 0x32, 0x47, 0x42, 0x31, 0x30, 0x43,
		0x61, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x43, 0x61, 0x6c, 0x6c,
		0x74, 0x61, 0x62, 0x37, 0x69, 0x6e, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x20,
		0x37, 0x22, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x41, 0x33, 0x33, 0x20,
		0x69, 0x6e, 0x65, 0x74, 0x54, 0x77, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x75, 0x72, 0x62, 0x6f,
		0x4b, 0x69, 0x64, 0x73, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x70, 0x61, 0x64, 0x20, 0x33,
		0x47, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x33, 0x47,
		0x20, 0x4e, 0x65, 0x77, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x50, 0x61, 0x64, 0x54, 0x75, 0x72, 0x6b,
		0x63, 0x65, 0x6c, 0x6c, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x54, 0x35, 0x30, 0x54, 0x24, 0x31,
		0x30, 0x54, 0x32, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35,
		0x54, 0x32, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x54, 0x75,
		0x76, 0x69, 0x6f, 0x54, 0x77, 0x69, 0x6e, 0x4d, 0x4f, 0x53, 0x54, 0x77, 0x6f, 0x65, 0x54, 0x79,
		0x6d, 0x65, 0x73, 0x54, 0xc3, 0xbc, 0x72, 0x6b, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x6b, 0x6f, 0x6d,
		0x54, 0x75, 0x72, 0x6b, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x6b, 0x6f, 0x6d, 0x54, 0x54, 0x31, 0x37,
		0x35, 0x55, 0x2d, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x33, 0x30,
		0x65, 0x20, 0x35, 0x47, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x35, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x55, 0x2e, 0x53, 0x2e, 0x20, 0x43, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x55, 0x53,
		0x43, 0x43, 0x2d, 0x55, 0x53, 0x43, 0x43, 0x2d, 0x45, 0x36, 0x37, 0x36, 0x32, 0x4b, 0x79, 0x6f,
		0x63, 0x65, 0x72, 0x61, 0x20, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x44,
		0x54, 0x56, 0x33, 0x34, 0x38, 0x20, 0x44, 0x56, 0x42, 0x54, 0x56, 0x33, 0x34, 0x38, 0x20, 0x49,
		0x53, 0x44, 0x42, 0x54, 0x56, 0x33, 0x35, 0x38, 0x20, 0x44, 0x56, 0x42, 0x55, 0x45, 0x55, 0x45,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x50, 0x61, 0x64, 0x20, 0x31, 0x55, 0x47, 0x49, 0x4e, 0x45,
		0x55, 0x4d, 0x49, 0x44, 0x49, 0x47, 0x49, 0x41, 0x31, 0x31, 0x20, 0x54, 0x61, 0x62, 0x54, 0x47,
		0x33, 0x44, 0x42, 0x47, 0x31, 0x4d, 0x41, 0x47, 0x31, 0x20, 0x54, 0x61, 0x62, 0x41, 0x31, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x50, 0x31, 0x37, 0x4d, 0x50, 0x32, 0x39,
		0x43, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x50, 0x30, 0x37, 0x4d, 0x50, 0x30, 0x39, 0x4d,
		0x50, 0x31, 0x33, 0x46, 0x33, 0x20, 0x35, 0x47, 0x4d, 0x50, 0x31, 0x38, 0x47, 0x31, 0x20, 0x4d,
		0x61, 0x78, 0x41, 0x31, 0x31, 0x53, 0x41, 0x31, 0x33, 0x53, 0x41, 0x31, 0x35, 0x43, 0x47, 0x35,
		0x20, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x47, 0x36, 0x20, 0x35, 0x47, 0x47, 0x35, 0x41, 0x47, 0x33,
		0x20, 0x4d, 0x61, 0x78, 0x55, 0x4d, 0x49, 0x20, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x20, 0x58, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x58, 0x55, 0x4d, 0x49, 0x20, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x45, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x49, 0x53, 0x4f,
		0x4e, 0x20, 0x47, 0x54, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x47, 0x54, 0x50, 0x52, 0x34, 0x4a,
		0x42, 0x58, 0x32, 0x30, 0x41, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x58, 0x32, 0x30, 0x42, 0x69,
		0x73, 0x6f, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x47, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x4e, 0x31,
		0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x47,
		0x54, 0x32, 0x20, 0x35, 0x47, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x47, 0x54, 0x32, 0x42, 0x69,
		0x73, 0x6f, 0x6e, 0x20, 0x32, 0x42, 0x49, 0x53, 0x4f, 0x4e, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x69,
		0x73, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x49, 0x53, 0x4f, 0x4e, 0x42, 0x69, 0x73, 0x6f,
		0x6e, 0x68, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x53, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20,
		0x53, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x5f, 0x58, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e,
		0x64, 0x20, 0x58, 0x43, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x32, 0x43, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65, 0x72, 0x5a, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x32, 0x20,
		0x4c, 0x49, 0x54, 0x45, 0x53, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x32, 0x5f, 0x50, 0x52,
		0x4f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x33, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x35, 0x53,
		0x41, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x31, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x35, 0x47, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x37, 0x20,
		0x4d, 0x61, 0x78, 0x55, 0x4e, 0x49, 0x57, 0x41, 0x55, 0x4e, 0x4e, 0x4f, 0x55, 0x4f, 0x4f, 0x47,
		0x4f, 0x55, 0x55, 0x54, 0x4f, 0x4b, 0x44, 0x6f, 0x72, 0x65, 0x6c, 0x20, 0x33, 0x53, 0x44, 0x6f,
		0x72, 0x65, 0x6c, 0x20, 0x24, 0x31, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x37, 0x51, 0x55, 0x54,
		0x53, 0x74, 0x61, 0x72, 0x63, 0x6f, 0x6d, 0x55, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x5a, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55, 0x7a, 0x62, 0x65, 0x6b, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x55,
		0x67, 0x6f, 0x6f, 0x73, 0x55, 0x54, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x68, 0x61, 0x6e,
		0x73, 0x55, 0x68, 0x61, 0x70, 0x70, 0x79, 0x55, 0x50, 0x24, 0x31, 0x55, 0x50, 0x33, 0x35, 0x30,
		0x55, 0x50, 0x35, 0x38, 0x30, 0x55, 0x35, 0x38, 0x30, 0x55, 0x6c, 0x65, 0x66, 0x6f, 0x6e, 0x65,
		0x42, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x24, 0x31, 0x42, 0x65, 0x20, 0x50, 0x75, 0x72,
		0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x65, 0x20, 0x50, 0x75, 0x72, 0x65, 0x42, 0x65, 0x20,
		0x4f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x42, 0x65,
		0x20, 0x58, 0x42, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50,
		0x36, 0x30, 0x30, 0x30, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x72, 0x69, 0x73, 0x5f, 0x6c,
		0x69, 0x74, 0x65, 0x50, 0x61, 0x72, 0x69, 0x73, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72,
		0x69, 0x73, 0x5f, 0x58, 0x50, 0x61, 0x72, 0x69, 0x73, 0x20, 0x58, 0x50, 0x61, 0x72, 0x69, 0x73,
		0x54, 0x69, 0x67, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x74, 0x65, 0x54, 0x69, 0x67, 0x65, 0x72, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x41, 0x72, 0x6d, 0x6f,
		0x72, 0x20, 0x58, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x41,
		0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x36, 0x53, 0x41,
		0x72, 0x6d, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x57, 0x54, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24,
		0x31, 0x45, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41,
		0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x24, 0x31, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31,
		0x53, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x33, 0x57,
		0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x33, 0x57, 0x54, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24,
		0x31, 0x20, 0x35, 0x47, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x61,
		0x64, 0x24, 0x31, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x24, 0x31, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69,
		0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x65, 0x6e, 0x6e, 0x61, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24,
		0x31, 0x50, 0x55, 0x6d, 0x61, 0x78, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x24, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31,
		0x51, 0x61, 0x20, 0x33, 0x47, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x31, 0x30, 0x51, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x24, 0x31, 0x43, 0x20, 0x4c, 0x54, 0x45, 0x31, 0x30, 0x4c, 0x2d, 0x50, 0x4c, 0x55,
		0x53, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x4c, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31,
		0x30, 0x51, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x31, 0x30, 0x41, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x31, 0x30, 0x51, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x35, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c,
		0x54, 0x45, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x54, 0x65, 0x63, 0x68, 0x53, 0x39,
		0x30, 0x30, 0x50, 0x52, 0x4f, 0x42, 0x54, 0x53, 0x39, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x42, 0x54, 0x53, 0x39, 0x30, 0x30, 0x5f, 0x50, 0x72, 0x6f, 0x53, 0x39, 0x30, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x55, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x55, 0x6e, 0x69, 0x68, 0x65, 0x72, 0x74, 0x7a,
		0x4a, 0x65, 0x6c, 0x6c, 0x79, 0x20, 0x32, 0x4a, 0x65, 0x6c, 0x6c, 0x79, 0x20, 0x32, 0x45, 0x4a,
		0x65, 0x6c, 0x6c, 0x79, 0x20, 0x53, 0x74, 0x61, 0x72, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x5f, 0x70,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65,
		0x74, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x54, 0x69, 0x63, 0x6b, 0x74,
		0x6f, 0x63, 0x6b, 0x2d, 0x53, 0x54, 0x69, 0x63, 0x6b, 0x74, 0x6f, 0x63, 0x6b, 0x20, 0x53, 0x55,
		0x4e, 0x49, 0x41, 0x36, 0x32, 0x5f, 0x53, 0x30, 0x31, 0x54, 0x69, 0x63, 0x6b, 0x74, 0x6f, 0x63,
		0x6b, 0x20, 0x45, 0x54, 0x69, 0x63, 0x6b, 0x74, 0x6f, 0x63, 0x6b, 0x54, 0x41, 0x4e, 0x4b, 0x20,
		0x30, 0x31, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x30, 0x31, 0x54, 0x41, 0x4e, 0x4b, 0x20, 0x32, 0x20,
		0x50, 0x52, 0x4f, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x41, 0x4e,
		0x4b, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x20, 0x31, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x31, 0x38, 0x38, 0x34, 0x39, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x24, 0x31, 0x55,
		0x6e, 0x69, 0x6d, 0x61, 0x78, 0x55, 0x6e, 0x69, 0x71, 0x63, 0x65, 0x6c, 0x6c, 0x41, 0x34, 0x55,
		0x6e, 0x69, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67,
		0x55, 0x6e, 0x69, 0x74, 0x65, 0x63, 0x68, 0x45, 0x41, 0x35, 0x30, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x55, 0x6e, 0x69, 0x74, 0x65, 0x64, 0x20, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x44, 0x4f,
		0x54, 0x54, 0x30, 0x32, 0x30, 0x32, 0x45, 0x4f, 0x4e, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x42, 0x6f, 0x78, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x2d, 0x32, 0x30, 0x32, 0x30, 0x29, 0x53,
		0x44, 0x53, 0x54, 0x42, 0x30, 0x32, 0x45, 0x4f, 0x4e, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x42, 0x6f, 0x78, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
		0x6e, 0x57, 0x65, 0x62, 0x20, 0x54, 0x56, 0x4d, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x4d, 0x38, 0x53, 0x2b, 0x20, 0x34, 0x4b, 0x48, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x69,
		0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x75, 0x64, 0x69, 0x20, 0x4b,
		0x53, 0x57, 0x61, 0x79, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x78, 0x38, 0x36, 0x5f, 0x36, 0x34,
		0x20, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x55, 0x35,
		0x31, 0x33, 0x44, 0x72, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x54, 0x55, 0x35, 0x31, 0x35, 0x31, 0x55,
		0x36, 0x31, 0x31, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x58, 0x55, 0x36, 0x31, 0x33,
		0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x53, 0x55, 0x36, 0x31, 0x35, 0x51, 0x75, 0x61,
		0x74, 0x74, 0x72, 0x6f, 0x20, 0x4d, 0x55, 0x36, 0x31, 0x36, 0x55, 0x37, 0x31, 0x30, 0x51, 0x75,
		0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x55, 0x37, 0x31, 0x30, 0x55, 0x37, 0x32, 0x30, 0x51, 0x75,
		0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x5a, 0x55, 0x2d, 0x38, 0x33, 0x30, 0x52, 0x75, 0x73, 0x68,
		0x55, 0x39, 0x30, 0x33, 0x55, 0x39, 0x30, 0x35, 0x41, 0x69, 0x72, 0x20, 0x35, 0x2e, 0x35, 0x55,
		0x6e, 0x6e, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x69,
		0x65, 0x73, 0x53, 0x50, 0x37, 0x55, 0x6e, 0x6f, 0x6e, 0x75, 0x55, 0x6e, 0x6f, 0x77, 0x68, 0x79,
		0x51, 0x4f, 0x4f, 0x51, 0x20, 0x56, 0x24, 0x31, 0x51, 0x4f, 0x4f, 0x51, 0x55, 0x72, 0x6f, 0x76,
		0x6f, 0x56, 0x2d, 0x47, 0x65, 0x6e, 0x56, 0x2d, 0x48, 0x4f, 0x4d, 0x45, 0x56, 0x2d, 0x48, 0x4f,
		0x50, 0x45, 0x56, 0x41, 0x49, 0x4f, 0x56, 0x50, 0x41, 0x30, 0x35, 0x31, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x41, 0x56, 0x41, 0x4c, 0x45, 0x56, 0x31, 0x32, 0x45, 0x2d, 0x4c, 0x54, 0x45, 0x2d,
		0x38, 0x31, 0x32, 0x38, 0x56, 0x31, 0x32, 0x45, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x41, 0x4c, 0x45,
		0x4d, 0x50, 0x48, 0x41, 0x4e, 0x54, 0x4f, 0x4d, 0x5f, 0x5a, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f,
		0x6d, 0x20, 0x5a, 0x56, 0x41, 0x4c, 0x54, 0x45, 0x43, 0x48, 0x54, 0x41, 0x42, 0x37, 0x51, 0x38,
		0x30, 0x34, 0x56, 0x41, 0x4c, 0x54, 0x41, 0x42, 0x2d, 0x37, 0x51, 0x38, 0x30, 0x34, 0x56, 0x41,
		0x4c, 0x56, 0x41, 0x4e, 0x57, 0x49, 0x4e, 0x56, 0x41, 0x56, 0x41, 0x56, 0x43, 0x43, 0x61, 0x63,
		0x74, 0x75, 0x73, 0x2d, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x63, 0x74, 0x75, 0x73, 0x20, 0x50, 0x72,
		0x6f, 0x24, 0x31, 0x20, 0x49, 0x49, 0x56, 0x44, 0x56, 0x44, 0x56, 0x45, 0x4f, 0x4e, 0x56, 0x45,
		0x54, 0x41, 0x53, 0x56, 0x47, 0x4f, 0x20, 0x54, 0x45, 0x4c, 0x56, 0x65, 0x6e, 0x74, 0x75, 0x72,
		0x65, 0x20, 0x56, 0x24, 0x31, 0x4f, 0x63, 0x65, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x4e, 0x65, 0x77,
		0x20, 0x24, 0x31, 0x69, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x69, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x56, 0x20, 0x54, 0x41, 0x42, 0x20, 0x32, 0x56, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x56,
		0x49, 0x44, 0x41, 0x56, 0x49, 0x49, 0x50, 0x4f, 0x4f, 0x76, 0x69, 0x32, 0x30, 0x32, 0x32, 0x30,
		0x38, 0x31, 0x39, 0x52, 0x36, 0x56, 0x49, 0x4b, 0x55, 0x53, 0x48, 0x41, 0x56, 0x49, 0x4c, 0x4c,
		0x41, 0x4f, 0x4e, 0x56, 0x36, 0x37, 0x35, 0x31, 0x4c, 0x56, 0x33, 0x30, 0x20, 0x52, 0x53, 0x56,
		0x35, 0x30, 0x31, 0x57, 0x56, 0x32, 0x30, 0x20, 0x53, 0x45, 0x56, 0x49, 0x4d, 0x4f, 0x51, 0x41,
		0x34, 0x39, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x49, 0x56, 0x49, 0x42, 0x72, 0x69, 0x67, 0x68,
		0x74, 0x56, 0x49, 0x56, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x56, 0x49, 0x57, 0x41, 0x4c, 0x49, 0x47,
		0x48, 0x54, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4c, 0x69, 0x67, 0x68, 0x74,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x20, 0x4f, 0x4e, 0x45, 0x4c, 0x69,
		0x67, 0x68, 0x74, 0x20, 0x4f, 0x6e, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x41, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x20, 0x50, 0x31, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x50, 0x31, 0x56, 0x4b, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x56, 0x4b, 0x24,
		0x31, 0x56, 0x4b, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x54, 0x35, 0x20, 0x53, 0x45, 0x56, 0x4e, 0x50,
		0x54, 0x20, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x56, 0x4e, 0x54, 0x2d,
		0x54, 0x61, 0x62, 0x38, 0x56, 0x4f, 0x43, 0x41, 0x4c, 0x56, 0x4f, 0x47, 0x41, 0x56, 0x4f, 0x47,
		0x41, 0x20, 0x35, 0x35, 0x39, 0x30, 0x39, 0x56, 0x56, 0x4f, 0x4c, 0x49, 0x41, 0x56, 0x4f, 0x4c,
		0x4b, 0x41, 0x4e, 0x4f, 0x56, 0x55, 0x43, 0x41, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x56, 0x75, 0x63,
		0x61, 0x50, 0x61, 0x64, 0x56, 0x56, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x56, 0x31, 0x56, 0x61, 0x6e,
		0x6b, 0x79, 0x6f, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x50, 0x61, 0x64, 0x20, 0x53, 0x24, 0x31,
		0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x51, 0x54, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x53, 0x31, 0x30, 0x5f, 0x52, 0x4f, 0x57, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78,
		0x50, 0x61, 0x64, 0x20, 0x53, 0x31, 0x30, 0x56, 0x61, 0x72, 0x67, 0x6f, 0x56, 0x61, 0x73, 0x74,
		0x6b, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x20, 0x24,
		0x32, 0x56, 0x65, 0x6b, 0x74, 0x61, 0x56, 0x65, 0x6e, 0x73, 0x6f, 0x49, 0x73, 0x70, 0x72, 0x69,
		0x74, 0x20, 0x55, 0x35, 0x30, 0x56, 0x65, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x56, 0x65, 0x6e, 0x74,
		0x75, 0x72, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x20,
		0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x43, 0x54, 0x24, 0x31, 0x56, 0x65, 0x72, 0x69, 0x63,
		0x6f, 0x55, 0x6e, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x55, 0x6e, 0x69, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x50, 0x4d, 0x2d, 0x24, 0x31, 0x56, 0x65, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x45,
		0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x31, 0x30, 0x51, 0x54, 0x41, 0x53, 0x55, 0x4e,
		0x31, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x38, 0x20, 0x48, 0x44, 0x51, 0x54,
		0x41, 0x53, 0x55, 0x4e, 0x32, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x38, 0x20,
		0x48, 0x44, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x51, 0x54, 0x41, 0x51, 0x5a, 0x33, 0x4b,
		0x49, 0x44, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20,
		0x4c, 0x54, 0x45, 0x51, 0x54, 0x41, 0x51, 0x5a, 0x33, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69,
		0x73, 0x20, 0x38, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x37, 0x57, 0x54, 0x56,
		0x49, 0x53, 0x30, 0x31, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x4d, 0x69, 0x64, 0x6e,
		0x69, 0x67, 0x68, 0x74, 0x56, 0x65, 0x72, 0x6e, 0x65, 0x65, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x58, 0x41, 0x70, 0x6f,
		0x6c, 0x6c, 0x6f, 0x4d, 0x61, 0x72, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x68, 0x6f, 0x72, 0x20,
		0x45, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x65, 0x72, 0x6e, 0x65, 0x65,
		0x5f, 0x4d, 0x35, 0x4d, 0x37, 0x5f, 0x45, 0x45, 0x41, 0x58, 0x32, 0x5f, 0x65, 0x75, 0x72, 0x6f,
		0x56, 0x65, 0x72, 0x73, 0x73, 0x65, 0x64, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x45, 0x31,
		0x2e, 0x31, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4c, 0x75,
		0x63, 0x6b, 0x20, 0x4c, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x49, 0x6d, 0x70, 0x72, 0x65,
		0x73, 0x73, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x45, 0x63,
		0x6c, 0x69, 0x70, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x24, 0x31, 0x20, 0x34, 0x47, 0x49,
		0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x4c, 0x75, 0x63, 0x6b, 0x20, 0x34, 0x47, 0x20, 0x4e,
		0x46, 0x43, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x20, 0x24,
		0x31, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x54, 0x61, 0x62, 0x20, 0x58, 0x24, 0x31, 0x54, 0x61,
		0x62, 0x20, 0x24, 0x31, 0x47, 0x20, 0x24, 0x32, 0x2e, 0x24, 0x33, 0x22, 0x56, 0x65, 0x72, 0x74,
		0x75, 0x41, 0x73, 0x74, 0x65, 0x72, 0x24, 0x31, 0x69, 0x56, 0x65, 0x72, 0x74, 0x75, 0x20, 0x35,
		0x47, 0x4d, 0x65, 0x74, 0x61, 0x76, 0x65, 0x72, 0x74, 0x75, 0x20, 0x35, 0x47, 0x43, 0x6f, 0x6e,
		0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x58, 0x56, 0x65, 0x72, 0x79,
		0x6b, 0x6f, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x79, 0x6b, 0x6f, 0x6f, 0x6c, 0x4c, 0x6f, 0x74, 0x75,
		0x73, 0x4c, 0x6f, 0x74, 0x75, 0x73, 0x20, 0x4a, 0x72, 0x4c, 0x6f, 0x74, 0x75, 0x73, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x49, 0x49, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x4c, 0x54, 0x45, 0x4c, 0x6f, 0x74, 0x75, 0x73, 0x20, 0x49, 0x49, 0x4d, 0x61, 0x76, 0x65,
		0x72, 0x69, 0x63, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x50,
		0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x48, 0x65, 0x6c, 0x69, 0x78, 0x20, 0x49, 0x49, 0x41, 0x6c,
		0x70, 0x68, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20,
		0x49, 0x49, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x49, 0x49, 0x49, 0x4d, 0x61,
		0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4a, 0x72, 0x4d, 0x61, 0x76,
		0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x4a, 0x72, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b,
		0x20, 0x4c, 0x54, 0x45, 0x53, 0x70, 0x65, 0x61, 0x72, 0x53, 0x70, 0x65, 0x61, 0x72, 0x20, 0x4a,
		0x72, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x53,
		0x6f, 0x6c, 0x20, 0x51, 0x75, 0x61, 0x74, 0x72, 0x6f, 0x20, 0x4a, 0x72, 0x43, 0x79, 0x70, 0x72,
		0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x79, 0x70, 0x72, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45,
		0x4c, 0x65, 0x6f, 0x20, 0x33, 0x47, 0x4c, 0x65, 0x6f, 0x20, 0x49, 0x56, 0x4c, 0x65, 0x6f, 0x20,
		0x56, 0x44, 0x6f, 0x72, 0x61, 0x64, 0x6f, 0x4f, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f,
		0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4a, 0x72, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x52, 0x6f, 0x79,
		0x61, 0x6c, 0x65, 0x20, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x4b, 0x6f, 0x6c, 0x6f, 0x72,
		0x50, 0x61, 0x64, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x61, 0x64, 0x20,
		0x49, 0x49, 0x4b, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x61, 0x64, 0x20, 0x49, 0x56, 0x56, 0x65, 0x73,
		0x74, 0x61, 0x56, 0x45, 0x53, 0x54, 0x41, 0x33, 0x32, 0x4c, 0x44, 0x38, 0x36, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x54, 0x56, 0x20, 0x33, 0x32, 0x4c, 0x44, 0x38, 0x36, 0x53, 0x56, 0x45, 0x53, 0x54,
		0x41, 0x5f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x54, 0x56, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x54,
		0x56, 0x56, 0x65, 0x73, 0x74, 0x65, 0x6c, 0x56, 0x54, 0x39, 0x37, 0x50, 0x52, 0x4f, 0x56, 0x54,
		0x61, 0x62, 0x20, 0x39, 0x2e, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x50, 0x37, 0x34, 0x56, 0x54,
		0x61, 0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x49, 0x49, 0x56, 0x54, 0x41, 0x42, 0x31, 0x30,
		0x56, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x37, 0x5f, 0x45,
		0x43, 0x4f, 0x5f, 0x49, 0x49, 0x49, 0x56, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x45, 0x63, 0x6f,
		0x20, 0x33, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x37, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x5f, 0x49,
		0x49, 0x49, 0x56, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x33, 0x56,
		0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x56, 0x33, 0x5f, 0x35, 0x35, 0x38, 0x30, 0x5f, 0x44, 0x75,
		0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x56, 0x33, 0x20, 0x35, 0x35, 0x38, 0x30, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x56, 0x53, 0x50, 0x31, 0x34, 0x35, 0x4d, 0x56, 0x65, 0x6e, 0x75, 0x73,
		0x20, 0x34, 0x2e, 0x35, 0x56, 0x53, 0x50, 0x32, 0x35, 0x30, 0x47, 0x56, 0x65, 0x6e, 0x75, 0x73,
		0x20, 0x35, 0x2e, 0x30, 0x56, 0x56, 0x53, 0x50, 0x32, 0x35, 0x30, 0x53, 0x56, 0x65, 0x6e, 0x75,
		0x73, 0x20, 0x35, 0x2e, 0x30, 0x58, 0x56, 0x53, 0x50, 0x33, 0x35, 0x35, 0x47, 0x56, 0x65, 0x6e,
		0x75, 0x73, 0x20, 0x35, 0x2e, 0x35, 0x56, 0x56, 0x53, 0x50, 0x33, 0x35, 0x35, 0x53, 0x56, 0x65,
		0x6e, 0x75, 0x73, 0x20, 0x35, 0x2e, 0x35, 0x58, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x56, 0x24,
		0x31, 0x24, 0x32, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x5a, 0x24, 0x31, 0x56, 0x65, 0x6e, 0x75,
		0x73, 0x20, 0x45, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x56, 0x65,
		0x6e, 0x75, 0x73, 0x20, 0x45, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x65, 0x6e, 0x75, 0x73,
		0x20, 0x45, 0x24, 0x31, 0x56, 0x65, 0x73, 0x74, 0x65, 0x6c, 0x5f, 0x35, 0x30, 0x30, 0x30, 0x5f,
		0x44, 0x75, 0x61, 0x6c, 0x35, 0x30, 0x30, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x73,
		0x74, 0x65, 0x6c, 0x5f, 0x35, 0x30, 0x30, 0x30, 0x5f, 0x32, 0x67, 0x62, 0x35, 0x30, 0x30, 0x30,
		0x20, 0x32, 0x47, 0x42, 0x35, 0x35, 0x33, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x78,
		0x69, 0x61, 0x56, 0x65, 0x78, 0x69, 0x61, 0x20, 0x46, 0x43, 0x53, 0x20, 0x45, 0x32, 0x20, 0x43,
		0x4c, 0x4d, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x45, 0x32, 0x20, 0x43, 0x4c,
		0x4d, 0x56, 0x69, 0x42, 0x6f, 0x78, 0x56, 0x69, 0x63, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f,
		0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x5f, 0x56, 0x31, 0x35, 0x38, 0x35, 0x56,
		0x31, 0x35, 0x38, 0x35, 0x56, 0x54, 0x37, 0x35, 0x43, 0x4b, 0x72, 0x79, 0x74, 0x6f, 0x6e, 0x20,
		0x33, 0x4b, 0x72, 0x79, 0x74, 0x6f, 0x6e, 0x4b, 0x72, 0x79, 0x74, 0x6f, 0x6e, 0x20, 0x32, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x31, 0x44, 0x65,
		0x6c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x31, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x32, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x53, 0x74, 0x61,
		0x72, 0x72, 0x20, 0x31, 0x30, 0x30, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x30, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x5a, 0x34, 0x35, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x66,
		0x69, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x5a, 0x34, 0x35, 0x51, 0x20, 0x53, 0x74, 0x61, 0x72, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x5a, 0x35, 0x30, 0x20, 0x4e, 0x6f, 0x76, 0x61,
		0x56, 0x69, 0x65, 0x77, 0x53, 0x6f, 0x6e, 0x69, 0x63, 0x56, 0x35, 0x30, 0x30, 0x41, 0x38, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31,
		0x76, 0x73, 0x69, 0x37, 0x71, 0x5f, 0x31, 0x56, 0x69, 0x65, 0x77, 0x50, 0x61, 0x64, 0x20, 0x69,
		0x37, 0x51, 0x56, 0x69, 0x65, 0x77, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x56, 0x69, 0x65, 0x77,
		0x42, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x49, 0x46, 0x50, 0x24, 0x31, 0x35, 0x30, 0x2d, 0x33, 0x20,
		0x24, 0x31, 0x22, 0x20, 0x34, 0x4b, 0x56, 0x69, 0x6e, 0x61, 0x62, 0x6f, 0x78, 0x58, 0x24, 0x31,
		0x20, 0x28, 0x24, 0x32, 0x29, 0x56, 0x69, 0x6e, 0x67, 0x61, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x32,
		0x31, 0x2d, 0x38, 0x32, 0x30, 0x32, 0x31, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x32, 0x35, 0x2d, 0x33,
		0x32, 0x34, 0x30, 0x32, 0x35, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x31, 0x35, 0x2d, 0x31, 0x36, 0x32,
		0x30, 0x31, 0x35, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x34, 0x31, 0x2d, 0x31, 0x36, 0x32, 0x30, 0x34,
		0x31, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x34, 0x35, 0x2d, 0x36, 0x36, 0x34, 0x30, 0x34, 0x35, 0x56,
		0x4d, 0x50, 0x2d, 0x30, 0x31, 0x31, 0x2d, 0x38, 0x31, 0x30, 0x31, 0x31, 0x56, 0x4d, 0x50, 0x2d,
		0x30, 0x34, 0x36, 0x2d, 0x36, 0x36, 0x34, 0x30, 0x34, 0x36, 0x30, 0x32, 0x33, 0x56, 0x69, 0x6e,
		0x73, 0x6f, 0x63, 0x56, 0x69, 0x6f, 0x73, 0x56, 0x4d, 0x50, 0x30, 0x36, 0x31, 0x37, 0x56, 0x69,
		0x70, 0x72, 0x6f, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x58, 0x45, 0x64, 0x67, 0x65, 0x20, 0x32, 0x56,
		0x69, 0x72, 0x7a, 0x6f, 0x56, 0x24, 0x31, 0x63, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54,
		0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x58, 0x53, 0x31, 0x30, 0x30, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x69,
		0x66, 0x65, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x20,
		0x4c, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x31, 0x30, 0x24, 0x31, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x31, 0x30, 0x51, 0x48,
		0x50, 0x72, 0x6f, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20, 0x45, 0x6c, 0x69, 0x74,
		0x65, 0x20, 0x31, 0x30, 0x51, 0x48, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69,
		0x67, 0x65, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x56, 0x69, 0x74, 0x65, 0x6c,
		0x63, 0x6f, 0x6d, 0x56, 0x69, 0x74, 0x79, 0x61, 0x7a, 0x56, 0x69, 0x75, 0x6d, 0x65, 0x65, 0x24,
		0x31, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x45, 0x56,
		0x35, 0x20, 0x58, 0x45, 0x56, 0x37, 0x56, 0x69, 0x76, 0x61, 0x78, 0x46, 0x6c, 0x79, 0x20, 0x35,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x79, 0x20, 0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x46, 0x6c, 0x79, 0x20, 0x56, 0x35, 0x30, 0x30, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x58, 0x24,
		0x31, 0x46, 0x75, 0x6e, 0x20, 0x53, 0x35, 0x30, 0x30, 0x46, 0x75, 0x6e, 0x20, 0x53, 0x24, 0x31,
		0x46, 0x6c, 0x79, 0x20, 0x24, 0x31, 0x46, 0x6c, 0x79, 0x20, 0x56, 0x24, 0x31, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x58, 0x35, 0x30, 0x31, 0x30, 0x54, 0x50,
		0x43, 0x2d, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x56, 0x69, 0x76, 0x6f, 0x50, 0x41, 0x32, 0x31,
		0x37, 0x30, 0x50, 0x41, 0x32, 0x33, 0x37, 0x33, 0x50, 0x41, 0x32, 0x34, 0x37, 0x33, 0x50, 0x61,
		0x64, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x41, 0x32, 0x33, 0x35, 0x33, 0x69, 0x50, 0x41,
		0x32, 0x33, 0x37, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x58, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x56, 0x32, 0x32, 0x35, 0x36, 0x41, 0x58, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x56, 0x32,
		0x31, 0x37, 0x38, 0x41, 0x58, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x56, 0x32, 0x32, 0x36, 0x36, 0x41,
		0x58, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x32, 0x56, 0x32, 0x33, 0x30, 0x33, 0x41, 0x58, 0x20,
		0x46, 0x6f, 0x6c, 0x64, 0x20, 0x33, 0x56, 0x32, 0x33, 0x33, 0x37, 0x41, 0x58, 0x20, 0x46, 0x6f,
		0x6c, 0x64, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x32, 0x32, 0x39, 0x41, 0x58, 0x20,
		0x46, 0x6f, 0x6c, 0x64, 0x2b, 0x56, 0x32, 0x33, 0x31, 0x38, 0x41, 0x58, 0x31, 0x30, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x31, 0x30, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x31, 0x30,
		0x30, 0x56, 0x32, 0x33, 0x32, 0x34, 0x48, 0x41, 0x58, 0x31, 0x30, 0x30, 0x73, 0x20, 0x50, 0x72,
		0x6f, 0x56, 0x32, 0x33, 0x35, 0x39, 0x41, 0x58, 0x31, 0x30, 0x30, 0x73, 0x59, 0x32, 0x30, 0x30,
		0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x36, 0x31, 0x47, 0x41, 0x59, 0x32, 0x30, 0x30, 0x20, 0x47,
		0x54, 0x56, 0x32, 0x33, 0x35, 0x34, 0x41, 0x59, 0x32, 0x30, 0x30, 0x69, 0x59, 0x32, 0x30, 0x30,
		0x65, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x33, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x39, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x39, 0x20, 0x53, 0x45, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x39, 0x54, 0x56, 0x32,
		0x32, 0x31, 0x38, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56,
		0x32, 0x32, 0x31, 0x37, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x31, 0x30, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x31, 0x31, 0x56, 0x32, 0x33, 0x30, 0x34, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x31, 0x31,
		0x53, 0x56, 0x32, 0x32, 0x35, 0x34, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x31, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x31, 0x32, 0x56, 0x32, 0x33, 0x32, 0x39, 0x41, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x33,
		0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x35, 0x56, 0x32, 0x31, 0x38, 0x30, 0x47,
		0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x35, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x37, 0x20,
		0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x37, 0x20, 0x49, 0x6e, 0x64,
		0x69, 0x61, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x37, 0x56, 0x32, 0x31, 0x39, 0x36, 0x41, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x36, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f,
		0x20, 0x37, 0x56, 0x32, 0x32, 0x33, 0x32, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f,
		0x20, 0x37, 0x20, 0x52, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f,
		0x6e, 0x49, 0x32, 0x32, 0x31, 0x37, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x32, 0x33, 0x38, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e,
		0x65, 0x6f, 0x20, 0x37, 0x20, 0x53, 0x45, 0x56, 0x32, 0x33, 0x30, 0x32, 0x41, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x4e, 0x65, 0x6f, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x33, 0x33, 0x38, 0x41, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x39, 0x56, 0x32, 0x33, 0x33, 0x39, 0x46, 0x41,
		0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x39, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x56,
		0x32, 0x34, 0x30, 0x33, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x39, 0x53,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x56, 0x32, 0x31, 0x35, 0x37, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x4e, 0x65, 0x6f, 0x20, 0x35, 0x20, 0x53, 0x45, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f,
		0x20, 0x35, 0x53, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x37, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20,
		0x33, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x38, 0x35, 0x35, 0x56, 0x32, 0x33,
		0x30, 0x31, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x38, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20,
		0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x36,
		0x20, 0x53, 0x45, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x31, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a,
		0x31, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x31, 0x78, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x5a, 0x33, 0x5a, 0x35, 0x78, 0x20, 0x37, 0x31, 0x32, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x5a, 0x35, 0x78, 0x56, 0x32, 0x31, 0x33, 0x31, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x35,
		0x78, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x35, 0x20, 0x35, 0x47, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x5a, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x36, 0x56, 0x32, 0x31, 0x36,
		0x34, 0x4b, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x36, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x5a, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x36, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x56, 0x32, 0x32, 0x37, 0x30, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x37, 0x56,
		0x32, 0x32, 0x33, 0x30, 0x45, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x37, 0x69, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x5a, 0x37, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x37, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x56, 0x32, 0x32, 0x37, 0x32, 0x41, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x5a, 0x37, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x37, 0x78, 0x20, 0x35, 0x47, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x37, 0x73, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x31, 0x34, 0x41,
		0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x38, 0x56, 0x32, 0x33, 0x31, 0x32, 0x41, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x5a, 0x38, 0x78, 0x56, 0x32, 0x33, 0x36, 0x31, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x5a, 0x39, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x39, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x35,
		0x32, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x39, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x39, 0x78, 0x20, 0x35, 0x47, 0x49, 0x32, 0x33, 0x30, 0x36, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x55, 0x31, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x31, 0x78, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x55, 0x33, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x33, 0x78, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x55, 0x33, 0x78, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x35, 0x20, 0x50, 0x72,
		0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x38, 0x20, 0x50, 0x72,
		0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x38, 0x56, 0x33, 0x30, 0x65, 0x56, 0x34, 0x30, 0x20, 0x53,
		0x45, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x56, 0x32, 0x31, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31,
		0x65, 0x56, 0x32, 0x31, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x55, 0x32, 0x30, 0x55, 0x31, 0x30, 0x4e, 0x65, 0x78, 0x4e, 0x65, 0x78, 0x20, 0x33,
		0x4e, 0x65, 0x78, 0x20, 0x33, 0x20, 0x35, 0x47, 0x4e, 0x65, 0x78, 0x20, 0x33, 0x53, 0x4e, 0x65,
		0x78, 0x20, 0x53, 0x4e, 0x65, 0x78, 0x20, 0x33, 0x53, 0x20, 0x35, 0x47, 0x4e, 0x65, 0x78, 0x20,
		0x41, 0x4e, 0x65, 0x78, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
		0x79, 0x56, 0x32, 0x33, 0x31, 0x32, 0x42, 0x41, 0x59, 0x31, 0x30, 0x30, 0x69, 0x20, 0x35, 0x47,
		0x54, 0x31, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x35, 0x31, 0x54, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x35, 0x33, 0x54, 0x31, 0x20, 0x34, 0x47, 0x56, 0x32, 0x31,
		0x34, 0x33, 0x54, 0x31, 0x78, 0x56, 0x32, 0x31, 0x38, 0x38, 0x41, 0x54, 0x32, 0x78, 0x54, 0x32,
		0x78, 0x20, 0x35, 0x47, 0x56, 0x32, 0x32, 0x32, 0x32, 0x54, 0x32, 0x20, 0x35, 0x47, 0x56, 0x32,
		0x33, 0x32, 0x31, 0x54, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x56, 0x32, 0x32, 0x34,
		0x30, 0x54, 0x33, 0x20, 0x35, 0x47, 0x54, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47,
		0x54, 0x33, 0x78, 0x20, 0x35, 0x47, 0x56, 0x31, 0x39, 0x36, 0x32, 0x42, 0x41, 0x47, 0x31, 0x20,
		0x35, 0x47, 0x53, 0x31, 0x35, 0x56, 0x32, 0x33, 0x34, 0x34, 0x41, 0x53, 0x31, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x56, 0x32, 0x33, 0x33, 0x34, 0x41, 0x53, 0x31, 0x38, 0x65, 0x56, 0x32, 0x33, 0x32,
		0x33, 0x41, 0x53, 0x31, 0x38, 0x56, 0x32, 0x33, 0x36, 0x34, 0x41, 0x53, 0x31, 0x39, 0x56, 0x32,
		0x31, 0x33, 0x30, 0x41, 0x53, 0x31, 0x30, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x65, 0x56,
		0x32, 0x31, 0x32, 0x36, 0x56, 0x32, 0x33, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x33, 0x30,
		0x56, 0x32, 0x33, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x33, 0x32, 0x41, 0x58, 0x37, 0x30, 0x74,
		0x56, 0x32, 0x31, 0x33, 0x32, 0x56, 0x32, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x56,
		0x32, 0x32, 0x30, 0x32, 0x56, 0x32, 0x35, 0x20, 0x53, 0x45, 0x56, 0x32, 0x35, 0x65, 0x56, 0x32,
		0x32, 0x33, 0x30, 0x41, 0x59, 0x33, 0x35, 0x6d, 0x56, 0x32, 0x32, 0x33, 0x30, 0x56, 0x32, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x32, 0x33, 0x37, 0x56, 0x32, 0x37, 0x65, 0x56, 0x32, 0x37,
		0x56, 0x32, 0x32, 0x35, 0x30, 0x56, 0x32, 0x39, 0x56, 0x32, 0x32, 0x35, 0x31, 0x56, 0x32, 0x39,
		0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x33, 0x30, 0x33, 0x56, 0x32, 0x39, 0x65, 0x56, 0x32, 0x33,
		0x31, 0x37, 0x41, 0x59, 0x31, 0x32, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x56, 0x32, 0x33,
		0x31, 0x37, 0x56, 0x32, 0x39, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x31, 0x35, 0x59, 0x32,
		0x38, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x35, 0x31, 0x59, 0x32, 0x38, 0x73, 0x20, 0x35, 0x47,
		0x59, 0x32, 0x38, 0x56, 0x32, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32,
		0x33, 0x34, 0x32, 0x56, 0x33, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x32, 0x33, 0x32, 0x37,
		0x41, 0x59, 0x33, 0x36, 0x74, 0x59, 0x33, 0x38, 0x20, 0x35, 0x47, 0x56, 0x33, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x34, 0x31, 0x56, 0x34, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x56, 0x32, 0x33, 0x31, 0x39, 0x56, 0x32, 0x32, 0x30, 0x37, 0x41, 0x53, 0x31,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x36, 0x20, 0x35, 0x47, 0x53, 0x31, 0x32, 0x20, 0x35, 0x47,
		0x56, 0x32, 0x31, 0x39, 0x30, 0x41, 0x53, 0x31, 0x35, 0x65, 0x56, 0x32, 0x32, 0x34, 0x34, 0x41,
		0x53, 0x31, 0x36, 0x56, 0x32, 0x32, 0x34, 0x35, 0x41, 0x53, 0x31, 0x36, 0x20, 0x50, 0x72, 0x6f,
		0x56, 0x32, 0x32, 0x33, 0x39, 0x41, 0x53, 0x31, 0x36, 0x65, 0x56, 0x32, 0x32, 0x38, 0x33, 0x41,
		0x56, 0x32, 0x32, 0x38, 0x32, 0x41, 0x53, 0x31, 0x37, 0x74, 0x56, 0x32, 0x32, 0x38, 0x35, 0x41,
		0x53, 0x31, 0x37, 0x65, 0x56, 0x32, 0x32, 0x38, 0x34, 0x41, 0x53, 0x31, 0x37, 0x20, 0x50, 0x72,
		0x6f, 0x53, 0x37, 0x65, 0x53, 0x37, 0x74, 0x53, 0x37, 0x74, 0x20, 0x35, 0x47, 0x53, 0x39, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x39, 0x65, 0x55, 0x33, 0x58, 0x56, 0x31, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x56, 0x31, 0x31, 0x69, 0x56, 0x31, 0x35, 0x56, 0x31, 0x35, 0x20, 0x50, 0x72,
		0x6f, 0x56, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x31, 0x37, 0x20, 0x4e, 0x65, 0x6f, 0x56,
		0x31, 0x37, 0x56, 0x31, 0x39, 0x56, 0x35, 0x56, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x35, 0x73, 0x56, 0x37, 0x37, 0x65, 0x56, 0x37, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x56, 0x39, 0x56, 0x39, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x56, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x56, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x39, 0x73, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x58, 0x39, 0x73, 0x58, 0x39, 0x30, 0x58, 0x39, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32,
		0x32, 0x34, 0x31, 0x48, 0x41, 0x58, 0x39, 0x30, 0x73, 0x58, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58,
		0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x55, 0x44, 0x58, 0x32, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x58, 0x32, 0x31, 0x69, 0x58, 0x32, 0x31, 0x20, 0x55, 0x44, 0x58, 0x32, 0x31, 0x58,
		0x32, 0x31, 0x53, 0x58, 0x32, 0x33, 0x58, 0x32, 0x37, 0x58, 0x32, 0x37, 0x20, 0x50, 0x72, 0x6f,
		0x58, 0x33, 0x30, 0x58, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x30, 0x58, 0x35, 0x30,
		0x65, 0x58, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x36, 0x30, 0x58, 0x36, 0x30, 0x74, 0x58, 0x36, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58,
		0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x58, 0x37,
		0x30, 0x58, 0x37, 0x30, 0x20, 0x35, 0x47, 0x58, 0x38, 0x30, 0x56, 0x32, 0x32, 0x34, 0x32, 0x41,
		0x56, 0x32, 0x32, 0x32, 0x37, 0x41, 0x58, 0x39, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x58, 0x38,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x38, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47,
		0x58, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x59, 0x31, 0x73, 0x59, 0x31, 0x37, 0x59, 0x31,
		0x37, 0x73, 0x59, 0x31, 0x38, 0x59, 0x31, 0x38, 0x73, 0x56, 0x32, 0x33, 0x35, 0x30, 0x59, 0x31,
		0x38, 0x65, 0x59, 0x31, 0x36, 0x56, 0x32, 0x31, 0x34, 0x30, 0x41, 0x59, 0x31, 0x30, 0x56, 0x32,
		0x31, 0x36, 0x38, 0x41, 0x59, 0x31, 0x30, 0x20, 0x54, 0x31, 0x56, 0x32, 0x33, 0x31, 0x33, 0x41,
		0x59, 0x31, 0x30, 0x30, 0x20, 0x35, 0x47, 0x59, 0x31, 0x30, 0x30, 0x56, 0x32, 0x31, 0x36, 0x38,
		0x56, 0x32, 0x31, 0x31, 0x38, 0x59, 0x30, 0x31, 0x59, 0x30, 0x31, 0x41, 0x59, 0x30, 0x32, 0x73,
		0x59, 0x30, 0x32, 0x74, 0x59, 0x30, 0x32, 0x59, 0x30, 0x32, 0x41, 0x59, 0x30, 0x33, 0x59, 0x31,
		0x32, 0x56, 0x32, 0x31, 0x36, 0x33, 0x41, 0x59, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x31,
		0x32, 0x61, 0x59, 0x31, 0x32, 0x69, 0x59, 0x31, 0x35, 0x56, 0x32, 0x31, 0x33, 0x34, 0x59, 0x31,
		0x35, 0x61, 0x59, 0x31, 0x35, 0x73, 0x59, 0x31, 0x35, 0x63, 0x59, 0x31, 0x39, 0x59, 0x32, 0x30,
		0x59, 0x32, 0x32, 0x56, 0x32, 0x32, 0x34, 0x39, 0x59, 0x32, 0x37, 0x56, 0x32, 0x33, 0x32, 0x32,
		0x59, 0x32, 0x37, 0x73, 0x56, 0x32, 0x33, 0x30, 0x32, 0x59, 0x32, 0x37, 0x20, 0x35, 0x47, 0x59,
		0x32, 0x32, 0x73, 0x59, 0x32, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x32, 0x30,
		0x41, 0x59, 0x32, 0x30, 0x47, 0x59, 0x32, 0x30, 0x54, 0x59, 0x32, 0x30, 0x47, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x59, 0x31, 0x31, 0x73, 0x59, 0x32, 0x30, 0x73, 0x56, 0x32, 0x32, 0x37,
		0x39, 0x41, 0x59, 0x33, 0x35, 0x2b, 0x56, 0x32, 0x32, 0x37, 0x38, 0x41, 0x59, 0x37, 0x37, 0x74,
		0x56, 0x32, 0x32, 0x37, 0x31, 0x41, 0x59, 0x37, 0x38, 0x2b, 0x59, 0x37, 0x32, 0x20, 0x35, 0x47,
		0x56, 0x32, 0x31, 0x30, 0x32, 0x41, 0x59, 0x37, 0x32, 0x54, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31,
		0x31, 0x37, 0x59, 0x37, 0x35, 0x56, 0x32, 0x32, 0x31, 0x39, 0x41, 0x59, 0x37, 0x37, 0x56, 0x32,
		0x31, 0x36, 0x39, 0x59, 0x37, 0x37, 0x20, 0x35, 0x47, 0x59, 0x32, 0x30, 0x69, 0x59, 0x32, 0x31,
		0x73, 0x59, 0x32, 0x31, 0x47, 0x59, 0x32, 0x31, 0x59, 0x32, 0x31, 0x61, 0x59, 0x32, 0x31, 0x65,
		0x59, 0x32, 0x31, 0x74, 0x59, 0x33, 0x56, 0x32, 0x30, 0x34, 0x34, 0x59, 0x33, 0x73, 0x59, 0x33,
		0x20, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x59, 0x33, 0x30, 0x59, 0x33, 0x30, 0x20,
		0x35, 0x47, 0x59, 0x33, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x33, 0x30, 0x67,
		0x59, 0x33, 0x31, 0x59, 0x33, 0x31, 0x73, 0x56, 0x32, 0x31, 0x35, 0x38, 0x41, 0x56, 0x32, 0x31,
		0x35, 0x38, 0x56, 0x32, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x31, 0x38, 0x30, 0x41, 0x59,
		0x33, 0x32, 0x74, 0x59, 0x33, 0x33, 0x59, 0x33, 0x33, 0x73, 0x59, 0x33, 0x33, 0x74, 0x59, 0x33,
		0x33, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x59, 0x33, 0x35, 0x59, 0x33, 0x36, 0x59,
		0x33, 0x36, 0x20, 0x35, 0x47, 0x59, 0x35, 0x73, 0x59, 0x35, 0x30, 0x74, 0x59, 0x35, 0x31, 0x59,
		0x35, 0x31, 0x20, 0x50, 0x4b, 0x59, 0x35, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x59,
		0x35, 0x31, 0x73, 0x59, 0x35, 0x31, 0x41, 0x59, 0x35, 0x32, 0x73, 0x59, 0x35, 0x32, 0x59, 0x35,
		0x33, 0x69, 0x59, 0x35, 0x33, 0x59, 0x35, 0x33, 0x73, 0x56, 0x32, 0x30, 0x36, 0x39, 0x41, 0x59,
		0x35, 0x33, 0x73, 0x20, 0x54, 0x31, 0x59, 0x35, 0x35, 0x6c, 0x59, 0x35, 0x35, 0x73, 0x59, 0x35,
		0x35, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x56, 0x32, 0x31, 0x36, 0x34, 0x50, 0x41,
		0x59, 0x37, 0x33, 0x74, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x32, 0x37, 0x59, 0x35, 0x35, 0x20,
		0x35, 0x47, 0x56, 0x32, 0x31, 0x35, 0x34, 0x59, 0x35, 0x35, 0x56, 0x32, 0x30, 0x34, 0x35, 0x41,
		0x59, 0x35, 0x34, 0x73, 0x59, 0x35, 0x36, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x35, 0x35, 0x59,
		0x35, 0x38, 0x20, 0x35, 0x47, 0x59, 0x36, 0x35, 0x59, 0x36, 0x39, 0x59, 0x37, 0x30, 0x73, 0x59,
		0x36, 0x30, 0x73, 0x59, 0x37, 0x31, 0x59, 0x37, 0x31, 0x69, 0x59, 0x37, 0x33, 0x59, 0x37, 0x33,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x37, 0x33, 0x73, 0x59, 0x37, 0x36, 0x20, 0x35,
		0x47, 0x59, 0x37, 0x36, 0x73, 0x59, 0x37, 0x73, 0x59, 0x38, 0x31, 0x59, 0x38, 0x31, 0x69, 0x59,
		0x38, 0x31, 0x73, 0x59, 0x38, 0x33, 0x59, 0x38, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x38, 0x39,
		0x59, 0x39, 0x30, 0x59, 0x39, 0x31, 0x59, 0x39, 0x31, 0x69, 0x59, 0x39, 0x73, 0x59, 0x31, 0x32,
		0x73, 0x59, 0x31, 0x32, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x39, 0x33, 0x59,
		0x39, 0x33, 0x73, 0x59, 0x39, 0x35, 0x59, 0x39, 0x37, 0x5a, 0x31, 0x5a, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x5a, 0x31, 0x69, 0x5a, 0x31, 0x78, 0x5a, 0x33, 0x78, 0x5a, 0x35, 0x78, 0x5a, 0x35, 0x78,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x59, 0x37, 0x35, 0x20, 0x35, 0x47, 0x59, 0x37, 0x35,
		0x73, 0x58, 0x20, 0x53, 0x68, 0x6f, 0x74, 0x58, 0x36, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58,
		0x36, 0x53, 0x59, 0x36, 0x36, 0x69, 0x58, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x53,
		0x58, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x56, 0x69, 0x7a, 0x69, 0x6f, 0x56, 0x41,
		0x50, 0x34, 0x33, 0x30, 0x49, 0x53, 0x56, 0x2d, 0x42, 0x31, 0x31, 0x44, 0x35, 0x30, 0x75, 0x2d,
		0x44, 0x31, 0x56, 0x69, 0x7a, 0x6d, 0x6f, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x20, 0x37, 0x22,
		0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x56, 0x6f, 0x64, 0x61,
		0x63, 0x6f, 0x6d, 0x4b, 0x69, 0x63, 0x6b, 0x61, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x34, 0x47, 0x56, 0x6f, 0x64, 0x61, 0x66, 0x6f, 0x6e, 0x65, 0x56, 0x46, 0x44, 0x20, 0x31, 0x30,
		0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x56, 0x6f, 0x64, 0x61, 0x66,
		0x6f, 0x6e, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47,
		0x56, 0x46, 0x44, 0x37, 0x32, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4e, 0x39, 0x56, 0x46,
		0x36, 0x38, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4b, 0x69, 0x63, 0x6b, 0x61, 0x56, 0x46,
		0x36, 0x39, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x46, 0x69, 0x72, 0x73, 0x74, 0x20, 0x36,
		0x56, 0x46, 0x44, 0x20, 0x32, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x46, 0x69, 0x72,
		0x73, 0x74, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20, 0x33, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20, 0x33, 0x30, 0x31, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x45, 0x38, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x45, 0x39, 0x56, 0x46, 0x44, 0x20,
		0x38, 0x32, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x58, 0x39, 0x56, 0x46, 0x44, 0x20, 0x36,
		0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x56,
		0x46, 0x44, 0x33, 0x32, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x43, 0x39, 0x56, 0x46, 0x44,
		0x20, 0x38, 0x32, 0x30, 0x56, 0x46, 0x44, 0x20, 0x36, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x4e, 0x38, 0x56, 0x46, 0x44, 0x20, 0x36, 0x33, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x4e, 0x31, 0x30, 0x56, 0x46, 0x44, 0x20, 0x36, 0x32, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x4e, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x75, 0x6c, 0x74,
		0x72, 0x61, 0x20, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x36, 0x56, 0x46, 0x44, 0x20, 0x37, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20, 0x37, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x56, 0x38, 0x56, 0x46, 0x44, 0x20, 0x37, 0x32, 0x30, 0x56, 0x46, 0x44, 0x20, 0x37,
		0x33, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x56, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x56, 0x32, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x56, 0x32, 0x32, 0x56, 0x46, 0x44, 0x20,
		0x39, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75,
		0x6d, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x20, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x20, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x56, 0x6f, 0x64, 0x61, 0x66, 0x6f, 0x6e, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x68,
		0x61, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x43, 0x68, 0x61, 0x74, 0x56, 0x46, 0x2d, 0x36,
		0x39, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x36, 0x56,
		0x46, 0x2d, 0x37, 0x39, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64,
		0x20, 0x36, 0x56, 0x46, 0x2d, 0x38, 0x39, 0x35, 0x4e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x20, 0x36, 0x56, 0x46, 0x2d, 0x31, 0x33, 0x39, 0x37, 0x54, 0x61, 0x62,
		0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x36, 0x56, 0x46, 0x2d, 0x31, 0x34, 0x39, 0x37, 0x54,
		0x61, 0x62, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x36, 0x56, 0x46, 0x44, 0x20, 0x31, 0x31,
		0x30, 0x30, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20,
		0x31, 0x33, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x4e, 0x38,
		0x56, 0x46, 0x44, 0x20, 0x31, 0x34, 0x30, 0x30, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x47, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x20, 0x37,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x49, 0x20, 0x37, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x49, 0x20, 0x31, 0x30, 0x47, 0x69,
		0x67, 0x61, 0x54, 0x56, 0x47, 0x69, 0x67, 0x61, 0x20, 0x54, 0x56, 0x56, 0x46, 0x44, 0x20, 0x24,
		0x31, 0x56, 0x6f, 0x6c, 0x6c, 0x61, 0x56, 0x6f, 0x6c, 0x6c, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x56, 0x6f, 0x6e, 0x69, 0x6e, 0x6f, 0x5a, 0x75, 0x6e, 0x20, 0x24, 0x31, 0x58, 0x79, 0x6c,
		0x6f, 0x20, 0x24, 0x31, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x20, 0x41, 0x37, 0x56, 0x6f, 0x6c,
		0x74, 0x20, 0x53, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x58, 0x47, 0x79, 0x67, 0x61, 0x20, 0x51, 0x53,
		0x47, 0x79, 0x67, 0x61, 0x20, 0x58, 0x53, 0x47, 0x79, 0x67, 0x61, 0x20, 0x24, 0x31, 0x4a, 0x61,
		0x78, 0x20, 0x51, 0x53, 0x4a, 0x61, 0x78, 0x20, 0x53, 0x20, 0x41, 0x37, 0x4a, 0x61, 0x78, 0x20,
		0x24, 0x31, 0x4a, 0x61, 0x78, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x4d, 0x61, 0x72, 0x74, 0x5f,
		0x50, 0x72, 0x6f, 0x49, 0x4d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x72,
		0x69, 0x20, 0x4d, 0x24, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x50, 0x6c, 0x75, 0x72,
		0x69, 0x20, 0x24, 0x31, 0x37, 0x50, 0x6c, 0x75, 0x72, 0x69, 0x20, 0x24, 0x31, 0x38, 0x44, 0x72,
		0x75, 0x69, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x20, 0x4d, 0x31, 0x30,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x20, 0x24, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x20, 0x24, 0x31, 0x4e, 0x61, 0x76,
		0x6f, 0x20, 0x24, 0x31, 0x4f, 0x72, 0x69, 0x6e, 0x5f, 0x51, 0x53, 0x4f, 0x72, 0x69, 0x6e, 0x20,
		0x51, 0x53, 0x53, 0x69, 0x72, 0x69, 0x75, 0x73, 0x5f, 0x51, 0x53, 0x53, 0x69, 0x72, 0x69, 0x75,
		0x73, 0x20, 0x51, 0x53, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x20, 0x51, 0x53, 0x58, 0x61, 0x76,
		0x79, 0x20, 0x24, 0x31, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x50, 0x41, 0x44, 0x20, 0x24, 0x31, 0x56,
		0x6f, 0x6e, 0x74, 0x61, 0x72, 0x44, 0x51, 0x30, 0x38, 0x48, 0x4b, 0x31, 0x20, 0x4d, 0x61, 0x78,
		0x4b, 0x4b, 0x20, 0x4d, 0x61, 0x78, 0x48, 0x4b, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x48, 0x4b, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x48, 0x4b, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x48, 0x4b, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x6f, 0x72, 0x61, 0x67, 0x6f,
		0x43, 0x45, 0x4c, 0x4c, 0x2d, 0x35, 0x30, 0x30, 0x56, 0x6f, 0x72, 0x63, 0x6f, 0x6d, 0x53, 0x58,
		0x50, 0x52, 0x4f, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x53, 0x58, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x53, 0x58, 0x50, 0x72, 0x6f, 0x53, 0x58,
		0x20, 0x50, 0x72, 0x6f, 0x53, 0x37, 0x2d, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x53, 0x37,
		0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x51, 0x75, 0x61, 0x72, 0x74, 0x7a, 0x4c, 0x49,
		0x54, 0x45, 0x51, 0x75, 0x61, 0x72, 0x74, 0x7a, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x6f, 0x72,
		0x6b, 0x65, 0x56, 0x6f, 0x72, 0x6d, 0x6f, 0x72, 0x5a, 0x47, 0x36, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x48, 0x44, 0x36, 0x35, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x48, 0x44, 0x36, 0x35, 0x20, 0x53,
		0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x44, 0x36, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x31,
		0x30, 0x4d, 0x5f, 0x50, 0x72, 0x6f, 0x54, 0x31, 0x30, 0x4d, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x54,
		0x41, 0x42, 0x31, 0x30, 0x5a, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x42, 0x54, 0x41, 0x42,
		0x31, 0x30, 0x42, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x56, 0x6f, 0x74, 0x6f, 0x56, 0x6f,
		0x78, 0x74, 0x65, 0x6c, 0x56, 0x6f, 0x79, 0x6f, 0x69, 0x38, 0x20, 0x4d, 0x61, 0x78, 0x56, 0x73,
		0x6d, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x79, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4a,
		0x6f, 0x79, 0x20, 0x24, 0x31, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x42, 0x65, 0x65, 0x20, 0x33, 0x42, 0x65, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53,
		0x74, 0x61, 0x72, 0x20, 0x24, 0x31, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x24, 0x31, 0x48,
		0x6f, 0x62, 0x73, 0x6f, 0x6e, 0x41, 0x72, 0x69, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x72, 0x69,
		0x73, 0x56, 0x73, 0x75, 0x6e, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x72,
		0x73, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4d, 0x45, 0x52, 0x43, 0x55, 0x52, 0x59, 0x20, 0x54,
		0x6f, 0x75, 0x67, 0x68, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x4d, 0x41, 0x52, 0x53, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x4d, 0x61, 0x72, 0x73, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x4d, 0x41, 0x52, 0x53, 0x20, 0x4e, 0x4f, 0x43, 0x41, 0x4d, 0x4d, 0x61, 0x72,
		0x73, 0x20, 0x4e, 0x6f, 0x63, 0x61, 0x6d, 0x41, 0x71, 0x75, 0x61, 0x20, 0x54, 0x6f, 0x75, 0x67,
		0x68, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x56, 0x75,
		0x65, 0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x20, 0x53, 0x31, 0x33,
		0x54, 0x65, 0x6d, 0x70, 0x6f, 0x20, 0x53, 0x31, 0x31, 0x56, 0xc3, 0xb6, 0x6c, 0x66, 0x65, 0x6e,
		0x4e, 0x65, 0x78, 0x6f, 0x20, 0x54, 0x41, 0x42, 0x37, 0x57, 0x26, 0x4f, 0x57, 0x4f, 0x24, 0x31,
		0x58, 0x39, 0x20, 0x43, 0x41, 0x4c, 0x4c, 0x32, 0x58, 0x39, 0x20, 0x43, 0x61, 0x6c, 0x6c, 0x20,
		0x32, 0x57, 0x41, 0x46, 0x57, 0x41, 0x4e, 0x53, 0x41, 0x57, 0x45, 0x57, 0x49, 0x57, 0x41, 0x44,
		0x72, 0x65, 0x61, 0x6d, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x54, 0x56, 0x57, 0x4f,
		0x5a, 0x49, 0x46, 0x41, 0x4e, 0x57, 0x53, 0x57, 0x61, 0x69, 0x6e, 0x79, 0x6f, 0x6b, 0x57, 0x61,
		0x6c, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x74, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20,
		0x57, 0x61, 0x6c, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x53,
		0x36, 0x20, 0x69, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20,
		0x53, 0x36, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x72, 0x69, 0x6d, 0x6f,
		0x20, 0x53, 0x38, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x53, 0x38,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x48, 0x38, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72,
		0x69, 0x6d, 0x6f, 0x20, 0x48, 0x38, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x52, 0x58, 0x37, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x20, 0x59, 0x24, 0x31, 0x4f, 0x72, 0x62,
		0x69, 0x74, 0x20, 0x4d, 0x24, 0x31, 0x58, 0x41, 0x4e, 0x4f, 0x4e, 0x20, 0x58, 0x32, 0x30, 0x58,
		0x61, 0x6e, 0x6f, 0x6e, 0x20, 0x58, 0x32, 0x30, 0x4e, 0x45, 0x58, 0x47, 0x20, 0x4e, 0x37, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x65, 0x78, 0x67, 0x20, 0x4e, 0x37, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4e, 0x65, 0x78, 0x67, 0x20, 0x4e, 0x24, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x61, 0x6c, 0x74, 0x74, 0x65, 0x72, 0x4e, 0x65,
		0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x57, 0x61, 0x6e, 0x6d, 0x75, 0x6b, 0x61, 0x6e, 0x67,
		0x57, 0x65, 0x43, 0x68, 0x69, 0x70, 0x57, 0x65, 0x62, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x50, 0x72,
		0x6f, 0x20, 0x38, 0x34, 0x37, 0x35, 0x57, 0x65, 0x63, 0x6f, 0x6f, 0x6c, 0x57, 0x65, 0x65, 0x6c,
		0x69, 0x6b, 0x65, 0x69, 0x74, 0x57, 0x65, 0x69, 0x69, 0x6d, 0x69, 0x32, 0x30, 0x32, 0x30, 0x30,
		0x38, 0x30, 0x38, 0x41, 0x31, 0x58, 0x31, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x65, 0x69, 0x6d,
		0x65, 0x69, 0x77, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x33, 0x57, 0x65, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x33, 0x57, 0x45, 0x49, 0x4d, 0x45, 0x49, 0x5f, 0x4e, 0x45, 0x4f, 0x4e, 0x32, 0x4e, 0x65,
		0x6f, 0x6e, 0x20, 0x32, 0x57, 0x65, 0x6c, 0x6c, 0x63, 0x6f, 0x4d, 0x57, 0x65, 0x73, 0x74, 0x65,
		0x72, 0x6e, 0x20, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
		0x65, 0x72, 0x32, 0x30, 0x31, 0x30, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x30, 0x29, 0x57, 0x65, 0x73, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x65,
		0x78, 0x6c, 0x65, 0x72, 0x5a, 0x45, 0x4e, 0x20, 0x34, 0x2e, 0x35, 0x5a, 0x45, 0x4e, 0x20, 0x34,
		0x2e, 0x37, 0x5a, 0x45, 0x4e, 0x20, 0x35, 0x5a, 0x45, 0x4e, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x54, 0x41, 0x42, 0x20, 0x31, 0x30, 0x51, 0x54, 0x41, 0x42, 0x20, 0x31, 0x30, 0x69, 0x51,
		0x20, 0x33, 0x47, 0x57, 0x68, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41,
		0x4d, 0x31, 0x30, 0x31, 0x30, 0x56, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x33, 0x57, 0x68, 0x6f, 0x6f, 0x70, 0x57, 0x69, 0x65, 0x70, 0x70, 0x6f, 0x57, 0x69, 0x67,
		0x6f, 0x72, 0x57, 0x69, 0x6b, 0x6f, 0x54, 0x33, 0x56, 0x6f, 0x69, 0x78, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x55, 0x31, 0x30, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x55, 0x32, 0x30, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x55, 0x33, 0x30, 0x43, 0x69, 0x6e, 0x6b, 0x20, 0x50, 0x65, 0x61, 0x78,
		0x20, 0x32, 0x43, 0x69, 0x6e, 0x6b, 0x24, 0x31, 0x43, 0x69, 0x6e, 0x6b, 0x20, 0x24, 0x31, 0x48,
		0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x20, 0x50, 0x75, 0x72, 0x65, 0x48, 0x69, 0x67, 0x68, 0x77,
		0x61, 0x79, 0x20, 0x53, 0x74, 0x61, 0x72, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x24, 0x31,
		0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x20, 0x24, 0x31, 0x49, 0x67, 0x67, 0x79, 0x46, 0x65,
		0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x69, 0x72, 0x77, 0x61, 0x79, 0x52, 0x69, 0x64, 0x67, 0x65,
		0x20, 0x46, 0x61, 0x62, 0x20, 0x34, 0x47, 0x52, 0x69, 0x64, 0x67, 0x65, 0x20, 0x34, 0x47, 0x52,
		0x69, 0x64, 0x67, 0x65, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x20, 0x4c, 0x49, 0x54, 0x45,
		0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x61, 0x69, 0x6e,
		0x62, 0x6f, 0x77, 0x20, 0x24, 0x31, 0x44, 0x61, 0x72, 0x6b, 0x73, 0x69, 0x64, 0x65, 0x44, 0x61,
		0x72, 0x6b, 0x6d, 0x6f, 0x6f, 0x6e, 0x44, 0x61, 0x72, 0x6b, 0x66, 0x75, 0x6c, 0x6c, 0x44, 0x61,
		0x72, 0x6b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x53, 0x75, 0x62, 0x6c, 0x69, 0x6d, 0x4f, 0x7a, 0x7a,
		0x79, 0x42, 0x61, 0x72, 0x72, 0x79, 0x42, 0x69, 0x72, 0x64, 0x79, 0x42, 0x6c, 0x6f, 0x6f, 0x6d,
		0x20, 0x32, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x4a, 0x69, 0x6d, 0x6d, 0x79, 0x4a, 0x45, 0x52, 0x52,
		0x59, 0x20, 0x4d, 0x41, 0x58, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x4d, 0x61, 0x78, 0x57, 0x5f,
		0x4b, 0x33, 0x30, 0x30, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x33, 0x57, 0x2d, 0x4b, 0x34, 0x32,
		0x30, 0x2d, 0x54, 0x56, 0x4d, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x34, 0x4a, 0x65, 0x72, 0x72,
		0x79, 0x20, 0x32, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x47, 0x65, 0x74, 0x61, 0x77, 0x61, 0x79, 0x4b,
		0x65, 0x6e, 0x6e, 0x79, 0x47, 0x6f, 0x61, 0x46, 0x72, 0x65, 0x64, 0x64, 0x79, 0x4b, 0x69, 0x74,
		0x65, 0x57, 0x5f, 0x4b, 0x34, 0x30, 0x30, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x35, 0x4c, 0x69,
		0x66, 0x65, 0x20, 0x33, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x4c,
		0x65, 0x6e, 0x6e, 0x79, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x65, 0x6e, 0x6e, 0x79,
		0x20, 0x24, 0x31, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x32, 0x53,
		0x6c, 0x69, 0x64, 0x65, 0x53, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x20, 0x32, 0x53, 0x75, 0x6e, 0x73,
		0x65, 0x74, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x75,
		0x6e, 0x6e, 0x79, 0x20, 0x33, 0x57, 0x2d, 0x4b, 0x32, 0x30, 0x30, 0x53, 0x75, 0x6e, 0x6e, 0x79,
		0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x32, 0x57, 0x2d, 0x4b, 0x33, 0x36, 0x30,
		0x2d, 0x54, 0x56, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57,
		0x2d, 0x4b, 0x31, 0x33, 0x30, 0x2d, 0x54, 0x4d, 0x56, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x34,
		0x57, 0x2d, 0x4b, 0x33, 0x38, 0x30, 0x2d, 0x54, 0x56, 0x4d, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20,
		0x35, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x6d,
		0x6d, 0x79, 0x20, 0x33, 0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x20, 0x32, 0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x57, 0x61, 0x78, 0x48,
		0x61, 0x72, 0x72, 0x79, 0x57, 0x2d, 0x56, 0x36, 0x30, 0x30, 0x48, 0x61, 0x72, 0x72, 0x79, 0x20,
		0x32, 0x57, 0x49, 0x4d, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x49, 0x4d, 0x50, 0x75, 0x6c, 0x70,
		0x20, 0x46, 0x61, 0x62, 0x20, 0x34, 0x47, 0x50, 0x75, 0x6c, 0x70, 0x20, 0x46, 0x61, 0x62, 0x50,
		0x75, 0x6c, 0x70, 0x20, 0x34, 0x47, 0x50, 0x75, 0x6c, 0x70, 0x52, 0x6f, 0x62, 0x62, 0x79, 0x24,
		0x31, 0x55, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x55, 0x20, 0x50,
		0x75, 0x6c, 0x73, 0x65, 0x55, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x55,
		0x20, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x55, 0x20, 0x46, 0x65, 0x65,
		0x6c, 0x56, 0x33, 0x39, 0x39, 0x31, 0x41, 0x4e, 0x55, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x46,
		0x61, 0x62, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x20, 0x47, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x20,
		0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x20, 0x58, 0x4c, 0x56, 0x69, 0x65,
		0x77, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x57, 0x43, 0x33, 0x30, 0x30, 0x56, 0x69, 0x65, 0x77,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x76, 0x31, 0x32, 0x66, 0x6e, 0x6c, 0x69, 0x74, 0x65, 0x56, 0x69,
		0x65, 0x77, 0x57, 0x5f, 0x43, 0x38, 0x30, 0x30, 0x57, 0x5f, 0x43, 0x38, 0x36, 0x30, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x5f, 0x50, 0x32, 0x30, 0x30, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x47, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x57, 0x2d, 0x56, 0x38, 0x35, 0x31, 0x56, 0x69, 0x65, 0x77, 0x20, 0x35, 0x57, 0x2d, 0x56, 0x38,
		0x35, 0x30, 0x2d, 0x45, 0x45, 0x41, 0x56, 0x69, 0x65, 0x77, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x57, 0x2d, 0x4b, 0x34, 0x32, 0x30, 0x2d, 0x45, 0x45, 0x41, 0x57, 0x2d, 0x4b, 0x32, 0x31,
		0x31, 0x57, 0x2d, 0x4b, 0x35, 0x32, 0x31, 0x59, 0x36, 0x30, 0x59, 0x36, 0x31, 0x59, 0x36, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x2d, 0x4b, 0x36, 0x31, 0x30, 0x59, 0x36, 0x32, 0x59, 0x38,
		0x30, 0x57, 0x2d, 0x56, 0x36, 0x38, 0x30, 0x57, 0x2d, 0x4b, 0x36, 0x33, 0x30, 0x59, 0x38, 0x32,
		0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x20, 0x34,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x2d, 0x56, 0x37, 0x34, 0x35, 0x2d, 0x54, 0x56, 0x4d, 0x52,
		0x69, 0x64, 0x65, 0x52, 0x69, 0x64, 0x65, 0x20, 0x32, 0x52, 0x69, 0x64, 0x65, 0x20, 0x33, 0x4b,
		0x2d, 0x4b, 0x6f, 0x6f, 0x6c, 0x57, 0x69, 0x6c, 0x65, 0x79, 0x66, 0x6f, 0x78, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x2b, 0x57, 0x69, 0x6c, 0x65, 0x79, 0x66, 0x6f, 0x78, 0x20, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x58, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x58, 0x53, 0x77, 0x69, 0x66, 0x74,
		0x20, 0x32, 0x20, 0x24, 0x31, 0x53, 0x77, 0x69, 0x66, 0x74, 0x20, 0x32, 0x63, 0x72, 0x61, 0x63,
		0x6b, 0x6c, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x47,
		0x52, 0x41, 0x43, 0x45, 0x20, 0x56, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x47, 0x72, 0x61, 0x63, 0x65,
		0x20, 0x56, 0x57, 0x69, 0x6e, 0x6b, 0x53, 0x57, 0x49, 0x54, 0x52, 0x4f, 0x4e, 0x2d, 0x69, 0x31,
		0x32, 0x41, 0x53, 0x77, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x20, 0x69, 0x31, 0x32, 0x41, 0x57, 0x69,
		0x6e, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x48, 0x34, 0x50, 0x6f, 0x6c, 0x61, 0x72,
		0x20, 0x48, 0x34, 0x54, 0x69, 0x67, 0x65, 0x72, 0x5f, 0x58, 0x31, 0x32, 0x54, 0x69, 0x67, 0x65,
		0x72, 0x20, 0x58, 0x31, 0x32, 0x57, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x6f, 0x54, 0x31, 0x30, 0x20,
		0x4c, 0x54, 0x45, 0x48, 0x24, 0x31, 0x57, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x57, 0x69, 0x6e,
		0x74, 0x6f, 0x75, 0x63, 0x68, 0x51, 0x39, 0x33, 0x53, 0x57, 0x69, 0x73, 0x65, 0x61, 0x73, 0x79,
		0x57, 0x69, 0x7a, 0x61, 0x72, 0x50, 0x6f, 0x73, 0x57, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x57, 0x69,
		0x61, 0x6d, 0x20, 0x23, 0x36, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x69, 0x61, 0x6d, 0x20,
		0x23, 0x24, 0x31, 0x6d, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x6d, 0x69, 0x54,
		0x61, 0x62, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x6d, 0x69,
		0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x57, 0x6f, 0x6c, 0x66, 0x67, 0x61, 0x6e, 0x67, 0x41, 0x54,
		0x2d, 0x41, 0x53, 0x24, 0x31, 0x57, 0x6f, 0x6c, 0x6b, 0x69, 0x57, 0x53, 0x30, 0x35, 0x34, 0x57,
		0x35, 0x2e, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x35, 0x35, 0x53, 0x45, 0x57, 0x35, 0x2e,
		0x35, 0x20, 0x53, 0x45, 0x57, 0x53, 0x36, 0x32, 0x36, 0x57, 0x36, 0x2e, 0x32, 0x36, 0x57, 0x36,
		0x32, 0x36, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x57, 0x36, 0x2e, 0x32, 0x36, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x57, 0x53, 0x35, 0x53, 0x45, 0x57, 0x35, 0x20, 0x53, 0x45, 0x57, 0x53, 0x30, 0x36, 0x37,
		0x57, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x6f, 0x6e, 0x75, 0x57, 0x6f, 0x6f, 0x53, 0x50, 0x35,
		0x30, 0x32, 0x36, 0x69, 0x2d, 0x53, 0x63, 0x6f, 0x72, 0x70, 0x69, 0x6f, 0x53, 0x63, 0x6f, 0x72,
		0x70, 0x69, 0x6f, 0x53, 0x50, 0x35, 0x30, 0x34, 0x30, 0x2d, 0x43, 0x61, 0x73, 0x69, 0x6f, 0x70,
		0x65, 0x61, 0x43, 0x61, 0x73, 0x69, 0x6f, 0x70, 0x65, 0x61, 0x20, 0x49, 0x49, 0x57, 0x6f, 0x72,
		0x74, 0x6d, 0x61, 0x6e, 0x6e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x20, 0x50, 0x61, 0x64, 0x20, 0x24,
		0x31, 0x24, 0x32, 0x57, 0x6f, 0x78, 0x74, 0x65, 0x72, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20,
		0x24, 0x31, 0x69, 0x2d, 0x31, 0x30, 0x31, 0x5a, 0x69, 0x65, 0x6c, 0x6f, 0x20, 0x24, 0x31, 0x58,
		0x2d, 0x41, 0x47, 0x45, 0x47, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x2d, 0x42, 0x4f, 0x58,
		0x2d, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x58, 0x36, 0x33, 0x50, 0x72, 0x6f, 0x58, 0x36, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x58, 0x4d, 0x2d, 0x53, 0x57, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49,
		0x5f, 0x4a, 0x4f, 0x59, 0x31, 0x30, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x6f, 0x79, 0x20, 0x31, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x5f, 0x4a, 0x4f, 0x59, 0x31, 0x30,
		0x4a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x4a, 0x6f, 0x79, 0x20, 0x37, 0x20, 0x54, 0x56, 0x4a, 0x6f,
		0x79, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x70, 0x65, 0x20, 0x24, 0x31,
		0x20, 0x24, 0x32, 0x48, 0x6f, 0x70, 0x65, 0x20, 0x38, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x6f, 0x70,
		0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x70, 0x65, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x5f, 0x4a, 0x4f, 0x59, 0x37, 0x5f,
		0x4d, 0x41, 0x58, 0x4a, 0x6f, 0x79, 0x20, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x4a, 0x4f, 0x59, 0x31,
		0x30, 0x5f, 0x4c, 0x54, 0x45, 0x4a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x56,
		0x32, 0x38, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x31, 0x38, 0x20, 0x70, 0x72, 0x6f, 0x5f, 0x41, 0x56,
		0x31, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x68, 0x6f,
		0x74, 0x6f, 0x20, 0x50, 0x31, 0x31, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x50, 0x31, 0x35, 0x5f,
		0x4c, 0x69, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x31, 0x35, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x70, 0x20, 0x24, 0x31, 0x58, 0x2d, 0x56, 0x69, 0x65, 0x77,
		0x5a, 0x45, 0x4e, 0x20, 0x55, 0x35, 0x2b, 0x41, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4b, 0x49, 0x44,
		0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
		0x6e, 0x5f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x48, 0x44, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e,
		0x20, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x48, 0x44, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x5f,
		0x4e, 0x65, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x4e, 0x65, 0x6f, 0x6e, 0x50,
		0x52, 0x4f, 0x54, 0x4f, 0x4e, 0x5f, 0x4a, 0x41, 0x44, 0x45, 0x5f, 0x32, 0x5f, 0x50, 0x52, 0x4f,
		0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x4a, 0x61, 0x64, 0x65, 0x20, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x58, 0x2d, 0x56, 0x69, 0x65, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x69, 0x75, 0x6d, 0x47, 0x54, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x47, 0x4f, 0x54,
		0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x47, 0x54, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
		0x73, 0x20, 0x47, 0x4f, 0x58, 0x38, 0x38, 0x58, 0x38, 0x38, 0x70, 0x72, 0x6f, 0x31, 0x30, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x30, 0x58, 0x39, 0x36, 0x41, 0x69, 0x72, 0x20, 0x24, 0x31, 0x58, 0x39,
		0x36, 0x4d, 0x61, 0x78, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5f, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d,
		0x61, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x78,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x58, 0x39, 0x36, 0x4d, 0x61, 0x78, 0x5f, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x39, 0x36, 0x5f, 0x58,
		0x36, 0x5f, 0x49, 0x58, 0x36, 0x69, 0x58, 0x39, 0x36, 0x4d, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x4c,
		0x55, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x39, 0x36, 0x4d, 0x49,
		0x4e, 0x49, 0x5f, 0x31, 0x31, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x31, 0x31, 0x58, 0x39, 0x36, 0x51,
		0x58, 0x43, 0x4f, 0x4d, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x45, 0x6c, 0x65, 0x63, 0x74,
		0x72, 0x6f, 0x6e, 0x58, 0x47, 0x45, 0x4d, 0x58, 0x47, 0x49, 0x4d, 0x49, 0x58, 0x4b, 0x30, 0x33,
		0x48, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x52, 0x45, 0x41,
		0x4c, 0x58, 0x34, 0x30, 0x30, 0x30, 0x42, 0x65, 0x61, 0x6d, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x59,
		0x20, 0x41, 0x75, 0x74, 0x6f, 0x58, 0x63, 0x65, 0x6c, 0x6c, 0x58, 0x63, 0x72, 0x75, 0x69, 0x73,
		0x65, 0x72, 0x58, 0x67, 0x6f, 0x64, 0x79, 0x58, 0x47, 0x54, 0x5f, 0x45, 0x45, 0x41, 0x58, 0x47,
		0x54, 0x4e, 0x30, 0x31, 0x50, 0x72, 0x6f, 0x4e, 0x30, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x69,
		0x61, 0x6f, 0x64, 0x75, 0x58, 0x69, 0x61, 0x6f, 0x6c, 0x61, 0x6a, 0x69, 0x61, 0x6f, 0x52, 0x65,
		0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x52,
		0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x20,
		0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72,
		0x20, 0x38, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65,
		0x72, 0x20, 0x39, 0x58, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x58,
		0x69, 0x61, 0x6f, 0x6d, 0x69, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b,
		0x41, 0x57, 0x4d, 0x2d, 0x41, 0x30, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72,
		0x6b, 0x20, 0x48, 0x65, 0x6c, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72,
		0x6b, 0x20, 0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20,
		0x33, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x20, 0x50,
		0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x20,
		0x35, 0x47, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72,
		0x6b, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61,
		0x72, 0x6b, 0x20, 0x34, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20,
		0x35, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x24, 0x31,
		0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20,
		0x31, 0x53, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x32,
		0x20, 0x33, 0x47, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x32, 0x48, 0x6f, 0x6e, 0x67, 0x6d,
		0x69, 0x20, 0x32, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x24, 0x31, 0x4d,
		0x69, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x69, 0x20, 0x39, 0x20, 0x53, 0x45, 0x4d, 0x69, 0x20,
		0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x39, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20,
		0x39, 0x65, 0x4d, 0x49, 0x20, 0x43, 0x43, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x65,
		0x6d, 0x69, 0x75, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x43,
		0x43, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20,
		0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x4d, 0x69,
		0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x31, 0x31, 0x69, 0x20,
		0x48, 0x79, 0x70, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x69,
		0x20, 0x31, 0x31, 0x58, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69,
		0x20, 0x31, 0x30, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30,
		0x54, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x54, 0x20,
		0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47,
		0x4d, 0x69, 0x20, 0x31, 0x30, 0x53, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x69, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x69, 0x4d,
		0x69, 0x20, 0x31, 0x31, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x54, 0x4d,
		0x69, 0x20, 0x31, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x20, 0x4e, 0x45, 0x4d,
		0x69, 0x20, 0x31, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31,
		0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x32, 0x54, 0x31, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x31, 0x32, 0x54,
		0x20, 0x50, 0x72, 0x6f, 0x31, 0x32, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x32, 0x53, 0x31, 0x32,
		0x53, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x31, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x31, 0x32,
		0x58, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x31, 0x33,
		0x31, 0x33, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x31, 0x33, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x31,
		0x33, 0x54, 0x31, 0x34, 0x31, 0x34, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x69, 0x61, 0x6f,
		0x6d, 0x69, 0x20, 0x31, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x54, 0x69, 0x31, 0x34, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x54, 0x69, 0x31, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x38, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x38, 0x20, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65,
		0x72, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x38, 0x20, 0x24, 0x31,
		0x4d, 0x69, 0x20, 0x39, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x39, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x39, 0x20, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61,
		0x72, 0x65, 0x6e, 0x74, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x24,
		0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x35, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4d, 0x69, 0x20, 0x35, 0x58, 0x4d, 0x69, 0x20, 0x33, 0x4d, 0x69, 0x20, 0x24, 0x31, 0x43, 0x4d,
		0x69, 0x20, 0x34, 0x57, 0x4d, 0x69, 0x20, 0x34, 0x69, 0x4d, 0x69, 0x20, 0x34, 0x20, 0x4c, 0x54,
		0x45, 0x4d, 0x69, 0x20, 0x4d, 0x61, 0x78, 0x33, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4d, 0x61,
		0x78, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x24, 0x31,
		0x4d, 0x69, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x69, 0x20, 0x41, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4d, 0x69, 0x20, 0x41, 0x33, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x34, 0x4d, 0x69, 0x20,
		0x4d, 0x69, 0x78, 0x20, 0x32, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x33, 0x20, 0x35, 0x47,
		0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20,
		0x32, 0x53, 0x20, 0x41, 0x72, 0x74, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x32, 0x53, 0x4d,
		0x69, 0x20, 0x4d, 0x69, 0x78, 0x4d, 0x69, 0x78, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x34, 0x4d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x50, 0x6f, 0x63, 0x6f, 0x70, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x46, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x47, 0x6f, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x33, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x35, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x32, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x32, 0x41, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x53, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x38, 0x41, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x38, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x38, 0x41, 0x20, 0x24, 0x31, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x58, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30,
		0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x33, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x31, 0x33, 0x32, 0x34, 0x30, 0x36, 0x45, 0x52, 0x4e, 0x39, 0x43, 0x49, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x31, 0x33, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x33, 0x43,
		0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x39, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x41, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x39, 0x69, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x69, 0x20, 0x53, 0x70, 0x6f,
		0x72, 0x74, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x39, 0x41, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x39, 0x54, 0x20, 0x4e, 0x46, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x43, 0x20,
		0x4e, 0x46, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x41, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x32, 0x29, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x31, 0x32, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x32, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x32, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x31, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x32,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x45, 0x64,
		0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x32, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x31, 0x39, 0x30, 0x33, 0x46, 0x31, 0x30, 0x49, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4b, 0x32, 0x30, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x5a, 0x6f, 0x6f, 0x6d,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x53, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b,
		0x33, 0x30, 0x20, 0x34, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x69, 0x20,
		0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4b, 0x34, 0x30, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x20, 0x47,
		0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x32,
		0x32, 0x30, 0x34, 0x31, 0x32, 0x31, 0x31, 0x41, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b,
		0x35, 0x30, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x35, 0x30, 0x20, 0x4d, 0x65, 0x72, 0x63,
		0x65, 0x64, 0x65, 0x73, 0x2d, 0x41, 0x4d, 0x47, 0x20, 0x46, 0x31, 0x20, 0x54, 0x65, 0x61, 0x6d,
		0x32, 0x32, 0x30, 0x34, 0x31, 0x32, 0x31, 0x36, 0x49, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b,
		0x35, 0x30, 0x69, 0x32, 0x31, 0x31, 0x32, 0x31, 0x32, 0x31, 0x30, 0x43, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4b, 0x35, 0x30, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x35, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x35, 0x30, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x32, 0x33, 0x30, 0x31, 0x33, 0x52, 0x4b, 0x37, 0x35, 0x43, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4b, 0x36, 0x30, 0x32, 0x32, 0x31, 0x32, 0x32, 0x52, 0x4b, 0x39, 0x33, 0x43, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x36, 0x30, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b,
		0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x36, 0x30, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x32, 0x33, 0x31, 0x31, 0x37, 0x52, 0x4b, 0x36, 0x36, 0x43, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x32, 0x33, 0x31, 0x31,
		0x44, 0x52, 0x4b, 0x34, 0x38, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x37, 0x30, 0x45,
		0x32, 0x33, 0x31, 0x31, 0x33, 0x52, 0x4b, 0x43, 0x36, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4b, 0x37, 0x30, 0x32, 0x34, 0x30, 0x37, 0x46, 0x52, 0x4b, 0x38, 0x45, 0x43, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4b, 0x37, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x59, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x36,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x58, 0x69, 0x61, 0x6f,
		0x6d, 0x69, 0x5f, 0x4d, 0x31, 0x38, 0x30, 0x35, 0x44, 0x31, 0x53, 0x54, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x37, 0x4d, 0x31,
		0x39, 0x30, 0x33, 0x43, 0x33, 0x45, 0x49, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x37, 0x41, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x34, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x41, 0x31,
		0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x41, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x41,
		0x32, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x41, 0x32, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x33, 0x32, 0x34, 0x30, 0x34, 0x38, 0x52, 0x4e, 0x36, 0x43, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x41, 0x33, 0x78, 0x32, 0x33, 0x31, 0x32, 0x43, 0x52, 0x4e, 0x43, 0x43, 0x4c, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x41, 0x33, 0x51, 0x49, 0x4e, 0x33, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x51,
		0x69, 0x6e, 0x20, 0x33, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x51, 0x69, 0x6e, 0x20, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x51, 0x69, 0x6e, 0x20, 0x32, 0x43, 0x43, 0x31, 0x31, 0x43, 0x69, 0x76, 0x69,
		0x43, 0x69, 0x76, 0x69, 0x20, 0x32, 0x43, 0x69, 0x76, 0x69, 0x20, 0x33, 0x43, 0x69, 0x76, 0x69,
		0x20, 0x34, 0x43, 0x69, 0x76, 0x69, 0x20, 0x31, 0x53, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x35, 0x4d, 0x69, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x50, 0x61, 0x64, 0x20,
		0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x36, 0x50, 0x61, 0x64, 0x20, 0x36, 0x20,
		0x4d, 0x61, 0x78, 0x20, 0x31, 0x34, 0x50, 0x61, 0x64, 0x20, 0x36, 0x53, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x34, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x34, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x34, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33,
		0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x32, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x53, 0x45,
		0x4d, 0x69, 0x50, 0x72, 0x6f, 0x6a, 0x41, 0x31, 0x4d, 0x69, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72,
		0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x31, 0x35, 0x30, 0x22, 0x4d,
		0x69, 0x50, 0x72, 0x6f, 0x6a, 0x4d, 0x30, 0x35, 0x4d, 0x69, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
		0x6f, 0x72, 0x46, 0x65, 0x6e, 0x67, 0x4d, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
		0x6f, 0x72, 0x20, 0x41, 0x32, 0x4d, 0x69, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x69, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x42, 0x6f, 0x78,
		0x20, 0x31, 0x53, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x34, 0x53, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x51,
		0x31, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x4d, 0x69, 0x54, 0x56, 0x20,
		0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x50, 0x31, 0x4d,
		0x69, 0x54, 0x56, 0x20, 0x52, 0x31, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x41, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x69, 0x54, 0x56, 0x20, 0x34, 0x41, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x34, 0x41, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x24, 0x31, 0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x20,
		0x53, 0x20, 0x28, 0x32, 0x6e, 0x64, 0x20, 0x47, 0x65, 0x6e, 0x29, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34,
		0x4b, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x4d, 0x69, 0x78, 0x20,
		0x46, 0x6f, 0x6c, 0x64, 0x20, 0x32, 0x4d, 0x69, 0x78, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x33,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x54, 0x44, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x34, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x32, 0x6b, 0x65, 0x6e, 0x7a, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x33, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x41,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x35, 0x41, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x39, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39,
		0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x58, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x53, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x54, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x30, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x54,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x54, 0x20, 0x35,
		0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4a,
		0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20,
		0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x70, 0x65, 0x65,
		0x64, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x53, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x52, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x52, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x44, 0x45,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x33, 0x52, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x33, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x2b,
		0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x33,
		0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31,
		0x45, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x31, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31,
		0x54, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x31, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35,
		0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31,
		0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31,
		0x52, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x31, 0x20, 0x34, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x31, 0x20, 0x53, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x31, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x53,
		0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31,
		0x54, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x20,
		0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x54,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x53, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d,
		0x61, 0x78, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x24, 0x31, 0x4d, 0x49, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x5f,
		0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x30, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x51,
		0x69, 0x6e, 0x20, 0x31, 0x73, 0x2b, 0x4d, 0x69, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4d, 0x69, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x24, 0x31, 0x48,
		0x4d, 0x20, 0x24, 0x31, 0x58, 0x69, 0x6f, 0x6e, 0x43, 0x45, 0x24, 0x31, 0x58, 0x6f, 0x6c, 0x6f,
		0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x31, 0x58, 0x45, 0x72, 0x61, 0x20, 0x31, 0x58, 0x20, 0x50,
		0x72, 0x6f, 0x45, 0x72, 0x61, 0x20, 0x24, 0x31, 0x58, 0x45, 0x72, 0x61, 0x20, 0x34, 0x58, 0x20,
		0x32, 0x47, 0x42, 0x45, 0x72, 0x61, 0x20, 0x32, 0x56, 0x45, 0x72, 0x61, 0x20, 0x24, 0x31, 0x43,
		0x75, 0x62, 0x65, 0x20, 0x35, 0x2e, 0x30, 0x58, 0x6f, 0x72, 0x6f, 0x54, 0x65, 0x6c, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x24, 0x31, 0x20, 0x41, 0x33, 0x20, 0x34, 0x47, 0x54, 0x65, 0x6c, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x65, 0x67, 0x61, 0x50, 0x61, 0x64, 0x20, 0x33, 0x32, 0x30,
		0x34, 0x20, 0x56, 0x35, 0x48, 0x4d, 0x54, 0x20, 0x24, 0x31, 0x48, 0x53, 0x54, 0x20, 0x32, 0x36,
		0x30, 0x58, 0x73, 0x68, 0x69, 0x74, 0x6f, 0x75, 0x58, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x4f,
		0x52, 0x45, 0x5f, 0x58, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x58, 0x58, 0x74, 0x6f, 0x75, 0x63, 0x68,
		0x58, 0x39, 0x58, 0x42, 0x6f, 0x74, 0x20, 0x24, 0x31, 0x58, 0x50, 0x31, 0x30, 0x5f, 0x57, 0x69,
		0x66, 0x69, 0x58, 0x50, 0x31, 0x30, 0x20, 0x57, 0x69, 0x46, 0x69, 0x58, 0x74, 0x72, 0x61, 0x74,
		0x65, 0x63, 0x68, 0x58, 0x4d, 0x31, 0x34, 0x47, 0x49, 0x67, 0x75, 0x61, 0x6e, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x58, 0x4d, 0x31, 0x34, 0x47, 0x58, 0x31, 0x30, 0x4d, 0x54, 0x31, 0x36, 0x58, 0x31,
		0x30, 0x4d, 0x54, 0x38, 0x37, 0x49, 0x67, 0x75, 0x61, 0x6e, 0x61, 0x50, 0x61, 0x64, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x58, 0x77, 0x61, 0x76, 0x65, 0x78, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31,
		0x59, 0x41, 0x53, 0x49, 0x4e, 0x59, 0x41, 0x53, 0x49, 0x4e, 0x20, 0x24, 0x31, 0x4b, 0x20, 0x47,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x59, 0x45, 0x4c, 0x4c, 0x59, 0x4f, 0x55,
		0x54, 0x48, 0x59, 0x45, 0x50, 0x45, 0x4e, 0x4d, 0x32, 0x30, 0x32, 0x30, 0x31, 0x34, 0x31, 0x39,
		0x58, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x59, 0x4f, 0x54, 0x4f, 0x50,
		0x54, 0x59, 0x55, 0x20, 0x46, 0x6c, 0x79, 0x59, 0x55, 0x48, 0x4f, 0x59, 0x55, 0x48, 0x4f, 0x5f,
		0x56, 0x61, 0x73, 0x74, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x61, 0x73, 0x74, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x59, 0x31, 0x5f, 0x41, 0x43, 0x45, 0x59, 0x31, 0x20,
		0x41, 0x63, 0x65, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x59, 0x31, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x59,
		0x31, 0x20, 0x53, 0x74, 0x61, 0x72, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x4f, 0x31, 0x5f, 0x4c, 0x49,
		0x54, 0x45, 0x4f, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x59, 0x55, 0x4d, 0x4b, 0x45, 0x4d, 0x59,
		0x55, 0x4e, 0x44, 0x4f, 0x4f, 0x59, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x59, 0x61, 0x6e, 0x64, 0x65,
		0x78, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x32, 0x2d, 0x30, 0x30, 0x30, 0x30, 0x31, 0x4d, 0x6f,
		0x64, 0x75, 0x6c, 0x65, 0x59, 0x4e, 0x44, 0x58, 0x2d, 0x24, 0x31, 0x59, 0x4e, 0x44, 0x58, 0x2d,
		0x30, 0x30, 0x30, 0x53, 0x42, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x20,
		0x44, 0x75, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x59, 0x61, 0x72, 0x76, 0x69, 0x6b, 0x4c, 0x75, 0x6e,
		0x61, 0x20, 0x54, 0x41, 0x42, 0x30, 0x37, 0x2d, 0x39, 0x32, 0x30, 0x4e, 0x4c, 0x75, 0x6e, 0x61,
		0x20, 0x37, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x37, 0x63, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41,
		0x42, 0x32, 0x37, 0x34, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42, 0x34, 0x37, 0x34, 0x4c,
		0x75, 0x6e, 0x61, 0x20, 0x31, 0x30, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42, 0x31, 0x30,
		0x2d, 0x31, 0x35, 0x30, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x31, 0x30, 0x63, 0x54, 0x41, 0x42, 0x30,
		0x39, 0x2d, 0x34, 0x31, 0x30, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x39, 0x2e, 0x37, 0x54, 0x41,
		0x42, 0x31, 0x30, 0x2d, 0x34, 0x31, 0x30, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x54, 0x41, 0x42, 0x30, 0x37, 0x2d, 0x34, 0x38, 0x35, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x37, 0x63, 0x54, 0x41, 0x42, 0x30,
		0x37, 0x2d, 0x32, 0x30, 0x30, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x37, 0x69, 0x63, 0x54, 0x41,
		0x42, 0x30, 0x38, 0x2d, 0x32, 0x30, 0x30, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x38, 0x69, 0x63,
		0x54, 0x41, 0x42, 0x30, 0x38, 0x2d, 0x32, 0x30, 0x31, 0x2d, 0x33, 0x47, 0x58, 0x65, 0x6e, 0x74,
		0x61, 0x20, 0x38, 0x63, 0x54, 0x41, 0x42, 0x39, 0x2d, 0x32, 0x30, 0x30, 0x58, 0x65, 0x6e, 0x74,
		0x61, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x63, 0x54, 0x41, 0x42, 0x30, 0x39, 0x2d, 0x32, 0x31, 0x31,
		0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x63, 0x2b, 0x58, 0x65, 0x6e, 0x74,
		0x61, 0x20, 0x31, 0x30, 0x69, 0x63, 0x54, 0x41, 0x42, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x58,
		0x65, 0x6e, 0x74, 0x61, 0x20, 0x31, 0x33, 0x63, 0x59, 0x65, 0x73, 0x4d, 0x36, 0x33, 0x31, 0x59,
		0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x4d, 0x36, 0x35, 0x31, 0x47, 0x5f, 0x4d, 0x59,
		0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x32, 0x4d, 0x36, 0x38, 0x35, 0x59, 0x34,
		0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x33, 0x59, 0x65, 0x73, 0x74, 0x65, 0x6c,
		0x59, 0x65, 0x7a, 0x7a, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x24, 0x31, 0x59, 0x65, 0x7a, 0x7a, 0x2d,
		0x41, 0x43, 0x34, 0x45, 0x49, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x34, 0x45, 0x49, 0x41, 0x52, 0x54,
		0x31, 0x5f, 0x50, 0x52, 0x4f, 0x41, 0x72, 0x74, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x52,
		0x54, 0x31, 0x41, 0x72, 0x74, 0x20, 0x31, 0x41, 0x52, 0x54, 0x32, 0x50, 0x52, 0x4f, 0x41, 0x72,
		0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x52, 0x54, 0x20, 0x33, 0x53, 0x41, 0x72, 0x74,
		0x20, 0x33, 0x53, 0x45, 0x50, 0x49, 0x43, 0x20, 0x54, 0x45, 0x70, 0x69, 0x63, 0x20, 0x54, 0x47,
		0x4f, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x56, 0x31, 0x4c, 0x49, 0x56, 0x20, 0x31, 0x53, 0x4c, 0x49,
		0x56, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x41, 0x58, 0x5f, 0x31, 0x5f, 0x50, 0x4c, 0x55, 0x53,
		0x4d, 0x61, 0x78, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x41, 0x58, 0x32, 0x20, 0x50,
		0x4c, 0x55, 0x53, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x6e, 0x64,
		0x79, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x24, 0x31, 0x2e, 0x24,
		0x32, 0x20, 0x24, 0x33, 0x59, 0x6f, 0x6b, 0x61, 0x20, 0x54, 0x56, 0x4b, 0x42, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x59, 0x6f, 0x6f, 0x7a, 0x59, 0x6f, 0x74, 0x61, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x6f, 0x75, 0x69, 0x6e, 0x59, 0x6f, 0x75, 0x2d, 0x42,
		0x6f, 0x78, 0x59, 0x6f, 0x75, 0x77, 0x65, 0x69, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x35, 0x47, 0x59,
		0x74, 0x6f, 0x6e, 0x65, 0x59, 0x75, 0x59, 0x75, 0x70, 0x68, 0x6f, 0x72, 0x69, 0x61, 0x59, 0x75,
		0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x32, 0x59, 0x75, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x59, 0x75,
		0x72, 0x65, 0x6b, 0x61, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x32, 0x59, 0x75, 0x72, 0x65,
		0x6b, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x59, 0x55,
		0x20, 0x36, 0x30, 0x30, 0x30, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x59, 0x75, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x59, 0x75, 0x6e, 0x53, 0x6f, 0x6e, 0x67, 0x59, 0x53,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x75, 0x6e, 0x6f, 0x55, 0x4c, 0x58, 0x2d, 0x24, 0x31,
		0x59, 0x75, 0x73, 0x75, 0x6e, 0x4c, 0x41, 0x32, 0x2d, 0x54, 0x59, 0x78, 0x74, 0x65, 0x6c, 0x5a,
		0x2d, 0x4b, 0x61, 0x69, 0x5a, 0x48, 0x26, 0x4b, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20,
		0x4a, 0x31, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20,
		0x24, 0x31, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x41, 0x65, 0x6f, 0x6e, 0x4f, 0x64,
		0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x41, 0x63, 0x65, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x4e, 0x65,
		0x78, 0x74, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x50, 0x65, 0x72, 0x72, 0x69, 0x4f,
		0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x4f, 0x64, 0x79, 0x73,
		0x73, 0x65, 0x79, 0x20, 0x45, 0x76, 0x6f, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x56,
		0x69, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x53, 0x77,
		0x69, 0x66, 0x74, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x54, 0x79, 0x74, 0x61, 0x6e,
		0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x53, 0x61, 0x67, 0x61, 0x4f, 0x64, 0x79, 0x73,
		0x73, 0x65, 0x79, 0x20, 0x53, 0x61, 0x63, 0x72, 0x65, 0x64, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65,
		0x79, 0x20, 0x50, 0x6f, 0x70, 0x6f, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x52, 0x61,
		0x6e, 0x67, 0x65, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x47, 0x6c, 0x61, 0x7a, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x47, 0x6c, 0x61,
		0x7a, 0x65, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x48, 0x69, 0x67, 0x68, 0x4f, 0x64,
		0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x53, 0x6f, 0x61, 0x72, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65,
		0x79, 0x20, 0x45, 0x72, 0x61, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x53, 0x45, 0x20, 0x52, 0x49, 0x53,
		0x45, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x52, 0x69, 0x73, 0x65, 0x49, 0x4e, 0x54,
		0x45, 0x4e, 0x53, 0x45, 0x20, 0x48, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65,
		0x20, 0x48, 0x79, 0x70, 0x65, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x53, 0x45, 0x20, 0x47, 0x41, 0x4d,
		0x45, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x5a, 0x49, 0x46,
		0x52, 0x4f, 0x5a, 0x49, 0x4b, 0x5a, 0x54, 0x45, 0x35, 0x47, 0x20, 0x55, 0x47, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x55, 0x32, 0x33, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x20, 0x31, 0x30,
		0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x6f, 0x79,
		0x61, 0x67, 0x65, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x56, 0x6f, 0x79, 0x61, 0x67,
		0x65, 0x20, 0x33, 0x30, 0x53, 0x53, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4c,
		0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x33, 0x4c,
		0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x20, 0x49, 0x49, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x20, 0x49, 0x49,
		0x49, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x20, 0x49, 0x56, 0x4c, 0x69, 0x62,
		0x65, 0x72, 0x6f, 0x20, 0x53, 0x31, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x46, 0x33,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x30, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x70, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x31, 0x5a, 0x54, 0x45, 0x20, 0x37, 0x30,
		0x36, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x33, 0x5a, 0x32, 0x33, 0x35, 0x39,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x35, 0x4e, 0x39, 0x33, 0x39, 0x53, 0x63, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x31, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41,
		0x33, 0x76, 0x37, 0x35, 0x34, 0x30, 0x4e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x32,
		0x20, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x20, 0x56, 0x69, 0x74, 0x61,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x31, 0x30,
		0x20, 0x56, 0x69, 0x74, 0x61, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x32, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x37, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x39, 0x20, 0x50, 0x72,
		0x6f, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41,
		0x78, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x78,
		0x6f, 0x6e, 0x20, 0x31, 0x31, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x41,
		0x78, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x41, 0x32, 0x33, 0x32,
		0x32, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e,
		0x20, 0x33, 0x30, 0x41, 0x32, 0x30, 0x32, 0x32, 0x48, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x32, 0x30, 0x32, 0x32, 0x50, 0x47, 0x41, 0x78,
		0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x41, 0x32, 0x30, 0x32, 0x32,
		0x50, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41,
		0x32, 0x30, 0x32, 0x32, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41,
		0x32, 0x30, 0x32, 0x33, 0x48, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x41, 0x34, 0x31, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x41, 0x32, 0x30, 0x32, 0x33, 0x50, 0x41, 0x78, 0x6f, 0x6e,
		0x20, 0x34, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x34, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x34, 0x30, 0x20, 0x53, 0x45, 0x41, 0x32,
		0x30, 0x31, 0x36, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x5a, 0x32, 0x33,
		0x35, 0x36, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x36, 0x30, 0x5a, 0x32, 0x33, 0x35, 0x30, 0x41, 0x78,
		0x6f, 0x6e, 0x20, 0x36, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x32, 0x30, 0x32, 0x34, 0x48,
		0x41, 0x78, 0x6f, 0x6e, 0x20, 0x35, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x45, 0x67, 0x41, 0x6c, 0x6c, 0x73, 0x74, 0x61, 0x72, 0x51,
		0x75, 0x65, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x35,
		0x43, 0x74, 0x79, 0x6f, 0x6e, 0x20, 0x41, 0x39, 0x56, 0x35, 0x47, 0x56, 0x35, 0x53, 0x56, 0x35,
		0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6d, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x6c, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x76, 0x69, 0x64, 0x41, 0x76, 0x69, 0x64,
		0x20, 0x35, 0x37, 0x39, 0x41, 0x76, 0x69, 0x64, 0x20, 0x35, 0x38, 0x39, 0x50, 0x72, 0x65, 0x73,
		0x74, 0x69, 0x67, 0x65, 0x20, 0x32, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x20, 0x58, 0x57, 0x61, 0x72,
		0x70, 0x20, 0x34, 0x47, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x52, 0x32, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x54,
		0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x51, 0x2b, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x51,
		0x20, 0x4c, 0x75, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x47, 0x46, 0x33, 0x57, 0x61, 0x72,
		0x70, 0x20, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x61, 0x72, 0x70, 0x20, 0x37, 0x42, 0x6f, 0x6f, 0x73,
		0x74, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x2b, 0x4d,
		0x61, 0x78, 0x20, 0x58, 0x4c, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x56, 0x35, 0x20, 0x52, 0x65, 0x64,
		0x20, 0x42, 0x75, 0x6c, 0x6c, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x65, 0x6d, 0x6f, 0x20,
		0x4c, 0x54, 0x45, 0x56, 0x37, 0x37, 0x39, 0x4d, 0x4a, 0x6f, 0x65, 0x79, 0x20, 0x4a, 0x75, 0x6d,
		0x70, 0x20, 0x32, 0x56, 0x38, 0x30, 0x37, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x43, 0x56, 0x38,
		0x30, 0x39, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x43, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x35, 0x32, 0x31,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x54, 0x45, 0x5f,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x5f, 0x49, 0x49, 0x49, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x49,
		0x49, 0x49, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x38, 0x38,
		0x32, 0x4c, 0x6f, 0x72, 0x64, 0x56, 0x39, 0x36, 0x37, 0x53, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20,
		0x58, 0x32, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58,
		0x33, 0x56, 0x39, 0x36, 0x35, 0x56, 0x38, 0x30, 0x30, 0x30, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20,
		0x58, 0x34, 0x5a, 0x39, 0x38, 0x37, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x4d, 0x61,
		0x78, 0x2b, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x45, 0x72, 0x61, 0x55, 0x5a, 0x54, 0x45, 0x20,
		0x47, 0x52, 0x41, 0x4e, 0x44, 0x20, 0x56, 0x37, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x56, 0x37,
		0x56, 0x37, 0x38, 0x38, 0x44, 0x4b, 0x69, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x33, 0x33,
		0x31, 0x4e, 0x38, 0x31, 0x38, 0x53, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x20, 0x46, 0x72, 0x65, 0x73,
		0x68, 0x20, 0x35, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x53, 0x70, 0x69, 0x72, 0x69,
		0x74, 0x20, 0x32, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x32, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x57, 0x61, 0x76, 0x65, 0x4f, 0x70,
		0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x41, 0x35, 0x32, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x33,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x33, 0x20, 0x41, 0x70,
		0x65, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x4c, 0x34, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x4c, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x4c, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x37, 0x41, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x4c, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x28,
		0x24, 0x32, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x41, 0x24, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x41, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36,
		0x20, 0x4d, 0x61, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x53, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x37, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x44, 0x20, 0x4c, 0x75, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x56, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x36, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x37, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x24,
		0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x35, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x56, 0x35, 0x30, 0x20, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x56, 0x35, 0x30, 0x20, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x20, 0x35, 0x47, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x35, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x56, 0x38, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x31, 0x30, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x58, 0x31, 0x20, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x24, 0x31,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x35,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x51, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56,
		0x38, 0x20, 0x53, 0x45, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x39, 0x20, 0x56, 0x69, 0x74, 0x61, 0x5a, 0x54,
		0x45, 0x20, 0x38, 0x30, 0x33, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x33, 0x30, 0x20,
		0x56, 0x69, 0x74, 0x61, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x33, 0x31, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x56, 0x32, 0x30, 0x32, 0x32, 0x20, 0x34, 0x47, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30,
		0x33, 0x30, 0x4e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x33, 0x30, 0x5a, 0x54, 0x45, 0x20,
		0x39, 0x30, 0x33, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x33, 0x30, 0x5a, 0x54, 0x45,
		0x20, 0x41, 0x37, 0x30, 0x34, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x30, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x5a, 0x54, 0x45, 0x20, 0x41, 0x37, 0x30, 0x35, 0x30, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x31, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5a, 0x54, 0x45,
		0x20, 0x38, 0x30, 0x34, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x30, 0x20, 0x56,
		0x69, 0x74, 0x61, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x31, 0x34, 0x30, 0x4e, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x56, 0x34, 0x31, 0x20, 0x56, 0x69, 0x74, 0x61, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30,
		0x34, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x5a,
		0x54, 0x45, 0x20, 0x38, 0x30, 0x34, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x30,
		0x20, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x34, 0x35, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x24,
		0x31, 0x20, 0x56, 0x69, 0x74, 0x61, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x4d, 0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5a, 0x38, 0x32, 0x30, 0x4f,
		0x62, 0x73, 0x69, 0x64, 0x69, 0x61, 0x6e, 0x5a, 0x39, 0x38, 0x36, 0x55, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x33, 0x5a, 0x36, 0x34, 0x31, 0x30, 0x53, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x73, 0x5a, 0x36, 0x31, 0x30, 0x44, 0x4c, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x56, 0x69, 0x65, 0x77, 0x5a, 0x39, 0x37,
		0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x5a, 0x39, 0x37, 0x38,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x38, 0x33, 0x39,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5a, 0x33, 0x31,
		0x35, 0x33, 0x56, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65,
		0x20, 0x32, 0x5a, 0x39, 0x33, 0x30, 0x4c, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x20, 0x4c, 0x54, 0x45,
		0x5a, 0x39, 0x36, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x5a, 0x36, 0x34, 0x30, 0x30,
		0x43, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x32, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x39, 0x38,
		0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x5a, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f,
		0x5a, 0x39, 0x38, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x5a, 0x20, 0x4d, 0x61, 0x78, 0x5a,
		0x39, 0x38, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x69,
		0x74, 0x72, 0x69, 0x6e, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x79, 0x6d, 0x62, 0x61, 0x6c, 0x2d,
		0x43, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x32, 0x33, 0x33, 0x56, 0x43, 0x79, 0x6d, 0x62, 0x61, 0x6c,
		0x20, 0x4c, 0x54, 0x45, 0x5a, 0x32, 0x33, 0x32, 0x54, 0x4c, 0x43, 0x79, 0x6d, 0x62, 0x61, 0x6c,
		0x2d, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x33, 0x35, 0x33, 0x56, 0x4c, 0x43, 0x79, 0x6d, 0x62,
		0x61, 0x6c, 0x2d, 0x54, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x37, 0x31, 0x38, 0x54, 0x4c, 0x4a, 0x61,
		0x73, 0x70, 0x65, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x49, 0x53, 0x20, 0x49, 0x49, 0x20, 0x4d,
		0x61, 0x78, 0x4b, 0x69, 0x73, 0x20, 0x49, 0x49, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x69, 0x73, 0x20,
		0x33, 0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45,
		0x5a, 0x38, 0x39, 0x39, 0x56, 0x4c, 0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x79, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x38, 0x32, 0x38, 0x54, 0x4c,
		0x4d, 0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45,
		0x46, 0x61, 0x6e, 0x66, 0x61, 0x72, 0x65, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x5a, 0x4d, 0x61, 0x78,
		0x20, 0x4f, 0x6e, 0x65, 0x5a, 0x38, 0x31, 0x35, 0x46, 0x61, 0x6e, 0x66, 0x61, 0x72, 0x65, 0x20,
		0x32, 0x5a, 0x38, 0x33, 0x31, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x32, 0x5a, 0x38, 0x33, 0x32,
		0x53, 0x6f, 0x6e, 0x61, 0x74, 0x61, 0x20, 0x33, 0x5a, 0x38, 0x33, 0x35, 0x4d, 0x61, 0x76, 0x65,
		0x6e, 0x20, 0x33, 0x50, 0x72, 0x65, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a,
		0x38, 0x35, 0x31, 0x4d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x20, 0x33, 0x5a, 0x38,
		0x35, 0x32, 0x46, 0x61, 0x6e, 0x66, 0x61, 0x72, 0x65, 0x20, 0x33, 0x5a, 0x38, 0x32, 0x38, 0x41,
		0x76, 0x69, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x38, 0x35, 0x35, 0x41, 0x76, 0x69, 0x64,
		0x20, 0x34, 0x5a, 0x38, 0x33, 0x33, 0x41, 0x76, 0x69, 0x64, 0x20, 0x54, 0x52, 0x49, 0x4f, 0x5a,
		0x46, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x35, 0x35, 0x38, 0x56, 0x4c,
		0x5a, 0x46, 0x69, 0x76, 0x65, 0x20, 0x43, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x35, 0x35, 0x37, 0x42,
		0x4c, 0x5a, 0x46, 0x69, 0x76, 0x65, 0x20, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x46, 0x69, 0x76,
		0x65, 0x20, 0x4c, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x39, 0x31, 0x36, 0x42, 0x4c, 0x5a, 0x4d, 0x61,
		0x78, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x39, 0x31, 0x37, 0x56,
		0x4c, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x20, 0x4c, 0x54, 0x45, 0x5a,
		0x4d, 0x61, 0x78, 0x20, 0x32, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x33, 0x5a, 0x4d, 0x61, 0x78, 0x20,
		0x31, 0x30, 0x5a, 0x39, 0x36, 0x33, 0x56, 0x4c, 0x4d, 0x61, 0x78, 0x20, 0x44, 0x75, 0x6f, 0x20,
		0x4c, 0x54, 0x45, 0x5a, 0x39, 0x37, 0x30, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x5a, 0x39, 0x37, 0x30,
		0x5a, 0x39, 0x38, 0x36, 0x44, 0x4c, 0x4d, 0x41, 0x58, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4c,
		0x54, 0x45, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x20, 0x32, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x4d, 0x41,
		0x78, 0x6f, 0x6e, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x32, 0x30, 0x31, 0x35, 0x41, 0x78, 0x6f,
		0x6e, 0x20, 0x54, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x43, 0x32, 0x30, 0x31, 0x37, 0x41, 0x78, 0x6f,
		0x6e, 0x20, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x32, 0x30, 0x31, 0x38, 0x41, 0x78, 0x6f, 0x6e,
		0x20, 0x37, 0x73, 0x42, 0x32, 0x30, 0x31, 0x37, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x37, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x5a,
		0x36, 0x36, 0x37, 0x54, 0x5a, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x6b, 0x61, 0x74, 0x65, 0x20,
		0x32, 0x47, 0x65, 0x65, 0x6b, 0x5a, 0x37, 0x31, 0x36, 0x42, 0x4c, 0x53, 0x63, 0x6f, 0x72, 0x65,
		0x58, 0x35, 0x30, 0x31, 0x47, 0x72, 0x6f, 0x6f, 0x76, 0x65, 0x46, 0x2d, 0x34, 0x35, 0x30, 0x41,
		0x64, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x6f, 0x56,
		0x38, 0x36, 0x35, 0x4d, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x56, 0x69, 0x73, 0x74,
		0x61, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45,
		0x4c, 0x65, 0x6f, 0x20, 0x51, 0x32, 0x56, 0x65, 0x72, 0x67, 0x61, 0x74, 0x61, 0x72, 0x69, 0x6f,
		0x20, 0x35, 0x56, 0x65, 0x72, 0x67, 0x61, 0x74, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x35, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x56, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x31,
		0x32, 0x4e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32, 0x31, 0x20, 0x35, 0x47,
		0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x30, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32,
		0x30, 0x32, 0x30, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x30, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x56, 0x32, 0x30, 0x32, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61, 0x4b, 0x49, 0x53, 0x20, 0x43,
		0x33, 0x34, 0x31, 0x4b, 0x69, 0x73, 0x20, 0x43, 0x33, 0x34, 0x31, 0x4d, 0x45, 0x4f, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x41, 0x24, 0x31, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x20, 0x57, 0x41,
		0x78, 0x6f, 0x6e, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x31,
		0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32, 0x30, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x5a, 0x58, 0x56, 0x31, 0x30, 0x20, 0x42, 0x38, 0x36, 0x37, 0x52, 0x45, 0x47, 0x72,
		0x61, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x47, 0x72, 0x61, 0x6e,
		0x64, 0x20, 0x58, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x34, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20,
		0x58, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x2e, 0x38, 0x54, 0x72, 0x65, 0x6b, 0x20, 0x32,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58,
		0x31, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x31, 0x30, 0x20, 0x49, 0x49, 0x20, 0x50,
		0x72, 0x6f, 0x2b, 0x41, 0x78, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x5a,
		0x54, 0x45, 0x20, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x32, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x41, 0x35, 0x32, 0x5a, 0x32, 0x34, 0x35, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x41, 0x35, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x33, 0x2b, 0x5a, 0x54, 0x45,
		0x20, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x33, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x41, 0x33, 0x33, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x31, 0x30, 0x5a,
		0x59, 0x51, 0x51, 0x36, 0x33, 0x38, 0x51, 0x32, 0x36, 0x32, 0x34, 0x43, 0x68, 0x65, 0x65, 0x72,
		0x20, 0x33, 0x47, 0x51, 0x32, 0x36, 0x30, 0x32, 0x54, 0x56, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x51,
		0x32, 0x37, 0x32, 0x38, 0x5a, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x51, 0x32, 0x37, 0x32, 0x39,
		0x51, 0x32, 0x36, 0x38, 0x38, 0x51, 0x32, 0x36, 0x32, 0x33, 0x57, 0x69, 0x6e, 0x20, 0x33, 0x47,
		0x51, 0x32, 0x36, 0x32, 0x36, 0x43, 0x61, 0x72, 0x65, 0x20, 0x33, 0x47, 0x51, 0x33, 0x36, 0x32,
		0x33, 0x42, 0x72, 0x61, 0x77, 0x20, 0x33, 0x47, 0x51, 0x33, 0x30, 0x32, 0x32, 0x51, 0x33, 0x32,
		0x38, 0x20, 0x6d, 0x39, 0x51, 0x33, 0x32, 0x38, 0x20, 0x4d, 0x39, 0x51, 0x33, 0x32, 0x38, 0x53,
		0x70, 0x65, 0x65, 0x64, 0x20, 0x33, 0x47, 0x51, 0x36, 0x36, 0x38, 0x54, 0x56, 0x20, 0x49, 0x34,
		0x4a, 0x37, 0x37, 0x51, 0x2e, 0x44, 0x65, 0x65, 0x51, 0x2e, 0x55, 0x70, 0x20, 0x43, 0x35, 0x51,
		0x2e, 0x55, 0x70, 0x51, 0x2e, 0x42, 0x6f, 0x73, 0x73, 0x20, 0x50, 0x39, 0x39, 0x51, 0x2e, 0x44,
		0x65, 0x65, 0x20, 0x52, 0x30, 0x39, 0x51, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x20, 0x4d, 0x39, 0x51,
		0x2e, 0x48, 0x69, 0x20, 0x53, 0x31, 0x51, 0x2e, 0x48, 0x69, 0x51, 0x2e, 0x48, 0x6f, 0x74, 0x20,
		0x50, 0x37, 0x20, 0x33, 0x47, 0x51, 0x2e, 0x48, 0x6f, 0x74, 0x51, 0x2e, 0x4d, 0x65, 0x20, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x33, 0x47, 0x51, 0x2e, 0x4d, 0x65, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x37, 0x51, 0x2e, 0x4d, 0x65, 0x51, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x52,
		0x39, 0x39, 0x51, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x42, 0x37, 0x51, 0x2e, 0x4e, 0x65, 0x78,
		0x74, 0x20, 0x4a, 0x32, 0x51, 0x2e, 0x54, 0x6f, 0x70, 0x20, 0x58, 0x38, 0x51, 0x2e, 0x59, 0x6f,
		0x75, 0x51, 0x54, 0x41, 0x42, 0x20, 0x54, 0x61, 0x62, 0x34, 0x51, 0x54, 0x61, 0x62, 0x20, 0x54,
		0x61, 0x62, 0x34, 0x5a, 0x59, 0x51, 0x2d, 0x51, 0x38, 0x38, 0x51, 0x38, 0x38, 0x5a, 0x5a, 0x42,
		0x5a, 0x61, 0x69, 0x74, 0x68, 0x5a, 0x61, 0x6d, 0x6f, 0x6c, 0x78, 0x65, 0x5a, 0x61, 0x74, 0x65,
		0x63, 0x57, 0x69, 0x6e, 0x64, 0x5a, 0x50, 0x4c, 0x41, 0x59, 0x31, 0x5f, 0x32, 0x30, 0x31, 0x38,
		0x5a, 0x70, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x5a, 0x70, 0x6f, 0x77,
		0x65, 0x72, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5a,
		0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x50, 0x41, 0x44, 0x5f, 0x31,
		0x5a, 0x50, 0x61, 0x64, 0x5a, 0x65, 0x61, 0x6c, 0x6f, 0x74, 0x5a, 0x65, 0x62, 0x6c, 0x61, 0x7a,
		0x65, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x54, 0x48, 0x4f, 0x52, 0x20, 0x50, 0x52, 0x4f,
		0x54, 0x68, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x62, 0x72, 0x61, 0x5a, 0x65, 0x65,
		0x6b, 0x65, 0x72, 0x5a, 0x45, 0x45, 0x4b, 0x45, 0x52, 0x5a, 0x65, 0x65, 0x6d, 0x69, 0x5a, 0x65,
		0x6e, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x47, 0x6c, 0x61, 0x6d, 0x41, 0x64, 0x6d, 0x69, 0x72,
		0x65, 0x20, 0x47, 0x6c, 0x61, 0x6d, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x65, 0x6e,
		0x73, 0x65, 0x2b, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x77, 0x61, 0x64, 0x65, 0x73,
		0x68, 0x2b, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x44,
		0x75, 0x6f, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65, 0x20, 0x4e,
		0x65, 0x6f, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65, 0x2b, 0x41,
		0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x4e, 0x65, 0x6f, 0x2b, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65,
		0x20, 0x44, 0x75, 0x6f, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x68, 0x69, 0x6e, 0x65,
		0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x41,
		0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x72,
		0x65, 0x20, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x47,
		0x6c, 0x6f, 0x72, 0x79, 0x2b, 0x5a, 0x65, 0x6e, 0x65, 0x6b, 0x5a, 0x35, 0x35, 0x31, 0x37, 0x4c,
		0x65, 0x6f, 0x70, 0x61, 0x72, 0x64, 0x6f, 0x5a, 0x36, 0x30, 0x30, 0x31, 0x4c, 0x69, 0x62, 0x65,
		0x6c, 0x75, 0x6c, 0x61, 0x5a, 0x35, 0x30, 0x30, 0x37, 0x4f, 0x73, 0x6f, 0x5a, 0x35, 0x35, 0x31,
		0x39, 0x50, 0x69, 0x6e, 0x67, 0xc3, 0xbb, 0x69, 0x6e, 0x6f, 0x5a, 0x35, 0x35, 0x31, 0x36, 0x5a,
		0x65, 0x6e, 0x74, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x2d, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x5a, 0x66, 0x69, 0x6e, 0x65, 0x72, 0x59, 0x39, 0x30, 0x30, 0x5a, 0x69, 0x64, 0x6f,
		0x6f, 0x5a, 0x69, 0x67, 0x6f, 0x45, 0x6f, 0x6e, 0x34, 0x35, 0x69, 0x45, 0x6f, 0x6e, 0x20, 0x34,
		0x35, 0x69, 0x5a, 0x69, 0x6e, 0x6f, 0x78, 0x4b, 0x69, 0x64, 0x73, 0x4c, 0x65, 0x67, 0x61, 0x63,
		0x79, 0x54, 0x61, 0x62, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x4c, 0x65, 0x67, 0x61,
		0x63, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x70, 0x61, 0x64, 0x2d, 0x58,
		0x38, 0x2d, 0x50, 0x52, 0x4f, 0x5a, 0x70, 0x61, 0x64, 0x20, 0x58, 0x38, 0x20, 0x50, 0x72, 0x6f,
		0x5a, 0x69, 0x6f, 0x78, 0x41, 0x73, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x20, 0x34, 0x47, 0x41,
		0x73, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x41, 0x73, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x44, 0x75, 0x6f, 0x70, 0x69, 0x78, 0x20, 0x46, 0x39, 0x20, 0x50, 0x72, 0x6f,
		0x44, 0x75, 0x6f, 0x24, 0x31, 0x20, 0x24, 0x32, 0x5a, 0x6f, 0x6e, 0x64, 0x61, 0x5a, 0x41, 0x34,
		0x30, 0x39, 0x4d, 0x75, 0x7a, 0x69, 0x63, 0x5a, 0x6f, 0x6e, 0x6b, 0x6f, 0x5a, 0x6f, 0x6f, 0x6d,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x5a, 0x6f, 0x70, 0x6f, 0x43, 0x32, 0x20, 0x49, 0x49, 0x39, 0x58,
		0x58, 0x20, 0x51, 0x75, 0x61, 0x64, 0x5a, 0x50, 0x39, 0x38, 0x30, 0x2b, 0x53, 0x70, 0x65, 0x65,
		0x64, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x53, 0x70,
		0x65, 0x65, 0x64, 0x20, 0x37, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x38, 0x4c, 0x65, 0x61, 0x64,
		0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x48, 0x44, 0x4c,
		0x69, 0x62, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x43, 0x43, 0x6f, 0x6c, 0x6f,
		0x72, 0x20, 0x53, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x46, 0x32, 0x46, 0x35, 0x20, 0x43, 0x6f,
		0x6c, 0x6f, 0x72, 0x20, 0x4d, 0x35, 0x43, 0x32, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x4d,
		0x34, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x58, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x43, 0x35,
		0x69, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x68, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x6c,
		0x6f, 0x74, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x58, 0x32, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x20,
		0x47, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x5a, 0x75, 0x75,
		0x6d, 0x41, 0x4b, 0x55, 0x53, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x6b, 0x75, 0x73, 0x20, 0x50, 0x72,
		0x6f, 0x41, 0x6b, 0x75, 0x73, 0x20, 0x24, 0x31, 0x41, 0x75, 0x72, 0x61, 0x20, 0x5a, 0x43, 0x4f,
		0x56, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x43, 0x6f, 0x76, 0x65,
		0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43, 0x4f, 0x56, 0x45, 0x54, 0x20,
		0x50, 0x52, 0x4f, 0x43, 0x6f, 0x76, 0x65, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x4f, 0x56, 0x45,
		0x54, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x43, 0x6f, 0x76, 0x65, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x43, 0x6f, 0x76, 0x65, 0x74, 0x24, 0x31, 0x4d, 0x41, 0x47, 0x4e, 0x4f, 0x20, 0x50, 0x4c, 0x55,
		0x53, 0x4d, 0x61, 0x67, 0x6e, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x41, 0x47, 0x4e, 0x4f,
		0x2d, 0x53, 0x4d, 0x61, 0x67, 0x6e, 0x6f, 0x20, 0x53, 0x4d, 0x61, 0x67, 0x6e, 0x6f, 0x24, 0x31,
		0x4f, 0x4e, 0x49, 0x58, 0x20, 0x53, 0x4f, 0x6e, 0x69, 0x78, 0x20, 0x53, 0x4f, 0x4e, 0x49, 0x58,
		0x53, 0x54, 0x45, 0x44, 0x49, 0x53, 0x74, 0x65, 0x64, 0x69, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41,
		0x52, 0x20, 0x50, 0x52, 0x4f, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x53, 0x74, 0x65, 0x6c,
		0x6c, 0x61, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20,
		0x24, 0x31, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x53, 0x74,
		0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41,
		0x52, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x4d, 0x61, 0x78,
		0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x47, 0x72,
		0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20,
		0x4c, 0x69, 0x66, 0x65, 0x41, 0x55, 0x52, 0x41, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x20, 0x4a, 0x4c,
		0x4f, 0x41, 0x75, 0x72, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4a, 0x2e, 0x4c, 0x6f, 0x41,
		0x55, 0x52, 0x41, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x4a, 0x4c, 0x4f, 0x41, 0x75, 0x72, 0x61, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x4a, 0x2e, 0x4c, 0x6f, 0x41, 0x55, 0x52, 0x41, 0x20, 0x50, 0x52, 0x4f,
		0x41, 0x75, 0x72, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x55, 0x52, 0x41, 0x20, 0x58, 0x41, 0x75,
		0x72, 0x61, 0x20, 0x58, 0x52, 0x4f, 0x4e, 0x49, 0x52, 0x6f, 0x6e, 0x69, 0x55, 0x4c, 0x54, 0x52,
		0x41, 0x20, 0x5a, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x5a, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74,
		0x20, 0x24, 0x31, 0x55, 0x6e, 0x69, 0x71, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x47, 0x52, 0x41, 0x4e,
		0x54, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x5a, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x20,
		0x24, 0x31, 0x5a, 0x79, 0x72, 0x65, 0x78, 0x5a, 0x54, 0x32, 0x31, 0x36, 0x61, 0x63, 0x74, 0x69,
		0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x6b, 0x32, 0x31, 0x54, 0x2d, 0x30, 0x33,
		0x61, 0x6c, 0x74, 0x72, 0x6f, 0x6e, 0x41, 0x4c, 0x2d, 0x35, 0x35, 0x35, 0x4f, 0x42, 0x2d, 0x24,
		0x31, 0x47, 0x49, 0x2d, 0x36, 0x32, 0x36, 0x62, 0x32, 0x6d, 0x44, 0x65, 0x63, 0x61, 0x64, 0x65,
		0x20, 0x35, 0x33, 0x62, 0x6f, 0x67, 0x6f, 0x42, 0x4f, 0x2d, 0x4c, 0x46, 0x53, 0x50, 0x34, 0x4c,
		0x69, 0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x34, 0x44, 0x43, 0x42, 0x4f, 0x2d, 0x4c,
		0x46, 0x53, 0x50, 0x53, 0x4c, 0x34, 0x4c, 0x69, 0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20,
		0x34, 0x53, 0x4c, 0x42, 0x4f, 0x2d, 0x4c, 0x46, 0x53, 0x50, 0x42, 0x53, 0x35, 0x4c, 0x69, 0x66,
		0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x35, 0x42, 0x53, 0x42, 0x4f, 0x2d, 0x4c, 0x46, 0x53,
		0x50, 0x53, 0x4c, 0x36, 0x51, 0x43, 0x49, 0x4c, 0x69, 0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65,
		0x20, 0x36, 0x51, 0x43, 0x62, 0x71, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x4c, 0x54, 0x45,
		0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78,
		0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x4f, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x43, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x20, 0x53, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x41,
		0x75, 0x72, 0x6f, 0x72, 0x61, 0x20, 0x53, 0x45, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x4c, 0x48,
		0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x51,
		0x2d, 0x38, 0x30, 0x36, 0x37, 0x4c, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x42, 0x51, 0x2d, 0x38, 0x30, 0x35, 0x32, 0x47, 0x42, 0x51, 0x2d, 0x38, 0x30, 0x34, 0x31,
		0x4c, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x38, 0x34, 0x47, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x42,
		0x51, 0x2d, 0x37, 0x30, 0x36, 0x31, 0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x73, 0x41, 0x72, 0x6d,
		0x6f, 0x72, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x35, 0x31, 0x47, 0x45, 0x6c, 0x62, 0x61, 0x42, 0x51,
		0x2d, 0x37, 0x30, 0x33, 0x36, 0x4c, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x69,
		0x6f, 0x6e, 0x46, 0x6e, 0x61, 0x63, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x46, 0x6e, 0x61, 0x63,
		0x20, 0x31, 0x30, 0x22, 0x20, 0x33, 0x47, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x32, 0x31, 0x47, 0x42,
		0x51, 0x2d, 0x37, 0x30, 0x31, 0x30, 0x47, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x30, 0x36, 0x47, 0x55,
		0x6e, 0x69, 0x6f, 0x6e, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x30, 0x33, 0x4a, 0x61, 0x6d, 0x61, 0x69,
		0x63, 0x61, 0x42, 0x51, 0x2d, 0x36, 0x36, 0x34, 0x35, 0x4c, 0x36, 0x36, 0x34, 0x35, 0x4c, 0x20,
		0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x51, 0x2d, 0x36, 0x30, 0x36, 0x31, 0x4c, 0x36,
		0x30, 0x36, 0x31, 0x4c, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x42, 0x51, 0x2d, 0x36, 0x30, 0x32, 0x32,
		0x47, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63,
		0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53,
		0x70, 0x72, 0x69, 0x6e, 0x67, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x42, 0x51, 0x2d, 0x35, 0x35, 0x32,
		0x32, 0x53, 0x69, 0x6c, 0x6b, 0x46, 0x61, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x61,
		0x73, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x77, 0x69, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x77,
		0x69, 0x6e, 0x57, 0x69, 0x64, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x46, 0x6f, 0x72,
		0x77, 0x61, 0x72, 0x64, 0x42, 0x6c, 0x69, 0x73, 0x73, 0x41, 0x6d, 0x73, 0x74, 0x65, 0x72, 0x64,
		0x61, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x34, 0x47, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x49, 0x72, 0x6f,
		0x6e, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x53, 0x65, 0x6c, 0x66,
		0x69, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x69, 0x63, 0x65, 0x20, 0x32, 0x4e, 0x69, 0x63, 0x65,
		0x4e, 0x69, 0x63, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x61, 0x77, 0x61, 0x73, 0x61, 0x6b,
		0x69, 0x56, 0x61, 0x6e, 0x63, 0x6f, 0x75, 0x76, 0x65, 0x72, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74,
		0x20, 0x32, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x56, 0x69, 0x65, 0x77, 0x56, 0x65, 0x6c,
		0x76, 0x65, 0x74, 0x20, 0x56, 0x69, 0x65, 0x77, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x42, 0x61,
		0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x53, 0x65, 0x6c, 0x66,
		0x69, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73,
		0x65, 0x20, 0x32, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x65, 0x6c,
		0x69, 0x65, 0x66, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x20,
		0x4c, 0x54, 0x45, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53,
		0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x45, 0x61, 0x73, 0x79,
		0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x32, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x45, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x51, 0x2d, 0x35, 0x30, 0x36, 0x30,
		0x4c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x20, 0x34, 0x47, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x6b,
		0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x52, 0x75, 0x73, 0x68, 0x48, 0x69, 0x67, 0x68, 0x20, 0x57,
		0x61, 0x79, 0x42, 0x6f, 0x6e, 0x64, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x69, 0x63, 0x68, 0x52,
		0x69, 0x63, 0x68, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x6f, 0x6e, 0x74, 0x65, 0x20, 0x43, 0x61, 0x72,
		0x6c, 0x6f, 0x53, 0x70, 0x6f, 0x74, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x45, 0x61, 0x73,
		0x79, 0x50, 0x72, 0x61, 0x67, 0x75, 0x65, 0x42, 0x51, 0x2d, 0x35, 0x35, 0x36, 0x30, 0x4c, 0x54,
		0x72, 0x65, 0x6e, 0x64, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x42, 0x51, 0x2d, 0x35, 0x35,
		0x36, 0x35, 0x4c, 0x53, 0x79, 0x64, 0x6e, 0x65, 0x79, 0x4c, 0x6f, 0x73, 0x20, 0x41, 0x6e, 0x67,
		0x65, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x68, 0x61, 0x72, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x6d,
		0x62, 0x6f, 0x20, 0x49, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x69, 0x6c, 0x61,
		0x6e, 0x54, 0x6f, 0x6b, 0x79, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x72,
		0x65, 0x61, 0x6c, 0xd0, 0x9e, 0x73, 0x61, 0x6b, 0x61, 0x56, 0x65, 0x6e, 0x69, 0x63, 0x65, 0x46,
		0x6f, 0x78, 0x20, 0x56, 0x69, 0x65, 0x77, 0x46, 0x6f, 0x78, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x47, 0x6f, 0x6c, 0x66, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x6f, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67,
		0x61, 0x70, 0x6f, 0x72, 0x65, 0x46, 0x6c, 0x6f, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x61, 0x6e,
		0x74, 0x69, 0x61, 0x67, 0x6f, 0x44, 0x75, 0x62, 0x61, 0x69, 0x4b, 0x69, 0x6e, 0x67, 0x73, 0x74,
		0x6f, 0x6e, 0x42, 0x51, 0x53, 0x2d, 0x34, 0x35, 0x30, 0x31, 0x20, 0x42, 0x72, 0x69, 0x73, 0x74,
		0x6f, 0x6c, 0x42, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x6c, 0x46, 0x6f, 0x78, 0x20, 0x45, 0x61, 0x73,
		0x79, 0x46, 0x6f, 0x78, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x55, 0x70, 0x21,
		0x4f, 0x72, 0x6c, 0x65, 0x61, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x69, 0x56,
		0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x44, 0x75, 0x73, 0x73,
		0x65, 0x6c, 0x64, 0x6f, 0x72, 0x66, 0x56, 0x65, 0x72, 0x6f, 0x6e, 0x61, 0x43, 0x6f, 0x6f, 0x6c,
		0x4f, 0x78, 0x66, 0x6f, 0x72, 0x64, 0x41, 0x73, 0x70, 0x65, 0x6e, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x42, 0x6f, 0x6d, 0x62, 0x61, 0x79, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x78,
		0x20, 0x50, 0x72, 0x6f, 0x42, 0x51, 0x2d, 0x31, 0x30, 0x33, 0x36, 0x4c, 0x45, 0x78, 0x69, 0x6f,
		0x6e, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x74, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x4d,
		0x61, 0x78, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72,
		0x73, 0x69, 0x6b, 0x61, 0x48, 0x61, 0x77, 0x61, 0x69, 0x69, 0x47, 0x72, 0x61, 0x63, 0x65, 0x41,
		0x71, 0x75, 0x61, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x73,
		0x20, 0x24, 0x31, 0x34, 0x2e, 0x35, 0x4a, 0x61, 0x76, 0x61, 0x42, 0x51, 0x2d, 0x39, 0x30, 0x35,
		0x35, 0x4c, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x42, 0x51, 0x2d, 0x38, 0x30, 0x38, 0x38, 0x4c, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x75,
		0x72, 0x66, 0x46, 0x69, 0x6a, 0x69, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x33, 0x47, 0x4c, 0x75,
		0x7a, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e,
		0x4d, 0x61, 0x6c, 0x74, 0x61, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4e,
		0x65, 0x63, 0x6b, 0x65, 0x72, 0x4e, 0x65, 0x78, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74,
		0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x37, 0x30, 0x38, 0x33, 0x31, 0x30,
		0x35, 0x36, 0x4c, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45,
		0x2b, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20,
		0x4f, 0x6e, 0x65, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x64, 0x69, 0x73,
		0x6f, 0x6e, 0x20, 0x33, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x5f, 0x54, 0x56, 0x5f, 0x42, 0x51, 0x65, 0x4e, 0x4f, 0x56, 0x41, 0x65, 0x4e, 0x4f, 0x56, 0x41,
		0x20, 0x54, 0x41, 0x42, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x61, 0x62, 0x20, 0x31,
		0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x65, 0x53, 0x54, 0x41, 0x52, 0x24, 0x31, 0x20, 0x24, 0x32,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x47, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x24,
		0x31, 0x65, 0x53, 0x54, 0x41, 0x52, 0x20, 0x47, 0x52, 0x41, 0x4e, 0x44, 0x47, 0x72, 0x61, 0x6e,
		0x64, 0x4d, 0x45, 0x52, 0x43, 0x55, 0x52, 0x59, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x20, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x20, 0x48, 0x44, 0x20,
		0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x65, 0x53, 0x54, 0x41, 0x52, 0x20, 0x42,
		0x45, 0x41, 0x55, 0x54, 0x59, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f,
		0x72, 0x65, 0x42, 0x65, 0x61, 0x75, 0x74, 0x79, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x20, 0x43, 0x6f, 0x72, 0x65, 0x65, 0x53, 0x54, 0x41, 0x52, 0x20, 0x4d, 0x4f, 0x4f, 0x4e, 0x20,
		0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x6f, 0x6f, 0x6e,
		0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x47,
		0x65, 0x53, 0x54, 0x41, 0x52, 0x20, 0x42, 0x45, 0x41, 0x55, 0x54, 0x59, 0x20, 0x32, 0x20, 0x48,
		0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x65, 0x61, 0x75, 0x74,
		0x79, 0x20, 0x32, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x47, 0x74, 0x61, 0x6b, 0x65, 0x65, 0x20, 0x31, 0x54, 0x61,
		0x6b, 0x65, 0x65, 0x20, 0x31, 0x44, 0x69, 0x67, 0x6e, 0x69, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x44, 0x69, 0x67, 0x6e, 0x69, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x65, 0x63, 0x6f, 0x6d, 0x66, 0x72, 0x65, 0x65, 0x69, 0x2d, 0x43, 0x68, 0x65, 0x72, 0x72,
		0x79, 0x69, 0x43, 0x68, 0x65, 0x72, 0x72, 0x79, 0x2d, 0x43, 0x32, 0x35, 0x36, 0x43, 0x32, 0x35,
		0x36, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x33, 0x47, 0x69, 0x2d, 0x4a, 0x6f, 0x79, 0x45, 0x6c,
		0x65, 0x6b, 0x74, 0x72, 0x61, 0x20, 0x4d, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x61, 0x20, 0x4c,
		0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x61, 0x20, 0x58, 0x4c, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72,
		0x61, 0x20, 0x58, 0x58, 0x4c, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x53, 0x79, 0x67, 0x6e,
		0x75, 0x73, 0x44, 0x65, 0x6f, 0x78, 0x69, 0x2d, 0x43, 0x61, 0x6c, 0x6c, 0x20, 0x24, 0x31, 0x69,
		0x2d, 0x6d, 0x61, 0x74, 0x65, 0x69, 0x2d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x69, 0x2d, 0x53,
		0x74, 0x79, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x49, 0x51, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x32, 0x49, 0x51, 0x20, 0x42, 0x69, 0x67, 0x20, 0x32, 0x49, 0x51, 0x20, 0x24, 0x31, 0x49, 0x51,
		0x20, 0x5a, 0x20, 0x50, 0x52, 0x4f, 0x49, 0x51, 0x20, 0x5a, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x51,
		0x20, 0x5a, 0x20, 0x42, 0x52, 0x49, 0x47, 0x48, 0x54, 0x49, 0x51, 0x20, 0x5a, 0x20, 0x42, 0x72,
		0x69, 0x67, 0x68, 0x74, 0x69, 0x42, 0x61, 0x6c, 0x6c, 0x41, 0x6e, 0x64, 0x69, 0x20, 0x57, 0x69,
		0x6e, 0x6b, 0x20, 0x34, 0x47, 0x41, 0x6e, 0x64, 0x69, 0x20, 0x35, 0x47, 0x20, 0x42, 0x6c, 0x69,
		0x6e, 0x6b, 0x20, 0x34, 0x47, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x44, 0x44, 0x2d, 0x31, 0x47,
		0x42, 0x43, 0x75, 0x64, 0x64, 0x6c, 0x65, 0x20, 0x41, 0x34, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20,
		0x43, 0x75, 0x64, 0x64, 0x6c, 0x65, 0x20, 0x41, 0x34, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x44,
		0x61, 0x7a, 0x7a, 0x6c, 0x65, 0x20, 0x33, 0x35, 0x30, 0x30, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20,
		0x33, 0x47, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x5f, 0x58, 0x32, 0x53, 0x70, 0x69, 0x72, 0x69,
		0x74, 0x20, 0x58, 0x32, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x5f, 0x53, 0x6b, 0x79, 0x65, 0x5f, 0x30,
		0x33, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x53, 0x6b, 0x79, 0x65, 0x20, 0x30, 0x33, 0x42, 0x72,
		0x61, 0x63, 0x65, 0x20, 0x58, 0x31, 0x69, 0x54, 0x41, 0x42, 0x20, 0x42, 0x69, 0x7a, 0x6e, 0x69,
		0x5a, 0x69, 0x54, 0x41, 0x42, 0x20, 0x42, 0x69, 0x7a, 0x6e, 0x69, 0x5a, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x69, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x7a, 0x20, 0x50, 0x72, 0x6f,
		0x69, 0x42, 0x65, 0x72, 0x72, 0x79, 0x69, 0x42, 0x72, 0x69, 0x74, 0x44, 0x69, 0x61, 0x6d, 0x6f,
		0x6e, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x35, 0x50, 0x6c, 0x75, 0x73,
		0x49, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x36, 0x53, 0x70,
		0x65, 0x65, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x58, 0x5a, 0x32, 0x4c, 0x69, 0x74, 0x65, 0x5a, 0x32,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x46, 0x35, 0x31, 0x69, 0x44, 0x61, 0x74, 0x61, 0x69, 0x44,
		0x69, 0x6e, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x36, 0x69, 0x44, 0x72,
		0x6f, 0x69, 0x64, 0x41, 0x50, 0x41, 0x43, 0x48, 0x45, 0x20, 0x47, 0x36, 0x41, 0x70, 0x61, 0x63,
		0x68, 0x65, 0x20, 0x47, 0x36, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x20, 0x56, 0x35, 0x42, 0x61, 0x72,
		0x6c, 0x20, 0x58, 0x37, 0x69, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x31,
		0x30, 0x30, 0x69, 0x48, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x50, 0x43, 0x20, 0x31, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x50, 0x43, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x79, 0x62, 0x65, 0x72,
		0x20, 0x44, 0x4f, 0x47, 0x20, 0x34, 0x47, 0x43, 0x79, 0x62, 0x65, 0x72, 0x20, 0x44, 0x6f, 0x67,
		0x20, 0x34, 0x47, 0x4c, 0x69, 0x6b, 0x65, 0x5f, 0x48, 0x69, 0x31, 0x30, 0x5f, 0x32, 0x30, 0x32,
		0x31, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x48, 0x69, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x28, 0x32, 0x30, 0x24, 0x31, 0x29,
		0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x32, 0x30, 0x32,
		0x30, 0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x30, 0x29, 0x4f, 0x6e, 0x65, 0x5f, 0x20, 0x4c, 0x6f, 0x76, 0x65, 0x5f, 0x4f, 0x6e,
		0x65, 0x20, 0x4c, 0x6f, 0x76, 0x65, 0x54, 0x69, 0x61, 0x6e, 0x20, 0x50, 0x33, 0x30, 0x30, 0x30,
		0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x31, 0x31, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x54, 0x49, 0x54, 0x41, 0x4e, 0x20, 0x50, 0x31, 0x35, 0x30, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f,
		0x20, 0x35, 0x47, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x31, 0x35, 0x30, 0x30, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x54, 0x49, 0x54, 0x41, 0x4e, 0x20, 0x50, 0x34, 0x30, 0x30,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20,
		0x50, 0x34, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x38, 0x30, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x20,
		0x32, 0x30, 0x32, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x38, 0x30, 0x30, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x5f,
		0x50, 0x36, 0x30, 0x30, 0x30, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50,
		0x36, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x36,
		0x30, 0x30, 0x30, 0x4c, 0x69, 0x6b, 0x65, 0x5f, 0x33, 0x5f, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x6b,
		0x65, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50,
		0x52, 0x4f, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x6b,
		0x65, 0x20, 0x48, 0x69, 0x35, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x6b, 0x65,
		0x5f, 0x34, 0x55, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x34, 0x55, 0x69, 0x48, 0x75, 0x6e, 0x74, 0x5f,
		0x4c, 0x69, 0x6b, 0x65, 0x58, 0x33, 0x30, 0x30, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x53, 0x36,
		0x30, 0x5f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x32, 0x30, 0x31, 0x39,
		0x53, 0x36, 0x30, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x53, 0x36, 0x30, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
		0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x36, 0x30, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
		0x65, 0x72, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x32, 0x53, 0x36, 0x30, 0x20,
		0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x32, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x58, 0x4c, 0x69, 0x74, 0x65, 0x32, 0x30,
		0x32, 0x30, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32,
		0x31, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x5f, 0x58, 0x5f, 0x41, 0x70, 0x65, 0x58, 0x5f,
		0x32, 0x30, 0x32, 0x30, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x41, 0x70, 0x65, 0x58,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x5f, 0x58, 0x5f, 0x41,
		0x70, 0x65, 0x58, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x41, 0x70, 0x65, 0x58, 0x53,
		0x24, 0x31, 0x20, 0x41, 0x70, 0x65, 0x58, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x5f, 0x58, 0x41, 0x6c,
		0x69, 0x65, 0x6e, 0x20, 0x58, 0x53, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x30,
		0x32, 0x31, 0x53, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x53, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x41, 0x70, 0x65, 0x58, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x32, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x34, 0x47, 0x20, 0x32, 0x30, 0x32, 0x31, 0x53, 0x32, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x34, 0x47, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x24, 0x31, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x61, 0x6e, 0x64, 0x61,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x32, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31, 0x31,
		0x20, 0x50, 0x61, 0x6e, 0x64, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32,
		0x29, 0x69, 0x4b, 0x6f, 0x4d, 0x6f, 0x69, 0x4b, 0x6f, 0x6e, 0x69, 0x4b, 0x6f, 0x6e, 0x69, 0x61,
		0x4a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x69, 0x4c, 0x41, 0x69, 0x4c,
		0x65, 0x70, 0x6f, 0x69, 0x4c, 0x69, 0x66, 0x65, 0x4b, 0x33, 0x31, 0x30, 0x32, 0x20, 0x57, 0x49,
		0x46, 0x49, 0x4b, 0x33, 0x31, 0x30, 0x32, 0x20, 0x57, 0x69, 0x46, 0x69, 0x57, 0x54, 0x41, 0x42,
		0x20, 0x24, 0x31, 0x5a, 0x65, 0x64, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x46, 0x69, 0x76,
		0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x69, 0x76, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x69,
		0x4d, 0x49, 0x56, 0x69, 0x6e, 0x33, 0x20, 0x53, 0x56, 0x69, 0x6e, 0x20, 0x33, 0x20, 0x53, 0x56,
		0x69, 0x6e, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x6e, 0x20, 0x33, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x56, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x4d, 0x65, 0x73, 0x73, 0x69, 0x20, 0x24, 0x31,
		0x69, 0x4d, 0x61, 0x6e, 0x69, 0x4d, 0x61, 0x72, 0x73, 0x49, 0x4d, 0x41, 0x52, 0x53, 0x20, 0x56,
		0x45, 0x47, 0x41, 0x20, 0x58, 0x37, 0x56, 0x65, 0x67, 0x61, 0x20, 0x58, 0x37, 0x56, 0x49, 0x56,
		0x49, 0x5f, 0x38, 0x56, 0x49, 0x56, 0x49, 0x20, 0x38, 0x4d, 0x49, 0x4c, 0x4b, 0x59, 0x5f, 0x57,
		0x41, 0x59, 0x5f, 0x4d, 0x32, 0x4d, 0x69, 0x6c, 0x6b, 0x79, 0x20, 0x57, 0x61, 0x79, 0x20, 0x4d,
		0x32, 0x69, 0x4d, 0x75, 0x7a, 0x6d, 0x75, 0x50, 0x41, 0x44, 0x20, 0x24, 0x31, 0x69, 0x4e, 0x4f,
		0x56, 0x41, 0x69, 0x4e, 0x61, 0x76, 0x69, 0x49, 0x54, 0x50, 0x2d, 0x58, 0x44, 0x38, 0x30, 0x4c,
		0x55, 0x2b, 0x20, 0x50, 0x61, 0x64, 0x38, 0x69, 0x4e, 0x65, 0x77, 0x56, 0x33, 0x43, 0x56, 0x33,
		0x2d, 0x45, 0x56, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x37, 0x41, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x36, 0x69, 0x4e, 0x6f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x69, 0x4e, 0x4f, 0x20, 0x53, 0x43, 0x4f, 0x55, 0x54, 0x20, 0x32, 0x53, 0x63, 0x6f, 0x75, 0x74,
		0x20, 0x32, 0x53, 0x47, 0x49, 0x4e, 0x4f, 0x36, 0x69, 0x4e, 0x4f, 0x20, 0x53, 0x39, 0x69, 0x4f,
		0x63, 0x65, 0x61, 0x6e, 0x58, 0x37, 0x53, 0x2d, 0x54, 0x58, 0x38, 0x20, 0x6d, 0x69, 0x6e, 0x69,
		0x20, 0x70, 0x72, 0x6f, 0x58, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x58,
		0x38, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x58, 0x37, 0x53,
		0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x69, 0x4f, 0x75, 0x74, 0x64, 0x6f, 0x6f, 0x72, 0x69, 0x50,
		0x45, 0x47, 0x54, 0x4f, 0x50, 0x49, 0x50, 0x45, 0x47, 0x54, 0x4f, 0x50, 0x69, 0x50, 0x72, 0x6f,
		0x49, 0x50, 0x52, 0x4f, 0x5f, 0x4b, 0x32, 0x5f, 0x33, 0x47, 0x4b, 0x32, 0x20, 0x33, 0x47, 0x53,
		0x35, 0x30, 0x31, 0x41, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x35, 0x30, 0x31, 0x41, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x35, 0x2e, 0x30, 0x53, 0x4b, 0x79, 0x6c, 0x69,
		0x6e, 0x20, 0x24, 0x31, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x35, 0x30, 0x69, 0x4b, 0x79, 0x6c, 0x69,
		0x6e, 0x20, 0x35, 0x30, 0x69, 0x4b, 0x59, 0x4c, 0x49, 0x4e, 0x34, 0x30, 0x4b, 0x79, 0x6c, 0x69,
		0x6e, 0x20, 0x34, 0x30, 0x4f, 0x70, 0x61, 0x6c, 0x20, 0x34, 0x53, 0x4a, 0x61, 0x64, 0x65, 0x20,
		0x24, 0x31, 0x73, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x35, 0x53, 0x5f, 0x50, 0x72, 0x6f, 0x41, 0x6d,
		0x62, 0x65, 0x72, 0x20, 0x35, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x36,
		0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x36, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x37, 0x53, 0x41, 0x6d,
		0x62, 0x65, 0x72, 0x20, 0x37, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x38, 0x73, 0x20, 0x50, 0x72,
		0x6f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6d, 0x62,
		0x65, 0x72, 0x38, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x38, 0x53, 0x41, 0x6d, 0x62, 0x65,
		0x72, 0x38, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x38, 0x42, 0x65, 0x6e, 0x6e, 0x79, 0x31, 0x30,
		0x42, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x31, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6e, 0x69, 0x78,
		0x35, 0x30, 0x53, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x35, 0x30, 0x53, 0x52,
		0x75, 0x62, 0x79, 0x35, 0x53, 0x52, 0x75, 0x62, 0x79, 0x20, 0x35, 0x53, 0x53, 0x41, 0x4d, 0x42,
		0x41, 0x36, 0x35, 0x53, 0x53, 0x61, 0x6d, 0x62, 0x61, 0x20, 0x36, 0x35, 0x53, 0x5a, 0x61, 0x66,
		0x69, 0x72, 0x6f, 0x57, 0x61, 0x76, 0x65, 0x20, 0x34, 0x2e, 0x30, 0x20, 0x49, 0x49, 0x57, 0x61,
		0x76, 0x65, 0x20, 0x35, 0x2e, 0x30, 0x4d, 0x45, 0x47, 0x41, 0x37, 0x4d, 0x65, 0x67, 0x61, 0x20,
		0x37, 0x69, 0x51, 0x26, 0x54, 0x69, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x46, 0x72, 0x6f,
		0x67, 0x20, 0x4f, 0x6e, 0x65, 0x69, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x69, 0x52, 0x6f, 0x6c, 0x61,
		0x44, 0x58, 0x37, 0x35, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x52, 0x75, 0x6c, 0x75, 0x69, 0x53,
		0x57, 0x41, 0x47, 0x41, 0x63, 0x74, 0x69, 0x76, 0x4b, 0x72, 0x6f, 0x6e, 0x6f, 0x73, 0x4c, 0x79,
		0x6e, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x4e, 0x65, 0x6d, 0x65, 0x73, 0x69, 0x73, 0x69, 0x53, 0x61,
		0x66, 0x65, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x24, 0x31, 0x2e, 0x52, 0x47, 0x69, 0x53,
		0x74, 0x61, 0x72, 0x69, 0x54, 0x65, 0x6c, 0x57, 0x36, 0x35, 0x30, 0x32, 0x4c, 0x36, 0x35, 0x30,
		0x33, 0x57, 0x35, 0x35, 0x30, 0x35, 0x41, 0x35, 0x30, 0x37, 0x4c, 0x56, 0x56, 0x35, 0x32, 0x20,
		0x4c, 0x54, 0x45, 0x41, 0x36, 0x33, 0x32, 0x57, 0x41, 0x30, 0x34, 0x41, 0x36, 0x36, 0x33, 0x4c,
		0x41, 0x30, 0x35, 0x73, 0x53, 0x36, 0x36, 0x37, 0x4c, 0x4e, 0x53, 0x32, 0x34, 0x53, 0x32, 0x33,
		0x53, 0x36, 0x38, 0x31, 0x4c, 0x4e, 0x53, 0x32, 0x33, 0x2b, 0x41, 0x36, 0x36, 0x32, 0x4c, 0x4d,
		0x41, 0x36, 0x30, 0x73, 0x41, 0x36, 0x36, 0x32, 0x4c, 0x41, 0x36, 0x36, 0x37, 0x4c, 0x41, 0x36,
		0x36, 0x35, 0x4c, 0x41, 0x37, 0x30, 0x57, 0x35, 0x35, 0x30, 0x34, 0x50, 0x33, 0x33, 0x57, 0x35,
		0x35, 0x30, 0x33, 0x57, 0x35, 0x30, 0x30, 0x32, 0x41, 0x35, 0x37, 0x31, 0x57, 0x41, 0x33, 0x37,
		0x41, 0x36, 0x33, 0x31, 0x4c, 0x41, 0x35, 0x30, 0x37, 0x4c, 0x4d, 0x41, 0x43, 0x35, 0x30, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x35, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x36, 0x36, 0x33, 0x4c, 0x53, 0x36, 0x36, 0x31, 0x57, 0x41, 0x35,
		0x35, 0x31, 0x4c, 0x50, 0x31, 0x35, 0x50, 0x35, 0x35, 0x32, 0x57, 0x50, 0x31, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x50, 0x35, 0x35, 0x31, 0x57, 0x50, 0x31, 0x37, 0x41, 0x36, 0x36, 0x36, 0x4c, 0x50,
		0x35, 0x35, 0x50, 0x36, 0x36, 0x33, 0x4c, 0x50, 0x35, 0x35, 0x2b, 0x50, 0x36, 0x36, 0x35, 0x4c,
		0x50, 0x35, 0x35, 0x54, 0x50, 0x36, 0x36, 0x31, 0x4e, 0x50, 0x35, 0x35, 0x20, 0x35, 0x47, 0x57,
		0x35, 0x30, 0x30, 0x33, 0x53, 0x33, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4c, 0x35, 0x35, 0x30,
		0x32, 0x41, 0x34, 0x34, 0x20, 0x41, 0x69, 0x72, 0x4c, 0x35, 0x35, 0x30, 0x35, 0x41, 0x34, 0x37,
		0x57, 0x35, 0x30, 0x30, 0x36, 0x58, 0x41, 0x35, 0x31, 0x30, 0x57, 0x41, 0x31, 0x36, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4c, 0x36, 0x30, 0x30, 0x36, 0x41, 0x34, 0x38, 0x41, 0x35, 0x37, 0x31, 0x4c,
		0x41, 0x32, 0x36, 0x53, 0x36, 0x36, 0x36, 0x4c, 0x4e, 0x52, 0x53, 0x34, 0x50, 0x36, 0x35, 0x31,
		0x57, 0x50, 0x33, 0x37, 0x41, 0x33, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x38, 0x31,
		0x4c, 0x50, 0x33, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x36, 0x35, 0x30, 0x31, 0x50, 0x33, 0x36,
		0x50, 0x36, 0x36, 0x31, 0x57, 0x50, 0x33, 0x38, 0x4c, 0x35, 0x30, 0x30, 0x37, 0x41, 0x32, 0x34,
		0x41, 0x35, 0x31, 0x31, 0x4c, 0x50, 0x41, 0x32, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x35, 0x31,
		0x32, 0x57, 0x41, 0x35, 0x31, 0x33, 0x57, 0x41, 0x31, 0x38, 0x73, 0x4c, 0x36, 0x30, 0x30, 0x33,
		0x50, 0x41, 0x35, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x36, 0x30, 0x30, 0x32, 0x50, 0x41, 0x35,
		0x31, 0x31, 0x4c, 0x51, 0x41, 0x32, 0x33, 0x53, 0x41, 0x32, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4c,
		0x35, 0x30, 0x30, 0x32, 0x50, 0x41, 0x32, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x35, 0x30, 0x30,
		0x32, 0x41, 0x32, 0x35, 0x41, 0x35, 0x30, 0x37, 0x4c, 0x53, 0x4c, 0x35, 0x35, 0x30, 0x33, 0x41,
		0x34, 0x36, 0x41, 0x36, 0x36, 0x31, 0x4c, 0x41, 0x34, 0x39, 0x57, 0x36, 0x30, 0x30, 0x34, 0x50,
		0x41, 0x35, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x36, 0x36, 0x31, 0x57, 0x50, 0x41, 0x35, 0x38,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x36, 0x36, 0x31, 0x57, 0x41, 0x36, 0x33, 0x31, 0x57, 0x41, 0x35,
		0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x36, 0x30, 0x30, 0x34, 0x4c, 0x41, 0x43, 0x36, 0x30,
		0x57, 0x34, 0x30, 0x30, 0x31, 0x53, 0x56, 0x34, 0x31, 0x57, 0x34, 0x30, 0x30, 0x31, 0x41, 0x43,
		0x31, 0x33, 0x57, 0x34, 0x30, 0x30, 0x32, 0x41, 0x31, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57,
		0x34, 0x30, 0x30, 0x33, 0x41, 0x31, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x35, 0x36, 0x20, 0x4c,
		0x54, 0x45, 0x57, 0x36, 0x30, 0x30, 0x31, 0x50, 0x33, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57,
		0x35, 0x30, 0x30, 0x31, 0x50, 0x57, 0x36, 0x30, 0x30, 0x33, 0x41, 0x36, 0x31, 0x31, 0x57, 0x50,
		0x36, 0x38, 0x33, 0x4c, 0x50, 0x34, 0x30, 0x2b, 0x4c, 0x36, 0x30, 0x30, 0x35, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x20, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x50, 0x36, 0x38, 0x32, 0x4c, 0x50, 0x33, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x36,
		0x35, 0x31, 0x4c, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x53, 0x4c, 0x36, 0x35, 0x30,
		0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x36,
		0x35, 0x30, 0x32, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x53,
		0x36, 0x36, 0x31, 0x4c, 0x47, 0x50, 0x31, 0x30, 0x58, 0x32, 0x30, 0x31, 0x39, 0x69, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x24, 0x31, 0x69, 0x74, 0x24, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x74, 0x65, 0x6c, 0x20, 0x69,
		0x74, 0x31, 0x37, 0x30, 0x31, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x69, 0x74, 0x65, 0x6c, 0x20, 0x50, 0x31, 0x30, 0x30, 0x30, 0x31, 0x4c, 0x69, 0x74, 0x65, 0x6c,
		0x20, 0x57, 0x37, 0x30, 0x30, 0x31, 0x4b, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x31, 0x69, 0x74,
		0x65, 0x6c, 0x20, 0x57, 0x37, 0x30, 0x30, 0x32, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62,
		0x20, 0x31, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x24, 0x31,
		0x69, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x69, 0x56, 0x41,
		0x4c, 0x61, 0x6d, 0x63, 0x79, 0x20, 0x24, 0x31, 0x69, 0x56, 0x69, 0x65, 0x77, 0x37, 0x34, 0x34,
		0x54, 0x50, 0x43, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x37, 0x34, 0x34, 0x54, 0x50, 0x43, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x69, 0x56, 0x6f, 0x6f, 0x4d, 0x69, 0x49, 0x6e, 0x6e, 0x65, 0x6c, 0x6f, 0x5f,
		0x31, 0x49, 0x6e, 0x6e, 0x65, 0x6c, 0x6f, 0x20, 0x31, 0x69, 0x56, 0x20, 0x35, 0x30, 0x35, 0x4d,
		0x65, 0x20, 0x31, 0x69, 0x32, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x69, 0x32, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x69, 0x32, 0x4d, 0x65, 0x20, 0x31, 0x2b, 0x4d, 0x65, 0x20, 0x24, 0x31, 0x69, 0x57, 0x61,
		0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x58, 0x54, 0x65, 0x63, 0x68, 0x69, 0x59, 0x6f, 0x75, 0x69,
		0x5a, 0x6f, 0x74, 0x72, 0x6f, 0x6e, 0x4d, 0x49, 0x37, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x42,
		0x65, 0x74, 0x61, 0x4d, 0x49, 0x37, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x69,
		0x62, 0x6f, 0x77, 0x69, 0x6e, 0x69, 0x6e, 0x6f, 0x76, 0x6f, 0x49, 0x36, 0x31, 0x38, 0x20, 0x41,
		0x70, 0x70, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x2b, 0x69, 0x76, 0x76, 0x69, 0x69, 0x76, 0x76, 0x69,
		0x20, 0x50, 0x36, 0x30, 0x5f, 0x58, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x30,
		0x2d, 0x58, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6b, 0x69, 0x64, 0x69, 0x62, 0x79, 0x4b,
		0x49, 0x44, 0x49, 0x42, 0x59, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x61, 0x6e, 0x49,
		0x54, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x58, 0x35, 0x51, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x6d, 0x69, 0x70, 0x6f, 0x6d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x28, 0x50, 0x4c, 0x29, 0x43, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x69, 0x78,
		0x43, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x69, 0x78, 0x43, 0x75, 0x62, 0x65, 0x20,
		0x4c, 0x54, 0x45, 0x46, 0x55, 0x4e, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x55,
		0x4e, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x55, 0x4e, 0x20, 0x24, 0x31, 0x48, 0x61,
		0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x58, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x61, 0x6d, 0x6d,
		0x65, 0x72, 0x20, 0x41, 0x78, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x6d, 0x79, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x41, 0x58, 0x45, 0x20, 0x33, 0x47, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41,
		0x78, 0x65, 0x20, 0x33, 0x47, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x78, 0x65, 0x20,
		0x4d, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x55, 0x4e, 0x41, 0x5f, 0x49, 0x49, 0x4c, 0x75, 0x6e, 0x61,
		0x20, 0x49, 0x49, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x5f, 0x31, 0x38, 0x78, 0x39, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x31,
		0x38, 0x78, 0x39, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x5f, 0x34, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x31, 0x38, 0x78,
		0x39, 0x24, 0x31, 0x51, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x42, 0x45, 0x51, 0x2d, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x5f, 0x49, 0x49, 0x49, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x49, 0x49, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6d, 0x79, 0x54, 0x61, 0x62, 0x31, 0x30,
		0x49, 0x49, 0x6d, 0x79, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x6d, 0x79, 0x54,
		0x61, 0x62, 0x5f, 0x31, 0x30, 0x49, 0x49, 0x49, 0x6d, 0x79, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30,
		0x20, 0x49, 0x49, 0x49, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x5f, 0x37, 0x5f,
		0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x37, 0x22, 0x20, 0x33,
		0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x5f, 0x38, 0x5f, 0x4c, 0x54, 0x45,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x38, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x33,
		0x47, 0x6d, 0x79, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x6e, 0x4a, 0x6f, 0x79, 0x6e, 0x65, 0x6f,
		0x43, 0x6f, 0x72, 0x65, 0x4e, 0x31, 0x20, 0x47, 0x31, 0x45, 0x31, 0x2b, 0x45, 0x32, 0x6e, 0x6f,
		0x44, 0x52, 0x4f, 0x50, 0x4f, 0x55, 0x54, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4f, 0x6e, 0x65, 0x72,
		0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x32, 0x30, 0x30, 0x30, 0x5f, 0x30, 0x30, 0x30, 0x31, 0x37,
		0x30, 0x5f, 0x30, 0x30, 0x72, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x28, 0x47, 0x65, 0x6e,
		0x20, 0x31, 0x29, 0x74, 0x65, 0x58, 0x65, 0x74, 0x54, 0x4d, 0x2d, 0x39, 0x37, 0x34, 0x39, 0x58,
		0x2d, 0x70, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x37, 0x2e, 0x31, 0x20, 0x33, 0x47,
		0x54, 0x4d, 0x2d, 0x39, 0x37, 0x34, 0x36, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x37, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x38, 0x30, 0x35, 0x31, 0x58, 0x2d, 0x70,
		0x61, 0x64, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x38, 0x69, 0x20, 0x33, 0x47, 0x54, 0x4d,
		0x2d, 0x31, 0x30, 0x35, 0x38, 0x58, 0x2d, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x31, 0x30, 0x20,
		0x33, 0x47, 0x54, 0x4d, 0x2d, 0x38, 0x30, 0x34, 0x38, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x46,
		0x6f, 0x72, 0x63, 0x65, 0x20, 0x38, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x30, 0x35, 0x35,
		0x48, 0x44, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x39,
		0x37, 0x35, 0x38, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x31,
		0x30, 0x2e, 0x30, 0x22, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20,
		0x38, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x51, 0x55, 0x41,
		0x44, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x51, 0x75, 0x61,
		0x64, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20,
		0x51, 0x55, 0x41, 0x44, 0x20, 0x37, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x32, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70,
		0x61, 0x64, 0x20, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x20, 0x38, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70,
		0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47,
		0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x48, 0x49, 0x54, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61,
		0x64, 0x20, 0x48, 0x69, 0x74, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x20, 0x24, 0x31, 0x22, 0x54, 0x4d, 0x2d, 0x39, 0x37, 0x36, 0x37, 0x58, 0x2d, 0x70,
		0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x33,
		0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20,
		0x37, 0x2e, 0x33, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x30, 0x39, 0x39, 0x58, 0x2d,
		0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x37, 0x2e, 0x34, 0x22, 0x20, 0x33, 0x47,
		0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x37, 0x2e, 0x35, 0x22, 0x20,
		0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x38, 0x2e, 0x31, 0x22,
		0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x31, 0x30,
		0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x38, 0x35, 0x39, 0x58, 0x2d, 0x70,
		0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x38, 0x2e, 0x32, 0x22, 0x20, 0x33, 0x47, 0x54,
		0x4d, 0x2d, 0x37, 0x30, 0x34, 0x39, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x61, 0x64, 0x20, 0x54, 0x4d,
		0x2d, 0x37, 0x30, 0x34, 0x39, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x38, 0x38, 0x37, 0x4e,
		0x61, 0x76, 0x69, 0x50, 0x61, 0x64, 0x20, 0x54, 0x4d, 0x2d, 0x37, 0x38, 0x38, 0x37, 0x20, 0x33,
		0x47, 0x54, 0x4d, 0x2d, 0x38, 0x30, 0x36, 0x36, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x52, 0x61,
		0x70, 0x69, 0x64, 0x20, 0x38, 0x2e, 0x32, 0x22, 0x20, 0x34, 0x47, 0x54, 0x4d, 0x2d, 0x34, 0x35,
		0x30, 0x33, 0x58, 0x2d, 0x51, 0x75, 0x61, 0x64, 0x54, 0x4d, 0x2d, 0x35, 0x30, 0x30, 0x36, 0x58,
		0x2d, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x4d, 0x2d, 0x35, 0x30, 0x30, 0x37, 0x58, 0x2d, 0x53, 0x68,
		0x69, 0x6e, 0x65, 0x54, 0x4d, 0x5f, 0x35, 0x30, 0x31, 0x31, 0x58, 0x2d, 0x4f, 0x6d, 0x65, 0x67,
		0x61, 0x50, 0x61, 0x79, 0x20, 0x24, 0x31, 0x47, 0x50, 0x61, 0x79, 0x20, 0x35, 0x2e, 0x35, 0x22,
		0x20, 0x24, 0x31, 0x47, 0x54, 0x4d, 0x2d, 0x35, 0x37, 0x30, 0x32, 0x50, 0x61, 0x79, 0x20, 0x35,
		0x2e, 0x37, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x35, 0x37, 0x30, 0x33, 0x50, 0x61, 0x79,
		0x20, 0x35, 0x2e, 0x37, 0x22, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x4d, 0x2d, 0x35, 0x32, 0x30, 0x31,
		0x54, 0x4d, 0x2d, 0x34, 0x35, 0x31, 0x35, 0x58, 0x2d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x2d,
		0x4d, 0x61, 0x78, 0x69, 0x20, 0x32, 0x54, 0x4d, 0x2d, 0x34, 0x30, 0x37, 0x31, 0x58, 0x2d, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x54, 0x4d, 0x2d, 0x34, 0x39, 0x38, 0x32, 0x69, 0x58, 0x2d, 0x4d, 0x61,
		0x78, 0x69, 0x69, 0x58, 0x2d, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x4d, 0x2d, 0x35, 0x30, 0x31, 0x30,
		0x58, 0x2d, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x54, 0x4d, 0x2d, 0x34, 0x30, 0x38, 0x32, 0x52,
		0x58, 0x2d, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x51, 0x75, 0x61, 0x64, 0x54, 0x4d, 0x2d,
		0x35, 0x35, 0x30, 0x33, 0x58, 0x2d, 0x4d, 0x61, 0x67, 0x65, 0x54, 0x4d, 0x2d, 0x35, 0x35, 0x30,
		0x38, 0x58, 0x2d, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x58, 0x2d, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x58,
		0x2d, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x2d, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x58, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x58, 0x2d, 0x50, 0x6f, 0x69, 0x6e, 0x74,
		0x76, 0x2d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x58, 0x53, 0x20, 0x50, 0x72, 0x6f, 0xc3, 0xb6,
		0x77, 0x6e, 0x46, 0x75, 0x6e, 0x20, 0x24, 0x31, 0x46, 0x75, 0x6e, 0x20, 0x35, 0x20, 0x34, 0x47,
		0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x75, 0x6e, 0x20, 0x56, 0x61, 0x6c, 0x75,
		0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20,
		0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45,
		0x41, 0x73, 0x70, 0x69, 0x72, 0x65, 0x20, 0x45, 0x35, 0x2d, 0x34, 0x32, 0x31, 0x47, 0x41, 0x73,
		0x70, 0x69, 0x72, 0x65, 0x20, 0x45, 0x35, 0x2d, 0x35, 0x31, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x31,
		0x30, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x77, 0x61, 0x72, 0x65, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x77,
		0x61, 0x72, 0x65, 0x20, 0x31, 0x35, 0x20, 0x52, 0x33, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x77, 0x61,
		0x72, 0x65, 0x20, 0x31, 0x37, 0x20, 0x52, 0x34, 0x41, 0x72, 0x65, 0x61, 0x2d, 0x35, 0x31, 0x6d,
		0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x20, 0x24, 0x31, 0x4b, 0x35, 0x30, 0x49, 0x4e, 0x4b, 0x35,
		0x34, 0x4c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x42, 0x6f,
		0x6f, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x5a, 0x65, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x58, 0x35,
		0x35, 0x30, 0x4c, 0x42, 0x58, 0x35, 0x35, 0x33, 0x4d, 0x41, 0x58, 0x35, 0x35, 0x35, 0x4c, 0x4e,
		0x58, 0x35, 0x35, 0x36, 0x55, 0x51, 0x4b, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20,
		0x45, 0x34, 0x33, 0x30, 0x30, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x6f, 0x6e, 0x20, 0x33, 0x35,
		0x34, 0x31, 0x58, 0x50, 0x53, 0x20, 0x31, 0x35, 0x20, 0x39, 0x35, 0x33, 0x30, 0x58, 0x50, 0x53,
		0x20, 0x31, 0x35, 0x20, 0x39, 0x35, 0x35, 0x30, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x20, 0x50,
		0x72, 0x65, 0x73, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x43, 0x51, 0x36, 0x31, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x43, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x20, 0x50,
		0x72, 0x65, 0x73, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x43, 0x51, 0x36, 0x31, 0x48, 0x50, 0x20, 0x50,
		0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x78, 0x32, 0x20, 0x44, 0x65, 0x74, 0x61, 0x63,
		0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x78, 0x32,
		0x48, 0x50, 0x20, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x20, 0x31, 0x35, 0x2d, 0x62, 0x73, 0x30,
		0x78, 0x78, 0x31, 0x35, 0x20, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x20, 0x50, 0x43, 0x48, 0x50,
		0x20, 0x45, 0x4e, 0x56, 0x59, 0x20, 0x78, 0x33, 0x36, 0x30, 0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65,
		0x72, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x31, 0x35, 0x2d, 0x62, 0x70, 0x30, 0x78, 0x78, 0x45,
		0x4e, 0x56, 0x59, 0x20, 0x78, 0x33, 0x36, 0x30, 0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74,
		0x69, 0x62, 0x6c, 0x65, 0x20, 0x50, 0x43, 0x48, 0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69,
		0x6f, 0x6e, 0x20, 0x64, 0x76, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20,
		0x50, 0x43, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x64, 0x76, 0x36, 0x48, 0x50,
		0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f,
		0x6f, 0x6b, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x48, 0x50, 0x20, 0x53, 0x70, 0x65,
		0x63, 0x74, 0x72, 0x65, 0x20, 0x78, 0x33, 0x36, 0x30, 0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
		0x74, 0x69, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x65, 0x20, 0x78, 0x33, 0x36,
		0x30, 0x48, 0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x6c, 0x6c,
		0x2d, 0x69, 0x6e, 0x2d, 0x4f, 0x6e, 0x65, 0x20, 0x32, 0x34, 0x2d, 0x72, 0x30, 0x78, 0x78, 0x50,
		0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x34, 0x2d, 0x72, 0x30, 0x78, 0x78, 0x20,
		0x41, 0x6c, 0x6c, 0x2d, 0x69, 0x6e, 0x2d, 0x4f, 0x6e, 0x65, 0x20, 0x44, 0x65, 0x73, 0x6b, 0x74,
		0x6f, 0x70, 0x20, 0x50, 0x43, 0x32, 0x33, 0x2d, 0x66, 0x33, 0x36, 0x34, 0x50, 0x61, 0x76, 0x69,
		0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x32, 0x33, 0x2d, 0x66, 0x33, 0x36, 0x34, 0x20, 0x41, 0x6c, 0x6c, 0x2d, 0x69, 0x6e, 0x2d, 0x4f,
		0x6e, 0x65, 0x20, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x20, 0x50, 0x43, 0x54, 0x68, 0x69,
		0x6e, 0x6b, 0x50, 0x61, 0x64, 0x20, 0x48, 0x65, 0x6c, 0x69, 0x78, 0x20, 0x33, 0x37, 0x30, 0x32,
		0x47, 0x35, 0x30, 0x2d, 0x38, 0x30, 0x49, 0x64, 0x65, 0x61, 0x70, 0x61, 0x64, 0x20, 0x33, 0x31,
		0x30, 0x2d, 0x31, 0x35, 0x49, 0x53, 0x4b, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x59, 0x37,
		0x32, 0x30, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x34, 0x22, 0x20, 0x43,
		0x68, 0x65, 0x72, 0x72, 0x79, 0x20, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x74,
		0x69, 0x67, 0x65, 0x20, 0x54, 0x48, 0x2d, 0x33, 0x36, 0x30, 0x52, 0x31, 0x32, 0x2e, 0x33, 0x32,
		0x43, 0x54, 0x57, 0x46, 0x42, 0x4d, 0x44, 0x2f, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74,
		0x65, 0x20, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x31, 0x47, 0x69,
		0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x32, 0x47, 0x69, 0x50, 0x6f, 0x64,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x33, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x34, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x35,
		0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x36, 0x69, 0x50, 0x6f, 0x64,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x37, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x43, 0x6f, 0x77, 0x6f, 0x6e, 0x46, 0x69, 0x69, 0x4f, 0x4d, 0x31, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x44, 0x4b, 0x75, 0x47, 0x6f, 0x75, 0x4d, 0x69, 0x63, 0x72,
		0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x5a, 0x75, 0x6e, 0x65, 0x48, 0x44, 0x5a, 0x75, 0x6e, 0x65,
		0x20, 0x48, 0x44, 0x4f, 0x69, 0x6c, 0x73, 0x6b, 0x79, 0x53, 0x4f, 0x4e, 0x4f, 0x53, 0x52, 0x6f,
		0x61, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x68, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x76, 0x65, 0x50,
		0x6c, 0x61, 0x79, 0x3a, 0x24, 0x31, 0x4f, 0x6e, 0x65, 0x53, 0x4c, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x34, 0x2e, 0x30, 0x59, 0x50, 0x2d, 0x47,
		0x37, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20,
		0x35, 0x2e, 0x30, 0x59, 0x50, 0x2d, 0x47, 0x53, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x33, 0x2e, 0x36, 0x59, 0x50, 0x2d, 0x47, 0x49, 0x31,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x34, 0x2e,
		0x32, 0x59, 0x50, 0x2d, 0x47, 0x50, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x65, 0x72, 0x20, 0x35, 0x2e, 0x38, 0x59, 0x50, 0x2d, 0x47, 0x35, 0x30, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x35, 0x30, 0x59, 0x50,
		0x2d, 0x47, 0x42, 0x37, 0x30, 0x44, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x65, 0x72, 0x20, 0x37, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x68, 0x61, 0x6e, 0x6c,
		0x69, 0x6e, 0x67, 0x53, 0x68, 0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x4d, 0x36, 0x53, 0x75,
		0x72, 0x66, 0x61, 0x6e, 0x73, 0x53, 0x79, 0x6c, 0x76, 0x61, 0x6e, 0x69, 0x61, 0x57, 0x69, 0x7a,
		0x7a, 0x41, 0x4b, 0x49, 0x52, 0x41, 0x41, 0x4b, 0x49, 0x52, 0x41, 0x20, 0x53, 0x68, 0x65, 0x6c,
		0x6c, 0x41, 0x4d, 0x43, 0x56, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x42, 0x42, 0x4b, 0x20, 0x73,
		0x68, 0x65, 0x6c, 0x6c, 0x44, 0x45, 0x58, 0x50, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x44, 0x69,
		0x67, 0x6d, 0x61, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x45, 0x43, 0x4f, 0x4e, 0x20, 0x53, 0x68,
		0x65, 0x6c, 0x6c, 0x48, 0x69, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4a, 0x56, 0x43, 0x20, 0x53,
		0x68, 0x65, 0x6c, 0x6c, 0x4b, 0x76, 0x61, 0x6e, 0x74, 0x4b, 0x76, 0x61, 0x6e, 0x74, 0x20, 0x53,
		0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x62, 0x65, 0x6e, 0x4c, 0x65, 0x62, 0x65, 0x6e, 0x20, 0x53,
		0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x66, 0x66, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x6f,
		0x76, 0x69, 0x65, 0x77, 0x4c, 0x6f, 0x76, 0x69, 0x65, 0x77, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c,
		0x4c, 0x55, 0x4d, 0x55, 0x53, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4d, 0x79, 0x73, 0x74, 0x65,
		0x72, 0x79, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4e, 0x6f, 0x76, 0x65, 0x78, 0x20, 0x73, 0x68,
		0x65, 0x6c, 0x6c, 0x54, 0x43, 0x4c, 0x2f, 0x52, 0x43, 0x41, 0x2d, 0x53, 0x74, 0x61, 0x72, 0x77,
		0x69, 0x6e, 0x64, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x53, 0x75, 0x70, 0x72, 0x61, 0x20, 0x53,
		0x68, 0x65, 0x6c, 0x6c, 0x54, 0x43, 0x4c, 0x2f, 0x54, 0x43, 0x4c, 0x2d, 0x54, 0x65, 0x6c, 0x65,
		0x66, 0x75, 0x6e, 0x6b, 0x65, 0x6e, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x54, 0x43, 0x4c, 0x2f,
		0x54, 0x48, 0x4f, 0x4d, 0x2d, 0x59, 0x75, 0x6e, 0x6f, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x46,
		0x53, 0x2d, 0x41, 0x52, 0x53, 0x2d, 0x30, 0x31, 0x42, 0x4c, 0x47, 0x45, 0x2f, 0x58, 0x69, 0x61,
		0x6e, 0x59, 0x6f, 0x75, 0x2f, 0x41, 0x57, 0x4f, 0x58, 0x41, 0x58, 0x45, 0x4e, 0x4c, 0x47, 0x45,
		0x2f, 0x41, 0x54, 0x4d, 0x41, 0x43, 0x41, 0x2f, 0x41, 0x58, 0x45, 0x4e, 0x41, 0x59, 0x41, 0x41,
		0x69, 0x72, 0x74, 0x69, 0x65, 0x73, 0x4c, 0x47, 0x45, 0x2f, 0x53, 0x51, 0x59, 0x2f, 0x52, 0x43,
		0x41, 0x41, 0x6c, 0x74, 0x65, 0x63, 0x68, 0x20, 0x55, 0x45, 0x43, 0x41, 0x74, 0x6c, 0x61, 0x6e,
		0x74, 0x69, 0x63, 0x20, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x73, 0x41, 0x54, 0x56,
		0x49, 0x4f, 0x35, 0x35, 0x44, 0x31, 0x36, 0x32, 0x30, 0x42, 0x61, 0x6e, 0x67, 0x4f, 0x6c, 0x75,
		0x66, 0x73, 0x65, 0x6e, 0x42, 0x61, 0x6e, 0x67, 0x6f, 0x6c, 0x75, 0x66, 0x73, 0x65, 0x6e, 0x42,
		0x65, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x43, 0x2d, 0x36, 0x35, 0x43, 0x55, 0x47,
		0x38, 0x30, 0x35, 0x32, 0x45, 0x43, 0x4c, 0x41, 0x59, 0x54, 0x4f, 0x4e, 0x43, 0x65, 0x63, 0x6f,
		0x74, 0x65, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x45,
		0x64, 0x69, 0x73, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x43, 0x4e, 0x56, 0x30,
		0x30, 0x31, 0x4c, 0x47, 0x45, 0x2f, 0x53, 0x49, 0x4c, 0x49, 0x43, 0x4f, 0x4e, 0x50, 0x4c, 0x41,
		0x59, 0x45, 0x52, 0x2f, 0x44, 0x49, 0x4a, 0x49, 0x54, 0x53, 0x55, 0x44, 0x49, 0x4b, 0x4f, 0x4d,
		0x44, 0x49, 0x4f, 0x52, 0x41, 0x44, 0x4d, 0x4d, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x62, 0x6f, 0x78,
		0x4c, 0x47, 0x45, 0x2f, 0x4b, 0x4f, 0x4e, 0x4b, 0x41, 0x2f, 0x44, 0x59, 0x4f, 0x4e, 0x53, 0x4d,
		0x41, 0x52, 0x54, 0x2d, 0x33, 0x32, 0x2d, 0x58, 0x2d, 0x45, 0x4f, 0x53, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x33, 0x32, 0x20, 0x58, 0x2d, 0x45, 0x4f, 0x53, 0x45, 0x41, 0x53, 0x20, 0x45, 0x6c,
		0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x52, 0x4f, 0x4e, 0x49, 0x41,
		0x45, 0x64, 0x65, 0x6e, 0x77, 0x6f, 0x6f, 0x64, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x6f, 0x6c,
		0x61, 0x6e, 0x64, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x4c, 0x55, 0x43, 0x4b, 0x24,
		0x31, 0x20, 0x54, 0x56, 0x46, 0x26, 0x55, 0x47, 0x6f, 0x47, 0x45, 0x4e, 0x47, 0x37, 0x48, 0x4f,
		0x46, 0x45, 0x52, 0x4c, 0x45, 0x35, 0x35, 0x58, 0x37, 0x30, 0x30, 0x30, 0x55, 0x48, 0x61, 0x6e,
		0x73, 0x65, 0x61, 0x74, 0x69, 0x63, 0x33, 0x32, 0x41, 0x33, 0x35, 0x45, 0x45, 0x56, 0x53, 0x34,
		0x30, 0x41, 0x33, 0x35, 0x45, 0x45, 0x56, 0x53, 0x35, 0x30, 0x41, 0x44, 0x45, 0x56, 0x54, 0x4f,
		0x4f, 0x4c, 0x35, 0x30, 0x41, 0x35, 0x33, 0x46, 0x45, 0x56, 0x53, 0x35, 0x30, 0x41, 0x36, 0x38,
		0x33, 0x46, 0x45, 0x56, 0x53, 0x35, 0x35, 0x41, 0x36, 0x31, 0x30, 0x30, 0x45, 0x45, 0x35, 0x35,
		0x41, 0x36, 0x39, 0x46, 0x45, 0x56, 0x53, 0x35, 0x35, 0x55, 0x36, 0x32, 0x51, 0x47, 0x41, 0x56,
		0x54, 0x35, 0x30, 0x41, 0x36, 0x35, 0x30, 0x32, 0x45, 0x41, 0x35, 0x30, 0x41, 0x36, 0x30, 0x47,
		0x45, 0x56, 0x53, 0x37, 0x35, 0x55, 0x39, 0x4b, 0x41, 0x41, 0x54, 0x4d, 0x49, 0x43, 0x41, 0x4c,
		0x49, 0x44, 0x56, 0x42, 0x36, 0x38, 0x38, 0x36, 0x34, 0x39, 0x44, 0x32, 0x39, 0x30, 0x30, 0x48,
		0x6f, 0x74, 0x65, 0x6c, 0x48, 0x4d, 0x53, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x4d, 0x53, 0x2d,
		0x31, 0x30, 0x30, 0x30, 0x53, 0x46, 0x56, 0x50, 0x34, 0x30, 0x30, 0x30, 0x54, 0x46, 0x56, 0x50,
		0x2d, 0x34, 0x30, 0x30, 0x30, 0x54, 0x48, 0x47, 0x53, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x47,
		0x53, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x44, 0x52, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48,
		0x44, 0x52, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x44, 0x52, 0x34, 0x30, 0x30, 0x30, 0x54,
		0x48, 0x44, 0x52, 0x2d, 0x34, 0x30, 0x30, 0x30, 0x54, 0x49, 0x6b, 0x65, 0x61, 0x49, 0x6e, 0x74,
		0x65, 0x6b, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x6f, 0x41, 0x46, 0x54, 0x53, 0x4f, 0x30, 0x30,
		0x31, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4b, 0x55, 0x42, 0x4f, 0x33, 0x32,
		0x44, 0x31, 0x36, 0x32, 0x30, 0x4b, 0x65, 0x6e, 0x64, 0x6f, 0x4b, 0x79, 0x64, 0x6f, 0x73, 0x58,
		0x55, 0x34, 0x33, 0x57, 0x54, 0x31, 0x38, 0x30, 0x4e, 0x34, 0x33, 0x4c, 0x4a, 0x36, 0x31, 0x34,
		0x56, 0x2d, 0x5a, 0x41, 0x35, 0x35, 0x53, 0x4b, 0x38, 0x35, 0x30, 0x56, 0x2d, 0x5a, 0x41, 0x4b,
		0x45, 0x59, 0x30, 0x30, 0x30, 0x30, 0x32, 0x31, 0x33, 0x46, 0x31, 0x7a, 0x4b, 0x45, 0x59, 0x30,
		0x30, 0x30, 0x30, 0x32, 0x31, 0x33, 0x46, 0x4b, 0x45, 0x59, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
		0x24, 0x31, 0x4c, 0x4d, 0x32, 0x31, 0x55, 0x33, 0x32, 0x4c, 0x4d, 0x4c, 0x61, 0x75, 0x72, 0x75,
		0x73, 0x4c, 0x69, 0x6e, 0x73, 0x61, 0x72, 0x4d, 0x45, 0x47, 0x41, 0x20, 0x56, 0x49, 0x53, 0x49,
		0x4f, 0x4e, 0x24, 0x31, 0x4b, 0x54, 0x56, 0x31, 0x38, 0x24, 0x31, 0x4b, 0x20, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x4d, 0x61, 0x6e, 0x68, 0x61, 0x74, 0x74, 0x61, 0x6e,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x65, 0x6b, 0x4d, 0x49, 0x52, 0x41, 0x59, 0x4c, 0x45, 0x44,
		0x4d, 0x2d, 0x33, 0x32, 0x32, 0x4e, 0x49, 0x50, 0x4e, 0x41, 0x42, 0x4f, 0x4e, 0x4f, 0x52, 0x4d,
		0x41, 0x4e, 0x44, 0x45, 0x4f, 0x43, 0x45, 0x41, 0x4e, 0x49, 0x43, 0x4f, 0x72, 0x61, 0x76, 0x61,
		0x50, 0x52, 0x4f, 0x53, 0x4f, 0x4e, 0x49, 0x43, 0x54, 0x58, 0x2d, 0x35, 0x30, 0x4a, 0x58, 0x37,
		0x30, 0x30, 0x45, 0x56, 0x49, 0x45, 0x52, 0x41, 0x20, 0x28, 0x24, 0x31, 0x29, 0x44, 0x49, 0x47,
		0x41, 0x20, 0x24, 0x31, 0x53, 0x43, 0x42, 0x43, 0x53, 0x43, 0x42, 0x43, 0x35, 0x38, 0x36, 0x34,
		0x33, 0x44, 0x31, 0x38, 0x35, 0x30, 0x53, 0x45, 0x48, 0x4d, 0x41, 0x58, 0x53, 0x61, 0x6c, 0x6f,
		0x72, 0x61, 0x4d, 0x61, 0x70, 0x6c, 0x65, 0x5f, 0x32, 0x30, 0x31, 0x31, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x54, 0x56, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x53, 0x65, 0x6c, 0x65, 0x76,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x43, 0x2d, 0x24, 0x31, 0x42, 0x4c, 0x41, 0x2d, 0x34, 0x33,
		0x55, 0x4d, 0x43, 0x5f, 0x32, 0x4b, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x54, 0x56, 0x5f,
		0x32, 0x30, 0x31, 0x39, 0x55, 0x4d, 0x43, 0x5f, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x54,
		0x56, 0x5f, 0x32, 0x30, 0x32, 0x31, 0x55, 0x4d, 0x43, 0x5f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
		0x54, 0x56, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x20, 0x54, 0x56,
		0x53, 0x69, 0x6c, 0x76, 0x61, 0x20, 0x53, 0x63, 0x68, 0x6e, 0x65, 0x69, 0x64, 0x65, 0x72, 0x53,
		0x6b, 0x79, 0x74, 0x65, 0x63, 0x68, 0x4c, 0x47, 0x45, 0x2f, 0x57, 0x41, 0x4c, 0x54, 0x4f, 0x4e,
		0x2f, 0x53, 0x4b, 0x59, 0x54, 0x45, 0x43, 0x48, 0x53, 0x4b, 0x57, 0x45, 0x32, 0x30, 0x45, 0x32,
		0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69,
		0x63, 0x4b, 0x44, 0x4c, 0x2d, 0x47, 0x4e, 0x24, 0x31, 0x42, 0x52, 0x41, 0x56, 0x49, 0x41, 0x20,
		0x24, 0x31, 0x54, 0x4f, 0x4b, 0x59, 0x4f, 0x54, 0x4f, 0x4b, 0x54, 0x43, 0x4c, 0x45, 0x44, 0x33,
		0x32, 0x53, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x75, 0x7a, 0x77,
		0x34, 0x30, 0x35, 0x34, 0x74, 0x74, 0x67, 0x55, 0x5a, 0x57, 0x34, 0x30, 0x35, 0x34, 0x54, 0x54,
		0x47, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x6b, 0x61, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x54,
		0x72, 0x65, 0x6e, 0x64, 0x24, 0x31, 0x20, 0x32, 0x38, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x33,
		0x32, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x34, 0x33, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x34,
		0x30, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x34, 0x39, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x35,
		0x35, 0x2e, 0x30, 0x22, 0x34, 0x30, 0x46, 0x42, 0x35, 0x34, 0x32, 0x36, 0x34, 0x30, 0x4c, 0x32,
		0x36, 0x30, 0x30, 0x54, 0x73, 0x69, 0x6e, 0x67, 0x68, 0x75, 0x61, 0x20, 0x54, 0x6f, 0x6e, 0x67,
		0x66, 0x61, 0x6e, 0x67, 0x4c, 0x45, 0x34, 0x30, 0x47, 0x59, 0x31, 0x35, 0x56, 0x41, 0x4e, 0x47,
		0x55, 0x41, 0x52, 0x44, 0x56, 0x4f, 0x58, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x77, 0x65, 0x62, 0x56,
		0x69, 0x64, 0x65, 0x6f, 0x57, 0x65, 0x62, 0x20, 0x54, 0x56, 0x57, 0x45, 0x4c, 0x4c, 0x49, 0x4e,
		0x47, 0x54, 0x4f, 0x4e, 0x57, 0x4f, 0x4e, 0x44, 0x45, 0x52, 0x57, 0x65, 0x2e, 0x20, 0x62, 0x79,
		0x20, 0x4c, 0x6f, 0x65, 0x77, 0x65, 0x2e, 0x34, 0x33, 0x41, 0x37, 0x31, 0x46, 0x45, 0x56, 0x53,
		0x58, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x46, 0x54, 0x41, 0x4e, 0x4e, 0x41, 0x30,
		0x46, 0x32, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x73, 0x69, 0x6d, 0x66,
		0x65, 0x72, 0x4c, 0x47, 0x45, 0x2f, 0x57, 0x41, 0x4c, 0x54, 0x4f, 0x4e, 0x2f, 0x53, 0x49, 0x4d,
		0x46, 0x45, 0x52,
	}
)
