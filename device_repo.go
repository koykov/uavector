// Code generated by "uaxplc -module=device -input=~/dev/php/device-detector/regexes/device". DO NOT EDIT.

package uaxpl

import (
	"regexp"
)

var (
	__dr_idx = [8][]deviceTuple{
		// cameras.yml
		{
			deviceTuple{type64: 0x50000000b, brand64: 0x00000005, matchRI: -0x0001, match64: 0xb00000018, modelSI: 0x0000, models64: 0x00000000},
			deviceTuple{type64: 0x50000000b, brand64: 0x180000001f, matchRI: 0x0000, match64: 0x00000000, modelSI: -0x0001, models64: 0x100000006},
		},
		// car_browsers.yml
		{
			deviceTuple{type64: 0x940000009f, brand64: 0x8b00000094, matchRI: -0x0001, match64: 0x9f000000ad, modelSI: -0x0001, models64: 0x600000007},
			deviceTuple{type64: 0x940000009f, brand64: 0xb6000000bb, matchRI: 0x0002, match64: 0x00000000, modelSI: -0x0001, models64: 0x700000009},
			deviceTuple{type64: 0x940000009f, brand64: 0xce000000d4, matchRI: -0x0001, match64: 0xd4000000e4, modelSI: -0x0001, models64: 0x90000000a},
		},
		// consoles.yml
		{
			deviceTuple{type64: 0xed000000f4, brand64: 0xe7000000ed, matchRI: 0x0004, match64: 0x00000000, modelSI: 0x000a, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0xfe00000107, matchRI: -0x0001, match64: 0x1070000010b, modelSI: -0x0001, models64: 0xb00000010},
			deviceTuple{type64: 0xed000000f4, brand64: 0x1470000014f, matchRI: 0x0005, match64: 0x00000000, modelSI: 0x0010, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0x15100000155, matchRI: -0x0001, match64: 0x15100000155, modelSI: 0x0011, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0x15500000163, matchRI: -0x0001, match64: 0x16300000177, modelSI: 0x0012, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0x17d00000181, matchRI: -0x0001, match64: 0x1810000018a, modelSI: 0x0013, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0x18a0000018e, matchRI: 0x0006, match64: 0x00000000, modelSI: 0x0014, models64: 0x00000000},
		},
		// mobiles.yml
		{
			deviceTuple{type64: 0x19e000001a8, brand64: 0x19c0000019e, matchRI: 0x0007, match64: 0x00000000, modelSI: -0x0001, models64: 0x1500000017},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1bf000001c2, matchRI: 0x000a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1700000023},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1f4000001f9, matchRI: 0x0017, match64: 0x00000000, modelSI: -0x0001, models64: 0x2300000025},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1fd00000200, matchRI: 0x001a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2500000026},
			deviceTuple{type64: 0x20000000206, brand64: 0x20e00000210, matchRI: 0x001c, match64: 0x00000000, modelSI: -0x0001, models64: 0x260000002e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x2670000026c, matchRI: 0x0024, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e00000033},
			deviceTuple{type64: 0x28400000286, brand64: 0x28000000284, matchRI: 0x002a, match64: 0x00000000, modelSI: 0x0033, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x2860000028e, matchRI: 0x002b, match64: 0x00000000, modelSI: -0x0001, models64: 0x3400000036},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x29e000002a2, matchRI: 0x002c, match64: 0x00000000, modelSI: 0x0036, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x2a2000002a4, matchRI: 0x002d, match64: 0x00000000, modelSI: -0x0001, models64: 0x370000003b},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x2ce000002d7, matchRI: 0x002f, match64: 0x00000000, modelSI: 0x003b, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x2d7000002da, matchRI: 0x0030, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c00000040},
			deviceTuple{type64: 0x20000000206, brand64: 0x2eb000002f1, matchRI: 0x0035, match64: 0x00000000, modelSI: -0x0001, models64: 0x4000000043},
			deviceTuple{type64: 0x20000000206, brand64: 0x31100000316, matchRI: 0x0037, match64: 0x00000000, modelSI: 0x0043, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x32400000327, matchRI: 0x0038, match64: 0x00000000, modelSI: -0x0001, models64: 0x4400000046},
			deviceTuple{type64: 0x28400000286, brand64: 0x35a00000363, matchRI: 0x0039, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x3630000036c, matchRI: 0x003a, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x36c00000371, matchRI: 0x003b, match64: 0x00000000, modelSI: -0x0001, models64: 0x4600000055},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x3ea000003ed, matchRI: 0x003e, match64: 0x00000000, modelSI: -0x0001, models64: 0x5500000057},
			deviceTuple{type64: 0x28400000286, brand64: 0x40500000408, matchRI: 0x003f, match64: 0x00000000, modelSI: -0x0001, models64: 0x5700000059},
			deviceTuple{type64: 0x20000000206, brand64: 0x4080000040f, matchRI: -0x0001, match64: 0x4080000040f, modelSI: -0x0001, models64: 0x590000005a},
			deviceTuple{type64: 0x41400000421, brand64: 0x40f00000414, matchRI: 0x0043, match64: 0x00000000, modelSI: 0x005a, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x4290000042e, matchRI: -0x0001, match64: 0x4290000042e, modelSI: -0x0001, models64: 0x5b0000005c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x42e00000432, matchRI: 0x0045, match64: 0x00000000, modelSI: -0x0001, models64: 0x5c00000067},
			deviceTuple{type64: 0x20000000206, brand64: 0x49b000004a0, matchRI: 0x0051, match64: 0x00000000, modelSI: 0x0067, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x4a0000004a3, matchRI: 0x0052, match64: 0x00000000, modelSI: -0x0001, models64: 0x680000006c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x4c9000004cf, matchRI: 0x0057, match64: 0x00000000, modelSI: -0x0001, models64: 0x6c00000076},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5390000053c, matchRI: 0x0062, match64: 0x00000000, modelSI: -0x0001, models64: 0x760000007c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x58f00000593, matchRI: 0x0066, match64: 0x00000000, modelSI: -0x0001, models64: 0x7c000000b9},
			deviceTuple{type64: 0x20000000206, brand64: 0x8060000080c, matchRI: -0x0001, match64: 0x80c00000811, modelSI: 0x00b9, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x8160000081d, matchRI: 0x009a, match64: 0x00000000, modelSI: -0x0001, models64: 0xba000000bc},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x82a0000082f, matchRI: 0x009d, match64: 0x00000000, modelSI: -0x0001, models64: 0xbc000000c6},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x87a00000881, matchRI: 0x00a3, match64: 0x00000000, modelSI: -0x0001, models64: 0xc6000000cb},
			deviceTuple{type64: 0x52100000528, brand64: 0x8b7000008be, matchRI: 0x00a9, match64: 0x00000000, modelSI: -0x0001, models64: 0xcb000000cf},
			deviceTuple{type64: 0x20000000206, brand64: 0x8e2000008e7, matchRI: 0x00ae, match64: 0x00000000, modelSI: -0x0001, models64: 0xcf000000df},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x9f0000009f7, matchRI: 0x00b7, match64: 0x00000000, modelSI: 0x00df, models64: 0x00000000},
			deviceTuple{type64: 0x2700000027, brand64: 0xa0400000a0a, matchRI: 0x00b8, match64: 0x00000000, modelSI: -0x0001, models64: 0xe0000000e1},
			deviceTuple{type64: 0x20000000206, brand64: 0xa1d00000a22, matchRI: 0x00b9, match64: 0x00000000, modelSI: 0x00e1, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa2200000a26, matchRI: 0x00ba, match64: 0x00000000, modelSI: -0x0001, models64: 0xe2000000e6},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa3900000a3d, matchRI: 0x00bf, match64: 0x00000000, modelSI: -0x0001, models64: 0xe6000000ee},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa7200000a76, matchRI: 0x00c5, match64: 0x00000000, modelSI: -0x0001, models64: 0xee000000f2},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa9200000a99, matchRI: 0x00c8, match64: 0x00000000, modelSI: -0x0001, models64: 0xf2000001b2},
			deviceTuple{type64: 0x20000000206, brand64: 0x15b0000015b5, matchRI: 0x013f, match64: 0x00000000, modelSI: 0x01b2, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x15b5000015bd, matchRI: 0x0140, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b3000001b6},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15c4000015cc, matchRI: 0x0144, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b6000001b7},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15cc000015d3, matchRI: 0x0146, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b7000001c0},
			deviceTuple{type64: 0x20000000206, brand64: 0x163700001640, matchRI: 0x014b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c0000001ca},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x168000001687, matchRI: 0x0156, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ca00000214},
			deviceTuple{type64: 0x20000000206, brand64: 0x1b3800001b41, matchRI: 0x0172, match64: 0x00000000, modelSI: -0x0001, models64: 0x2140000021e},
			deviceTuple{type64: 0x20000000206, brand64: 0x1c2800001c2c, matchRI: 0x0174, match64: 0x00000000, modelSI: -0x0001, models64: 0x21e00000220},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1c2c00001c32, matchRI: 0x0177, match64: 0x00000000, modelSI: 0x0220, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1c3200001c38, matchRI: 0x0178, match64: 0x00000000, modelSI: -0x0001, models64: 0x22100000249},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1ef500001efb, matchRI: 0x0197, match64: 0x00000000, modelSI: 0x0249, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1efb00001f00, matchRI: 0x0198, match64: 0x00000000, modelSI: -0x0001, models64: 0x24a0000024c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1f1c00001f20, matchRI: 0x0199, match64: 0x00000000, modelSI: -0x0001, models64: 0x24c00000253},
			deviceTuple{type64: 0x28400000286, brand64: 0x1f5700001f5d, matchRI: 0x019e, match64: 0x00000000, modelSI: 0x0253, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1f5d00001f66, matchRI: 0x019f, match64: 0x00000000, modelSI: -0x0001, models64: 0x25400000256},
			deviceTuple{type64: 0x28400000286, brand64: 0x1f6d00001f72, matchRI: 0x01a2, match64: 0x00000000, modelSI: 0x0256, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1f8100001f85, matchRI: 0x01a3, match64: 0x00000000, modelSI: 0x0257, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1f8500001f8a, matchRI: 0x01a4, match64: 0x00000000, modelSI: 0x0258, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1f8a00001f8f, matchRI: 0x01a5, match64: 0x00000000, modelSI: -0x0001, models64: 0x2590000025e},
			deviceTuple{type64: 0x2700000027, brand64: 0x1fb700001fbc, matchRI: 0x01ab, match64: 0x00000000, modelSI: -0x0001, models64: 0x25e0000032a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xe7000000ed, matchRI: 0x026f, match64: 0x00000000, modelSI: -0x0001, models64: 0x32a00000336},
			deviceTuple{type64: 0x20000000206, brand64: 0x2c8700002c92, matchRI: -0x0001, match64: 0x2c8700002c92, modelSI: -0x0001, models64: 0x3360000033a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x2cc800002ccb, matchRI: 0x027c, match64: 0x00000000, modelSI: -0x0001, models64: 0x33a00000342},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x2d1300002d1b, matchRI: 0x0285, match64: 0x00000000, modelSI: 0x0342, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x2d1b00002d21, matchRI: 0x0286, match64: 0x00000000, modelSI: -0x0001, models64: 0x34300000360},
			deviceTuple{type64: 0x28400000286, brand64: 0x2e4f00002e56, matchRI: 0x028c, match64: 0x00000000, modelSI: 0x0360, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x2e5600002e5b, matchRI: 0x028d, match64: 0x00000000, modelSI: -0x0001, models64: 0x3610000036a},
			deviceTuple{type64: 0x20000000206, brand64: 0x2e7d00002e85, matchRI: 0x0297, match64: 0x00000000, modelSI: -0x0001, models64: 0x36a0000036d},
			deviceTuple{type64: 0x28400000286, brand64: 0x2e9200002e97, matchRI: 0x029b, match64: 0x00000000, modelSI: -0x0001, models64: 0x36d0000036e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x2ea100002ea7, matchRI: 0x029d, match64: 0x00000000, modelSI: -0x0001, models64: 0x36e00000370},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x2eae00002eb1, matchRI: 0x02a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x37000000372},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x2eb900002ebf, matchRI: 0x02a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x37200000374},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x2ec300002ecc, matchRI: 0x02a6, match64: 0x00000000, modelSI: -0x0001, models64: 0x3740000038a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x2f4d00002f52, matchRI: 0x02bd, match64: 0x00000000, modelSI: 0x038a, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x2f5200002f56, matchRI: 0x02be, match64: 0x00000000, modelSI: -0x0001, models64: 0x38b000003f7},
			deviceTuple{type64: 0x28400000286, brand64: 0x350800003519, matchRI: -0x0001, match64: 0x351900003520, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x352000003524, matchRI: 0x0320, match64: 0x00000000, modelSI: 0x03f7, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x352400003529, matchRI: 0x0321, match64: 0x00000000, modelSI: 0x03f8, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x352900003531, matchRI: 0x0322, match64: 0x00000000, modelSI: -0x0001, models64: 0x3f9000003fd},
			deviceTuple{type64: 0x1fd200001fda, brand64: 0x35370000353c, matchRI: 0x0327, match64: 0x00000000, modelSI: -0x0001, models64: 0x3fd000003fe},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x353c00003542, matchRI: 0x0329, match64: 0x00000000, modelSI: -0x0001, models64: 0x3fe00000400},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x35560000355b, matchRI: 0x032c, match64: 0x00000000, modelSI: -0x0001, models64: 0x40000000405},
			deviceTuple{type64: 0x20000000206, brand64: 0x359e000035a2, matchRI: 0x032f, match64: 0x00000000, modelSI: 0x0405, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x35a2000035a7, matchRI: 0x0330, match64: 0x00000000, modelSI: -0x0001, models64: 0x40600000409},
			deviceTuple{type64: 0x20000000206, brand64: 0x35da000035e0, matchRI: 0x0333, match64: 0x00000000, modelSI: -0x0001, models64: 0x4090000040a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x35e7000035f3, matchRI: 0x0335, match64: 0x00000000, modelSI: -0x0001, models64: 0x40a0000040e},
			deviceTuple{type64: 0x20000000206, brand64: 0x362000003629, matchRI: 0x0338, match64: 0x00000000, modelSI: -0x0001, models64: 0x40e00000419},
			deviceTuple{type64: 0x28400000286, brand64: 0x371d00003720, matchRI: 0x0344, match64: 0x00000000, modelSI: 0x0419, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x372b0000372e, matchRI: 0x0345, match64: 0x00000000, modelSI: -0x0001, models64: 0x41a0000041c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x37390000373c, matchRI: 0x0348, match64: 0x00000000, modelSI: -0x0001, models64: 0x41c0000041e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x37550000375e, matchRI: -0x0001, match64: 0x375e00003767, modelSI: 0x041e, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x37670000376a, matchRI: 0x0349, match64: 0x00000000, modelSI: -0x0001, models64: 0x41f00000424},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x378b00003790, matchRI: 0x034d, match64: 0x00000000, modelSI: -0x0001, models64: 0x42400000425},
			deviceTuple{type64: 0x20000000206, brand64: 0x379000003794, matchRI: 0x034f, match64: 0x00000000, modelSI: 0x0425, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x37a1000037aa, matchRI: 0x0350, match64: 0x00000000, modelSI: -0x0001, models64: 0x42600000427},
			deviceTuple{type64: 0x20000000206, brand64: 0x37b1000037bf, matchRI: 0x0352, match64: 0x00000000, modelSI: -0x0001, models64: 0x4270000042a},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x37c6000037cc, matchRI: 0x0356, match64: 0x00000000, modelSI: 0x042a, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x37cc000037d3, matchRI: 0x0357, match64: 0x00000000, modelSI: -0x0001, models64: 0x42b00000435},
			deviceTuple{type64: 0x28400000286, brand64: 0x380e00003815, matchRI: 0x0360, match64: 0x00000000, modelSI: -0x0001, models64: 0x4350000043a},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x38390000383f, matchRI: 0x0366, match64: 0x00000000, modelSI: 0x043a, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x383f00003845, matchRI: 0x0367, match64: 0x00000000, modelSI: 0x043b, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x38450000384e, matchRI: 0x0368, match64: 0x00000000, modelSI: 0x043c, models64: 0x00000000},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x385b0000385f, matchRI: 0x0369, match64: 0x00000000, modelSI: -0x0001, models64: 0x43d0000043f},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x38620000386e, matchRI: 0x036c, match64: 0x00000000, modelSI: 0x043f, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x386e00003873, matchRI: 0x036d, match64: 0x00000000, modelSI: -0x0001, models64: 0x44000000442},
			deviceTuple{type64: 0x20000000206, brand64: 0x38850000388c, matchRI: 0x036e, match64: 0x00000000, modelSI: 0x0442, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x388c00003891, matchRI: 0x036f, match64: 0x00000000, modelSI: 0x0443, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x389100003897, matchRI: 0x0370, match64: 0x00000000, modelSI: -0x0001, models64: 0x44400000447},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x38b6000038bc, matchRI: 0x0373, match64: 0x00000000, modelSI: 0x0447, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x38bc000038c2, matchRI: 0x0374, match64: 0x00000000, modelSI: 0x0448, models64: 0x00000000},
			deviceTuple{type64: 0x7f1000007f8, brand64: 0x38cd000038d6, matchRI: 0x0375, match64: 0x00000000, modelSI: 0x0449, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x38e4000038eb, matchRI: 0x0376, match64: 0x00000000, modelSI: 0x044a, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x38f700003900, matchRI: 0x0377, match64: 0x00000000, modelSI: -0x0001, models64: 0x44b0000044d},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x391b0000391f, matchRI: 0x0379, match64: 0x00000000, modelSI: -0x0001, models64: 0x44d0000044f},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x391f00003924, matchRI: 0x037c, match64: 0x00000000, modelSI: -0x0001, models64: 0x44f00000451},
			deviceTuple{type64: 0x20000000206, brand64: 0x39240000392b, matchRI: 0x037f, match64: 0x00000000, modelSI: -0x0001, models64: 0x45100000454},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x394a00003951, matchRI: -0x0001, match64: 0x394a00003951, modelSI: -0x0001, models64: 0x45400000455},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x395f00003963, matchRI: 0x0384, match64: 0x00000000, modelSI: 0x0455, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x396c00003976, matchRI: 0x0385, match64: 0x00000000, modelSI: 0x0456, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x39760000397f, matchRI: 0x0386, match64: 0x00000000, modelSI: -0x0001, models64: 0x45700000468},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x3a3800003a41, matchRI: 0x038b, match64: 0x00000000, modelSI: -0x0001, models64: 0x46800000477},
			deviceTuple{type64: 0x20000000206, brand64: 0x3a8900003a92, matchRI: 0x039a, match64: 0x00000000, modelSI: -0x0001, models64: 0x47700000485},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x81100000816, matchRI: 0x03a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x48500000487},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x3b3900003b3e, matchRI: 0x03a9, match64: 0x00000000, modelSI: 0x0487, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x3b3e00003b42, matchRI: 0x03aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x4880000048a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x3b6d00003b70, matchRI: 0x03ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x48a000004cf},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x3ee000003ee6, matchRI: 0x03cb, match64: 0x00000000, modelSI: -0x0001, models64: 0x4cf000004d6},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x3f1700003f1f, matchRI: 0x03d0, match64: 0x00000000, modelSI: 0x04d6, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x3f1f00003f26, matchRI: 0x03d1, match64: 0x00000000, modelSI: -0x0001, models64: 0x4d7000004d9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x3f2600003f2e, matchRI: -0x0001, match64: 0x3f2e00003f36, modelSI: -0x0001, models64: 0x4d9000004da},
			deviceTuple{type64: 0x20000000206, brand64: 0x3f3800003f40, matchRI: 0x03d4, match64: 0x00000000, modelSI: -0x0001, models64: 0x4da000004dd},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x3f7e00003f85, matchRI: 0x03d6, match64: 0x00000000, modelSI: -0x0001, models64: 0x4dd000004e5},
			deviceTuple{type64: 0x20000000206, brand64: 0x3fd000003fd7, matchRI: 0x03db, match64: 0x00000000, modelSI: 0x04e5, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x3fdd00003fe2, matchRI: 0x03dc, match64: 0x00000000, modelSI: -0x0001, models64: 0x4e6000004e9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x3fe200003fe8, matchRI: 0x03e0, match64: 0x00000000, modelSI: 0x04e9, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x3fe800003fee, matchRI: 0x03e1, match64: 0x00000000, modelSI: -0x0001, models64: 0x4ea0000050a},
			deviceTuple{type64: 0x28400000286, brand64: 0x41930000419d, matchRI: -0x0001, match64: 0x41930000419d, modelSI: -0x0001, models64: 0x50a0000050b},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x419d000041a3, matchRI: 0x03ef, match64: 0x00000000, modelSI: -0x0001, models64: 0x50b00000516},
			deviceTuple{type64: 0x20000000206, brand64: 0x420f00004218, matchRI: 0x03fb, match64: 0x00000000, modelSI: 0x0516, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x42180000421d, matchRI: 0x03fc, match64: 0x00000000, modelSI: -0x0001, models64: 0x5170000051a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x42570000425b, matchRI: 0x03ff, match64: 0x00000000, modelSI: -0x0001, models64: 0x51a0000051e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x427100004275, matchRI: -0x0001, match64: 0x42750000427a, modelSI: -0x0001, models64: 0x51e00000520},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x42840000428d, matchRI: 0x0404, match64: 0x00000000, modelSI: -0x0001, models64: 0x52000000524},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x42b7000042ba, matchRI: 0x0409, match64: 0x00000000, modelSI: 0x0524, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x42ba000042c2, matchRI: 0x040a, match64: 0x00000000, modelSI: -0x0001, models64: 0x52500000526},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x42d1000042d5, matchRI: 0x040b, match64: 0x00000000, modelSI: -0x0001, models64: 0x52600000528},
			deviceTuple{type64: 0x20000000206, brand64: 0x42dc000042e2, matchRI: 0x040e, match64: 0x00000000, modelSI: -0x0001, models64: 0x52800000529},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x42f6000042fb, matchRI: 0x040f, match64: 0x00000000, modelSI: -0x0001, models64: 0x52900000548},
			deviceTuple{type64: 0x28400000286, brand64: 0x447f00004483, matchRI: 0x041c, match64: 0x00000000, modelSI: 0x0548, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x44830000448a, matchRI: 0x041d, match64: 0x00000000, modelSI: -0x0001, models64: 0x5490000054b},
			deviceTuple{type64: 0x28400000286, brand64: 0x448a00004497, matchRI: 0x0420, match64: 0x00000000, modelSI: 0x054b, models64: 0x00000000},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x449f000044a6, matchRI: 0x0421, match64: 0x00000000, modelSI: 0x054c, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x44a6000044ad, matchRI: 0x0422, match64: 0x00000000, modelSI: 0x054d, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x44b3000044bc, matchRI: 0x0423, match64: 0x00000000, modelSI: -0x0001, models64: 0x54e00000551},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x44d6000044db, matchRI: 0x0426, match64: 0x00000000, modelSI: -0x0001, models64: 0x55100000554},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x450d00004513, matchRI: 0x042a, match64: 0x00000000, modelSI: -0x0001, models64: 0x5540000055c},
			deviceTuple{type64: 0x20000000206, brand64: 0x454a0000454d, matchRI: 0x0432, match64: 0x00000000, modelSI: -0x0001, models64: 0x55c00000562},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x456200004568, matchRI: 0x0436, match64: 0x00000000, modelSI: -0x0001, models64: 0x5620000056b},
			deviceTuple{type64: 0x28400000286, brand64: 0x46340000463a, matchRI: 0x043b, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x463a00004640, matchRI: 0x043c, match64: 0x00000000, modelSI: -0x0001, models64: 0x56b00000576},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x468200004688, matchRI: 0x0445, match64: 0x00000000, modelSI: -0x0001, models64: 0x57600000578},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x469a000046a4, matchRI: 0x0447, match64: 0x00000000, modelSI: -0x0001, models64: 0x5780000057b},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x46cc000046d5, matchRI: 0x0449, match64: 0x00000000, modelSI: -0x0001, models64: 0x57b0000057d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x46ee000046f5, matchRI: 0x044a, match64: 0x00000000, modelSI: -0x0001, models64: 0x57d00000582},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x470000004709, matchRI: -0x0001, match64: 0x470000004709, modelSI: -0x0001, models64: 0x58200000586},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x471d0000472a, matchRI: 0x0453, match64: 0x00000000, modelSI: -0x0001, models64: 0x586000005aa},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x492900004935, matchRI: 0x046a, match64: 0x00000000, modelSI: -0x0001, models64: 0x5aa000005b5},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x49fb00004a07, matchRI: 0x046d, match64: 0x00000000, modelSI: -0x0001, models64: 0x5b5000005b8},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x4a1c00004a29, matchRI: 0x046f, match64: 0x00000000, modelSI: -0x0001, models64: 0x5b8000005bc},
			deviceTuple{type64: 0x20000000206, brand64: 0x4a7d00004a82, matchRI: 0x0470, match64: 0x00000000, modelSI: -0x0001, models64: 0x5bc000005d1},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x4b0600004b0e, matchRI: 0x0486, match64: 0x00000000, modelSI: -0x0001, models64: 0x5d1000005d4},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x4b1900004b20, matchRI: -0x0001, match64: 0x4b1900004b20, modelSI: -0x0001, models64: 0x5d4000005d5},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x4b2000004b2a, matchRI: -0x0001, match64: 0x4b2000004b2a, modelSI: -0x0001, models64: 0x5d5000005d6},
			deviceTuple{type64: 0x20000000206, brand64: 0x4b2d00004b37, matchRI: 0x048c, match64: 0x00000000, modelSI: -0x0001, models64: 0x5d6000005dc},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x4b9200004b97, matchRI: 0x0490, match64: 0x00000000, modelSI: -0x0001, models64: 0x5dc000005e0},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x4bc700004bd0, matchRI: 0x0493, match64: 0x00000000, modelSI: -0x0001, models64: 0x5e0000005ed},
			deviceTuple{type64: 0x20000000206, brand64: 0x4c7000004c78, matchRI: 0x049d, match64: 0x00000000, modelSI: -0x0001, models64: 0x5ed000005ef},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x4c8300004c88, matchRI: 0x04a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x5ef000005f6},
			deviceTuple{type64: 0x20000000206, brand64: 0x4ccd00004cd0, matchRI: -0x0001, match64: 0x4ccd00004cd0, modelSI: -0x0001, models64: 0x5f6000005f7},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x4cdb00004ce1, matchRI: 0x04a9, match64: 0x00000000, modelSI: -0x0001, models64: 0x5f7000005fa},
			deviceTuple{type64: 0x20000000206, brand64: 0x4cf300004cfd, matchRI: 0x04ad, match64: 0x00000000, modelSI: 0x05fa, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x4cfd00004d03, matchRI: 0x04ae, match64: 0x00000000, modelSI: -0x0001, models64: 0x5fb000005ff},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x4d1b00004d29, matchRI: 0x04b3, match64: 0x00000000, modelSI: -0x0001, models64: 0x5ff00000617},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x4e0c00004e11, matchRI: 0x04c4, match64: 0x00000000, modelSI: -0x0001, models64: 0x6170000061b},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x4e3200004e38, matchRI: 0x04c6, match64: 0x00000000, modelSI: 0x061b, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x4e3800004e40, matchRI: 0x04c7, match64: 0x00000000, modelSI: -0x0001, models64: 0x61c00000620},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x4e4a00004e51, matchRI: 0x04cc, match64: 0x00000000, modelSI: -0x0001, models64: 0x62000000624},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x4e7300004e79, matchRI: 0x04ce, match64: 0x00000000, modelSI: -0x0001, models64: 0x62400000658},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x50430000504c, matchRI: 0x04fc, match64: 0x00000000, modelSI: 0x0658, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x505a00005060, matchRI: 0x04fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x6590000065b},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x507f00005087, matchRI: 0x04ff, match64: 0x00000000, modelSI: -0x0001, models64: 0x65b0000065d},
			deviceTuple{type64: 0x20000000206, brand64: 0x50970000509e, matchRI: 0x0501, match64: 0x00000000, modelSI: -0x0001, models64: 0x65d00000667},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x512000005127, matchRI: 0x050c, match64: 0x00000000, modelSI: -0x0001, models64: 0x66700000688},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x520a00005211, matchRI: -0x0001, match64: 0x520a00005211, modelSI: -0x0001, models64: 0x68800000689},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x522f00005234, matchRI: 0x052a, match64: 0x00000000, modelSI: 0x0689, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x52340000523c, matchRI: 0x052b, match64: 0x00000000, modelSI: -0x0001, models64: 0x68a0000068d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x525b00005262, matchRI: 0x052d, match64: 0x00000000, modelSI: -0x0001, models64: 0x68d00000697},
			deviceTuple{type64: 0x20000000206, brand64: 0x52e3000052ec, matchRI: 0x052f, match64: 0x00000000, modelSI: 0x0697, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x52ec000052f1, matchRI: 0x0530, match64: 0x00000000, modelSI: 0x0698, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x52f5000052fe, matchRI: 0x0531, match64: 0x00000000, modelSI: -0x0001, models64: 0x699000006a2},
			deviceTuple{type64: 0x28400000286, brand64: 0x536400005369, matchRI: 0x0538, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x53690000536d, matchRI: 0x0539, match64: 0x00000000, modelSI: -0x0001, models64: 0x6a2000006b0},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x53fb00005400, matchRI: 0x0544, match64: 0x00000000, modelSI: -0x0001, models64: 0x6b0000006b2},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x540000005404, matchRI: 0x0547, match64: 0x00000000, modelSI: -0x0001, models64: 0x6b2000006c8},
			deviceTuple{type64: 0x20000000206, brand64: 0x54a2000054a4, matchRI: 0x055d, match64: 0x00000000, modelSI: -0x0001, models64: 0x6c8000006cc},
			deviceTuple{type64: 0x28400000286, brand64: 0x54dd000054e5, matchRI: 0x055f, match64: 0x00000000, modelSI: 0x06cc, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x54e5000054ee, matchRI: 0x0560, match64: 0x00000000, modelSI: 0x06cd, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x54ee000054f2, matchRI: 0x0561, match64: 0x00000000, modelSI: -0x0001, models64: 0x6ce000006cf},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x55050000550a, matchRI: 0x0562, match64: 0x00000000, modelSI: -0x0001, models64: 0x6cf000006d3},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x55290000552c, matchRI: 0x0565, match64: 0x00000000, modelSI: -0x0001, models64: 0x6d3000006d7},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x553a00005541, matchRI: 0x056a, match64: 0x00000000, modelSI: 0x06d7, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x55410000554d, matchRI: 0x056b, match64: 0x00000000, modelSI: -0x0001, models64: 0x6d8000006d9},
			deviceTuple{type64: 0x20000000206, brand64: 0x554d00005553, matchRI: 0x056d, match64: 0x00000000, modelSI: -0x0001, models64: 0x6d9000006db},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x555d00005562, matchRI: 0x0570, match64: 0x00000000, modelSI: -0x0001, models64: 0x6db000006df},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x55940000559d, matchRI: 0x0574, match64: 0x00000000, modelSI: 0x06df, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x55a5000055ad, matchRI: 0x0575, match64: 0x00000000, modelSI: 0x06e0, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x55ad000055b3, matchRI: -0x0001, match64: 0x55b3000055b9, modelSI: -0x0001, models64: 0x6e1000006e3},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x55b9000055c1, matchRI: 0x0578, match64: 0x00000000, modelSI: -0x0001, models64: 0x6e3000006e5},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x55e5000055eb, matchRI: -0x0001, match64: 0x55eb000055f1, modelSI: -0x0001, models64: 0x6e5000006e7},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x561300005618, matchRI: -0x0001, match64: 0x56180000561d, modelSI: -0x0001, models64: 0x6e7000006e8},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x561f00005624, matchRI: 0x057a, match64: 0x00000000, modelSI: 0x06e8, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x56240000562a, matchRI: 0x057b, match64: 0x00000000, modelSI: 0x06e9, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x562a0000562e, matchRI: 0x057c, match64: 0x00000000, modelSI: -0x0001, models64: 0x6ea000006f4},
			deviceTuple{type64: 0x20000000206, brand64: 0x56490000564f, matchRI: 0x0586, match64: 0x00000000, modelSI: -0x0001, models64: 0x6f4000006f7},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x565b00005660, matchRI: -0x0001, match64: 0x565b00005660, modelSI: -0x0001, models64: 0x6f7000006f9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x566000005666, matchRI: 0x058c, match64: 0x00000000, modelSI: 0x06f9, models64: 0x00000000},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x56660000566b, matchRI: 0x058d, match64: 0x00000000, modelSI: 0x06fa, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x566b0000566f, matchRI: 0x058e, match64: 0x00000000, modelSI: 0x06fb, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x566f00005676, matchRI: 0x058f, match64: 0x00000000, modelSI: -0x0001, models64: 0x6fc00000701},
			deviceTuple{type64: 0x28400000286, brand64: 0x5699000056a1, matchRI: 0x0592, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x56a1000056a9, matchRI: 0x0593, match64: 0x00000000, modelSI: -0x0001, models64: 0x70100000704},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x56b4000056b9, matchRI: 0x0596, match64: 0x00000000, modelSI: -0x0001, models64: 0x70400000735},
			deviceTuple{type64: 0x20000000206, brand64: 0x595000005957, matchRI: 0x05aa, match64: 0x00000000, modelSI: 0x0735, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x59570000595b, matchRI: 0x05ab, match64: 0x00000000, modelSI: 0x0736, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x595b00005962, matchRI: 0x05ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x73700000739},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x59690000596f, matchRI: 0x05af, match64: 0x00000000, modelSI: -0x0001, models64: 0x7390000073d},
			deviceTuple{type64: 0x28400000286, brand64: 0x596f00005976, matchRI: 0x05b4, match64: 0x00000000, modelSI: 0x073d, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x59760000597d, matchRI: 0x05b5, match64: 0x00000000, modelSI: 0x073e, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x597d00005983, matchRI: 0x05b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x73f00000760},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5aeb00005af1, matchRI: 0x05ca, match64: 0x00000000, modelSI: 0x0760, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5af300005af7, matchRI: 0x05cb, match64: 0x00000000, modelSI: -0x0001, models64: 0x76100000763},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x5af700005afc, matchRI: 0x05ce, match64: 0x00000000, modelSI: 0x0763, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5afc00005b02, matchRI: -0x0001, match64: 0x5b0200005b09, modelSI: -0x0001, models64: 0x76400000766},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5b0e00005b12, matchRI: 0x05d1, match64: 0x00000000, modelSI: -0x0001, models64: 0x7660000076a},
			deviceTuple{type64: 0x20000000206, brand64: 0x5b1a00005b26, matchRI: 0x05d6, match64: 0x00000000, modelSI: 0x076a, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5b2600005b2f, matchRI: 0x05d7, match64: 0x00000000, modelSI: -0x0001, models64: 0x76b0000076c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5b3500005b3b, matchRI: 0x05d9, match64: 0x00000000, modelSI: 0x076c, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x5b3b00005b42, matchRI: 0x05da, match64: 0x00000000, modelSI: -0x0001, models64: 0x76d00000770},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5b4900005b4f, matchRI: 0x05de, match64: 0x00000000, modelSI: -0x0001, models64: 0x77000000774},
			deviceTuple{type64: 0x20000000206, brand64: 0x5b6500005b6c, matchRI: 0x05e2, match64: 0x00000000, modelSI: -0x0001, models64: 0x77400000776},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5b8300005b88, matchRI: -0x0001, match64: 0x5b8800005b92, modelSI: -0x0001, models64: 0x77600000777},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5b9600005b9b, matchRI: -0x0001, match64: 0x5b9600005b9b, modelSI: -0x0001, models64: 0x77700000779},
			deviceTuple{type64: 0x20000000206, brand64: 0x5b9b00005b9e, matchRI: 0x05e8, match64: 0x00000000, modelSI: -0x0001, models64: 0x7790000077d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5bb000005bb2, matchRI: 0x05ed, match64: 0x00000000, modelSI: -0x0001, models64: 0x77d00000780},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5bb600005bb9, matchRI: -0x0001, match64: 0x5bb900005bc1, modelSI: -0x0001, models64: 0x78000000781},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5bc600005bc9, matchRI: -0x0001, match64: 0x5bc600005bc9, modelSI: -0x0001, models64: 0x78100000784},
			deviceTuple{type64: 0x20000000206, brand64: 0x5be700005bea, matchRI: 0x05f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x78400000786},
			deviceTuple{type64: 0x1fd200001fda, brand64: 0x5bef00005bf4, matchRI: 0x05f6, match64: 0x00000000, modelSI: 0x0786, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x5bff00005c04, matchRI: 0x05f7, match64: 0x00000000, modelSI: -0x0001, models64: 0x78700000788},
			deviceTuple{type64: 0x20000000206, brand64: 0x5c0e00005c12, matchRI: 0x05f9, match64: 0x00000000, modelSI: 0x0788, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x5c1c00005c22, matchRI: 0x05fa, match64: 0x00000000, modelSI: 0x0789, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x5c2200005c25, matchRI: 0x05fb, match64: 0x00000000, modelSI: 0x078a, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x5c2500005c2a, matchRI: 0x05fc, match64: 0x00000000, modelSI: 0x078b, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5c2a00005c31, matchRI: 0x05fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x78c0000078e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5c3b00005c47, matchRI: 0x0600, match64: 0x00000000, modelSI: -0x0001, models64: 0x78e00000793},
			deviceTuple{type64: 0x20000000206, brand64: 0x5c8300005c8b, matchRI: 0x0603, match64: 0x00000000, modelSI: 0x0793, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5c8b00005c97, matchRI: 0x0604, match64: 0x00000000, modelSI: -0x0001, models64: 0x79400000796},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5caa00005cb5, matchRI: 0x0605, match64: 0x00000000, modelSI: 0x0796, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x5cb500005cbb, matchRI: 0x0606, match64: 0x00000000, modelSI: -0x0001, models64: 0x7970000079b},
			deviceTuple{type64: 0x28400000286, brand64: 0x5d1100005d18, matchRI: -0x0001, match64: 0x5d1800005d1d, modelSI: 0x079b, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x5d2e00005d36, matchRI: 0x060b, match64: 0x00000000, modelSI: 0x079c, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5d3600005d3e, matchRI: 0x060c, match64: 0x00000000, modelSI: -0x0001, models64: 0x79d000007ac},
			deviceTuple{type64: 0x28400000286, brand64: 0x5d9000005d95, matchRI: 0x061c, match64: 0x00000000, modelSI: -0x0001, models64: 0x7ac000007af},
			deviceTuple{type64: 0x20000000206, brand64: 0x5dad00005db3, matchRI: 0x0620, match64: 0x00000000, modelSI: 0x07af, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5db300005dbc, matchRI: 0x0621, match64: 0x00000000, modelSI: -0x0001, models64: 0x7b0000007b7},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5e1200005e1f, matchRI: 0x0628, match64: 0x00000000, modelSI: -0x0001, models64: 0x7b7000007b9},
			deviceTuple{type64: 0x28400000286, brand64: 0x5e3100005e36, matchRI: 0x062a, match64: 0x00000000, modelSI: 0x07b9, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x5e3600005e3a, matchRI: 0x062b, match64: 0x00000000, modelSI: 0x07ba, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5e3a00005e42, matchRI: 0x062c, match64: 0x00000000, modelSI: -0x0001, models64: 0x7bb000007d2},
			deviceTuple{type64: 0x5f5100005f5b, brand64: 0x5f4c00005f51, matchRI: 0x062d, match64: 0x00000000, modelSI: 0x07d2, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x5f6e00005f72, matchRI: 0x062e, match64: 0x00000000, modelSI: -0x0001, models64: 0x7d3000007f2},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x60e3000060eb, matchRI: 0x063e, match64: 0x00000000, modelSI: -0x0001, models64: 0x7f2000007f4},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x60ef000060f4, matchRI: 0x0641, match64: 0x00000000, modelSI: 0x07f4, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x60f4000060fb, matchRI: 0x0642, match64: 0x00000000, modelSI: 0x07f5, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x60fb00006104, matchRI: 0x0643, match64: 0x00000000, modelSI: -0x0001, models64: 0x7f6000007f7},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x610800006112, matchRI: 0x0645, match64: 0x00000000, modelSI: -0x0001, models64: 0x7f7000007f9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x612200006126, matchRI: -0x0001, match64: 0x612200006126, modelSI: -0x0001, models64: 0x7f9000007fb},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x61260000612d, matchRI: 0x064a, match64: 0x00000000, modelSI: -0x0001, models64: 0x7fb000007fd},
			deviceTuple{type64: 0x20000000206, brand64: 0x612d00006135, matchRI: 0x064d, match64: 0x00000000, modelSI: -0x0001, models64: 0x7fd000007fe},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x61620000616a, matchRI: 0x064e, match64: 0x00000000, modelSI: -0x0001, models64: 0x7fe00000800},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x617800006180, matchRI: 0x0651, match64: 0x00000000, modelSI: -0x0001, models64: 0x80000000805},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x61a1000061a8, matchRI: 0x0657, match64: 0x00000000, modelSI: -0x0001, models64: 0x80500000809},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x61d0000061d6, matchRI: 0x065a, match64: 0x00000000, modelSI: -0x0001, models64: 0x8090000080c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x61f7000061fe, matchRI: 0x065c, match64: 0x00000000, modelSI: -0x0001, models64: 0x80c00000811},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x625300006257, matchRI: 0x0661, match64: 0x00000000, modelSI: -0x0001, models64: 0x81100000812},
			deviceTuple{type64: 0x20000000206, brand64: 0x625d00006266, matchRI: 0x0663, match64: 0x00000000, modelSI: -0x0001, models64: 0x81200000818},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x630800006310, matchRI: 0x0664, match64: 0x00000000, modelSI: 0x0818, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x63160000631c, matchRI: 0x0665, match64: 0x00000000, modelSI: 0x0819, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x631c00006322, matchRI: 0x0666, match64: 0x00000000, modelSI: -0x0001, models64: 0x81a0000082f},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x63d3000063d9, matchRI: 0x067a, match64: 0x00000000, modelSI: -0x0001, models64: 0x82f00000831},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x63f1000063f5, matchRI: 0x067c, match64: 0x00000000, modelSI: 0x0831, models64: 0x00000000},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x63f5000063f9, matchRI: 0x067d, match64: 0x00000000, modelSI: -0x0001, models64: 0x83200000834},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x63fd00006401, matchRI: 0x0680, match64: 0x00000000, modelSI: -0x0001, models64: 0x83400000836},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x64060000640f, matchRI: 0x0683, match64: 0x00000000, modelSI: -0x0001, models64: 0x8360000083c},
			deviceTuple{type64: 0x20000000206, brand64: 0x64680000646e, matchRI: 0x0685, match64: 0x00000000, modelSI: 0x083c, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x646e00006472, matchRI: -0x0001, match64: 0x647200006477, modelSI: -0x0001, models64: 0x83d0000083e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x648000006486, matchRI: -0x0001, match64: 0x648000006486, modelSI: -0x0001, models64: 0x83e00000840},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x64990000649c, matchRI: 0x0689, match64: 0x00000000, modelSI: -0x0001, models64: 0x84000000847},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x65190000651c, matchRI: 0x068a, match64: 0x00000000, modelSI: -0x0001, models64: 0x8470000084c},
			deviceTuple{type64: 0x20000000206, brand64: 0x654b0000654e, matchRI: 0x068b, match64: 0x00000000, modelSI: -0x0001, models64: 0x84c00000850},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x658b00006590, matchRI: 0x068e, match64: 0x00000000, modelSI: -0x0001, models64: 0x85000000852},
			deviceTuple{type64: 0x20000000206, brand64: 0x6597000065a0, matchRI: 0x0691, match64: 0x00000000, modelSI: 0x0852, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x65a0000065a8, matchRI: -0x0001, match64: 0x65a8000065b0, modelSI: 0x0853, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x65b9000065c2, matchRI: 0x0692, match64: 0x00000000, modelSI: 0x0854, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x65c2000065c8, matchRI: 0x0693, match64: 0x00000000, modelSI: 0x0855, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x65c8000065ce, matchRI: 0x0694, match64: 0x00000000, modelSI: 0x0856, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x65d3000065dd, matchRI: 0x0695, match64: 0x00000000, modelSI: 0x0857, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x65dd000065e6, matchRI: 0x0696, match64: 0x00000000, modelSI: 0x0858, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x65e6000065ea, matchRI: 0x0697, match64: 0x00000000, modelSI: -0x0001, models64: 0x8590000085e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x66170000661b, matchRI: 0x069a, match64: 0x00000000, modelSI: -0x0001, models64: 0x85e0000086a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x66d4000066d8, matchRI: 0x069d, match64: 0x00000000, modelSI: -0x0001, models64: 0x86a0000086b},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x66e3000066ec, matchRI: 0x069f, match64: 0x00000000, modelSI: -0x0001, models64: 0x86b0000086d},
			deviceTuple{type64: 0x28400000286, brand64: 0x66ec000066f2, matchRI: 0x06a2, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x66f200006700, matchRI: 0x06a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x86d0000087c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x67b9000067bc, matchRI: 0x06b3, match64: 0x00000000, modelSI: -0x0001, models64: 0x87c000008e6},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x6bf300006bf8, matchRI: 0x06f1, match64: 0x00000000, modelSI: -0x0001, models64: 0x8e6000008e9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x6bf800006bfd, matchRI: 0x06f5, match64: 0x00000000, modelSI: 0x08e9, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x6bfd00006c05, matchRI: 0x06f6, match64: 0x00000000, modelSI: -0x0001, models64: 0x8ea000008ec},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x6c1000006c17, matchRI: 0x06f9, match64: 0x00000000, modelSI: -0x0001, models64: 0x8ec000008ed},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x6c2100006c27, matchRI: 0x06fb, match64: 0x00000000, modelSI: 0x08ed, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x6c2700006c32, matchRI: 0x06fc, match64: 0x00000000, modelSI: -0x0001, models64: 0x8ee000008f1},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x6c4500006c4b, matchRI: 0x0700, match64: 0x00000000, modelSI: -0x0001, models64: 0x8f1000008f2},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x6c5900006c60, matchRI: 0x0702, match64: 0x00000000, modelSI: -0x0001, models64: 0x8f2000008f3},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x6c6b00006c72, matchRI: 0x0704, match64: 0x00000000, modelSI: -0x0001, models64: 0x8f300000905},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x6d7000006d77, matchRI: 0x070a, match64: 0x00000000, modelSI: -0x0001, models64: 0x90500000935},
			deviceTuple{type64: 0x28400000286, brand64: 0x70480000704d, matchRI: 0x073a, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x704d00007054, matchRI: 0x073b, match64: 0x00000000, modelSI: -0x0001, models64: 0x93500000937},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x706000007066, matchRI: -0x0001, match64: 0x706000007066, modelSI: -0x0001, models64: 0x9370000093b},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x708000007087, matchRI: 0x0740, match64: 0x00000000, modelSI: -0x0001, models64: 0x93b0000093d},
			deviceTuple{type64: 0x20000000206, brand64: 0x70960000709c, matchRI: 0x0743, match64: 0x00000000, modelSI: 0x093d, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x70a2000070a7, matchRI: 0x0744, match64: 0x00000000, modelSI: -0x0001, models64: 0x93e00000940},
			deviceTuple{type64: 0x20000000206, brand64: 0x70dc000070e2, matchRI: 0x0746, match64: 0x00000000, modelSI: 0x0940, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x70eb000070ee, matchRI: 0x0747, match64: 0x00000000, modelSI: -0x0001, models64: 0x94100000944},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x70f800007100, matchRI: 0x074a, match64: 0x00000000, modelSI: -0x0001, models64: 0x94400000959},
			deviceTuple{type64: 0x28400000286, brand64: 0x71f200007204, matchRI: 0x075c, match64: 0x00000000, modelSI: 0x0959, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x720900007214, matchRI: 0x075d, match64: 0x00000000, modelSI: -0x0001, models64: 0x95a0000095d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x722100007228, matchRI: -0x0001, match64: 0x72280000722f, modelSI: -0x0001, models64: 0x95d0000095e},
			deviceTuple{type64: 0x20000000206, brand64: 0x72380000723e, matchRI: 0x0761, match64: 0x00000000, modelSI: 0x095e, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x723e0000724c, matchRI: 0x0762, match64: 0x00000000, modelSI: -0x0001, models64: 0x95f0000096e},
			deviceTuple{type64: 0x20000000206, brand64: 0x72fe00007305, matchRI: 0x0765, match64: 0x00000000, modelSI: 0x096e, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x73050000730b, matchRI: 0x0766, match64: 0x00000000, modelSI: -0x0001, models64: 0x96f00000972},
			deviceTuple{type64: 0x28400000286, brand64: 0x73140000731a, matchRI: 0x0769, match64: 0x00000000, modelSI: 0x0972, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x731a0000731e, matchRI: 0x076a, match64: 0x00000000, modelSI: -0x0001, models64: 0x9730000097e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x739300007398, matchRI: 0x0770, match64: 0x00000000, modelSI: 0x097e, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x73980000739d, matchRI: 0x0771, match64: 0x00000000, modelSI: -0x0001, models64: 0x97f00000980},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x73a0000073a8, matchRI: 0x0773, match64: 0x00000000, modelSI: -0x0001, models64: 0x98000000984},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x73c1000073c8, matchRI: 0x0777, match64: 0x00000000, modelSI: -0x0001, models64: 0x9840000098e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x741000007414, matchRI: 0x077e, match64: 0x00000000, modelSI: -0x0001, models64: 0x98e00000992},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x742000007426, matchRI: 0x0783, match64: 0x00000000, modelSI: -0x0001, models64: 0x99200000996},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x743100007437, matchRI: 0x0788, match64: 0x00000000, modelSI: -0x0001, models64: 0x996000009a7},
			deviceTuple{type64: 0x20000000206, brand64: 0x74a1000074a7, matchRI: 0x0796, match64: 0x00000000, modelSI: -0x0001, models64: 0x9a7000009aa},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x74b0000074b8, matchRI: 0x079a, match64: 0x00000000, modelSI: 0x09aa, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x74bf000074c7, matchRI: 0x079b, match64: 0x00000000, modelSI: -0x0001, models64: 0x9ab000009ad},
			deviceTuple{type64: 0x1fd200001fda, brand64: 0x74d9000074e0, matchRI: -0x0001, match64: 0x74e0000074ec, modelSI: 0x09ad, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x74ee000074f8, matchRI: -0x0001, match64: 0x74f800007501, modelSI: -0x0001, models64: 0x9ae000009af},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x750a0000750e, matchRI: 0x079d, match64: 0x00000000, modelSI: -0x0001, models64: 0x9af000009b1},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x750e00007512, matchRI: 0x07a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x9b1000009bc},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x752a00007530, matchRI: 0x07ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x9bc000009d8},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x76440000764c, matchRI: 0x07b7, match64: 0x00000000, modelSI: -0x0001, models64: 0x9d8000009e0},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x767000007677, matchRI: 0x07c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x9e0000009e2},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x76770000767c, matchRI: 0x07c2, match64: 0x00000000, modelSI: 0x09e2, models64: 0x00000000},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x767c00007685, matchRI: -0x0001, match64: 0x76850000768e, modelSI: -0x0001, models64: 0x9e3000009e5},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x768e00007693, matchRI: 0x07c5, match64: 0x00000000, modelSI: 0x09e5, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x769a0000769e, matchRI: 0x07c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x9e6000009e9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x76ba000076c2, matchRI: 0x07c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x9e9000009ea},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x76ce000076d4, matchRI: 0x07ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x9ea000009ec},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x76e9000076ef, matchRI: 0x07cc, match64: 0x00000000, modelSI: -0x0001, models64: 0x9ec000009ee},
			deviceTuple{type64: 0x28400000286, brand64: 0x76ef000076f6, matchRI: 0x07cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x9ee000009f4},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x774500007749, matchRI: 0x07d3, match64: 0x00000000, modelSI: -0x0001, models64: 0x9f4000009f6},
			deviceTuple{type64: 0x28400000286, brand64: 0x775e00007761, matchRI: 0x07d6, match64: 0x00000000, modelSI: -0x0001, models64: 0x9f6000009f9},
			deviceTuple{type64: 0x20000000206, brand64: 0x777100007776, matchRI: 0x07da, match64: 0x00000000, modelSI: 0x09f9, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x77760000777a, matchRI: 0x07db, match64: 0x00000000, modelSI: -0x0001, models64: 0x9fa000009fb},
			deviceTuple{type64: 0x28400000286, brand64: 0x778000007785, matchRI: 0x07dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x778500007787, matchRI: 0x07de, match64: 0x00000000, modelSI: -0x0001, models64: 0x9fb00000a0a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x78490000784c, matchRI: 0x07e9, match64: 0x00000000, modelSI: -0x0001, models64: 0xa0a00000a5a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x7ae900007aef, matchRI: 0x0831, match64: 0x00000000, modelSI: -0x0001, models64: 0xa5a00000a5c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x7af300007af8, matchRI: 0x0834, match64: 0x00000000, modelSI: -0x0001, models64: 0xa5c00000a71},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x7ba500007bab, matchRI: -0x0001, match64: 0x7ba500007bab, modelSI: -0x0001, models64: 0xa7100000a72},
			deviceTuple{type64: 0x20000000206, brand64: 0x7bb300007bb9, matchRI: 0x083f, match64: 0x00000000, modelSI: -0x0001, models64: 0xa7200000a73},
			deviceTuple{type64: 0x20000000206, brand64: 0x7bc500007bce, matchRI: 0x0841, match64: 0x00000000, modelSI: -0x0001, models64: 0xa7300000a7a},
			deviceTuple{type64: 0x5f5100005f5b, brand64: 0x7c0400007c0e, matchRI: 0x0844, match64: 0x00000000, modelSI: 0x0a7a, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x7c1700007c1c, matchRI: -0x0001, match64: 0x7c1700007c1c, modelSI: -0x0001, models64: 0xa7b00000a7d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x7c1c00007c21, matchRI: 0x0847, match64: 0x00000000, modelSI: 0x0a7d, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x7c2100007c27, matchRI: 0x0848, match64: 0x00000000, modelSI: 0x0a7e, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x7c2700007c29, matchRI: 0x0849, match64: 0x00000000, modelSI: -0x0001, models64: 0xa7f00000a81},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x7c3900007c40, matchRI: 0x084c, match64: 0x00000000, modelSI: -0x0001, models64: 0xa8100000a83},
			deviceTuple{type64: 0x20000000206, brand64: 0x7c5800007c60, matchRI: 0x084d, match64: 0x00000000, modelSI: 0x0a83, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x7c6700007c6c, matchRI: 0x084e, match64: 0x00000000, modelSI: -0x0001, models64: 0xa8400000a86},
			deviceTuple{type64: 0x20000000206, brand64: 0x7c7c00007c82, matchRI: 0x0851, match64: 0x00000000, modelSI: 0x0a86, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x7c8200007c8c, matchRI: 0x0852, match64: 0x00000000, modelSI: -0x0001, models64: 0xa8700000aaa},
			deviceTuple{type64: 0x20000000206, brand64: 0x7dc900007dd2, matchRI: 0x0876, match64: 0x00000000, modelSI: -0x0001, models64: 0xaaa00000aad},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x7dd700007dde, matchRI: 0x087a, match64: 0x00000000, modelSI: -0x0001, models64: 0xaad00000ae1},
			deviceTuple{type64: 0x28400000286, brand64: 0x7fa400007fab, matchRI: 0x089f, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x7fab00007fb1, matchRI: 0x08a0, match64: 0x00000000, modelSI: 0x0ae1, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x7fb100007fb9, matchRI: 0x08a1, match64: 0x00000000, modelSI: -0x0001, models64: 0xae200000ae5},
			deviceTuple{type64: 0x20000000206, brand64: 0x7fbd00007fc5, matchRI: 0x08a5, match64: 0x00000000, modelSI: -0x0001, models64: 0xae500000ae9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x7fe200007fe8, matchRI: 0x08aa, match64: 0x00000000, modelSI: -0x0001, models64: 0xae900000aec},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x7ff400007ffd, matchRI: 0x08ae, match64: 0x00000000, modelSI: -0x0001, models64: 0xaec00000aee},
			deviceTuple{type64: 0x20000000206, brand64: 0x801100008016, matchRI: 0x08b1, match64: 0x00000000, modelSI: -0x0001, models64: 0xaee00000af1},
			deviceTuple{type64: 0x28400000286, brand64: 0x80160000801e, matchRI: 0x08b5, match64: 0x00000000, modelSI: 0x0af1, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x801e00008023, matchRI: 0x08b6, match64: 0x00000000, modelSI: -0x0001, models64: 0xaf200000af4},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x80230000802d, matchRI: 0x08b9, match64: 0x00000000, modelSI: -0x0001, models64: 0xaf400000af7},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x804e00008054, matchRI: 0x08ba, match64: 0x00000000, modelSI: -0x0001, models64: 0xaf700000b00},
			deviceTuple{type64: 0x20000000206, brand64: 0x809b0000809e, matchRI: 0x08c1, match64: 0x00000000, modelSI: -0x0001, models64: 0xb0000000b03},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x80b3000080b9, matchRI: 0x08c5, match64: 0x00000000, modelSI: 0x0b03, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x80b9000080bf, matchRI: 0x08c6, match64: 0x00000000, modelSI: -0x0001, models64: 0xb0400000b05},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x80bf000080c4, matchRI: 0x08c8, match64: 0x00000000, modelSI: -0x0001, models64: 0xb0500000b06},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x80d3000080d9, matchRI: 0x08ca, match64: 0x00000000, modelSI: -0x0001, models64: 0xb0600000ca3},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x93e3000093ec, matchRI: 0x0a41, match64: 0x00000000, modelSI: -0x0001, models64: 0xca300000cb3},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x948200009488, matchRI: 0x0a46, match64: 0x00000000, modelSI: 0x0cb3, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x948f00009496, matchRI: 0x0a47, match64: 0x00000000, modelSI: -0x0001, models64: 0xcb400000cca},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x95a3000095a7, matchRI: 0x0a51, match64: 0x00000000, modelSI: -0x0001, models64: 0xcca00000ccc},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x95bd000095c7, matchRI: 0x0a52, match64: 0x00000000, modelSI: -0x0001, models64: 0xccc00000cd0},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x95fe00009608, matchRI: 0x0a54, match64: 0x00000000, modelSI: -0x0001, models64: 0xcd000000cd4},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x960d00009617, matchRI: 0x0a59, match64: 0x00000000, modelSI: -0x0001, models64: 0xcd400000ce7},
			deviceTuple{type64: 0x940000009f, brand64: 0x96a8000096ad, matchRI: 0x0a6d, match64: 0x00000000, modelSI: 0x0ce7, models64: 0x00000000},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x96ad000096b0, matchRI: 0x0a6e, match64: 0x00000000, modelSI: -0x0001, models64: 0xce800000cea},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x96b0000096b5, matchRI: 0x0a71, match64: 0x00000000, modelSI: -0x0001, models64: 0xcea00000ceb},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x96bd000096c0, matchRI: 0x0a72, match64: 0x00000000, modelSI: -0x0001, models64: 0xceb00000cee},
			deviceTuple{type64: 0x20000000206, brand64: 0x96cd000096d0, matchRI: 0x0a76, match64: 0x00000000, modelSI: 0x0cee, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x96da000096dc, matchRI: 0x0a77, match64: 0x00000000, modelSI: -0x0001, models64: 0xcef00000cf1},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x96f1000096f5, matchRI: 0x0a79, match64: 0x00000000, modelSI: -0x0001, models64: 0xcf100000cf2},
			deviceTuple{type64: 0x20000000206, brand64: 0x96f5000096fc, matchRI: 0x0a7b, match64: 0x00000000, modelSI: -0x0001, models64: 0xcf200000d09},
			deviceTuple{type64: 0x20000000206, brand64: 0x99320000993c, matchRI: 0x0a7e, match64: 0x00000000, modelSI: -0x0001, models64: 0xd0900000d0e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x994e00009955, matchRI: 0x0a84, match64: 0x00000000, modelSI: -0x0001, models64: 0xd0e00000d16},
			deviceTuple{type64: 0x20000000206, brand64: 0x99b4000099b8, matchRI: 0x0a85, match64: 0x00000000, modelSI: -0x0001, models64: 0xd1600000d18},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x99bb000099bf, matchRI: 0x0a88, match64: 0x00000000, modelSI: -0x0001, models64: 0xd1800000d1c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x99e3000099ea, matchRI: -0x0001, match64: 0x99e3000099ea, modelSI: -0x0001, models64: 0xd1c00000d76},
			deviceTuple{type64: 0x28400000286, brand64: 0x9c7900009c80, matchRI: 0x0ae3, match64: 0x00000000, modelSI: 0x0d76, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x9c8000009c85, matchRI: 0x0ae4, match64: 0x00000000, modelSI: 0x0d77, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x9c8500009c8b, matchRI: 0x0ae5, match64: 0x00000000, modelSI: -0x0001, models64: 0xd7800000d85},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x9d0200009d07, matchRI: 0x0af1, match64: 0x00000000, modelSI: 0x0d85, models64: 0x00000000},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x9d0700009d11, matchRI: 0x0af2, match64: 0x00000000, modelSI: 0x0d86, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x9d1700009d1b, matchRI: -0x0001, match64: 0x9d1b00009d1f, modelSI: -0x0001, models64: 0xd8700000d8f},
			deviceTuple{type64: 0x20000000206, brand64: 0x9d6a00009d72, matchRI: 0x0afa, match64: 0x00000000, modelSI: -0x0001, models64: 0xd8f00000d97},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x9df100009df6, matchRI: 0x0afd, match64: 0x00000000, modelSI: -0x0001, models64: 0xd9700000da4},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x9e7100009e77, matchRI: 0x0b0a, match64: 0x00000000, modelSI: 0x0da4, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x9e7700009e7c, matchRI: 0x0b0b, match64: 0x00000000, modelSI: -0x0001, models64: 0xda500000da7},
			deviceTuple{type64: 0x20000000206, brand64: 0x9e8900009e8e, matchRI: 0x0b0d, match64: 0x00000000, modelSI: -0x0001, models64: 0xda700000da9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x9e8e00009e92, matchRI: 0x0b10, match64: 0x00000000, modelSI: -0x0001, models64: 0xda900000db7},
			deviceTuple{type64: 0x20000000206, brand64: 0x9f7200009f7a, matchRI: 0x0b15, match64: 0x00000000, modelSI: -0x0001, models64: 0xdb700000db9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x9f8600009f8b, matchRI: 0x0b18, match64: 0x00000000, modelSI: 0x0db9, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x9f8b00009f8e, matchRI: 0x0b19, match64: 0x00000000, modelSI: 0x0dba, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x9f8e00009f91, matchRI: 0x0b1a, match64: 0x00000000, modelSI: -0x0001, models64: 0xdbb00000dbe},
			deviceTuple{type64: 0x7f1000007f8, brand64: 0x9f9100009f95, matchRI: 0x0b1e, match64: 0x00000000, modelSI: -0x0001, models64: 0xdbe00000dc0},
			deviceTuple{type64: 0x20000000206, brand64: 0x9fa800009fac, matchRI: 0x0b1f, match64: 0x00000000, modelSI: -0x0001, models64: 0xdc000000dc2},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x9fb900009fbd, matchRI: 0x0b22, match64: 0x00000000, modelSI: -0x0001, models64: 0xdc200000dc4},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x9fcb00009fd0, matchRI: 0x0b24, match64: 0x00000000, modelSI: 0x0dc4, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x9fd500009fda, matchRI: 0x0b25, match64: 0x00000000, modelSI: -0x0001, models64: 0xdc500000dc8},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x9fe400009fe9, matchRI: 0x0b29, match64: 0x00000000, modelSI: -0x0001, models64: 0xdc800000dde},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa08a0000a08d, matchRI: 0x0b40, match64: 0x00000000, modelSI: -0x0001, models64: 0xdde00000ddf},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa09a0000a09e, matchRI: 0x0b42, match64: 0x00000000, modelSI: -0x0001, models64: 0xddf00000de3},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa0d90000a0de, matchRI: -0x0001, match64: 0xa0d90000a0de, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa0de0000a0e1, matchRI: 0x0b47, match64: 0x00000000, modelSI: -0x0001, models64: 0xde300000de4},
			deviceTuple{type64: 0x20000000206, brand64: 0xa0e10000a0e7, matchRI: 0x0b49, match64: 0x00000000, modelSI: 0x0de4, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa0ef0000a0fe, matchRI: -0x0001, match64: 0xa0fe0000a107, modelSI: -0x0001, models64: 0xde500000de6},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa1130000a118, matchRI: 0x0b4a, match64: 0x00000000, modelSI: -0x0001, models64: 0xde600000dee},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa1730000a17a, matchRI: 0x0b4f, match64: 0x00000000, modelSI: -0x0001, models64: 0xdee00000df1},
			deviceTuple{type64: 0x28400000286, brand64: 0xa1850000a18a, matchRI: 0x0b52, match64: 0x00000000, modelSI: 0x0df1, models64: 0x00000000},
			deviceTuple{type64: 0x9f700000a04, brand64: 0xa18a0000a18e, matchRI: 0x0b53, match64: 0x00000000, modelSI: -0x0001, models64: 0xdf200000df4},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa19d0000a1a5, matchRI: 0x0b56, match64: 0x00000000, modelSI: -0x0001, models64: 0xdf400000df6},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa1ad0000a1b1, matchRI: 0x0b59, match64: 0x00000000, modelSI: -0x0001, models64: 0xdf600000df8},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa1b10000a1b5, matchRI: 0x0b5c, match64: 0x00000000, modelSI: -0x0001, models64: 0xdf800000dfa},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa1b50000a1b9, matchRI: 0x0b5f, match64: 0x00000000, modelSI: -0x0001, models64: 0xdfa00000dfc},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa1be0000a1c3, matchRI: 0x0b62, match64: 0x00000000, modelSI: -0x0001, models64: 0xdfc00000dfe},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa1d80000a1df, matchRI: 0x0b64, match64: 0x00000000, modelSI: 0x0dfe, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa1df0000a1e3, matchRI: 0x0b65, match64: 0x00000000, modelSI: 0x0dff, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0xa1e30000a1e9, matchRI: 0x0b66, match64: 0x00000000, modelSI: 0x0e00, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa1f40000a1fa, matchRI: 0x0b67, match64: 0x00000000, modelSI: -0x0001, models64: 0xe0100000e0b},
			deviceTuple{type64: 0x20000000206, brand64: 0xa2870000a28c, matchRI: 0x0b6c, match64: 0x00000000, modelSI: -0x0001, models64: 0xe0b00000e11},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa2e20000a2e9, matchRI: 0x0b6d, match64: 0x00000000, modelSI: -0x0001, models64: 0xe1100000e39},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa5090000a50d, matchRI: 0x0b7d, match64: 0x00000000, modelSI: -0x0001, models64: 0xe3900000e3e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa51c0000a521, matchRI: 0x0b83, match64: 0x00000000, modelSI: -0x0001, models64: 0xe3e00000e43},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa5520000a558, matchRI: -0x0001, match64: 0xa5580000a55f, modelSI: -0x0001, models64: 0xe4300000e44},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa56b0000a57c, matchRI: 0x0b87, match64: 0x00000000, modelSI: -0x0001, models64: 0xe4400000e4c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa5e00000a5e7, matchRI: 0x0b8a, match64: 0x00000000, modelSI: -0x0001, models64: 0xe4c00000e53},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa5fa0000a602, matchRI: 0x0b92, match64: 0x00000000, modelSI: 0x0e53, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa6150000a61a, matchRI: 0x0b93, match64: 0x00000000, modelSI: -0x0001, models64: 0xe5400000e5b},
			deviceTuple{type64: 0x28400000286, brand64: 0xa6770000a67e, matchRI: -0x0001, match64: 0xa6770000a67e, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa67e0000a685, matchRI: 0x0b9a, match64: 0x00000000, modelSI: -0x0001, models64: 0xe5b00000e5d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa6850000a68a, matchRI: 0x0b9d, match64: 0x00000000, modelSI: -0x0001, models64: 0xe5d00000e5e},
			deviceTuple{type64: 0x28400000286, brand64: 0xa6940000a698, matchRI: 0x0b9f, match64: 0x00000000, modelSI: -0x0001, models64: 0xe5e00000e61},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa69e0000a6a4, matchRI: 0x0ba3, match64: 0x00000000, modelSI: -0x0001, models64: 0xe6100000e63},
			deviceTuple{type64: 0x20000000206, brand64: 0xa6a40000a6aa, matchRI: 0x0ba6, match64: 0x00000000, modelSI: -0x0001, models64: 0xe6300000e71},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa6cf0000a6d4, matchRI: 0x0bb5, match64: 0x00000000, modelSI: -0x0001, models64: 0xe7100000e77},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa7070000a70c, matchRI: -0x0001, match64: 0xa7070000a70c, modelSI: -0x0001, models64: 0xe7700000e7a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa70c0000a710, matchRI: 0x0bbe, match64: 0x00000000, modelSI: -0x0001, models64: 0xe7a00000e7c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa7100000a715, matchRI: 0x0bc1, match64: 0x00000000, modelSI: -0x0001, models64: 0xe7c00000e82},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa7490000a74f, matchRI: 0x0bc5, match64: 0x00000000, modelSI: -0x0001, models64: 0xe8200000e8c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa78c0000a792, matchRI: -0x0001, match64: 0xa78c0000a792, modelSI: -0x0001, models64: 0xe8c00000e8e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa7920000a799, matchRI: 0x0bd2, match64: 0x00000000, modelSI: 0x0e8e, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa7990000a79f, matchRI: 0x0bd3, match64: 0x00000000, modelSI: 0x0e8f, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa7aa0000a7b0, matchRI: 0x0bd4, match64: 0x00000000, modelSI: 0x0e90, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0xa7b00000a7b6, matchRI: 0x0bd5, match64: 0x00000000, modelSI: 0x0e91, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa7b60000a7c2, matchRI: 0x0bd6, match64: 0x00000000, modelSI: -0x0001, models64: 0xe9200000ea9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa8af0000a8b5, matchRI: 0x0beb, match64: 0x00000000, modelSI: 0x0ea9, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa8b50000a8b9, matchRI: 0x0bec, match64: 0x00000000, modelSI: 0x0eaa, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa8b90000a8be, matchRI: 0x0bed, match64: 0x00000000, modelSI: -0x0001, models64: 0xeab00000ead},
			deviceTuple{type64: 0x20000000206, brand64: 0xa8be0000a8c3, matchRI: -0x0001, match64: 0xa8be0000a8c3, modelSI: -0x0001, models64: 0xead00000eaf},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa8cf0000a8d6, matchRI: 0x0bf2, match64: 0x00000000, modelSI: -0x0001, models64: 0xeaf00000ef7},
			deviceTuple{type64: 0x20000000206, brand64: 0xab840000ab8a, matchRI: 0x0c33, match64: 0x00000000, modelSI: 0x0ef7, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xab8a0000ab8e, matchRI: 0x0c34, match64: 0x00000000, modelSI: -0x0001, models64: 0xef800000efc},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xabc50000abca, matchRI: 0x0c35, match64: 0x00000000, modelSI: -0x0001, models64: 0xefc00000efe},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xabe10000abe5, matchRI: -0x0001, match64: 0xabe10000abe5, modelSI: -0x0001, models64: 0xefe00000eff},
			deviceTuple{type64: 0x9f700000a04, brand64: 0xabe50000abe8, matchRI: 0x0c39, match64: 0x00000000, modelSI: 0x0eff, models64: 0x00000000},
			deviceTuple{type64: 0x1fd200001fda, brand64: 0xabe80000abed, matchRI: 0x0c3a, match64: 0x00000000, modelSI: -0x0001, models64: 0xf0000000f02},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xabed0000abef, matchRI: 0x0c3d, match64: 0x00000000, modelSI: -0x0001, models64: 0xf020000100d},
			deviceTuple{type64: 0x1fd200001fda, brand64: 0xb5ae0000b5b4, matchRI: 0x0ce3, match64: 0x00000000, modelSI: 0x100d, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xb5b40000b5bd, matchRI: 0x0ce4, match64: 0x00000000, modelSI: -0x0001, models64: 0x100e00001011},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xb5d40000b5d7, matchRI: 0x0ce7, match64: 0x00000000, modelSI: -0x0001, models64: 0x101100001032},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xb78f0000b799, matchRI: 0x0ceb, match64: 0x00000000, modelSI: -0x0001, models64: 0x103200001035},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xb7b80000b7be, matchRI: 0x0cee, match64: 0x00000000, modelSI: -0x0001, models64: 0x103500001037},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xb7d00000b7d5, matchRI: 0x0cf0, match64: 0x00000000, modelSI: -0x0001, models64: 0x10370000103d},
			deviceTuple{type64: 0x20000000206, brand64: 0xb8110000b815, matchRI: 0x0cf5, match64: 0x00000000, modelSI: -0x0001, models64: 0x103d0000104c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xb8ef0000b8f3, matchRI: 0x0d01, match64: 0x00000000, modelSI: -0x0001, models64: 0x104c00001074},
			deviceTuple{type64: 0x20000000206, brand64: 0xba0c0000ba12, matchRI: 0x0d26, match64: 0x00000000, modelSI: -0x0001, models64: 0x107400001078},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xba340000ba39, matchRI: 0x0d2a, match64: 0x00000000, modelSI: -0x0001, models64: 0x107800001086},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xba870000ba93, matchRI: 0x0d38, match64: 0x00000000, modelSI: -0x0001, models64: 0x10860000108d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xbaec0000baf2, matchRI: 0x0d3a, match64: 0x00000000, modelSI: -0x0001, models64: 0x108d0000109d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xbb800000bb87, matchRI: 0x0d48, match64: 0x00000000, modelSI: -0x0001, models64: 0x109d0000109f},
			deviceTuple{type64: 0x28400000286, brand64: 0xbba30000bba7, matchRI: 0x0d4b, match64: 0x00000000, modelSI: 0x109f, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0xbba70000bbab, matchRI: 0x0d4c, match64: 0x00000000, modelSI: 0x10a0, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xbbb10000bbb8, matchRI: -0x0001, match64: 0xbbb10000bbb8, modelSI: -0x0001, models64: 0x10a1000010a2},
			deviceTuple{type64: 0x20000000206, brand64: 0xbbb80000bbbd, matchRI: 0x0d4e, match64: 0x00000000, modelSI: -0x0001, models64: 0x10a2000010a4},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xbbee0000bbf4, matchRI: 0x0d50, match64: 0x00000000, modelSI: -0x0001, models64: 0x10a40000113f},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc1f50000c1fb, matchRI: 0x0dce, match64: 0x00000000, modelSI: -0x0001, models64: 0x113f00001144},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc24d0000c254, matchRI: 0x0dd1, match64: 0x00000000, modelSI: -0x0001, models64: 0x114400001147},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc26a0000c26f, matchRI: 0x0dd4, match64: 0x00000000, modelSI: 0x1147, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc2770000c27d, matchRI: 0x0dd5, match64: 0x00000000, modelSI: -0x0001, models64: 0x114800001156},
			deviceTuple{type64: 0x20000000206, brand64: 0xc30a0000c312, matchRI: 0x0dd8, match64: 0x00000000, modelSI: -0x0001, models64: 0x11560000116d},
			deviceTuple{type64: 0x28400000286, brand64: 0xc4f30000c4fb, matchRI: 0x0ddb, match64: 0x00000000, modelSI: 0x116d, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0xc4fb0000c503, matchRI: 0x0ddc, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc5030000c50a, matchRI: 0x0ddd, match64: 0x00000000, modelSI: -0x0001, models64: 0x116e00001170},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc50a0000c510, matchRI: 0x0de0, match64: 0x00000000, modelSI: 0x1170, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc5150000c51a, matchRI: 0x0de1, match64: 0x00000000, modelSI: -0x0001, models64: 0x117100001176},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc52b0000c53b, matchRI: -0x0001, match64: 0xc52b0000c53b, modelSI: -0x0001, models64: 0x117600001177},
			deviceTuple{type64: 0x20000000206, brand64: 0xc5470000c54e, matchRI: 0x0de8, match64: 0x00000000, modelSI: -0x0001, models64: 0x117700001199},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc6b90000c6c0, matchRI: 0x0e04, match64: 0x00000000, modelSI: 0x1199, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc6c00000c6c5, matchRI: 0x0e05, match64: 0x00000000, modelSI: -0x0001, models64: 0x119a0000119e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc6d60000c6da, matchRI: 0x0e0a, match64: 0x00000000, modelSI: -0x0001, models64: 0x119e000011a0},
			deviceTuple{type64: 0x28400000286, brand64: 0xc6da0000c6df, matchRI: 0x0e0d, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc6df0000c6e6, matchRI: 0x0e0e, match64: 0x00000000, modelSI: -0x0001, models64: 0x11a0000011a2},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc6f30000c6f9, matchRI: 0x0e10, match64: 0x00000000, modelSI: -0x0001, models64: 0x11a2000011a7},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc7250000c72b, matchRI: 0x0e12, match64: 0x00000000, modelSI: -0x0001, models64: 0x11a7000011a9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc7330000c738, matchRI: 0x0e15, match64: 0x00000000, modelSI: -0x0001, models64: 0x11a9000011c2},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc85d0000c862, matchRI: 0x0e18, match64: 0x00000000, modelSI: -0x0001, models64: 0x11c2000011c6},
			deviceTuple{type64: 0x20000000206, brand64: 0xc87c0000c880, matchRI: 0x0e1c, match64: 0x00000000, modelSI: 0x11c6, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0xc8800000c884, matchRI: 0x0e1d, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc8840000c88d, matchRI: 0x0e1e, match64: 0x00000000, modelSI: -0x0001, models64: 0x11c7000011ca},
			deviceTuple{type64: 0x28400000286, brand64: 0xc8990000c89d, matchRI: 0x0e22, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc89d0000c8a1, matchRI: 0x0e23, match64: 0x00000000, modelSI: -0x0001, models64: 0x11ca000011cc},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc8a10000c8a4, matchRI: 0x0e26, match64: 0x00000000, modelSI: 0x11cc, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc8a40000c8a8, matchRI: 0x0e27, match64: 0x00000000, modelSI: -0x0001, models64: 0x11cd000011cf},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc8b60000c8ba, matchRI: 0x0e2a, match64: 0x00000000, modelSI: -0x0001, models64: 0x11cf000011d1},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc8ba0000c8bf, matchRI: 0x0e2d, match64: 0x00000000, modelSI: -0x0001, models64: 0x11d1000011d3},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xc8bf0000c8c2, matchRI: 0x0e30, match64: 0x00000000, modelSI: -0x0001, models64: 0x11d30000120a},
			deviceTuple{type64: 0x28400000286, brand64: 0xcaea0000caed, matchRI: 0x0e68, match64: 0x00000000, modelSI: 0x120a, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0xcaed0000caf0, matchRI: 0x0e69, match64: 0x00000000, modelSI: -0x0001, models64: 0x120b0000120d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xcaf80000cafb, matchRI: 0x0e6b, match64: 0x00000000, modelSI: -0x0001, models64: 0x120d0000121d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xcbd80000cbdb, matchRI: -0x0001, match64: 0xcbdb0000cbdf, modelSI: -0x0001, models64: 0x121d00001220},
			deviceTuple{type64: 0x20000000206, brand64: 0xcc010000cc06, matchRI: -0x0001, match64: 0xcc060000cc0d, modelSI: 0x1220, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xcc160000cc1c, matchRI: 0x0e79, match64: 0x00000000, modelSI: 0x1221, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xcc260000cc2a, matchRI: 0x0e7a, match64: 0x00000000, modelSI: -0x0001, models64: 0x122200001223},
			deviceTuple{type64: 0x28400000286, brand64: 0xcc3d0000cc45, matchRI: 0x0e7b, match64: 0x00000000, modelSI: 0x1223, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xcc4c0000cc52, matchRI: 0x0e7c, match64: 0x00000000, modelSI: -0x0001, models64: 0x122400001226},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xcc650000cc6d, matchRI: 0x0e7f, match64: 0x00000000, modelSI: -0x0001, models64: 0x122600001231},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xccbe0000ccc4, matchRI: 0x0e89, match64: 0x00000000, modelSI: 0x1231, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xccc40000ccc8, matchRI: 0x0e8a, match64: 0x00000000, modelSI: 0x1232, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xccc80000ccd8, matchRI: 0x0e8b, match64: 0x00000000, modelSI: -0x0001, models64: 0x12330000123d},
			deviceTuple{type64: 0x5f5100005f5b, brand64: 0xcd590000cd5f, matchRI: 0x0e8e, match64: 0x00000000, modelSI: 0x123d, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xcd5f0000cd63, matchRI: 0x0e8f, match64: 0x00000000, modelSI: 0x123e, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xcd630000cd69, matchRI: 0x0e90, match64: 0x00000000, modelSI: -0x0001, models64: 0x123f00001241},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xcd6e0000cd75, matchRI: 0x0e93, match64: 0x00000000, modelSI: -0x0001, models64: 0x124100001247},
			deviceTuple{type64: 0x28400000286, brand64: 0xcd9d0000cda7, matchRI: 0x0e99, match64: 0x00000000, modelSI: 0x1247, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0xcda70000cdad, matchRI: 0x0e9a, match64: 0x00000000, modelSI: -0x0001, models64: 0x12480000124b},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xcdc90000cdcf, matchRI: 0x0e9d, match64: 0x00000000, modelSI: -0x0001, models64: 0x124b0000124d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xcdd30000cdda, matchRI: 0x0ea0, match64: 0x00000000, modelSI: -0x0001, models64: 0x124d00001250},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xcde10000cde8, matchRI: 0x0ea4, match64: 0x00000000, modelSI: -0x0001, models64: 0x125000001252},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xcde80000cdef, matchRI: 0x0ea7, match64: 0x00000000, modelSI: -0x0001, models64: 0x125200001263},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xcedc0000cee0, matchRI: 0x0eb2, match64: 0x00000000, modelSI: -0x0001, models64: 0x126300001266},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xcee70000cef1, matchRI: 0x0eb6, match64: 0x00000000, modelSI: -0x0001, models64: 0x126600001267},
			deviceTuple{type64: 0x20000000206, brand64: 0xcef70000cefc, matchRI: 0x0eb8, match64: 0x00000000, modelSI: -0x0001, models64: 0x12670000126e},
			deviceTuple{type64: 0x28400000286, brand64: 0xcf800000cf86, matchRI: 0x0ec0, match64: 0x00000000, modelSI: -0x0001, models64: 0x126e0000127b},
			deviceTuple{type64: 0x20000000206, brand64: 0xcfe90000cff1, matchRI: 0x0ece, match64: 0x00000000, modelSI: -0x0001, models64: 0x127b000012b1},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xd3ce0000d3d4, matchRI: 0x0f02, match64: 0x00000000, modelSI: -0x0001, models64: 0x12b1000012b8},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xd3e50000d3ec, matchRI: 0x0f0a, match64: 0x00000000, modelSI: -0x0001, models64: 0x12b8000012bf},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xd4240000d429, matchRI: 0x0f10, match64: 0x00000000, modelSI: -0x0001, models64: 0x12bf000012ca},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xd4340000d439, matchRI: 0x0f1c, match64: 0x00000000, modelSI: -0x0001, models64: 0x12ca000012f3},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xd4eb0000d4f2, matchRI: 0x0f45, match64: 0x00000000, modelSI: -0x0001, models64: 0x12f3000012f6},
			deviceTuple{type64: 0x20000000206, brand64: 0xd50d0000d512, matchRI: 0x0f49, match64: 0x00000000, modelSI: -0x0001, models64: 0x12f6000012fa},
			deviceTuple{type64: 0x20000000206, brand64: 0xd5480000d54d, matchRI: 0x0f4e, match64: 0x00000000, modelSI: -0x0001, models64: 0x12fa000012fe},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xd56e0000d576, matchRI: 0x0f53, match64: 0x00000000, modelSI: -0x0001, models64: 0x12fe00001322},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xfe00000107, matchRI: 0x0f71, match64: 0x00000000, modelSI: -0x0001, models64: 0x13220000133f},
			deviceTuple{type64: 0x20000000206, brand64: 0xd8820000d88b, matchRI: 0x0f80, match64: 0x00000000, modelSI: 0x133f, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0xd8940000d899, matchRI: 0x0f81, match64: 0x00000000, modelSI: -0x0001, models64: 0x13400000134b},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xd8ee0000d8f3, matchRI: 0x0f8d, match64: 0x00000000, modelSI: -0x0001, models64: 0x134b0000134e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xd9190000d91c, matchRI: 0x0f91, match64: 0x00000000, modelSI: -0x0001, models64: 0x134e00001351},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xd9500000d955, matchRI: 0x0f94, match64: 0x00000000, modelSI: -0x0001, models64: 0x135100001353},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xd95c0000d961, matchRI: 0x0f97, match64: 0x00000000, modelSI: -0x0001, models64: 0x135300001355},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xd96e0000d972, matchRI: 0x0f9a, match64: 0x00000000, modelSI: -0x0001, models64: 0x135500001359},
			deviceTuple{type64: 0x9f700000a04, brand64: 0xd9810000d98b, matchRI: 0x0f9f, match64: 0x00000000, modelSI: -0x0001, models64: 0x13590000135c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xd98b0000d991, matchRI: 0x0fa3, match64: 0x00000000, modelSI: 0x135c, models64: 0x00000000},
			deviceTuple{type64: 0x5f5100005f5b, brand64: 0xd9910000d998, matchRI: 0x0fa4, match64: 0x00000000, modelSI: -0x0001, models64: 0x135d0000135e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xd9a80000d9b0, matchRI: 0x0fa6, match64: 0x00000000, modelSI: -0x0001, models64: 0x135e00001362},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xd9db0000d9e2, matchRI: 0x0fa8, match64: 0x00000000, modelSI: -0x0001, models64: 0x13620000138b},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xdbcc0000dbd5, matchRI: 0x0faf, match64: 0x00000000, modelSI: -0x0001, models64: 0x138b000013a7},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xdd910000dd98, matchRI: 0x0fc2, match64: 0x00000000, modelSI: -0x0001, models64: 0x13a7000013b6},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xde860000de8e, matchRI: 0x0fc4, match64: 0x00000000, modelSI: 0x13b6, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0xde8e0000de92, matchRI: 0x0fc5, match64: 0x00000000, modelSI: -0x0001, models64: 0x13b7000013b8},
			deviceTuple{type64: 0x20000000206, brand64: 0xde920000de99, matchRI: 0x0fc7, match64: 0x00000000, modelSI: -0x0001, models64: 0x13b8000013bd},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xdebd0000dec2, matchRI: -0x0001, match64: 0xdebd0000dec2, modelSI: -0x0001, models64: 0x13bd000013bf},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xdec20000deca, matchRI: 0x0fcf, match64: 0x00000000, modelSI: -0x0001, models64: 0x13bf0000145d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xe5dc0000e5e1, matchRI: 0x1058, match64: 0x00000000, modelSI: -0x0001, models64: 0x145d0000145f},
			deviceTuple{type64: 0x20000000206, brand64: 0xe5e60000e5eb, matchRI: 0x105a, match64: 0x00000000, modelSI: -0x0001, models64: 0x145f00001464},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xe6000000e60a, matchRI: 0x1060, match64: 0x00000000, modelSI: -0x0001, models64: 0x146400001476},
			deviceTuple{type64: 0x28400000286, brand64: 0xe69a0000e6a0, matchRI: 0x1073, match64: 0x00000000, modelSI: -0x0001, models64: 0x147600001479},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xe6db0000e6e2, matchRI: 0x1076, match64: 0x00000000, modelSI: -0x0001, models64: 0x1479000014a4},
			deviceTuple{type64: 0x20000000206, brand64: 0xe96c0000e971, matchRI: 0x1091, match64: 0x00000000, modelSI: -0x0001, models64: 0x14a4000014a6},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xe9810000e987, matchRI: -0x0001, match64: 0xe9870000e98e, modelSI: -0x0001, models64: 0x14a6000014a9},
			deviceTuple{type64: 0x20000000206, brand64: 0xe9ad0000e9b3, matchRI: 0x1095, match64: 0x00000000, modelSI: 0x14a9, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xe9b30000e9b8, matchRI: 0x1096, match64: 0x00000000, modelSI: -0x0001, models64: 0x14aa000014b1},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xea020000ea07, matchRI: 0x109a, match64: 0x00000000, modelSI: 0x14b1, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0xea070000ea0e, matchRI: 0x109b, match64: 0x00000000, modelSI: -0x0001, models64: 0x14b2000014b4},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xea140000ea17, matchRI: 0x109e, match64: 0x00000000, modelSI: -0x0001, models64: 0x14b4000014bc},
			deviceTuple{type64: 0x28400000286, brand64: 0xea5b0000ea61, matchRI: 0x10a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x14bc000014bf},
			deviceTuple{type64: 0x28400000286, brand64: 0xea830000ea88, matchRI: 0x10a9, match64: 0x00000000, modelSI: 0x14bf, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0xea880000ea91, matchRI: 0x10aa, match64: 0x00000000, modelSI: 0x14c0, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xea910000ea94, matchRI: 0x10ab, match64: 0x00000000, modelSI: -0x0001, models64: 0x14c1000014c6},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xeaae0000eab1, matchRI: 0x10b0, match64: 0x00000000, modelSI: -0x0001, models64: 0x14c6000014d7},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xeb490000eb4e, matchRI: 0x10be, match64: 0x00000000, modelSI: 0x14d7, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xeb5c0000eb60, matchRI: 0x10bf, match64: 0x00000000, modelSI: -0x0001, models64: 0x14d8000014d9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xeb6a0000eb74, matchRI: 0x10c1, match64: 0x00000000, modelSI: -0x0001, models64: 0x14d9000014e3},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xeba50000ebaf, matchRI: 0x10c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x14e3000014f8},
			deviceTuple{type64: 0x20000000206, brand64: 0xec930000ec97, matchRI: 0x10c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x14f8000014fe},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xed180000ed23, matchRI: 0x10cb, match64: 0x00000000, modelSI: -0x0001, models64: 0x14fe00001500},
			deviceTuple{type64: 0x28400000286, brand64: 0xed2e0000ed36, matchRI: 0x10ce, match64: 0x00000000, modelSI: 0x1500, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xed360000ed3d, matchRI: 0x10cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x150100001506},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xed960000ed9d, matchRI: 0x10d0, match64: 0x00000000, modelSI: -0x0001, models64: 0x150600001507},
			deviceTuple{type64: 0x20000000206, brand64: 0xedae0000edb6, matchRI: 0x10d1, match64: 0x00000000, modelSI: 0x1507, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0xedb60000edbd, matchRI: 0x10d2, match64: 0x00000000, modelSI: -0x0001, models64: 0x15080000150d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xedd70000eddc, matchRI: 0x10d8, match64: 0x00000000, modelSI: -0x0001, models64: 0x150d00001520},
			deviceTuple{type64: 0x20000000206, brand64: 0xeec40000eeca, matchRI: 0x10ec, match64: 0x00000000, modelSI: 0x1520, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xeeca0000eed0, matchRI: 0x10ed, match64: 0x00000000, modelSI: -0x0001, models64: 0x152100001525},
			deviceTuple{type64: 0x28400000286, brand64: 0xdb370000db3a, matchRI: 0x10f1, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xeeeb0000eef0, matchRI: 0x10f2, match64: 0x00000000, modelSI: 0x1525, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0xeef00000eef7, matchRI: 0x10f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x152600001529},
			deviceTuple{type64: 0x28400000286, brand64: 0xef1f0000ef26, matchRI: -0x0001, match64: 0xef260000ef2c, modelSI: -0x0001, models64: 0x15290000152a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xef370000ef3f, matchRI: -0x0001, match64: 0xef3f0000ef43, modelSI: -0x0001, models64: 0x152a0000152b},
			deviceTuple{type64: 0x1fd200001fda, brand64: 0xef430000ef4e, matchRI: 0x10f7, match64: 0x00000000, modelSI: 0x152b, models64: 0x00000000},
			deviceTuple{type64: 0x9f700000a04, brand64: 0xef4e0000ef54, matchRI: 0x10f8, match64: 0x00000000, modelSI: 0x152c, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xef540000ef5b, matchRI: 0x10f9, match64: 0x00000000, modelSI: 0x152d, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xef640000ef6a, matchRI: 0x10fa, match64: 0x00000000, modelSI: 0x152e, models64: 0x00000000},
			deviceTuple{type64: 0x940000009f, brand64: 0xef6a0000ef70, matchRI: 0x10fb, match64: 0x00000000, modelSI: 0x152f, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xef700000ef77, matchRI: 0x10fc, match64: 0x00000000, modelSI: 0x1530, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xef770000ef7b, matchRI: 0x10fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x153100001533},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xef7b0000ef81, matchRI: 0x1100, match64: 0x00000000, modelSI: -0x0001, models64: 0x153300001535},
			deviceTuple{type64: 0x20000000206, brand64: 0xef810000ef89, matchRI: 0x1103, match64: 0x00000000, modelSI: -0x0001, models64: 0x153500001541},
			deviceTuple{type64: 0x20000000206, brand64: 0xf0470000f04e, matchRI: 0x1105, match64: 0x00000000, modelSI: 0x1541, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf04e0000f055, matchRI: 0x1106, match64: 0x00000000, modelSI: -0x0001, models64: 0x154200001543},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf0550000f05a, matchRI: -0x0001, match64: 0xf05a0000f05f, modelSI: -0x0001, models64: 0x154300001545},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf05f0000f064, matchRI: 0x110a, match64: 0x00000000, modelSI: 0x1545, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf0640000f06a, matchRI: 0x110b, match64: 0x00000000, modelSI: -0x0001, models64: 0x154600001548},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf06a0000f06f, matchRI: 0x110e, match64: 0x00000000, modelSI: -0x0001, models64: 0x15480000158f},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf3050000f309, matchRI: 0x113d, match64: 0x00000000, modelSI: -0x0001, models64: 0x158f000015be},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf47d0000f481, matchRI: 0x116c, match64: 0x00000000, modelSI: -0x0001, models64: 0x15be000015c3},
			deviceTuple{type64: 0x28400000286, brand64: 0xf48f0000f496, matchRI: -0x0001, match64: 0xf4960000f49e, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0xf49e0000f4a7, matchRI: 0x1172, match64: 0x00000000, modelSI: 0x15c3, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf4b50000f4b8, matchRI: 0x1173, match64: 0x00000000, modelSI: -0x0001, models64: 0x15c4000015ca},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf4d60000f4da, matchRI: 0x117a, match64: 0x00000000, modelSI: -0x0001, models64: 0x15ca000015cc},
			deviceTuple{type64: 0x28400000286, brand64: 0xf4e00000f4e5, matchRI: 0x117d, match64: 0x00000000, modelSI: 0x15cc, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf4e50000f4ea, matchRI: 0x117e, match64: 0x00000000, modelSI: 0x15cd, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf4f60000f4fb, matchRI: 0x117f, match64: 0x00000000, modelSI: -0x0001, models64: 0x15ce000015f9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf6ce0000f6d2, matchRI: 0x1189, match64: 0x00000000, modelSI: -0x0001, models64: 0x15f9000015fc},
			deviceTuple{type64: 0x20000000206, brand64: 0xf6d60000f6dc, matchRI: 0x118d, match64: 0x00000000, modelSI: -0x0001, models64: 0x15fc00001602},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf75a0000f75c, matchRI: 0x1190, match64: 0x00000000, modelSI: -0x0001, models64: 0x160200001605},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf7710000f773, matchRI: 0x1194, match64: 0x00000000, modelSI: -0x0001, models64: 0x160500001609},
			deviceTuple{type64: 0x5f5100005f5b, brand64: 0xf7730000f778, matchRI: 0x1199, match64: 0x00000000, modelSI: 0x1609, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf7780000f77d, matchRI: 0x119a, match64: 0x00000000, modelSI: 0x160a, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0xf77d0000f781, matchRI: 0x119b, match64: 0x00000000, modelSI: 0x160b, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf7810000f785, matchRI: 0x119c, match64: 0x00000000, modelSI: 0x160c, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf7850000f789, matchRI: 0x119d, match64: 0x00000000, modelSI: -0x0001, models64: 0x160d0000160e},
			deviceTuple{type64: 0x20000000206, brand64: 0xf7890000f78c, matchRI: 0x119f, match64: 0x00000000, modelSI: 0x160e, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0xf78c0000f795, matchRI: 0x11a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x160f00001611},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xf7b60000f7ba, matchRI: 0x11a2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1611000016c9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xfbed0000fbf2, matchRI: 0x1257, match64: 0x00000000, modelSI: 0x16c9, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xfbf20000fbf6, matchRI: 0x1258, match64: 0x00000000, modelSI: -0x0001, models64: 0x16ca000016cc},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xfbfd0000fc03, matchRI: 0x125b, match64: 0x00000000, modelSI: -0x0001, models64: 0x16cc000016ce},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xfc140000fc17, matchRI: 0x125d, match64: 0x00000000, modelSI: -0x0001, models64: 0x16ce000016df},
			deviceTuple{type64: 0x1fd200001fda, brand64: 0xfc760000fc7c, matchRI: 0x126f, match64: 0x00000000, modelSI: -0x0001, models64: 0x16df000016e2},
			deviceTuple{type64: 0x20000000206, brand64: 0xfc8c0000fc90, matchRI: 0x1271, match64: 0x00000000, modelSI: -0x0001, models64: 0x16e200001714},
			deviceTuple{type64: 0x28400000286, brand64: 0x1007c0001007e, matchRI: 0x1281, match64: 0x00000000, modelSI: 0x1714, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x100870001008d, matchRI: 0x1282, match64: 0x00000000, modelSI: -0x0001, models64: 0x171500001716},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x100990001009d, matchRI: 0x1284, match64: 0x00000000, modelSI: -0x0001, models64: 0x171600001728},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x101b2000101b9, matchRI: 0x1292, match64: 0x00000000, modelSI: -0x0001, models64: 0x17280000174b},
			deviceTuple{type64: 0x20000000206, brand64: 0x1025f00010263, matchRI: 0x12b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x174b0000174e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1026f00010274, matchRI: 0x12ba, match64: 0x00000000, modelSI: 0x174e, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1027400010279, matchRI: -0x0001, match64: 0x1027900010281, modelSI: 0x174f, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x102810001028b, matchRI: 0x12bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x175000001754},
			deviceTuple{type64: 0x28400000286, brand64: 0x102f2000102f9, matchRI: 0x12bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x175400001757},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1032100010327, matchRI: 0x12be, match64: 0x00000000, modelSI: -0x0001, models64: 0x17570000175b},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1032f00010335, matchRI: 0x12c3, match64: 0x00000000, modelSI: -0x0001, models64: 0x175b00001765},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x103870001038c, matchRI: 0x12ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x176500001768},
			deviceTuple{type64: 0x28400000286, brand64: 0x1039a000103a0, matchRI: 0x12ce, match64: 0x00000000, modelSI: 0x1768, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x103a0000103a9, matchRI: 0x12cf, match64: 0x00000000, modelSI: 0x1769, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x103a9000103ae, matchRI: 0x12d0, match64: 0x00000000, modelSI: -0x0001, models64: 0x176a0000176c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x103b7000103bb, matchRI: 0x12d3, match64: 0x00000000, modelSI: -0x0001, models64: 0x176c00001770},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x103bb000103c2, matchRI: 0x12d8, match64: 0x00000000, modelSI: -0x0001, models64: 0x17700000177b},
			deviceTuple{type64: 0x20000000206, brand64: 0x103d6000103dd, matchRI: 0x12e4, match64: 0x00000000, modelSI: -0x0001, models64: 0x177b00001784},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1045c00010460, matchRI: -0x0001, match64: 0x1046000010468, modelSI: 0x1784, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x104680001046c, matchRI: 0x12e8, match64: 0x00000000, modelSI: -0x0001, models64: 0x178500001787},
			deviceTuple{type64: 0x20000000206, brand64: 0x104770001047e, matchRI: 0x12eb, match64: 0x00000000, modelSI: -0x0001, models64: 0x178700001792},
			deviceTuple{type64: 0x20000000206, brand64: 0x104f0000104f4, matchRI: 0x12f2, match64: 0x00000000, modelSI: 0x1792, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x104fa00010501, matchRI: 0x12f3, match64: 0x00000000, modelSI: 0x1793, models64: 0x00000000},
			deviceTuple{type64: 0x52100000528, brand64: 0x1050100010505, matchRI: 0x12f4, match64: 0x00000000, modelSI: -0x0001, models64: 0x179400001797},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1052400010529, matchRI: 0x12f8, match64: 0x00000000, modelSI: -0x0001, models64: 0x17970000179c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1057500010578, matchRI: -0x0001, match64: 0x105780001057e, modelSI: -0x0001, models64: 0x179c0000179d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1057e0001058b, matchRI: 0x12f9, match64: 0x00000000, modelSI: -0x0001, models64: 0x179d0000179e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1058b0001058f, matchRI: 0x12fb, match64: 0x00000000, modelSI: -0x0001, models64: 0x179e000017ae},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x105db000105e1, matchRI: 0x130a, match64: 0x00000000, modelSI: -0x0001, models64: 0x17ae000017af},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x105ea000105ee, matchRI: 0x130c, match64: 0x00000000, modelSI: 0x17af, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x105ee000105f3, matchRI: 0x130d, match64: 0x00000000, modelSI: -0x0001, models64: 0x17b0000017b3},
			deviceTuple{type64: 0x20000000206, brand64: 0x105f3000105ff, matchRI: 0x1311, match64: 0x00000000, modelSI: -0x0001, models64: 0x17b3000017b6},
			deviceTuple{type64: 0x28400000286, brand64: 0x106250001062c, matchRI: -0x0001, match64: 0x1062c00010636, modelSI: 0x17b6, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1063c00010640, matchRI: 0x1313, match64: 0x00000000, modelSI: -0x0001, models64: 0x17b7000017bd},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1065b00010662, matchRI: -0x0001, match64: 0x1066200010669, modelSI: -0x0001, models64: 0x17bd000017be},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1066900010672, matchRI: 0x1318, match64: 0x00000000, modelSI: -0x0001, models64: 0x17be000017d2},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1071c00010723, matchRI: 0x132a, match64: 0x00000000, modelSI: -0x0001, models64: 0x17d2000017da},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x107410001074e, matchRI: 0x1331, match64: 0x00000000, modelSI: 0x17da, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1074e00010754, matchRI: 0x1332, match64: 0x00000000, modelSI: -0x0001, models64: 0x17db000017dd},
			deviceTuple{type64: 0x28400000286, brand64: 0x1077c00010782, matchRI: 0x1333, match64: 0x00000000, modelSI: -0x0001, models64: 0x17dd000017e2},
			deviceTuple{type64: 0x20000000206, brand64: 0x1079f000107a8, matchRI: 0x1338, match64: 0x00000000, modelSI: -0x0001, models64: 0x17e2000017e8},
			deviceTuple{type64: 0x28400000286, brand64: 0x107d5000107db, matchRI: -0x0001, match64: 0x107d5000107db, modelSI: -0x0001, models64: 0x17e8000017ea},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x108030001080a, matchRI: 0x133f, match64: 0x00000000, modelSI: -0x0001, models64: 0x17ea000017ee},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x108280001082e, matchRI: 0x1344, match64: 0x00000000, modelSI: -0x0001, models64: 0x17ee000017f2},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x108340001083b, matchRI: 0x1349, match64: 0x00000000, modelSI: -0x0001, models64: 0x17f200001803},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1088900010891, matchRI: 0x135b, match64: 0x00000000, modelSI: -0x0001, models64: 0x180300001808},
			deviceTuple{type64: 0x20000000206, brand64: 0x108aa000108ae, matchRI: 0x1361, match64: 0x00000000, modelSI: -0x0001, models64: 0x18080000180b},
			deviceTuple{type64: 0x1fd200001fda, brand64: 0x108b7000108bb, matchRI: 0x1364, match64: 0x00000000, modelSI: 0x180b, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x108bb000108c2, matchRI: 0x1365, match64: 0x00000000, modelSI: -0x0001, models64: 0x180c00001814},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x108de000108e4, matchRI: 0x136c, match64: 0x00000000, modelSI: 0x1814, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x108ef000108f9, matchRI: 0x136d, match64: 0x00000000, modelSI: 0x1815, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x108f9000108fe, matchRI: 0x136e, match64: 0x00000000, modelSI: -0x0001, models64: 0x181600001824},
			deviceTuple{type64: 0x20000000206, brand64: 0x1098a0001099a, matchRI: 0x1377, match64: 0x00000000, modelSI: 0x1824, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1099a000109a0, matchRI: 0x1378, match64: 0x00000000, modelSI: -0x0001, models64: 0x182500001829},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x109d5000109d9, matchRI: 0x137b, match64: 0x00000000, modelSI: -0x0001, models64: 0x18290000182f},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x10a2100010a26, matchRI: 0x137c, match64: 0x00000000, modelSI: 0x182f, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x10a2600010a30, matchRI: 0x137d, match64: 0x00000000, modelSI: -0x0001, models64: 0x183000001837},
			deviceTuple{type64: 0x5f5100005f5b, brand64: 0x10a5e00010a6a, matchRI: -0x0001, match64: 0x10a6a00010a6e, modelSI: -0x0001, models64: 0x183700001838},
			deviceTuple{type64: 0x20000000206, brand64: 0x10a6e00010a7b, matchRI: 0x1385, match64: 0x00000000, modelSI: -0x0001, models64: 0x183800001844},
			deviceTuple{type64: 0x28400000286, brand64: 0x10b8700010b8c, matchRI: 0x138a, match64: 0x00000000, modelSI: 0x1844, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x10b8c00010b95, matchRI: 0x138b, match64: 0x00000000, modelSI: 0x1845, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x10b9500010b9d, matchRI: 0x138c, match64: 0x00000000, modelSI: -0x0001, models64: 0x184600001867},
			deviceTuple{type64: 0x940000009f, brand64: 0x10d2600010d2e, matchRI: 0x1395, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x10d2e00010d35, matchRI: 0x1396, match64: 0x00000000, modelSI: -0x0001, models64: 0x186700001869},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x10d3500010d3d, matchRI: 0x1399, match64: 0x00000000, modelSI: -0x0001, models64: 0x18690000188f},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x10eee00010ef2, matchRI: 0x13b3, match64: 0x00000000, modelSI: -0x0001, models64: 0x188f00001891},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x10ef200010ef8, matchRI: -0x0001, match64: 0x10ef800010f01, modelSI: 0x1891, models64: 0x00000000},
			deviceTuple{type64: 0x940000009f, brand64: 0x10f0100010f08, matchRI: -0x0001, match64: 0x10f0800010f27, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x10f2700010f2f, matchRI: 0x13b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x189200001898},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x10f6d00010f79, matchRI: 0x13b9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1898000018a8},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1100c00011012, matchRI: 0x13ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x18a8000018af},
			deviceTuple{type64: 0x20000000206, brand64: 0x1106c00011075, matchRI: 0x13cc, match64: 0x00000000, modelSI: -0x0001, models64: 0x18af000018ee},
			deviceTuple{type64: 0x20000000206, brand64: 0x114f1000114f9, matchRI: 0x13d9, match64: 0x00000000, modelSI: -0x0001, models64: 0x18ee000018f0},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x115090001150f, matchRI: 0x13dc, match64: 0x00000000, modelSI: -0x0001, models64: 0x18f0000018fa},
			deviceTuple{type64: 0x20000000206, brand64: 0x1154b00011552, matchRI: 0x13e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x18fa000018fc},
			deviceTuple{type64: 0x20000000206, brand64: 0x1155200011559, matchRI: 0x13ea, match64: 0x00000000, modelSI: -0x0001, models64: 0x18fc000018fe},
			deviceTuple{type64: 0x28400000286, brand64: 0x115640001156d, matchRI: 0x13ed, match64: 0x00000000, modelSI: 0x18fe, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1156d00011574, matchRI: 0x13ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x18ff00001901},
			deviceTuple{type64: 0x940000009f, brand64: 0x1157d00011584, matchRI: 0x13f1, match64: 0x00000000, modelSI: 0x1901, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x115840001158c, matchRI: 0x13f2, match64: 0x00000000, modelSI: 0x1902, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1158c00011592, matchRI: -0x0001, match64: 0x115920001159a, modelSI: -0x0001, models64: 0x190300001904},
			deviceTuple{type64: 0x28400000286, brand64: 0x1159a0001159f, matchRI: 0x13f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1159f000115a6, matchRI: 0x13f4, match64: 0x00000000, modelSI: -0x0001, models64: 0x190400001905},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x115a6000115ac, matchRI: 0x13f6, match64: 0x00000000, modelSI: -0x0001, models64: 0x190500001907},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x115b4000115bb, matchRI: 0x13f8, match64: 0x00000000, modelSI: -0x0001, models64: 0x190700001921},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x116c2000116c7, matchRI: 0x1406, match64: 0x00000000, modelSI: 0x1921, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x116c7000116cd, matchRI: 0x1407, match64: 0x00000000, modelSI: -0x0001, models64: 0x192200001939},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x117fa00011805, matchRI: 0x140e, match64: 0x00000000, modelSI: -0x0001, models64: 0x19390000193f},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1184000011844, matchRI: 0x1414, match64: 0x00000000, modelSI: 0x193f, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x118440001184b, matchRI: 0x1415, match64: 0x00000000, modelSI: -0x0001, models64: 0x194000001948},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1188100011885, matchRI: 0x141e, match64: 0x00000000, modelSI: 0x1948, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x118850001188c, matchRI: -0x0001, match64: 0x1188c0001189b, modelSI: 0x1949, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1189b0001189f, matchRI: 0x141f, match64: 0x00000000, modelSI: -0x0001, models64: 0x194a0000194f},
			deviceTuple{type64: 0x28400000286, brand64: 0x118bc000118c0, matchRI: 0x1425, match64: 0x00000000, modelSI: 0x194f, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x118c6000118d1, matchRI: 0x1426, match64: 0x00000000, modelSI: -0x0001, models64: 0x19500000195d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x119c6000119c9, matchRI: 0x142d, match64: 0x00000000, modelSI: 0x195d, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x119d5000119d8, matchRI: 0x142e, match64: 0x00000000, modelSI: -0x0001, models64: 0x195e00001975},
			deviceTuple{type64: 0x20000000206, brand64: 0x11ac700011ace, matchRI: 0x143d, match64: 0x00000000, modelSI: -0x0001, models64: 0x197500001976},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x11adc00011ae6, matchRI: 0x143e, match64: 0x00000000, modelSI: -0x0001, models64: 0x197600001977},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x11aee00011af5, matchRI: 0x1440, match64: 0x00000000, modelSI: -0x0001, models64: 0x19770000197b},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x11b1c00011b21, matchRI: 0x1441, match64: 0x00000000, modelSI: -0x0001, models64: 0x197b00001980},
			deviceTuple{type64: 0x5f5100005f5b, brand64: 0x11b4300011b4c, matchRI: 0x1445, match64: 0x00000000, modelSI: 0x1980, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x11b4c00011b51, matchRI: 0x1446, match64: 0x00000000, modelSI: 0x1981, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x11b5100011b56, matchRI: -0x0001, match64: 0x11b5600011b5d, modelSI: 0x1982, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x11b5d00011b62, matchRI: 0x1447, match64: 0x00000000, modelSI: 0x1983, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x11b6200011b69, matchRI: 0x1448, match64: 0x00000000, modelSI: -0x0001, models64: 0x198400001987},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x11b7700011b7d, matchRI: 0x144c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1987000019df},
			deviceTuple{type64: 0x2700000027, brand64: 0x11ded00011df3, matchRI: 0x148a, match64: 0x00000000, modelSI: -0x0001, models64: 0x19df000019e0},
			deviceTuple{type64: 0x20000000206, brand64: 0x11e0300011e09, matchRI: 0x148c, match64: 0x00000000, modelSI: -0x0001, models64: 0x19e0000019ea},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x11ec800011ece, matchRI: 0x148f, match64: 0x00000000, modelSI: -0x0001, models64: 0x19ea000019eb},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x11ed300011ed7, matchRI: 0x1491, match64: 0x00000000, modelSI: -0x0001, models64: 0x19eb000019ed},
			deviceTuple{type64: 0x28400000286, brand64: 0x11eeb00011ef4, matchRI: 0x1493, match64: 0x00000000, modelSI: 0x19ed, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x11ef800011efd, matchRI: 0x1494, match64: 0x00000000, modelSI: 0x19ee, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x11efd00011f03, matchRI: 0x1495, match64: 0x00000000, modelSI: -0x0001, models64: 0x19ef000019f1},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x11f0f00011f17, matchRI: 0x1498, match64: 0x00000000, modelSI: 0x19f1, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x11f1c00011f23, matchRI: 0x1499, match64: 0x00000000, modelSI: -0x0001, models64: 0x19f2000019f3},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x11f2300011f27, matchRI: 0x149b, match64: 0x00000000, modelSI: -0x0001, models64: 0x19f3000019f6},
			deviceTuple{type64: 0x20000000206, brand64: 0x11f4a00011f53, matchRI: -0x0001, match64: 0x11f5300011f66, modelSI: 0x19f6, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x11f6f00011f74, matchRI: 0x149f, match64: 0x00000000, modelSI: -0x0001, models64: 0x19f7000019fa},
			deviceTuple{type64: 0x28400000286, brand64: 0x11f8700011f8b, matchRI: 0x14a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x19fa000019fc},
			deviceTuple{type64: 0x28400000286, brand64: 0x11fab00011fb2, matchRI: 0x14a1, match64: 0x00000000, modelSI: -0x0001, models64: 0x19fc000019ff},
			deviceTuple{type64: 0x20000000206, brand64: 0x11fcd00011fd6, matchRI: 0x14a5, match64: 0x00000000, modelSI: 0x19ff, models64: 0x00000000},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x11fdd00011fe2, matchRI: 0x14a6, match64: 0x00000000, modelSI: 0x1a00, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x11fe200011fea, matchRI: 0x14a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a0100001a05},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1200100012009, matchRI: 0x14ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a0500001a07},
			deviceTuple{type64: 0x20000000206, brand64: 0x120090001200f, matchRI: -0x0001, match64: 0x120090001200f, modelSI: -0x0001, models64: 0x1a0700001a09},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1201f00012026, matchRI: 0x14af, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a0900001a0a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x120260001202a, matchRI: 0x14b1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a0a00001a0d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x120370001203c, matchRI: 0x14b4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a0d00001a10},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x120480001204c, matchRI: 0x14b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a1000001a12},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1204c00012052, matchRI: 0x14b9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a1200001a14},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1205200012057, matchRI: 0x14bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a1400001a15},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x120570001205f, matchRI: 0x14be, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a1500001a19},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x120770001207a, matchRI: 0x14c3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a1900001a2f},
			deviceTuple{type64: 0x28400000286, brand64: 0x121610001216d, matchRI: -0x0001, match64: 0x1216d00012176, modelSI: -0x0001, models64: 0x1a2f00001a30},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1217600012179, matchRI: 0x14da, match64: 0x00000000, modelSI: 0x1a30, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1217900012180, matchRI: 0x14db, match64: 0x00000000, modelSI: 0x1a31, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1218000012184, matchRI: 0x14dc, match64: 0x00000000, modelSI: 0x1a32, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1218b0001218f, matchRI: 0x14dd, match64: 0x00000000, modelSI: 0x1a33, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1218f00012192, matchRI: 0x14de, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a3400001a44},
			deviceTuple{type64: 0x20000000206, brand64: 0x122bc000122c1, matchRI: 0x14e0, match64: 0x00000000, modelSI: 0x1a44, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x122c4000122ce, matchRI: 0x14e1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a4500001a4e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1235500012360, matchRI: 0x14e2, match64: 0x00000000, modelSI: 0x1a4e, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1236000012363, matchRI: 0x14e3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a4f00001a53},
			deviceTuple{type64: 0x28400000286, brand64: 0x1238300012389, matchRI: -0x0001, match64: 0x1238900012390, modelSI: -0x0001, models64: 0x1a5300001a54},
			deviceTuple{type64: 0x20000000206, brand64: 0x1239000012397, matchRI: 0x14e6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a5400001a56},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x123ac000123b9, matchRI: 0x14e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a5600001a5a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x123d8000123e1, matchRI: 0x14ed, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a5a00001a5d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1241d00012422, matchRI: 0x14ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a5d00001a64},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1244300012448, matchRI: 0x14f4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a6400001a65},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x180000001f, matchRI: 0x14f6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a6500001c98},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x147550001475a, matchRI: 0x170a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c9800001c9c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x147690001476f, matchRI: 0x170c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c9c00001c9d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1476f00014775, matchRI: 0x170e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c9d00001cad},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x147de000147e3, matchRI: 0x171f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cad00001cb2},
			deviceTuple{type64: 0x28400000286, brand64: 0x1480400014809, matchRI: 0x1725, match64: 0x00000000, modelSI: 0x1cb2, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x148090001480e, matchRI: -0x0001, match64: 0x1480e00014814, modelSI: -0x0001, models64: 0x1cb300001cb4},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1482c00014832, matchRI: -0x0001, match64: 0x1482c00014832, modelSI: -0x0001, models64: 0x1cb400001cb5},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1483200014838, matchRI: 0x1727, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cb500001cb7},
			deviceTuple{type64: 0x20000000206, brand64: 0x1483800014841, matchRI: 0x172a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cb700001cb9},
			deviceTuple{type64: 0x28400000286, brand64: 0x148470001484e, matchRI: 0x172d, match64: 0x00000000, modelSI: 0x1cb9, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1484e00014854, matchRI: -0x0001, match64: 0x148540001485a, modelSI: -0x0001, models64: 0x1cba00001cbd},
			deviceTuple{type64: 0x20000000206, brand64: 0x1489b000148a1, matchRI: 0x172e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cbd00001ccc},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x1493d00014942, matchRI: 0x173e, match64: 0x00000000, modelSI: 0x1ccc, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x149420001494a, matchRI: 0x173f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ccd00001ccf},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x149630001496a, matchRI: 0x1741, match64: 0x00000000, modelSI: 0x1ccf, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1496a0001496f, matchRI: 0x1742, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cd000001cde},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x149a1000149a6, matchRI: 0x1751, match64: 0x00000000, modelSI: 0x1cde, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x149a6000149ab, matchRI: 0x1752, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cdf00001d3b},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x14da200014dae, matchRI: 0x17aa, match64: 0x00000000, modelSI: 0x1d3b, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x14dae00014db5, matchRI: 0x17ab, match64: 0x00000000, modelSI: 0x1d3c, models64: 0x00000000},
			deviceTuple{type64: 0x5f5100005f5b, brand64: 0x14dbb00014dc4, matchRI: 0x17ac, match64: 0x00000000, modelSI: 0x1d3d, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x14dcf00014dd6, matchRI: 0x17ad, match64: 0x00000000, modelSI: 0x1d3e, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x14dd600014dda, matchRI: 0x17ae, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d3f00001d47},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x14e3700014e3e, matchRI: 0x17b2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d4700001d4c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xa5f50000a5fa, matchRI: 0x17b8, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d4c00001d50},
			deviceTuple{type64: 0x28400000286, brand64: 0x14e7400014e7b, matchRI: 0x17bd, match64: 0x00000000, modelSI: 0x1d50, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x14e7b00014e88, matchRI: -0x0001, match64: 0x14e8800014e94, modelSI: 0x1d51, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x14e9400014e9b, matchRI: 0x17be, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d5200001d5a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x14ee300014ee9, matchRI: 0x17c0, match64: 0x00000000, modelSI: 0x1d5a, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x14ee900014ef1, matchRI: 0x17c1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d5b00001d5f},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x14f0a00014f11, matchRI: 0x17c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d5f00001d60},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x14f1100014f1b, matchRI: 0x17c8, match64: 0x00000000, modelSI: 0x1d60, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xec650000ec68, matchRI: 0x17c9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d6100001d76},
			deviceTuple{type64: 0x28400000286, brand64: 0x150440001504c, matchRI: 0x17d8, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d7600001d77},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1504c00015051, matchRI: 0x17da, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d7700001d79},
			deviceTuple{type64: 0x20000000206, brand64: 0x1505f00015065, matchRI: 0x17dd, match64: 0x00000000, modelSI: 0x1d79, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x9bb800009bbd, matchRI: 0x17de, match64: 0x00000000, modelSI: 0x1d7a, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x150650001506e, matchRI: -0x0001, match64: 0x1506e00015079, modelSI: -0x0001, models64: 0x1d7b00001d7d},
			deviceTuple{type64: 0x20000000206, brand64: 0x1507d00015084, matchRI: 0x17e1, match64: 0x00000000, modelSI: 0x1d7d, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x150840001508d, matchRI: 0x17e2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d7e00001d8c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1515800015161, matchRI: 0x17e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d8c00001d9a},
			deviceTuple{type64: 0x20000000206, brand64: 0x151b9000151bf, matchRI: 0x17f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d9a00001d9c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x151ce000151db, matchRI: 0x17f4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d9c00001d9f},
			deviceTuple{type64: 0x28400000286, brand64: 0x151ff00015209, matchRI: 0x17f8, match64: 0x00000000, modelSI: 0x1d9f, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1520900015211, matchRI: 0x17f9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1da000001da3},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x152110001521b, matchRI: 0x17fd, match64: 0x00000000, modelSI: 0x1da3, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1521b00015221, matchRI: 0x17fe, match64: 0x00000000, modelSI: -0x0001, models64: 0x1da400001dab},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1528400015289, matchRI: 0x1802, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dab00001daf},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x18a0000018e, matchRI: 0x1806, match64: 0x00000000, modelSI: -0x0001, models64: 0x1daf00001e7b},
			deviceTuple{type64: 0x28400000286, brand64: 0x15b8500015b8d, matchRI: 0x18c3, match64: 0x00000000, modelSI: 0x1e7b, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15b8d00015b92, matchRI: 0x18c4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e7c00001e7e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x415200004157, matchRI: 0x18c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e7e00001e7f},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15b9d00015ba8, matchRI: 0x18c7, match64: 0x00000000, modelSI: 0x1e7f, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15ba800015bb0, matchRI: 0x18c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8000001e84},
			deviceTuple{type64: 0x19e000001a8, brand64: 0xded60000dedb, matchRI: 0x18cd, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8400001e8c},
			deviceTuple{type64: 0x20000000206, brand64: 0x1092c00010932, matchRI: 0x18d2, match64: 0x00000000, modelSI: 0x1e8c, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15c7100015c75, matchRI: 0x18d3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8d00001e8f},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15c7a00015c83, matchRI: 0x18d5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8f00001e95},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15cf900015d03, matchRI: 0x18d6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e9500001e99},
			deviceTuple{type64: 0x20000000206, brand64: 0x15d1b00015d22, matchRI: 0x18db, match64: 0x00000000, modelSI: 0x1e99, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x15d2f00015d37, matchRI: -0x0001, match64: 0x15d3700015d45, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15d4500015d4b, matchRI: 0x18dc, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e9a00001e9c},
			deviceTuple{type64: 0x20000000206, brand64: 0x15d4b00015d51, matchRI: 0x18df, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e9c00001e9e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15d7000015d7a, matchRI: 0x18e1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e9e00001e9f},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15d7a00015d7f, matchRI: 0x18e3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e9f00001eb7},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15e8700015e8c, matchRI: 0x18ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x1eb700001eb9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15e8c00015e91, matchRI: 0x18f1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1eb900001ebc},
			deviceTuple{type64: 0x20000000206, brand64: 0x15e9f00015ea8, matchRI: 0x18f5, match64: 0x00000000, modelSI: 0x1ebc, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15ea800015eae, matchRI: 0x18f6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ebd00001ebf},
			deviceTuple{type64: 0x5f5100005f5b, brand64: 0x15eae00015eb3, matchRI: 0x18f9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ebf00001ec1},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15ebb00015ec0, matchRI: 0x18fc, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ec100001ec3},
			deviceTuple{type64: 0x20000000206, brand64: 0x15ec000015ec8, matchRI: 0x18ff, match64: 0x00000000, modelSI: 0x1ec3, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x15ec800015ecf, matchRI: 0x1900, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ec400001ec6},
			deviceTuple{type64: 0x20000000206, brand64: 0x15ee000015eea, matchRI: 0x1902, match64: 0x00000000, modelSI: 0x1ec6, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x15eea00015ef2, matchRI: 0x1903, match64: 0x00000000, modelSI: 0x1ec7, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15ef200015ef7, matchRI: 0x1904, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ec800001eca},
			deviceTuple{type64: 0x20000000206, brand64: 0x15ef700015efd, matchRI: 0x1907, match64: 0x00000000, modelSI: -0x0001, models64: 0x1eca00001ecc},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15f1600015f1b, matchRI: 0x1909, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ecc00001ece},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15f2200015f2b, matchRI: 0x190c, match64: 0x00000000, modelSI: 0x1ece, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15f2b00015f33, matchRI: 0x190d, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ecf00001ed4},
			deviceTuple{type64: 0x20000000206, brand64: 0x15f5600015f5b, matchRI: 0x1911, match64: 0x00000000, modelSI: 0x1ed4, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15f5b00015f63, matchRI: 0x1912, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ed500001ee0},
			deviceTuple{type64: 0x20000000206, brand64: 0x15fc900015fd1, matchRI: 0x191b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ee000001ee1},
			deviceTuple{type64: 0x20000000206, brand64: 0x15fd100015fd9, matchRI: 0x191d, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ee100001ee2},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x15fe100015fe4, matchRI: 0x191f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ee200001f0e},
			deviceTuple{type64: 0x28400000286, brand64: 0x160a4000160ae, matchRI: 0x1949, match64: 0x00000000, modelSI: 0x1f0e, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x160ae000160b5, matchRI: 0x194a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f0f00001f10},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x160c3000160c8, matchRI: -0x0001, match64: 0x160c3000160c8, modelSI: -0x0001, models64: 0x1f1000001f11},
			deviceTuple{type64: 0x20000000206, brand64: 0x160c8000160cf, matchRI: 0x194c, match64: 0x00000000, modelSI: 0x1f11, models64: 0x00000000},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x160cf000160d5, matchRI: -0x0001, match64: 0x160cf000160d5, modelSI: -0x0001, models64: 0x1f1200001f14},
			deviceTuple{type64: 0x20000000206, brand64: 0x160d5000160dc, matchRI: 0x194f, match64: 0x00000000, modelSI: 0x1f14, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x160dc000160e0, matchRI: 0x1950, match64: 0x00000000, modelSI: 0x1f15, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x160e0000160e3, matchRI: 0x1951, match64: 0x00000000, modelSI: 0x1f16, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x160f1000160f4, matchRI: 0x1952, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f1700001f1a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x161090001610c, matchRI: 0x1956, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f1a00001f1c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1611600016122, matchRI: 0x1959, match64: 0x00000000, modelSI: 0x1f1c, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1612e00016134, matchRI: 0x195a, match64: 0x00000000, modelSI: 0x1f1d, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1613400016139, matchRI: 0x195b, match64: 0x00000000, modelSI: 0x1f1e, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x161390001613e, matchRI: 0x195c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f1f00001f22},
			deviceTuple{type64: 0x20000000206, brand64: 0x1615900016160, matchRI: 0x195e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f2200001f30},
			deviceTuple{type64: 0x20000000206, brand64: 0x161fa00016202, matchRI: 0x1965, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f3000001f31},
			deviceTuple{type64: 0x28400000286, brand64: 0x1620d00016215, matchRI: -0x0001, match64: 0x1620d00016215, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x162150001621c, matchRI: 0x1967, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f3100001f47},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x162ae000162ba, matchRI: 0x1979, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f4700001fc3},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1673c00016743, matchRI: 0x19f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fc300001fc5},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1676100016766, matchRI: 0x19f4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fc500001fc9},
			deviceTuple{type64: 0x20000000206, brand64: 0x167740001677e, matchRI: 0x19f9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fc900001fd2},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x167cd000167d3, matchRI: -0x0001, match64: 0x167d3000167d9, modelSI: -0x0001, models64: 0x1fd200001fd5},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x167fc00016803, matchRI: 0x1a00, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fd500001fd7},
			deviceTuple{type64: 0x28400000286, brand64: 0x1680300016808, matchRI: -0x0001, match64: 0x1680800016811, modelSI: 0x1fd7, models64: 0x00000000},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x1681400016819, matchRI: -0x0001, match64: 0x1681400016819, modelSI: -0x0001, models64: 0x1fd800001fda},
			deviceTuple{type64: 0x5f5100005f5b, brand64: 0x168190001681e, matchRI: -0x0001, match64: 0x1681e00016824, modelSI: -0x0001, models64: 0x1fda00001fdb},
			deviceTuple{type64: 0x20000000206, brand64: 0x1682400016829, matchRI: 0x1a05, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fdb00001fdd},
			deviceTuple{type64: 0x20000000206, brand64: 0x1683900016841, matchRI: 0x1a08, match64: 0x00000000, modelSI: 0x1fdd, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1684b0001684e, matchRI: 0x1a09, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fde00001fe3},
			deviceTuple{type64: 0x20000000206, brand64: 0x168560001685d, matchRI: 0x1a0e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fe300001ff0},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x168c9000168d0, matchRI: 0x1a17, match64: 0x00000000, modelSI: 0x1ff0, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x168d0000168d7, matchRI: 0x1a18, match64: 0x00000000, modelSI: 0x1ff1, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x168d7000168db, matchRI: 0x1a19, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ff200001ff4},
			deviceTuple{type64: 0x2700000027, brand64: 0x168f6000168fc, matchRI: 0x1a1a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ff400001ff6},
			deviceTuple{type64: 0x20000000206, brand64: 0x1690f00016914, matchRI: 0x1a1d, match64: 0x00000000, modelSI: 0x1ff6, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1691c00016922, matchRI: 0x1a1e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ff700002002},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x169bc000169c1, matchRI: 0x1a22, match64: 0x00000000, modelSI: 0x2002, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x169c1000169c6, matchRI: 0x1a23, match64: 0x00000000, modelSI: 0x2003, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x169c6000169cc, matchRI: 0x1a24, match64: 0x00000000, modelSI: 0x2004, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x169d9000169dd, matchRI: 0x1a25, match64: 0x00000000, modelSI: 0x2005, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x169dd000169e2, matchRI: -0x0001, match64: 0x169e2000169e7, modelSI: -0x0001, models64: 0x200600002008},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x169ee000169f7, matchRI: 0x1a28, match64: 0x00000000, modelSI: -0x0001, models64: 0x20080000200c},
			deviceTuple{type64: 0x20000000206, brand64: 0x16a2800016a31, matchRI: -0x0001, match64: 0x16a3100016a37, modelSI: 0x200c, models64: 0x00000000},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x16a4900016a4f, matchRI: 0x1a29, match64: 0x00000000, modelSI: 0x200d, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x16a4f00016a54, matchRI: 0x1a2a, match64: 0x00000000, modelSI: -0x0001, models64: 0x200e00002010},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16a5400016a5b, matchRI: 0x1a2d, match64: 0x00000000, modelSI: -0x0001, models64: 0x201000002023},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16b4000016b49, matchRI: 0x1a34, match64: 0x00000000, modelSI: -0x0001, models64: 0x202300002027},
			deviceTuple{type64: 0x28400000286, brand64: 0x16b6a00016b73, matchRI: 0x1a38, match64: 0x00000000, modelSI: -0x0001, models64: 0x202700002029},
			deviceTuple{type64: 0x20000000206, brand64: 0x16b8100016b89, matchRI: 0x1a3b, match64: 0x00000000, modelSI: -0x0001, models64: 0x202900002033},
			deviceTuple{type64: 0x20000000206, brand64: 0x16c1d00016c22, matchRI: 0x1a42, match64: 0x00000000, modelSI: -0x0001, models64: 0x203300002040},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16cbf00016cc6, matchRI: 0x1a4f, match64: 0x00000000, modelSI: 0x2040, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16cc600016ccd, matchRI: 0x1a50, match64: 0x00000000, modelSI: -0x0001, models64: 0x204100002044},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16d0f00016d13, matchRI: 0x1a51, match64: 0x00000000, modelSI: 0x2044, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x16d1800016d21, matchRI: 0x1a52, match64: 0x00000000, modelSI: 0x2045, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16d2100016d25, matchRI: 0x1a53, match64: 0x00000000, modelSI: -0x0001, models64: 0x20460000204f},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16dce00016dd7, matchRI: 0x1a5c, match64: 0x00000000, modelSI: 0x204f, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16dd700016ddc, matchRI: 0x1a5d, match64: 0x00000000, modelSI: 0x2050, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16ddc00016deb, matchRI: 0x1a5e, match64: 0x00000000, modelSI: 0x2051, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x6acd00006ad2, matchRI: 0x1a5f, match64: 0x00000000, modelSI: -0x0001, models64: 0x205200002059},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16e2000016e27, matchRI: 0x1a67, match64: 0x00000000, modelSI: -0x0001, models64: 0x205900002063},
			deviceTuple{type64: 0x20000000206, brand64: 0x16e5300016e5c, matchRI: 0x1a71, match64: 0x00000000, modelSI: 0x2063, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x16e5c00016e64, matchRI: 0x1a72, match64: 0x00000000, modelSI: 0x2064, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16e6400016e6c, matchRI: 0x1a73, match64: 0x00000000, modelSI: -0x0001, models64: 0x20650000206a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16e9e00016ea2, matchRI: 0x1a79, match64: 0x00000000, modelSI: -0x0001, models64: 0x206a0000206c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16ea200016ea7, matchRI: 0x1a7c, match64: 0x00000000, modelSI: 0x206c, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16ea700016eb4, matchRI: -0x0001, match64: 0x16eb400016ec0, modelSI: -0x0001, models64: 0x206d0000206e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16ec500016ecc, matchRI: 0x1a7e, match64: 0x00000000, modelSI: -0x0001, models64: 0x206e00002071},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16ed800016ee5, matchRI: -0x0001, match64: 0x16ee500016eea, modelSI: -0x0001, models64: 0x207100002073},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16f0500016f0c, matchRI: 0x1a83, match64: 0x00000000, modelSI: -0x0001, models64: 0x207300002088},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16fc100016fc6, matchRI: 0x1a8e, match64: 0x00000000, modelSI: 0x2088, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16fc600016fca, matchRI: 0x1a8f, match64: 0x00000000, modelSI: -0x0001, models64: 0x20890000208a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16fca00016fce, matchRI: 0x1a91, match64: 0x00000000, modelSI: 0x208a, models64: 0x00000000},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x16fce00016fd7, matchRI: 0x1a92, match64: 0x00000000, modelSI: 0x208b, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16fd700016fdc, matchRI: 0x1a93, match64: 0x00000000, modelSI: 0x208c, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16fdc00016fe5, matchRI: 0x1a94, match64: 0x00000000, modelSI: 0x208d, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x16fef00016ff4, matchRI: 0x1a95, match64: 0x00000000, modelSI: 0x208e, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16ff400016ff9, matchRI: 0x1a96, match64: 0x00000000, modelSI: 0x208f, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x16ff900016fff, matchRI: 0x1a97, match64: 0x00000000, modelSI: -0x0001, models64: 0x209000002096},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1701100017018, matchRI: 0x1a9b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2096000020b6},
			deviceTuple{type64: 0x20000000206, brand64: 0x1710300017107, matchRI: 0x1aba, match64: 0x00000000, modelSI: -0x0001, models64: 0x20b6000020be},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1717900017181, matchRI: 0x1ac3, match64: 0x00000000, modelSI: -0x0001, models64: 0x20be000020c2},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x171a0000171a6, matchRI: 0x1ac7, match64: 0x00000000, modelSI: 0x20c2, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x171a6000171ae, matchRI: -0x0001, match64: 0x171a6000171ae, modelSI: -0x0001, models64: 0x20c3000020c5},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x171ae000171b5, matchRI: 0x1aca, match64: 0x00000000, modelSI: -0x0001, models64: 0x20c5000020ce},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x171eb000171f2, matchRI: 0x1ad4, match64: 0x00000000, modelSI: -0x0001, models64: 0x20ce000020d9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1726300017268, matchRI: 0x1ad5, match64: 0x00000000, modelSI: -0x0001, models64: 0x20d9000020dc},
			deviceTuple{type64: 0x20000000206, brand64: 0x172680001726e, matchRI: -0x0001, match64: 0x1726e00017273, modelSI: 0x20dc, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x172770001727c, matchRI: 0x1ad9, match64: 0x00000000, modelSI: -0x0001, models64: 0x20dd000020de},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1727c00017280, matchRI: 0x1adb, match64: 0x00000000, modelSI: -0x0001, models64: 0x20de000020e0},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1728d00017291, matchRI: 0x1add, match64: 0x00000000, modelSI: 0x20e0, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1729100017293, matchRI: 0x1ade, match64: 0x00000000, modelSI: -0x0001, models64: 0x20e1000020e4},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x172ac000172b0, matchRI: 0x1ae1, match64: 0x00000000, modelSI: 0x20e4, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x172b0000172b4, matchRI: 0x1ae2, match64: 0x00000000, modelSI: 0x20e5, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x172b4000172bb, matchRI: 0x1ae3, match64: 0x00000000, modelSI: -0x0001, models64: 0x20e6000020e8},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x172ce000172d2, matchRI: 0x1ae6, match64: 0x00000000, modelSI: -0x0001, models64: 0x20e8000020eb},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x1730700017310, matchRI: 0x1ae8, match64: 0x00000000, modelSI: 0x20eb, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x173140001731b, matchRI: 0x1ae9, match64: 0x00000000, modelSI: -0x0001, models64: 0x20ec000020f0},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1732000017324, matchRI: 0x1aee, match64: 0x00000000, modelSI: -0x0001, models64: 0x20f0000020f1},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1732f00017336, matchRI: 0x1aef, match64: 0x00000000, modelSI: 0x20f1, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x173380001733e, matchRI: 0x1af0, match64: 0x00000000, modelSI: -0x0001, models64: 0x20f2000020f4},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1735200017357, matchRI: 0x1af3, match64: 0x00000000, modelSI: -0x0001, models64: 0x20f4000020f5},
			deviceTuple{type64: 0x20000000206, brand64: 0x173570001735f, matchRI: 0x1af5, match64: 0x00000000, modelSI: -0x0001, models64: 0x20f5000020f7},
			deviceTuple{type64: 0x20000000206, brand64: 0xc2810000c285, matchRI: 0x1af8, match64: 0x00000000, modelSI: 0x20f7, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1736c00017371, matchRI: 0x1af9, match64: 0x00000000, modelSI: -0x0001, models64: 0x20f8000020fa},
			deviceTuple{type64: 0x20000000206, brand64: 0x1737b00017383, matchRI: 0x1afc, match64: 0x00000000, modelSI: -0x0001, models64: 0x20fa000020fc},
			deviceTuple{type64: 0x20000000206, brand64: 0x1739c000173a2, matchRI: 0x1aff, match64: 0x00000000, modelSI: 0x20fc, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x173ac000173b3, matchRI: 0x1b00, match64: 0x00000000, modelSI: -0x0001, models64: 0x20fd00002103},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1742100017427, matchRI: 0x1b03, match64: 0x00000000, modelSI: -0x0001, models64: 0x21030000210e},
			deviceTuple{type64: 0x20000000206, brand64: 0x174670001746e, matchRI: 0x1b09, match64: 0x00000000, modelSI: 0x210e, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x174790001747f, matchRI: 0x1b0a, match64: 0x00000000, modelSI: -0x0001, models64: 0x210f00002119},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x174d1000174d6, matchRI: 0x1b15, match64: 0x00000000, modelSI: -0x0001, models64: 0x21190000211c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x174ec000174f4, matchRI: -0x0001, match64: 0x174f4000174fc, modelSI: -0x0001, models64: 0x211c00002147},
			deviceTuple{type64: 0x28400000286, brand64: 0x1763300017638, matchRI: 0x1b43, match64: 0x00000000, modelSI: -0x0001, models64: 0x214700002149},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x176670001766d, matchRI: 0x1b44, match64: 0x00000000, modelSI: -0x0001, models64: 0x21490000215f},
			deviceTuple{type64: 0x20000000206, brand64: 0x177ba000177bf, matchRI: 0x1b4d, match64: 0x00000000, modelSI: 0x215f, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x177bf000177c7, matchRI: 0x1b4e, match64: 0x00000000, modelSI: -0x0001, models64: 0x21600000216f},
			deviceTuple{type64: 0x41400000421, brand64: 0x1786000017869, matchRI: 0x1b5d, match64: 0x00000000, modelSI: -0x0001, models64: 0x216f00002175},
			deviceTuple{type64: 0x28400000286, brand64: 0x178a4000178ab, matchRI: -0x0001, match64: 0x178a4000178ab, modelSI: -0x0001, models64: 0x217500002176},
			deviceTuple{type64: 0x28400000286, brand64: 0x178ab000178b0, matchRI: 0x1b65, match64: 0x00000000, modelSI: -0x0001, models64: 0x21760000217d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x179050001790b, matchRI: 0x1b67, match64: 0x00000000, modelSI: 0x217d, models64: 0x00000000},
			deviceTuple{type64: 0x2700000027, brand64: 0x1790b0001790f, matchRI: -0x0001, match64: 0x1790f00017916, modelSI: -0x0001, models64: 0x217e0000217f},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x179160001791b, matchRI: 0x1b69, match64: 0x00000000, modelSI: -0x0001, models64: 0x217f00002181},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1792100017926, matchRI: 0x1b6c, match64: 0x00000000, modelSI: -0x0001, models64: 0x218100002182},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1792b00017937, matchRI: 0x1b6e, match64: 0x00000000, modelSI: -0x0001, models64: 0x218200002184},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x1795100017959, matchRI: 0x1b6f, match64: 0x00000000, modelSI: -0x0001, models64: 0x218400002187},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x179590001795f, matchRI: 0x1b73, match64: 0x00000000, modelSI: -0x0001, models64: 0x218700002189},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1795f00017964, matchRI: 0x1b76, match64: 0x00000000, modelSI: -0x0001, models64: 0x218900002194},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x179ae000179b2, matchRI: 0x1b82, match64: 0x00000000, modelSI: -0x0001, models64: 0x219400002274},
			deviceTuple{type64: 0x28400000286, brand64: 0x17e7c00017e81, matchRI: 0x1c52, match64: 0x00000000, modelSI: -0x0001, models64: 0x227400002278},
			deviceTuple{type64: 0x20000000206, brand64: 0x17e9500017e9c, matchRI: 0x1c54, match64: 0x00000000, modelSI: -0x0001, models64: 0x22780000227a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x17eab00017eb3, matchRI: 0x1c56, match64: 0x00000000, modelSI: -0x0001, models64: 0x227a000022a9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1814e00018154, matchRI: 0x1c6d, match64: 0x00000000, modelSI: -0x0001, models64: 0x22a9000022c3},
			deviceTuple{type64: 0x28400000286, brand64: 0x182380001823e, matchRI: 0x1c82, match64: 0x00000000, modelSI: -0x0001, models64: 0x22c3000022c8},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1825c00018262, matchRI: -0x0001, match64: 0x1826200018268, modelSI: -0x0001, models64: 0x22c8000022c9},
			deviceTuple{type64: 0x20000000206, brand64: 0x1827000018276, matchRI: 0x1c88, match64: 0x00000000, modelSI: -0x0001, models64: 0x22c9000022ca},
			deviceTuple{type64: 0x28400000286, brand64: 0x1828100018286, matchRI: 0x1c89, match64: 0x00000000, modelSI: 0x22ca, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x182860001828a, matchRI: 0x1c8a, match64: 0x00000000, modelSI: -0x0001, models64: 0x22cb000022ce},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x1828a00018290, matchRI: 0x1c8e, match64: 0x00000000, modelSI: 0x22ce, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1829000018294, matchRI: 0x1c8f, match64: 0x00000000, modelSI: -0x0001, models64: 0x22cf000022d2},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1829a000182a0, matchRI: 0x1c93, match64: 0x00000000, modelSI: -0x0001, models64: 0x22d2000022d9},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x182d9000182dd, matchRI: 0x1c9b, match64: 0x00000000, modelSI: -0x0001, models64: 0x22d9000022e0},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x941c00009422, matchRI: 0x1ca3, match64: 0x00000000, modelSI: -0x0001, models64: 0x22e0000022e4},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1833300018335, matchRI: 0x1ca7, match64: 0x00000000, modelSI: 0x22e4, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1833500018339, matchRI: 0x1ca8, match64: 0x00000000, modelSI: 0x22e5, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x183480001834e, matchRI: 0x1ca9, match64: 0x00000000, modelSI: -0x0001, models64: 0x22e6000022ee},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x183ae000183b4, matchRI: -0x0001, match64: 0x183b4000183bc, modelSI: -0x0001, models64: 0x22ee000022ef},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x183c4000183cb, matchRI: 0x1cb1, match64: 0x00000000, modelSI: 0x22ef, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x183cb000183da, matchRI: 0x1cb2, match64: 0x00000000, modelSI: -0x0001, models64: 0x22f0000022f1},
			deviceTuple{type64: 0x28400000286, brand64: 0x183f5000183fe, matchRI: 0x1cb3, match64: 0x00000000, modelSI: -0x0001, models64: 0x22f1000022f2},
			deviceTuple{type64: 0x20000000206, brand64: 0x183fe00018404, matchRI: 0x1cb5, match64: 0x00000000, modelSI: -0x0001, models64: 0x22f2000022fb},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1843300018439, matchRI: 0x1cbf, match64: 0x00000000, modelSI: 0x22fb, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x184390001843e, matchRI: 0x1cc0, match64: 0x00000000, modelSI: 0x22fc, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1843e00018442, matchRI: 0x1cc1, match64: 0x00000000, modelSI: -0x0001, models64: 0x22fd00002367},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x187ad000187b5, matchRI: 0x1d15, match64: 0x00000000, modelSI: -0x0001, models64: 0x23670000236f},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x187ed000187f2, matchRI: 0x1d1c, match64: 0x00000000, modelSI: 0x236f, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x187fe00018802, matchRI: 0x1d1d, match64: 0x00000000, modelSI: -0x0001, models64: 0x237000002372},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1880200018808, matchRI: 0x1d20, match64: 0x00000000, modelSI: -0x0001, models64: 0x237200002375},
			deviceTuple{type64: 0x20000000206, brand64: 0x188080001880f, matchRI: 0x1d24, match64: 0x00000000, modelSI: -0x0001, models64: 0x237500002378},
			deviceTuple{type64: 0x20000000206, brand64: 0x188160001881e, matchRI: -0x0001, match64: 0x1881e00018822, modelSI: 0x2378, models64: 0x00000000},
			deviceTuple{type64: 0x5f5100005f5b, brand64: 0x1882200018829, matchRI: 0x1d28, match64: 0x00000000, modelSI: 0x2379, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1883100018837, matchRI: 0x1d29, match64: 0x00000000, modelSI: -0x0001, models64: 0x237a0000237e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x188670001886f, matchRI: 0x1d2d, match64: 0x00000000, modelSI: 0x237e, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x188760001887b, matchRI: 0x1d2e, match64: 0x00000000, modelSI: -0x0001, models64: 0x237f00002381},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x1889200018896, matchRI: 0x1d2f, match64: 0x00000000, modelSI: 0x2381, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1889600018899, matchRI: -0x0001, match64: 0x18899000188a8, modelSI: -0x0001, models64: 0x238200002383},
			deviceTuple{type64: 0x20000000206, brand64: 0x188af000188b7, matchRI: 0x1d30, match64: 0x00000000, modelSI: 0x2383, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x188c3000188c9, matchRI: 0x1d31, match64: 0x00000000, modelSI: -0x0001, models64: 0x238400002389},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x188df000188e3, matchRI: 0x1d37, match64: 0x00000000, modelSI: 0x2389, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x188e3000188e9, matchRI: 0x1d38, match64: 0x00000000, modelSI: -0x0001, models64: 0x238a00002394},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1897300018979, matchRI: 0x1d3e, match64: 0x00000000, modelSI: -0x0001, models64: 0x239400002399},
			deviceTuple{type64: 0x5f5100005f5b, brand64: 0x189e0000189e5, matchRI: 0x1d40, match64: 0x00000000, modelSI: 0x2399, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x189e5000189ea, matchRI: 0x1d41, match64: 0x00000000, modelSI: -0x0001, models64: 0x239a0000239d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x189ed000189f7, matchRI: 0x1d45, match64: 0x00000000, modelSI: -0x0001, models64: 0x239d000023a4},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x18a3d00018a43, matchRI: 0x1d4d, match64: 0x00000000, modelSI: -0x0001, models64: 0x23a400002453},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x192380001923c, matchRI: 0x1dec, match64: 0x00000000, modelSI: -0x0001, models64: 0x245300002454},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1924000019244, matchRI: 0x1dee, match64: 0x00000000, modelSI: -0x0001, models64: 0x24540000245b},
			deviceTuple{type64: 0x20000000206, brand64: 0x1926c00019270, matchRI: 0x1df5, match64: 0x00000000, modelSI: -0x0001, models64: 0x245b00002460},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x192970001929e, matchRI: 0x1dfb, match64: 0x00000000, modelSI: 0x2460, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1929e000192a4, matchRI: 0x1dfc, match64: 0x00000000, modelSI: -0x0001, models64: 0x246100002464},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x192ad000192b5, matchRI: 0x1e00, match64: 0x00000000, modelSI: 0x2464, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x192b5000192ba, matchRI: 0x1e01, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x192ba000192c0, matchRI: 0x1e02, match64: 0x00000000, modelSI: 0x2465, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x192c0000192c6, matchRI: 0x1e03, match64: 0x00000000, modelSI: 0x2466, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x192c6000192ca, matchRI: 0x1e04, match64: 0x00000000, modelSI: -0x0001, models64: 0x24670000246d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x193180001931e, matchRI: 0x1e07, match64: 0x00000000, modelSI: 0x246d, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x193280001932e, matchRI: 0x1e08, match64: 0x00000000, modelSI: -0x0001, models64: 0x246e0000247e},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x194390001943c, matchRI: 0x1e0c, match64: 0x00000000, modelSI: -0x0001, models64: 0x247e00002482},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1946b0001946f, matchRI: 0x1e0e, match64: 0x00000000, modelSI: -0x0001, models64: 0x24820000248c},
			deviceTuple{type64: 0x28400000286, brand64: 0x194dc000194e3, matchRI: 0x1e13, match64: 0x00000000, modelSI: 0x248c, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x194ea000194ee, matchRI: 0x1e14, match64: 0x00000000, modelSI: -0x0001, models64: 0x248d0000248f},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x194fa000194ff, matchRI: 0x1e17, match64: 0x00000000, modelSI: -0x0001, models64: 0x248f00002491},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x194ff00019501, matchRI: 0x1e1a, match64: 0x00000000, modelSI: -0x0001, models64: 0x249100002499},
			deviceTuple{type64: 0x20000000206, brand64: 0x1953900019540, matchRI: 0x1e23, match64: 0x00000000, modelSI: 0x2499, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1954400019549, matchRI: 0x1e24, match64: 0x00000000, modelSI: -0x0001, models64: 0x249a0000249d},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1954e00019553, matchRI: 0x1e27, match64: 0x00000000, modelSI: 0x249d, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1955300019557, matchRI: 0x1e28, match64: 0x00000000, modelSI: -0x0001, models64: 0x249e000024a0},
			deviceTuple{type64: 0x20000000206, brand64: 0x195850001958a, matchRI: 0x1e29, match64: 0x00000000, modelSI: -0x0001, models64: 0x24a0000024a1},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1958a0001958d, matchRI: 0x1e2b, match64: 0x00000000, modelSI: -0x0001, models64: 0x24a100002587},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x19f5700019f5a, matchRI: 0x1ec7, match64: 0x00000000, modelSI: -0x0001, models64: 0x2587000025a8},
			deviceTuple{type64: 0x20000000206, brand64: 0x1a0850001a08a, matchRI: 0x1ed9, match64: 0x00000000, modelSI: 0x25a8, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1a08a0001a08f, matchRI: 0x1eda, match64: 0x00000000, modelSI: -0x0001, models64: 0x25a9000025ae},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1a0d80001a0dd, matchRI: 0x1edd, match64: 0x00000000, modelSI: -0x0001, models64: 0x25ae000025b0},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1a0dd0001a0e2, matchRI: 0x1ee0, match64: 0x00000000, modelSI: -0x0001, models64: 0x25b0000025b2},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1a0e20001a0e5, matchRI: 0x1ee3, match64: 0x00000000, modelSI: -0x0001, models64: 0x25b2000025b5},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1a0fa0001a0ff, matchRI: 0x1ee6, match64: 0x00000000, modelSI: -0x0001, models64: 0x25b5000025ba},
			deviceTuple{type64: 0x20000000206, brand64: 0x1a1340001a13d, matchRI: 0x1ee7, match64: 0x00000000, modelSI: 0x25ba, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1a1480001a14e, matchRI: 0x1ee8, match64: 0x00000000, modelSI: 0x25bb, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1a1520001a157, matchRI: 0x1ee9, match64: 0x00000000, modelSI: 0x25bc, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1a1570001a15b, matchRI: 0x1eea, match64: 0x00000000, modelSI: -0x0001, models64: 0x25bd000025c2},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x1a1830001a188, matchRI: 0x1ef0, match64: 0x00000000, modelSI: -0x0001, models64: 0x25c2000025c4},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1a1920001a196, matchRI: 0x1ef2, match64: 0x00000000, modelSI: -0x0001, models64: 0x25c4000025dc},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1a2390001a23d, matchRI: 0x1f0b, match64: 0x00000000, modelSI: -0x0001, models64: 0x25dc000025f7},
			deviceTuple{type64: 0x20000000206, brand64: 0x1a3910001a395, matchRI: 0x1f15, match64: 0x00000000, modelSI: -0x0001, models64: 0x25f7000025fc},
			deviceTuple{type64: 0x20000000206, brand64: 0x1a39d0001a3a2, matchRI: -0x0001, match64: 0x1a3a20001a3a7, modelSI: 0x25fc, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1a3a70001a3ad, matchRI: 0x1f1b, match64: 0x00000000, modelSI: -0x0001, models64: 0x25fd00002600},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1a3be0001a3c1, matchRI: 0x1f1d, match64: 0x00000000, modelSI: 0x2600, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1a3ca0001a3ce, matchRI: 0x1f1e, match64: 0x00000000, modelSI: -0x0001, models64: 0x260100002606},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1a42b0001a42d, matchRI: 0x1f20, match64: 0x00000000, modelSI: -0x0001, models64: 0x2606000026ca},
			deviceTuple{type64: 0x20000000206, brand64: 0x1a98a0001a98f, matchRI: 0x1fd1, match64: 0x00000000, modelSI: -0x0001, models64: 0x26ca000026d2},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1aa530001aa59, matchRI: 0x1fd6, match64: 0x00000000, modelSI: 0x26d2, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1aa590001aa5d, matchRI: 0x1fd7, match64: 0x00000000, modelSI: 0x26d3, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1aa5d0001aa65, matchRI: 0x1fd8, match64: 0x00000000, modelSI: -0x0001, models64: 0x26d4000026d6},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1aa7d0001aa82, matchRI: 0x1fda, match64: 0x00000000, modelSI: -0x0001, models64: 0x26d6000026df},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x1aac30001aac9, matchRI: 0x1fe4, match64: 0x00000000, modelSI: 0x26df, models64: 0x00000000},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x1aac90001aad1, matchRI: 0x1fe5, match64: 0x00000000, modelSI: -0x0001, models64: 0x26e0000026e6},
			deviceTuple{type64: 0x20000000206, brand64: 0x1aae00001aae5, matchRI: 0x1fec, match64: 0x00000000, modelSI: -0x0001, models64: 0x26e6000026ee},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1ab2b0001ab31, matchRI: 0x1ff3, match64: 0x00000000, modelSI: -0x0001, models64: 0x26ee000026f0},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1ab310001ab36, matchRI: 0x1ff6, match64: 0x00000000, modelSI: -0x0001, models64: 0x26f0000026f5},
			deviceTuple{type64: 0x5f5100005f5b, brand64: 0x1ab500001ab55, matchRI: 0x1ffc, match64: 0x00000000, modelSI: 0x26f5, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1ab550001ab5b, matchRI: 0x1ffd, match64: 0x00000000, modelSI: 0x26f6, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1ab640001ab68, matchRI: 0x1ffe, match64: 0x00000000, modelSI: 0x26f7, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1ab680001ab6d, matchRI: 0x1fff, match64: 0x00000000, modelSI: -0x0001, models64: 0x26f800002712},
			deviceTuple{type64: 0x9f700000a04, brand64: 0x1ae040001ae09, matchRI: 0x2003, match64: 0x00000000, modelSI: 0x2712, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1ae090001ae0d, matchRI: 0x2004, match64: 0x00000000, modelSI: 0x2713, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1ae0d0001ae10, matchRI: 0x2005, match64: 0x00000000, modelSI: 0x2714, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1ae100001ae15, matchRI: 0x2006, match64: 0x00000000, modelSI: 0x2715, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1ae150001ae19, matchRI: 0x2007, match64: 0x00000000, modelSI: 0x2716, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1ae190001ae1e, matchRI: 0x2008, match64: 0x00000000, modelSI: -0x0001, models64: 0x27170000271a},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1ae560001ae5a, matchRI: 0x2009, match64: 0x00000000, modelSI: -0x0001, models64: 0x271a00002720},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1ae750001ae7b, matchRI: 0x2010, match64: 0x00000000, modelSI: -0x0001, models64: 0x272000002727},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1aead0001aeb5, matchRI: 0x2015, match64: 0x00000000, modelSI: 0x2727, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1aeb50001aebc, matchRI: -0x0001, match64: 0x1aebc0001aec3, modelSI: -0x0001, models64: 0x272800002729},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1aec30001aec7, matchRI: 0x2017, match64: 0x00000000, modelSI: -0x0001, models64: 0x272900002736},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1af6b0001af6f, matchRI: 0x201c, match64: 0x00000000, modelSI: 0x2736, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1af6f0001af74, matchRI: 0x201d, match64: 0x00000000, modelSI: -0x0001, models64: 0x27370000273a},
			deviceTuple{type64: 0x20000000206, brand64: 0x1af7d0001af82, matchRI: 0x2021, match64: 0x00000000, modelSI: -0x0001, models64: 0x273a0000273c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1af820001af87, matchRI: 0x2024, match64: 0x00000000, modelSI: -0x0001, models64: 0x273c00002742},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1af9c0001afa8, matchRI: 0x202b, match64: 0x00000000, modelSI: 0x2742, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1afad0001afb1, matchRI: 0x202c, match64: 0x00000000, modelSI: -0x0001, models64: 0x27430000276c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1b1290001b12f, matchRI: 0x2037, match64: 0x00000000, modelSI: 0x276c, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1b1360001b139, matchRI: 0x2038, match64: 0x00000000, modelSI: -0x0001, models64: 0x276d0000276f},
			deviceTuple{type64: 0x20000000206, brand64: 0x1b1410001b146, matchRI: 0x203b, match64: 0x00000000, modelSI: -0x0001, models64: 0x276f00002771},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1b15c0001b162, matchRI: 0x203d, match64: 0x00000000, modelSI: -0x0001, models64: 0x277100002774},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1b1810001b189, matchRI: 0x203f, match64: 0x00000000, modelSI: -0x0001, models64: 0x277400002775},
			deviceTuple{type64: 0x20000000206, brand64: 0x1b1890001b190, matchRI: 0x2041, match64: 0x00000000, modelSI: -0x0001, models64: 0x277500002777},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1b1a90001b1ad, matchRI: 0x2044, match64: 0x00000000, modelSI: 0x2777, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1b1ad0001b1b3, matchRI: 0x2045, match64: 0x00000000, modelSI: 0x2778, models64: 0x00000000},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1b1b30001b1b9, matchRI: 0x2046, match64: 0x00000000, modelSI: -0x0001, models64: 0x27790000277c},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1b1c00001b1c8, matchRI: 0x204a, match64: 0x00000000, modelSI: 0x277c, models64: 0x00000000},
			deviceTuple{type64: 0x20000000206, brand64: 0x1b1c80001b1cd, matchRI: 0x204b, match64: 0x00000000, modelSI: -0x0001, models64: 0x277d000027af},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1b5170001b51f, matchRI: 0x205f, match64: 0x00000000, modelSI: -0x0001, models64: 0x27af000027b1},
			deviceTuple{type64: 0x19e000001a8, brand64: 0x1b5250001b529, matchRI: 0x2062, match64: 0x00000000, modelSI: -0x0001, models64: 0x27b1000027b9},
		},
		// notebooks.yml
		{
			deviceTuple{type64: 0x7f1000007f8, brand64: 0x58f00000593, matchRI: 0x2068, match64: 0x00000000, modelSI: -0x0001, models64: 0x27b9000027bc},
			deviceTuple{type64: 0x7f1000007f8, brand64: 0x2f5200002f56, matchRI: 0x206c, match64: 0x00000000, modelSI: -0x0001, models64: 0x27bc000027c5},
			deviceTuple{type64: 0x7f1000007f8, brand64: 0x562a0000562e, matchRI: 0x2076, match64: 0x00000000, modelSI: -0x0001, models64: 0x27c5000027c9},
			deviceTuple{type64: 0x7f1000007f8, brand64: 0x778500007787, matchRI: 0x2077, match64: 0x00000000, modelSI: -0x0001, models64: 0x27c9000027d4},
			deviceTuple{type64: 0x7f1000007f8, brand64: 0xbbee0000bbf4, matchRI: 0x207a, match64: 0x00000000, modelSI: -0x0001, models64: 0x27d4000027d8},
			deviceTuple{type64: 0x7f1000007f8, brand64: 0x1b7d80001b7e1, matchRI: 0x207f, match64: 0x00000000, modelSI: 0x27d8, models64: 0x00000000},
			deviceTuple{type64: 0x7f1000007f8, brand64: 0x168560001685d, matchRI: 0x2080, match64: 0x00000000, modelSI: 0x27d9, models64: 0x00000000},
			deviceTuple{type64: 0x7f1000007f8, brand64: 0x16a5400016a5b, matchRI: -0x0001, match64: 0x1b8120001b821, modelSI: -0x0001, models64: 0x27da000027dc},
		},
		// portable_media_player.yml
		{
			deviceTuple{type64: 0xbbce0000bbe3, brand64: 0x1fb700001fbc, matchRI: 0x2083, match64: 0x00000000, modelSI: -0x0001, models64: 0x27dc000027e4},
			deviceTuple{type64: 0xbbce0000bbe3, brand64: 0x1b88d0001b892, matchRI: 0x208c, match64: 0x00000000, modelSI: 0x27e4, models64: 0x00000000},
			deviceTuple{type64: 0xbbce0000bbe3, brand64: 0x1b8920001b896, matchRI: -0x0001, match64: 0x1b8920001b896, modelSI: -0x0001, models64: 0x27e5000027e7},
			deviceTuple{type64: 0xbbce0000bbe3, brand64: 0xfe00000107, matchRI: -0x0001, match64: 0x1b8a20001b8b2, modelSI: 0x27e7, models64: 0x00000000},
			deviceTuple{type64: 0xbbce0000bbe3, brand64: 0x1066900010672, matchRI: 0x208e, match64: 0x00000000, modelSI: 0x27e8, models64: 0x00000000},
			deviceTuple{type64: 0xbbce0000bbe3, brand64: 0x1b8b90001b8be, matchRI: 0x208f, match64: 0x00000000, modelSI: -0x0001, models64: 0x27e9000027ec},
			deviceTuple{type64: 0xbbce0000bbe3, brand64: 0x180000001f, matchRI: 0x2093, match64: 0x00000000, modelSI: -0x0001, models64: 0x27ec000027f3},
			deviceTuple{type64: 0xbbce0000bbe3, brand64: 0x1b9640001b96c, matchRI: -0x0001, match64: 0x1b96c0001b977, modelSI: -0x0001, models64: 0x27f3000027f4},
			deviceTuple{type64: 0xbbce0000bbe3, brand64: 0x1b9770001b97b, matchRI: 0x2096, match64: 0x00000000, modelSI: 0x27f4, models64: 0x00000000},
		},
		// shell_tv.yml
		{
			deviceTuple{type64: 0x28400000286, brand64: 0x1b97b0001b980, matchRI: -0x0001, match64: 0x1b9800001b98b, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1b98b0001b98f, matchRI: -0x0001, match64: 0x1b98f0001b999, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x371d00003720, matchRI: -0x0001, match64: 0x1b9990001b9a2, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x56b4000056b9, matchRI: -0x0001, match64: 0x1b9a20001b9ad, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1b9ad0001b9b1, matchRI: -0x0001, match64: 0x1b9b10001b9bb, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x60f4000060fb, matchRI: 0x2097, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x7c2700007c29, matchRI: -0x0001, match64: 0x1b9bb0001b9c3, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x9f8e00009f91, matchRI: -0x0001, match64: 0x1b9c30001b9cc, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1b9cc0001b9d1, matchRI: -0x0001, match64: 0x1b9d10001b9dc, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1b9dc0001b9e1, matchRI: -0x0001, match64: 0x1b9e10001b9ec, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0xbba30000bba7, matchRI: -0x0001, match64: 0x1b9ec0001b9f6, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1b9f60001b9fc, matchRI: -0x0001, match64: 0x1b9fc0001ba08, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0xc6c00000c6c5, matchRI: -0x0001, match64: 0x1ba080001ba13, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0xea070000ea0e, matchRI: -0x0001, match64: 0x1ba130001ba20, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0xf4e00000f4e5, matchRI: -0x0001, match64: 0x1ba200001ba2b, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x15d2f00015d37, matchRI: -0x0001, match64: 0x1ba2b0001ba39, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x167740001677e, matchRI: -0x0001, match64: 0x1ba390001ba49, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1ba490001ba4d, matchRI: -0x0001, match64: 0x1ba4d0001ba57, modelSI: -0x0001, models64: 0x00000000},
		},
		// televisions.yml
		{
			deviceTuple{type64: 0x28400000286, brand64: 0x35a00000363, matchRI: 0x2098, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x3630000036c, matchRI: 0x2099, match64: 0x00000000, modelSI: -0x0001, models64: 0x27f5000027f6},
			deviceTuple{type64: 0x28400000286, brand64: 0x40500000408, matchRI: -0x0001, match64: 0x40500000408, modelSI: -0x0001, models64: 0x27f6000027f7},
			deviceTuple{type64: 0x28400000286, brand64: 0x4290000042e, matchRI: 0x209c, match64: 0x00000000, modelSI: -0x0001, models64: 0x27f7000027f8},
			deviceTuple{type64: 0x28400000286, brand64: 0x1ba610001ba68, matchRI: -0x0001, match64: 0x1ba610001ba68, modelSI: -0x0001, models64: 0x27f8000027f9},
			deviceTuple{type64: 0x28400000286, brand64: 0x1ba680001ba72, matchRI: -0x0001, match64: 0x1ba680001ba72, modelSI: -0x0001, models64: 0x27f9000027fa},
			deviceTuple{type64: 0x28400000286, brand64: 0x352400003529, matchRI: -0x0001, match64: 0x1ba720001ba77, modelSI: -0x0001, models64: 0x27fa000027fb},
			deviceTuple{type64: 0x28400000286, brand64: 0x1ba7e0001ba89, matchRI: -0x0001, match64: 0x1ba890001ba94, modelSI: 0x27fb, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x3a8900003a92, matchRI: 0x209f, match64: 0x00000000, modelSI: -0x0001, models64: 0x27fc000027fd},
			deviceTuple{type64: 0x28400000286, brand64: 0x42570000425b, matchRI: 0x20a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x46340000463a, matchRI: 0x20a1, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x470000004709, matchRI: -0x0001, match64: 0x470000004709, modelSI: -0x0001, models64: 0x27fd000027fe},
			deviceTuple{type64: 0x28400000286, brand64: 0x1baaa0001bab1, matchRI: -0x0001, match64: 0x1baaa0001bab1, modelSI: 0x27fe, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bab70001baba, matchRI: -0x0001, match64: 0x1bab70001baba, modelSI: 0x27ff, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x5699000056a1, matchRI: 0x20a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bac20001bacc, matchRI: 0x20a4, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x610800006112, matchRI: 0x20a5, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bacc0001bacf, matchRI: 0x20a6, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x66ec000066f2, matchRI: 0x20a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x3a6000003ab, matchRI: 0x20a8, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bacf0001bad4, matchRI: 0x20a9, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x76ef000076f6, matchRI: 0x20aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x280000002801},
			deviceTuple{type64: 0x28400000286, brand64: 0x7af300007af8, matchRI: 0x20ab, match64: 0x00000000, modelSI: -0x0001, models64: 0x280100002802},
			deviceTuple{type64: 0x28400000286, brand64: 0x7c5800007c60, matchRI: 0x20ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x7dd700007dde, matchRI: 0x20ad, match64: 0x00000000, modelSI: -0x0001, models64: 0x28020000280a},
			deviceTuple{type64: 0x28400000286, brand64: 0x7fa400007fab, matchRI: 0x20b0, match64: 0x00000000, modelSI: -0x0001, models64: 0x280a0000280b},
			deviceTuple{type64: 0x28400000286, brand64: 0x6b7300006b7a, matchRI: 0x20b1, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bb240001bb29, matchRI: 0x20b2, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bb290001bb2e, matchRI: 0x20b3, match64: 0x00000000, modelSI: -0x0001, models64: 0x280b00002812},
			deviceTuple{type64: 0x28400000286, brand64: 0x948f00009496, matchRI: 0x20b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bb830001bb87, matchRI: -0x0001, match64: 0x1bb830001bb87, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bb870001bb8c, matchRI: -0x0001, match64: 0x1bb870001bb8c, modelSI: -0x0001, models64: 0x281200002813},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bb8c0001bb93, matchRI: -0x0001, match64: 0x1bb8c0001bb93, modelSI: -0x0001, models64: 0x281300002815},
			deviceTuple{type64: 0x28400000286, brand64: 0x9f8e00009f91, matchRI: 0x20ba, match64: 0x00000000, modelSI: -0x0001, models64: 0x281500002816},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bba40001bba8, matchRI: 0x20bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0xa1f40000a1fa, matchRI: 0x20bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x281600002817},
			deviceTuple{type64: 0x28400000286, brand64: 0xabed0000abef, matchRI: -0x0001, match64: 0x1bbaf0001bbb2, modelSI: -0x0001, models64: 0x281700002827},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bbfe0001bc04, matchRI: 0x20c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0xc4fb0000c503, matchRI: 0x20c7, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bc040001bc0a, matchRI: 0x20c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bc0a0001bc0f, matchRI: -0x0001, match64: 0x1bc0a0001bc0f, modelSI: -0x0001, models64: 0x282700002828},
			deviceTuple{type64: 0x28400000286, brand64: 0xc6da0000c6df, matchRI: 0x20ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bc0f0001bc14, matchRI: 0x20cb, match64: 0x00000000, modelSI: -0x0001, models64: 0x282800002829},
			deviceTuple{type64: 0x28400000286, brand64: 0xcaf80000cafb, matchRI: 0x20cd, match64: 0x00000000, modelSI: -0x0001, models64: 0x28290000282a},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bc290001bc32, matchRI: -0x0001, match64: 0x1bc290001bc32, modelSI: -0x0001, models64: 0x282a0000282b},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bc340001bc3c, matchRI: 0x20cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x282b0000282c},
			deviceTuple{type64: 0x28400000286, brand64: 0xd3ce0000d3d4, matchRI: -0x0001, match64: 0xd3ce0000d3d4, modelSI: -0x0001, models64: 0x282c0000282d},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bc3c0001bc40, matchRI: -0x0001, match64: 0x1bc3c0001bc40, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0xd95c0000d961, matchRI: -0x0001, match64: 0x1bc400001bc45, modelSI: -0x0001, models64: 0x282d0000282e},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bc500001bc59, matchRI: 0x20d2, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1007c0001007e, matchRI: 0x20d3, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bc590001bc5d, matchRI: -0x0001, match64: 0x1bc590001bc5d, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bc5d0001bc64, matchRI: 0x20d4, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1066900010672, matchRI: -0x0001, match64: 0x1066900010672, modelSI: -0x0001, models64: 0x282e00002832},
			deviceTuple{type64: 0x28400000286, brand64: 0x108340001083b, matchRI: 0x20d9, match64: 0x00000000, modelSI: -0x0001, models64: 0x283200002834},
			deviceTuple{type64: 0x28400000286, brand64: 0x10b9500010b9d, matchRI: 0x20dc, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x116c7000116cd, matchRI: 0x20dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bc820001bc87, matchRI: 0x20de, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bc870001bc8b, matchRI: 0x20df, match64: 0x00000000, modelSI: -0x0001, models64: 0x283400002836},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bc990001bc9c, matchRI: 0x20e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bc9c0001bca0, matchRI: 0x20e1, match64: 0x00000000, modelSI: -0x0001, models64: 0x283600002837},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bca90001bcad, matchRI: 0x20e2, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bcad0001bcb3, matchRI: 0x20e3, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x180000001f, matchRI: 0x20e4, match64: 0x00000000, modelSI: -0x0001, models64: 0x28370000283a},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bcce0001bcd8, matchRI: -0x0001, match64: 0x1bcce0001bcd8, modelSI: -0x0001, models64: 0x283a0000283c},
			deviceTuple{type64: 0x28400000286, brand64: 0x149a6000149ab, matchRI: 0x20e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x283c00002841},
			deviceTuple{type64: 0x28400000286, brand64: 0x150440001504c, matchRI: -0x0001, match64: 0x1bce30001bcec, modelSI: -0x0001, models64: 0x284100002842},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bcec0001bcfc, matchRI: 0x20ef, match64: 0x00000000, modelSI: -0x0001, models64: 0x284200002844},
			deviceTuple{type64: 0x28400000286, brand64: 0x18a0000018e, matchRI: -0x0001, match64: 0x18a0000018e, modelSI: -0x0001, models64: 0x28440000284a},
			deviceTuple{type64: 0x28400000286, brand64: 0x15fe100015fe4, matchRI: 0x20f7, match64: 0x00000000, modelSI: -0x0001, models64: 0x284a0000284b},
			deviceTuple{type64: 0x28400000286, brand64: 0x160a4000160ae, matchRI: 0x20f9, match64: 0x00000000, modelSI: -0x0001, models64: 0x284b0000284c},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bd140001bd19, matchRI: 0x20fb, match64: 0x00000000, modelSI: -0x0001, models64: 0x284c0000284d},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bd240001bd2d, matchRI: -0x0001, match64: 0x1bd240001bd2d, modelSI: -0x0001, models64: 0x284d0000284e},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bd2d0001bd38, matchRI: -0x0001, match64: 0x1bd2d0001bd38, modelSI: -0x0001, models64: 0x284e0000284f},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bd4c0001bd54, matchRI: 0x20fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bd540001bd5f, matchRI: -0x0001, match64: 0x1bd540001bd5f, modelSI: -0x0001, models64: 0x284f00002850},
			deviceTuple{type64: 0x28400000286, brand64: 0x1620d00016215, matchRI: 0x20ff, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x167740001677e, matchRI: -0x0001, match64: 0x167740001677e, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x168560001685d, matchRI: 0x2100, match64: 0x00000000, modelSI: -0x0001, models64: 0x285000002857},
			deviceTuple{type64: 0x28400000286, brand64: 0x16a5400016a5b, matchRI: -0x0001, match64: 0x16a5400016a5b, modelSI: -0x0001, models64: 0x285700002859},
			deviceTuple{type64: 0x28400000286, brand64: 0x171ae000171b5, matchRI: 0x2108, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bd9e0001bda1, matchRI: 0x2109, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x176670001766d, matchRI: 0x210a, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bda10001bda9, matchRI: 0x210b, match64: 0x00000000, modelSI: -0x0001, models64: 0x28590000285b},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bdb40001bdbe, matchRI: 0x210e, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x28400000286, brand64: 0x1bdbe0001bdc6, matchRI: 0x210f, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
		},
	}
	__dr_dm = []modelTuple{
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xb00000018},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f00000027, model64: 0x2700000030},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3000000038, model64: 0x3800000045},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x450000004d, model64: 0x4d00000064},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x640000006c, model64: 0x6c0000007b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0001, match64: 0x00000000, model64: 0x7b0000008b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad000000b1, model64: 0xb1000000b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbb000000c7, model64: 0xc7000000ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0003, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4000000e4, model64: 0xe4000000e7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf4000000fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b00000118, model64: 0x10b00000118},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11800000122, model64: 0x11800000122},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1220000012a, model64: 0x1220000012a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12a00000135, model64: 0x1350000013f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1070000010b, model64: 0x13f00000147},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x15100000155},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1770000017d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1810000018a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18e0000019c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0008, match64: 0x00000000, model64: 0x1a8000001b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0009, match64: 0x00000000, model64: 0x1b4000001bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x000b, match64: 0x00000000, model64: 0x1c2000001c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x000c, match64: 0x00000000, model64: 0x1c4000001cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x000d, match64: 0x00000000, model64: 0x1cb000001d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x000e, match64: 0x00000000, model64: 0x1d1000001d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x000f, match64: 0x00000000, model64: 0x1d8000001da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0010, match64: 0x00000000, model64: 0x1da000001e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0011, match64: 0x00000000, model64: 0x1e0000001e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0012, match64: 0x00000000, model64: 0x1e7000001e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0013, match64: 0x00000000, model64: 0x1e9000001eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0014, match64: 0x00000000, model64: 0x1eb000001ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0015, match64: 0x00000000, model64: 0x1ee000001f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0016, match64: 0x00000000, model64: 0x1f1000001f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0018, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0019, match64: 0x00000000, model64: 0x1f9000001fd},
		modelTuple{type64: 0x20000000206, matchRI: 0x001b, match64: 0x00000000, model64: 0x2060000020e},
		modelTuple{type64: 0x2700000027, matchRI: 0x001d, match64: 0x00000000, model64: 0x2100000021a},
		modelTuple{type64: 0x2700000027, matchRI: 0x001e, match64: 0x00000000, model64: 0x21a00000224},
		modelTuple{type64: 0x2700000027, matchRI: 0x001f, match64: 0x00000000, model64: 0x2240000022d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d00000234, model64: 0x23400000240},
		modelTuple{type64: 0x2700000027, matchRI: 0x0020, match64: 0x00000000, model64: 0x24000000249},
		modelTuple{type64: 0x2700000027, matchRI: 0x0021, match64: 0x00000000, model64: 0x24900000252},
		modelTuple{type64: 0x2700000027, matchRI: 0x0022, match64: 0x00000000, model64: 0x2520000025d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0023, match64: 0x00000000, model64: 0x25d00000267},
		modelTuple{type64: 0x20000000206, matchRI: 0x0025, match64: 0x00000000, model64: 0x26c00000271},
		modelTuple{type64: 0x20000000206, matchRI: 0x0026, match64: 0x00000000, model64: 0x2710000027a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0027, match64: 0x00000000, model64: 0x27a00000280},
		modelTuple{type64: 0x2700000027, matchRI: 0x0028, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0029, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28e00000294, model64: 0x28e00000294},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x29400000299, model64: 0x2990000029e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x002e, match64: 0x00000000, model64: 0x2a4000002b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2b1000002b9, model64: 0x2b1000002b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2b9000002c1, model64: 0x2b9000002c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2c1000002c9, model64: 0x2c9000002ce},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0031, match64: 0x00000000, model64: 0x2da000002e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0032, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0033, match64: 0x00000000, model64: 0x2e9000002eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0034, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0036, match64: 0x00000000, model64: 0x2f1000002f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2f900000301, model64: 0x3010000030a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x30a00000311, model64: 0x30a00000311},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x31600000324},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3270000032e, model64: 0x32e0000033a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x33a00000347, model64: 0x3470000035a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x37100000376, model64: 0x3760000037e},
		modelTuple{type64: 0x2700000027, matchRI: 0x003c, match64: 0x00000000, model64: 0x37e00000382},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x38200000387, model64: 0x3870000038d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x38d00000392, model64: 0x39200000397},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3970000039c, model64: 0x39c000003a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a1000003a6, model64: 0x3a6000003ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ab000003b0, model64: 0x3b0000003b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b3000003b8, model64: 0x3b8000003ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ba000003bf, model64: 0x3bf000003c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c1000003c6, model64: 0x3c6000003c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c9000003ce, model64: 0x3ce000003d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d2000003d7, model64: 0x3d7000003da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3da000003df, model64: 0x2a2000002a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3df000003e4, model64: 0x3e4000003e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x003d, match64: 0x00000000, model64: 0x3e6000003ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ed000003f7, model64: 0x3f7000003fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3fb00000402, model64: 0x40200000405},
		modelTuple{type64: 0x20000000206, matchRI: 0x0040, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0041, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0042, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x42100000429},
		modelTuple{type64: 0x2700000027, matchRI: 0x0044, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0046, match64: 0x00000000, model64: 0x4320000043e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0047, match64: 0x00000000, model64: 0x43e00000449},
		modelTuple{type64: 0x2700000027, matchRI: 0x0048, match64: 0x00000000, model64: 0x44900000457},
		modelTuple{type64: 0x2700000027, matchRI: 0x0049, match64: 0x00000000, model64: 0x4570000045b},
		modelTuple{type64: 0x2700000027, matchRI: 0x004a, match64: 0x00000000, model64: 0x45b00000462},
		modelTuple{type64: 0x2700000027, matchRI: 0x004b, match64: 0x00000000, model64: 0x4620000046b},
		modelTuple{type64: 0x2700000027, matchRI: 0x004c, match64: 0x00000000, model64: 0x46b00000477},
		modelTuple{type64: 0x2700000027, matchRI: 0x004d, match64: 0x00000000, model64: 0x4770000047e},
		modelTuple{type64: 0x2700000027, matchRI: 0x004e, match64: 0x00000000, model64: 0x47e00000489},
		modelTuple{type64: 0x2700000027, matchRI: 0x004f, match64: 0x00000000, model64: 0x48900000493},
		modelTuple{type64: 0x2700000027, matchRI: 0x0050, match64: 0x00000000, model64: 0x4930000049b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0053, match64: 0x00000000, model64: 0x4a3000004ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0054, match64: 0x00000000, model64: 0x4ae000004b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0055, match64: 0x00000000, model64: 0x4b6000004c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0056, match64: 0x00000000, model64: 0x4c2000004c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0058, match64: 0x00000000, model64: 0x4cf000004d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0059, match64: 0x00000000, model64: 0x4d3000004e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x005a, match64: 0x00000000, model64: 0x4e3000004eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x005b, match64: 0x00000000, model64: 0x4eb000004f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x005c, match64: 0x00000000, model64: 0x4f800000503},
		modelTuple{type64: 0x2700000027, matchRI: 0x005d, match64: 0x00000000, model64: 0x50300000510},
		modelTuple{type64: 0x2700000027, matchRI: 0x005e, match64: 0x00000000, model64: 0x51000000519},
		modelTuple{type64: 0x2700000027, matchRI: 0x005f, match64: 0x00000000, model64: 0x51900000521},
		modelTuple{type64: 0x52100000528, matchRI: 0x0060, match64: 0x00000000, model64: 0x52800000530},
		modelTuple{type64: 0x20000000206, matchRI: 0x0061, match64: 0x00000000, model64: 0x53000000539},
		modelTuple{type64: 0x2700000027, matchRI: 0x0063, match64: 0x00000000, model64: 0x53c00000548},
		modelTuple{type64: 0x2700000027, matchRI: 0x0064, match64: 0x00000000, model64: 0x54800000554},
		modelTuple{type64: 0x2700000027, matchRI: 0x0065, match64: 0x00000000, model64: 0x5540000055b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55b00000563, model64: 0x5630000056b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56b00000576, model64: 0x57600000581},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58100000588, model64: 0x5880000058f},
		modelTuple{type64: 0x41400000421, matchRI: 0x0067, match64: 0x00000000, model64: 0x5930000059b},
		modelTuple{type64: 0x41400000421, matchRI: 0x0068, match64: 0x00000000, model64: 0x59b000005a2},
		modelTuple{type64: 0x41400000421, matchRI: 0x0069, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x006a, match64: 0x00000000, model64: 0x5a2000005aa},
		modelTuple{type64: 0x20000000206, matchRI: 0x006b, match64: 0x00000000, model64: 0x5aa000005b1},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x5b1000005bb, model64: 0x5bb000005c4},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x5c4000005ca, model64: 0x5c4000005ca},
		modelTuple{type64: 0x20000000206, matchRI: 0x006c, match64: 0x00000000, model64: 0x5ca000005d6},
		modelTuple{type64: 0x20000000206, matchRI: 0x006d, match64: 0x00000000, model64: 0x5d6000005e2},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x5e2000005e8, model64: 0x5e8000005f1},
		modelTuple{type64: 0x20000000206, matchRI: 0x006e, match64: 0x00000000, model64: 0x5f1000005fe},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x5fe00000607, model64: 0x60700000614},
		modelTuple{type64: 0x20000000206, matchRI: 0x006f, match64: 0x00000000, model64: 0x6140000061d},
		modelTuple{type64: 0x20000000206, matchRI: 0x0070, match64: 0x00000000, model64: 0x61d0000062a},
		modelTuple{type64: 0x20000000206, matchRI: 0x0071, match64: 0x00000000, model64: 0x62a00000636},
		modelTuple{type64: 0x20000000206, matchRI: 0x0072, match64: 0x00000000, model64: 0x6360000063f},
		modelTuple{type64: 0x20000000206, matchRI: 0x0073, match64: 0x00000000, model64: 0x63f0000064c},
		modelTuple{type64: 0x20000000206, matchRI: 0x0074, match64: 0x00000000, model64: 0x64c00000658},
		modelTuple{type64: 0x20000000206, matchRI: 0x0075, match64: 0x00000000, model64: 0x65800000665},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x66500000669, model64: 0x66900000670},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x67000000674, model64: 0x6740000067d},
		modelTuple{type64: 0x20000000206, matchRI: 0x0076, match64: 0x00000000, model64: 0x67d00000684},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x6840000068e, model64: 0x68e00000693},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x69300000699, model64: 0x699000006a3},
		modelTuple{type64: 0x20000000206, matchRI: 0x0077, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x6a3000006b0, model64: 0x6b0000006b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0078, match64: 0x00000000, model64: 0x6b8000006c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0079, match64: 0x00000000, model64: 0x6c3000006ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x007a, match64: 0x00000000, model64: 0x6ce000006dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x007b, match64: 0x00000000, model64: 0x6dc000006e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x007c, match64: 0x00000000, model64: 0x6e9000006f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x007d, match64: 0x00000000, model64: 0x6f6000006ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x007e, match64: 0x00000000, model64: 0x6ff00000708},
		modelTuple{type64: 0x2700000027, matchRI: 0x007f, match64: 0x00000000, model64: 0x70800000715},
		modelTuple{type64: 0x2700000027, matchRI: 0x0080, match64: 0x00000000, model64: 0x71500000722},
		modelTuple{type64: 0x2700000027, matchRI: 0x0081, match64: 0x00000000, model64: 0x7220000072f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0082, match64: 0x00000000, model64: 0x72f0000073b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0083, match64: 0x00000000, model64: 0x73b00000745},
		modelTuple{type64: 0x2700000027, matchRI: 0x0084, match64: 0x00000000, model64: 0x74500000750},
		modelTuple{type64: 0x2700000027, matchRI: 0x0085, match64: 0x00000000, model64: 0x7500000075d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0086, match64: 0x00000000, model64: 0x75d0000076a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0087, match64: 0x00000000, model64: 0x73b00000745},
		modelTuple{type64: 0x2700000027, matchRI: 0x0088, match64: 0x00000000, model64: 0x76a00000777},
		modelTuple{type64: 0x2700000027, matchRI: 0x0089, match64: 0x00000000, model64: 0x77700000782},
		modelTuple{type64: 0x2700000027, matchRI: 0x008a, match64: 0x00000000, model64: 0x7820000078d},
		modelTuple{type64: 0x2700000027, matchRI: 0x008b, match64: 0x00000000, model64: 0x78d00000799},
		modelTuple{type64: 0x2700000027, matchRI: 0x008c, match64: 0x00000000, model64: 0x799000007a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x008d, match64: 0x00000000, model64: 0x7a4000007b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x008e, match64: 0x00000000, model64: 0x7b2000007c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x008f, match64: 0x00000000, model64: 0x7c2000007cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0090, match64: 0x00000000, model64: 0x7cd000007d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7d8000007e1, model64: 0x7e1000007e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0091, match64: 0x00000000, model64: 0x7e6000007f1},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0092, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0093, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0094, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0095, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0096, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0097, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0098, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0099, match64: 0x00000000, model64: 0x7f800000806},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x81100000816},
		modelTuple{type64: 0x2700000027, matchRI: 0x009b, match64: 0x00000000, model64: 0x81d0000082a},
		modelTuple{type64: 0x2700000027, matchRI: 0x009c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82f00000837, model64: 0x83700000839},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x83900000842, model64: 0x84200000845},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x84500000848, model64: 0x84800000852},
		modelTuple{type64: 0x2700000027, matchRI: 0x009e, match64: 0x00000000, model64: 0x85200000859},
		modelTuple{type64: 0x2700000027, matchRI: 0x009f, match64: 0x00000000, model64: 0x8590000085c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x85c0000085f, model64: 0x85f00000862},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a0, match64: 0x00000000, model64: 0x86200000868},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a1, match64: 0x00000000, model64: 0x8680000086e},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x86e00000874, model64: 0x8740000087a},
		modelTuple{type64: 0x20000000206, matchRI: 0x00a4, match64: 0x00000000, model64: 0x88100000886},
		modelTuple{type64: 0x20000000206, matchRI: 0x00a5, match64: 0x00000000, model64: 0x88600000893},
		modelTuple{type64: 0x20000000206, matchRI: 0x00a6, match64: 0x00000000, model64: 0x8930000089d},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a7, match64: 0x00000000, model64: 0x89d000008ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a8, match64: 0x00000000, model64: 0x8ab000008b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x00aa, match64: 0x00000000, model64: 0x8be000008c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ab, match64: 0x00000000, model64: 0x8c6000008cc},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x00ac, match64: 0x00000000, model64: 0x8cc000008d6},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x00ad, match64: 0x00000000, model64: 0x8d6000008e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8e7000008f2, model64: 0x8f200000904},
		modelTuple{type64: 0x2700000027, matchRI: 0x00af, match64: 0x00000000, model64: 0x90400000911},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9110000091d, model64: 0x91d0000092a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92a00000931, model64: 0x9310000093e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x93e00000949, model64: 0x94900000957},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95700000962, model64: 0x9620000096f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x96f0000097a, model64: 0x97a00000989},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b0, match64: 0x00000000, model64: 0x98900000994},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b1, match64: 0x00000000, model64: 0x994000009a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a0000009a9, model64: 0x9a9000009b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b9000009c2, model64: 0x9c2000009cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b3, match64: 0x00000000, model64: 0x9cd000009d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b4, match64: 0x00000000, model64: 0x9d9000009df},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b5, match64: 0x00000000, model64: 0x9df000009e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b6, match64: 0x00000000, model64: 0x9e6000009f0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xa0a00000a14, model64: 0xa1400000a1d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x00bb, match64: 0x00000000, model64: 0xa2600000a2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x00bc, match64: 0x00000000, model64: 0xa2b00000a30},
		modelTuple{type64: 0x2700000027, matchRI: 0x00bd, match64: 0x00000000, model64: 0xa3000000a35},
		modelTuple{type64: 0x52100000528, matchRI: 0x00be, match64: 0x00000000, model64: 0xa3500000a39},
		modelTuple{type64: 0x20000000206, matchRI: 0x00c0, match64: 0x00000000, model64: 0xa3d00000a43},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xa4300000a4d, model64: 0xa4300000a4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4d00000a55, model64: 0xa5500000a5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c1, match64: 0x00000000, model64: 0xa5a00000a62},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c2, match64: 0x00000000, model64: 0xa6200000a68},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x00c4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0xa6800000a72, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7600000a7d, model64: 0xa7d00000a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xa8000000a89, model64: 0xa8900000a92},
		modelTuple{type64: 0x20000000206, matchRI: 0x00c7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9900000a9e, model64: 0xa9e00000aa7},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c9, match64: 0x00000000, model64: 0xaa700000ab9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xab900000abe, model64: 0xabe00000ace},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ca, match64: 0x00000000, model64: 0xace00000ade},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cb, match64: 0x00000000, model64: 0xade00000af7},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cc, match64: 0x00000000, model64: 0xaf700000b07},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cd, match64: 0x00000000, model64: 0xb0700000b20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2000000b25, model64: 0xb2500000b3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ce, match64: 0x00000000, model64: 0xb3e00000b4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cf, match64: 0x00000000, model64: 0xb4e00000b67},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d0, match64: 0x00000000, model64: 0xb6700000b77},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d1, match64: 0x00000000, model64: 0xb7700000b87},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d2, match64: 0x00000000, model64: 0xb8700000b97},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d3, match64: 0x00000000, model64: 0xb9700000ba9},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d4, match64: 0x00000000, model64: 0xba900000bc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d5, match64: 0x00000000, model64: 0xbc400000bd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d6, match64: 0x00000000, model64: 0xbd800000bf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d7, match64: 0x00000000, model64: 0xbf500000c07},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d8, match64: 0x00000000, model64: 0xc0700000c22},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d9, match64: 0x00000000, model64: 0xc2200000c31},
		modelTuple{type64: 0x2700000027, matchRI: 0x00da, match64: 0x00000000, model64: 0xc3100000c43},
		modelTuple{type64: 0x2700000027, matchRI: 0x00db, match64: 0x00000000, model64: 0xc4300000c57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc5700000c5c, model64: 0xc5c00000c74},
		modelTuple{type64: 0x2700000027, matchRI: 0x00dc, match64: 0x00000000, model64: 0xc7400000c83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc8300000c88, model64: 0xc8800000ca0},
		modelTuple{type64: 0x2700000027, matchRI: 0x00dd, match64: 0x00000000, model64: 0xca000000cb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x00de, match64: 0x00000000, model64: 0xcb000000cc0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcc000000cc5, model64: 0xcc500000cd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd700000cdc, model64: 0xcdc00000cf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x00df, match64: 0x00000000, model64: 0xcf000000d00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0000000d05, model64: 0xd0500000d15},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e0, match64: 0x00000000, model64: 0xd1500000d25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2500000d2a, model64: 0xd2a00000d39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3900000d3e, model64: 0xd3e00000d4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e1, match64: 0x00000000, model64: 0xd4c00000d51},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e2, match64: 0x00000000, model64: 0xd5100000d5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e3, match64: 0x00000000, model64: 0xd5a00000d5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e4, match64: 0x00000000, model64: 0xd5e00000d63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6300000d68, model64: 0xd6800000d6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6a00000d6f, model64: 0xd6f00000d78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7800000d7d, model64: 0xd7d00000d84},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e5, match64: 0x00000000, model64: 0xd8400000d86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd8600000d8c, model64: 0xd8c00000d97},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e6, match64: 0x00000000, model64: 0xd9700000da9},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e7, match64: 0x00000000, model64: 0xda900000dbb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdbb00000dc0, model64: 0xdc000000dd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd300000dd8, model64: 0xdd800000de7},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e8, match64: 0x00000000, model64: 0xde700000dfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e9, match64: 0x00000000, model64: 0xdfc00000e1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ea, match64: 0x00000000, model64: 0xe1a00000e31},
		modelTuple{type64: 0x2700000027, matchRI: 0x00eb, match64: 0x00000000, model64: 0xe3100000e42},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ec, match64: 0x00000000, model64: 0xe4200000e52},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ed, match64: 0x00000000, model64: 0xe5200000e67},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ee, match64: 0x00000000, model64: 0xe6700000e77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe7700000e7c, model64: 0xe7c00000e8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ef, match64: 0x00000000, model64: 0xe8d00000e9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f0, match64: 0x00000000, model64: 0xe9d00000eae},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f1, match64: 0x00000000, model64: 0xe8d00000e9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f2, match64: 0x00000000, model64: 0xeae00000ebf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xebf00000ec4, model64: 0xec400000ed4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed400000ed9, model64: 0xed900000eea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeea00000eef, model64: 0xeef00000efb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xefb00000f00, model64: 0xf0000000f03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0300000f09, model64: 0xf0900000f0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0e00000f14, model64: 0xf1400000f17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1700000f1d, model64: 0xf1d00000f27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2700000f2c, model64: 0xf2c00000f43},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4300000f49, model64: 0xf4900000f61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6100000f67, model64: 0xf6700000f82},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f3, match64: 0x00000000, model64: 0xf8200000f96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9600000f9c, model64: 0xf9c00000fb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb000000fb6, model64: 0xfb600000fca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfca00000fcf, model64: 0xfcf00000fdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f4, match64: 0x00000000, model64: 0xfdf00000ff4},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f5, match64: 0x00000000, model64: 0xff400001012},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f6, match64: 0x00000000, model64: 0x101200001025},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f7, match64: 0x00000000, model64: 0x10250000103a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f8, match64: 0x00000000, model64: 0x103a00001052},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x105200001057, model64: 0x10570000106a},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x106a0000106f, model64: 0x10570000106a},
		modelTuple{type64: 0x20000000206, matchRI: 0x00f9, match64: 0x00000000, model64: 0x106f00001085},
		modelTuple{type64: 0x20000000206, matchRI: 0x00fa, match64: 0x00000000, model64: 0x108500001087},
		modelTuple{type64: 0x20000000206, matchRI: 0x00fb, match64: 0x00000000, model64: 0x10870000108c},
		modelTuple{type64: 0x20000000206, matchRI: 0x00fc, match64: 0x00000000, model64: 0x108c00001095},
		modelTuple{type64: 0x20000000206, matchRI: 0x00fd, match64: 0x00000000, model64: 0x1095000010a6},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x10a6000010ab, model64: 0x10ab000010af},
		modelTuple{type64: 0x20000000206, matchRI: 0x00fe, match64: 0x00000000, model64: 0x10af000010b6},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x10b6000010bb, model64: 0x10bb000010ce},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x10ce000010d3, model64: 0x10d3000010e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ff, match64: 0x00000000, model64: 0x10e7000010fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0100, match64: 0x00000000, model64: 0x10fc0000110f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0101, match64: 0x00000000, model64: 0x110f00001124},
		modelTuple{type64: 0x2700000027, matchRI: 0x0102, match64: 0x00000000, model64: 0x11240000113f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0103, match64: 0x00000000, model64: 0x113f00001155},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11550000115a, model64: 0x115a0000116f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0104, match64: 0x00000000, model64: 0x116f00001187},
		modelTuple{type64: 0x2700000027, matchRI: 0x0105, match64: 0x00000000, model64: 0x11870000119d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x119d000011a2, model64: 0x11a2000011b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b8000011be, model64: 0x2a2000002a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11be000011c4, model64: 0x11c4000011c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0106, match64: 0x00000000, model64: 0x11c7000011cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0107, match64: 0x00000000, model64: 0x11cb000011cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0108, match64: 0x00000000, model64: 0x11cd000011d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0109, match64: 0x00000000, model64: 0x11d4000011d9},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x11d9000011de, model64: 0x11de000011e6},
		modelTuple{type64: 0x20000000206, matchRI: 0x010a, match64: 0x00000000, model64: 0x11e6000011ed},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x11ed000011f2, model64: 0x11f2000011f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x010b, match64: 0x00000000, model64: 0x11f8000011fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x010c, match64: 0x00000000, model64: 0x11fa00001200},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x120000001205, model64: 0x12050000120f},
		modelTuple{type64: 0x2700000027, matchRI: 0x010d, match64: 0x00000000, model64: 0x120f00001211},
		modelTuple{type64: 0x2700000027, matchRI: 0x010e, match64: 0x00000000, model64: 0x121100001214},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121400001219, model64: 0x121900001221},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122100001226, model64: 0x122600001230},
		modelTuple{type64: 0x2700000027, matchRI: 0x010f, match64: 0x00000000, model64: 0x123000001233},
		modelTuple{type64: 0x2700000027, matchRI: 0x0110, match64: 0x00000000, model64: 0x12330000123c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x123c00001241, model64: 0x124100001246},
		modelTuple{type64: 0x2700000027, matchRI: 0x0111, match64: 0x00000000, model64: 0x12460000125c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0112, match64: 0x00000000, model64: 0x125c0000127b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0113, match64: 0x00000000, model64: 0x127b00001291},
		modelTuple{type64: 0x20000000206, matchRI: 0x0114, match64: 0x00000000, model64: 0x1291000012a7},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x12a7000012ab, model64: 0x12ab000012c3},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x12c3000012c8, model64: 0x12c8000012d8},
		modelTuple{type64: 0x20000000206, matchRI: 0x0115, match64: 0x00000000, model64: 0x12d8000012e8},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x12e8000012ec, model64: 0x12d8000012e8},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x12ec000012f1, model64: 0x12f100001301},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x130100001306, model64: 0x130600001315},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x13150000131a, model64: 0x131a00001329},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x13290000132e, model64: 0x132e0000133e},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x133e00001343, model64: 0x134300001354},
		modelTuple{type64: 0x2700000027, matchRI: 0x0116, match64: 0x00000000, model64: 0x135400001365},
		modelTuple{type64: 0x2700000027, matchRI: 0x0117, match64: 0x00000000, model64: 0x136500001369},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13690000137f, model64: 0x137f00001385},
		modelTuple{type64: 0x2700000027, matchRI: 0x0118, match64: 0x00000000, model64: 0x138500001394},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1394000013a9, model64: 0x13a9000013b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b6000013cb, model64: 0x13cb000013d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13d8000013ee, model64: 0x13ee000013fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13fc00001411, model64: 0x14110000141e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141e00001424, model64: 0x142400001432},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x143200001437, model64: 0x143700001447},
		modelTuple{type64: 0x20000000206, matchRI: 0x0119, match64: 0x00000000, model64: 0x144700001453},
		modelTuple{type64: 0x2700000027, matchRI: 0x011a, match64: 0x00000000, model64: 0x14530000145e},
		modelTuple{type64: 0x2700000027, matchRI: 0x011b, match64: 0x00000000, model64: 0x14530000145e},
		modelTuple{type64: 0x2700000027, matchRI: 0x011c, match64: 0x00000000, model64: 0x145e00001468},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14680000146d, model64: 0x146d00001473},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x147300001478, model64: 0x147800001480},
		modelTuple{type64: 0x2700000027, matchRI: 0x011d, match64: 0x00000000, model64: 0x148000001482},
		modelTuple{type64: 0x2700000027, matchRI: 0x011e, match64: 0x00000000, model64: 0x148200001484},
		modelTuple{type64: 0x2700000027, matchRI: 0x011f, match64: 0x00000000, model64: 0x148400001489},
		modelTuple{type64: 0x2700000027, matchRI: 0x0120, match64: 0x00000000, model64: 0x14890000148e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x148e00001493, model64: 0x14930000149a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x149a0000149f, model64: 0x149f000014a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0121, match64: 0x00000000, model64: 0x14a6000014b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b0000014b5, model64: 0x14b5000014c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0122, match64: 0x00000000, model64: 0x14c4000014cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0123, match64: 0x00000000, model64: 0x14cb000014ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ce000014d4, model64: 0x14d4000014dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0124, match64: 0x00000000, model64: 0x14dc000014dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0125, match64: 0x00000000, model64: 0x14dd000014df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0126, match64: 0x00000000, model64: 0x14df000014e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0127, match64: 0x00000000, model64: 0x14e8000014f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0128, match64: 0x00000000, model64: 0x14f1000014fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0129, match64: 0x00000000, model64: 0x14fa00001503},
		modelTuple{type64: 0x2700000027, matchRI: 0x012a, match64: 0x00000000, model64: 0x150300001505},
		modelTuple{type64: 0x2700000027, matchRI: 0x012b, match64: 0x00000000, model64: 0x15050000150e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150e00001513, model64: 0x15130000151d},
		modelTuple{type64: 0x2700000027, matchRI: 0x012c, match64: 0x00000000, model64: 0x151d00001527},
		modelTuple{type64: 0x2700000027, matchRI: 0x012d, match64: 0x00000000, model64: 0x152700001529},
		modelTuple{type64: 0x2700000027, matchRI: 0x012e, match64: 0x00000000, model64: 0x15290000152b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x152b00001530, model64: 0x153000001538},
		modelTuple{type64: 0x52100000528, matchRI: 0x012f, match64: 0x00000000, model64: 0x15380000153a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0130, match64: 0x00000000, model64: 0x153a0000153b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x153b00001540, model64: 0x154000001548},
		modelTuple{type64: 0x2700000027, matchRI: 0x0131, match64: 0x00000000, model64: 0x154800001551},
		modelTuple{type64: 0x2700000027, matchRI: 0x0132, match64: 0x00000000, model64: 0x155100001553},
		modelTuple{type64: 0x2700000027, matchRI: 0x0133, match64: 0x00000000, model64: 0x155300001555},
		modelTuple{type64: 0x52100000528, matchRI: 0x0134, match64: 0x00000000, model64: 0xd8400000d86},
		modelTuple{type64: 0x2700000027, matchRI: 0x0135, match64: 0x00000000, model64: 0x155500001557},
		modelTuple{type64: 0x2700000027, matchRI: 0x0136, match64: 0x00000000, model64: 0x155700001560},
		modelTuple{type64: 0x2700000027, matchRI: 0x0137, match64: 0x00000000, model64: 0x156000001561},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156100001566, model64: 0x156600001567},
		modelTuple{type64: 0x20000000206, matchRI: 0x0138, match64: 0x00000000, model64: 0x15670000156d},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x156d00001572, model64: 0x15720000157a},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x157a0000157f, model64: 0x157f00001586},
		modelTuple{type64: 0x20000000206, matchRI: 0x0139, match64: 0x00000000, model64: 0x15860000158f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158f00001599, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x013a, match64: 0x00000000, model64: 0x1599000015a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15a6000015ab, model64: 0x15ab000015b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x013b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x013c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x013d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x013e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0141, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0142, match64: 0x00000000, model64: 0x15bd000015c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0143, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0145, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0147, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15d3000015df, model64: 0x15df000015e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e3000015ed, model64: 0x15ed000015ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15ef000015fc, model64: 0x15fc00001601},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x160100001610, model64: 0x161000001617},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x161700001622, model64: 0x162200001625},
		modelTuple{type64: 0x2700000027, matchRI: 0x0148, match64: 0x00000000, model64: 0x16250000162c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0149, match64: 0x00000000, model64: 0x162c00001631},
		modelTuple{type64: 0x2700000027, matchRI: 0x014a, match64: 0x00000000, model64: 0x163100001637},
		modelTuple{type64: 0x2700000027, matchRI: 0x014c, match64: 0x00000000, model64: 0x164000001644},
		modelTuple{type64: 0x2700000027, matchRI: 0x014d, match64: 0x00000000, model64: 0x164400001648},
		modelTuple{type64: 0x2700000027, matchRI: 0x014e, match64: 0x00000000, model64: 0x16480000164b},
		modelTuple{type64: 0x2700000027, matchRI: 0x014f, match64: 0x00000000, model64: 0x164b0000164d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0150, match64: 0x00000000, model64: 0x164d00001650},
		modelTuple{type64: 0x2700000027, matchRI: 0x0151, match64: 0x00000000, model64: 0x165000001658},
		modelTuple{type64: 0x2700000027, matchRI: 0x0152, match64: 0x00000000, model64: 0x165800001660},
		modelTuple{type64: 0x2700000027, matchRI: 0x0153, match64: 0x00000000, model64: 0x166000001672},
		modelTuple{type64: 0x2700000027, matchRI: 0x0154, match64: 0x00000000, model64: 0x16720000167a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0155, match64: 0x00000000, model64: 0x167a00001680},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16870000168c, model64: 0x168c00001692},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x16920000169c, model64: 0x169c000016a6},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x16a6000016ae, model64: 0x16ae000016b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b8000016be, model64: 0x16be000016c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0157, match64: 0x00000000, model64: 0x16c4000016ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ce000016d5, model64: 0x16d5000016dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16dc000016e3, model64: 0x16e3000016ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ea000016f1, model64: 0x16f1000016f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f800001702, model64: 0x17020000170c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170c00001714, model64: 0x17140000171c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0158, match64: 0x00000000, model64: 0x171c00001726},
		modelTuple{type64: 0x2700000027, matchRI: 0x0159, match64: 0x00000000, model64: 0x17260000172e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172e00001735, model64: 0x17350000173c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x173c00001743, model64: 0x17430000174a},
		modelTuple{type64: 0x2700000027, matchRI: 0x015a, match64: 0x00000000, model64: 0x174a00001751},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175100001758, model64: 0x17580000175f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175f00001772, model64: 0x177200001787},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x178700001792, model64: 0x17920000179d},
		modelTuple{type64: 0x2700000027, matchRI: 0x015b, match64: 0x00000000, model64: 0x179d000017ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ac000017b9, model64: 0x17b9000017c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x015c, match64: 0x00000000, model64: 0x17c6000017d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x015d, match64: 0x00000000, model64: 0x17d5000017df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17df000017e6, model64: 0x17e6000017ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ed000017f6, model64: 0x17f6000017ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x015e, match64: 0x00000000, model64: 0x17ff00001807},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18070000180f, model64: 0x180f00001817},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18170000181e, model64: 0x181e00001825},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18250000182e, model64: 0x182e00001837},
		modelTuple{type64: 0x2700000027, matchRI: 0x015f, match64: 0x00000000, model64: 0x183700001845},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18450000184f, model64: 0x184f00001859},
		modelTuple{type64: 0x2700000027, matchRI: 0x0160, match64: 0x00000000, model64: 0x185900001862},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186200001871, model64: 0x187100001880},
		modelTuple{type64: 0x2700000027, matchRI: 0x0161, match64: 0x00000000, model64: 0x18800000188b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x188b00001899, model64: 0x1899000018a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0162, match64: 0x00000000, model64: 0x18a7000018b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0163, match64: 0x00000000, model64: 0x18b6000018c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0164, match64: 0x00000000, model64: 0x18c9000018d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0165, match64: 0x00000000, model64: 0x18d6000018e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0166, match64: 0x00000000, model64: 0x18e4000018f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18f1000018fd, model64: 0x18fd00001909},
		modelTuple{type64: 0x2700000027, matchRI: 0x0167, match64: 0x00000000, model64: 0x190900001915},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191500001927, model64: 0x192700001939},
		modelTuple{type64: 0x2700000027, matchRI: 0x0168, match64: 0x00000000, model64: 0x193900001947},
		modelTuple{type64: 0x2700000027, matchRI: 0x0169, match64: 0x00000000, model64: 0x19470000194f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x194f00001956, model64: 0x19560000195d},
		modelTuple{type64: 0x2700000027, matchRI: 0x016a, match64: 0x00000000, model64: 0x195d00001964},
		modelTuple{type64: 0x2700000027, matchRI: 0x016b, match64: 0x00000000, model64: 0x19640000196c},
		modelTuple{type64: 0x2700000027, matchRI: 0x016c, match64: 0x00000000, model64: 0x196c00001974},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19740000197c, model64: 0x197c00001985},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x198500001994, model64: 0x1994000019a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19a0000019a7, model64: 0x19a7000019ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ae000019b4, model64: 0x19b4000019ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ba000019c7, model64: 0x19c7000019d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d6000019e2, model64: 0x19e2000019ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ea000019f2, model64: 0x19f2000019fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19fa00001a01, model64: 0x1a0100001a08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0800001a10, model64: 0x1a0800001a10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1000001a1b, model64: 0x1a1b00001a24},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2400001a2e, model64: 0x1a2e00001a34},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a3400001a43, model64: 0x1a4300001a4c},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a4c00001a57, model64: 0x1a5700001a5b},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a5b00001a6b, model64: 0x169c000016a6},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a6b00001a7b, model64: 0x1a7b00001a8d},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a8d00001a9e, model64: 0x1a9e00001ab1},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1ab100001abe, model64: 0x1abe00001ad0},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1ad000001adf, model64: 0x1adf00001aee},
		modelTuple{type64: 0x20000000206, matchRI: 0x016d, match64: 0x00000000, model64: 0x1aee00001af5},
		modelTuple{type64: 0x20000000206, matchRI: 0x016e, match64: 0x00000000, model64: 0x1af500001afc},
		modelTuple{type64: 0x20000000206, matchRI: 0x016f, match64: 0x00000000, model64: 0x1afc00001b01},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1b0100001b0d, model64: 0x1afc00001b01},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1b0d00001b14, model64: 0x1b1400001b1c},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1b1c00001b2e, model64: 0x1b2e00001b38},
		modelTuple{type64: 0x2700000027, matchRI: 0x0170, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0171, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b4100001b51, model64: 0x1b5100001b61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b6100001b71, model64: 0x1b7100001b81},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8100001b87, model64: 0x1b8100001b87},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x1b8700001b93, model64: 0x1b9300001ba0},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x1ba000001bb3, model64: 0x1bb300001bc6},
		modelTuple{type64: 0x940000009f, matchRI: 0x0173, match64: 0x00000000, model64: 0x1bc600001bd6},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x1bd600001be5, model64: 0x1be500001bf4},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x1bf400001c00, model64: 0x1bf400001c00},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x1c0000001c0f, model64: 0x1c0000001c0f},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x1c0f00001c1b, model64: 0x1c1b00001c28},
		modelTuple{type64: 0x940000009f, matchRI: 0x0175, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x940000009f, matchRI: 0x0176, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x1c3800001c3c, model64: 0x1c3c00001c50},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x1c5000001c54, model64: 0x1c5400001c68},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x1c6800001c6c, model64: 0x1c6c00001c7b},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x1c7b00001c7f, model64: 0x1c7f00001c8e},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x1c8e00001c94, model64: 0x1c9400001ca9},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x1ca900001cae, model64: 0x1cae00001cc8},
		modelTuple{type64: 0x28400000286, matchRI: 0x0179, match64: 0x00000000, model64: 0x1cc800001cd5},
		modelTuple{type64: 0x28400000286, matchRI: 0x017a, match64: 0x00000000, model64: 0x1cd500001ce5},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x1ce500001cea, model64: 0x1cea00001cfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x017b, match64: 0x00000000, model64: 0x1cfe00001d05},
		modelTuple{type64: 0x2700000027, matchRI: 0x017c, match64: 0x00000000, model64: 0x1d0500001d13},
		modelTuple{type64: 0x2700000027, matchRI: 0x017d, match64: 0x00000000, model64: 0x1d1300001d21},
		modelTuple{type64: 0x2700000027, matchRI: 0x017e, match64: 0x00000000, model64: 0x1d2100001d39},
		modelTuple{type64: 0x2700000027, matchRI: 0x017f, match64: 0x00000000, model64: 0x1d3900001d4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0180, match64: 0x00000000, model64: 0x1d4f00001d65},
		modelTuple{type64: 0x2700000027, matchRI: 0x0181, match64: 0x00000000, model64: 0x1d6500001d7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0182, match64: 0x00000000, model64: 0x1d7c00001d91},
		modelTuple{type64: 0x2700000027, matchRI: 0x0183, match64: 0x00000000, model64: 0x1d9100001daa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0184, match64: 0x00000000, model64: 0x1daa00001dc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0185, match64: 0x00000000, model64: 0x1dc100001dca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0186, match64: 0x00000000, model64: 0x1dca00001dd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0187, match64: 0x00000000, model64: 0x1dd300001de3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0188, match64: 0x00000000, model64: 0x1de300001df3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0189, match64: 0x00000000, model64: 0x1df300001e03},
		modelTuple{type64: 0x2700000027, matchRI: 0x018a, match64: 0x00000000, model64: 0x1e0300001e13},
		modelTuple{type64: 0x2700000027, matchRI: 0x018b, match64: 0x00000000, model64: 0x1e1300001e23},
		modelTuple{type64: 0x2700000027, matchRI: 0x018c, match64: 0x00000000, model64: 0x1e2300001e33},
		modelTuple{type64: 0x2700000027, matchRI: 0x018d, match64: 0x00000000, model64: 0x1e3300001e3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x018e, match64: 0x00000000, model64: 0x1e3f00001e4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x018f, match64: 0x00000000, model64: 0x1e4e00001e58},
		modelTuple{type64: 0x2700000027, matchRI: 0x0190, match64: 0x00000000, model64: 0x1e5800001e69},
		modelTuple{type64: 0x2700000027, matchRI: 0x0191, match64: 0x00000000, model64: 0x1e6900001e7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0192, match64: 0x00000000, model64: 0x1e7a00001e8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0193, match64: 0x00000000, model64: 0x1e8b00001ea1},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1ea100001ea9, model64: 0x1ea900001eb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0194, match64: 0x00000000, model64: 0x1eb300001ebe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ebe00001ec4, model64: 0x1ebe00001ec4},
		modelTuple{type64: 0x1ec400001ed1, matchRI: 0x0195, match64: 0x00000000, model64: 0x1ed100001ed5},
		modelTuple{type64: 0x1ec400001ed1, matchRI: 0x0196, match64: 0x00000000, model64: 0x1ed500001ee0},
		modelTuple{type64: 0x1ec400001ed1, matchRI: -0x0001, match64: 0x1ee000001ef0, model64: 0x1ef000001ef5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f0000001f07, model64: 0x1f0700001f0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f0f00001f15, model64: 0x1f1500001f1c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2000001f2d, model64: 0x1f2000001f2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2d00001f32, model64: 0x1f2d00001f32},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3200001f40, model64: 0x1f4000001f4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x019a, match64: 0x00000000, model64: 0x1f4e00001f57},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x019b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x019c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x019d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a0, match64: 0x00000000, model64: 0x1f6600001f6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f7200001f81},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a6, match64: 0x00000000, model64: 0x1f8f00001f9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a7, match64: 0x00000000, model64: 0x1f9a00001fa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a8, match64: 0x00000000, model64: 0x1fa500001fac},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a9, match64: 0x00000000, model64: 0x1fac00001fb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x01aa, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x1ec400001ed1, matchRI: -0x0001, match64: 0x1fbc00001fc3, model64: 0x1fbc00001fc3},
		modelTuple{type64: 0x1ec400001ed1, matchRI: -0x0001, match64: 0x1fc300001fca, model64: 0x2700000027},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x1fca00001fd2, model64: 0x1fda00001fe4},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x1fe400001fec, model64: 0x1fec00001ff6},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x1ff600001ffe, model64: 0x1ffe00002011},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x201100002019, model64: 0x20190000202c},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x202c00002034, model64: 0x203400002047},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x20470000204f, model64: 0x204f00002062},
		modelTuple{type64: 0x1fd200001fda, matchRI: 0x01ac, match64: 0x00000000, model64: 0x206200002075},
		modelTuple{type64: 0x1fd200001fda, matchRI: 0x01ad, match64: 0x00000000, model64: 0x207500002088},
		modelTuple{type64: 0x1fd200001fda, matchRI: 0x01ae, match64: 0x00000000, model64: 0x208800002095},
		modelTuple{type64: 0x1fd200001fda, matchRI: 0x01af, match64: 0x00000000, model64: 0x2095000020a2},
		modelTuple{type64: 0x1fd200001fda, matchRI: 0x01b0, match64: 0x00000000, model64: 0x20a2000020b6},
		modelTuple{type64: 0x1fd200001fda, matchRI: 0x01b1, match64: 0x00000000, model64: 0x20b6000020ca},
		modelTuple{type64: 0x1fd200001fda, matchRI: 0x01b2, match64: 0x00000000, model64: 0x20ca000020dd},
		modelTuple{type64: 0x1fd200001fda, matchRI: 0x01b3, match64: 0x00000000, model64: 0x20dd000020f0},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x20f0000020f5, model64: 0x20f0000020f5},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01b4, match64: 0x00000000, model64: 0x20f500002103},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01b5, match64: 0x00000000, model64: 0x210300002111},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01b6, match64: 0x00000000, model64: 0x21110000211f},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01b7, match64: 0x00000000, model64: 0x211f0000212d},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01b8, match64: 0x00000000, model64: 0x212d00002140},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01b9, match64: 0x00000000, model64: 0x21400000214b},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01ba, match64: 0x00000000, model64: 0x214b0000215a},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01bb, match64: 0x00000000, model64: 0x215a00002169},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01bc, match64: 0x00000000, model64: 0x216900002174},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01bd, match64: 0x00000000, model64: 0x21740000217f},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01be, match64: 0x00000000, model64: 0x217f0000218a},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01bf, match64: 0x00000000, model64: 0x217f0000218a},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01c0, match64: 0x00000000, model64: 0x218a00002199},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01c1, match64: 0x00000000, model64: 0x2199000021aa},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01c2, match64: 0x00000000, model64: 0x21aa000021b9},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01c3, match64: 0x00000000, model64: 0x21b9000021ca},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01c4, match64: 0x00000000, model64: 0x21ca000021d9},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01c5, match64: 0x00000000, model64: 0x21d9000021ef},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01c6, match64: 0x00000000, model64: 0x21ef000021fe},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01c7, match64: 0x00000000, model64: 0x21fe0000220f},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01c8, match64: 0x00000000, model64: 0x220f0000221e},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01c9, match64: 0x00000000, model64: 0x221e0000222f},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01ca, match64: 0x00000000, model64: 0x222f0000223e},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01cb, match64: 0x00000000, model64: 0x223e0000224f},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01cc, match64: 0x00000000, model64: 0x224f0000225e},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01cd, match64: 0x00000000, model64: 0x225e0000226d},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01ce, match64: 0x00000000, model64: 0x226d0000227e},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01cf, match64: 0x00000000, model64: 0x227e0000228d},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01d0, match64: 0x00000000, model64: 0x228d0000229c},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01d1, match64: 0x00000000, model64: 0x229c000022af},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01d2, match64: 0x00000000, model64: 0x22af000022c1},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01d3, match64: 0x00000000, model64: 0x22c1000022d8},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01d4, match64: 0x00000000, model64: 0x22d8000022ea},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01d5, match64: 0x00000000, model64: 0x22ea000022fc},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01d6, match64: 0x00000000, model64: 0x22fc0000230e},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01d7, match64: 0x00000000, model64: 0x22fc0000230e},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01d8, match64: 0x00000000, model64: 0x230e00002320},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01d9, match64: 0x00000000, model64: 0x232000002332},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01da, match64: 0x00000000, model64: 0x233200002344},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01db, match64: 0x00000000, model64: 0x23440000235a},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01dc, match64: 0x00000000, model64: 0x235a0000236c},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01dd, match64: 0x00000000, model64: 0x236c00002382},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01de, match64: 0x00000000, model64: 0x238200002398},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01df, match64: 0x00000000, model64: 0x2398000023ae},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01e0, match64: 0x00000000, model64: 0x23ae000023c4},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01e1, match64: 0x00000000, model64: 0x23c4000023da},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01e2, match64: 0x00000000, model64: 0x23da000023f0},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01e3, match64: 0x00000000, model64: 0x23f00000240b},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01e4, match64: 0x00000000, model64: 0x240b00002426},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01e5, match64: 0x00000000, model64: 0x24260000243c},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01e6, match64: 0x00000000, model64: 0x243c00002457},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01e7, match64: 0x00000000, model64: 0x24570000246d},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01e8, match64: 0x00000000, model64: 0x246d00002483},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01e9, match64: 0x00000000, model64: 0x248300002499},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01ea, match64: 0x00000000, model64: 0x248300002499},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01eb, match64: 0x00000000, model64: 0x2499000024af},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01ec, match64: 0x00000000, model64: 0x24af000024c5},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01ed, match64: 0x00000000, model64: 0x24c5000024db},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01ee, match64: 0x00000000, model64: 0x24db000024f1},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01ef, match64: 0x00000000, model64: 0x24f100002503},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01f0, match64: 0x00000000, model64: 0x250300002519},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01f1, match64: 0x00000000, model64: 0x25190000252f},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01f2, match64: 0x00000000, model64: 0x252f00002545},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01f3, match64: 0x00000000, model64: 0x25450000255b},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01f4, match64: 0x00000000, model64: 0x255b00002571},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01f5, match64: 0x00000000, model64: 0x257100002587},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01f6, match64: 0x00000000, model64: 0x25870000259d},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01f7, match64: 0x00000000, model64: 0x259d000025b3},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01f8, match64: 0x00000000, model64: 0x25b3000025c9},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01f9, match64: 0x00000000, model64: 0x25c9000025df},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01fa, match64: 0x00000000, model64: 0x25df000025f5},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01fb, match64: 0x00000000, model64: 0x25f50000260b},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01fc, match64: 0x00000000, model64: 0x260b00002626},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01fd, match64: 0x00000000, model64: 0x262600002641},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01fe, match64: 0x00000000, model64: 0x26410000265c},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x01ff, match64: 0x00000000, model64: 0x265c00002677},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0200, match64: 0x00000000, model64: 0x26770000268d},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0201, match64: 0x00000000, model64: 0x268d000026a3},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0202, match64: 0x00000000, model64: 0x26a3000026b9},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0203, match64: 0x00000000, model64: 0x26b9000026cf},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0204, match64: 0x00000000, model64: 0x26cf000026e5},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0205, match64: 0x00000000, model64: 0x26e5000026fb},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0206, match64: 0x00000000, model64: 0x26fb00002716},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0207, match64: 0x00000000, model64: 0x271600002731},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0208, match64: 0x00000000, model64: 0x273100002747},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0209, match64: 0x00000000, model64: 0x27470000275d},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x020a, match64: 0x00000000, model64: 0x275d00002773},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x020b, match64: 0x00000000, model64: 0x277300002789},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x020c, match64: 0x00000000, model64: 0x277300002789},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x020d, match64: 0x00000000, model64: 0x27890000279f},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x020e, match64: 0x00000000, model64: 0x279f000027b5},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x020f, match64: 0x00000000, model64: 0x27b5000027c4},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0210, match64: 0x00000000, model64: 0x27c4000027d3},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0211, match64: 0x00000000, model64: 0x27d3000027e2},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0212, match64: 0x00000000, model64: 0x27e2000027f1},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0213, match64: 0x00000000, model64: 0x27f100002800},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0214, match64: 0x00000000, model64: 0x28000000280f},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0215, match64: 0x00000000, model64: 0x280f0000281e},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0216, match64: 0x00000000, model64: 0x281e0000282d},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0217, match64: 0x00000000, model64: 0x282d0000283c},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0218, match64: 0x00000000, model64: 0x283c00002855},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0219, match64: 0x00000000, model64: 0x285500002873},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x021a, match64: 0x00000000, model64: 0x287300002881},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x021b, match64: 0x00000000, model64: 0x288100002893},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x021c, match64: 0x00000000, model64: 0x287300002881},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x021d, match64: 0x00000000, model64: 0x2893000028a6},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x021e, match64: 0x00000000, model64: 0x28a6000028b5},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x021f, match64: 0x00000000, model64: 0x28b5000028bb},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0220, match64: 0x00000000, model64: 0x28bb000028c4},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0221, match64: 0x00000000, model64: 0x28c4000028ce},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0222, match64: 0x00000000, model64: 0x28ce000028d6},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0223, match64: 0x00000000, model64: 0x28d6000028df},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0224, match64: 0x00000000, model64: 0x28df000028e7},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0225, match64: 0x00000000, model64: 0x28e7000028f0},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0226, match64: 0x00000000, model64: 0x28f0000028f9},
		modelTuple{type64: 0x52100000528, matchRI: 0x0227, match64: 0x00000000, model64: 0x28f900002906},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0228, match64: 0x00000000, model64: 0x29060000290e},
		modelTuple{type64: 0x52100000528, matchRI: 0x0229, match64: 0x00000000, model64: 0x290e0000291c},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x022a, match64: 0x00000000, model64: 0x291c00002925},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x022b, match64: 0x00000000, model64: 0x29250000292e},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x022c, match64: 0x00000000, model64: 0x292e00002936},
		modelTuple{type64: 0x52100000528, matchRI: 0x022d, match64: 0x00000000, model64: 0x293600002943},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x022e, match64: 0x00000000, model64: 0x29430000294b},
		modelTuple{type64: 0x52100000528, matchRI: 0x022f, match64: 0x00000000, model64: 0x294b00002958},
		modelTuple{type64: 0x52100000528, matchRI: 0x0230, match64: 0x00000000, model64: 0x295800002960},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0231, match64: 0x00000000, model64: 0x296000002969},
		modelTuple{type64: 0x52100000528, matchRI: 0x0232, match64: 0x00000000, model64: 0x296900002976},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0233, match64: 0x00000000, model64: 0x29760000297f},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0234, match64: 0x00000000, model64: 0x297f00002988},
		modelTuple{type64: 0x52100000528, matchRI: 0x0235, match64: 0x00000000, model64: 0x298800002995},
		modelTuple{type64: 0x52100000528, matchRI: 0x0236, match64: 0x00000000, model64: 0x2995000029a6},
		modelTuple{type64: 0x52100000528, matchRI: 0x0237, match64: 0x00000000, model64: 0x29a6000029b6},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0238, match64: 0x00000000, model64: 0x29b6000029c4},
		modelTuple{type64: 0x52100000528, matchRI: 0x0239, match64: 0x00000000, model64: 0x29c4000029cd},
		modelTuple{type64: 0x52100000528, matchRI: 0x023a, match64: 0x00000000, model64: 0x29cd000029da},
		modelTuple{type64: 0x52100000528, matchRI: 0x023b, match64: 0x00000000, model64: 0x29da000029eb},
		modelTuple{type64: 0x52100000528, matchRI: 0x023c, match64: 0x00000000, model64: 0x29eb000029f8},
		modelTuple{type64: 0x52100000528, matchRI: 0x023d, match64: 0x00000000, model64: 0x29f800002a09},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x023e, match64: 0x00000000, model64: 0x2a0900002a17},
		modelTuple{type64: 0x52100000528, matchRI: 0x023f, match64: 0x00000000, model64: 0x2a1700002a20},
		modelTuple{type64: 0x52100000528, matchRI: 0x0240, match64: 0x00000000, model64: 0x2a2000002a30},
		modelTuple{type64: 0x20000000206, matchRI: 0x0241, match64: 0x00000000, model64: 0x2a3000002a34},
		modelTuple{type64: 0x20000000206, matchRI: 0x0242, match64: 0x00000000, model64: 0x2a3400002a3a},
		modelTuple{type64: 0x20000000206, matchRI: 0x0243, match64: 0x00000000, model64: 0x2a3a00002a43},
		modelTuple{type64: 0x20000000206, matchRI: 0x0244, match64: 0x00000000, model64: 0x2a4300002a49},
		modelTuple{type64: 0x20000000206, matchRI: 0x0245, match64: 0x00000000, model64: 0x2a4900002a4f},
		modelTuple{type64: 0x20000000206, matchRI: 0x0246, match64: 0x00000000, model64: 0x2a4f00002a57},
		modelTuple{type64: 0x20000000206, matchRI: 0x0247, match64: 0x00000000, model64: 0x2a5700002a62},
		modelTuple{type64: 0x20000000206, matchRI: 0x0248, match64: 0x00000000, model64: 0x2a6200002a6d},
		modelTuple{type64: 0x20000000206, matchRI: 0x0249, match64: 0x00000000, model64: 0x2a6d00002a78},
		modelTuple{type64: 0x20000000206, matchRI: 0x024a, match64: 0x00000000, model64: 0x2a7800002a82},
		modelTuple{type64: 0x20000000206, matchRI: 0x024b, match64: 0x00000000, model64: 0x2a8200002a8e},
		modelTuple{type64: 0x20000000206, matchRI: 0x024c, match64: 0x00000000, model64: 0x2a8e00002a9b},
		modelTuple{type64: 0x20000000206, matchRI: 0x024d, match64: 0x00000000, model64: 0x2a9b00002aa5},
		modelTuple{type64: 0x20000000206, matchRI: 0x024e, match64: 0x00000000, model64: 0x2aa500002ab4},
		modelTuple{type64: 0x20000000206, matchRI: 0x024f, match64: 0x00000000, model64: 0x2ab400002ac1},
		modelTuple{type64: 0x20000000206, matchRI: 0x0250, match64: 0x00000000, model64: 0x2ac100002acb},
		modelTuple{type64: 0x20000000206, matchRI: 0x0251, match64: 0x00000000, model64: 0x2acb00002ad6},
		modelTuple{type64: 0x20000000206, matchRI: 0x0252, match64: 0x00000000, model64: 0x2ad600002ae4},
		modelTuple{type64: 0x20000000206, matchRI: 0x0253, match64: 0x00000000, model64: 0x2ae400002af7},
		modelTuple{type64: 0x20000000206, matchRI: 0x0254, match64: 0x00000000, model64: 0x2af700002b05},
		modelTuple{type64: 0x20000000206, matchRI: 0x0255, match64: 0x00000000, model64: 0x2b0500002b15},
		modelTuple{type64: 0x20000000206, matchRI: 0x0256, match64: 0x00000000, model64: 0x2b1500002b24},
		modelTuple{type64: 0x20000000206, matchRI: 0x0257, match64: 0x00000000, model64: 0x2b2400002b33},
		modelTuple{type64: 0x20000000206, matchRI: 0x0258, match64: 0x00000000, model64: 0x2b3300002b3e},
		modelTuple{type64: 0x20000000206, matchRI: 0x0259, match64: 0x00000000, model64: 0x2b3e00002b48},
		modelTuple{type64: 0x20000000206, matchRI: 0x025a, match64: 0x00000000, model64: 0x2b4800002b54},
		modelTuple{type64: 0x20000000206, matchRI: 0x025b, match64: 0x00000000, model64: 0x2b5400002b65},
		modelTuple{type64: 0x20000000206, matchRI: 0x025c, match64: 0x00000000, model64: 0x2b6500002b71},
		modelTuple{type64: 0x20000000206, matchRI: 0x025d, match64: 0x00000000, model64: 0x2b7100002b86},
		modelTuple{type64: 0x20000000206, matchRI: 0x025e, match64: 0x00000000, model64: 0x2b8600002b96},
		modelTuple{type64: 0x20000000206, matchRI: 0x025f, match64: 0x00000000, model64: 0x2b9600002ba5},
		modelTuple{type64: 0x20000000206, matchRI: 0x0260, match64: 0x00000000, model64: 0x2ba500002baf},
		modelTuple{type64: 0x20000000206, matchRI: 0x0261, match64: 0x00000000, model64: 0x2baf00002bbe},
		modelTuple{type64: 0x20000000206, matchRI: 0x0262, match64: 0x00000000, model64: 0x2bbe00002bc8},
		modelTuple{type64: 0x20000000206, matchRI: 0x0263, match64: 0x00000000, model64: 0x2bc800002bd8},
		modelTuple{type64: 0x20000000206, matchRI: 0x0264, match64: 0x00000000, model64: 0x2bd800002be3},
		modelTuple{type64: 0x28400000286, matchRI: 0x0265, match64: 0x00000000, model64: 0x2be300002bed},
		modelTuple{type64: 0x28400000286, matchRI: 0x0266, match64: 0x00000000, model64: 0x2bed00002bf7},
		modelTuple{type64: 0x28400000286, matchRI: 0x0267, match64: 0x00000000, model64: 0x2bf700002c01},
		modelTuple{type64: 0x28400000286, matchRI: 0x0268, match64: 0x00000000, model64: 0x2c0100002c0c},
		modelTuple{type64: 0x28400000286, matchRI: 0x0269, match64: 0x00000000, model64: 0x2c0c00002c1e},
		modelTuple{type64: 0x28400000286, matchRI: 0x026a, match64: 0x00000000, model64: 0x2c1e00002c26},
		modelTuple{type64: 0x20000000206, matchRI: 0x026b, match64: 0x00000000, model64: 0x2c2600002c2d},
		modelTuple{type64: 0x20000000206, matchRI: 0x026c, match64: 0x00000000, model64: 0x2a3000002a34},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x026d, match64: 0x00000000, model64: 0x2c2d00002c36},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x026e, match64: 0x00000000, model64: 0x2c2d00002c36},
		modelTuple{type64: 0x2700000027, matchRI: 0x0270, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0271, match64: 0x00000000, model64: 0x2c3600002c44},
		modelTuple{type64: 0x2700000027, matchRI: 0x0272, match64: 0x00000000, model64: 0x2c4400002c4b},
		modelTuple{type64: 0x20000000206, matchRI: 0x0273, match64: 0x00000000, model64: 0x156000001561},
		modelTuple{type64: 0x20000000206, matchRI: 0x0274, match64: 0x00000000, model64: 0x2c4b00002c59},
		modelTuple{type64: 0x2700000027, matchRI: 0x0275, match64: 0x00000000, model64: 0x2c5900002c66},
		modelTuple{type64: 0x20000000206, matchRI: 0x0276, match64: 0x00000000, model64: 0x2c6600002c6f},
		modelTuple{type64: 0x20000000206, matchRI: 0x0277, match64: 0x00000000, model64: 0x2c6f00002c7c},
		modelTuple{type64: 0x20000000206, matchRI: 0x0278, match64: 0x00000000, model64: 0x2c7c00002c87},
		modelTuple{type64: 0x20000000206, matchRI: 0x0279, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x027a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x027b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2c9200002c9e, model64: 0x2c9e00002ca1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2ca100002cac, model64: 0x2cac00002cae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2cae00002cb9, model64: 0x2cb900002cbb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2cbb00002cc6, model64: 0x2cc600002cc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x027d, match64: 0x00000000, model64: 0x2ccb00002cd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x027e, match64: 0x00000000, model64: 0x2cd500002ce4},
		modelTuple{type64: 0x2700000027, matchRI: 0x027f, match64: 0x00000000, model64: 0x2ce400002cee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0280, match64: 0x00000000, model64: 0x2cee00002cf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0281, match64: 0x00000000, model64: 0x2cf500002cfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0282, match64: 0x00000000, model64: 0x2cfc00002d05},
		modelTuple{type64: 0x2700000027, matchRI: 0x0283, match64: 0x00000000, model64: 0x2d0500002d0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0284, match64: 0x00000000, model64: 0x2d0b00002d13},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2d2100002d29, model64: 0x2d2900002d2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2d2d00002d33, model64: 0x2d3300002d38},
		modelTuple{type64: 0x2700000027, matchRI: 0x0287, match64: 0x00000000, model64: 0x2d3800002d3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2d3c00002d41, model64: 0x2d4100002d45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2d4500002d4b, model64: 0x2d4b00002d50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2d5000002d56, model64: 0x2d5600002d5b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2d5b00002d64, model64: 0x2d6400002d6c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2d6c00002d72, model64: 0x2d7200002d77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2d7700002d7d, model64: 0x2d7d00002d82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2d8200002d88, model64: 0x2d8800002d8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2d8d00002d93, model64: 0x2d9300002d94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2d9400002d99, model64: 0x2d9900002d9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2d9d00002da2, model64: 0x2da200002da6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2da600002dac, model64: 0x2dac00002db1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2db100002db7, model64: 0x2db700002dbc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2dbc00002dc2, model64: 0x2dc200002dc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2dc700002dcc, model64: 0x2dcc00002dd0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2dd000002dd5, model64: 0x2dd500002dd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0288, match64: 0x00000000, model64: 0x2dd900002dde},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2dde00002de3, model64: 0x2de300002de5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0289, match64: 0x00000000, model64: 0x2de500002deb},
		modelTuple{type64: 0x2700000027, matchRI: 0x028a, match64: 0x00000000, model64: 0x2deb00002df1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2df100002df8, model64: 0x2df800002dfe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2dfe00002e05, model64: 0x2e0500002e0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2e0b00002e16, model64: 0x2e1600002e1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2e1b00002e27, model64: 0x2e2700002e2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2e2c00002e37, model64: 0x2e3700002e3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2e3c00002e49, model64: 0x2e4900002e4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x028b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x028e, match64: 0x00000000, model64: 0x2e5b00002e63},
		modelTuple{type64: 0x2700000027, matchRI: 0x028f, match64: 0x00000000, model64: 0x2e6300002e6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0290, match64: 0x00000000, model64: 0x2e6a00002e6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0291, match64: 0x00000000, model64: 0x2e6c00002e70},
		modelTuple{type64: 0x2700000027, matchRI: 0x0292, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0293, match64: 0x00000000, model64: 0x2e7000002e76},
		modelTuple{type64: 0x2700000027, matchRI: 0x0294, match64: 0x00000000, model64: 0x2e7600002e7d},
		modelTuple{type64: 0x20000000206, matchRI: 0x0295, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0296, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0298, match64: 0x00000000, model64: 0x2e8500002e90},
		modelTuple{type64: 0x2700000027, matchRI: 0x0299, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x029a, match64: 0x00000000, model64: 0x2e9000002e92},
		modelTuple{type64: 0x2700000027, matchRI: 0x029c, match64: 0x00000000, model64: 0x2e9700002ea1},
		modelTuple{type64: 0x2700000027, matchRI: 0x029e, match64: 0x00000000, model64: 0x2ea700002eae},
		modelTuple{type64: 0x2700000027, matchRI: 0x029f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x02a1, match64: 0x00000000, model64: 0x2eb100002eb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x02a2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x02a4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x02a5, match64: 0x00000000, model64: 0x2ebf00002ec3},
		modelTuple{type64: 0x2700000027, matchRI: 0x02a7, match64: 0x00000000, model64: 0x2ecc00002ed1},
		modelTuple{type64: 0x2700000027, matchRI: 0x02a8, match64: 0x00000000, model64: 0x2ed100002ed5},
		modelTuple{type64: 0x2700000027, matchRI: 0x02a9, match64: 0x00000000, model64: 0x2ed500002ed9},
		modelTuple{type64: 0x2700000027, matchRI: 0x02aa, match64: 0x00000000, model64: 0x2ed900002ee0},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ab, match64: 0x00000000, model64: 0x2ee000002ee6},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ac, match64: 0x00000000, model64: 0x2ee600002ef0},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ad, match64: 0x00000000, model64: 0x2ef000002ef4},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ae, match64: 0x00000000, model64: 0x2ef400002ef9},
		modelTuple{type64: 0x2700000027, matchRI: 0x02af, match64: 0x00000000, model64: 0x2ef900002efe},
		modelTuple{type64: 0x2700000027, matchRI: 0x02b0, match64: 0x00000000, model64: 0x2efe00002f02},
		modelTuple{type64: 0x2700000027, matchRI: 0x02b1, match64: 0x00000000, model64: 0x2f0200002f08},
		modelTuple{type64: 0x2700000027, matchRI: 0x02b2, match64: 0x00000000, model64: 0x2f0800002f0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x02b3, match64: 0x00000000, model64: 0x2f0d00002f11},
		modelTuple{type64: 0x2700000027, matchRI: 0x02b4, match64: 0x00000000, model64: 0x2f1100002f16},
		modelTuple{type64: 0x2700000027, matchRI: 0x02b5, match64: 0x00000000, model64: 0x2f1600002f1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x02b6, match64: 0x00000000, model64: 0x2f1e00002f29},
		modelTuple{type64: 0x20000000206, matchRI: 0x02b7, match64: 0x00000000, model64: 0x2f2900002f36},
		modelTuple{type64: 0x20000000206, matchRI: 0x02b8, match64: 0x00000000, model64: 0x2f3600002f3c},
		modelTuple{type64: 0x20000000206, matchRI: 0x02b9, match64: 0x00000000, model64: 0x2f3c00002f41},
		modelTuple{type64: 0x20000000206, matchRI: 0x02ba, match64: 0x00000000, model64: 0x2f4100002f4d},
		modelTuple{type64: 0x20000000206, matchRI: 0x02bb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x02bc, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x02bf, match64: 0x00000000, model64: 0x2f5600002f66},
		modelTuple{type64: 0x20000000206, matchRI: 0x02c0, match64: 0x00000000, model64: 0x2f6600002f70},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x2f7000002f76, model64: 0x2f7600002f7e},
		modelTuple{type64: 0x20000000206, matchRI: 0x02c1, match64: 0x00000000, model64: 0x2f7e00002f8d},
		modelTuple{type64: 0x20000000206, matchRI: 0x02c2, match64: 0x00000000, model64: 0x2f8d00002fa0},
		modelTuple{type64: 0x20000000206, matchRI: 0x02c3, match64: 0x00000000, model64: 0x2fa000002fb1},
		modelTuple{type64: 0x20000000206, matchRI: 0x02c4, match64: 0x00000000, model64: 0x2fb100002fbb},
		modelTuple{type64: 0x20000000206, matchRI: 0x02c5, match64: 0x00000000, model64: 0x2fbb00002fbf},
		modelTuple{type64: 0x20000000206, matchRI: 0x02c6, match64: 0x00000000, model64: 0x2fbf00002fcb},
		modelTuple{type64: 0x20000000206, matchRI: 0x02c7, match64: 0x00000000, model64: 0x2fcb00002fd5},
		modelTuple{type64: 0x20000000206, matchRI: 0x02c8, match64: 0x00000000, model64: 0x2fd500002fe7},
		modelTuple{type64: 0x20000000206, matchRI: 0x02c9, match64: 0x00000000, model64: 0x2fe700002ff4},
		modelTuple{type64: 0x20000000206, matchRI: 0x02ca, match64: 0x00000000, model64: 0x2ff400002ffe},
		modelTuple{type64: 0x20000000206, matchRI: 0x02cb, match64: 0x00000000, model64: 0x2ffe0000300a},
		modelTuple{type64: 0x20000000206, matchRI: 0x02cc, match64: 0x00000000, model64: 0x300a00003020},
		modelTuple{type64: 0x20000000206, matchRI: 0x02cd, match64: 0x00000000, model64: 0x30200000302b},
		modelTuple{type64: 0x20000000206, matchRI: 0x02ce, match64: 0x00000000, model64: 0x302b00003041},
		modelTuple{type64: 0x20000000206, matchRI: 0x02cf, match64: 0x00000000, model64: 0x304100003057},
		modelTuple{type64: 0x20000000206, matchRI: 0x02d0, match64: 0x00000000, model64: 0x30570000306e},
		modelTuple{type64: 0x20000000206, matchRI: 0x02d1, match64: 0x00000000, model64: 0x306e00003084},
		modelTuple{type64: 0x20000000206, matchRI: 0x02d2, match64: 0x00000000, model64: 0x30840000309a},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x309a000030a6, model64: 0x30a6000030ba},
		modelTuple{type64: 0x20000000206, matchRI: 0x02d3, match64: 0x00000000, model64: 0x30ba000030c6},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x30c6000030d0, model64: 0x30d0000030d9},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x30d9000030dd, model64: 0x30dd000030e7},
		modelTuple{type64: 0x20000000206, matchRI: 0x02d4, match64: 0x00000000, model64: 0x30e7000030f1},
		modelTuple{type64: 0x20000000206, matchRI: 0x02d5, match64: 0x00000000, model64: 0x30f1000030fb},
		modelTuple{type64: 0x20000000206, matchRI: 0x02d6, match64: 0x00000000, model64: 0x30fb00003105},
		modelTuple{type64: 0x20000000206, matchRI: 0x02d7, match64: 0x00000000, model64: 0x310500003111},
		modelTuple{type64: 0x20000000206, matchRI: 0x02d8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x311100003115, model64: 0x311500003121},
		modelTuple{type64: 0x20000000206, matchRI: 0x02d9, match64: 0x00000000, model64: 0x312100003131},
		modelTuple{type64: 0x20000000206, matchRI: 0x02da, match64: 0x00000000, model64: 0x31310000313a},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x313a0000314d, model64: 0x314d00003168},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x316800003173, model64: 0x317300003179},
		modelTuple{type64: 0x52100000528, matchRI: 0x02db, match64: 0x00000000, model64: 0x317900003180},
		modelTuple{type64: 0x52100000528, matchRI: 0x02dc, match64: 0x00000000, model64: 0x31800000318e},
		modelTuple{type64: 0x52100000528, matchRI: 0x02dd, match64: 0x00000000, model64: 0x318e00003197},
		modelTuple{type64: 0x52100000528, matchRI: 0x02de, match64: 0x00000000, model64: 0x3197000031a9},
		modelTuple{type64: 0x52100000528, matchRI: 0x02df, match64: 0x00000000, model64: 0x31a9000031b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e0, match64: 0x00000000, model64: 0x31b2000031bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e1, match64: 0x00000000, model64: 0x31bb000031c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e2, match64: 0x00000000, model64: 0x31c7000031d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x31d5000031e1, model64: 0x31e1000031ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x31ea000031f6, model64: 0x31f600003206},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e3, match64: 0x00000000, model64: 0x320600003210},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e4, match64: 0x00000000, model64: 0x321000003219},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e5, match64: 0x00000000, model64: 0x321900003227},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e6, match64: 0x00000000, model64: 0x322700003230},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e7, match64: 0x00000000, model64: 0x32300000323e},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e8, match64: 0x00000000, model64: 0x323e00003247},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e9, match64: 0x00000000, model64: 0x324700003255},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ea, match64: 0x00000000, model64: 0x325500003267},
		modelTuple{type64: 0x2700000027, matchRI: 0x02eb, match64: 0x00000000, model64: 0x326700003275},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ec, match64: 0x00000000, model64: 0x32750000327e},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ed, match64: 0x00000000, model64: 0x327e00003288},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ee, match64: 0x00000000, model64: 0x328800003294},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ef, match64: 0x00000000, model64: 0x3294000032a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x32a3000032a9, model64: 0x32a9000032b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f0, match64: 0x00000000, model64: 0x32b8000032c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f1, match64: 0x00000000, model64: 0x32c7000032d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f2, match64: 0x00000000, model64: 0x32d0000032d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f3, match64: 0x00000000, model64: 0x32d9000032e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f4, match64: 0x00000000, model64: 0x32e6000032f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f5, match64: 0x00000000, model64: 0x32f4000032fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f6, match64: 0x00000000, model64: 0x32fe00003307},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f7, match64: 0x00000000, model64: 0x330700003314},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f8, match64: 0x00000000, model64: 0x33140000331d},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f9, match64: 0x00000000, model64: 0x331d00003328},
		modelTuple{type64: 0x2700000027, matchRI: 0x02fa, match64: 0x00000000, model64: 0x33280000333b},
		modelTuple{type64: 0x2700000027, matchRI: 0x02fb, match64: 0x00000000, model64: 0x325500003267},
		modelTuple{type64: 0x2700000027, matchRI: 0x02fc, match64: 0x00000000, model64: 0x333b0000334d},
		modelTuple{type64: 0x2700000027, matchRI: 0x02fd, match64: 0x00000000, model64: 0x334d0000335c},
		modelTuple{type64: 0x2700000027, matchRI: 0x02fe, match64: 0x00000000, model64: 0x335c00003366},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ff, match64: 0x00000000, model64: 0x336600003375},
		modelTuple{type64: 0x2700000027, matchRI: 0x0300, match64: 0x00000000, model64: 0x337500003382},
		modelTuple{type64: 0x2700000027, matchRI: 0x0301, match64: 0x00000000, model64: 0x335c00003366},
		modelTuple{type64: 0x2700000027, matchRI: 0x0302, match64: 0x00000000, model64: 0x338200003391},
		modelTuple{type64: 0x2700000027, matchRI: 0x0303, match64: 0x00000000, model64: 0x3391000033a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0304, match64: 0x00000000, model64: 0x33a5000033bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0305, match64: 0x00000000, model64: 0x33bb000033d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0306, match64: 0x00000000, model64: 0x33d1000033de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0307, match64: 0x00000000, model64: 0x33de000033ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0308, match64: 0x00000000, model64: 0x33ef000033fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0309, match64: 0x00000000, model64: 0x33fd0000340d},
		modelTuple{type64: 0x2700000027, matchRI: 0x030a, match64: 0x00000000, model64: 0x340d0000341b},
		modelTuple{type64: 0x2700000027, matchRI: 0x030b, match64: 0x00000000, model64: 0x33fd0000340d},
		modelTuple{type64: 0x2700000027, matchRI: 0x030c, match64: 0x00000000, model64: 0x341b00003424},
		modelTuple{type64: 0x2700000027, matchRI: 0x030d, match64: 0x00000000, model64: 0x342400003433},
		modelTuple{type64: 0x2700000027, matchRI: 0x030e, match64: 0x00000000, model64: 0x343300003442},
		modelTuple{type64: 0x2700000027, matchRI: 0x030f, match64: 0x00000000, model64: 0x344200003456},
		modelTuple{type64: 0x2700000027, matchRI: 0x0310, match64: 0x00000000, model64: 0x345600003466},
		modelTuple{type64: 0x2700000027, matchRI: 0x0311, match64: 0x00000000, model64: 0x32c7000032d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0312, match64: 0x00000000, model64: 0x346600003473},
		modelTuple{type64: 0x2700000027, matchRI: 0x0313, match64: 0x00000000, model64: 0x347300003485},
		modelTuple{type64: 0x2700000027, matchRI: 0x0314, match64: 0x00000000, model64: 0x348500003492},
		modelTuple{type64: 0x2700000027, matchRI: 0x0315, match64: 0x00000000, model64: 0x34920000349e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0316, match64: 0x00000000, model64: 0x349e000034a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0317, match64: 0x00000000, model64: 0x34a7000034b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0318, match64: 0x00000000, model64: 0x34b2000034bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0319, match64: 0x00000000, model64: 0x34bd000034c8},
		modelTuple{type64: 0x7f1000007f8, matchRI: -0x0001, match64: 0x34c8000034cf, model64: 0x34cf000034de},
		modelTuple{type64: 0x1fd200001fda, matchRI: 0x031a, match64: 0x00000000, model64: 0x34de000034e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x031b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x031c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x031d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x031e, match64: 0x00000000, model64: 0x34e8000034f6},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x031f, match64: 0x00000000, model64: 0x34f600003508},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0323, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0324, match64: 0x00000000, model64: 0x353100003537},
		modelTuple{type64: 0x2700000027, matchRI: 0x0325, match64: 0x00000000, model64: 0x353100003537},
		modelTuple{type64: 0x2700000027, matchRI: 0x0326, match64: 0x00000000, model64: 0x353100003537},
		modelTuple{type64: 0x2700000027, matchRI: 0x0328, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x032a, match64: 0x00000000, model64: 0x35420000354a},
		modelTuple{type64: 0x2700000027, matchRI: 0x032b, match64: 0x00000000, model64: 0x354a00003556},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x355b00003564, model64: 0x35640000356d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x356d00003576, model64: 0x35760000357f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x357f0000358c, model64: 0x358c0000359b},
		modelTuple{type64: 0x20000000206, matchRI: 0x032d, match64: 0x00000000, model64: 0x359b0000359e},
		modelTuple{type64: 0x2700000027, matchRI: 0x032e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0331, match64: 0x00000000, model64: 0x35a7000035b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x35b3000035bf, model64: 0x35bf000035cd},
		modelTuple{type64: 0x20000000206, matchRI: 0x0332, match64: 0x00000000, model64: 0x35cd000035da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0334, match64: 0x00000000, model64: 0x35e0000035e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0336, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0337, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x35f3000035fa, model64: 0x35fa00003604},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x360400003612, model64: 0x361200003620},
		modelTuple{type64: 0x2700000027, matchRI: 0x0339, match64: 0x00000000, model64: 0x362900003647},
		modelTuple{type64: 0x2700000027, matchRI: 0x033a, match64: 0x00000000, model64: 0x36470000365e},
		modelTuple{type64: 0x2700000027, matchRI: 0x033b, match64: 0x00000000, model64: 0x365e0000367b},
		modelTuple{type64: 0x2700000027, matchRI: 0x033c, match64: 0x00000000, model64: 0x367b00003696},
		modelTuple{type64: 0x2700000027, matchRI: 0x033d, match64: 0x00000000, model64: 0x3696000036ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x033e, match64: 0x00000000, model64: 0x36ae000036c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x033f, match64: 0x00000000, model64: 0x36c5000036dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0340, match64: 0x00000000, model64: 0x36dd000036fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0341, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0342, match64: 0x00000000, model64: 0x36fa00003707},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0343, match64: 0x00000000, model64: 0x37070000371d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x37200000372b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0346, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0347, match64: 0x00000000, model64: 0x372e00003739},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x373c00003745, model64: 0x37450000374e},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x374e00003755, model64: 0x374e00003755},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x375e00003767},
		modelTuple{type64: 0x20000000206, matchRI: 0x034a, match64: 0x00000000, model64: 0x376a0000376d},
		modelTuple{type64: 0x20000000206, matchRI: 0x034b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x376d00003776, model64: 0x37760000377f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x377f00003785, model64: 0x37850000378b},
		modelTuple{type64: 0x2700000027, matchRI: 0x034c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x034e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3794000037a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0351, match64: 0x00000000, model64: 0x37aa000037b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0353, match64: 0x00000000, model64: 0x37bf000037c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0354, match64: 0x00000000, model64: 0x37bf000037c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0355, match64: 0x00000000, model64: 0x37bf000037c6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0358, match64: 0x00000000, model64: 0x37d3000037d9},
		modelTuple{type64: 0x20000000206, matchRI: 0x0359, match64: 0x00000000, model64: 0x37d9000037df},
		modelTuple{type64: 0x20000000206, matchRI: 0x035a, match64: 0x00000000, model64: 0x37d9000037df},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x37df000037e2, model64: 0x37df000037e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x035b, match64: 0x00000000, model64: 0x37e2000037e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x035c, match64: 0x00000000, model64: 0x37e5000037ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x37ed000037f7, model64: 0x37ed000037f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x035d, match64: 0x00000000, model64: 0x37f7000037fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x035e, match64: 0x00000000, model64: 0x37fd00003801},
		modelTuple{type64: 0x2700000027, matchRI: 0x035f, match64: 0x00000000, model64: 0x38010000380e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0361, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0362, match64: 0x00000000, model64: 0x38150000381d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0363, match64: 0x00000000, model64: 0x381d00003827},
		modelTuple{type64: 0x2700000027, matchRI: 0x0364, match64: 0x00000000, model64: 0x382700003832},
		modelTuple{type64: 0x2700000027, matchRI: 0x0365, match64: 0x00000000, model64: 0x383200003839},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x384e0000385b},
		modelTuple{type64: 0x2700000027, matchRI: 0x036a, match64: 0x00000000, model64: 0x385f00003862},
		modelTuple{type64: 0x2700000027, matchRI: 0x036b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x387300003879, model64: 0x38790000387c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x387c00003882, model64: 0x388200003885},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0371, match64: 0x00000000, model64: 0x3897000038a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0372, match64: 0x00000000, model64: 0x38a3000038ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x38ab000038b0, model64: 0x38b0000038b6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x38c2000038cd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x38d6000038e4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x38eb000038f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0378, match64: 0x00000000, model64: 0x39000000390d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x390d0000391b, model64: 0x390d0000391b},
		modelTuple{type64: 0x2700000027, matchRI: 0x037a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x037b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x037d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x037e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0380, match64: 0x00000000, model64: 0x392b00003934},
		modelTuple{type64: 0x2700000027, matchRI: 0x0381, match64: 0x00000000, model64: 0x39340000393f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0382, match64: 0x00000000, model64: 0x393f0000394a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0383, match64: 0x00000000, model64: 0x39510000395f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x39630000396c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x397f00003986, model64: 0x39860000398d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0387, match64: 0x00000000, model64: 0x398d00003993},
		modelTuple{type64: 0x2700000027, matchRI: 0x0388, match64: 0x00000000, model64: 0x39930000399a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x399a000039a1, model64: 0x39a1000039a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x39a4000039ab, model64: 0x39ab000039ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x39ad000039b4, model64: 0x39b4000039b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x39b6000039bd, model64: 0x39bd000039bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x39bf000039c6, model64: 0x39c6000039c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0389, match64: 0x00000000, model64: 0x39c9000039cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x39cb000039d2, model64: 0x39d2000039d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x39d9000039e0, model64: 0x39e0000039eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x39eb000039f2, model64: 0x39f200003a00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a0000003a07, model64: 0x3a0700003a0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a0a00003a11, model64: 0x3a1100003a13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a1300003a1a, model64: 0x3a1a00003a21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a2100003a2a, model64: 0x3a2a00003a32},
		modelTuple{type64: 0x2700000027, matchRI: 0x038a, match64: 0x00000000, model64: 0x3a3200003a38},
		modelTuple{type64: 0x2700000027, matchRI: 0x038c, match64: 0x00000000, model64: 0x3a4100003a48},
		modelTuple{type64: 0x2700000027, matchRI: 0x038d, match64: 0x00000000, model64: 0x3a4800003a4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x038e, match64: 0x00000000, model64: 0x3a4b00003a51},
		modelTuple{type64: 0x2700000027, matchRI: 0x038f, match64: 0x00000000, model64: 0x3a5100003a55},
		modelTuple{type64: 0x2700000027, matchRI: 0x0390, match64: 0x00000000, model64: 0x3a5500003a5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0391, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0392, match64: 0x00000000, model64: 0x3a5c00003a63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a6300003a6e, model64: 0x3a6e00003a7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0393, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0394, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x52100000528, matchRI: 0x0395, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0396, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0397, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0398, match64: 0x00000000, model64: 0x3a8000003a89},
		modelTuple{type64: 0x2700000027, matchRI: 0x0399, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x039b, match64: 0x00000000, model64: 0x3a9200003aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x039c, match64: 0x00000000, model64: 0x3aa000003ab1},
		modelTuple{type64: 0x2700000027, matchRI: 0x039d, match64: 0x00000000, model64: 0x3ab100003ac0},
		modelTuple{type64: 0x2700000027, matchRI: 0x039e, match64: 0x00000000, model64: 0x3ac000003acf},
		modelTuple{type64: 0x2700000027, matchRI: 0x039f, match64: 0x00000000, model64: 0x3acf00003add},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3add00003aea, model64: 0x3add00003aea},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a0, match64: 0x00000000, model64: 0x3aea00003af6},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a1, match64: 0x00000000, model64: 0x3af600003b00},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a2, match64: 0x00000000, model64: 0x3b0000003b0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b0b00003b13, model64: 0x3b1300003b1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x03a4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x03a5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x03a6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a8, match64: 0x00000000, model64: 0x3b1d00003b22},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x3b2200003b2b, model64: 0x3b2b00003b39},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b4200003b4c, model64: 0x3b4c00003b58},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ab, match64: 0x00000000, model64: 0x3b5800003b6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ad, match64: 0x00000000, model64: 0x3b7000003b7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ae, match64: 0x00000000, model64: 0x3b7a00003b83},
		modelTuple{type64: 0x2700000027, matchRI: 0x03af, match64: 0x00000000, model64: 0x3b8300003b8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b0, match64: 0x00000000, model64: 0x3b8c00003b98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b9800003ba9, model64: 0x3ba900003bba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3bba00003bc4, model64: 0x3bc400003bce},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b1, match64: 0x00000000, model64: 0x3b8300003b8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b2, match64: 0x00000000, model64: 0x3bce00003bde},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3bde00003beb, model64: 0x3beb00003bf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b3, match64: 0x00000000, model64: 0x3bf800003c07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c0700003c15, model64: 0x3c1500003c23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c2300003c2c, model64: 0x3c2c00003c35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c3500003c3f, model64: 0x3c3500003c3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c3f00003c4e, model64: 0x3c4e00003c5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c5d00003c6a, model64: 0x3c6a00003c77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c7700003c7e, model64: 0x3c7e00003c85},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b4, match64: 0x00000000, model64: 0x3c8500003c94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c9400003c9f, model64: 0x3c9f00003caa},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b5, match64: 0x00000000, model64: 0x3caa00003cb2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3cb200003cb9, model64: 0x3cb200003cb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b6, match64: 0x00000000, model64: 0x3cb900003cc0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3cc000003cc9, model64: 0x3cc900003cd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b7, match64: 0x00000000, model64: 0x3cd200003cd9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3cd900003ce9, model64: 0x3cd900003ce9},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b8, match64: 0x00000000, model64: 0x3ce900003cf4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3cf400003cfc, model64: 0x3cfc00003d04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d0400003d0e, model64: 0x3d0e00003d18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d1800003d21, model64: 0x3d2100003d2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d2a00003d34, model64: 0x3d3400003d3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b9, match64: 0x00000000, model64: 0x3d3e00003d44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d4400003d4c, model64: 0x3d4400003d4c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d4c00003d54, model64: 0x3d4c00003d54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d5400003d5c, model64: 0x3d5400003d5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ba, match64: 0x00000000, model64: 0x3d5c00003d63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d6300003d6a, model64: 0x3d6a00003d71},
		modelTuple{type64: 0x2700000027, matchRI: 0x03bb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x03bc, match64: 0x00000000, model64: 0x3d7100003d7d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d7d00003d88, model64: 0x3d7d00003d88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d8800003d94, model64: 0x3d8800003d94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d9400003d9d, model64: 0x3d9400003d9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d9d00003da7, model64: 0x3d9d00003da7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3da700003daf, model64: 0x3da700003daf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3daf00003db5, model64: 0x3db500003dbe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3dbe00003dc4, model64: 0x3dc400003dca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3dca00003dd0, model64: 0x3dd000003dd6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3dd600003ddc, model64: 0x3ddc00003de2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3de200003de7, model64: 0x3de200003de7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3de700003ded, model64: 0x3de700003ded},
		modelTuple{type64: 0x2700000027, matchRI: 0x03bd, match64: 0x00000000, model64: 0x3ded00003df5},
		modelTuple{type64: 0x2700000027, matchRI: 0x03be, match64: 0x00000000, model64: 0x3df500003dff},
		modelTuple{type64: 0x2700000027, matchRI: 0x03bf, match64: 0x00000000, model64: 0x3dff00003e10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3e1000003e1f, model64: 0x3e1000003e1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3e1f00003e2a, model64: 0x3e1f00003e2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3e2a00003e36, model64: 0x3e3600003e42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3e4200003e4e, model64: 0x3e4200003e4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c0, match64: 0x00000000, model64: 0x3e4e00003e59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3e5900003e61, model64: 0x3e5900003e61},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c1, match64: 0x00000000, model64: 0x3e6100003e65},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c2, match64: 0x00000000, model64: 0x3e6500003e70},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c3, match64: 0x00000000, model64: 0x3e7000003e7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3e7b00003e8d, model64: 0x3e8d00003ea1},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c4, match64: 0x00000000, model64: 0x3ea100003ead},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c5, match64: 0x00000000, model64: 0x3ead00003eb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c6, match64: 0x00000000, model64: 0x3eb400003ebb},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x3ebb00003ecb, model64: 0x3ebb00003ecb},
		modelTuple{type64: 0x20000000206, matchRI: 0x03c7, match64: 0x00000000, model64: 0x3ecb00003ed9},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c8, match64: 0x00000000, model64: 0x3ed900003ee0},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c9, match64: 0x00000000, model64: 0x3ed900003ee0},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ca, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ee600003ef0, model64: 0x3ef000003ef4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ef400003efa, model64: 0x3efa00003f01},
		modelTuple{type64: 0x2700000027, matchRI: 0x03cc, match64: 0x00000000, model64: 0x3f0100003f0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3f0b00003f10, model64: 0x3f0b00003f10},
		modelTuple{type64: 0x2700000027, matchRI: 0x03cd, match64: 0x00000000, model64: 0x3f1000003f17},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ce, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x03cf, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x03d2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3f3600003f38, model64: 0x3f3600003f38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3f4000003f47, model64: 0x3f4700003f51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3f5100003f57, model64: 0x3f5700003f6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d5, match64: 0x00000000, model64: 0x3f6d00003f7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d7, match64: 0x00000000, model64: 0x3f8500003f89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3f8900003f8e, model64: 0x3f8e00003f93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3f9300003f9d, model64: 0x3f9d00003fa9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3fa900003fb4, model64: 0x3fb400003fbb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3fbb00003fc1, model64: 0x3fc100003fc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d8, match64: 0x00000000, model64: 0x3fc800003fd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d9, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x03da, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3fd700003fdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x03dd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x03de, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x03df, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3fee00003ff9, model64: 0x3ff900004004},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e2, match64: 0x00000000, model64: 0x40040000400d},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e3, match64: 0x00000000, model64: 0x400d00004014},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e4, match64: 0x00000000, model64: 0x40140000401d},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e5, match64: 0x00000000, model64: 0x401d00004020},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e6, match64: 0x00000000, model64: 0x402000004025},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e7, match64: 0x00000000, model64: 0x40250000402a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x402a0000402e, model64: 0x402e00004032},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x403200004038, model64: 0x40380000403d},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e8, match64: 0x00000000, model64: 0x403d00004047},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e9, match64: 0x00000000, model64: 0x404700004053},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x405300004060, model64: 0x40600000406d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x406d00004079, model64: 0x407900004085},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x40850000408f, model64: 0x408f00004099},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4099000040a1, model64: 0x4099000040a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x40a1000040ab, model64: 0x40a1000040ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x40ab000040bb, model64: 0x40ab000040bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x40bb000040c7, model64: 0x40bb000040c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x40c7000040d4, model64: 0x40d4000040e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x40e1000040eb, model64: 0x40eb000040f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x40f5000040ff, model64: 0x40ff00004107},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x410700004115, model64: 0x411500004123},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41230000412f, model64: 0x412f00004134},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41340000413e, model64: 0x413e00004141},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41410000414d, model64: 0x414d00004152},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ea, match64: 0x00000000, model64: 0x415200004157},
		modelTuple{type64: 0x20000000206, matchRI: 0x03eb, match64: 0x00000000, model64: 0x41570000415e},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x415e00004167, model64: 0x41670000416f},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x416f0000417c, model64: 0x417c00004181},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x41810000418e, model64: 0x418e00004193},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ec, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x03ed, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ee, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f1, match64: 0x00000000, model64: 0x41a3000041af},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f2, match64: 0x00000000, model64: 0x41af000041bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f3, match64: 0x00000000, model64: 0x41bb000041c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f4, match64: 0x00000000, model64: 0x41c3000041cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f5, match64: 0x00000000, model64: 0x41cc000041d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f6, match64: 0x00000000, model64: 0x41d8000041e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f7, match64: 0x00000000, model64: 0x41e4000041ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f8, match64: 0x00000000, model64: 0x41ee00004201},
		modelTuple{type64: 0x20000000206, matchRI: 0x03f9, match64: 0x00000000, model64: 0x42010000420f},
		modelTuple{type64: 0x20000000206, matchRI: 0x03fa, match64: 0x00000000, model64: 0x42010000420f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fd, match64: 0x00000000, model64: 0x421d00004230},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fe, match64: 0x00000000, model64: 0x42300000423d},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x423d00004249, model64: 0x424900004257},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x425b00004264, model64: 0x426400004269},
		modelTuple{type64: 0x20000000206, matchRI: 0x0400, match64: 0x00000000, model64: 0x426900004271},
		modelTuple{type64: 0x2700000027, matchRI: 0x0401, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x0402, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x427a00004284, model64: 0x412f00004134},
		modelTuple{type64: 0x2700000027, matchRI: 0x0403, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0405, match64: 0x00000000, model64: 0x428d00004295},
		modelTuple{type64: 0x2700000027, matchRI: 0x0406, match64: 0x00000000, model64: 0x42950000429c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0407, match64: 0x00000000, model64: 0x429c000042a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0408, match64: 0x00000000, model64: 0x42a9000042b7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42c2000042c9, model64: 0x42c9000042d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x040c, match64: 0x00000000, model64: 0x42d5000042d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x040d, match64: 0x00000000, model64: 0x42d9000042dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42e2000042f6, model64: 0x42e2000042f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0410, match64: 0x00000000, model64: 0x42fb00004304},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43040000430d, model64: 0x430d00004316},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43160000431d, model64: 0x431d00004324},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43240000432c, model64: 0x432c00004334},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x433400004342, model64: 0x434200004352},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43520000435f, model64: 0x435f0000436d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x436d0000437b, model64: 0x437b0000438a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0411, match64: 0x00000000, model64: 0x438a00004396},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4396000043a2, model64: 0x43a2000043ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43ae000043b7, model64: 0x43b7000043c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43c0000043ca, model64: 0x43ca000043d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43d4000043d9, model64: 0x43d9000043de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43de000043e7, model64: 0x43e7000043f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0412, match64: 0x00000000, model64: 0x1ed100001ed5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0413, match64: 0x00000000, model64: 0x43f0000043f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0414, match64: 0x00000000, model64: 0x43f6000043fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43fb00004400, model64: 0x440000004405},
		modelTuple{type64: 0x2700000027, matchRI: 0x0415, match64: 0x00000000, model64: 0x440500004408},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x440800004411, model64: 0x44110000441a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x441a00004420, model64: 0x442000004426},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x442600004431, model64: 0x44310000443c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x443c00004443, model64: 0x44430000444a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0416, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0417, match64: 0x00000000, model64: 0x444a00004450},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x44500000445a, model64: 0x445a0000445e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x445e00004469, model64: 0x414d00004152},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x446900004477, model64: 0x44770000447f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0418, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0419, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x041a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x041b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x041e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x041f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x44970000449f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x44ad000044b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x44bc000044c1, model64: 0x44c1000044d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0424, match64: 0x00000000, model64: 0x44d2000044d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0425, match64: 0x00000000, model64: 0x44d2000044d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0427, match64: 0x00000000, model64: 0x44db000044e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0428, match64: 0x00000000, model64: 0x44e8000044f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0429, match64: 0x00000000, model64: 0x44f70000450d},
		modelTuple{type64: 0x2700000027, matchRI: 0x042b, match64: 0x00000000, model64: 0x45130000451e},
		modelTuple{type64: 0x2700000027, matchRI: 0x042c, match64: 0x00000000, model64: 0x451e00004524},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x452400004532, model64: 0x453200004539},
		modelTuple{type64: 0x20000000206, matchRI: 0x042d, match64: 0x00000000, model64: 0x453900004541},
		modelTuple{type64: 0x20000000206, matchRI: 0x042e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x042f, match64: 0x00000000, model64: 0x45410000454a},
		modelTuple{type64: 0x20000000206, matchRI: 0x0430, match64: 0x00000000, model64: 0x451e00004524},
		modelTuple{type64: 0x20000000206, matchRI: 0x0431, match64: 0x00000000, model64: 0x451e00004524},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x454d00004551, model64: 0x454d00004551},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x455100004558, model64: 0x45580000455b},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x455b00004562, model64: 0x455b00004562},
		modelTuple{type64: 0x2700000027, matchRI: 0x0433, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0434, match64: 0x00000000, model64: 0x445a0000445e},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0435, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0437, match64: 0x00000000, model64: 0x456800004572},
		modelTuple{type64: 0x2700000027, matchRI: 0x0438, match64: 0x00000000, model64: 0x45720000457b},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x457b00004589, model64: 0x458900004599},
		modelTuple{type64: 0x20000000206, matchRI: 0x0439, match64: 0x00000000, model64: 0x4599000045a7},
		modelTuple{type64: 0x20000000206, matchRI: 0x043a, match64: 0x00000000, model64: 0x45a7000045b5},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x45b5000045c3, model64: 0x45c3000045ca},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x45ca000045dc, model64: 0x45dc000045ea},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x45ea000045fc, model64: 0x45fc0000460a},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x460a00004621, model64: 0x462100004634},
		modelTuple{type64: 0x20000000206, matchRI: 0x043d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x043e, match64: 0x00000000, model64: 0x464000004648},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x464800004656, model64: 0x464800004656},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46560000465d, model64: 0x465d00004665},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46650000466e, model64: 0x466e00004678},
		modelTuple{type64: 0x2700000027, matchRI: 0x043f, match64: 0x00000000, model64: 0x46780000467e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0440, match64: 0x00000000, model64: 0x467e00004682},
		modelTuple{type64: 0x2700000027, matchRI: 0x0441, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0442, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0443, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0444, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0446, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x468800004694, model64: 0x46940000469a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0448, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46a4000046b0, model64: 0x46b0000046be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46be000046c5, model64: 0x46c5000046cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46d5000046db, model64: 0x46d5000046db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46db000046e6, model64: 0x46e6000046ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x044b, match64: 0x00000000, model64: 0x2a2000002a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x044c, match64: 0x00000000, model64: 0x46f5000046fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x044d, match64: 0x00000000, model64: 0x3e4000003e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x044e, match64: 0x00000000, model64: 0x46fc000046fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x044f, match64: 0x00000000, model64: 0x46fe00004700},
		modelTuple{type64: 0x2700000027, matchRI: 0x0450, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x47090000471d, model64: 0x2700000027},
		modelTuple{type64: 0x28400000286, matchRI: 0x0451, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x0452, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0454, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0455, match64: 0x00000000, model64: 0x472a00004735},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x473500004741, model64: 0x47410000474d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x474d00004757, model64: 0x475700004761},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47610000476d, model64: 0x47610000476d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0456, match64: 0x00000000, model64: 0x476d00004777},
		modelTuple{type64: 0x2700000027, matchRI: 0x0457, match64: 0x00000000, model64: 0x477700004785},
		modelTuple{type64: 0x2700000027, matchRI: 0x0458, match64: 0x00000000, model64: 0x478500004794},
		modelTuple{type64: 0x2700000027, matchRI: 0x0459, match64: 0x00000000, model64: 0x4794000047a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x045a, match64: 0x00000000, model64: 0x47a2000047ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x045b, match64: 0x00000000, model64: 0x47ae000047bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x045c, match64: 0x00000000, model64: 0x47bb000047c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47c8000047d5, model64: 0x47c8000047d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x045d, match64: 0x00000000, model64: 0x47d5000047e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x045e, match64: 0x00000000, model64: 0x47e2000047ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x045f, match64: 0x00000000, model64: 0x47ea000047f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0460, match64: 0x00000000, model64: 0x47f400004801},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48010000480e, model64: 0x480e0000481d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x481d0000482d, model64: 0x481d0000482d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0461, match64: 0x00000000, model64: 0x482d00004839},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x483900004847, model64: 0x484700004858},
		modelTuple{type64: 0x2700000027, matchRI: 0x0462, match64: 0x00000000, model64: 0x485800004864},
		modelTuple{type64: 0x2700000027, matchRI: 0x0463, match64: 0x00000000, model64: 0x486400004871},
		modelTuple{type64: 0x2700000027, matchRI: 0x0464, match64: 0x00000000, model64: 0x487100004879},
		modelTuple{type64: 0x2700000027, matchRI: 0x0465, match64: 0x00000000, model64: 0x487900004884},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x488400004890, model64: 0x48900000489c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x489c000048ad, model64: 0x489c000048ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48ad000048b9, model64: 0x48ad000048b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0466, match64: 0x00000000, model64: 0x48b9000048c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48c6000048d0, model64: 0x48c6000048d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48d0000048da, model64: 0x48da000048e4},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x48e4000048f4, model64: 0x48f400004904},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x490400004918, model64: 0x490400004918},
		modelTuple{type64: 0x20000000206, matchRI: 0x0467, match64: 0x00000000, model64: 0x491800004929},
		modelTuple{type64: 0x20000000206, matchRI: 0x0468, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0469, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49350000493f, model64: 0x493f00004949},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x494900004955, model64: 0x495500004961},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49610000496e, model64: 0x496e0000497b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x497b00004985, model64: 0x49850000498f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x498f00004999, model64: 0x4999000049a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x046b, match64: 0x00000000, model64: 0x49a3000049aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x046c, match64: 0x00000000, model64: 0x49aa000049b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49b1000049ba, model64: 0x49ba000049c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49c3000049ce, model64: 0x49ce000049d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49d9000049e1, model64: 0x49e1000049e9},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x49e9000049f2, model64: 0x49f2000049fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a0700004a0d, model64: 0x11cb000011cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a0d00004a16, model64: 0x4a1600004a1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x046e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a2900004a30, model64: 0x4a3000004a40},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a4000004a47, model64: 0x4a4700004a54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a5400004a5b, model64: 0x4a5b00004a6c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a6c00004a73, model64: 0x4a7300004a7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0471, match64: 0x00000000, model64: 0x4a8200004a85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0472, match64: 0x00000000, model64: 0x3a5500003a5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0473, match64: 0x00000000, model64: 0x4a8500004a8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0474, match64: 0x00000000, model64: 0x4a8c00004a93},
		modelTuple{type64: 0x2700000027, matchRI: 0x0475, match64: 0x00000000, model64: 0x4a9300004a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x0476, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0477, match64: 0x00000000, model64: 0x4a9800004aa2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0478, match64: 0x00000000, model64: 0x4aa200004aa8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0479, match64: 0x00000000, model64: 0x4aa800004aaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x047a, match64: 0x00000000, model64: 0x4aaf00004ab8},
		modelTuple{type64: 0x2700000027, matchRI: 0x047b, match64: 0x00000000, model64: 0x4ab800004ac1},
		modelTuple{type64: 0x2700000027, matchRI: 0x047c, match64: 0x00000000, model64: 0x4ac100004acb},
		modelTuple{type64: 0x2700000027, matchRI: 0x047d, match64: 0x00000000, model64: 0x4acb00004ad3},
		modelTuple{type64: 0x2700000027, matchRI: 0x047e, match64: 0x00000000, model64: 0x4ad300004ad9},
		modelTuple{type64: 0x2700000027, matchRI: 0x047f, match64: 0x00000000, model64: 0x4ad900004ae1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0480, match64: 0x00000000, model64: 0x4ae100004aea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0481, match64: 0x00000000, model64: 0x4aea00004af2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0482, match64: 0x00000000, model64: 0x4af200004af6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0483, match64: 0x00000000, model64: 0x4af600004afc},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0484, match64: 0x00000000, model64: 0x4afc00004b06},
		modelTuple{type64: 0x2700000027, matchRI: 0x0485, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0487, match64: 0x00000000, model64: 0x4b0e00004b19},
		modelTuple{type64: 0x2700000027, matchRI: 0x0488, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0489, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x048a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x048b, match64: 0x00000000, model64: 0x4b2a00004b2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x048d, match64: 0x00000000, model64: 0x4b3700004b43},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b4300004b4b, model64: 0x4b4b00004b59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b5900004b5e, model64: 0x4b5e00004b67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b6700004b72, model64: 0x4b7200004b7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x048e, match64: 0x00000000, model64: 0x4b7c00004b86},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x048f, match64: 0x00000000, model64: 0x4b8600004b92},
		modelTuple{type64: 0x20000000206, matchRI: 0x0491, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b9700004b9f, model64: 0x4b9f00004ba7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ba700004bb7, model64: 0x4bb700004bc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0492, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0494, match64: 0x00000000, model64: 0x4bd000004be3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0495, match64: 0x00000000, model64: 0x4be300004bf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0496, match64: 0x00000000, model64: 0x4bf200004bfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0497, match64: 0x00000000, model64: 0x4bfe00004c09},
		modelTuple{type64: 0x2700000027, matchRI: 0x0498, match64: 0x00000000, model64: 0x4c0900004c19},
		modelTuple{type64: 0x2700000027, matchRI: 0x0499, match64: 0x00000000, model64: 0x4c1900004c26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c2600004c38, model64: 0x4c2600004c38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c3800004c46, model64: 0x4c3800004c46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c4600004c52, model64: 0x4c4600004c52},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c5200004c59, model64: 0x4c5900004c61},
		modelTuple{type64: 0x2700000027, matchRI: 0x049a, match64: 0x00000000, model64: 0x4c6100004c6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x049b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x049c, match64: 0x00000000, model64: 0x4c6c00004c70},
		modelTuple{type64: 0x2700000027, matchRI: 0x049e, match64: 0x00000000, model64: 0x4c7800004c7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x049f, match64: 0x00000000, model64: 0x4c7d00004c83},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a1, match64: 0x00000000, model64: 0x4c8800004c90},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a2, match64: 0x00000000, model64: 0x4c9000004c9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a3, match64: 0x00000000, model64: 0x4c9a00004ca3},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a4, match64: 0x00000000, model64: 0x4ca300004cac},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a5, match64: 0x00000000, model64: 0x4cac00004cb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a6, match64: 0x00000000, model64: 0x4cb700004cc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a7, match64: 0x00000000, model64: 0x4cc200004ccd},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a8, match64: 0x00000000, model64: 0x4cd000004cdb},
		modelTuple{type64: 0x2700000027, matchRI: 0x04aa, match64: 0x00000000, model64: 0x4ce100004ce5},
		modelTuple{type64: 0x20000000206, matchRI: 0x04ab, match64: 0x00000000, model64: 0x4ce500004ceb},
		modelTuple{type64: 0x20000000206, matchRI: 0x04ac, match64: 0x00000000, model64: 0x4ceb00004cf3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x04af, match64: 0x00000000, model64: 0x4d0300004d0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b0, match64: 0x00000000, model64: 0x4d0b00004d13},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b1, match64: 0x00000000, model64: 0x4d1300004d1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b4, match64: 0x00000000, model64: 0x4d2900004d30},
		modelTuple{type64: 0x20000000206, matchRI: 0x04b5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x04b6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x04b7, match64: 0x00000000, model64: 0x4d3000004d42},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b8, match64: 0x00000000, model64: 0x4d4200004d54},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b9, match64: 0x00000000, model64: 0x4d5400004d62},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ba, match64: 0x00000000, model64: 0x4d6200004d75},
		modelTuple{type64: 0x2700000027, matchRI: 0x04bb, match64: 0x00000000, model64: 0x4d7500004d85},
		modelTuple{type64: 0x2700000027, matchRI: 0x04bc, match64: 0x00000000, model64: 0x4d8500004d92},
		modelTuple{type64: 0x2700000027, matchRI: 0x04bd, match64: 0x00000000, model64: 0x4d8500004d92},
		modelTuple{type64: 0x2700000027, matchRI: 0x04be, match64: 0x00000000, model64: 0x4d8500004d92},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x4d9200004da2, model64: 0x4da200004da7},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x4da700004dab, model64: 0x4dab00004dad},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x4dad00004db7, model64: 0x4db700004db9},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x4db900004dcb, model64: 0x4dcb00004dd0},
		modelTuple{type64: 0x20000000206, matchRI: 0x04bf, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x4dd000004dd7, model64: 0x4dd700004dde},
		modelTuple{type64: 0x20000000206, matchRI: 0x04c0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x04c1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x4dde00004de8, model64: 0x4de800004dea},
		modelTuple{type64: 0x20000000206, matchRI: 0x04c2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x4dea00004df9, model64: 0x4df900004dfb},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x4dfb00004e0a, model64: 0x4e0a00004e0c},
		modelTuple{type64: 0x28400000286, matchRI: 0x04c3, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x4e1100004e16, model64: 0x4e1100004e16},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x4e1600004e1c, model64: 0x4e1600004e1c},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x4e1c00004e27, model64: 0x4e2700004e32},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x04c9, match64: 0x00000000, model64: 0x37d9000037df},
		modelTuple{type64: 0x20000000206, matchRI: 0x04ca, match64: 0x00000000, model64: 0x4e4000004e4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x04cb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e5100004e54, model64: 0x4e5100004e54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e5400004e5c, model64: 0x4e5400004e5c},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x4e5c00004e61, model64: 0x4e6100004e69},
		modelTuple{type64: 0x20000000206, matchRI: 0x04cd, match64: 0x00000000, model64: 0x4e6900004e73},
		modelTuple{type64: 0x20000000206, matchRI: 0x04cf, match64: 0x00000000, model64: 0x4e7900004e80},
		modelTuple{type64: 0x20000000206, matchRI: 0x04d0, match64: 0x00000000, model64: 0x4a9300004a98},
		modelTuple{type64: 0x20000000206, matchRI: 0x04d1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x04d2, match64: 0x00000000, model64: 0x4a9300004a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d3, match64: 0x00000000, model64: 0x4e8000004e82},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d4, match64: 0x00000000, model64: 0x4e8200004e8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d5, match64: 0x00000000, model64: 0x4e8a00004e91},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d6, match64: 0x00000000, model64: 0x4e9100004e99},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d7, match64: 0x00000000, model64: 0x4e9900004e9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d8, match64: 0x00000000, model64: 0x4e9b00004e9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d9, match64: 0x00000000, model64: 0x4e9d00004ea0},
		modelTuple{type64: 0x2700000027, matchRI: 0x04da, match64: 0x00000000, model64: 0x4ea000004ea2},
		modelTuple{type64: 0x2700000027, matchRI: 0x04db, match64: 0x00000000, model64: 0x3a5500003a5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x04dc, match64: 0x00000000, model64: 0x3a5c00003a63},
		modelTuple{type64: 0x2700000027, matchRI: 0x04dd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x04de, match64: 0x00000000, model64: 0x4ea200004eab},
		modelTuple{type64: 0x2700000027, matchRI: 0x04df, match64: 0x00000000, model64: 0x4eab00004eae},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e0, match64: 0x00000000, model64: 0x4eae00004eb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e1, match64: 0x00000000, model64: 0x4eb400004ec2},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e2, match64: 0x00000000, model64: 0x4ec200004ecb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ecb00004ed1, model64: 0x4ed100004edb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4edb00004ee1, model64: 0x4ee100004eea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4eea00004ef0, model64: 0x4ef000004ef9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ef900004eff, model64: 0x4eff00004f0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e3, match64: 0x00000000, model64: 0x4f0c00004f14},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e4, match64: 0x00000000, model64: 0x4f1400004f20},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e5, match64: 0x00000000, model64: 0x4f2000004f28},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e6, match64: 0x00000000, model64: 0x4f2800004f30},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e7, match64: 0x00000000, model64: 0x4f3000004f3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e8, match64: 0x00000000, model64: 0x4f3e00004f4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e9, match64: 0x00000000, model64: 0x4f4b00004f5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ea, match64: 0x00000000, model64: 0x4f5a00004f64},
		modelTuple{type64: 0x2700000027, matchRI: 0x04eb, match64: 0x00000000, model64: 0x17350000173c},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ec, match64: 0x00000000, model64: 0x4f6400004f6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ed, match64: 0x00000000, model64: 0x4f6b00004f78},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ee, match64: 0x00000000, model64: 0x4f7800004f88},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ef, match64: 0x00000000, model64: 0x4f8800004f90},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f0, match64: 0x00000000, model64: 0x4f9000004f9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f1, match64: 0x00000000, model64: 0x4f9a00004fa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f2, match64: 0x00000000, model64: 0x4fa500004fb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f3, match64: 0x00000000, model64: 0x4fb400004fc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f4, match64: 0x00000000, model64: 0x4fc400004fd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f5, match64: 0x00000000, model64: 0x4fd100004fda},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f6, match64: 0x00000000, model64: 0x4fda00004fe8},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f7, match64: 0x00000000, model64: 0x4fe800004ff7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ff700004fff, model64: 0x4ff700004fff},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f8, match64: 0x00000000, model64: 0x4fff0000500c},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f9, match64: 0x00000000, model64: 0x500c0000501a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x501a00005028, model64: 0x501a00005028},
		modelTuple{type64: 0x2700000027, matchRI: 0x04fa, match64: 0x00000000, model64: 0x502800005031},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50310000503d, model64: 0x50310000503d},
		modelTuple{type64: 0x2700000027, matchRI: 0x04fb, match64: 0x00000000, model64: 0x503d00005043},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x504c0000505a},
		modelTuple{type64: 0x2700000027, matchRI: 0x04fe, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50600000506c, model64: 0x506c0000507f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0500, match64: 0x00000000, model64: 0x50870000508a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x508a00005095, model64: 0x509500005097},
		modelTuple{type64: 0x2700000027, matchRI: 0x0502, match64: 0x00000000, model64: 0x509e000050a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0503, match64: 0x00000000, model64: 0x50a8000050b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0504, match64: 0x00000000, model64: 0x50b8000050c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0505, match64: 0x00000000, model64: 0x50c7000050d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0506, match64: 0x00000000, model64: 0x50d4000050e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0507, match64: 0x00000000, model64: 0x50e1000050ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0508, match64: 0x00000000, model64: 0x50ef000050fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0509, match64: 0x00000000, model64: 0x50fd0000510a},
		modelTuple{type64: 0x2700000027, matchRI: 0x050a, match64: 0x00000000, model64: 0x510a00005118},
		modelTuple{type64: 0x2700000027, matchRI: 0x050b, match64: 0x00000000, model64: 0x511800005120},
		modelTuple{type64: 0x2700000027, matchRI: 0x050d, match64: 0x00000000, model64: 0x512700005132},
		modelTuple{type64: 0x2700000027, matchRI: 0x050e, match64: 0x00000000, model64: 0x51320000513e},
		modelTuple{type64: 0x2700000027, matchRI: 0x050f, match64: 0x00000000, model64: 0x513e00005149},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x514900005159, model64: 0x515900005163},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x51630000516b, model64: 0x516b00005171},
		modelTuple{type64: 0x2700000027, matchRI: 0x0510, match64: 0x00000000, model64: 0x517100005176},
		modelTuple{type64: 0x2700000027, matchRI: 0x0511, match64: 0x00000000, model64: 0x1e9000001eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0512, match64: 0x00000000, model64: 0x517600005179},
		modelTuple{type64: 0x2700000027, matchRI: 0x0513, match64: 0x00000000, model64: 0x517900005180},
		modelTuple{type64: 0x2700000027, matchRI: 0x0514, match64: 0x00000000, model64: 0x518000005186},
		modelTuple{type64: 0x2700000027, matchRI: 0x0515, match64: 0x00000000, model64: 0x51860000518e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0516, match64: 0x00000000, model64: 0x518e00005199},
		modelTuple{type64: 0x2700000027, matchRI: 0x0517, match64: 0x00000000, model64: 0x5199000051a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0518, match64: 0x00000000, model64: 0x51a5000051a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0519, match64: 0x00000000, model64: 0x51a9000051ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x051a, match64: 0x00000000, model64: 0x51ac000051b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x051b, match64: 0x00000000, model64: 0x14dd000014df},
		modelTuple{type64: 0x2700000027, matchRI: 0x051c, match64: 0x00000000, model64: 0x51b2000051b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x051d, match64: 0x00000000, model64: 0x51b9000051bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x051e, match64: 0x00000000, model64: 0x51bf000051c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x051f, match64: 0x00000000, model64: 0x51c5000051cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0520, match64: 0x00000000, model64: 0x51cc000051d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0521, match64: 0x00000000, model64: 0x51d3000051d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0522, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51d8000051dc, model64: 0x51dc000051e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51e2000051e6, model64: 0x51e6000051ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0523, match64: 0x00000000, model64: 0x51ee000051f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0524, match64: 0x00000000, model64: 0x51f4000051ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0525, match64: 0x00000000, model64: 0x51ff0000520a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0526, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0527, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0528, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0529, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x521100005224, model64: 0x52240000522f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x523c00005242, model64: 0x524200005248},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52480000524d, model64: 0x524d00005253},
		modelTuple{type64: 0x2700000027, matchRI: 0x052c, match64: 0x00000000, model64: 0x52530000525b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52620000526a, model64: 0x526a00005272},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x527200005278, model64: 0x52780000527c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x527c00005282, model64: 0x528200005288},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x528800005290, model64: 0x529000005296},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52960000529b, model64: 0x529b000052a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52a4000052ac, model64: 0x52ac000052b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52b7000052bd, model64: 0x52bd000052c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52c4000052ca, model64: 0x52ca000052d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52d3000052db, model64: 0x52db000052e3},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x052e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x52f1000052f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0532, match64: 0x00000000, model64: 0x52fe0000530b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0533, match64: 0x00000000, model64: 0x530b00005315},
		modelTuple{type64: 0x2700000027, matchRI: 0x0534, match64: 0x00000000, model64: 0x53150000531c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0535, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x531c00005328, model64: 0x532800005330},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53300000533a, model64: 0x533a00005344},
		modelTuple{type64: 0x2700000027, matchRI: 0x0536, match64: 0x00000000, model64: 0x534400005353},
		modelTuple{type64: 0x2700000027, matchRI: 0x0537, match64: 0x00000000, model64: 0x53530000535d},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x535d00005364, model64: 0x535d00005364},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x536d00005372, model64: 0x537200005378},
		modelTuple{type64: 0x2700000027, matchRI: 0x053a, match64: 0x00000000, model64: 0x537800005383},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x538300005388, model64: 0x53880000538f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x538f00005397, model64: 0x53970000539f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x539f000053a4, model64: 0x53a4000053ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x053b, match64: 0x00000000, model64: 0x53ab000053b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x053c, match64: 0x00000000, model64: 0x53b6000053c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x053d, match64: 0x00000000, model64: 0x53c6000053d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x053e, match64: 0x00000000, model64: 0x53d7000053e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x053f, match64: 0x00000000, model64: 0x53e3000053f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0540, match64: 0x00000000, model64: 0x53f4000053fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0541, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0542, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0543, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0545, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0546, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0548, match64: 0x00000000, model64: 0x54040000540c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0549, match64: 0x00000000, model64: 0x54040000540c},
		modelTuple{type64: 0x2700000027, matchRI: 0x054a, match64: 0x00000000, model64: 0x540c0000541c},
		modelTuple{type64: 0x2700000027, matchRI: 0x054b, match64: 0x00000000, model64: 0x541c00005429},
		modelTuple{type64: 0x2700000027, matchRI: 0x054c, match64: 0x00000000, model64: 0x542900005439},
		modelTuple{type64: 0x2700000027, matchRI: 0x054d, match64: 0x00000000, model64: 0x54390000544a},
		modelTuple{type64: 0x2700000027, matchRI: 0x054e, match64: 0x00000000, model64: 0x544a00005454},
		modelTuple{type64: 0x2700000027, matchRI: 0x054f, match64: 0x00000000, model64: 0x54540000545e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0550, match64: 0x00000000, model64: 0x545e00005469},
		modelTuple{type64: 0x52100000528, matchRI: 0x0551, match64: 0x00000000, model64: 0x546900005474},
		modelTuple{type64: 0x52100000528, matchRI: 0x0552, match64: 0x00000000, model64: 0x54740000547f},
		modelTuple{type64: 0x20000000206, matchRI: 0x0553, match64: 0x00000000, model64: 0x547f00005487},
		modelTuple{type64: 0x20000000206, matchRI: 0x0554, match64: 0x00000000, model64: 0x547f00005487},
		modelTuple{type64: 0x2700000027, matchRI: 0x0555, match64: 0x00000000, model64: 0x54870000548e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0556, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0557, match64: 0x00000000, model64: 0x548e00005494},
		modelTuple{type64: 0x9f700000a04, matchRI: -0x0001, match64: 0x54940000549d, model64: 0x54940000549d},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0558, match64: 0x00000000, model64: 0x549d000054a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0559, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x055a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x055b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x055c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54a4000054ad, model64: 0x54ad000054b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x055e, match64: 0x00000000, model64: 0x54b6000054bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54bf000054c7, model64: 0x54c7000054cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54cf000054d6, model64: 0x54d6000054dd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x37e5000037ed},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54f2000054fc, model64: 0x54fc00005505},
		modelTuple{type64: 0x2700000027, matchRI: 0x0563, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x550a00005512, model64: 0x551200005517},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55170000551d, model64: 0x551d00005523},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0564, match64: 0x00000000, model64: 0x552300005529},
		modelTuple{type64: 0x2700000027, matchRI: 0x0566, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0567, match64: 0x00000000, model64: 0x552c00005531},
		modelTuple{type64: 0x20000000206, matchRI: 0x0568, match64: 0x00000000, model64: 0x55310000553a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0569, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x056c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x056e, match64: 0x00000000, model64: 0x55530000555d},
		modelTuple{type64: 0x28400000286, matchRI: 0x056f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0571, match64: 0x00000000, model64: 0x55620000556c},
		modelTuple{type64: 0x20000000206, matchRI: 0x0572, match64: 0x00000000, model64: 0x556c00005575},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x557500005580, model64: 0x55800000558b},
		modelTuple{type64: 0x20000000206, matchRI: 0x0573, match64: 0x00000000, model64: 0x558b00005594},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x559d000055a5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0576, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0577, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0579, match64: 0x00000000, model64: 0x55c1000055d2},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x55d2000055da, model64: 0x55da000055e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55f1000055fd, model64: 0x55fd00005602},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56020000560e, model64: 0x560e00005613},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x561d0000561f, model64: 0x561d0000561f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x562e00005633, model64: 0x562e00005633},
		modelTuple{type64: 0x20000000206, matchRI: 0x057d, match64: 0x00000000, model64: 0x56330000563b},
		modelTuple{type64: 0x2700000027, matchRI: 0x057e, match64: 0x00000000, model64: 0x563b00005640},
		modelTuple{type64: 0x2700000027, matchRI: 0x057f, match64: 0x00000000, model64: 0x564000005649},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0580, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0581, match64: 0x00000000, model64: 0x4a9300004a98},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0582, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0583, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0584, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0585, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0587, match64: 0x00000000, model64: 0x564f00005655},
		modelTuple{type64: 0x2700000027, matchRI: 0x0588, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0589, match64: 0x00000000, model64: 0x56550000565b},
		modelTuple{type64: 0x2700000027, matchRI: 0x058a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x058b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x567600005680, model64: 0x56800000568c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0590, match64: 0x00000000, model64: 0x568c0000568f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x568f00005694, model64: 0x568f00005694},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x569400005699, model64: 0x569400005699},
		modelTuple{type64: 0x2700000027, matchRI: 0x0591, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56a9000056b0, model64: 0x56a9000056b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0594, match64: 0x00000000, model64: 0x56b0000056b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0595, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0597, match64: 0x00000000, model64: 0x56b9000056bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56bf000056c3, model64: 0x56bf000056c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56c3000056cb, model64: 0x56cb000056d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56d6000056de, model64: 0x56de000056e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0598, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56e9000056ef, model64: 0x56ef000056f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56f7000056ff, model64: 0x56ff0000570b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x570b00005713, model64: 0x57130000571e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x571e00005726, model64: 0x572600005732},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57320000573a, model64: 0x573a00005746},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57460000574e, model64: 0x574e00005758},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x575800005760, model64: 0x57600000576e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x576e00005776, model64: 0x577600005782},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57820000578a, model64: 0x578a00005796},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57960000579e, model64: 0x579e000057aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57aa000057b2, model64: 0x57b2000057bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0599, match64: 0x00000000, model64: 0x57bd000057c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x059a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57c7000057cd, model64: 0x57cd000057d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57d5000057e9, model64: 0x57e9000057f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x059b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x059c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x57f4000057fb, model64: 0x57fb00005808},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x580800005810, model64: 0x58100000581e},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x581e00005828, model64: 0x582800005836},
		modelTuple{type64: 0x20000000206, matchRI: 0x059d, match64: 0x00000000, model64: 0x58360000583a},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x583a00005843, model64: 0x584300005847},
		modelTuple{type64: 0x20000000206, matchRI: 0x059e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x059f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x584700005856, model64: 0x58560000585c},
		modelTuple{type64: 0x20000000206, matchRI: 0x05a1, match64: 0x00000000, model64: 0x585c00005863},
		modelTuple{type64: 0x20000000206, matchRI: 0x05a2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x58630000586b, model64: 0x586b00005875},
		modelTuple{type64: 0x20000000206, matchRI: 0x05a3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x58750000587d, model64: 0x587d0000588b},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x588b00005893, model64: 0x5893000058a1},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x58a1000058a9, model64: 0x58a9000058b8},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x58b8000058c0, model64: 0x58c0000058d1},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x58d1000058d9, model64: 0x58d9000058e7},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x58e7000058ef, model64: 0x58ef000058fd},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x58fd00005905, model64: 0x590500005913},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x59130000591b, model64: 0x591b00005929},
		modelTuple{type64: 0x20000000206, matchRI: 0x05a4, match64: 0x00000000, model64: 0x592900005936},
		modelTuple{type64: 0x20000000206, matchRI: 0x05a5, match64: 0x00000000, model64: 0x593600005942},
		modelTuple{type64: 0x20000000206, matchRI: 0x05a6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x05a7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x1fd200001fda, matchRI: 0x05a8, match64: 0x00000000, model64: 0x594200005948},
		modelTuple{type64: 0x28400000286, matchRI: 0x05a9, match64: 0x00000000, model64: 0x594800005950},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ad, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ae, match64: 0x00000000, model64: 0x596200005969},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b7, match64: 0x00000000, model64: 0x598300005996},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5996000059a7, model64: 0x59a7000059b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b8, match64: 0x00000000, model64: 0x59b9000059c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b9, match64: 0x00000000, model64: 0x59c7000059cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ba, match64: 0x00000000, model64: 0x59cd000059d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x05bb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05bc, match64: 0x00000000, model64: 0x59d9000059e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x05bd, match64: 0x00000000, model64: 0x59e0000059e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x59e7000059f2, model64: 0x59f2000059fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x05be, match64: 0x00000000, model64: 0x59fd00005a08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a0800005a0f, model64: 0x5a0800005a0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x05bf, match64: 0x00000000, model64: 0x5a0f00005a16},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c0, match64: 0x00000000, model64: 0x5a1600005a1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c1, match64: 0x00000000, model64: 0x5a1e00005a26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a2600005a32, model64: 0x5a3200005a3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a3e00005a4a, model64: 0x5a4a00005a56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a5600005a5d, model64: 0x5a5600005a5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a5d00005a66, model64: 0x5a6600005a68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a6800005a6f, model64: 0x5a6f00005a76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a7600005a81, model64: 0x5a8100005a8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c2, match64: 0x00000000, model64: 0x5a8b00005a93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a9300005a9b, model64: 0x5a9b00005aa3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5aa300005ab1, model64: 0x5ab100005abf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5abf00005ac7, model64: 0x5ac700005acf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5acf00005ad8, model64: 0x5acf00005ad8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ad800005ade, model64: 0x5ad800005ade},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c3, match64: 0x00000000, model64: 0x59d9000059e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c5, match64: 0x00000000, model64: 0x4a9300004a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c8, match64: 0x00000000, model64: 0x5ade00005ae6},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c9, match64: 0x00000000, model64: 0x5ae600005aeb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5af100005af3},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cc, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cf, match64: 0x00000000, model64: 0x5b0900005b0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d2, match64: 0x00000000, model64: 0x5b1200005b16},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d3, match64: 0x00000000, model64: 0x5b1600005b1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d8, match64: 0x00000000, model64: 0x5b2f00005b35},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05db, match64: 0x00000000, model64: 0x5b4200005b49},
		modelTuple{type64: 0x2700000027, matchRI: 0x05dc, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05dd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x05df, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x5b4f00005b5b, model64: 0x5b4f00005b5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e0, match64: 0x00000000, model64: 0x5b5b00005b65},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e3, match64: 0x00000000, model64: 0x5b6c00005b76},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e4, match64: 0x00000000, model64: 0x5b7600005b83},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e5, match64: 0x00000000, model64: 0x5b9200005b96},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e9, match64: 0x00000000, model64: 0x5b9e00005ba5},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ea, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05eb, match64: 0x00000000, model64: 0x5ba500005bab},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ec, match64: 0x00000000, model64: 0x5bab00005bb0},
		modelTuple{type64: 0x20000000206, matchRI: 0x05ee, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ef, match64: 0x00000000, model64: 0x5bb200005bb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x5bb900005bc1, model64: 0x5bc100005bc6},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x5bc900005bda, model64: 0x5bda00005be7},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f4, match64: 0x00000000, model64: 0x5bea00005bef},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x05f5, match64: 0x00000000, model64: 0x5bea00005bef},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5bf400005bff},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f8, match64: 0x00000000, model64: 0x5c0400005c0e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5c1200005c1c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fe, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x05ff, match64: 0x00000000, model64: 0x5c3100005c3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5c4700005c58, model64: 0x5c5800005c64},
		modelTuple{type64: 0x2700000027, matchRI: 0x0601, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5c6400005c6e, model64: 0x5c6400005c6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5c6e00005c7b, model64: 0x5c7b00005c83},
		modelTuple{type64: 0x2700000027, matchRI: 0x0602, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5c9700005c9b, model64: 0x5c9700005c9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5c9b00005ca2, model64: 0x5ca200005caa},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0607, match64: 0x00000000, model64: 0x5cbb00005ccf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0608, match64: 0x00000000, model64: 0x5ccf00005cea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0609, match64: 0x00000000, model64: 0x5cea00005cfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x060a, match64: 0x00000000, model64: 0x5cfe00005d11},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5d1d00005d2e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x060d, match64: 0x00000000, model64: 0x5d3e00005d43},
		modelTuple{type64: 0x2700000027, matchRI: 0x060e, match64: 0x00000000, model64: 0x5d4300005d4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x060f, match64: 0x00000000, model64: 0x5d4e00005d54},
		modelTuple{type64: 0x2700000027, matchRI: 0x0610, match64: 0x00000000, model64: 0x5d5400005d5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0611, match64: 0x00000000, model64: 0x5d5e00005d66},
		modelTuple{type64: 0x2700000027, matchRI: 0x0612, match64: 0x00000000, model64: 0x5d6600005d6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0613, match64: 0x00000000, model64: 0x5d6e00005d77},
		modelTuple{type64: 0x2700000027, matchRI: 0x0614, match64: 0x00000000, model64: 0x5d7700005d7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0615, match64: 0x00000000, model64: 0x5d7e00005d85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0616, match64: 0x00000000, model64: 0x5d8500005d8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0617, match64: 0x00000000, model64: 0x5d8b00005d8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0618, match64: 0x00000000, model64: 0x5d8e00005d90},
		modelTuple{type64: 0x2700000027, matchRI: 0x0619, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x061a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x061b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x061d, match64: 0x00000000, model64: 0x5d9500005d9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x061e, match64: 0x00000000, model64: 0x5d9e00005da4},
		modelTuple{type64: 0x2700000027, matchRI: 0x061f, match64: 0x00000000, model64: 0x5da400005dad},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0622, match64: 0x00000000, model64: 0x5dbc00005dc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0623, match64: 0x00000000, model64: 0x5dc800005dd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0624, match64: 0x00000000, model64: 0x5dd500005de0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5de000005de9, model64: 0x5de900005df3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0625, match64: 0x00000000, model64: 0x5df300005dfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0626, match64: 0x00000000, model64: 0x5dfd00005e06},
		modelTuple{type64: 0x2700000027, matchRI: 0x0627, match64: 0x00000000, model64: 0x5e0600005e12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e1f00005e31, model64: 0x5e1f00005e31},
		modelTuple{type64: 0x20000000206, matchRI: 0x0629, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3a5500003a5c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e4200005e4b, model64: 0x5e4b00005e53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e5300005e57, model64: 0x5e5700005e5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e5a00005e5e, model64: 0x5e5e00005e68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e6800005e6c, model64: 0x412f00004134},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e6c00005e71, model64: 0x5e7100005e7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e7a00005e7f, model64: 0x5e7f00005e86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e8600005e8c, model64: 0x5e8c00005e92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e9200005e96, model64: 0x5e9600005e9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e9d00005ea1, model64: 0x5ea100005ea9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ea900005eae, model64: 0x5eae00005eb6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5eb600005eba, model64: 0x5eba00005ebe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ebe00005ec2, model64: 0x5ec200005eca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5eca00005ece, model64: 0x5ece00005ed2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ed200005ed6, model64: 0x5ed600005ee0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ee000005ee4, model64: 0x5ee400005eea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5eea00005eee, model64: 0x5eee00005ef3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ef300005ef7, model64: 0x5ef700005f00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f0000005f04, model64: 0x5f0400005f0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f0b00005f0f, model64: 0x5f0f00005f16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f1600005f1a, model64: 0x5f1a00005f25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f2500005f29, model64: 0x5f2900005f34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f3400005f38, model64: 0x5f3800005f41},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x5f4100005f45, model64: 0x5f4500005f4c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5f5b00005f6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f7200005f7c, model64: 0x5f7c00005f86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f8600005f90, model64: 0x5f8600005f90},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f9000005f9b, model64: 0x5f9b00005fa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x062f, match64: 0x00000000, model64: 0x5fa600005fb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0630, match64: 0x00000000, model64: 0x5fb000005fbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0631, match64: 0x00000000, model64: 0x5fbb00005fc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5fc400005fd0, model64: 0x5fd000005fdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0632, match64: 0x00000000, model64: 0x5fdc00005fe5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5fe500005fef, model64: 0x5fef00005ff9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ff900006005, model64: 0x600500006011},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x60110000601a, model64: 0x601a00006027},
		modelTuple{type64: 0x2700000027, matchRI: 0x0633, match64: 0x00000000, model64: 0x602700006030},
		modelTuple{type64: 0x2700000027, matchRI: 0x0634, match64: 0x00000000, model64: 0x603000006039},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x603900006043, model64: 0x603900006043},
		modelTuple{type64: 0x2700000027, matchRI: 0x0635, match64: 0x00000000, model64: 0x60430000604d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0636, match64: 0x00000000, model64: 0x5f9b00005fa6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x604d00006058, model64: 0x604d00006058},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x605800006062, model64: 0x605800006062},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x60620000606f, model64: 0x60620000606f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0637, match64: 0x00000000, model64: 0x606f00006073},
		modelTuple{type64: 0x2700000027, matchRI: 0x0638, match64: 0x00000000, model64: 0x607300006077},
		modelTuple{type64: 0x2700000027, matchRI: 0x0639, match64: 0x00000000, model64: 0x60770000607b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x607b00006085, model64: 0x607b00006085},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x60850000608f, model64: 0x60850000608f},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x608f00006099, model64: 0x608f00006099},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x6099000060a3, model64: 0x60a3000060ad},
		modelTuple{type64: 0x20000000206, matchRI: 0x063a, match64: 0x00000000, model64: 0x60ad000060bd},
		modelTuple{type64: 0x20000000206, matchRI: 0x063b, match64: 0x00000000, model64: 0x60bd000060c8},
		modelTuple{type64: 0x20000000206, matchRI: 0x063c, match64: 0x00000000, model64: 0x37d9000037df},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x60c8000060d8, model64: 0x60d8000060e3},
		modelTuple{type64: 0x28400000286, matchRI: 0x063d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x063f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0640, match64: 0x00000000, model64: 0x60eb000060ef},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0644, match64: 0x00000000, model64: 0x610400006108},
		modelTuple{type64: 0x2700000027, matchRI: 0x0646, match64: 0x00000000, model64: 0x61120000611a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0647, match64: 0x00000000, model64: 0x611a00006122},
		modelTuple{type64: 0x2700000027, matchRI: 0x0648, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0649, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x064b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x064c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61350000614e, model64: 0x614e00006162},
		modelTuple{type64: 0x2700000027, matchRI: 0x064f, match64: 0x00000000, model64: 0x616a00006171},
		modelTuple{type64: 0x20000000206, matchRI: 0x0650, match64: 0x00000000, model64: 0x617100006178},
		modelTuple{type64: 0x2700000027, matchRI: 0x0652, match64: 0x00000000, model64: 0x618000006189},
		modelTuple{type64: 0x2700000027, matchRI: 0x0653, match64: 0x00000000, model64: 0x618900006190},
		modelTuple{type64: 0x2700000027, matchRI: 0x0654, match64: 0x00000000, model64: 0x619000006199},
		modelTuple{type64: 0x2700000027, matchRI: 0x0655, match64: 0x00000000, model64: 0x6199000061a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0656, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0658, match64: 0x00000000, model64: 0x61a8000061b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61b2000061b9, model64: 0x61b9000061c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61c0000061d0, model64: 0x61c0000061d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0659, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61d6000061dd, model64: 0x61dd000061e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61e5000061f1, model64: 0x61f1000061f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x065b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x61fe00006217, model64: 0x621700006228},
		modelTuple{type64: 0x28400000286, matchRI: 0x065d, match64: 0x00000000, model64: 0x622800006233},
		modelTuple{type64: 0x2700000027, matchRI: 0x065e, match64: 0x00000000, model64: 0x623300006242},
		modelTuple{type64: 0x2700000027, matchRI: 0x065f, match64: 0x00000000, model64: 0x624200006253},
		modelTuple{type64: 0x2700000027, matchRI: 0x0660, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0662, match64: 0x00000000, model64: 0x62570000625d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x626600006274, model64: 0x627400006283},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x628300006293, model64: 0x628300006293},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62930000629f, model64: 0x629f000062ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62ab000062ba, model64: 0x62ba000062c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62c9000062d9, model64: 0x62d9000062eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62eb000062f5, model64: 0x62f500006308},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x631000006316},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0667, match64: 0x00000000, model64: 0x632200006330},
		modelTuple{type64: 0x2700000027, matchRI: 0x0668, match64: 0x00000000, model64: 0x63300000633e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0669, match64: 0x00000000, model64: 0x633e0000634c},
		modelTuple{type64: 0x2700000027, matchRI: 0x066a, match64: 0x00000000, model64: 0x634c00006357},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x635700006361, model64: 0x63610000636c},
		modelTuple{type64: 0x2700000027, matchRI: 0x066b, match64: 0x00000000, model64: 0x636c00006377},
		modelTuple{type64: 0x2700000027, matchRI: 0x066c, match64: 0x00000000, model64: 0x637700006380},
		modelTuple{type64: 0x2700000027, matchRI: 0x066d, match64: 0x00000000, model64: 0x638000006388},
		modelTuple{type64: 0x2700000027, matchRI: 0x066e, match64: 0x00000000, model64: 0x638800006392},
		modelTuple{type64: 0x2700000027, matchRI: 0x066f, match64: 0x00000000, model64: 0x63920000639b},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0670, match64: 0x00000000, model64: 0x639b000063a1},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0671, match64: 0x00000000, model64: 0x63a1000063a7},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0672, match64: 0x00000000, model64: 0x63a7000063ad},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0673, match64: 0x00000000, model64: 0x63ad000063b7},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0674, match64: 0x00000000, model64: 0xd5a00000d5e},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0675, match64: 0x00000000, model64: 0x63b7000063bc},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0676, match64: 0x00000000, model64: 0x63bc000063bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0677, match64: 0x00000000, model64: 0x63bf000063c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0678, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0679, match64: 0x00000000, model64: 0x63c5000063cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63cd000063d3, model64: 0x63cd000063d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x067b, match64: 0x00000000, model64: 0x63d9000063e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63e1000063e9, model64: 0x63e9000063f1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x067e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x067f, match64: 0x00000000, model64: 0x63f9000063fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0681, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0682, match64: 0x00000000, model64: 0x640100006406},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x640f00006415, model64: 0x64150000641c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x641c00006424, model64: 0x64240000642d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x642d00006436, model64: 0x64360000643f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x643f0000644b, model64: 0x644b00006457},
		modelTuple{type64: 0x2700000027, matchRI: 0x0684, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64570000645f, model64: 0x645f00006468},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0686, match64: 0x00000000, model64: 0x647700006480},
		modelTuple{type64: 0x2700000027, matchRI: 0x0687, match64: 0x00000000, model64: 0x648600006490},
		modelTuple{type64: 0x20000000206, matchRI: 0x0688, match64: 0x00000000, model64: 0x649000006499},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x649c000064a8, model64: 0x64a8000064b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64b7000064c4, model64: 0x64c4000064c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64c9000064d5, model64: 0x64d5000064db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64db000064e7, model64: 0x64e7000064ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64ea000064f6, model64: 0x5c2500005c2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64f600006502, model64: 0x650200006508},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x650800006514, model64: 0x651400006519},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x651c00006523, model64: 0x651c00006523},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65230000652d, model64: 0x65230000652d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x652d00006537, model64: 0x652d00006537},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x653700006541, model64: 0x653700006541},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65410000654b, model64: 0x65410000654b},
		modelTuple{type64: 0x2700000027, matchRI: 0x068c, match64: 0x00000000, model64: 0x654e0000655b},
		modelTuple{type64: 0x2700000027, matchRI: 0x068d, match64: 0x00000000, model64: 0x655b00006563},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65630000656d, model64: 0x656d00006579},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x657900006582, model64: 0x65820000658b},
		modelTuple{type64: 0x2700000027, matchRI: 0x068f, match64: 0x00000000, model64: 0x659000006597},
		modelTuple{type64: 0x2700000027, matchRI: 0x0690, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x65b0000065b9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x65ce000065d3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x37e5000037ed},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65ea000065f1, model64: 0x65f1000065f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65f300006601, model64: 0x65f300006601},
		modelTuple{type64: 0x2700000027, matchRI: 0x0698, match64: 0x00000000, model64: 0x66010000660a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x660a00006613, model64: 0x661300006617},
		modelTuple{type64: 0x2700000027, matchRI: 0x0699, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x661b0000662a, model64: 0x662a00006633},
		modelTuple{type64: 0x2700000027, matchRI: 0x069b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x66330000663d, model64: 0x663d00006647},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x664700006650, model64: 0x665000006659},
		modelTuple{type64: 0x2700000027, matchRI: 0x069c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x665900006663, model64: 0x666300006668},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x666800006671, model64: 0x66710000667e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x667e00006683, model64: 0x66830000668c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x668c00006693, model64: 0x66930000669d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x669d000066a9, model64: 0x66a9000066b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x66b5000066bc, model64: 0x66bc000066c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x66c4000066cc, model64: 0x66cc000066d4},
		modelTuple{type64: 0x52100000528, matchRI: 0x069e, match64: 0x00000000, model64: 0x66d8000066e3},
		modelTuple{type64: 0x20000000206, matchRI: 0x06a0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a4, match64: 0x00000000, model64: 0x67000000670b},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a5, match64: 0x00000000, model64: 0x670b00006718},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a6, match64: 0x00000000, model64: 0x671800006728},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a7, match64: 0x00000000, model64: 0x672800006737},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a8, match64: 0x00000000, model64: 0x673700006742},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a9, match64: 0x00000000, model64: 0x674200006750},
		modelTuple{type64: 0x2700000027, matchRI: 0x06aa, match64: 0x00000000, model64: 0x67500000675c},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ab, match64: 0x00000000, model64: 0x675c00006767},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ac, match64: 0x00000000, model64: 0x676700006776},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ad, match64: 0x00000000, model64: 0x67760000677e},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ae, match64: 0x00000000, model64: 0x677e0000678b},
		modelTuple{type64: 0x2700000027, matchRI: 0x06af, match64: 0x00000000, model64: 0x678b00006795},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b0, match64: 0x00000000, model64: 0x6795000067a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b1, match64: 0x00000000, model64: 0x67a4000067af},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b2, match64: 0x00000000, model64: 0x67af000067b9},
		modelTuple{type64: 0x20000000206, matchRI: 0x06b4, match64: 0x00000000, model64: 0x67bc000067c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b5, match64: 0x00000000, model64: 0x67c4000067cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b6, match64: 0x00000000, model64: 0x67cb000067d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b7, match64: 0x00000000, model64: 0x67d3000067e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b8, match64: 0x00000000, model64: 0x67e2000067eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b9, match64: 0x00000000, model64: 0x67eb000067f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ba, match64: 0x00000000, model64: 0x67f3000067fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bb, match64: 0x00000000, model64: 0x67fb00006803},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bc, match64: 0x00000000, model64: 0x68030000680b},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bd, match64: 0x00000000, model64: 0x680b00006813},
		modelTuple{type64: 0x2700000027, matchRI: 0x06be, match64: 0x00000000, model64: 0x68130000681c},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bf, match64: 0x00000000, model64: 0x681c00006825},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c0, match64: 0x00000000, model64: 0x682500006834},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x683400006839, model64: 0x683900006841},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x684100006846, model64: 0x68460000684f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x684f00006854, model64: 0x68540000685c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x685c00006861, model64: 0x686100006869},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68690000686e, model64: 0x686e00006876},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68760000687b, model64: 0x687b00006884},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x688400006889, model64: 0x688900006892},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x689200006897, model64: 0x68970000689f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x689f000068a4, model64: 0x68a4000068ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68ad000068b2, model64: 0x68b2000068bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68bb000068c0, model64: 0x68c0000068c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68c9000068ce, model64: 0x68ce000068d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68d6000068db, model64: 0x68db000068e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68e3000068e8, model64: 0x68e8000068f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68f0000068f5, model64: 0x68f5000068fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68fd00006902, model64: 0x69020000690a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x690a0000690f, model64: 0x690f00006917},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69170000691c, model64: 0x691c00006924},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x692400006929, model64: 0x692900006937},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69370000693c, model64: 0x693c00006945},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69450000694a, model64: 0x694a00006953},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x695300006958, model64: 0x695800006961},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x696100006966, model64: 0x69660000696e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x696e00006973, model64: 0x69730000697f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x697f00006984, model64: 0x69840000698d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x698d00006992, model64: 0x69920000699b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x699b000069a0, model64: 0x69a0000069a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69a8000069ad, model64: 0x69ad000069b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69b9000069be, model64: 0x69be000069c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69c7000069cc, model64: 0x69cc000069d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69d7000069dc, model64: 0x69dc000069e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69e2000069e7, model64: 0x69e7000069f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69f5000069fa, model64: 0x69fa00006a02},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a0200006a07, model64: 0x6a0700006a0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a0f00006a14, model64: 0x6a1400006a1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a1d00006a22, model64: 0x6a2200006a2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a2b00006a30, model64: 0x6a3000006a38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a3800006a3d, model64: 0x6a3d00006a46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a4600006a4b, model64: 0x6a4b00006a54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a5400006a59, model64: 0x6a5900006a62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a6200006a67, model64: 0x6a6700006a70},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a7000006a75, model64: 0x6a7500006a7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a7e00006a83, model64: 0x6a8300006a8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a8c00006a91, model64: 0x6a9100006a9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a9a00006a9f, model64: 0x6a9f00006aa8},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c1, match64: 0x00000000, model64: 0x6aa800006aaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c2, match64: 0x00000000, model64: 0x6aaf00006ab3},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c3, match64: 0x00000000, model64: 0x6ab300006ab8},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c4, match64: 0x00000000, model64: 0x6ab800006abd},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c5, match64: 0x00000000, model64: 0x6abd00006ac5},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c6, match64: 0x00000000, model64: 0x6ac500006acd},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c7, match64: 0x00000000, model64: 0x6acd00006ad2},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c8, match64: 0x00000000, model64: 0x6ad200006ad7},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c9, match64: 0x00000000, model64: 0x6ad700006adc},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ca, match64: 0x00000000, model64: 0x6adc00006ae6},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cb, match64: 0x00000000, model64: 0x6ae600006af0},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cc, match64: 0x00000000, model64: 0x6af000006afa},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cd, match64: 0x00000000, model64: 0x6afa00006b04},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ce, match64: 0x00000000, model64: 0x6b0400006b0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cf, match64: 0x00000000, model64: 0x6b0e00006b18},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d0, match64: 0x00000000, model64: 0x6b1800006b1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d1, match64: 0x00000000, model64: 0x6b1e00006b2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d2, match64: 0x00000000, model64: 0x6b2a00006b32},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d3, match64: 0x00000000, model64: 0x6b3200006b3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d4, match64: 0x00000000, model64: 0x6b3b00006b42},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d5, match64: 0x00000000, model64: 0x40250000402a},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d6, match64: 0x00000000, model64: 0x6b4200006b4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d7, match64: 0x00000000, model64: 0x6b4b00006b51},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d8, match64: 0x00000000, model64: 0x43f6000043fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d9, match64: 0x00000000, model64: 0x6b5100006b5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x06da, match64: 0x00000000, model64: 0x6b5b00006b65},
		modelTuple{type64: 0x2700000027, matchRI: 0x06db, match64: 0x00000000, model64: 0x6b6500006b6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x06dc, match64: 0x00000000, model64: 0x6b6f00006b73},
		modelTuple{type64: 0x2700000027, matchRI: 0x06dd, match64: 0x00000000, model64: 0x3870000038d},
		modelTuple{type64: 0x2700000027, matchRI: 0x06de, match64: 0x00000000, model64: 0x6b7300006b7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x06df, match64: 0x00000000, model64: 0x6b7a00006b83},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e0, match64: 0x00000000, model64: 0x6b8300006b88},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e1, match64: 0x00000000, model64: 0x6b8800006b94},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e2, match64: 0x00000000, model64: 0x6b9400006b9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e3, match64: 0x00000000, model64: 0x6b9e00006ba6},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e4, match64: 0x00000000, model64: 0x415200004157},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e5, match64: 0x00000000, model64: 0x6ba600006bad},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e6, match64: 0x00000000, model64: 0x6bad00006bb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e7, match64: 0x00000000, model64: 0x6bb500006bba},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e8, match64: 0x00000000, model64: 0x6bba00006bc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e9, match64: 0x00000000, model64: 0x6bc400006bce},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ea, match64: 0x00000000, model64: 0x6bce00006bd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x06eb, match64: 0x00000000, model64: 0x6bd900006be5},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ec, match64: 0x00000000, model64: 0x6be500006be9},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x06ed, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x06ee, match64: 0x00000000, model64: 0x6be900006bf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ef, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x06f3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f8, match64: 0x00000000, model64: 0x6c0500006c10},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fa, match64: 0x00000000, model64: 0x6c1700006c21},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fe, match64: 0x00000000, model64: 0x6c3200006c3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ff, match64: 0x00000000, model64: 0x6c3c00006c45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0701, match64: 0x00000000, model64: 0x6c4b00006c59},
		modelTuple{type64: 0x2700000027, matchRI: 0x0703, match64: 0x00000000, model64: 0x6c6000006c6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6c7200006c79, model64: 0x6c7900006c87},
		modelTuple{type64: 0x2700000027, matchRI: 0x0705, match64: 0x00000000, model64: 0x6c8700006c91},
		modelTuple{type64: 0x2700000027, matchRI: 0x0706, match64: 0x00000000, model64: 0x6c9100006c99},
		modelTuple{type64: 0x2700000027, matchRI: 0x0707, match64: 0x00000000, model64: 0x6c9900006ca5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ca500006cac, model64: 0x6cac00006cb3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6cb300006cba, model64: 0x6cba00006cbf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6cbf00006cc6, model64: 0x6cc600006cd0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6cd000006cd7, model64: 0x6cd700006cdd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6cdd00006ce3, model64: 0x6ce300006ce7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0708, match64: 0x00000000, model64: 0x6ce700006ce9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0709, match64: 0x00000000, model64: 0x6ce900006cf1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6cf100006cf8, model64: 0x6cf800006d00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d0000006d07, model64: 0x6d0700006d0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d0f00006d16, model64: 0x6d1600006d23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d2300006d2a, model64: 0x6d2a00006d38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d3800006d3f, model64: 0x6d3f00006d4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d4f00006d56, model64: 0x6d5600006d61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d6100006d68, model64: 0x6d6800006d70},
		modelTuple{type64: 0x2700000027, matchRI: 0x070b, match64: 0x00000000, model64: 0x6d7700006d86},
		modelTuple{type64: 0x2700000027, matchRI: 0x070c, match64: 0x00000000, model64: 0x6d8600006d95},
		modelTuple{type64: 0x2700000027, matchRI: 0x070d, match64: 0x00000000, model64: 0x6d9500006da2},
		modelTuple{type64: 0x2700000027, matchRI: 0x070e, match64: 0x00000000, model64: 0x6da200006db4},
		modelTuple{type64: 0x2700000027, matchRI: 0x070f, match64: 0x00000000, model64: 0x6db400006dc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0710, match64: 0x00000000, model64: 0x6dc300006dd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0711, match64: 0x00000000, model64: 0x6dd200006de2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0712, match64: 0x00000000, model64: 0x6de200006df0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0713, match64: 0x00000000, model64: 0x6df000006dff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0714, match64: 0x00000000, model64: 0x6dff00006e0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0715, match64: 0x00000000, model64: 0x6e0e00006e1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0716, match64: 0x00000000, model64: 0x6e1c00006e2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0717, match64: 0x00000000, model64: 0x6e2b00006e3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0718, match64: 0x00000000, model64: 0x6e3b00006e4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0719, match64: 0x00000000, model64: 0x6e4c00006e5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x071a, match64: 0x00000000, model64: 0x6e5d00006e70},
		modelTuple{type64: 0x2700000027, matchRI: 0x071b, match64: 0x00000000, model64: 0x6e7000006e7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x071c, match64: 0x00000000, model64: 0x6e7f00006e8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x071d, match64: 0x00000000, model64: 0x6e8d00006e9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x071e, match64: 0x00000000, model64: 0x6e9b00006eaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x071f, match64: 0x00000000, model64: 0x6eaa00006ebc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0720, match64: 0x00000000, model64: 0x6ebc00006ecb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0721, match64: 0x00000000, model64: 0x6ecb00006eda},
		modelTuple{type64: 0x2700000027, matchRI: 0x0722, match64: 0x00000000, model64: 0x6eda00006ee6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0723, match64: 0x00000000, model64: 0x6ee600006ef5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0724, match64: 0x00000000, model64: 0x6ef500006f06},
		modelTuple{type64: 0x2700000027, matchRI: 0x0725, match64: 0x00000000, model64: 0x6f0600006f17},
		modelTuple{type64: 0x2700000027, matchRI: 0x0726, match64: 0x00000000, model64: 0x6f1700006f2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0727, match64: 0x00000000, model64: 0x6f2d00006f3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0728, match64: 0x00000000, model64: 0x6f3c00006f4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0729, match64: 0x00000000, model64: 0x6f4b00006f54},
		modelTuple{type64: 0x2700000027, matchRI: 0x072a, match64: 0x00000000, model64: 0x6f5400006f62},
		modelTuple{type64: 0x2700000027, matchRI: 0x072b, match64: 0x00000000, model64: 0x6f6200006f75},
		modelTuple{type64: 0x2700000027, matchRI: 0x072c, match64: 0x00000000, model64: 0x6f7500006f88},
		modelTuple{type64: 0x2700000027, matchRI: 0x072d, match64: 0x00000000, model64: 0x6f8800006f97},
		modelTuple{type64: 0x2700000027, matchRI: 0x072e, match64: 0x00000000, model64: 0x6f9700006fb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x072f, match64: 0x00000000, model64: 0x6fb900006fc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0730, match64: 0x00000000, model64: 0x6fc700006fd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0731, match64: 0x00000000, model64: 0x6fd600006fdb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0732, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0733, match64: 0x00000000, model64: 0x6fdb00006fe5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0734, match64: 0x00000000, model64: 0x6fe500006ff0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0735, match64: 0x00000000, model64: 0x6ff000006ff9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0736, match64: 0x00000000, model64: 0x6ff90000700b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0737, match64: 0x00000000, model64: 0x700b00007015},
		modelTuple{type64: 0x20000000206, matchRI: 0x0738, match64: 0x00000000, model64: 0x701500007022},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x70220000702c, model64: 0x702c0000703f},
		modelTuple{type64: 0x20000000206, matchRI: 0x0739, match64: 0x00000000, model64: 0x703f00007048},
		modelTuple{type64: 0x2700000027, matchRI: 0x073c, match64: 0x00000000, model64: 0x70540000705c},
		modelTuple{type64: 0x2700000027, matchRI: 0x073d, match64: 0x00000000, model64: 0x705c00007060},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70660000706e, model64: 0x706e00007077},
		modelTuple{type64: 0x2700000027, matchRI: 0x073e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x707700007080, model64: 0x3f3600003f38},
		modelTuple{type64: 0x2700000027, matchRI: 0x073f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0741, match64: 0x00000000, model64: 0x708700007090},
		modelTuple{type64: 0x2700000027, matchRI: 0x0742, match64: 0x00000000, model64: 0x709000007096},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x709c000070a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0745, match64: 0x00000000, model64: 0x70a7000070b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70b8000070ca, model64: 0x70ca000070dc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x70e2000070eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70ee000070f5, model64: 0x70f5000070f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0748, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0749, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x074b, match64: 0x00000000, model64: 0x71000000710a},
		modelTuple{type64: 0x20000000206, matchRI: 0x074c, match64: 0x00000000, model64: 0x710a00007115},
		modelTuple{type64: 0x20000000206, matchRI: 0x074d, match64: 0x00000000, model64: 0x4a9300004a98},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x71150000711b, model64: 0x711b00007127},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x712700007138, model64: 0x713800007149},
		modelTuple{type64: 0x20000000206, matchRI: 0x074e, match64: 0x00000000, model64: 0x71490000715c},
		modelTuple{type64: 0x2700000027, matchRI: 0x074f, match64: 0x00000000, model64: 0x715c00007170},
		modelTuple{type64: 0x2700000027, matchRI: 0x0750, match64: 0x00000000, model64: 0x717000007185},
		modelTuple{type64: 0x2700000027, matchRI: 0x0751, match64: 0x00000000, model64: 0x718500007197},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7197000071a7, model64: 0x71a7000071b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0752, match64: 0x00000000, model64: 0x71b6000071c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0753, match64: 0x00000000, model64: 0x71c5000071d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0754, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x7f1000007f8, matchRI: -0x0001, match64: 0x71d2000071de, model64: 0x71de000071ea},
		modelTuple{type64: 0x20000000206, matchRI: 0x0755, match64: 0x00000000, model64: 0xa3d00000a43},
		modelTuple{type64: 0x2700000027, matchRI: 0x0756, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0757, match64: 0x00000000, model64: 0xa3d00000a43},
		modelTuple{type64: 0x2700000027, matchRI: 0x0758, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0759, match64: 0x00000000, model64: 0xa3d00000a43},
		modelTuple{type64: 0x2700000027, matchRI: 0x075a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x075b, match64: 0x00000000, model64: 0x71ea000071f2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x720400007209},
		modelTuple{type64: 0x2700000027, matchRI: 0x075e, match64: 0x00000000, model64: 0x721400007221},
		modelTuple{type64: 0x2700000027, matchRI: 0x075f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0760, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x72280000722f, model64: 0x722f00007238},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x724c00007255, model64: 0x724c00007255},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x725500007259, model64: 0x72590000725e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x725e00007262, model64: 0x72620000726c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x726c00007270, model64: 0x727000007279},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72790000727d, model64: 0x727d00007282},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x728200007286, model64: 0x72860000728f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0763, match64: 0x00000000, model64: 0x728f00007295},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x729500007299, model64: 0x729500007299},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72990000729f, model64: 0x729f000072a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72a6000072ae, model64: 0x72a6000072ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72ae000072b7, model64: 0x72ae000072b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72b7000072c6, model64: 0x72b7000072c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72c6000072dc, model64: 0x72dc000072e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72e3000072f4, model64: 0x72f4000072f6},
		modelTuple{type64: 0x20000000206, matchRI: 0x0764, match64: 0x00000000, model64: 0x72f6000072fe},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46fe00004700, model64: 0x46fe00004700},
		modelTuple{type64: 0x2700000027, matchRI: 0x0767, match64: 0x00000000, model64: 0x730b0000730f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0768, match64: 0x00000000, model64: 0x730f00007314},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x076b, match64: 0x00000000, model64: 0x731e00007328},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73280000732d, model64: 0x73280000732d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x732d00007339, model64: 0x733900007340},
		modelTuple{type64: 0x2700000027, matchRI: 0x076c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x73400000734a, model64: 0x734a00007350},
		modelTuple{type64: 0x20000000206, matchRI: 0x076d, match64: 0x00000000, model64: 0x73500000735c},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x735c00007362, model64: 0x736200007369},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x736900007373, model64: 0x73730000737d},
		modelTuple{type64: 0x20000000206, matchRI: 0x076e, match64: 0x00000000, model64: 0x737d00007386},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x73860000738c, model64: 0x738c00007393},
		modelTuple{type64: 0x20000000206, matchRI: 0x076f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0772, match64: 0x00000000, model64: 0x739d000073a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0774, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0775, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0776, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73a8000073b1, model64: 0x73b1000073c1},
		modelTuple{type64: 0x20000000206, matchRI: 0x0778, match64: 0x00000000, model64: 0x73c8000073d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0779, match64: 0x00000000, model64: 0x73d4000073dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x077a, match64: 0x00000000, model64: 0x73dc000073e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x077b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73e0000073e6, model64: 0x73e6000073ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73ec000073f2, model64: 0x73f2000073f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73f400007400, model64: 0x740000007403},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x740300007409, model64: 0x740900007410},
		modelTuple{type64: 0x2700000027, matchRI: 0x077c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x077d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x077f, match64: 0x00000000, model64: 0x741400007417},
		modelTuple{type64: 0x2700000027, matchRI: 0x0780, match64: 0x00000000, model64: 0x74170000741a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0781, match64: 0x00000000, model64: 0x741a00007420},
		modelTuple{type64: 0x20000000206, matchRI: 0x0782, match64: 0x00000000, model64: 0x37d9000037df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0784, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0785, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0786, match64: 0x00000000, model64: 0x742600007431},
		modelTuple{type64: 0x2700000027, matchRI: 0x0787, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x52100000528, matchRI: 0x0789, match64: 0x00000000, model64: 0x74370000743c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x743c00007443, model64: 0x744300007446},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74460000744c, model64: 0x744c0000744e},
		modelTuple{type64: 0x2700000027, matchRI: 0x078a, match64: 0x00000000, model64: 0x744e00007452},
		modelTuple{type64: 0x2700000027, matchRI: 0x078b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x078c, match64: 0x00000000, model64: 0x74520000745a},
		modelTuple{type64: 0x2700000027, matchRI: 0x078d, match64: 0x00000000, model64: 0x745a0000745d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x745d0000746a, model64: 0x746a00007471},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74710000747d, model64: 0x747d00007483},
		modelTuple{type64: 0x2700000027, matchRI: 0x078e, match64: 0x00000000, model64: 0x3a5c00003a63},
		modelTuple{type64: 0x2700000027, matchRI: 0x078f, match64: 0x00000000, model64: 0x74830000748c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0790, match64: 0x00000000, model64: 0x748c00007493},
		modelTuple{type64: 0x2700000027, matchRI: 0x0791, match64: 0x00000000, model64: 0x749300007499},
		modelTuple{type64: 0x2700000027, matchRI: 0x0792, match64: 0x00000000, model64: 0x7499000074a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0793, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0794, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0795, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0797, match64: 0x00000000, model64: 0x74a7000074a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0798, match64: 0x00000000, model64: 0x74a9000074b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0799, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x74b8000074bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74c7000074ce, model64: 0x74ce000074d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x079c, match64: 0x00000000, model64: 0x74d5000074d9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x74ec000074ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74f800007501, model64: 0x75010000750a},
		modelTuple{type64: 0x2700000027, matchRI: 0x079e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x079f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a1, match64: 0x00000000, model64: 0x751200007515},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a2, match64: 0x00000000, model64: 0x4ea000004ea2},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a3, match64: 0x00000000, model64: 0x751500007518},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a4, match64: 0x00000000, model64: 0x75180000751b},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a5, match64: 0x00000000, model64: 0x751b0000751d},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a6, match64: 0x00000000, model64: 0x751d0000751f},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a7, match64: 0x00000000, model64: 0x751f00007521},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a8, match64: 0x00000000, model64: 0x752100007528},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a9, match64: 0x00000000, model64: 0x75280000752a},
		modelTuple{type64: 0x2700000027, matchRI: 0x07aa, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x52100000528, matchRI: 0x07ab, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x753000007535, model64: 0x753000007535},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x753500007541, model64: 0x753500007541},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x754100007553, model64: 0x75530000755a},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ad, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x52100000528, matchRI: 0x07ae, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x07af, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x755a00007567, model64: 0x75670000756f},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x756f0000757a, model64: 0x756f0000757a},
		modelTuple{type64: 0x28400000286, matchRI: 0x07b0, match64: 0x00000000, model64: 0x757a00007582},
		modelTuple{type64: 0x28400000286, matchRI: 0x07b1, match64: 0x00000000, model64: 0x75820000758c},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x75820000758c, model64: 0x758c0000759d},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x759d000075a5, model64: 0x759d000075a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b2, match64: 0x00000000, model64: 0x75a5000075aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75aa000075b2, model64: 0x75aa000075b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75b2000075ba, model64: 0x75ba000075c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75c1000075cb, model64: 0x75c1000075cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b3, match64: 0x00000000, model64: 0x75cb000075d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75d5000075e0, model64: 0x75d5000075e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75e0000075e8, model64: 0x75e0000075e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75e8000075f2, model64: 0x75e8000075f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b4, match64: 0x00000000, model64: 0x75f2000075ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b5, match64: 0x00000000, model64: 0x75ff00007608},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x76080000760d, model64: 0x760d00007614},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x76140000761e, model64: 0x75cb000075d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x761e00007629, model64: 0x761e00007629},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b6, match64: 0x00000000, model64: 0x762900007631},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x763100007638, model64: 0x763100007638},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x763800007644, model64: 0x763800007644},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b8, match64: 0x00000000, model64: 0x764c00007653},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b9, match64: 0x00000000, model64: 0x765300007655},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ba, match64: 0x00000000, model64: 0x765500007658},
		modelTuple{type64: 0x2700000027, matchRI: 0x07bb, match64: 0x00000000, model64: 0x765800007660},
		modelTuple{type64: 0x2700000027, matchRI: 0x07bc, match64: 0x00000000, model64: 0x766000007662},
		modelTuple{type64: 0x2700000027, matchRI: 0x07bd, match64: 0x00000000, model64: 0x766200007669},
		modelTuple{type64: 0x2700000027, matchRI: 0x07be, match64: 0x00000000, model64: 0x766900007670},
		modelTuple{type64: 0x2700000027, matchRI: 0x07bf, match64: 0x00000000, model64: 0x8590000085c},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61f1000061f7, model64: 0x61f1000061f7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x76930000769a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x769e000076a4, model64: 0x76a4000076ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x76ac000076b2, model64: 0x76b2000076ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c9, match64: 0x00000000, model64: 0x76c2000076ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x76d4000076dc, model64: 0x76dc000076e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x07cb, match64: 0x00000000, model64: 0x76e4000076e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x07cd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ce, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x07d0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d2, match64: 0x00000000, model64: 0x76f6000076f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x76f900007701, model64: 0x770100007713},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x77130000771d, model64: 0x771d0000772b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x772b00007733, model64: 0x773300007745},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d4, match64: 0x00000000, model64: 0x774900007754},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d5, match64: 0x00000000, model64: 0x77540000775e},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d7, match64: 0x00000000, model64: 0x77610000776b},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d8, match64: 0x00000000, model64: 0x776b00007771},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d9, match64: 0x00000000, model64: 0x440500004408},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x07dc, match64: 0x00000000, model64: 0x777a00007780},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x77870000779b, model64: 0x779b000077ab},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x77ab000077b5, model64: 0x77b5000077bc},
		modelTuple{type64: 0x20000000206, matchRI: 0x07df, match64: 0x00000000, model64: 0x77bc000077c4},
		modelTuple{type64: 0x20000000206, matchRI: 0x07e0, match64: 0x00000000, model64: 0x77c4000077cd},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x77cd000077db, model64: 0x77db000077e6},
		modelTuple{type64: 0x20000000206, matchRI: 0x07e1, match64: 0x00000000, model64: 0x77bc000077c4},
		modelTuple{type64: 0x20000000206, matchRI: 0x07e2, match64: 0x00000000, model64: 0x77bc000077c4},
		modelTuple{type64: 0x20000000206, matchRI: 0x07e3, match64: 0x00000000, model64: 0x77e6000077ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e5, match64: 0x00000000, model64: 0x77ee000077f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e6, match64: 0x00000000, model64: 0x77f5000077f9},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x07e7, match64: 0x00000000, model64: 0x77f900007803},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x07e8, match64: 0x00000000, model64: 0x780300007810},
		modelTuple{type64: 0x7f1000007f8, matchRI: -0x0001, match64: 0x781000007823, model64: 0x782300007833},
		modelTuple{type64: 0x7f1000007f8, matchRI: -0x0001, match64: 0x783300007849, model64: 0x783300007849},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ea, match64: 0x00000000, model64: 0x784c00007853},
		modelTuple{type64: 0x2700000027, matchRI: 0x07eb, match64: 0x00000000, model64: 0x785300007859},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ec, match64: 0x00000000, model64: 0x784c00007853},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ed, match64: 0x00000000, model64: 0x785900007861},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ee, match64: 0x00000000, model64: 0x786100007869},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ef, match64: 0x00000000, model64: 0x786900007871},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f0, match64: 0x00000000, model64: 0x787100007879},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f1, match64: 0x00000000, model64: 0x78790000787f},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f2, match64: 0x00000000, model64: 0x787f00007885},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f3, match64: 0x00000000, model64: 0x78850000788b},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f4, match64: 0x00000000, model64: 0x788b0000788e},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f5, match64: 0x00000000, model64: 0x788e00007891},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f6, match64: 0x00000000, model64: 0x789100007896},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f7, match64: 0x00000000, model64: 0x7896000078a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f8, match64: 0x00000000, model64: 0x78a0000078a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f9, match64: 0x00000000, model64: 0x78a6000078ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x07fa, match64: 0x00000000, model64: 0x78ad000078ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x07fb, match64: 0x00000000, model64: 0x78ae000078b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x07fc, match64: 0x00000000, model64: 0x78b3000078be},
		modelTuple{type64: 0x2700000027, matchRI: 0x07fd, match64: 0x00000000, model64: 0x78be000078c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x78c9000078e4, model64: 0x78e4000078ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x07fe, match64: 0x00000000, model64: 0x78ff0000790a},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ff, match64: 0x00000000, model64: 0x790a00007910},
		modelTuple{type64: 0x2700000027, matchRI: 0x0800, match64: 0x00000000, model64: 0x79100000791f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0801, match64: 0x00000000, model64: 0x791f00007931},
		modelTuple{type64: 0x2700000027, matchRI: 0x0802, match64: 0x00000000, model64: 0x793100007937},
		modelTuple{type64: 0x2700000027, matchRI: 0x0803, match64: 0x00000000, model64: 0x79370000793d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0804, match64: 0x00000000, model64: 0x793d00007943},
		modelTuple{type64: 0x2700000027, matchRI: 0x0805, match64: 0x00000000, model64: 0x794300007949},
		modelTuple{type64: 0x2700000027, matchRI: 0x0806, match64: 0x00000000, model64: 0x794900007954},
		modelTuple{type64: 0x2700000027, matchRI: 0x0807, match64: 0x00000000, model64: 0x79540000795a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0808, match64: 0x00000000, model64: 0x795a00007963},
		modelTuple{type64: 0x2700000027, matchRI: 0x0809, match64: 0x00000000, model64: 0x796300007969},
		modelTuple{type64: 0x2700000027, matchRI: 0x080a, match64: 0x00000000, model64: 0x79690000796f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x796f00007976, model64: 0x797600007986},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x798600007990, model64: 0x799000007999},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7999000079a1, model64: 0x79a1000079ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79ac000079b6, model64: 0x79b6000079c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79c8000079d0, model64: 0x5ef700005f00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79d0000079d8, model64: 0x79d8000079db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79db000079e0, model64: 0x5eba00005ebe},
		modelTuple{type64: 0x2700000027, matchRI: 0x080b, match64: 0x00000000, model64: 0x2de300002de5},
		modelTuple{type64: 0x2700000027, matchRI: 0x080c, match64: 0x00000000, model64: 0x79e0000079e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x080d, match64: 0x00000000, model64: 0x79e9000079f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x080e, match64: 0x00000000, model64: 0x79f4000079fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x080f, match64: 0x00000000, model64: 0x79fe00007a08},
		modelTuple{type64: 0x2700000027, matchRI: 0x0810, match64: 0x00000000, model64: 0x7a0800007a12},
		modelTuple{type64: 0x2700000027, matchRI: 0x0811, match64: 0x00000000, model64: 0x7a1200007a1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0812, match64: 0x00000000, model64: 0x7a1d00007a27},
		modelTuple{type64: 0x2700000027, matchRI: 0x0813, match64: 0x00000000, model64: 0x7a2700007a31},
		modelTuple{type64: 0x2700000027, matchRI: 0x0814, match64: 0x00000000, model64: 0x7a3100007a3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0815, match64: 0x00000000, model64: 0x7a3b00007a45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0816, match64: 0x00000000, model64: 0x7a4500007a4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0817, match64: 0x00000000, model64: 0x7a4f00007a59},
		modelTuple{type64: 0x2700000027, matchRI: 0x0818, match64: 0x00000000, model64: 0x7a5900007a61},
		modelTuple{type64: 0x2700000027, matchRI: 0x0819, match64: 0x00000000, model64: 0x7a6100007a65},
		modelTuple{type64: 0x2700000027, matchRI: 0x081a, match64: 0x00000000, model64: 0x7a6500007a76},
		modelTuple{type64: 0x2700000027, matchRI: 0x081b, match64: 0x00000000, model64: 0x7a7600007a83},
		modelTuple{type64: 0x2700000027, matchRI: 0x081c, match64: 0x00000000, model64: 0x7a8300007a89},
		modelTuple{type64: 0x2700000027, matchRI: 0x081d, match64: 0x00000000, model64: 0x7a8900007a99},
		modelTuple{type64: 0x2700000027, matchRI: 0x081e, match64: 0x00000000, model64: 0x7a9900007aa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x081f, match64: 0x00000000, model64: 0x7aa600007aba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7aba00007ac2, model64: 0x7ac200007ac5},
		modelTuple{type64: 0x20000000206, matchRI: 0x0820, match64: 0x00000000, model64: 0x7ac500007aca},
		modelTuple{type64: 0x20000000206, matchRI: 0x0821, match64: 0x00000000, model64: 0x7aca00007acf},
		modelTuple{type64: 0x20000000206, matchRI: 0x0822, match64: 0x00000000, model64: 0x7acf00007ad7},
		modelTuple{type64: 0x52100000528, matchRI: 0x0823, match64: 0x00000000, model64: 0x7ad700007ade},
		modelTuple{type64: 0x2700000027, matchRI: 0x0824, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0825, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0826, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0827, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0828, match64: 0x00000000, model64: 0x7ade00007ae9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0829, match64: 0x00000000, model64: 0x7ade00007ae9},
		modelTuple{type64: 0x2700000027, matchRI: 0x082a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x082b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x082c, match64: 0x00000000, model64: 0x4a9300004a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x082d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x082e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x082f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0830, match64: 0x00000000, model64: 0x2de300002de5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0832, match64: 0x00000000, model64: 0x7aef00007af3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0833, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7af800007b03, model64: 0x7b0300007b14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b1400007b1b, model64: 0x7b1b00007b28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b2800007b32, model64: 0x7b3200007b34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b3400007b3b, model64: 0x7b3400007b3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b3b00007b45, model64: 0x4db700004db9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b4500007b4f, model64: 0x4de800004dea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b4f00007b59, model64: 0x7b5900007b5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b5c00007b66, model64: 0x7b6600007b6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b6a00007b74, model64: 0x7b7400007b77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b7700007b81, model64: 0x7b8100007b84},
		modelTuple{type64: 0x2700000027, matchRI: 0x0835, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0836, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0837, match64: 0x00000000, model64: 0x741400007417},
		modelTuple{type64: 0x20000000206, matchRI: 0x0838, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0839, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x7b8400007b93, model64: 0x5bda00005be7},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x7b9300007b9b, model64: 0x7b9b00007ba5},
		modelTuple{type64: 0x2700000027, matchRI: 0x083a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x083b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x083c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x083d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x083e, match64: 0x00000000, model64: 0x7bab00007bb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0840, match64: 0x00000000, model64: 0x7bb900007bc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0842, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0843, match64: 0x00000000, model64: 0x7bce00007bd9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7bd900007be0, model64: 0x7bd900007be0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7be000007be6, model64: 0x7be000007be6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7be600007bee, model64: 0x7be600007bee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7bee00007bf6, model64: 0x7bee00007bf6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7bf600007bfb, model64: 0x7bfb00007c04},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7c0e00007c17},
		modelTuple{type64: 0x2700000027, matchRI: 0x0845, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0846, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x084a, match64: 0x00000000, model64: 0x7c2900007c31},
		modelTuple{type64: 0x2700000027, matchRI: 0x084b, match64: 0x00000000, model64: 0x7c3100007c39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c4000007c49, model64: 0x7c4900007c4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c4e00007c57, model64: 0x7c5700007c58},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7c6000007c67},
		modelTuple{type64: 0x2700000027, matchRI: 0x084f, match64: 0x00000000, model64: 0x7c6c00007c75},
		modelTuple{type64: 0x2700000027, matchRI: 0x0850, match64: 0x00000000, model64: 0x7c7500007c7c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0853, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0854, match64: 0x00000000, model64: 0x7c8c00007c9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0855, match64: 0x00000000, model64: 0x7c9a00007cad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0856, match64: 0x00000000, model64: 0x7cad00007cbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0857, match64: 0x00000000, model64: 0x7cbd00007ccb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0858, match64: 0x00000000, model64: 0x7ccb00007cd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0859, match64: 0x00000000, model64: 0x7cd900007ce3},
		modelTuple{type64: 0x2700000027, matchRI: 0x085a, match64: 0x00000000, model64: 0x7ce300007ce8},
		modelTuple{type64: 0x2700000027, matchRI: 0x085b, match64: 0x00000000, model64: 0x7ce800007cef},
		modelTuple{type64: 0x2700000027, matchRI: 0x085c, match64: 0x00000000, model64: 0x7cef00007cfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x085d, match64: 0x00000000, model64: 0x7cfa00007d01},
		modelTuple{type64: 0x2700000027, matchRI: 0x085e, match64: 0x00000000, model64: 0x7d0100007d09},
		modelTuple{type64: 0x2700000027, matchRI: 0x085f, match64: 0x00000000, model64: 0x7d0900007d0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0860, match64: 0x00000000, model64: 0x7d0d00007d17},
		modelTuple{type64: 0x2700000027, matchRI: 0x0861, match64: 0x00000000, model64: 0x7d1700007d21},
		modelTuple{type64: 0x2700000027, matchRI: 0x0862, match64: 0x00000000, model64: 0x7d2100007d27},
		modelTuple{type64: 0x2700000027, matchRI: 0x0863, match64: 0x00000000, model64: 0x7d2700007d30},
		modelTuple{type64: 0x2700000027, matchRI: 0x0864, match64: 0x00000000, model64: 0x7d3000007d3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0865, match64: 0x00000000, model64: 0x7d3b00007d42},
		modelTuple{type64: 0x2700000027, matchRI: 0x0866, match64: 0x00000000, model64: 0x7d4200007d50},
		modelTuple{type64: 0x2700000027, matchRI: 0x0867, match64: 0x00000000, model64: 0x7d5000007d5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0868, match64: 0x00000000, model64: 0x7d5a00007d61},
		modelTuple{type64: 0x2700000027, matchRI: 0x0869, match64: 0x00000000, model64: 0x7d6100007d6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x086a, match64: 0x00000000, model64: 0x7d6b00007d75},
		modelTuple{type64: 0x2700000027, matchRI: 0x086b, match64: 0x00000000, model64: 0x7d7500007d83},
		modelTuple{type64: 0x2700000027, matchRI: 0x086c, match64: 0x00000000, model64: 0x7d8300007d8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x086d, match64: 0x00000000, model64: 0x7d8a00007d96},
		modelTuple{type64: 0x2700000027, matchRI: 0x086e, match64: 0x00000000, model64: 0x7d9600007d9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x086f, match64: 0x00000000, model64: 0x7d9b00007da2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0870, match64: 0x00000000, model64: 0x7da200007da8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0871, match64: 0x00000000, model64: 0x7da800007daf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0872, match64: 0x00000000, model64: 0x7daf00007db7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0873, match64: 0x00000000, model64: 0x7db700007dc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0874, match64: 0x00000000, model64: 0x6cba00006cbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0875, match64: 0x00000000, model64: 0x7dc100007dc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0877, match64: 0x00000000, model64: 0x7dd200007dd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0878, match64: 0x00000000, model64: 0x6ba600006bad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0879, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x7dde00007de5, model64: 0x7de500007deb},
		modelTuple{type64: 0x20000000206, matchRI: 0x087b, match64: 0x00000000, model64: 0x7deb00007dee},
		modelTuple{type64: 0x20000000206, matchRI: 0x087c, match64: 0x00000000, model64: 0x7dee00007df8},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x7df800007dfd, model64: 0x7dfd00007e03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e0300007e0b, model64: 0x11f8000011fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e0b00007e13, model64: 0x7e1300007e1c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e1c00007e24, model64: 0x7e2400007e26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e2600007e2e, model64: 0x7e2e00007e31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e3100007e38, model64: 0x120f00001211},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e3800007e45, model64: 0x7e4500007e54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e5400007e62, model64: 0x7e6200007e70},
		modelTuple{type64: 0x2700000027, matchRI: 0x087d, match64: 0x00000000, model64: 0x7e7000007e75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e7500007e7d, model64: 0x7e7d00007e83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e8300007e88, model64: 0x7e8800007e8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e8a00007e92, model64: 0x7e9200007e95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e9500007e9b, model64: 0x7e9b00007eaf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7eaf00007eb4, model64: 0x7eb400007ec8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ec800007ecc, model64: 0x7ecc00007ee1},
		modelTuple{type64: 0x2700000027, matchRI: 0x087e, match64: 0x00000000, model64: 0x7ee100007ee4},
		modelTuple{type64: 0x2700000027, matchRI: 0x087f, match64: 0x00000000, model64: 0x7ee400007ee7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0880, match64: 0x00000000, model64: 0x7ee700007eea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0881, match64: 0x00000000, model64: 0x7eea00007ef5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0882, match64: 0x00000000, model64: 0x7ef500007f04},
		modelTuple{type64: 0x2700000027, matchRI: 0x0883, match64: 0x00000000, model64: 0x7f0400007f0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0884, match64: 0x00000000, model64: 0x437b0000438a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0885, match64: 0x00000000, model64: 0x7f0f00007f1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0886, match64: 0x00000000, model64: 0x7f1a00007f21},
		modelTuple{type64: 0x2700000027, matchRI: 0x0887, match64: 0x00000000, model64: 0x7f2100007f25},
		modelTuple{type64: 0x2700000027, matchRI: 0x0888, match64: 0x00000000, model64: 0x7f2500007f28},
		modelTuple{type64: 0x2700000027, matchRI: 0x0889, match64: 0x00000000, model64: 0x7f2800007f2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x088a, match64: 0x00000000, model64: 0x7f2b00007f33},
		modelTuple{type64: 0x2700000027, matchRI: 0x088b, match64: 0x00000000, model64: 0x7f3300007f36},
		modelTuple{type64: 0x2700000027, matchRI: 0x088c, match64: 0x00000000, model64: 0x7f3600007f39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7f3900007f41, model64: 0x7f4100007f44},
		modelTuple{type64: 0x2700000027, matchRI: 0x088d, match64: 0x00000000, model64: 0x7f4400007f47},
		modelTuple{type64: 0x2700000027, matchRI: 0x088e, match64: 0x00000000, model64: 0x7f4700007f58},
		modelTuple{type64: 0x52100000528, matchRI: 0x088f, match64: 0x00000000, model64: 0x7f5800007f5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0890, match64: 0x00000000, model64: 0x7f5b00007f63},
		modelTuple{type64: 0x2700000027, matchRI: 0x0891, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0892, match64: 0x00000000, model64: 0x7f6300007f65},
		modelTuple{type64: 0x2700000027, matchRI: 0x0893, match64: 0x00000000, model64: 0x7f6500007f69},
		modelTuple{type64: 0x2700000027, matchRI: 0x0894, match64: 0x00000000, model64: 0x7f6900007f72},
		modelTuple{type64: 0x2700000027, matchRI: 0x0895, match64: 0x00000000, model64: 0x7f7200007f83},
		modelTuple{type64: 0x2700000027, matchRI: 0x0896, match64: 0x00000000, model64: 0x7f8300007f92},
		modelTuple{type64: 0x2700000027, matchRI: 0x0897, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x0898, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0899, match64: 0x00000000, model64: 0x7f9200007f9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x089a, match64: 0x00000000, model64: 0x7f9b00007fa4},
		modelTuple{type64: 0x2700000027, matchRI: 0x089b, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x089c, match64: 0x00000000, model64: 0x3a5500003a5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x089d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x089e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a2, match64: 0x00000000, model64: 0x3d3e00003d44},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a3, match64: 0x00000000, model64: 0x7fb900007fbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a4, match64: 0x00000000, model64: 0x7fb900007fbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a7, match64: 0x00000000, model64: 0x7fc500007fcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a8, match64: 0x00000000, model64: 0x7fcc00007fdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a9, match64: 0x00000000, model64: 0x7fdd00007fe2},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ab, match64: 0x00000000, model64: 0x7fe800007ff0},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ac, match64: 0x00000000, model64: 0x7ff000007ff4},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ad, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x08af, match64: 0x00000000, model64: 0x7ffd00008007},
		modelTuple{type64: 0x5f5100005f5b, matchRI: 0x08b0, match64: 0x00000000, model64: 0x800700008011},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x08b4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x802d00008034, model64: 0x73980000739d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x803400008038, model64: 0x80380000803f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x803f00008047, model64: 0x80470000804e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bb, match64: 0x00000000, model64: 0x805400008062},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bc, match64: 0x00000000, model64: 0x806200008067},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bd, match64: 0x00000000, model64: 0x806700008074},
		modelTuple{type64: 0x2700000027, matchRI: 0x08be, match64: 0x00000000, model64: 0x80740000807d},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bf, match64: 0x00000000, model64: 0x52530000525b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x807d00008088, model64: 0x807d00008088},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x808800008091, model64: 0x808800008091},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x80910000809b, model64: 0x80910000809b},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c3, match64: 0x00000000, model64: 0x809e000080ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c4, match64: 0x00000000, model64: 0x80ae000080b3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c9, match64: 0x00000000, model64: 0x80c4000080d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cb, match64: 0x00000000, model64: 0x80d9000080db},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cc, match64: 0x00000000, model64: 0x80db000080e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cd, match64: 0x00000000, model64: 0x80e4000080ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ce, match64: 0x00000000, model64: 0x80ed000080f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cf, match64: 0x00000000, model64: 0x80f800008103},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d0, match64: 0x00000000, model64: 0x81030000810d},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d1, match64: 0x00000000, model64: 0x810d00008118},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d2, match64: 0x00000000, model64: 0x811800008123},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d3, match64: 0x00000000, model64: 0x81230000812f},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d4, match64: 0x00000000, model64: 0x812f0000813a},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d5, match64: 0x00000000, model64: 0x813a00008143},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d6, match64: 0x00000000, model64: 0x81430000814c},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d7, match64: 0x00000000, model64: 0x814c00008157},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d8, match64: 0x00000000, model64: 0x815700008160},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d9, match64: 0x00000000, model64: 0x81600000816a},
		modelTuple{type64: 0x2700000027, matchRI: 0x08da, match64: 0x00000000, model64: 0x816a00008175},
		modelTuple{type64: 0x2700000027, matchRI: 0x08db, match64: 0x00000000, model64: 0x817500008180},
		modelTuple{type64: 0x2700000027, matchRI: 0x08dc, match64: 0x00000000, model64: 0x81800000818b},
		modelTuple{type64: 0x2700000027, matchRI: 0x08dd, match64: 0x00000000, model64: 0x818b00008196},
		modelTuple{type64: 0x2700000027, matchRI: 0x08de, match64: 0x00000000, model64: 0x81960000819e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08df, match64: 0x00000000, model64: 0x819e000081ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e0, match64: 0x00000000, model64: 0x81ab000081b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e1, match64: 0x00000000, model64: 0x81b4000081bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e2, match64: 0x00000000, model64: 0x81bd000081c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e3, match64: 0x00000000, model64: 0x81c5000081cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e4, match64: 0x00000000, model64: 0x81cc000081d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e5, match64: 0x00000000, model64: 0x81d4000081db},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e6, match64: 0x00000000, model64: 0x81db000081e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e7, match64: 0x00000000, model64: 0x81e3000081ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e8, match64: 0x00000000, model64: 0x81ef000081f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e9, match64: 0x00000000, model64: 0x81f600008202},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ea, match64: 0x00000000, model64: 0x82020000820a},
		modelTuple{type64: 0x2700000027, matchRI: 0x08eb, match64: 0x00000000, model64: 0x820a00008212},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ec, match64: 0x00000000, model64: 0x82120000821e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ed, match64: 0x00000000, model64: 0x821e00008228},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ee, match64: 0x00000000, model64: 0x822800008233},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ef, match64: 0x00000000, model64: 0x823300008243},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f0, match64: 0x00000000, model64: 0x82430000824c},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f1, match64: 0x00000000, model64: 0x824c00008254},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f2, match64: 0x00000000, model64: 0x825400008257},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f3, match64: 0x00000000, model64: 0x82570000825d},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f4, match64: 0x00000000, model64: 0x825d00008268},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f5, match64: 0x00000000, model64: 0x82680000826c},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f6, match64: 0x00000000, model64: 0x826c00008276},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f7, match64: 0x00000000, model64: 0x827600008279},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f8, match64: 0x00000000, model64: 0x827900008283},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f9, match64: 0x00000000, model64: 0x828300008286},
		modelTuple{type64: 0x2700000027, matchRI: 0x08fa, match64: 0x00000000, model64: 0x828600008288},
		modelTuple{type64: 0x2700000027, matchRI: 0x08fb, match64: 0x00000000, model64: 0x82880000828f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x828f00008297, model64: 0x82970000829a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x829a000082a2, model64: 0x82a2000082ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x08fc, match64: 0x00000000, model64: 0x82ac000082b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x08fd, match64: 0x00000000, model64: 0x82b1000082b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x08fe, match64: 0x00000000, model64: 0x82b9000082c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ff, match64: 0x00000000, model64: 0x82c6000082cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0900, match64: 0x00000000, model64: 0x82cf000082d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0901, match64: 0x00000000, model64: 0x82d6000082de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0902, match64: 0x00000000, model64: 0x82de000082eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0903, match64: 0x00000000, model64: 0x82eb000082f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0904, match64: 0x00000000, model64: 0x82f400008300},
		modelTuple{type64: 0x2700000027, matchRI: 0x0905, match64: 0x00000000, model64: 0x830000008309},
		modelTuple{type64: 0x2700000027, matchRI: 0x0906, match64: 0x00000000, model64: 0x830900008311},
		modelTuple{type64: 0x2700000027, matchRI: 0x0907, match64: 0x00000000, model64: 0x83110000831d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0908, match64: 0x00000000, model64: 0x831d0000832e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0909, match64: 0x00000000, model64: 0x832e00008337},
		modelTuple{type64: 0x2700000027, matchRI: 0x090a, match64: 0x00000000, model64: 0x833700008340},
		modelTuple{type64: 0x2700000027, matchRI: 0x090b, match64: 0x00000000, model64: 0x83400000834d},
		modelTuple{type64: 0x2700000027, matchRI: 0x090c, match64: 0x00000000, model64: 0x834d00008355},
		modelTuple{type64: 0x2700000027, matchRI: 0x090d, match64: 0x00000000, model64: 0x835500008362},
		modelTuple{type64: 0x2700000027, matchRI: 0x090e, match64: 0x00000000, model64: 0x83620000836a},
		modelTuple{type64: 0x2700000027, matchRI: 0x090f, match64: 0x00000000, model64: 0x836a00008372},
		modelTuple{type64: 0x2700000027, matchRI: 0x0910, match64: 0x00000000, model64: 0x83720000837a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0911, match64: 0x00000000, model64: 0x837a00008386},
		modelTuple{type64: 0x2700000027, matchRI: 0x0912, match64: 0x00000000, model64: 0x838600008392},
		modelTuple{type64: 0x2700000027, matchRI: 0x0913, match64: 0x00000000, model64: 0x83920000839a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0914, match64: 0x00000000, model64: 0x839a000083a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0915, match64: 0x00000000, model64: 0x83a6000083ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0916, match64: 0x00000000, model64: 0x83ae000083b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0917, match64: 0x00000000, model64: 0x83b6000083c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0918, match64: 0x00000000, model64: 0x83c7000083cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0919, match64: 0x00000000, model64: 0x83cf000083da},
		modelTuple{type64: 0x2700000027, matchRI: 0x091a, match64: 0x00000000, model64: 0x83da000083e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x091b, match64: 0x00000000, model64: 0x83e5000083f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x091c, match64: 0x00000000, model64: 0x83f200008401},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x840100008409, model64: 0x840900008411},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x841100008419, model64: 0x841900008427},
		modelTuple{type64: 0x2700000027, matchRI: 0x091d, match64: 0x00000000, model64: 0x84270000842e},
		modelTuple{type64: 0x2700000027, matchRI: 0x091e, match64: 0x00000000, model64: 0x842e0000843a},
		modelTuple{type64: 0x2700000027, matchRI: 0x091f, match64: 0x00000000, model64: 0x843a00008446},
		modelTuple{type64: 0x2700000027, matchRI: 0x0920, match64: 0x00000000, model64: 0x84460000844e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0921, match64: 0x00000000, model64: 0x844e00008456},
		modelTuple{type64: 0x2700000027, matchRI: 0x0922, match64: 0x00000000, model64: 0x845600008462},
		modelTuple{type64: 0x2700000027, matchRI: 0x0923, match64: 0x00000000, model64: 0x84620000846a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0924, match64: 0x00000000, model64: 0x846a00008471},
		modelTuple{type64: 0x2700000027, matchRI: 0x0925, match64: 0x00000000, model64: 0x84710000847d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0926, match64: 0x00000000, model64: 0x847d00008485},
		modelTuple{type64: 0x2700000027, matchRI: 0x0927, match64: 0x00000000, model64: 0x848500008491},
		modelTuple{type64: 0x2700000027, matchRI: 0x0928, match64: 0x00000000, model64: 0x849100008499},
		modelTuple{type64: 0x2700000027, matchRI: 0x0929, match64: 0x00000000, model64: 0x8499000084a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x092a, match64: 0x00000000, model64: 0x84a1000084a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x092b, match64: 0x00000000, model64: 0x84a9000084b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x092c, match64: 0x00000000, model64: 0x84b1000084b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x092d, match64: 0x00000000, model64: 0x84b8000084c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x092e, match64: 0x00000000, model64: 0x84c4000084cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x092f, match64: 0x00000000, model64: 0x84cf000084dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0930, match64: 0x00000000, model64: 0x84dc000084e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0931, match64: 0x00000000, model64: 0x84e4000084f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0932, match64: 0x00000000, model64: 0x84f0000084f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0933, match64: 0x00000000, model64: 0x84f800008500},
		modelTuple{type64: 0x2700000027, matchRI: 0x0934, match64: 0x00000000, model64: 0x850000008508},
		modelTuple{type64: 0x2700000027, matchRI: 0x0935, match64: 0x00000000, model64: 0x850800008514},
		modelTuple{type64: 0x2700000027, matchRI: 0x0936, match64: 0x00000000, model64: 0x85140000851b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0937, match64: 0x00000000, model64: 0x851b00008523},
		modelTuple{type64: 0x2700000027, matchRI: 0x0938, match64: 0x00000000, model64: 0x85230000852b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0939, match64: 0x00000000, model64: 0x852b00008537},
		modelTuple{type64: 0x2700000027, matchRI: 0x093a, match64: 0x00000000, model64: 0x85370000853f},
		modelTuple{type64: 0x2700000027, matchRI: 0x093b, match64: 0x00000000, model64: 0x853f00008547},
		modelTuple{type64: 0x2700000027, matchRI: 0x093c, match64: 0x00000000, model64: 0x85470000854f},
		modelTuple{type64: 0x2700000027, matchRI: 0x093d, match64: 0x00000000, model64: 0x854f0000855b},
		modelTuple{type64: 0x2700000027, matchRI: 0x093e, match64: 0x00000000, model64: 0x855b00008568},
		modelTuple{type64: 0x2700000027, matchRI: 0x093f, match64: 0x00000000, model64: 0x856800008573},
		modelTuple{type64: 0x2700000027, matchRI: 0x0940, match64: 0x00000000, model64: 0x857300008580},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x858000008588, model64: 0x858800008595},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x85950000859d, model64: 0x859d000085ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x85ae000085b6, model64: 0x85b6000085c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x85c8000085d1, model64: 0x85d1000085de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0941, match64: 0x00000000, model64: 0x85de000085eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0942, match64: 0x00000000, model64: 0x85eb000085f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0943, match64: 0x00000000, model64: 0x85f700008605},
		modelTuple{type64: 0x2700000027, matchRI: 0x0944, match64: 0x00000000, model64: 0x860500008612},
		modelTuple{type64: 0x2700000027, matchRI: 0x0945, match64: 0x00000000, model64: 0x86120000861e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0946, match64: 0x00000000, model64: 0x861e0000862a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0947, match64: 0x00000000, model64: 0x862a00008638},
		modelTuple{type64: 0x2700000027, matchRI: 0x0948, match64: 0x00000000, model64: 0x863800008642},
		modelTuple{type64: 0x2700000027, matchRI: 0x0949, match64: 0x00000000, model64: 0x86420000864e},
		modelTuple{type64: 0x2700000027, matchRI: 0x094a, match64: 0x00000000, model64: 0x864e00008660},
		modelTuple{type64: 0x2700000027, matchRI: 0x094b, match64: 0x00000000, model64: 0x86600000866d},
		modelTuple{type64: 0x2700000027, matchRI: 0x094c, match64: 0x00000000, model64: 0x866d00008679},
		modelTuple{type64: 0x2700000027, matchRI: 0x094d, match64: 0x00000000, model64: 0x867900008686},
		modelTuple{type64: 0x2700000027, matchRI: 0x094e, match64: 0x00000000, model64: 0x868600008693},
		modelTuple{type64: 0x2700000027, matchRI: 0x094f, match64: 0x00000000, model64: 0x8693000086a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0950, match64: 0x00000000, model64: 0x86a3000086b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86b0000086b8, model64: 0x86b8000086cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0951, match64: 0x00000000, model64: 0x86cd000086de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0952, match64: 0x00000000, model64: 0x86de000086ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0953, match64: 0x00000000, model64: 0x86ea000086f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0954, match64: 0x00000000, model64: 0x86f600008702},
		modelTuple{type64: 0x2700000027, matchRI: 0x0955, match64: 0x00000000, model64: 0x87020000870f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0956, match64: 0x00000000, model64: 0x870f00008720},
		modelTuple{type64: 0x2700000027, matchRI: 0x0957, match64: 0x00000000, model64: 0x87200000872d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0958, match64: 0x00000000, model64: 0x872d0000873a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0959, match64: 0x00000000, model64: 0x873a00008743},
		modelTuple{type64: 0x2700000027, matchRI: 0x095a, match64: 0x00000000, model64: 0x87430000874c},
		modelTuple{type64: 0x2700000027, matchRI: 0x095b, match64: 0x00000000, model64: 0x874c00008755},
		modelTuple{type64: 0x2700000027, matchRI: 0x095c, match64: 0x00000000, model64: 0x87550000875d},
		modelTuple{type64: 0x2700000027, matchRI: 0x095d, match64: 0x00000000, model64: 0x875d00008765},
		modelTuple{type64: 0x2700000027, matchRI: 0x095e, match64: 0x00000000, model64: 0x876500008772},
		modelTuple{type64: 0x2700000027, matchRI: 0x095f, match64: 0x00000000, model64: 0x87720000877f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0960, match64: 0x00000000, model64: 0x877f0000878c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0961, match64: 0x00000000, model64: 0x878c00008799},
		modelTuple{type64: 0x2700000027, matchRI: 0x0962, match64: 0x00000000, model64: 0x8799000087aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0963, match64: 0x00000000, model64: 0x87aa000087b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0964, match64: 0x00000000, model64: 0x87b2000087c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0965, match64: 0x00000000, model64: 0x87c5000087ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0966, match64: 0x00000000, model64: 0x87ce000087d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0967, match64: 0x00000000, model64: 0x87d7000087e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87e4000087ec, model64: 0x87ec000087f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87f900008801, model64: 0x88010000880a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0968, match64: 0x00000000, model64: 0x880a00008818},
		modelTuple{type64: 0x2700000027, matchRI: 0x0969, match64: 0x00000000, model64: 0x881800008826},
		modelTuple{type64: 0x2700000027, matchRI: 0x096a, match64: 0x00000000, model64: 0x88260000882e},
		modelTuple{type64: 0x2700000027, matchRI: 0x096b, match64: 0x00000000, model64: 0x882e00008836},
		modelTuple{type64: 0x2700000027, matchRI: 0x096c, match64: 0x00000000, model64: 0x88360000883e},
		modelTuple{type64: 0x2700000027, matchRI: 0x096d, match64: 0x00000000, model64: 0x883e00008847},
		modelTuple{type64: 0x2700000027, matchRI: 0x096e, match64: 0x00000000, model64: 0x884700008850},
		modelTuple{type64: 0x2700000027, matchRI: 0x096f, match64: 0x00000000, model64: 0x885000008859},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x885900008860, model64: 0x88600000886c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0970, match64: 0x00000000, model64: 0x886c00008873},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x88730000887b, model64: 0x887b00008881},
		modelTuple{type64: 0x2700000027, matchRI: 0x0971, match64: 0x00000000, model64: 0x888100008888},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x888800008890, model64: 0x88900000889a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0972, match64: 0x00000000, model64: 0x889a000088a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0973, match64: 0x00000000, model64: 0x88a1000088ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0974, match64: 0x00000000, model64: 0x88ad000088b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0975, match64: 0x00000000, model64: 0x88b8000088bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0976, match64: 0x00000000, model64: 0x88bf000088cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0977, match64: 0x00000000, model64: 0x88cb000088d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0978, match64: 0x00000000, model64: 0x88d6000088e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0979, match64: 0x00000000, model64: 0x88e0000088e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x097a, match64: 0x00000000, model64: 0x88e9000088f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x097b, match64: 0x00000000, model64: 0x88f0000088fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x097c, match64: 0x00000000, model64: 0x88fa00008913},
		modelTuple{type64: 0x2700000027, matchRI: 0x097d, match64: 0x00000000, model64: 0x89130000891f},
		modelTuple{type64: 0x2700000027, matchRI: 0x097e, match64: 0x00000000, model64: 0x891f0000892a},
		modelTuple{type64: 0x2700000027, matchRI: 0x097f, match64: 0x00000000, model64: 0x892a00008938},
		modelTuple{type64: 0x2700000027, matchRI: 0x0980, match64: 0x00000000, model64: 0x893800008947},
		modelTuple{type64: 0x2700000027, matchRI: 0x0981, match64: 0x00000000, model64: 0x894700008952},
		modelTuple{type64: 0x2700000027, matchRI: 0x0982, match64: 0x00000000, model64: 0x89520000895e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0983, match64: 0x00000000, model64: 0x895e00008965},
		modelTuple{type64: 0x2700000027, matchRI: 0x0984, match64: 0x00000000, model64: 0x89650000896d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0985, match64: 0x00000000, model64: 0x896d00008973},
		modelTuple{type64: 0x2700000027, matchRI: 0x0986, match64: 0x00000000, model64: 0x897300008979},
		modelTuple{type64: 0x2700000027, matchRI: 0x0987, match64: 0x00000000, model64: 0x897900008984},
		modelTuple{type64: 0x2700000027, matchRI: 0x0988, match64: 0x00000000, model64: 0x89840000898e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0989, match64: 0x00000000, model64: 0x898e00008995},
		modelTuple{type64: 0x2700000027, matchRI: 0x098a, match64: 0x00000000, model64: 0x8995000089ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x098b, match64: 0x00000000, model64: 0x89ab000089b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x098c, match64: 0x00000000, model64: 0x89b1000089b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x098d, match64: 0x00000000, model64: 0x445a0000445e},
		modelTuple{type64: 0x2700000027, matchRI: 0x098e, match64: 0x00000000, model64: 0x89b8000089c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x098f, match64: 0x00000000, model64: 0x89c1000089ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0990, match64: 0x00000000, model64: 0x89ca000089d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0991, match64: 0x00000000, model64: 0x89d0000089db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0992, match64: 0x00000000, model64: 0x89db000089e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0993, match64: 0x00000000, model64: 0x89e6000089fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0994, match64: 0x00000000, model64: 0x89fa00008a01},
		modelTuple{type64: 0x2700000027, matchRI: 0x0995, match64: 0x00000000, model64: 0x8a0100008a08},
		modelTuple{type64: 0x2700000027, matchRI: 0x0996, match64: 0x00000000, model64: 0x8a0800008a0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0997, match64: 0x00000000, model64: 0x8a0e00008a15},
		modelTuple{type64: 0x2700000027, matchRI: 0x0998, match64: 0x00000000, model64: 0x8a1500008a1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0999, match64: 0x00000000, model64: 0x8a1c00008a22},
		modelTuple{type64: 0x2700000027, matchRI: 0x099a, match64: 0x00000000, model64: 0x8a2200008a29},
		modelTuple{type64: 0x2700000027, matchRI: 0x099b, match64: 0x00000000, model64: 0x8a2900008a2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x099c, match64: 0x00000000, model64: 0x8a2f00008a39},
		modelTuple{type64: 0x2700000027, matchRI: 0x099d, match64: 0x00000000, model64: 0x8a3900008a40},
		modelTuple{type64: 0x2700000027, matchRI: 0x099e, match64: 0x00000000, model64: 0x8a4000008a4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x099f, match64: 0x00000000, model64: 0x8a4b00008a51},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a0, match64: 0x00000000, model64: 0x8a5100008a5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a1, match64: 0x00000000, model64: 0x8a5a00008a63},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a2, match64: 0x00000000, model64: 0x8a6300008a6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a3, match64: 0x00000000, model64: 0x8a6c00008a79},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a4, match64: 0x00000000, model64: 0x8a7900008a85},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a5, match64: 0x00000000, model64: 0x8a8500008a8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a6, match64: 0x00000000, model64: 0x8a8c00008a92},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a7, match64: 0x00000000, model64: 0x8a9200008a99},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a8, match64: 0x00000000, model64: 0x8a9900008aa2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8aa200008aaa, model64: 0x8aaa00008ab6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ab600008abe, model64: 0x8abe00008aca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8aca00008ad2, model64: 0x8ad200008ae4},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a9, match64: 0x00000000, model64: 0x8ae400008af1},
		modelTuple{type64: 0x2700000027, matchRI: 0x09aa, match64: 0x00000000, model64: 0x8af100008afe},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ab, match64: 0x00000000, model64: 0x8afe00008b04},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ac, match64: 0x00000000, model64: 0x8b0400008b0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ad, match64: 0x00000000, model64: 0x8b0e00008b18},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ae, match64: 0x00000000, model64: 0x8b1800008b22},
		modelTuple{type64: 0x2700000027, matchRI: 0x09af, match64: 0x00000000, model64: 0x8b2200008b2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b0, match64: 0x00000000, model64: 0x8b2d00008b35},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b1, match64: 0x00000000, model64: 0x8b3500008b3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b2, match64: 0x00000000, model64: 0x8b3c00008b4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b3, match64: 0x00000000, model64: 0x8b4a00008b58},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b4, match64: 0x00000000, model64: 0x8b5800008b66},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b5, match64: 0x00000000, model64: 0x8b6600008b6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b6, match64: 0x00000000, model64: 0x8b6f00008b72},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b7, match64: 0x00000000, model64: 0x8b7200008b7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b8, match64: 0x00000000, model64: 0x8b7a00008b82},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b9, match64: 0x00000000, model64: 0x8b8200008b8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ba, match64: 0x00000000, model64: 0x8b8c00008b8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x09bb, match64: 0x00000000, model64: 0x8b8f00008b97},
		modelTuple{type64: 0x2700000027, matchRI: 0x09bc, match64: 0x00000000, model64: 0x8b9700008b9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x09bd, match64: 0x00000000, model64: 0x8b9e00008ba1},
		modelTuple{type64: 0x2700000027, matchRI: 0x09be, match64: 0x00000000, model64: 0x8ba100008ba9},
		modelTuple{type64: 0x2700000027, matchRI: 0x09bf, match64: 0x00000000, model64: 0x8ba900008bb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c0, match64: 0x00000000, model64: 0x8bb000008bb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c1, match64: 0x00000000, model64: 0x8bb300008bbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c2, match64: 0x00000000, model64: 0x8bbb00008bc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c3, match64: 0x00000000, model64: 0x8bc500008bd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c4, match64: 0x00000000, model64: 0x8bd300008bda},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c5, match64: 0x00000000, model64: 0x8bda00008be6},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c6, match64: 0x00000000, model64: 0x8be600008be8},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c7, match64: 0x00000000, model64: 0x8be800008bf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c8, match64: 0x00000000, model64: 0x8bf200008c00},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c9, match64: 0x00000000, model64: 0x8c0000008c0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ca, match64: 0x00000000, model64: 0x8c0e00008c10},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cb, match64: 0x00000000, model64: 0x8c1000008c17},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cc, match64: 0x00000000, model64: 0x8c1700008c26},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cd, match64: 0x00000000, model64: 0x8c2600008c32},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ce, match64: 0x00000000, model64: 0x8c3200008c3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cf, match64: 0x00000000, model64: 0x8c3f00008c46},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d0, match64: 0x00000000, model64: 0x8c4600008c4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d1, match64: 0x00000000, model64: 0x8c4d00008c54},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d2, match64: 0x00000000, model64: 0x8c5400008c59},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d3, match64: 0x00000000, model64: 0x8c5900008c5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d4, match64: 0x00000000, model64: 0x8c5c00008c61},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d5, match64: 0x00000000, model64: 0x8c6100008c6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d6, match64: 0x00000000, model64: 0x8c6a00008c73},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d7, match64: 0x00000000, model64: 0x8c7300008c77},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d8, match64: 0x00000000, model64: 0x8c7700008c80},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d9, match64: 0x00000000, model64: 0x8c8000008c89},
		modelTuple{type64: 0x2700000027, matchRI: 0x09da, match64: 0x00000000, model64: 0x8c8900008c92},
		modelTuple{type64: 0x2700000027, matchRI: 0x09db, match64: 0x00000000, model64: 0x8c9200008c99},
		modelTuple{type64: 0x2700000027, matchRI: 0x09dc, match64: 0x00000000, model64: 0x8c9900008c9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09dd, match64: 0x00000000, model64: 0x8c9c00008caa},
		modelTuple{type64: 0x2700000027, matchRI: 0x09de, match64: 0x00000000, model64: 0x8caa00008cb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x09df, match64: 0x00000000, model64: 0x8cb800008cc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e0, match64: 0x00000000, model64: 0x8cc700008cd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e1, match64: 0x00000000, model64: 0x8cd400008cd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e2, match64: 0x00000000, model64: 0x8cd800008cda},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e3, match64: 0x00000000, model64: 0x8cda00008ce3},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e4, match64: 0x00000000, model64: 0x8ce300008cec},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e5, match64: 0x00000000, model64: 0x8cec00008cf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e6, match64: 0x00000000, model64: 0x8cf500008cfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e7, match64: 0x00000000, model64: 0x8cfe00008d0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e8, match64: 0x00000000, model64: 0x8d0d00008d13},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e9, match64: 0x00000000, model64: 0x8d1300008d20},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ea, match64: 0x00000000, model64: 0x8d2000008d24},
		modelTuple{type64: 0x2700000027, matchRI: 0x09eb, match64: 0x00000000, model64: 0x8d2400008d28},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ec, match64: 0x00000000, model64: 0x8d2800008d35},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ed, match64: 0x00000000, model64: 0x8d3500008d39},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ee, match64: 0x00000000, model64: 0x8d3900008d42},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ef, match64: 0x00000000, model64: 0x8d4200008d4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f0, match64: 0x00000000, model64: 0x8d4b00008d54},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f1, match64: 0x00000000, model64: 0x8d5400008d5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f2, match64: 0x00000000, model64: 0x8d5c00008d6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f3, match64: 0x00000000, model64: 0x8d6b00008d78},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f4, match64: 0x00000000, model64: 0x8d7800008d7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f5, match64: 0x00000000, model64: 0x8d6b00008d78},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f6, match64: 0x00000000, model64: 0x8d7f00008d82},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f7, match64: 0x00000000, model64: 0x8d8200008d85},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f8, match64: 0x00000000, model64: 0x8d8500008d88},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f9, match64: 0x00000000, model64: 0x8d8800008d91},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fa, match64: 0x00000000, model64: 0x8d9100008d9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fb, match64: 0x00000000, model64: 0x8d9a00008da9},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fc, match64: 0x00000000, model64: 0x8da900008dac},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fd, match64: 0x00000000, model64: 0x8dac00008db4},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fe, match64: 0x00000000, model64: 0x8db400008db7},
		modelTuple{type64: 0x52100000528, matchRI: 0x09ff, match64: 0x00000000, model64: 0x8db700008dbf},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a00, match64: 0x00000000, model64: 0x8dbf00008dcf},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a01, match64: 0x00000000, model64: 0x8dcf00008de4},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x8de400008dec, model64: 0x8dec00008e00},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a02, match64: 0x00000000, model64: 0x8e0000008e0d},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a03, match64: 0x00000000, model64: 0x8e0d00008e1f},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a04, match64: 0x00000000, model64: 0x8e1f00008e2f},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a05, match64: 0x00000000, model64: 0x8e2f00008e3e},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a06, match64: 0x00000000, model64: 0x8e3e00008e50},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a07, match64: 0x00000000, model64: 0x8e5000008e5d},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a08, match64: 0x00000000, model64: 0x8e5d00008e69},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a09, match64: 0x00000000, model64: 0x8e6900008e7a},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a0a, match64: 0x00000000, model64: 0x8e7a00008e8e},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a0b, match64: 0x00000000, model64: 0x8e8e00008e99},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x8e9900008ea1, model64: 0x8ea100008eb8},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x8eb800008ec1, model64: 0x8ec100008ed6},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x8ed600008edd, model64: 0x8edd00008ef6},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x8ef600008efe, model64: 0x8efe00008f15},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x8f1500008f1d, model64: 0x8f1d00008f32},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a0c, match64: 0x00000000, model64: 0x8f3200008f49},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x8f4900008f53, model64: 0x8f5300008f67},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x8f6700008f70, model64: 0x8f7000008f7c},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x8f7c00008f86, model64: 0x8f8600008f97},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a0d, match64: 0x00000000, model64: 0x8f9700008fa8},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a0e, match64: 0x00000000, model64: 0x8fa800008fbe},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a0f, match64: 0x00000000, model64: 0x8fbe00008fca},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a10, match64: 0x00000000, model64: 0x8fca00008fd6},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a11, match64: 0x00000000, model64: 0x8fd600008fdd},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a12, match64: 0x00000000, model64: 0x8fdd00008feb},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a13, match64: 0x00000000, model64: 0x8feb00008ffe},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a14, match64: 0x00000000, model64: 0x8ffe0000900e},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a15, match64: 0x00000000, model64: 0x900e0000901f},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a16, match64: 0x00000000, model64: 0x901f00009035},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a17, match64: 0x00000000, model64: 0x903500009052},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a18, match64: 0x00000000, model64: 0x905200009066},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a19, match64: 0x00000000, model64: 0x90660000907c},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a1a, match64: 0x00000000, model64: 0x907c0000908d},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a1b, match64: 0x00000000, model64: 0x908d0000909d},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a1c, match64: 0x00000000, model64: 0x909d000090b1},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a1d, match64: 0x00000000, model64: 0x90b1000090c2},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a1e, match64: 0x00000000, model64: 0x90c2000090cd},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a1f, match64: 0x00000000, model64: 0x90cd000090dd},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a20, match64: 0x00000000, model64: 0x90dd000090ec},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a21, match64: 0x00000000, model64: 0x90ec000090fb},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a22, match64: 0x00000000, model64: 0x90fb00009111},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a23, match64: 0x00000000, model64: 0x91110000911e},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a24, match64: 0x00000000, model64: 0x911e0000912e},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a25, match64: 0x00000000, model64: 0x912e00009141},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x914100009149, model64: 0x914900009154},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a26, match64: 0x00000000, model64: 0x91540000915f},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x915f00009169, model64: 0x91690000917f},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x917f0000918a, model64: 0x918a0000919b},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a27, match64: 0x00000000, model64: 0x919b000091a9},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a28, match64: 0x00000000, model64: 0x91a9000091b8},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a29, match64: 0x00000000, model64: 0x91b8000091c5},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a2a, match64: 0x00000000, model64: 0x91c5000091d3},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a2b, match64: 0x00000000, model64: 0x91d3000091e0},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a2c, match64: 0x00000000, model64: 0x91e0000091ed},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a2d, match64: 0x00000000, model64: 0x91ed000091fc},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a2e, match64: 0x00000000, model64: 0x91fc0000920f},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a2f, match64: 0x00000000, model64: 0x920f00009222},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a30, match64: 0x00000000, model64: 0x922200009237},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a31, match64: 0x00000000, model64: 0x923700009245},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a32, match64: 0x00000000, model64: 0x924500009252},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a33, match64: 0x00000000, model64: 0x92520000925f},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x925f00009268, model64: 0x926800009280},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x928000009289, model64: 0x9289000092a0},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x92a0000092a8, model64: 0x92a8000092be},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x92be000092c6, model64: 0x92c6000092db},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a34, match64: 0x00000000, model64: 0x92db000092ec},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a35, match64: 0x00000000, model64: 0x92ec00009305},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a36, match64: 0x00000000, model64: 0x930500009315},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x93150000931e, model64: 0x931e0000932c},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x932c00009334, model64: 0x93340000933d},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x933d00009345, model64: 0x934500009352},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x93520000935b, model64: 0x935b00009363},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x93630000936a, model64: 0x936a0000937f},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x937f00009387, model64: 0x938700009397},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a37, match64: 0x00000000, model64: 0x9397000093a4},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a38, match64: 0x00000000, model64: 0x93a4000093ae},
		modelTuple{type64: 0x1fd200001fda, matchRI: 0x0a39, match64: 0x00000000, model64: 0x93ae000093bb},
		modelTuple{type64: 0x1fd200001fda, matchRI: 0x0a3a, match64: 0x00000000, model64: 0x93bb000093ce},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a3b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3c, match64: 0x00000000, model64: 0x93ce000093d5},
		modelTuple{type64: 0x52100000528, matchRI: 0x0a3d, match64: 0x00000000, model64: 0x93d5000093e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a40, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a42, match64: 0x00000000, model64: 0x93ec000093f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a43, match64: 0x00000000, model64: 0x5eba00005ebe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a44, match64: 0x00000000, model64: 0x93f2000093f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a45, match64: 0x00000000, model64: 0x93f8000093fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x93fc00009401, model64: 0x93fc00009401},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x940100009406, model64: 0x940100009406},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94060000940b, model64: 0x940b00009410},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x941000009414, model64: 0x941400009418},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94180000941c, model64: 0x94180000941c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x941c00009422, model64: 0x941c00009422},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94220000942c, model64: 0x942c00009436},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x943600009440, model64: 0x943600009440},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x944000009449, model64: 0x944000009449},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x944900009457, model64: 0x945700009467},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x946700009471, model64: 0x94710000947c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x947c00009482, model64: 0x947c00009482},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x94880000948f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a48, match64: 0x00000000, model64: 0x9496000094a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a49, match64: 0x00000000, model64: 0x94a7000094af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94af000094b7, model64: 0x94af000094b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94b7000094be, model64: 0x94be000094ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4a, match64: 0x00000000, model64: 0x94ca000094d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94d6000094dd, model64: 0x94dd000094e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94e9000094f0, model64: 0x94f0000094fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94fc00009503, model64: 0x95030000950f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x950f00009515, model64: 0x950f00009515},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95150000951f, model64: 0x95150000951f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x951f0000952b, model64: 0x952b00009537},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4b, match64: 0x00000000, model64: 0x37e2000037e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x953700009540, model64: 0x954000009549},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x954900009553, model64: 0x95530000955d},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x955d00009566, model64: 0x95660000956f},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x956f00009578, model64: 0x95530000955d},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x957800009581, model64: 0x95810000958a},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a4d, match64: 0x00000000, model64: 0x958a00009594},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a4e, match64: 0x00000000, model64: 0x9594000095a3},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a4f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a50, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95a7000095af, model64: 0x95a7000095af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95af000095b3, model64: 0x95b3000095bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95c7000095cd, model64: 0x95cd000095d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95d4000095de, model64: 0x95de000095eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95eb000095f4, model64: 0x95f4000095fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a53, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a55, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a56, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a57, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a58, match64: 0x00000000, model64: 0x96080000960d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5a, match64: 0x00000000, model64: 0x96170000961f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5b, match64: 0x00000000, model64: 0x961f00009626},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5c, match64: 0x00000000, model64: 0x962600009628},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5d, match64: 0x00000000, model64: 0x96280000962a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5e, match64: 0x00000000, model64: 0x962a00009631},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5f, match64: 0x00000000, model64: 0x96310000963a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a60, match64: 0x00000000, model64: 0x963a00009642},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a61, match64: 0x00000000, model64: 0x96420000964d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a62, match64: 0x00000000, model64: 0x964d0000965a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a63, match64: 0x00000000, model64: 0x965a00009663},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a64, match64: 0x00000000, model64: 0x96630000966f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a65, match64: 0x00000000, model64: 0x966f00009679},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a66, match64: 0x00000000, model64: 0x967900009682},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a67, match64: 0x00000000, model64: 0x96820000968b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a68, match64: 0x00000000, model64: 0x968b00009695},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a69, match64: 0x00000000, model64: 0x9695000096a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6a, match64: 0x00000000, model64: 0x96a1000096a2},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a6b, match64: 0x00000000, model64: 0x37d9000037df},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a6c, match64: 0x00000000, model64: 0x96a2000096a8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0a70, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x96b5000096bd, model64: 0x96b5000096bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a73, match64: 0x00000000, model64: 0x67d00000684},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a74, match64: 0x00000000, model64: 0x96c0000096c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a75, match64: 0x00000000, model64: 0x96c7000096cd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x96d0000096da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x96dc000096e8, model64: 0x96e8000096f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a78, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x96fc00009704, model64: 0x97040000971b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x971b00009723, model64: 0x972300009730},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x973000009738, model64: 0x973800009746},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x97460000974e, model64: 0x974e00009761},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7c, match64: 0x00000000, model64: 0x97610000976f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x976f00009777, model64: 0x97770000978a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x978a00009798, model64: 0x9798000097a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x97a8000097b0, model64: 0x97b0000097c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x97c5000097cd, model64: 0x97cd000097dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x97dd000097e5, model64: 0x97e5000097f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x97f800009800, model64: 0x980000009811},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x981100009819, model64: 0x98190000982a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x982a00009832, model64: 0x983200009840},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x984000009848, model64: 0x984800009856},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x98560000985e, model64: 0x985e00009872},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x987200009881, model64: 0x988100009890},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x989000009898, model64: 0x9898000098ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x98ac000098b4, model64: 0x98b4000098c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x98c5000098d1, model64: 0x98d1000098e4},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x98e4000098ec, model64: 0x98ec000098f8},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x98f800009906, model64: 0x990600009914},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x991400009923, model64: 0x992300009932},
		modelTuple{type64: 0x28400000286, matchRI: 0x0a7d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0a7f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0a80, match64: 0x00000000, model64: 0x993c00009946},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a81, match64: 0x00000000, model64: 0x99460000994e},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0a82, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a83, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99550000995b, model64: 0x995b00009962},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x996200009968, model64: 0x11cb000011cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99680000996e, model64: 0x996e0000997a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x997a00009980, model64: 0x998000009982},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x998200009988, model64: 0x99880000998b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x998b00009991, model64: 0x999100009994},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99940000999a, model64: 0x999a000099a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99a2000099a8, model64: 0x99a8000099b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a86, match64: 0x00000000, model64: 0x99b8000099bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a87, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a89, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99bf000099c7, model64: 0x99c7000099cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99cf000099d5, model64: 0x99d5000099db},
		modelTuple{type64: 0x20000000206, matchRI: 0x0a8a, match64: 0x00000000, model64: 0x99db000099e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8b, match64: 0x00000000, model64: 0x99ea000099ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8c, match64: 0x00000000, model64: 0x99ee000099fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8d, match64: 0x00000000, model64: 0x2c9000002ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8e, match64: 0x00000000, model64: 0x99fa00009a04},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8f, match64: 0x00000000, model64: 0x9a0400009a11},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a90, match64: 0x00000000, model64: 0x9a1100009a1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a91, match64: 0x00000000, model64: 0x9a1d00009a27},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a92, match64: 0x00000000, model64: 0x9a2700009a31},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a93, match64: 0x00000000, model64: 0x9a3100009a3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a94, match64: 0x00000000, model64: 0x9a3a00009a3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a95, match64: 0x00000000, model64: 0x9a3e00009a47},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a96, match64: 0x00000000, model64: 0x9a4700009a50},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a97, match64: 0x00000000, model64: 0x9a5000009a5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a98, match64: 0x00000000, model64: 0x9a5b00009a66},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a99, match64: 0x00000000, model64: 0x9a6600009a70},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9a, match64: 0x00000000, model64: 0x9a7000009a78},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9b, match64: 0x00000000, model64: 0x9a7800009a7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9c, match64: 0x00000000, model64: 0x9a7c00009a82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9d, match64: 0x00000000, model64: 0x9a8200009a88},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9e, match64: 0x00000000, model64: 0x9a8800009a8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9f, match64: 0x00000000, model64: 0x9a8e00009a99},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa0, match64: 0x00000000, model64: 0x9a9900009a9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa1, match64: 0x00000000, model64: 0x9a9f00009aa9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa2, match64: 0x00000000, model64: 0x9aa900009aaf},
		modelTuple{type64: 0x52100000528, matchRI: 0x0aa3, match64: 0x00000000, model64: 0x9aaf00009ab6},
		modelTuple{type64: 0x52100000528, matchRI: 0x0aa4, match64: 0x00000000, model64: 0x9ab600009abc},
		modelTuple{type64: 0x52100000528, matchRI: 0x0aa5, match64: 0x00000000, model64: 0x9abc00009ac6},
		modelTuple{type64: 0x52100000528, matchRI: 0x0aa6, match64: 0x00000000, model64: 0x9ac600009ad0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa7, match64: 0x00000000, model64: 0x9ad000009ad3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa8, match64: 0x00000000, model64: 0x9ad300009ad8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa9, match64: 0x00000000, model64: 0x9ad800009add},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aaa, match64: 0x00000000, model64: 0x9add00009ae2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aab, match64: 0x00000000, model64: 0x9ae200009ae8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aac, match64: 0x00000000, model64: 0x9ae800009aed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aad, match64: 0x00000000, model64: 0x9aed00009af6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aae, match64: 0x00000000, model64: 0x9af600009afb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aaf, match64: 0x00000000, model64: 0x9afb00009b05},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab0, match64: 0x00000000, model64: 0x806200008067},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab1, match64: 0x00000000, model64: 0x9b0500009b0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab2, match64: 0x00000000, model64: 0x9b0e00009b13},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab3, match64: 0x00000000, model64: 0x9b1300009b1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab4, match64: 0x00000000, model64: 0x9b1c00009b21},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab5, match64: 0x00000000, model64: 0x9b2100009b2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab6, match64: 0x00000000, model64: 0x9b2a00009b2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab7, match64: 0x00000000, model64: 0x9b2f00009b39},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab8, match64: 0x00000000, model64: 0x9b3900009b45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab9, match64: 0x00000000, model64: 0x9b4500009b4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aba, match64: 0x00000000, model64: 0x9b4c00009b57},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abb, match64: 0x00000000, model64: 0x9b5700009b5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abc, match64: 0x00000000, model64: 0x9b5d00009b64},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abd, match64: 0x00000000, model64: 0x9b6400009b6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b6a00009b77, model64: 0x9b7700009b82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b8200009b8e, model64: 0x9b8e00009b95},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abe, match64: 0x00000000, model64: 0x9b9500009b9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abf, match64: 0x00000000, model64: 0x9b9c00009ba2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac0, match64: 0x00000000, model64: 0x9ba200009ba9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac1, match64: 0x00000000, model64: 0x9b6400009b6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac2, match64: 0x00000000, model64: 0x9ba900009bb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac3, match64: 0x00000000, model64: 0x9bb800009bbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac4, match64: 0x00000000, model64: 0x9bbd00009bc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac5, match64: 0x00000000, model64: 0x9bc400009bce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac6, match64: 0x00000000, model64: 0x9bce00009bda},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac7, match64: 0x00000000, model64: 0x9bda00009be5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac8, match64: 0x00000000, model64: 0x9b4500009b4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac9, match64: 0x00000000, model64: 0x9be500009bec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aca, match64: 0x00000000, model64: 0x9bec00009bf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0acb, match64: 0x00000000, model64: 0x9bf300009bfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0acc, match64: 0x00000000, model64: 0x9bfa00009bfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0acd, match64: 0x00000000, model64: 0x9bfc00009bfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ace, match64: 0x00000000, model64: 0x741a00007420},
		modelTuple{type64: 0x52100000528, matchRI: 0x0acf, match64: 0x00000000, model64: 0x9bfe00009c06},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ad0, match64: 0x00000000, model64: 0x9c0600009c0c},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ad1, match64: 0x00000000, model64: 0x51ee000051f4},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ad2, match64: 0x00000000, model64: 0x9c0c00009c12},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ad3, match64: 0x00000000, model64: 0x9c1200009c1c},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ad4, match64: 0x00000000, model64: 0x9c1c00009c22},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ad5, match64: 0x00000000, model64: 0x9c2200009c2f},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ad6, match64: 0x00000000, model64: 0x9c2f00009c35},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ad7, match64: 0x00000000, model64: 0x442000004426},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ad8, match64: 0x00000000, model64: 0x9c3500009c40},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ad9, match64: 0x00000000, model64: 0x9c4000009c46},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ada, match64: 0x00000000, model64: 0x9c4600009c4d},
		modelTuple{type64: 0x52100000528, matchRI: 0x0adb, match64: 0x00000000, model64: 0x9c4d00009c58},
		modelTuple{type64: 0x52100000528, matchRI: 0x0adc, match64: 0x00000000, model64: 0x9c5800009c5f},
		modelTuple{type64: 0x52100000528, matchRI: 0x0add, match64: 0x00000000, model64: 0x9c5f00009c66},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ade, match64: 0x00000000, model64: 0x9c6600009c71},
		modelTuple{type64: 0x2700000027, matchRI: 0x0adf, match64: 0x00000000, model64: 0x9c7100009c79},
		modelTuple{type64: 0x20000000206, matchRI: 0x0ae0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae6, match64: 0x00000000, model64: 0x9c8b00009c8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae7, match64: 0x00000000, model64: 0x9c8d00009c97},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae8, match64: 0x00000000, model64: 0x9c9700009c98},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae9, match64: 0x00000000, model64: 0x9c9800009ca1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aea, match64: 0x00000000, model64: 0x9ca100009cb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aeb, match64: 0x00000000, model64: 0x9cb000009cb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aec, match64: 0x00000000, model64: 0x9cb600009cbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aed, match64: 0x00000000, model64: 0x9cbf00009cc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aee, match64: 0x00000000, model64: 0x9cc400009cca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aef, match64: 0x00000000, model64: 0x9cca00009ccf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ccf00009cdd, model64: 0x9cdd00009cec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9cec00009cf7, model64: 0x9cf700009d02},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9d1100009d17},
		modelTuple{type64: 0x20000000206, matchRI: 0x0af3, match64: 0x00000000, model64: 0x9d1f00009d2c},
		modelTuple{type64: 0x20000000206, matchRI: 0x0af4, match64: 0x00000000, model64: 0x9d2c00009d34},
		modelTuple{type64: 0x20000000206, matchRI: 0x0af5, match64: 0x00000000, model64: 0x9d3400009d46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9d4600009d54, model64: 0x9d5400009d5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af6, match64: 0x00000000, model64: 0x9d5e00009d6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af7, match64: 0x00000000, model64: 0x3a5c00003a63},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af8, match64: 0x00000000, model64: 0x54870000548e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af9, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9d7200009d7d, model64: 0x9d7d00009d82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afb, match64: 0x00000000, model64: 0x9d8200009d8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9d8c00009d96, model64: 0x9d9600009d9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9d9d00009da8, model64: 0x9da800009daa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afc, match64: 0x00000000, model64: 0x9daa00009daf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9daf00009dbc, model64: 0x9dbc00009dcc},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x9dcc00009dd6, model64: 0x9dd600009ddf},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x9ddf00009de8, model64: 0x9de800009df1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9df600009dfe, model64: 0x9dfe00009e0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afe, match64: 0x00000000, model64: 0x9e0a00009e1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aff, match64: 0x00000000, model64: 0x9e1c00009e29},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b00, match64: 0x00000000, model64: 0x9e2900009e35},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b01, match64: 0x00000000, model64: 0x9e3500009e3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b02, match64: 0x00000000, model64: 0x9e3c00009e4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b03, match64: 0x00000000, model64: 0x9e4d00009e5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b04, match64: 0x00000000, model64: 0x9e5a00009e66},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b05, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b06, match64: 0x00000000, model64: 0x9e6600009e71},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b07, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b08, match64: 0x00000000, model64: 0x4a9300004a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b09, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9e7c00009e82, model64: 0x9e8200009e89},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0b0f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b11, match64: 0x00000000, model64: 0x9e9200009e99},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b12, match64: 0x00000000, model64: 0x9e9900009ea3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b13, match64: 0x00000000, model64: 0x9ea300009eab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9eab00009eb9, model64: 0x9eb900009ec7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ec700009ed5, model64: 0x9ed500009ee3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ee300009eec, model64: 0x9eec00009ef5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ef500009eff, model64: 0x9eff00009f09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f0900009f15, model64: 0x9f1500009f21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f2100009f2c, model64: 0x9f2c00009f37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f3700009f41, model64: 0x9f4100009f4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b14, match64: 0x00000000, model64: 0x9f4b00009f53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f5300009f5c, model64: 0x9f5c00009f60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f6000009f64, model64: 0x9f6000009f64},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f6400009f6b, model64: 0x9f6b00009f72},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b16, match64: 0x00000000, model64: 0x9f7a00009f86},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b17, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x0b1c, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20000000206, matchRI: 0x0b1d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x9f9500009f9e, model64: 0x9f9500009f9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f9e00009fa8, model64: 0x9f9e00009fa8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b20, match64: 0x00000000, model64: 0x9fac00009fb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b21, match64: 0x00000000, model64: 0x9fb400009fb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9fbd00009fc4, model64: 0x9fc400009fcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b23, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9fd000009fd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b26, match64: 0x00000000, model64: 0x9fda00009fdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b27, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b28, match64: 0x00000000, model64: 0x9fdf00009fe4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2a, match64: 0x00000000, model64: 0x9fe900009ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2b, match64: 0x00000000, model64: 0x9ff100009ff9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2c, match64: 0x00000000, model64: 0x9ff90000a000},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2d, match64: 0x00000000, model64: 0xa0000000a006},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2e, match64: 0x00000000, model64: 0xa0060000a00f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2f, match64: 0x00000000, model64: 0xa00f0000a016},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b30, match64: 0x00000000, model64: 0xa0160000a01f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b31, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b32, match64: 0x00000000, model64: 0xa01f0000a027},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b33, match64: 0x00000000, model64: 0xa0270000a02f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b34, match64: 0x00000000, model64: 0xa02f0000a038},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b35, match64: 0x00000000, model64: 0xa0380000a03d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b36, match64: 0x00000000, model64: 0xa03d0000a049},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b37, match64: 0x00000000, model64: 0xa0490000a04d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b38, match64: 0x00000000, model64: 0xa04d0000a052},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b39, match64: 0x00000000, model64: 0xa0520000a05b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3a, match64: 0x00000000, model64: 0xa05b0000a068},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3b, match64: 0x00000000, model64: 0xa0680000a070},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3c, match64: 0x00000000, model64: 0xa0700000a07e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3d, match64: 0x00000000, model64: 0xa07e0000a084},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3e, match64: 0x00000000, model64: 0xa0840000a08a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b41, match64: 0x00000000, model64: 0xa08d0000a09a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b43, match64: 0x00000000, model64: 0xa09e0000a0ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b44, match64: 0x00000000, model64: 0xa0ab0000a0ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b45, match64: 0x00000000, model64: 0xa0ba0000a0d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b46, match64: 0x00000000, model64: 0xa0d00000a0d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b48, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xa0e70000a0ef},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xa1070000a110, model64: 0xa1100000a113},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4b, match64: 0x00000000, model64: 0xa1180000a120},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4c, match64: 0x00000000, model64: 0xa1200000a12a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa12a0000a131, model64: 0xa12a0000a131},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4d, match64: 0x00000000, model64: 0xa1310000a13a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4e, match64: 0x00000000, model64: 0xa13a0000a142},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1420000a14d, model64: 0xa14d0000a153},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1530000a15c, model64: 0xa15c0000a165},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1650000a16c, model64: 0xa16c0000a173},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa17a0000a185, model64: 0xa17a0000a185},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b50, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b51, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b54, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0b55, match64: 0x00000000, model64: 0xa18e0000a19d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b57, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b58, match64: 0x00000000, model64: 0xa1a50000a1ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0b5e, match64: 0x00000000, model64: 0x26c00000271},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b60, match64: 0x00000000, model64: 0xa1b90000a1bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b61, match64: 0x00000000, model64: 0xa1bc0000a1be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1c30000a1ca, model64: 0xa1ca0000a1d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b63, match64: 0x00000000, model64: 0xa1d20000a1d8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xa1e90000a1f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1fa0000a201, model64: 0xa1fa0000a201},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2010000a20f, model64: 0xa2010000a20f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa20f0000a21a, model64: 0xa21a0000a225},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2250000a22f, model64: 0xa22f0000a239},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b68, match64: 0x00000000, model64: 0xa2390000a246},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2460000a24f, model64: 0xa24f0000a258},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2580000a265, model64: 0xa2650000a272},
		modelTuple{type64: 0x20000000206, matchRI: 0x0b69, match64: 0x00000000, model64: 0xa2720000a27a},
		modelTuple{type64: 0x28400000286, matchRI: 0x0b6a, match64: 0x00000000, model64: 0xa27a0000a287},
		modelTuple{type64: 0x28400000286, matchRI: 0x0b6b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa28c0000a293, model64: 0xa2930000a299},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2990000a2a1, model64: 0xa2a10000a2a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2a60000a2ad, model64: 0xa2ad0000a2b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2b50000a2bc, model64: 0xa2bc0000a2c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2c30000a2cc, model64: 0xa2cc0000a2d0},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0xa2d00000a2da, model64: 0xa2da0000a2e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2e90000a2f5, model64: 0xa2e90000a2f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2f50000a300, model64: 0xa2f50000a300},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3000000a30c, model64: 0xa30c0000a314},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3140000a31f, model64: 0xa3140000a31f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa31f0000a32d, model64: 0xa31f0000a32d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa32d0000a33a, model64: 0xa32d0000a33a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6e, match64: 0x00000000, model64: 0xa33a0000a347},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa30c0000a314, model64: 0xa30c0000a314},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3470000a350, model64: 0xa3470000a350},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6f, match64: 0x00000000, model64: 0xa3500000a35e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa35e0000a36d, model64: 0xa35e0000a36d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa36d0000a37f, model64: 0xa36d0000a37f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa37f0000a38d, model64: 0xa37f0000a38d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa38d0000a398, model64: 0xa38d0000a398},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3980000a3a6, model64: 0xa3980000a3a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b70, match64: 0x00000000, model64: 0xa3a60000a3b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3b20000a3ba, model64: 0xa3ba0000a3c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3c30000a3ce, model64: 0xa3ce0000a3e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3e40000a3eb, model64: 0xa3eb0000a3fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b71, match64: 0x00000000, model64: 0xa3fc0000a40c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa40c0000a41b, model64: 0xa41b0000a42b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b72, match64: 0x00000000, model64: 0xa42b0000a437},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4370000a448, model64: 0xa4370000a448},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4480000a458, model64: 0xa4480000a458},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4580000a466, model64: 0xa4580000a466},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b73, match64: 0x00000000, model64: 0xa4660000a475},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4750000a487, model64: 0xa4750000a487},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4870000a49b, model64: 0xa4870000a49b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b74, match64: 0x00000000, model64: 0xa49b0000a4ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4ab0000a4b2, model64: 0xa4b20000a4c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4c30000a4cc, model64: 0xa4cc0000a4d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4d50000a4de, model64: 0xa4d50000a4de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b75, match64: 0x00000000, model64: 0xa4de0000a4ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b76, match64: 0x00000000, model64: 0xa4ec0000a4fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b77, match64: 0x00000000, model64: 0xa4fb0000a509},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0b78, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0b79, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7f, match64: 0x00000000, model64: 0xa50d0000a50f},
		modelTuple{type64: 0x20000000206, matchRI: 0x0b80, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0b81, match64: 0x00000000, model64: 0xa50f0000a517},
		modelTuple{type64: 0x28400000286, matchRI: 0x0b82, match64: 0x00000000, model64: 0xa5170000a51c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5210000a52c, model64: 0xa5210000a52c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa52c0000a538, model64: 0xa52c0000a538},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b84, match64: 0x00000000, model64: 0xa5380000a544},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b85, match64: 0x00000000, model64: 0xa5440000a552},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b86, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5580000a55f, model64: 0xa55f0000a56b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b88, match64: 0x00000000, model64: 0xa57c0000a585},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b89, match64: 0x00000000, model64: 0xa5850000a593},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5930000a59b, model64: 0xa59b0000a5a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5a40000a5ae, model64: 0x3e4000003e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5ae0000a5b8, model64: 0xa5b80000a5ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5ba0000a5c3, model64: 0x9c9700009c98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5c30000a5d1, model64: 0xa5d10000a5d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5d70000a5e0, model64: 0x7c5700007c58},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8c, match64: 0x00000000, model64: 0xa5e70000a5ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8d, match64: 0x00000000, model64: 0x64c4000064c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8e, match64: 0x00000000, model64: 0xa5ee0000a5f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8f, match64: 0x00000000, model64: 0xa5f10000a5f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b90, match64: 0x00000000, model64: 0xa5f50000a5fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b91, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xa6020000a615},
		modelTuple{type64: 0x20000000206, matchRI: 0x0b94, match64: 0x00000000, model64: 0xa61a0000a625},
		modelTuple{type64: 0x20000000206, matchRI: 0x0b95, match64: 0x00000000, model64: 0xa6250000a636},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b96, match64: 0x00000000, model64: 0xa6360000a649},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b97, match64: 0x00000000, model64: 0xa6490000a658},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6580000a662, model64: 0xa6620000a672},
		modelTuple{type64: 0x20000000206, matchRI: 0x0b98, match64: 0x00000000, model64: 0xa6720000a677},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b99, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9e, match64: 0x00000000, model64: 0xa68a0000a694},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba1, match64: 0x00000000, model64: 0xa6980000a69e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0ba5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba7, match64: 0x00000000, model64: 0xa6aa0000a6af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba8, match64: 0x00000000, model64: 0xa6af0000a6b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba9, match64: 0x00000000, model64: 0xa6b30000a6b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0baa, match64: 0x00000000, model64: 0xa6b30000a6b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bab, match64: 0x00000000, model64: 0xa6b60000a6bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bac, match64: 0x00000000, model64: 0xa6b30000a6b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bad, match64: 0x00000000, model64: 0xa6b30000a6b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bae, match64: 0x00000000, model64: 0xa6bb0000a6bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0baf, match64: 0x00000000, model64: 0xa6bf0000a6c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb0, match64: 0x00000000, model64: 0xa6b30000a6b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb1, match64: 0x00000000, model64: 0xa6c50000a6ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb2, match64: 0x00000000, model64: 0xa6ca0000a6cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6d40000a6d7, model64: 0xa6d40000a6d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb6, match64: 0x00000000, model64: 0xa6d70000a6df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb7, match64: 0x00000000, model64: 0xa6df0000a6e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb8, match64: 0x00000000, model64: 0xa6e40000a6f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb9, match64: 0x00000000, model64: 0xa6f30000a6fe},
		modelTuple{type64: 0x20000000206, matchRI: 0x0bba, match64: 0x00000000, model64: 0xa6fe0000a707},
		modelTuple{type64: 0x28400000286, matchRI: 0x0bbb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbc, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbf, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7150000a71b, model64: 0xa71b0000a725},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7250000a729, model64: 0xa7290000a732},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc2, match64: 0x00000000, model64: 0xa7320000a73b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa73b0000a73f, model64: 0xa73f0000a749},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0bc4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc6, match64: 0x00000000, model64: 0xa74f0000a756},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc7, match64: 0x00000000, model64: 0xa7560000a75c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc8, match64: 0x00000000, model64: 0xa75c0000a763},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc9, match64: 0x00000000, model64: 0xa7630000a76c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bca, match64: 0x00000000, model64: 0xa76c0000a772},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcb, match64: 0x00000000, model64: 0xa7720000a778},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcc, match64: 0x00000000, model64: 0x7d3b00007d42},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcd, match64: 0x00000000, model64: 0xa7780000a77f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bce, match64: 0x00000000, model64: 0xa77f0000a785},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcf, match64: 0x00000000, model64: 0xa7850000a78c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xa79f0000a7aa},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7c20000a7cb, model64: 0xa7cb0000a7d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7d60000a7e1, model64: 0xa7e10000a7ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd7, match64: 0x00000000, model64: 0xa7ec0000a7f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7f30000a803, model64: 0xa7f30000a803},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd8, match64: 0x00000000, model64: 0xa8030000a80b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd9, match64: 0x00000000, model64: 0xa80b0000a817},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bda, match64: 0x00000000, model64: 0xa8170000a822},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdb, match64: 0x00000000, model64: 0xa8220000a829},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdc, match64: 0x00000000, model64: 0xa8290000a832},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdd, match64: 0x00000000, model64: 0xa8320000a838},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bde, match64: 0x00000000, model64: 0xa8380000a841},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdf, match64: 0x00000000, model64: 0xa8410000a84c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be0, match64: 0x00000000, model64: 0xa84c0000a857},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be1, match64: 0x00000000, model64: 0xa8570000a85f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be2, match64: 0x00000000, model64: 0xa85f0000a866},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be3, match64: 0x00000000, model64: 0xa8660000a86c},
		modelTuple{type64: 0x20000000206, matchRI: 0x0be4, match64: 0x00000000, model64: 0xa86c0000a87a},
		modelTuple{type64: 0x20000000206, matchRI: 0x0be5, match64: 0x00000000, model64: 0xa87a0000a888},
		modelTuple{type64: 0x20000000206, matchRI: 0x0be6, match64: 0x00000000, model64: 0xa86c0000a87a},
		modelTuple{type64: 0x20000000206, matchRI: 0x0be7, match64: 0x00000000, model64: 0xa8880000a895},
		modelTuple{type64: 0x20000000206, matchRI: 0x0be8, match64: 0x00000000, model64: 0xa8950000a8a2},
		modelTuple{type64: 0x20000000206, matchRI: 0x0be9, match64: 0x00000000, model64: 0xa8a20000a8af},
		modelTuple{type64: 0x28400000286, matchRI: 0x0bea, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bee, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bef, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0bf1, match64: 0x00000000, model64: 0xa8c30000a8cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf3, match64: 0x00000000, model64: 0xa8d60000a8dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf4, match64: 0x00000000, model64: 0xa8dc0000a8e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf5, match64: 0x00000000, model64: 0xa8e20000a8e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf6, match64: 0x00000000, model64: 0xa8e80000a8ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf7, match64: 0x00000000, model64: 0xa8ee0000a8f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf8, match64: 0x00000000, model64: 0xa8f20000a8f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf9, match64: 0x00000000, model64: 0xa8f90000a900},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfa, match64: 0x00000000, model64: 0xa9000000a907},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfb, match64: 0x00000000, model64: 0xa9070000a90e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfc, match64: 0x00000000, model64: 0xa90e0000a915},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfd, match64: 0x00000000, model64: 0xa9150000a91a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfe, match64: 0x00000000, model64: 0xa91a0000a926},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bff, match64: 0x00000000, model64: 0xa9260000a931},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c00, match64: 0x00000000, model64: 0xa9310000a939},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c01, match64: 0x00000000, model64: 0xa9390000a941},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c02, match64: 0x00000000, model64: 0xa9410000a94b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c03, match64: 0x00000000, model64: 0xa94b0000a950},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c04, match64: 0x00000000, model64: 0xa9500000a95a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c05, match64: 0x00000000, model64: 0xa95a0000a964},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9640000a969, model64: 0xa9690000a973},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9730000a978, model64: 0xa9780000a983},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9830000a989, model64: 0xa9890000a993},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c06, match64: 0x00000000, model64: 0xa9930000a99d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa99d0000a9a2, model64: 0xa9a20000a9ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c07, match64: 0x00000000, model64: 0xa9ad0000a9b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c08, match64: 0x00000000, model64: 0xa9b60000a9c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c09, match64: 0x00000000, model64: 0xa9c30000a9d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9d20000a9d7, model64: 0xa9d70000a9e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9e90000a9f0, model64: 0xa9f00000a9f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9f60000a9fb, model64: 0xa9fb0000aa04},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0a, match64: 0x00000000, model64: 0xaa040000aa0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0b, match64: 0x00000000, model64: 0xaa0b0000aa11},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0c, match64: 0x00000000, model64: 0xaa110000aa1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0d, match64: 0x00000000, model64: 0xaa1b0000aa2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0e, match64: 0x00000000, model64: 0xaa2c0000aa33},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0f, match64: 0x00000000, model64: 0xaa330000aa3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c10, match64: 0x00000000, model64: 0xaa3d0000aa47},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c11, match64: 0x00000000, model64: 0xaa470000aa54},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c12, match64: 0x00000000, model64: 0xaa540000aa5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c13, match64: 0x00000000, model64: 0xaa5e0000aa68},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c14, match64: 0x00000000, model64: 0xaa680000aa72},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c15, match64: 0x00000000, model64: 0xaa720000aa7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c16, match64: 0x00000000, model64: 0xaa7c0000aa81},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c17, match64: 0x00000000, model64: 0xaa810000aa88},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c18, match64: 0x00000000, model64: 0xaa880000aa8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c19, match64: 0x00000000, model64: 0xaa8f0000aa9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1a, match64: 0x00000000, model64: 0xaa9c0000aaa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1b, match64: 0x00000000, model64: 0xaaa50000aab1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1c, match64: 0x00000000, model64: 0xaab10000aabd},
		modelTuple{type64: 0x20000000206, matchRI: 0x0c1d, match64: 0x00000000, model64: 0xaabd0000aac9},
		modelTuple{type64: 0x20000000206, matchRI: 0x0c1e, match64: 0x00000000, model64: 0xaac90000aad4},
		modelTuple{type64: 0x20000000206, matchRI: 0x0c1f, match64: 0x00000000, model64: 0xaad40000aade},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c20, match64: 0x00000000, model64: 0xaade0000aae3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c21, match64: 0x00000000, model64: 0xaae30000aaee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c22, match64: 0x00000000, model64: 0xaaee0000aaf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c23, match64: 0x00000000, model64: 0xaaf80000ab02},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c24, match64: 0x00000000, model64: 0xab020000ab0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c25, match64: 0x00000000, model64: 0xab0c0000ab16},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c26, match64: 0x00000000, model64: 0xab160000ab20},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c27, match64: 0x00000000, model64: 0xab200000ab2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c28, match64: 0x00000000, model64: 0xab2a0000ab36},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c29, match64: 0x00000000, model64: 0xab360000ab3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2a, match64: 0x00000000, model64: 0xab3c0000ab45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2b, match64: 0x00000000, model64: 0xab450000ab4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2c, match64: 0x00000000, model64: 0xab4e0000ab52},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2e, match64: 0x00000000, model64: 0xab520000ab60},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2f, match64: 0x00000000, model64: 0xab600000ab70},
		modelTuple{type64: 0x9f700000a04, matchRI: -0x0001, match64: 0xab700000ab75, model64: 0xab750000ab7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c30, match64: 0x00000000, model64: 0xab7a0000ab7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c31, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c32, match64: 0x00000000, model64: 0xab7f0000ab84},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xab8e0000ab96, model64: 0xab960000ab9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xab9e0000aba7, model64: 0xab9e0000aba7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaba70000abad, model64: 0xabad0000abb3},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xabb30000abbc, model64: 0xabbc0000abc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c36, match64: 0x00000000, model64: 0xabca0000abd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c37, match64: 0x00000000, model64: 0xabd60000abe1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c38, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3b, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3e, match64: 0x00000000, model64: 0xabef0000ac02},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3f, match64: 0x00000000, model64: 0xac020000ac05},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c40, match64: 0x00000000, model64: 0xac050000ac08},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c41, match64: 0x00000000, model64: 0xac080000ac0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac0b0000ac12, model64: 0xac120000ac15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac150000ac1e, model64: 0xac1e0000ac25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac250000ac2c, model64: 0xac2c0000ac2f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac2f0000ac36, model64: 0xac360000ac39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac390000ac40, model64: 0xac400000ac44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac440000ac4b, model64: 0xac4b0000ac4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac4e0000ac58, model64: 0xac580000ac61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac610000ac69, model64: 0x6ba600006bad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac690000ac73, model64: 0xac730000ac79},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac790000ac82, model64: 0xac820000ac90},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac900000ac98, model64: 0xac980000aca7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaca70000acae, model64: 0xacae0000acb7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xacb70000acbe, model64: 0xacbe0000acc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c42, match64: 0x00000000, model64: 0xacc70000acc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c43, match64: 0x00000000, model64: 0xacc90000acd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c44, match64: 0x00000000, model64: 0xacd00000acd2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xacd20000acd9, model64: 0xacd90000acdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c45, match64: 0x00000000, model64: 0xacdc0000ace5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c46, match64: 0x00000000, model64: 0xace50000acec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xacec0000acf3, model64: 0xacf30000acfc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xacfc0000ad03, model64: 0xad030000ad06},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c47, match64: 0x00000000, model64: 0xad060000ad08},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c48, match64: 0x00000000, model64: 0xad080000ad0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c49, match64: 0x00000000, model64: 0xad0b0000ad14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad140000ad1b, model64: 0xad1b0000ad1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad1e0000ad25, model64: 0xad250000ad2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4a, match64: 0x00000000, model64: 0xad2c0000ad2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4b, match64: 0x00000000, model64: 0xad2e0000ad33},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4c, match64: 0x00000000, model64: 0xad330000ad35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad350000ad3c, model64: 0xad3c0000ad42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad420000ad49, model64: 0xad490000ad4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4d, match64: 0x00000000, model64: 0xad4f0000ad55},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad550000ad5c, model64: 0xad5c0000ad64},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4e, match64: 0x00000000, model64: 0xad640000ad6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4f, match64: 0x00000000, model64: 0x828600008288},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad6e0000ad75, model64: 0xad750000ad7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad7e0000ad85, model64: 0xad850000ad8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c50, match64: 0x00000000, model64: 0xad750000ad7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c51, match64: 0x00000000, model64: 0xad8e0000ad9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c52, match64: 0x00000000, model64: 0xad9d0000ada0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xada00000ada7, model64: 0xada70000adaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c53, match64: 0x00000000, model64: 0xadaa0000adad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xadad0000adb4, model64: 0xadb40000adb7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xadb70000adbd, model64: 0xadbd0000adc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xadc70000adce, model64: 0xadce0000add5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c54, match64: 0x00000000, model64: 0xadd50000adda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xadda0000ade1, model64: 0xade10000ade7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c55, match64: 0x00000000, model64: 0xade70000adee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c56, match64: 0x00000000, model64: 0xadee0000adf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c57, match64: 0x00000000, model64: 0xadf50000adfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c58, match64: 0x00000000, model64: 0xadfb0000ae00},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c59, match64: 0x00000000, model64: 0x9a7800009a7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5a, match64: 0x00000000, model64: 0xae000000ae07},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5b, match64: 0x00000000, model64: 0xae070000ae0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5c, match64: 0x00000000, model64: 0xae0b0000ae10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae100000ae19, model64: 0xae190000ae1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5d, match64: 0x00000000, model64: 0xae1d0000ae21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae210000ae29, model64: 0xae290000ae2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5e, match64: 0x00000000, model64: 0xae2e0000ae39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae390000ae40, model64: 0xae400000ae49},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5f, match64: 0x00000000, model64: 0xae490000ae56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae560000ae5e, model64: 0xae5e0000ae6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c60, match64: 0x00000000, model64: 0xae6b0000ae78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae780000ae80, model64: 0xae800000ae92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae920000ae99, model64: 0xae990000aea6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c61, match64: 0x00000000, model64: 0xaea60000aeb3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaeb30000aeba, model64: 0xaeba0000aec4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaec40000aecb, model64: 0xaecb0000aed5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c62, match64: 0x00000000, model64: 0xaed50000aee2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c63, match64: 0x00000000, model64: 0xaee20000aeef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c64, match64: 0x00000000, model64: 0xaeef0000aefc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c65, match64: 0x00000000, model64: 0xaefc0000af0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c66, match64: 0x00000000, model64: 0xaf0d0000af1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaf1e0000af23, model64: 0xaf230000af37},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c67, match64: 0x00000000, model64: 0xaf370000af3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c68, match64: 0x00000000, model64: 0xaf3a0000af47},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaf470000af4c, model64: 0xaf4c0000af54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaf540000af5b, model64: 0xaf5b0000af63},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c69, match64: 0x00000000, model64: 0xaf630000af6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c6a, match64: 0x00000000, model64: 0xaf6b0000af78},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c6b, match64: 0x00000000, model64: 0xaf780000af7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c6c, match64: 0x00000000, model64: 0xaf7a0000af7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c6d, match64: 0x00000000, model64: 0xaf7d0000af80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c6e, match64: 0x00000000, model64: 0xaf800000af82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c6f, match64: 0x00000000, model64: 0xaf820000af84},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c70, match64: 0x00000000, model64: 0xaf840000af87},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c71, match64: 0x00000000, model64: 0xaf870000af8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c72, match64: 0x00000000, model64: 0xaf8a0000af96},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c73, match64: 0x00000000, model64: 0xaf960000af9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c74, match64: 0x00000000, model64: 0xaf9b0000afa2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xafa20000afa9, model64: 0xafa90000afb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c75, match64: 0x00000000, model64: 0xafb00000afb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c76, match64: 0x00000000, model64: 0xafb90000afc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c77, match64: 0x00000000, model64: 0xafc50000afcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c78, match64: 0x00000000, model64: 0xafcc0000afd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c79, match64: 0x00000000, model64: 0xafd30000afda},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7a, match64: 0x00000000, model64: 0xafda0000afe6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7b, match64: 0x00000000, model64: 0xafe60000afed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7c, match64: 0x00000000, model64: 0xafed0000aff4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7d, match64: 0x00000000, model64: 0xaff40000affb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7e, match64: 0x00000000, model64: 0xaffb0000b003},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0030000b00a, model64: 0xb00a0000b011},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0110000b01a, model64: 0xb01a0000b023},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7f, match64: 0x00000000, model64: 0xb0230000b02e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c80, match64: 0x00000000, model64: 0xb02e0000b03e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c81, match64: 0x00000000, model64: 0xb03e0000b04d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb04d0000b054, model64: 0xb0540000b057},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0570000b060, model64: 0xb0600000b063},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c82, match64: 0x00000000, model64: 0xb0630000b066},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0660000b06e, model64: 0xb06e0000b076},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0760000b07e, model64: 0xb07e0000b07f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb07f0000b087, model64: 0xb0870000b089},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c83, match64: 0x00000000, model64: 0xb0890000b08e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c84, match64: 0x00000000, model64: 0xb08e0000b096},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c85, match64: 0x00000000, model64: 0xb0960000b09d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb09d0000b0a5, model64: 0xb0a50000b0ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c86, match64: 0x00000000, model64: 0xb0ab0000b0b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c87, match64: 0x00000000, model64: 0xb0b30000b0bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0bc0000b0c5, model64: 0xb0c50000b0ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c88, match64: 0x00000000, model64: 0xb0ce0000b0d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c89, match64: 0x00000000, model64: 0xb0d00000b0d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c8a, match64: 0x00000000, model64: 0xb0d30000b0d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c8b, match64: 0x00000000, model64: 0xb0d60000b0d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0d90000b0e1, model64: 0xb0e10000b0e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0e40000b0ed, model64: 0xb0ed0000b0f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0f00000b0f9, model64: 0xb0f90000b100},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1000000b10a, model64: 0xb10a0000b10d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb10d0000b116, model64: 0xb1160000b119},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1190000b120, model64: 0xb1200000b12d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb12d0000b134, model64: 0xb1340000b13b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb13b0000b142, model64: 0xb1420000b145},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1450000b14c, model64: 0xb14c0000b150},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1500000b157, model64: 0xb1500000b157},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1570000b15f, model64: 0xae190000ae1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb15f0000b168, model64: 0xb1680000b16c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb16c0000b174, model64: 0xb1740000b17d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c8c, match64: 0x00000000, model64: 0xa1bc0000a1be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c8d, match64: 0x00000000, model64: 0xb17d0000b183},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c8e, match64: 0x00000000, model64: 0xb1830000b18c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb18c0000b193, model64: 0xb1930000b196},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c8f, match64: 0x00000000, model64: 0xb1960000b19a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb19a0000b1a1, model64: 0xb1a10000b1a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1a50000b1ac, model64: 0xb1ac0000b1ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1ae0000b1b5, model64: 0xb1b50000b1b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c90, match64: 0x00000000, model64: 0xb1b90000b1bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1bc0000b1c1, model64: 0xb1c10000b1c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1c60000b1cb, model64: 0xb1cb0000b1cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c91, match64: 0x00000000, model64: 0x5a6600005a68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1cf0000b1d8, model64: 0xb1d80000b1da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1da0000b1e2, model64: 0xb1e20000b1eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c92, match64: 0x00000000, model64: 0xb1eb0000b1f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c93, match64: 0x00000000, model64: 0xb1f10000b1f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c94, match64: 0x00000000, model64: 0xb1f90000b201},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c95, match64: 0x00000000, model64: 0xb2010000b20a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c96, match64: 0x00000000, model64: 0xb20a0000b213},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c97, match64: 0x00000000, model64: 0xb2130000b21c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb21c0000b224, model64: 0xb2240000b22e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb22e0000b236, model64: 0xb2360000b239},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2390000b241, model64: 0xb2410000b247},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c98, match64: 0x00000000, model64: 0xb2470000b24a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c99, match64: 0x00000000, model64: 0xb24a0000b253},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2530000b25d, model64: 0xb25d0000b260},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9a, match64: 0x00000000, model64: 0xb2600000b265},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9b, match64: 0x00000000, model64: 0xb2650000b269},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9c, match64: 0x00000000, model64: 0xb2690000b272},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9d, match64: 0x00000000, model64: 0xaf370000af3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9e, match64: 0x00000000, model64: 0xb2720000b275},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9f, match64: 0x00000000, model64: 0xb2750000b27c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca0, match64: 0x00000000, model64: 0xb27c0000b284},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca1, match64: 0x00000000, model64: 0x38790000387c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca2, match64: 0x00000000, model64: 0xb2840000b28d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca3, match64: 0x00000000, model64: 0xb28d0000b299},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2990000b2a0, model64: 0xb2a00000b2a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca4, match64: 0x00000000, model64: 0xb2a90000b2b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca5, match64: 0x00000000, model64: 0xb2b50000b2c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca6, match64: 0x00000000, model64: 0xb2c10000b2c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca7, match64: 0x00000000, model64: 0xb2c40000b2d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca8, match64: 0x00000000, model64: 0xb2d20000b2e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca9, match64: 0x00000000, model64: 0xb2e00000b2e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2e20000b2ea, model64: 0xb2ea0000b2f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0caa, match64: 0x00000000, model64: 0xb2f30000b2f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cab, match64: 0x00000000, model64: 0xb2f50000b2f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2f70000b2fe, model64: 0xb2650000b269},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cac, match64: 0x00000000, model64: 0xb2fe0000b301},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cad, match64: 0x00000000, model64: 0xb3010000b30b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cae, match64: 0x00000000, model64: 0xad9d0000ada0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0caf, match64: 0x00000000, model64: 0xb30b0000b313},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb0, match64: 0x00000000, model64: 0xb3130000b316},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb1, match64: 0x00000000, model64: 0xb0630000b066},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb2, match64: 0x00000000, model64: 0xb3160000b319},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb3, match64: 0x00000000, model64: 0xb3190000b31c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb4, match64: 0x00000000, model64: 0xb31c0000b320},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb5, match64: 0x00000000, model64: 0xb3200000b323},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb6, match64: 0x00000000, model64: 0xb3230000b326},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb7, match64: 0x00000000, model64: 0xb3260000b32e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb8, match64: 0x00000000, model64: 0xb32e0000b331},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb9, match64: 0x00000000, model64: 0xb3310000b334},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cba, match64: 0x00000000, model64: 0xb3340000b337},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbb, match64: 0x00000000, model64: 0xb3370000b339},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb3390000b340, model64: 0xb10a0000b10d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbc, match64: 0x00000000, model64: 0xb3400000b342},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbd, match64: 0x00000000, model64: 0xb3420000b349},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbe, match64: 0x00000000, model64: 0xb3490000b352},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbf, match64: 0x00000000, model64: 0xb3520000b359},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc0, match64: 0x00000000, model64: 0xb3590000b362},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc1, match64: 0x00000000, model64: 0xb3620000b36b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc2, match64: 0x00000000, model64: 0xb36b0000b374},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc3, match64: 0x00000000, model64: 0xb3740000b37e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc4, match64: 0x00000000, model64: 0xb37e0000b387},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc5, match64: 0x00000000, model64: 0xb3870000b394},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc6, match64: 0x00000000, model64: 0xb3940000b398},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc7, match64: 0x00000000, model64: 0xb3980000b3a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc8, match64: 0x00000000, model64: 0xb3a30000b3a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc9, match64: 0x00000000, model64: 0xb3a90000b3b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb3b40000b3bc, model64: 0xb3bc0000b3c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cca, match64: 0x00000000, model64: 0xb3c30000b3ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb3ca0000b3cf, model64: 0xb3cf0000b3d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ccb, match64: 0x00000000, model64: 0xb3d60000b3dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb3dd0000b3e2, model64: 0xb3e20000b3e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb3e80000b3f0, model64: 0xb3f00000b3f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb3f70000b3fe, model64: 0xb3fe0000b407},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb4070000b40e, model64: 0xb40e0000b415},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ccc, match64: 0x00000000, model64: 0xb4150000b419},
		modelTuple{type64: 0x20000000206, matchRI: 0x0ccd, match64: 0x00000000, model64: 0xb4190000b42a},
		modelTuple{type64: 0x20000000206, matchRI: 0x0cce, match64: 0x00000000, model64: 0xb42a0000b438},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xb4380000b43f, model64: 0xb43f0000b44c},
		modelTuple{type64: 0x20000000206, matchRI: 0x0ccf, match64: 0x00000000, model64: 0xb44c0000b458},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xb4580000b45f, model64: 0xb44c0000b458},
		modelTuple{type64: 0x20000000206, matchRI: 0x0cd0, match64: 0x00000000, model64: 0xb45f0000b46b},
		modelTuple{type64: 0x20000000206, matchRI: 0x0cd1, match64: 0x00000000, model64: 0xb46b0000b474},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xb4740000b479, model64: 0xb4790000b487},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xb4870000b48e, model64: 0xb48e0000b497},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xb4970000b49e, model64: 0xb49e0000b4a8},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xb4a80000b4af, model64: 0xb4af0000b4bc},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xb4bc0000b4c3, model64: 0xb4c30000b4d0},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xb4d00000b4d5, model64: 0xb4d50000b4e2},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xb4e20000b4e9, model64: 0xb4e90000b4f4},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xb4f40000b4f9, model64: 0xb4f90000b506},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xb5060000b50b, model64: 0xb50b0000b516},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xb5160000b51d, model64: 0xb51d0000b529},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xb5290000b530, model64: 0xb5300000b542},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xb5420000b547, model64: 0xb5470000b551},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xb5510000b556, model64: 0xb5560000b560},
		modelTuple{type64: 0x28400000286, matchRI: 0x0cd2, match64: 0x00000000, model64: 0xb5600000b568},
		modelTuple{type64: 0x28400000286, matchRI: 0x0cd3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0xb5680000b573, model64: 0xb5730000b578},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0xb5780000b583, model64: 0xb5780000b583},
		modelTuple{type64: 0x28400000286, matchRI: 0x0cd4, match64: 0x00000000, model64: 0xb5600000b568},
		modelTuple{type64: 0x28400000286, matchRI: 0x0cd5, match64: 0x00000000, model64: 0xb5830000b58a},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0xb58a0000b599, model64: 0xb5990000b5a5},
		modelTuple{type64: 0x1fd200001fda, matchRI: 0x0cd6, match64: 0x00000000, model64: 0xb5a50000b5ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd9, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cda, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0cdb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdc, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cde, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdf, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x0ce2, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce5, match64: 0x00000000, model64: 0xb5bd0000b5c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5c40000b5cc, model64: 0x8c0e00008c10},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce6, match64: 0x00000000, model64: 0xb5cc0000b5d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5d70000b5de, model64: 0xb5de0000b5e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5e50000b5ec, model64: 0xb5ec0000b5f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5f30000b5fa, model64: 0xb5fa0000b601},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6010000b608, model64: 0xb6080000b610},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6100000b617, model64: 0xb6170000b624},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6240000b62b, model64: 0xb62b0000b632},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6320000b639, model64: 0xb6390000b640},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6400000b647, model64: 0xb6470000b64e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb64e0000b655, model64: 0xb6550000b65c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce8, match64: 0x00000000, model64: 0xb65c0000b663},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6630000b66a, model64: 0xb66a0000b672},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce9, match64: 0x00000000, model64: 0xb6720000b679},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6790000b680, model64: 0xb6800000b687},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6870000b68e, model64: 0xb68e0000b695},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6950000b69c, model64: 0xb69c0000b6a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6a30000b6aa, model64: 0xb6aa0000b6b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6b10000b6b8, model64: 0xb6b80000b6be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6be0000b6c5, model64: 0xb6c50000b6cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6cb0000b6d2, model64: 0xb6d20000b6d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6d80000b6df, model64: 0xb6df0000b6e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6e50000b6ec, model64: 0xb6ec0000b6f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6f30000b6fa, model64: 0xb6fa0000b700},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7000000b707, model64: 0xb7070000b70e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb70e0000b715, model64: 0xb7150000b71d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb71d0000b724, model64: 0xb7240000b72c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb72c0000b733, model64: 0xb7330000b73a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb73a0000b741, model64: 0xb7410000b749},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7490000b750, model64: 0xb7500000b759},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7590000b760, model64: 0xb7600000b766},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7660000b76d, model64: 0xb76d0000b774},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7740000b77b, model64: 0xb77b0000b782},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7820000b789, model64: 0xb7890000b78f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cea, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cec, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ced, match64: 0x00000000, model64: 0xb7990000b7a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7a20000b7a8, model64: 0xb7a80000b7b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7be0000b7c6, model64: 0xb7c60000b7c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cef, match64: 0x00000000, model64: 0xb7c80000b7d0},
		modelTuple{type64: 0x20000000206, matchRI: 0x0cf1, match64: 0x00000000, model64: 0xb7d50000b7e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7e10000b7e6, model64: 0xb7e60000b7f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf2, match64: 0x00000000, model64: 0xb7f10000b7f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf3, match64: 0x00000000, model64: 0xb7f10000b7f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7f90000b802, model64: 0xb8020000b811},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0cf4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0cf6, match64: 0x00000000, model64: 0xb8150000b822},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf7, match64: 0x00000000, model64: 0xb8220000b839},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8390000b84a, model64: 0xb84a0000b85a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf8, match64: 0x00000000, model64: 0xb85a0000b866},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf9, match64: 0x00000000, model64: 0xb8660000b873},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfa, match64: 0x00000000, model64: 0xb8730000b87e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb87e0000b889, model64: 0xb87e0000b889},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8890000b897, model64: 0xb8970000b8a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfb, match64: 0x00000000, model64: 0xb8a60000b8b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfc, match64: 0x00000000, model64: 0xb8b20000b8bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8bd0000b8c6, model64: 0xb8c60000b8cf},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0cfd, match64: 0x00000000, model64: 0xb8cf0000b8da},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0cfe, match64: 0x00000000, model64: 0xb8da0000b8e6},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0cff, match64: 0x00000000, model64: 0xb8e60000b8ef},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0d00, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d02, match64: 0x00000000, model64: 0xb8f30000b8fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d03, match64: 0x00000000, model64: 0xb8fb0000b904},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d04, match64: 0x00000000, model64: 0xb9040000b90b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d05, match64: 0x00000000, model64: 0xb90b0000b912},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d06, match64: 0x00000000, model64: 0xb9120000b919},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d07, match64: 0x00000000, model64: 0xb9190000b921},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d08, match64: 0x00000000, model64: 0xb9210000b92d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d09, match64: 0x00000000, model64: 0xb92d0000b935},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0a, match64: 0x00000000, model64: 0xb9350000b93c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0b, match64: 0x00000000, model64: 0xb93c0000b949},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0c, match64: 0x00000000, model64: 0xb9490000b952},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0d, match64: 0x00000000, model64: 0xb9520000b960},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0e, match64: 0x00000000, model64: 0xb9600000b968},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0f, match64: 0x00000000, model64: 0xb9680000b96b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb96b0000b972, model64: 0xb9720000b974},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d10, match64: 0x00000000, model64: 0xb9740000b977},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d11, match64: 0x00000000, model64: 0xb9770000b979},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d12, match64: 0x00000000, model64: 0xb9790000b97b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d13, match64: 0x00000000, model64: 0xb97b0000b97d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d14, match64: 0x00000000, model64: 0xb97d0000b981},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d15, match64: 0x00000000, model64: 0xb9810000b983},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d16, match64: 0x00000000, model64: 0xb9830000b986},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d17, match64: 0x00000000, model64: 0xb9860000b989},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d18, match64: 0x00000000, model64: 0xb9890000b98c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d19, match64: 0x00000000, model64: 0xb98c0000b98f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1a, match64: 0x00000000, model64: 0xb98f0000b996},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1b, match64: 0x00000000, model64: 0xb9960000b99d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1c, match64: 0x00000000, model64: 0xb99d0000b9a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1d, match64: 0x00000000, model64: 0xb9a40000b9ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1e, match64: 0x00000000, model64: 0xb9ab0000b9ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1f, match64: 0x00000000, model64: 0xb9ae0000b9b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d20, match64: 0x00000000, model64: 0xb9b00000b9b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb9b30000b9ba, model64: 0xb9ba0000b9c2},
		modelTuple{type64: 0x9f700000a04, matchRI: -0x0001, match64: 0xb9c20000b9cd, model64: 0xb9cd0000b9d9},
		modelTuple{type64: 0x9f700000a04, matchRI: -0x0001, match64: 0xb9d90000b9e3, model64: 0xb9e30000b9ed},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0d21, match64: 0x00000000, model64: 0xb9ed0000b9fd},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d22, match64: 0x00000000, model64: 0xb9fd0000ba05},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d23, match64: 0x00000000, model64: 0xba050000ba0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d24, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0d25, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xba120000ba18, model64: 0xba180000ba23},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d27, match64: 0x00000000, model64: 0xba230000ba2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d28, match64: 0x00000000, model64: 0xba2b0000ba34},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d29, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2b, match64: 0x00000000, model64: 0xba390000ba41},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2c, match64: 0x00000000, model64: 0xba410000ba4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2d, match64: 0x00000000, model64: 0xba4a0000ba4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xba4f0000ba59, model64: 0xba590000ba60},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2f, match64: 0x00000000, model64: 0xba600000ba68},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d30, match64: 0x00000000, model64: 0xba680000ba6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d31, match64: 0x00000000, model64: 0xba6c0000ba74},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d32, match64: 0x00000000, model64: 0xba740000ba7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d33, match64: 0x00000000, model64: 0xba740000ba7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d34, match64: 0x00000000, model64: 0xba7a0000ba7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d35, match64: 0x00000000, model64: 0xba7f0000ba87},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d36, match64: 0x00000000, model64: 0xba7f0000ba87},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d37, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xba930000ba9d, model64: 0xba9d0000baa7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbaa70000bab0, model64: 0xbab00000bab9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbab90000bac1, model64: 0xbac10000bac6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbac60000bacf, model64: 0xbacf0000bad5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbad50000badd, model64: 0xbadd0000bae2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbae20000bae9, model64: 0xbae90000baec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d39, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3b, match64: 0x00000000, model64: 0xbaf20000baf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbaf90000bb00, model64: 0xbb000000bb07},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3d, match64: 0x00000000, model64: 0xbb070000bb0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbb0e0000bb1a, model64: 0xbb1a0000bb26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbb260000bb30, model64: 0xbb300000bb3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3e, match64: 0x00000000, model64: 0xbb3a0000bb42},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3f, match64: 0x00000000, model64: 0xbb420000bb4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d40, match64: 0x00000000, model64: 0xbb4c0000bb57},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d41, match64: 0x00000000, model64: 0xbb570000bb5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d42, match64: 0x00000000, model64: 0xbb5f0000bb68},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d43, match64: 0x00000000, model64: 0xbb680000bb6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d44, match64: 0x00000000, model64: 0xbb6f0000bb77},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d45, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d46, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d47, match64: 0x00000000, model64: 0xbb770000bb80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d49, match64: 0x00000000, model64: 0xbb870000bb91},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4a, match64: 0x00000000, model64: 0xbb910000bba3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xbbab0000bbb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0xbbce0000bbe3, matchRI: -0x0001, match64: 0xbbbd0000bbce, model64: 0xbbe30000bbee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0d51, match64: 0x00000000, model64: 0xbbf40000bbf8},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d52, match64: 0x00000000, model64: 0xbbf80000bc05},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d53, match64: 0x00000000, model64: 0xbc050000bc12},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d54, match64: 0x00000000, model64: 0xbc120000bc1f},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d55, match64: 0x00000000, model64: 0xbc1f0000bc2d},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbc2d0000bc35, model64: 0xbc350000bc3a},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbc3a0000bc40, model64: 0xbc400000bc4e},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d56, match64: 0x00000000, model64: 0xbc4e0000bc5a},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d57, match64: 0x00000000, model64: 0xbc5a0000bc61},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d58, match64: 0x00000000, model64: 0xbc610000bc6b},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d59, match64: 0x00000000, model64: 0xbc6b0000bc76},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbc760000bc7e, model64: 0xbc7e0000bc8a},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbc8a0000bc92, model64: 0xbc920000bc98},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d5a, match64: 0x00000000, model64: 0xbc980000bca8},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbca80000bcb0, model64: 0xbcb00000bcbb},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbcbb0000bcc3, model64: 0xbcc30000bccf},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbccf0000bcd7, model64: 0xbcd70000bce2},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbce20000bcef, model64: 0xbcef0000bcfb},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d5b, match64: 0x00000000, model64: 0xbcfb0000bd04},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d5c, match64: 0x00000000, model64: 0xbd040000bd0d},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d5d, match64: 0x00000000, model64: 0xbd0d0000bd13},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d5e, match64: 0x00000000, model64: 0xbd130000bd1e},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d5f, match64: 0x00000000, model64: 0xbd1e0000bd25},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbd250000bd2d, model64: 0xbd2d0000bd33},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbd330000bd3b, model64: 0xbd3b0000bd46},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d60, match64: 0x00000000, model64: 0xbd460000bd52},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d61, match64: 0x00000000, model64: 0xbd520000bd5c},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d62, match64: 0x00000000, model64: 0xbd5c0000bd67},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d63, match64: 0x00000000, model64: 0xbd670000bd6f},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d64, match64: 0x00000000, model64: 0xbd6f0000bd76},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d65, match64: 0x00000000, model64: 0xbd760000bd7d},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d66, match64: 0x00000000, model64: 0xbd7d0000bd84},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d67, match64: 0x00000000, model64: 0xbd840000bd8b},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d68, match64: 0x00000000, model64: 0xbd8b0000bd9e},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d69, match64: 0x00000000, model64: 0xbd9e0000bdaa},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d6a, match64: 0x00000000, model64: 0xbdaa0000bdb5},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d6b, match64: 0x00000000, model64: 0xbdb50000bdbb},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d6c, match64: 0x00000000, model64: 0xbdbb0000bdc1},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbdc10000bdc8, model64: 0xbdc80000bdd7},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d6d, match64: 0x00000000, model64: 0xbdd70000bddc},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbddc0000bde3, model64: 0xbde30000bde9},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbde90000bdef, model64: 0xbdef0000bdf4},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d6e, match64: 0x00000000, model64: 0xbdf40000be04},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d6f, match64: 0x00000000, model64: 0xbe040000be13},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbe130000be1a, model64: 0xbe1a0000be25},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbe250000be33, model64: 0xbe330000be3d},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbe3d0000be4b, model64: 0xbd6f0000bd76},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d70, match64: 0x00000000, model64: 0xbe4b0000be51},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d71, match64: 0x00000000, model64: 0xbe510000be5f},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d72, match64: 0x00000000, model64: 0xbe5f0000be6d},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d73, match64: 0x00000000, model64: 0xbe6d0000be84},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d74, match64: 0x00000000, model64: 0xbe840000be97},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d75, match64: 0x00000000, model64: 0xbe970000bea9},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d76, match64: 0x00000000, model64: 0xbea90000beb6},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d77, match64: 0x00000000, model64: 0xbeb60000bec0},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d78, match64: 0x00000000, model64: 0xbec00000becc},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbecc0000bed4, model64: 0xbed40000bee1},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbee10000bee9, model64: 0xbee90000bef8},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d79, match64: 0x00000000, model64: 0xbef80000bf06},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbf060000bf0e, model64: 0xbf0e0000bf2a},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d7a, match64: 0x00000000, model64: 0xbf2a0000bf37},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d7b, match64: 0x00000000, model64: 0xbf370000bf41},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d7c, match64: 0x00000000, model64: 0xbf410000bf53},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d7d, match64: 0x00000000, model64: 0xbf530000bf64},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d7e, match64: 0x00000000, model64: 0xbf640000bf6f},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d7f, match64: 0x00000000, model64: 0xbf6f0000bf77},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbf770000bf7f, model64: 0xbf7f0000bf86},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbf860000bf8e, model64: 0xbf8e0000bf9b},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbf9b0000bfa3, model64: 0xbfa30000bfae},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbfae0000bfb6, model64: 0xbd1e0000bd25},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d80, match64: 0x00000000, model64: 0x4e5100004e54},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d81, match64: 0x00000000, model64: 0xbfb60000bfb9},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d82, match64: 0x00000000, model64: 0xbfb90000bfc2},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d83, match64: 0x00000000, model64: 0xbf370000bf41},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbfc20000bfca, model64: 0xbfca0000bfd2},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xbfd20000bfda, model64: 0xbef80000bf06},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d84, match64: 0x00000000, model64: 0xbfda0000bfe7},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d85, match64: 0x00000000, model64: 0xbfe70000bff3},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d86, match64: 0x00000000, model64: 0xbff30000bff9},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d87, match64: 0x00000000, model64: 0xbff90000c003},
		modelTuple{type64: 0x20000000206, matchRI: 0x0d88, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d89, match64: 0x00000000, model64: 0xb2e00000b2e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8a, match64: 0x00000000, model64: 0x11f8000011fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8b, match64: 0x00000000, model64: 0xc0030000c006},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8c, match64: 0x00000000, model64: 0x120f00001211},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8d, match64: 0x00000000, model64: 0xc0060000c008},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8e, match64: 0x00000000, model64: 0xb9770000b979},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0080000c00f, model64: 0xc0080000c00f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc00f0000c014, model64: 0xc0140000c01c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8f, match64: 0x00000000, model64: 0xc01c0000c022},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0220000c027, model64: 0xc0270000c031},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d90, match64: 0x00000000, model64: 0xc0310000c037},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d91, match64: 0x00000000, model64: 0x4e9900004e9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d92, match64: 0x00000000, model64: 0xc0370000c03e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d93, match64: 0x00000000, model64: 0xc03e0000c046},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d94, match64: 0x00000000, model64: 0xc0460000c04d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d95, match64: 0x00000000, model64: 0xb1ac0000b1ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d96, match64: 0x00000000, model64: 0xc04d0000c054},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d97, match64: 0x00000000, model64: 0xc0540000c05a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d98, match64: 0x00000000, model64: 0xc05a0000c062},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d99, match64: 0x00000000, model64: 0xc0620000c069},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9a, match64: 0x00000000, model64: 0xc0690000c070},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9b, match64: 0x00000000, model64: 0xb0630000b066},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9c, match64: 0x00000000, model64: 0xc0700000c079},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9d, match64: 0x00000000, model64: 0xc0790000c085},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9e, match64: 0x00000000, model64: 0xc0850000c08c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9f, match64: 0x00000000, model64: 0xc08c0000c093},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da0, match64: 0x00000000, model64: 0xc0930000c099},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da1, match64: 0x00000000, model64: 0xc0990000c0a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da2, match64: 0x00000000, model64: 0xc0a00000c0a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da3, match64: 0x00000000, model64: 0xc0a70000c0b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da4, match64: 0x00000000, model64: 0xc0b30000c0ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da5, match64: 0x00000000, model64: 0xc0ba0000c0c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da6, match64: 0x00000000, model64: 0xc0c70000c0d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da7, match64: 0x00000000, model64: 0xc0d00000c0da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da8, match64: 0x00000000, model64: 0xc0da0000c0e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da9, match64: 0x00000000, model64: 0xc0e60000c0e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0daa, match64: 0x00000000, model64: 0xc0e80000c0ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dab, match64: 0x00000000, model64: 0xb0d30000b0d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dac, match64: 0x00000000, model64: 0xc0ea0000c0ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dad, match64: 0x00000000, model64: 0xc0ec0000c0ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dae, match64: 0x00000000, model64: 0xc0ef0000c0f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0daf, match64: 0x00000000, model64: 0xc0f60000c0fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db0, match64: 0x00000000, model64: 0xc0fe0000c106},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db1, match64: 0x00000000, model64: 0xc1060000c113},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db2, match64: 0x00000000, model64: 0xc1130000c11a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db3, match64: 0x00000000, model64: 0xc11a0000c120},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db4, match64: 0x00000000, model64: 0xc1200000c126},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db5, match64: 0x00000000, model64: 0xc1260000c12f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db6, match64: 0x00000000, model64: 0xc12f0000c136},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db7, match64: 0x00000000, model64: 0xc1360000c142},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db8, match64: 0x00000000, model64: 0xc1420000c145},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db9, match64: 0x00000000, model64: 0xc1450000c147},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dba, match64: 0x00000000, model64: 0xc1470000c14d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbb, match64: 0x00000000, model64: 0xc14d0000c153},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbc, match64: 0x00000000, model64: 0xc1530000c15c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbd, match64: 0x00000000, model64: 0xc15c0000c164},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbe, match64: 0x00000000, model64: 0x741a00007420},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbf, match64: 0x00000000, model64: 0xc1640000c16d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc0, match64: 0x00000000, model64: 0x11cb000011cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc1, match64: 0x00000000, model64: 0xc16d0000c173},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc2, match64: 0x00000000, model64: 0xc1730000c177},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc3, match64: 0x00000000, model64: 0xc1770000c180},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0dc5, match64: 0x00000000, model64: 0xc1800000c18a},
		modelTuple{type64: 0x20000000206, matchRI: 0x0dc6, match64: 0x00000000, model64: 0xc18a0000c19a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc19a0000c1a8, model64: 0xc1a80000c1af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc7, match64: 0x00000000, model64: 0xb0870000b089},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0xc1af0000c1b7, model64: 0xc1b70000c1c2},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0dc8, match64: 0x00000000, model64: 0xc1c20000c1d4},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0dc9, match64: 0x00000000, model64: 0xc1d40000c1e6},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0dca, match64: 0x00000000, model64: 0xc1e60000c1f5},
		modelTuple{type64: 0x20000000206, matchRI: 0x0dcb, match64: 0x00000000, model64: 0xa3d00000a43},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dcc, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dcd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1fb0000c204, model64: 0xc2040000c20e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc20e0000c218, model64: 0xc2180000c223},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2230000c22c, model64: 0xc22c0000c238},
		modelTuple{type64: 0x20000000206, matchRI: 0x0dcf, match64: 0x00000000, model64: 0xc2380000c244},
		modelTuple{type64: 0x20000000206, matchRI: 0x0dd0, match64: 0x00000000, model64: 0xc2440000c24d},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0dd2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2540000c263, model64: 0xc2630000c26a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xc26f0000c277},
		modelTuple{type64: 0x20000000206, matchRI: 0x0dd6, match64: 0x00000000, model64: 0xb9680000b96b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc27d0000c281, model64: 0xc2810000c285},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2850000c289, model64: 0xc2890000c28e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc28e0000c292, model64: 0xc2920000c299},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2990000c29d, model64: 0xc29d0000c2a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2a30000c2ac, model64: 0xc2ac0000c2b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2b50000c2b9, model64: 0xc2b90000c2c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2c10000c2c5, model64: 0xc2c50000c2cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2cb0000c2cf, model64: 0xc2cf0000c2d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2d60000c2da, model64: 0xc2da0000c2df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2df0000c2e3, model64: 0xc2e30000c2ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2ea0000c2f4, model64: 0xc2ea0000c2f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2f40000c2ff, model64: 0xc2ff0000c30a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3120000c31a, model64: 0xc31a0000c32b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc32b0000c333, model64: 0xc3330000c339},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3390000c341, model64: 0xc3410000c350},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3500000c358, model64: 0xc3580000c363},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3630000c36b, model64: 0xc36b0000c378},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3780000c380, model64: 0xc3800000c399},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3990000c3a1, model64: 0xc3a10000c3b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3b00000c3b8, model64: 0xc3b80000c3c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3c20000c3ca, model64: 0xc3ca0000c3d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3d70000c3df, model64: 0xc3df0000c3ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd9, match64: 0x00000000, model64: 0xc3ee0000c3fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3fa0000c402, model64: 0xc4020000c410},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4100000c418, model64: 0xc4180000c424},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4240000c42c, model64: 0xc42c0000c43b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc43b0000c443, model64: 0xc4430000c454},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4540000c45c, model64: 0xc45c0000c465},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4650000c46f, model64: 0xc46f0000c47c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc47c0000c486, model64: 0xc4860000c49b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc49b0000c4a5, model64: 0xc4a50000c4b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4b10000c4bb, model64: 0xc4bb0000c4d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4d50000c4dd, model64: 0xc4dd0000c4e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4e30000c4eb, model64: 0xc4eb0000c4f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dda, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dde, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ddf, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xc5100000c515},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de2, match64: 0x00000000, model64: 0xc51a0000c522},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de3, match64: 0x00000000, model64: 0x3a5c00003a63},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de4, match64: 0x00000000, model64: 0xc5220000c52b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de7, match64: 0x00000000, model64: 0xc53b0000c547},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de9, match64: 0x00000000, model64: 0xc54e0000c557},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc5570000c56d, model64: 0xc56d0000c57b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dea, match64: 0x00000000, model64: 0xc57b0000c58c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc58c0000c595, model64: 0xc5950000c5a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0deb, match64: 0x00000000, model64: 0xc5a40000c5b1},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0dec, match64: 0x00000000, model64: 0xc5b10000c5b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ded, match64: 0x00000000, model64: 0xc5b90000c5c5},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0dee, match64: 0x00000000, model64: 0xc5c50000c5cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0def, match64: 0x00000000, model64: 0xc5cf0000c5dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df0, match64: 0x00000000, model64: 0xc5cf0000c5dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc5dd0000c5e6, model64: 0xc5dd0000c5e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df2, match64: 0x00000000, model64: 0xc5e60000c5ef},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0xc5ef0000c5f6, model64: 0xc5ef0000c5f6},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0df3, match64: 0x00000000, model64: 0xc5f60000c600},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0df4, match64: 0x00000000, model64: 0xc6000000c60a},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0df5, match64: 0x00000000, model64: 0xc60a0000c611},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0df6, match64: 0x00000000, model64: 0xc6110000c61a},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0df7, match64: 0x00000000, model64: 0xc61a0000c621},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0df8, match64: 0x00000000, model64: 0xc6210000c62a},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0df9, match64: 0x00000000, model64: 0xc62a0000c630},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0xc6300000c637, model64: 0xc6300000c637},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0dfa, match64: 0x00000000, model64: 0xc6370000c63d},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0dfb, match64: 0x00000000, model64: 0xc63d0000c645},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0dfc, match64: 0x00000000, model64: 0xc6450000c651},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0dfd, match64: 0x00000000, model64: 0xc6510000c65a},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0dfe, match64: 0x00000000, model64: 0xc65a0000c663},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0dff, match64: 0x00000000, model64: 0xc6630000c66a},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0e00, match64: 0x00000000, model64: 0xc66a0000c676},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0e01, match64: 0x00000000, model64: 0xc6760000c67e},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0e02, match64: 0x00000000, model64: 0xc67e0000c686},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0xc6860000c692, model64: 0xc6920000c69f},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0xc69f0000c6a9, model64: 0xc6a90000c6b4},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0e03, match64: 0x00000000, model64: 0xc6b40000c6b9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e06, match64: 0x00000000, model64: 0x3d3e00003d44},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e07, match64: 0x00000000, model64: 0xc6c50000c6cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e08, match64: 0x00000000, model64: 0xc6cc0000c6cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e09, match64: 0x00000000, model64: 0xc6cf0000c6d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0f, match64: 0x00000000, model64: 0x3cb900003cc0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6e60000c6ec, model64: 0xc6ec0000c6f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6f90000c700, model64: 0xc7000000c707},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7070000c70b, model64: 0xc70b0000c710},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7100000c716, model64: 0xc7100000c716},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7160000c71c, model64: 0xc7160000c71c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e11, match64: 0x00000000, model64: 0xc71c0000c725},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e13, match64: 0x00000000, model64: 0xc72b0000c733},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e14, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7380000c73e, model64: 0xa0de0000a0e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc73e0000c744, model64: 0xc7440000c748},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7480000c74e, model64: 0xc74e0000c753},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7530000c759, model64: 0xc7590000c760},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7600000c766, model64: 0xc7660000c76f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc76f0000c775, model64: 0xc7750000c779},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7790000c77f, model64: 0xc77f0000c787},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7870000c78d, model64: 0xaf960000af9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc78d0000c793, model64: 0xc7930000c79c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc79c0000c7a2, model64: 0xc7a20000c7a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7a60000c7ac, model64: 0xc7ac0000c7b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7b80000c7be, model64: 0xc7be0000c7c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7c30000c7c9, model64: 0xc7c90000c7d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7d00000c7d6, model64: 0xc7d60000c7db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7db0000c7e3, model64: 0xc7e30000c7ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7ea0000c7f1, model64: 0xc7f10000c7f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7f80000c7fe, model64: 0xc7fe0000c809},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc8090000c80f, model64: 0x947c00009482},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc80f0000c815, model64: 0xc8150000c81e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc81e0000c826, model64: 0xc8260000c82a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc82a0000c830, model64: 0xc8300000c838},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc8380000c840, model64: 0xc8400000c849},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc8490000c84f, model64: 0xc84f0000c857},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e16, match64: 0x00000000, model64: 0xc8570000c85a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e17, match64: 0x00000000, model64: 0xc85a0000c85d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e19, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc8620000c867, model64: 0xc8670000c871},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1a, match64: 0x00000000, model64: 0xc8710000c87c},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0e1b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1f, match64: 0x00000000, model64: 0xc88d0000c894},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e20, match64: 0x00000000, model64: 0xc8940000c899},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e21, match64: 0x00000000, model64: 0x164b0000164d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e24, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e25, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e28, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e29, match64: 0x00000000, model64: 0xc8a80000c8b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e2b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e2c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e2e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e2f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e31, match64: 0x00000000, model64: 0xc8c20000c8ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e32, match64: 0x00000000, model64: 0xc8ce0000c8d8},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e33, match64: 0x00000000, model64: 0xc8d80000c8e0},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e34, match64: 0x00000000, model64: 0xc8e00000c8ee},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e35, match64: 0x00000000, model64: 0xc8ee0000c8fd},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e36, match64: 0x00000000, model64: 0xc8fd0000c907},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e37, match64: 0x00000000, model64: 0xc9070000c918},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e38, match64: 0x00000000, model64: 0xc9180000c928},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e39, match64: 0x00000000, model64: 0xc9280000c937},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e3a, match64: 0x00000000, model64: 0xc9370000c93f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e3b, match64: 0x00000000, model64: 0xc93f0000c94e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e3c, match64: 0x00000000, model64: 0xc94e0000c95b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e3d, match64: 0x00000000, model64: 0xc95b0000c963},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e3e, match64: 0x00000000, model64: 0xc9630000c96b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e3f, match64: 0x00000000, model64: 0xc96b0000c976},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e40, match64: 0x00000000, model64: 0xc9760000c982},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e41, match64: 0x00000000, model64: 0xc9820000c98e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e42, match64: 0x00000000, model64: 0xc98e0000c99d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e43, match64: 0x00000000, model64: 0xc99d0000c9a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e44, match64: 0x00000000, model64: 0xc9a70000c9af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e45, match64: 0x00000000, model64: 0xc9af0000c9c2},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e46, match64: 0x00000000, model64: 0xc9c20000c9cc},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e47, match64: 0x00000000, model64: 0xc9cc0000c9d8},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e48, match64: 0x00000000, model64: 0xc9d80000c9e6},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e49, match64: 0x00000000, model64: 0xc9e60000c9ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4a, match64: 0x00000000, model64: 0xc9ec0000c9fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4b, match64: 0x00000000, model64: 0xc9fa0000ca05},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4c, match64: 0x00000000, model64: 0xca050000ca0d},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e4d, match64: 0x00000000, model64: 0xca0d0000ca15},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e4e, match64: 0x00000000, model64: 0xca150000ca24},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4f, match64: 0x00000000, model64: 0xca240000ca2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e50, match64: 0x00000000, model64: 0xca2c0000ca2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e51, match64: 0x00000000, model64: 0xca2e0000ca37},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e52, match64: 0x00000000, model64: 0xca370000ca3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e53, match64: 0x00000000, model64: 0xca3c0000ca45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e54, match64: 0x00000000, model64: 0xca450000ca4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e55, match64: 0x00000000, model64: 0xca4b0000ca54},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e56, match64: 0x00000000, model64: 0xca540000ca5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e57, match64: 0x00000000, model64: 0xca5b0000ca62},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e58, match64: 0x00000000, model64: 0xca620000ca6f},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e59, match64: 0x00000000, model64: 0xca6f0000ca77},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e5a, match64: 0x00000000, model64: 0xca770000ca81},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e5b, match64: 0x00000000, model64: 0xca810000ca88},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e5c, match64: 0x00000000, model64: 0xca880000ca8d},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e5d, match64: 0x00000000, model64: 0xca8d0000ca95},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e5e, match64: 0x00000000, model64: 0xca950000ca9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e5f, match64: 0x00000000, model64: 0xca9f0000caa4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e60, match64: 0x00000000, model64: 0x76e4000076e9},
		modelTuple{type64: 0x52100000528, matchRI: 0x0e61, match64: 0x00000000, model64: 0xcaa40000caad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e62, match64: 0x00000000, model64: 0xcaad0000cab2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e63, match64: 0x00000000, model64: 0xcab20000cab9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e64, match64: 0x00000000, model64: 0xcab90000cac1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e65, match64: 0x00000000, model64: 0xcac10000cac7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e66, match64: 0x00000000, model64: 0xcac70000cad6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e67, match64: 0x00000000, model64: 0xcad60000caea},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6a, match64: 0x00000000, model64: 0xcaf00000caf8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81e3000081ef, model64: 0x81e3000081ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e6d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6e, match64: 0x00000000, model64: 0xcafb0000cb08},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6f, match64: 0x00000000, model64: 0xcb080000cb17},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e70, match64: 0x00000000, model64: 0xcb170000cb26},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e71, match64: 0x00000000, model64: 0xcb260000cb34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcb340000cb3e, model64: 0xcb3e0000cb48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcb480000cb53, model64: 0xcb530000cb5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcb5e0000cb67, model64: 0xcb5e0000cb67},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e72, match64: 0x00000000, model64: 0xcb670000cb73},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e73, match64: 0x00000000, model64: 0xcb730000cb82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e74, match64: 0x00000000, model64: 0xcb820000cb8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e75, match64: 0x00000000, model64: 0xcb8f0000cb9d},
		modelTuple{type64: 0x28400000286, matchRI: 0x0e76, match64: 0x00000000, model64: 0xcb9d0000cbaa},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0xcbaa0000cbb8, model64: 0xcbb80000cbbe},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0xcbbe0000cbc6, model64: 0xcbc60000cbd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e77, match64: 0x00000000, model64: 0xcbdf0000cbec},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xcbec0000cbf5, model64: 0xcbf50000cbfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e78, match64: 0x00000000, model64: 0xcbfb0000cc01},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xcc0d0000cc16},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xcc1c0000cc26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcc2a0000cc33, model64: 0xcc330000cc3d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xcc450000cc4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e7d, match64: 0x00000000, model64: 0xcc520000cc5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e7e, match64: 0x00000000, model64: 0xcc5a0000cc65},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e80, match64: 0x00000000, model64: 0xcc6d0000cc79},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e81, match64: 0x00000000, model64: 0xcc790000cc81},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e82, match64: 0x00000000, model64: 0xcc810000cc8a},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xcc8a0000cc94, model64: 0xcc940000cc9e},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xcc9e0000cca5, model64: 0xcca50000ccb1},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e83, match64: 0x00000000, model64: 0xccb10000ccb6},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e84, match64: 0x00000000, model64: 0xccb10000ccb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e85, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e86, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e87, match64: 0x00000000, model64: 0xccb60000ccbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e88, match64: 0x00000000, model64: 0xccb60000ccbe},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e8c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xccd80000cce0, model64: 0xcce00000cce8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcce80000ccf0, model64: 0xccf00000ccf8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xccf80000cd00, model64: 0xcd000000cd06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd060000cd0e, model64: 0xcd0e0000cd15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd150000cd1d, model64: 0xcd1d0000cd28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd280000cd30, model64: 0xcd300000cd37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd370000cd3f, model64: 0xcd3f0000cd46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd460000cd4e, model64: 0xcd4e0000cd59},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e91, match64: 0x00000000, model64: 0xcd690000cd6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e92, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e94, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e95, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e96, match64: 0x00000000, model64: 0xcd750000cd7e},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e97, match64: 0x00000000, model64: 0xcd7e0000cd87},
		modelTuple{type64: 0x20000000206, matchRI: 0x0e98, match64: 0x00000000, model64: 0x37d9000037df},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xcd870000cd91, model64: 0xcd910000cd9d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0xcdad0000cdbb, model64: 0xcdbb0000cdc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9c, match64: 0x00000000, model64: 0xcdc20000cdc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9e, match64: 0x00000000, model64: 0x3a5500003a5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9f, match64: 0x00000000, model64: 0xcdcf0000cdd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea2, match64: 0x00000000, model64: 0xcdda0000cde1},
		modelTuple{type64: 0x20000000206, matchRI: 0x0ea3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0ea6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea8, match64: 0x00000000, model64: 0xcdef0000cdfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea9, match64: 0x00000000, model64: 0xcdfc0000ce09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xce090000ce17, model64: 0xce170000ce25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xce250000ce30, model64: 0xce300000ce3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eaa, match64: 0x00000000, model64: 0xce3b0000ce43},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eab, match64: 0x00000000, model64: 0xce430000ce4c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xce4c0000ce55, model64: 0xce4c0000ce55},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eac, match64: 0x00000000, model64: 0xce3b0000ce43},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ead, match64: 0x00000000, model64: 0xce550000ce5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eae, match64: 0x00000000, model64: 0xce5d0000ce68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xce680000ce74, model64: 0xce680000ce74},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eaf, match64: 0x00000000, model64: 0xce740000ce7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb0, match64: 0x00000000, model64: 0xce7c0000ce84},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb1, match64: 0x00000000, model64: 0xce840000ce91},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0xce910000ce97, model64: 0xce970000ce9e},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xce9e0000ceae, model64: 0xceae0000cebe},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xcebe0000cecd, model64: 0xcecd0000cedc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb3, match64: 0x00000000, model64: 0xcee00000cee7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb4, match64: 0x00000000, model64: 0x2c9000002ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb7, match64: 0x00000000, model64: 0xcef10000cef7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb9, match64: 0x00000000, model64: 0xcefc0000cf11},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eba, match64: 0x00000000, model64: 0xcf110000cf16},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebb, match64: 0x00000000, model64: 0xcf160000cf20},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebc, match64: 0x00000000, model64: 0xcf200000cf38},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebd, match64: 0x00000000, model64: 0xcf380000cf50},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebe, match64: 0x00000000, model64: 0xcf500000cf68},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebf, match64: 0x00000000, model64: 0xcf680000cf80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec1, match64: 0x00000000, model64: 0xcf860000cf8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec2, match64: 0x00000000, model64: 0xcf8d0000cf97},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec3, match64: 0x00000000, model64: 0xcf970000cf9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec4, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec5, match64: 0x00000000, model64: 0xcf9e0000cfa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec6, match64: 0x00000000, model64: 0xcfa50000cfae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec7, match64: 0x00000000, model64: 0xcfae0000cfba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec8, match64: 0x00000000, model64: 0xcfba0000cfc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec9, match64: 0x00000000, model64: 0xcfc50000cfcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eca, match64: 0x00000000, model64: 0xcfcf0000cfdb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ecb, match64: 0x00000000, model64: 0xcfdb0000cfe2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ecc, match64: 0x00000000, model64: 0xcfe20000cfe9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ecd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ecf, match64: 0x00000000, model64: 0xcff10000d000},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed0, match64: 0x00000000, model64: 0xd0000000d012},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed1, match64: 0x00000000, model64: 0xd0120000d021},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed2, match64: 0x00000000, model64: 0xd0210000d035},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed3, match64: 0x00000000, model64: 0xd0350000d049},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed4, match64: 0x00000000, model64: 0xd0490000d05a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed5, match64: 0x00000000, model64: 0xd05a0000d06a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed6, match64: 0x00000000, model64: 0xd06a0000d07a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed7, match64: 0x00000000, model64: 0xd07a0000d08d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed8, match64: 0x00000000, model64: 0xd08d0000d09d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed9, match64: 0x00000000, model64: 0xd09d0000d0ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eda, match64: 0x00000000, model64: 0xd0ad0000d0c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0edb, match64: 0x00000000, model64: 0xd0c00000d0ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0edc, match64: 0x00000000, model64: 0xd0ce0000d0e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0e00000d0ea, model64: 0xd0ea0000d0fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0fb0000d105, model64: 0xd1050000d11b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd11b0000d11f, model64: 0xd11f0000d132},
		modelTuple{type64: 0x2700000027, matchRI: 0x0edd, match64: 0x00000000, model64: 0xd1320000d143},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ede, match64: 0x00000000, model64: 0xd1430000d157},
		modelTuple{type64: 0x2700000027, matchRI: 0x0edf, match64: 0x00000000, model64: 0xd1570000d167},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee0, match64: 0x00000000, model64: 0xd1670000d17a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee1, match64: 0x00000000, model64: 0xd17a0000d18d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee2, match64: 0x00000000, model64: 0xd18d0000d19e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee3, match64: 0x00000000, model64: 0xd19e0000d1b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee4, match64: 0x00000000, model64: 0xd1b10000d1c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee5, match64: 0x00000000, model64: 0xd1c80000d1dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee6, match64: 0x00000000, model64: 0xd1dc0000d1f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee7, match64: 0x00000000, model64: 0xd1f00000d201},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee8, match64: 0x00000000, model64: 0xd2010000d217},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee9, match64: 0x00000000, model64: 0xd2170000d22e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eea, match64: 0x00000000, model64: 0xd22e0000d243},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eeb, match64: 0x00000000, model64: 0xd2430000d25b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eec, match64: 0x00000000, model64: 0xd25b0000d275},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eed, match64: 0x00000000, model64: 0xd2750000d28c},
		modelTuple{type64: 0x52100000528, matchRI: 0x0eee, match64: 0x00000000, model64: 0xd28c0000d2a0},
		modelTuple{type64: 0x52100000528, matchRI: 0x0eef, match64: 0x00000000, model64: 0xd2a00000d2b3},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ef0, match64: 0x00000000, model64: 0xd2b30000d2c7},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ef1, match64: 0x00000000, model64: 0xd2c70000d2d8},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ef2, match64: 0x00000000, model64: 0xd2d80000d2e9},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ef3, match64: 0x00000000, model64: 0xd2e90000d2fa},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ef4, match64: 0x00000000, model64: 0xd2fa0000d30b},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ef5, match64: 0x00000000, model64: 0xd30b0000d31c},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ef6, match64: 0x00000000, model64: 0xd31c0000d32d},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ef7, match64: 0x00000000, model64: 0xd32d0000d33e},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ef8, match64: 0x00000000, model64: 0xd33e0000d34f},
		modelTuple{type64: 0x52100000528, matchRI: 0x0ef9, match64: 0x00000000, model64: 0xd34f0000d361},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0efa, match64: 0x00000000, model64: 0xd3610000d370},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0efb, match64: 0x00000000, model64: 0xd3700000d381},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0efc, match64: 0x00000000, model64: 0xd3810000d392},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0efd, match64: 0x00000000, model64: 0xd3920000d3a3},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0efe, match64: 0x00000000, model64: 0xd3a30000d3b3},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0eff, match64: 0x00000000, model64: 0xd3b30000d3c3},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0f00, match64: 0x00000000, model64: 0xd3a30000d3b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f01, match64: 0x00000000, model64: 0xd3c30000d3ce},
		modelTuple{type64: 0x20000000206, matchRI: 0x0f03, match64: 0x00000000, model64: 0xd3d40000d3de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f04, match64: 0x00000000, model64: 0xd3de0000d3e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f05, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0f06, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0f07, match64: 0x00000000, model64: 0xd3d40000d3de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f08, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x0f09, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0b, match64: 0x00000000, model64: 0xd3ec0000d3f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3f20000d3fa, model64: 0xd3fa0000d405},
		modelTuple{type64: 0x20000000206, matchRI: 0x0f0c, match64: 0x00000000, model64: 0xd4050000d40c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0d, match64: 0x00000000, model64: 0xd40c0000d412},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4120000d419, model64: 0xd4190000d41d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0f0f, match64: 0x00000000, model64: 0xd41d0000d424},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f11, match64: 0x00000000, model64: 0x744c0000744e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f12, match64: 0x00000000, model64: 0x999100009994},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f13, match64: 0x00000000, model64: 0xd4290000d42b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f14, match64: 0x00000000, model64: 0x3f3600003f38},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f15, match64: 0x00000000, model64: 0xb9810000b983},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f16, match64: 0x00000000, model64: 0xd42b0000d42e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f17, match64: 0x00000000, model64: 0xd42e0000d430},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f18, match64: 0x00000000, model64: 0x4e0a00004e0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f19, match64: 0x00000000, model64: 0xd4300000d433},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1a, match64: 0x00000000, model64: 0xd4330000d434},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x52100000528, matchRI: 0x0f1d, match64: 0x00000000, model64: 0xd4390000d440},
		modelTuple{type64: 0x52100000528, matchRI: 0x0f1e, match64: 0x00000000, model64: 0xd4400000d448},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1f, match64: 0x00000000, model64: 0xd4480000d44b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f20, match64: 0x00000000, model64: 0xd44b0000d44e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f21, match64: 0x00000000, model64: 0xd44e0000d450},
		modelTuple{type64: 0x52100000528, matchRI: 0x0f22, match64: 0x00000000, model64: 0xd4500000d457},
		modelTuple{type64: 0x52100000528, matchRI: 0x0f23, match64: 0x00000000, model64: 0xd4570000d45e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f24, match64: 0x00000000, model64: 0x744c0000744e},
		modelTuple{type64: 0x52100000528, matchRI: 0x0f25, match64: 0x00000000, model64: 0xd45e0000d465},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f26, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f27, match64: 0x00000000, model64: 0xd4650000d468},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f28, match64: 0x00000000, model64: 0xd4680000d46e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f29, match64: 0x00000000, model64: 0x16480000164b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2a, match64: 0x00000000, model64: 0xd46e0000d471},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2b, match64: 0x00000000, model64: 0xd4710000d474},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2c, match64: 0x00000000, model64: 0xd4740000d47b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2d, match64: 0x00000000, model64: 0xd47b0000d47e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2e, match64: 0x00000000, model64: 0xd47e0000d481},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4810000d489, model64: 0xd4890000d491},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2f, match64: 0x00000000, model64: 0x4e0a00004e0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f30, match64: 0x00000000, model64: 0xd4910000d498},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f31, match64: 0x00000000, model64: 0xd4980000d49f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f32, match64: 0x00000000, model64: 0xd49f0000d4a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f33, match64: 0x00000000, model64: 0xd4a40000d4af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f34, match64: 0x00000000, model64: 0xd4af0000d4b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f35, match64: 0x00000000, model64: 0xd4b50000d4c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f36, match64: 0x00000000, model64: 0x74a7000074a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f37, match64: 0x00000000, model64: 0x9c4000009c46},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f38, match64: 0x00000000, model64: 0xd4c10000d4c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f39, match64: 0x00000000, model64: 0xd4c40000d4cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3a, match64: 0x00000000, model64: 0xd4cd0000d4d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3b, match64: 0x00000000, model64: 0xd4d40000d4db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3c, match64: 0x00000000, model64: 0xd4db0000d4df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3d, match64: 0x00000000, model64: 0xd4df0000d4e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3e, match64: 0x00000000, model64: 0xd4e20000d4e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3f, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f40, match64: 0x00000000, model64: 0xd4e90000d4eb},
		modelTuple{type64: 0x52100000528, matchRI: 0x0f41, match64: 0x00000000, model64: 0xb5bd0000b5c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f42, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f43, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f44, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f46, match64: 0x00000000, model64: 0xd4f20000d4f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f47, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f48, match64: 0x00000000, model64: 0xd4f90000d50d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4a, match64: 0x00000000, model64: 0xd5120000d51d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4b, match64: 0x00000000, model64: 0xd51d0000d52a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4c, match64: 0x00000000, model64: 0xd52a0000d53a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4d, match64: 0x00000000, model64: 0xd53a0000d548},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4f, match64: 0x00000000, model64: 0xd54d0000d555},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f50, match64: 0x00000000, model64: 0xd5550000d55e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f51, match64: 0x00000000, model64: 0xd55e0000d565},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f52, match64: 0x00000000, model64: 0xd5650000d56e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5760000d589, model64: 0xd5890000d595},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5950000d59b, model64: 0xd59b0000d5a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f54, match64: 0x00000000, model64: 0xd5a90000d5b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f55, match64: 0x00000000, model64: 0xd5b70000d5c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f56, match64: 0x00000000, model64: 0xd5c30000d5ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f57, match64: 0x00000000, model64: 0xd5ca0000d5cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f58, match64: 0x00000000, model64: 0xd5cf0000d5d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f59, match64: 0x00000000, model64: 0xd5d70000d5e4},
		modelTuple{type64: 0x20000000206, matchRI: 0x0f5a, match64: 0x00000000, model64: 0xd5e40000d5ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5b, match64: 0x00000000, model64: 0xd5ee0000d5f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5f60000d5fa, model64: 0xd5fa0000d605},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5c, match64: 0x00000000, model64: 0xd6050000d60e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5d, match64: 0x00000000, model64: 0xd60e0000d61e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5e, match64: 0x00000000, model64: 0xd61e0000d630},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6300000d634, model64: 0xd6340000d63f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5f, match64: 0x00000000, model64: 0xd63f0000d64c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd64c0000d650, model64: 0xd6500000d65d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd65d0000d662, model64: 0xd6620000d66e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd66e0000d673, model64: 0xd6730000d67f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f60, match64: 0x00000000, model64: 0xd67f0000d688},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f61, match64: 0x00000000, model64: 0xd6880000d691},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f62, match64: 0x00000000, model64: 0xd6910000d69f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f63, match64: 0x00000000, model64: 0xd69f0000d6ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f64, match64: 0x00000000, model64: 0xd6ac0000d6bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f65, match64: 0x00000000, model64: 0xd6bc0000d6cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f66, match64: 0x00000000, model64: 0xd6cb0000d6d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f67, match64: 0x00000000, model64: 0xd6d80000d6de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f68, match64: 0x00000000, model64: 0xd6de0000d6ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f69, match64: 0x00000000, model64: 0xd6ed0000d6fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6a, match64: 0x00000000, model64: 0xd6fa0000d703},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6b, match64: 0x00000000, model64: 0xd7030000d70c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6c, match64: 0x00000000, model64: 0xd70c0000d715},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6d, match64: 0x00000000, model64: 0xd7150000d71a},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0f6e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0f6f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f70, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x0f72, match64: 0x00000000, model64: 0xd71a0000d720},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f73, match64: 0x00000000, model64: 0xd7200000d729},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f74, match64: 0x00000000, model64: 0xd7290000d732},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f75, match64: 0x00000000, model64: 0xd7320000d73b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd73b0000d74d, model64: 0xd73b0000d74d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f76, match64: 0x00000000, model64: 0xd74d0000d756},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f77, match64: 0x00000000, model64: 0xd7560000d75f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f78, match64: 0x00000000, model64: 0xd75f0000d768},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7680000d76f, model64: 0xd76f0000d778},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0xd7780000d788, model64: 0xd7780000d788},
		modelTuple{type64: 0x52100000528, matchRI: 0x0f79, match64: 0x00000000, model64: 0xd7880000d794},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7940000d7aa, model64: 0xd7940000d7aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7aa0000d7b7, model64: 0xd7aa0000d7b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7b70000d7c9, model64: 0xd7b70000d7c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7a, match64: 0x00000000, model64: 0xd7c90000d7d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7b, match64: 0x00000000, model64: 0xd7d20000d7db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7db0000d7e2, model64: 0xd7e20000d7ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7ee0000d7f7, model64: 0xd7ee0000d7f7},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0xd7f70000d80c, model64: 0xd7f70000d80c},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0xd80c0000d818, model64: 0xd80c0000d818},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd8180000d82a, model64: 0xd8180000d82a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7c, match64: 0x00000000, model64: 0xd82a0000d833},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7d, match64: 0x00000000, model64: 0xd8330000d83d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd83d0000d847, model64: 0xd83d0000d847},
		modelTuple{type64: 0x7f1000007f8, matchRI: -0x0001, match64: 0xd8470000d855, model64: 0xd8470000d855},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x0f7e, match64: 0x00000000, model64: 0xd8550000d862},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xd8620000d86f, model64: 0xd8620000d86f},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xd86f0000d87a, model64: 0xd86f0000d87a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7f, match64: 0x00000000, model64: 0xd87a0000d882},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xd88b0000d894},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f82, match64: 0x00000000, model64: 0xd8990000d8a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f83, match64: 0x00000000, model64: 0xd8a00000d8a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f84, match64: 0x00000000, model64: 0xd8a70000d8b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f85, match64: 0x00000000, model64: 0xd8b30000d8bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f86, match64: 0x00000000, model64: 0xd8bf0000d8c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f87, match64: 0x00000000, model64: 0xd8c70000d8cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f88, match64: 0x00000000, model64: 0xd8cd0000d8d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f89, match64: 0x00000000, model64: 0xd8d30000d8da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8a, match64: 0x00000000, model64: 0xd8da0000d8e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8b, match64: 0x00000000, model64: 0xd8e00000d8e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8c, match64: 0x00000000, model64: 0xd8e70000d8ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8e, match64: 0x00000000, model64: 0xd8f30000d8ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8f, match64: 0x00000000, model64: 0xd8ff0000d90c},
		modelTuple{type64: 0x20000000206, matchRI: 0x0f90, match64: 0x00000000, model64: 0xd90c0000d919},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f92, match64: 0x00000000, model64: 0xd91c0000d924},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f93, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xd9240000d93c, model64: 0xd93c0000d950},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f95, match64: 0x00000000, model64: 0xd9550000d95c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f96, match64: 0x00000000, model64: 0x3c6000003c9},
		modelTuple{type64: 0x20000000206, matchRI: 0x0f98, match64: 0x00000000, model64: 0xd9610000d968},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f99, match64: 0x00000000, model64: 0xd9680000d96e},
		modelTuple{type64: 0x28400000286, matchRI: 0x0f9b, match64: 0x00000000, model64: 0xd9720000d976},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9c, match64: 0x00000000, model64: 0xd9760000d981},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x0f9e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa5, match64: 0x00000000, model64: 0xd9980000d9a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd9b00000d9b6, model64: 0xd9b60000d9bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd9bc0000d9c3, model64: 0xd9c30000d9ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd9ca0000d9d2, model64: 0xd9d20000d9db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcda70000cdad, model64: 0xcda70000cdad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd9e20000d9ec, model64: 0xd9ec0000d9f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd9f60000d9fb, model64: 0xd9fb0000da00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda000000da06, model64: 0xda060000da0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda0d0000da14, model64: 0xda140000da1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda1b0000da23, model64: 0xda230000da2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa9, match64: 0x00000000, model64: 0xda2b0000da35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda350000da3a, model64: 0xda3a0000da3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda3f0000da4a, model64: 0xda4a0000da55},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda550000da60, model64: 0xda600000da6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda6b0000da71, model64: 0xda6b0000da71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda710000da77, model64: 0xda770000da7d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda7d0000da81, model64: 0xda810000da85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda850000da8e, model64: 0xda8e0000da97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda970000da9c, model64: 0xda9c0000daa1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdaa10000daa6, model64: 0x2f4d00002f52},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdaa60000daad, model64: 0xdaad0000dab5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdab50000dabf, model64: 0xdabf0000dac9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdac90000dad1, model64: 0xdad10000dad9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdad90000dade, model64: 0xdade0000dae3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdae30000dae7, model64: 0xdae70000dae9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdae90000daf0, model64: 0xdaf00000daf7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdaf70000dafd, model64: 0xdafd0000db03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb030000db0a, model64: 0xdb0a0000db11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb110000db18, model64: 0xdb180000db1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb1f0000db23, model64: 0xdb230000db27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb270000db2b, model64: 0x94180000941c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0faa, match64: 0x00000000, model64: 0xdb2b0000db32},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb320000db37, model64: 0xdb370000db3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fab, match64: 0x00000000, model64: 0xdb3a0000db40},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fac, match64: 0x00000000, model64: 0xdb400000db49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb490000db50, model64: 0xdb500000db56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb560000db5e, model64: 0xdb5e0000db65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb650000db6e, model64: 0xdb6e0000db77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb770000db7b, model64: 0xdb7b0000db7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb7f0000db86, model64: 0xdb860000db8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb8d0000db96, model64: 0xdb960000db9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb9f0000dba9, model64: 0xdba90000dbb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fad, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xdbb30000dbb9, model64: 0xdbb90000dbbf},
		modelTuple{type64: 0x20000000206, matchRI: 0x0fae, match64: 0x00000000, model64: 0xdbbf0000dbcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb0, match64: 0x00000000, model64: 0xdbd50000dbda},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb1, match64: 0x00000000, model64: 0xdbda0000dbe3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb2, match64: 0x00000000, model64: 0xdbe30000dbea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb3, match64: 0x00000000, model64: 0xdbea0000dbef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb4, match64: 0x00000000, model64: 0xdbef0000dc06},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb5, match64: 0x00000000, model64: 0xdc060000dc18},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb6, match64: 0x00000000, model64: 0xdc180000dc20},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb7, match64: 0x00000000, model64: 0xdc200000dc32},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb8, match64: 0x00000000, model64: 0xdc320000dc3d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdc3d0000dc4f, model64: 0xdc4f0000dc5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb9, match64: 0x00000000, model64: 0xdc180000dc20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdc5b0000dc70, model64: 0xdc700000dc7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fba, match64: 0x00000000, model64: 0xdc7b0000dc86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdc860000dc98, model64: 0xdc980000dca0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbb, match64: 0x00000000, model64: 0xdca00000dcab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbc, match64: 0x00000000, model64: 0xdcab0000dcb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbd, match64: 0x00000000, model64: 0xdcb30000dcba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdcba0000dccb, model64: 0xdccb0000dcd2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdcd20000dce9, model64: 0xdce90000dcf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbe, match64: 0x00000000, model64: 0xdcf60000dcff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdcff0000dd0e, model64: 0xdd0e0000dd13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd130000dd29, model64: 0xdd290000dd30},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbf, match64: 0x00000000, model64: 0x7dc100007dc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd300000dd40, model64: 0xdd400000dd4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc0, match64: 0x00000000, model64: 0xdd4b0000dd51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd510000dd68, model64: 0xdd680000dd6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd6f0000dd88, model64: 0xdd880000dd91},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd980000dd9e, model64: 0xdd9e0000dda6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc3, match64: 0x00000000, model64: 0xdda60000ddb2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xddb20000ddb8, model64: 0xddb80000ddc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xddc40000ddca, model64: 0xddca0000ddd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xddd30000ddd9, model64: 0xddd90000dddd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdddd0000dde3, model64: 0xdde30000dde7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdde70000ddf6, model64: 0xddf60000de05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde050000de0e, model64: 0xde050000de0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde0e0000de17, model64: 0xde170000de1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde1d0000de26, model64: 0xde260000de2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde2c0000de35, model64: 0xde350000de44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde440000de4d, model64: 0xde4d0000de5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde5a0000de63, model64: 0xde630000de71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde710000de7b, model64: 0xde710000de7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde7b0000de80, model64: 0xde800000de86},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x0fc8, match64: 0x00000000, model64: 0xde990000dea5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc9, match64: 0x00000000, model64: 0xdea50000deaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fca, match64: 0x00000000, model64: 0xdea50000deaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcb, match64: 0x00000000, model64: 0xdeaf0000debd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcc, match64: 0x00000000, model64: 0xdeaf0000debd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fce, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x9f700000a04, matchRI: -0x0001, match64: 0xdeca0000ded2, model64: 0xded20000ded6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd0, match64: 0x00000000, model64: 0xded60000dedb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd1, match64: 0x00000000, model64: 0xdedb0000dee7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd2, match64: 0x00000000, model64: 0xdee70000deeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd3, match64: 0x00000000, model64: 0xdeeb0000def1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd4, match64: 0x00000000, model64: 0xdef10000def9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd5, match64: 0x00000000, model64: 0xdef90000df00},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd6, match64: 0x00000000, model64: 0xdf000000df0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd7, match64: 0x00000000, model64: 0xdf0a0000df13},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd8, match64: 0x00000000, model64: 0xdf130000df1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd9, match64: 0x00000000, model64: 0xdf1c0000df22},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fda, match64: 0x00000000, model64: 0xdf220000df29},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdb, match64: 0x00000000, model64: 0xdf290000df2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdc, match64: 0x00000000, model64: 0xdf2d0000df34},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdd, match64: 0x00000000, model64: 0xdf340000df3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fde, match64: 0x00000000, model64: 0xdf3b0000df44},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdf, match64: 0x00000000, model64: 0xdf440000df4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe0, match64: 0x00000000, model64: 0xdf4c0000df52},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe1, match64: 0x00000000, model64: 0xdf520000df5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe2, match64: 0x00000000, model64: 0xdf5a0000df5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe3, match64: 0x00000000, model64: 0xdf5f0000df70},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe4, match64: 0x00000000, model64: 0xdf700000df78},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe5, match64: 0x00000000, model64: 0xdf780000df81},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe6, match64: 0x00000000, model64: 0xdf810000df85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe7, match64: 0x00000000, model64: 0xdf850000df90},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe8, match64: 0x00000000, model64: 0xdf900000df9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe9, match64: 0x00000000, model64: 0xdf9b0000dfa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fea, match64: 0x00000000, model64: 0xdfa50000dfb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0feb, match64: 0x00000000, model64: 0xdfb10000dfbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fec, match64: 0x00000000, model64: 0xdfbd0000dfc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fed, match64: 0x00000000, model64: 0xdfc40000dfcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fee, match64: 0x00000000, model64: 0xdfcc0000dfd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fef, match64: 0x00000000, model64: 0xdfd70000dfe3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff0, match64: 0x00000000, model64: 0xdfe30000dfed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff1, match64: 0x00000000, model64: 0xdfed0000dffa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff2, match64: 0x00000000, model64: 0xdffa0000e007},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff3, match64: 0x00000000, model64: 0xe0070000e014},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff4, match64: 0x00000000, model64: 0xe0140000e01a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff5, match64: 0x00000000, model64: 0xe01a0000e02b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff6, match64: 0x00000000, model64: 0xe02b0000e038},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff7, match64: 0x00000000, model64: 0xe0380000e048},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff8, match64: 0x00000000, model64: 0xe0480000e054},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff9, match64: 0x00000000, model64: 0xe0540000e061},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffa, match64: 0x00000000, model64: 0xe0610000e06e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffb, match64: 0x00000000, model64: 0xe06e0000e080},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffc, match64: 0x00000000, model64: 0xe0800000e08e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffd, match64: 0x00000000, model64: 0xe08e0000e09b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffe, match64: 0x00000000, model64: 0xe09b0000e0a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fff, match64: 0x00000000, model64: 0xe0a50000e0b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1000, match64: 0x00000000, model64: 0xe0b30000e0bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1001, match64: 0x00000000, model64: 0xe0bb0000e0c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1002, match64: 0x00000000, model64: 0xe0140000e01a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1003, match64: 0x00000000, model64: 0xe0c40000e0ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1004, match64: 0x00000000, model64: 0xe0ce0000e0da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1005, match64: 0x00000000, model64: 0xe0da0000e0e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1006, match64: 0x00000000, model64: 0xe0e10000e0ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1007, match64: 0x00000000, model64: 0xe0ec0000e0f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1008, match64: 0x00000000, model64: 0xe0f20000e0fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1009, match64: 0x00000000, model64: 0xe0fd0000e109},
		modelTuple{type64: 0x2700000027, matchRI: 0x100a, match64: 0x00000000, model64: 0xe1090000e116},
		modelTuple{type64: 0x2700000027, matchRI: 0x100b, match64: 0x00000000, model64: 0xe1160000e11e},
		modelTuple{type64: 0x2700000027, matchRI: 0x100c, match64: 0x00000000, model64: 0xe11e0000e12a},
		modelTuple{type64: 0x2700000027, matchRI: 0x100d, match64: 0x00000000, model64: 0xe12a0000e131},
		modelTuple{type64: 0x2700000027, matchRI: 0x100e, match64: 0x00000000, model64: 0xe1310000e138},
		modelTuple{type64: 0x2700000027, matchRI: 0x100f, match64: 0x00000000, model64: 0xe1380000e144},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe1440000e14c, model64: 0xe14c0000e154},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe1540000e15c, model64: 0xe15c0000e164},
		modelTuple{type64: 0x2700000027, matchRI: 0x1010, match64: 0x00000000, model64: 0xe1640000e16a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1011, match64: 0x00000000, model64: 0xe16a0000e175},
		modelTuple{type64: 0x2700000027, matchRI: 0x1012, match64: 0x00000000, model64: 0xe1750000e181},
		modelTuple{type64: 0x2700000027, matchRI: 0x1013, match64: 0x00000000, model64: 0xe1810000e194},
		modelTuple{type64: 0x2700000027, matchRI: 0x1014, match64: 0x00000000, model64: 0xe1940000e1a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1015, match64: 0x00000000, model64: 0xe1a00000e1ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1016, match64: 0x00000000, model64: 0xe1ab0000e1b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1017, match64: 0x00000000, model64: 0xe1b80000e1be},
		modelTuple{type64: 0x2700000027, matchRI: 0x1018, match64: 0x00000000, model64: 0xe1be0000e1c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1019, match64: 0x00000000, model64: 0xe1c50000e1d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x101a, match64: 0x00000000, model64: 0xe1d10000e1dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x101b, match64: 0x00000000, model64: 0xe1dc0000e1e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x101c, match64: 0x00000000, model64: 0xe1e80000e1f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x101d, match64: 0x00000000, model64: 0xe1f50000e1fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x101e, match64: 0x00000000, model64: 0xe1fc0000e202},
		modelTuple{type64: 0x2700000027, matchRI: 0x101f, match64: 0x00000000, model64: 0x8b9e00008ba1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1020, match64: 0x00000000, model64: 0xe2020000e20a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1021, match64: 0x00000000, model64: 0xe20a0000e212},
		modelTuple{type64: 0x2700000027, matchRI: 0x1022, match64: 0x00000000, model64: 0xe2120000e21b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe21b0000e223, model64: 0xe2230000e22b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1023, match64: 0x00000000, model64: 0xe22b0000e239},
		modelTuple{type64: 0x2700000027, matchRI: 0x1024, match64: 0x00000000, model64: 0xe2390000e245},
		modelTuple{type64: 0x2700000027, matchRI: 0x1025, match64: 0x00000000, model64: 0xe2450000e250},
		modelTuple{type64: 0x2700000027, matchRI: 0x1026, match64: 0x00000000, model64: 0xe2500000e261},
		modelTuple{type64: 0x2700000027, matchRI: 0x1027, match64: 0x00000000, model64: 0x2cee00002cf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1028, match64: 0x00000000, model64: 0xe2610000e26c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1029, match64: 0x00000000, model64: 0xe26c0000e270},
		modelTuple{type64: 0x2700000027, matchRI: 0x102a, match64: 0x00000000, model64: 0xe2700000e27f},
		modelTuple{type64: 0x2700000027, matchRI: 0x102b, match64: 0x00000000, model64: 0xe27f0000e289},
		modelTuple{type64: 0x2700000027, matchRI: 0x102c, match64: 0x00000000, model64: 0xe2890000e292},
		modelTuple{type64: 0x2700000027, matchRI: 0x102d, match64: 0x00000000, model64: 0xe2920000e29b},
		modelTuple{type64: 0x2700000027, matchRI: 0x102e, match64: 0x00000000, model64: 0xe29b0000e2a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x102f, match64: 0x00000000, model64: 0xe2a30000e2b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1030, match64: 0x00000000, model64: 0xe2b20000e2bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2bc0000e2cf, model64: 0xe2cf0000e2d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2d90000e2eb, model64: 0xe2eb0000e2f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2f40000e30a, model64: 0xe30a0000e317},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3170000e329, model64: 0xe3290000e332},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3320000e345, model64: 0xe3450000e34f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe34f0000e362, model64: 0xe27f0000e289},
		modelTuple{type64: 0x2700000027, matchRI: 0x1031, match64: 0x00000000, model64: 0xe3620000e37a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1032, match64: 0x00000000, model64: 0xe37a0000e38e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe38e0000e39e, model64: 0xe39e0000e3ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3ae0000e3bb, model64: 0xe3bb0000e3c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1033, match64: 0x00000000, model64: 0xe3c80000e3de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1034, match64: 0x00000000, model64: 0xe3de0000e3f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1035, match64: 0x00000000, model64: 0xe3f00000e3fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1036, match64: 0x00000000, model64: 0xe3fc0000e40f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1037, match64: 0x00000000, model64: 0xe40f0000e422},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4220000e42e, model64: 0xe3f00000e3fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe42e0000e438, model64: 0xe4380000e442},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4420000e44d, model64: 0xe44d0000e458},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4580000e463, model64: 0xe4630000e46e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe46e0000e47c, model64: 0xe47c0000e48a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe48a0000e493, model64: 0xe4930000e49c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1038, match64: 0x00000000, model64: 0xe49c0000e4ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1039, match64: 0x00000000, model64: 0xe4ab0000e4b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x103a, match64: 0x00000000, model64: 0xe4b30000e4bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x103b, match64: 0x00000000, model64: 0xe4bc0000e4cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x103c, match64: 0x00000000, model64: 0xe4cf0000e4dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x103d, match64: 0x00000000, model64: 0xe4dd0000e4f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x103e, match64: 0x00000000, model64: 0xe4f70000e516},
		modelTuple{type64: 0x2700000027, matchRI: 0x103f, match64: 0x00000000, model64: 0xe5160000e529},
		modelTuple{type64: 0x2700000027, matchRI: 0x1040, match64: 0x00000000, model64: 0xe5290000e537},
		modelTuple{type64: 0x2700000027, matchRI: 0x1041, match64: 0x00000000, model64: 0xe5370000e545},
		modelTuple{type64: 0x2700000027, matchRI: 0x1042, match64: 0x00000000, model64: 0xe5450000e552},
		modelTuple{type64: 0x2700000027, matchRI: 0x1043, match64: 0x00000000, model64: 0xe5520000e55f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1044, match64: 0x00000000, model64: 0xe4ab0000e4b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1045, match64: 0x00000000, model64: 0xe0b30000e0bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1046, match64: 0x00000000, model64: 0xe55f0000e567},
		modelTuple{type64: 0x2700000027, matchRI: 0x1047, match64: 0x00000000, model64: 0xe5670000e56d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe56d0000e576, model64: 0xe5760000e57f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1048, match64: 0x00000000, model64: 0xe57f0000e58a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1049, match64: 0x00000000, model64: 0xe57f0000e58a},
		modelTuple{type64: 0x2700000027, matchRI: 0x104a, match64: 0x00000000, model64: 0xe58a0000e593},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe5930000e59b, model64: 0xe5930000e59b},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0xe59b0000e5a3, model64: 0xe59b0000e5a3},
		modelTuple{type64: 0x1fd200001fda, matchRI: 0x104b, match64: 0x00000000, model64: 0xe5a30000e5ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe5ac0000e5b4, model64: 0xe5b40000e5bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x104c, match64: 0x00000000, model64: 0xe5bb0000e5c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x104d, match64: 0x00000000, model64: 0xe5c60000e5cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x104e, match64: 0x00000000, model64: 0xe5cd0000e5d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x104f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1050, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1051, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1052, match64: 0x00000000, model64: 0xe5d40000e5dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1053, match64: 0x00000000, model64: 0xe5d40000e5dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1054, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1055, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1056, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1057, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1059, match64: 0x00000000, model64: 0x741400007417},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe5e10000e5e6, model64: 0xe5e10000e5e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x105b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x105c, match64: 0x00000000, model64: 0xe5eb0000e5f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x105d, match64: 0x00000000, model64: 0xe5f60000e600},
		modelTuple{type64: 0x2700000027, matchRI: 0x105e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x105f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1061, match64: 0x00000000, model64: 0xe60a0000e60f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1062, match64: 0x00000000, model64: 0xe60f0000e614},
		modelTuple{type64: 0x2700000027, matchRI: 0x1063, match64: 0x00000000, model64: 0xe6140000e619},
		modelTuple{type64: 0x2700000027, matchRI: 0x1064, match64: 0x00000000, model64: 0xe6190000e61a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1065, match64: 0x00000000, model64: 0xe61a0000e620},
		modelTuple{type64: 0x2700000027, matchRI: 0x1066, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1067, match64: 0x00000000, model64: 0xe6200000e62a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1068, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1069, match64: 0x00000000, model64: 0xe62a0000e634},
		modelTuple{type64: 0x20000000206, matchRI: 0x106a, match64: 0x00000000, model64: 0xe6340000e63e},
		modelTuple{type64: 0x20000000206, matchRI: 0x106b, match64: 0x00000000, model64: 0xe63e0000e648},
		modelTuple{type64: 0x20000000206, matchRI: 0x106c, match64: 0x00000000, model64: 0xe6480000e659},
		modelTuple{type64: 0x20000000206, matchRI: 0x106d, match64: 0x00000000, model64: 0xe6590000e668},
		modelTuple{type64: 0x20000000206, matchRI: 0x106e, match64: 0x00000000, model64: 0xe6680000e67a},
		modelTuple{type64: 0x20000000206, matchRI: 0x106f, match64: 0x00000000, model64: 0xe67a0000e682},
		modelTuple{type64: 0x20000000206, matchRI: 0x1070, match64: 0x00000000, model64: 0xe6820000e68c},
		modelTuple{type64: 0x20000000206, matchRI: 0x1071, match64: 0x00000000, model64: 0xe68c0000e691},
		modelTuple{type64: 0x20000000206, matchRI: 0x1072, match64: 0x00000000, model64: 0xe6910000e69a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1074, match64: 0x00000000, model64: 0xe6a00000e6aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6aa0000e6c0, model64: 0xe6c00000e6d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1075, match64: 0x00000000, model64: 0xe6d60000e6db},
		modelTuple{type64: 0x20000000206, matchRI: 0x1077, match64: 0x00000000, model64: 0xe6e20000e6ea},
		modelTuple{type64: 0x20000000206, matchRI: 0x1078, match64: 0x00000000, model64: 0xe6ea0000e6f2},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xe6f20000e6fd, model64: 0xe6fd0000e709},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xe7090000e712, model64: 0xe7120000e71d},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xe71d0000e725, model64: 0xe71d0000e725},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xe7250000e733, model64: 0xe7330000e742},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xe7420000e751, model64: 0xe7510000e761},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xe7610000e771, model64: 0xe7710000e782},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe7820000e78a, model64: 0xe78a0000e792},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe7920000e79e, model64: 0xe79e0000e7aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1079, match64: 0x00000000, model64: 0xe7aa0000e7ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x107a, match64: 0x00000000, model64: 0xe7ba0000e7c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x107b, match64: 0x00000000, model64: 0xe7c70000e7d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe7d70000e7e5, model64: 0xe7d70000e7e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x107c, match64: 0x00000000, model64: 0xe7e50000e7f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x107d, match64: 0x00000000, model64: 0xe7f10000e7ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x107e, match64: 0x00000000, model64: 0xe7ff0000e80e},
		modelTuple{type64: 0x2700000027, matchRI: 0x107f, match64: 0x00000000, model64: 0xe80e0000e81b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1080, match64: 0x00000000, model64: 0xe81b0000e82a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1081, match64: 0x00000000, model64: 0xe82a0000e83d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe83d0000e84b, model64: 0xe84b0000e859},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe8590000e86a, model64: 0xe86a0000e87c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe87c0000e88a, model64: 0xe88a0000e898},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe8980000e8a1, model64: 0xe7c70000e7d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe8a10000e8ac, model64: 0xe8ac0000e8b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1082, match64: 0x00000000, model64: 0xe8b70000e8bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1083, match64: 0x00000000, model64: 0xe8bf0000e8c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1084, match64: 0x00000000, model64: 0xe8c40000e8cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1085, match64: 0x00000000, model64: 0xe8cf0000e8d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1086, match64: 0x00000000, model64: 0xe8d90000e8df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe8df0000e8ea, model64: 0xe8ea0000e8ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1087, match64: 0x00000000, model64: 0xe8ee0000e8f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1088, match64: 0x00000000, model64: 0xe8f30000e8fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1089, match64: 0x00000000, model64: 0xe8fd0000e906},
		modelTuple{type64: 0x2700000027, matchRI: 0x108a, match64: 0x00000000, model64: 0xe9060000e90b},
		modelTuple{type64: 0x2700000027, matchRI: 0x108b, match64: 0x00000000, model64: 0xe90b0000e915},
		modelTuple{type64: 0x2700000027, matchRI: 0x108c, match64: 0x00000000, model64: 0xe9150000e921},
		modelTuple{type64: 0x2700000027, matchRI: 0x108d, match64: 0x00000000, model64: 0xe9210000e92d},
		modelTuple{type64: 0x2700000027, matchRI: 0x108e, match64: 0x00000000, model64: 0xe92d0000e934},
		modelTuple{type64: 0x2700000027, matchRI: 0x108f, match64: 0x00000000, model64: 0xe9340000e93e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe93e0000e94e, model64: 0xe94e0000e95e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe95e0000e965, model64: 0xe9650000e96c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1090, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1092, match64: 0x00000000, model64: 0xe9710000e981},
		modelTuple{type64: 0x2700000027, matchRI: 0x1093, match64: 0x00000000, model64: 0x538300005388},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe98e0000e993, model64: 0xe9930000e999},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9990000e9a4, model64: 0xe9a40000e9ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1094, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1097, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9b80000e9c2, model64: 0xe9c20000e9c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1098, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9c60000e9d4, model64: 0xe9d40000e9dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9dc0000e9e9, model64: 0xe9e90000e9f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9f00000e9fc, model64: 0xe9fc0000ea02},
		modelTuple{type64: 0x20000000206, matchRI: 0x1099, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x109c, match64: 0x00000000, model64: 0xea0e0000ea14},
		modelTuple{type64: 0x28400000286, matchRI: 0x109d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x109f, match64: 0x00000000, model64: 0xea170000ea25},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a0, match64: 0x00000000, model64: 0xea250000ea2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x10a4, match64: 0x00000000, model64: 0xea2d0000ea3b},
		modelTuple{type64: 0x20000000206, matchRI: 0x10a5, match64: 0x00000000, model64: 0xea3b0000ea4b},
		modelTuple{type64: 0x20000000206, matchRI: 0x10a6, match64: 0x00000000, model64: 0xea4b0000ea5b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea610000ea6f, model64: 0xea6f0000ea76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea760000ea80, model64: 0xea800000ea83},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea940000eaa2, model64: 0xeaa20000eaae},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ac, match64: 0x00000000, model64: 0x4a9300004a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ad, match64: 0x00000000, model64: 0x4a9300004a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ae, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x10af, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b1, match64: 0x00000000, model64: 0xeab10000eabb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeabb0000eac3, model64: 0xeac30000eacc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeacc0000ead9, model64: 0xead90000eae8},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b2, match64: 0x00000000, model64: 0xeae80000eaf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b3, match64: 0x00000000, model64: 0xeaf30000eafa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeafa0000eb00, model64: 0xeb000000eb07},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b4, match64: 0x00000000, model64: 0x4c6c00004c70},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b5, match64: 0x00000000, model64: 0xeb070000eb12},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b6, match64: 0x00000000, model64: 0xeb120000eb1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b7, match64: 0x00000000, model64: 0xeb1b0000eb1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b8, match64: 0x00000000, model64: 0xeb1f0000eb23},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b9, match64: 0x00000000, model64: 0xeb230000eb27},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ba, match64: 0x00000000, model64: 0xeb270000eb2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x10bb, match64: 0x00000000, model64: 0xeb2c0000eb31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb310000eb39, model64: 0xeb390000eb42},
		modelTuple{type64: 0x2700000027, matchRI: 0x10bc, match64: 0x00000000, model64: 0xeb420000eb49},
		modelTuple{type64: 0x2700000027, matchRI: 0x10bd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xeb4e0000eb5c},
		modelTuple{type64: 0x20000000206, matchRI: 0x10c0, match64: 0x00000000, model64: 0xeb600000eb6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c2, match64: 0x00000000, model64: 0xb9680000b96b},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c3, match64: 0x00000000, model64: 0xa6b30000a6b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c4, match64: 0x00000000, model64: 0x5a6600005a68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb740000eb7a, model64: 0xacc70000acc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb7a0000eb80, model64: 0xeb800000eb83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb830000eb89, model64: 0xacd00000acd2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb890000eb8f, model64: 0xeb8f0000eb92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb920000eb98, model64: 0xeb980000eb9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb9b0000eba1, model64: 0xeba10000eba5},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xebaf0000ebb5, model64: 0x2a2000002a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xebb50000ebbe, model64: 0xd9fb0000da00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xebbe0000ebc5, model64: 0xebc50000ebc8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xebc80000ebd1, model64: 0xebd10000ebd6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xebd60000ebe0, model64: 0xebe00000ebe6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xebe60000ebf2, model64: 0xebf20000ebfa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xebfa0000ec01, model64: 0x67b9000067bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec010000ec08, model64: 0xec080000ec0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec0b0000ec12, model64: 0xec120000ec15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec150000ec1d, model64: 0xec1d0000ec21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec210000ec2c, model64: 0xec2c0000ec33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec330000ec3b, model64: 0xec3b0000ec3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec3f0000ec48, model64: 0xec480000ec4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c7, match64: 0x00000000, model64: 0xec4d0000ec50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec500000ec59, model64: 0xec590000ec5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec5e0000ec65, model64: 0xec650000ec68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec680000ec71, model64: 0x415200004157},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec710000ec78, model64: 0x79d8000079db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec780000ec83, model64: 0xec830000ec8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec8a0000ec8e, model64: 0xdf810000df85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec8e0000ec93, model64: 0xc2da0000c2df},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c9, match64: 0x00000000, model64: 0xec970000eca8},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ca, match64: 0x00000000, model64: 0xeca80000ecb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xecb80000ecc2, model64: 0xecc20000ecd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xecd10000ecdb, model64: 0xecdb0000ecf9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xecf90000ed03, model64: 0xed030000ed09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed090000ed13, model64: 0xed130000ed18},
		modelTuple{type64: 0x2700000027, matchRI: 0x10cc, match64: 0x00000000, model64: 0xed230000ed28},
		modelTuple{type64: 0x2700000027, matchRI: 0x10cd, match64: 0x00000000, model64: 0xed280000ed2e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed3d0000ed48, model64: 0xed3d0000ed48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed480000ed52, model64: 0xed520000ed5c},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xed5c0000ed6a, model64: 0xed6a0000ed78},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xed780000ed80, model64: 0xed800000ed88},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xed880000ed8f, model64: 0xed8f0000ed96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed9d0000eda5, model64: 0xeda50000edae},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4a9300004a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d3, match64: 0x00000000, model64: 0x26c00000271},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d4, match64: 0x00000000, model64: 0xedbd0000edc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d6, match64: 0x00000000, model64: 0xedc30000edca},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d7, match64: 0x00000000, model64: 0xedca0000edd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d9, match64: 0x00000000, model64: 0xeddc0000ede9},
		modelTuple{type64: 0x2700000027, matchRI: 0x10da, match64: 0x00000000, model64: 0xede90000edf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x10db, match64: 0x00000000, model64: 0xedf00000edfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x10dc, match64: 0x00000000, model64: 0xedfb0000ee0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x10dd, match64: 0x00000000, model64: 0xee0c0000ee1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x10de, match64: 0x00000000, model64: 0xee1e0000ee2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x10df, match64: 0x00000000, model64: 0xee2f0000ee3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e0, match64: 0x00000000, model64: 0xee3b0000ee48},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e1, match64: 0x00000000, model64: 0xee480000ee59},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e2, match64: 0x00000000, model64: 0xee590000ee65},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e3, match64: 0x00000000, model64: 0xee650000ee70},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e4, match64: 0x00000000, model64: 0xee700000ee7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e5, match64: 0x00000000, model64: 0xee7a0000ee82},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x10e7, match64: 0x00000000, model64: 0xee820000ee95},
		modelTuple{type64: 0x20000000206, matchRI: 0x10e8, match64: 0x00000000, model64: 0xee950000ee9f},
		modelTuple{type64: 0x20000000206, matchRI: 0x10e9, match64: 0x00000000, model64: 0xee9f0000eeaa},
		modelTuple{type64: 0x20000000206, matchRI: 0x10ea, match64: 0x00000000, model64: 0xeeaa0000eeb7},
		modelTuple{type64: 0x20000000206, matchRI: 0x10eb, match64: 0x00000000, model64: 0xeeb70000eec4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ee, match64: 0x00000000, model64: 0xeed00000eed3},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ef, match64: 0x00000000, model64: 0xeed30000eed6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeed60000eee4, model64: 0xeee40000eeeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3d3e00003d44},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f4, match64: 0x00000000, model64: 0xeef70000ef04},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f5, match64: 0x00000000, model64: 0xef040000ef0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef0e0000ef14, model64: 0xef140000ef1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef260000ef2c, model64: 0xef2c0000ef37},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xef5b0000ef64},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x10fe, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x10ff, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1101, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1102, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef890000ef92, model64: 0xef920000ef9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef9e0000efa7, model64: 0xefa70000efad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xefad0000efb7, model64: 0xefb70000efbe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xefbe0000efc9, model64: 0xefc90000efd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xefd10000efdb, model64: 0xefdb0000efe3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xefe30000efee, model64: 0xefee0000eff5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeff50000effd, model64: 0xeffd0000f006},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0060000f00f, model64: 0xf00f0000f01c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf01c0000f025, model64: 0x2d9300002d94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0250000f02d, model64: 0xf02d0000f031},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0310000f037, model64: 0xf0370000f040},
		modelTuple{type64: 0x2700000027, matchRI: 0x1104, match64: 0x00000000, model64: 0xf0400000f047},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1107, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1108, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1109, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x110c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x110d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x110f, match64: 0x00000000, model64: 0xd4330000d434},
		modelTuple{type64: 0x2700000027, matchRI: 0x1110, match64: 0x00000000, model64: 0x153a0000153b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1111, match64: 0x00000000, model64: 0x156000001561},
		modelTuple{type64: 0x2700000027, matchRI: 0x1112, match64: 0x00000000, model64: 0xf06f0000f070},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0700000f077, model64: 0x156600001567},
		modelTuple{type64: 0x2700000027, matchRI: 0x1113, match64: 0x00000000, model64: 0x2d9300002d94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0770000f086, model64: 0xf0860000f08f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf08f0000f09b, model64: 0xf09b0000f0a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1114, match64: 0x00000000, model64: 0xf0a10000f0a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1115, match64: 0x00000000, model64: 0xf0a90000f0b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1116, match64: 0x00000000, model64: 0xf0b10000f0b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0b90000f0c5, model64: 0xf0c50000f0cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1117, match64: 0x00000000, model64: 0xf0cb0000f0d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1118, match64: 0x00000000, model64: 0xf0d40000f0db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0db0000f0e5, model64: 0xf0e50000f0e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1119, match64: 0x00000000, model64: 0xf0e90000f0f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x111a, match64: 0x00000000, model64: 0xf0f10000f101},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1010000f10a, model64: 0xf10a0000f10f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf10f0000f118, model64: 0xf1180000f11c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf11c0000f128, model64: 0xf1280000f138},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1380000f14a, model64: 0xf14a0000f153},
		modelTuple{type64: 0x2700000027, matchRI: 0x111b, match64: 0x00000000, model64: 0xf1530000f160},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1600000f16b, model64: 0xf16b0000f16f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf16f0000f17a, model64: 0xf17a0000f17e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf17e0000f189, model64: 0xf1890000f18d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf18d0000f198, model64: 0xf1980000f19c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf19c0000f1a7, model64: 0xf1a70000f1ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1ab0000f1bc, model64: 0xf1bc0000f1c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x111c, match64: 0x00000000, model64: 0xf1c80000f1d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x111d, match64: 0x00000000, model64: 0xf1d20000f1da},
		modelTuple{type64: 0x2700000027, matchRI: 0x111e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x111f, match64: 0x00000000, model64: 0xf1da0000f1e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1120, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1121, match64: 0x00000000, model64: 0xf1e10000f1eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1122, match64: 0x00000000, model64: 0xf1eb0000f1f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1123, match64: 0x00000000, model64: 0xf1f40000f1fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1fd0000f203, model64: 0xf2030000f20c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1124, match64: 0x00000000, model64: 0xf20c0000f215},
		modelTuple{type64: 0x2700000027, matchRI: 0x1125, match64: 0x00000000, model64: 0xf2150000f21e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf21e0000f225, model64: 0xf2250000f22e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1126, match64: 0x00000000, model64: 0xf22e0000f237},
		modelTuple{type64: 0x2700000027, matchRI: 0x1127, match64: 0x00000000, model64: 0xf2370000f241},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2410000f247, model64: 0xf2470000f250},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2500000f259, model64: 0xf2500000f259},
		modelTuple{type64: 0x2700000027, matchRI: 0x1128, match64: 0x00000000, model64: 0xf2590000f262},
		modelTuple{type64: 0x2700000027, matchRI: 0x1129, match64: 0x00000000, model64: 0xf2620000f26c},
		modelTuple{type64: 0x2700000027, matchRI: 0x112a, match64: 0x00000000, model64: 0xf26c0000f275},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2750000f27e, model64: 0xf27e0000f287},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2870000f28d, model64: 0xf28d0000f296},
		modelTuple{type64: 0x2700000027, matchRI: 0x112b, match64: 0x00000000, model64: 0xf2960000f29f},
		modelTuple{type64: 0x2700000027, matchRI: 0x112c, match64: 0x00000000, model64: 0xf29f0000f2a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x112d, match64: 0x00000000, model64: 0xf2a80000f2b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2b10000f2ba, model64: 0xf2ba0000f2c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2c40000f2cb, model64: 0xf2cb0000f2d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x112e, match64: 0x00000000, model64: 0xf2d40000f2de},
		modelTuple{type64: 0x2700000027, matchRI: 0x112f, match64: 0x00000000, model64: 0xf2de0000f2ea},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xf2ea0000f2f3, model64: 0xf2f30000f2f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1130, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1131, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1132, match64: 0x00000000, model64: 0x74170000741a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1133, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1134, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1135, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x52100000528, matchRI: 0x1136, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1137, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1138, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2f60000f301, model64: 0xf3010000f305},
		modelTuple{type64: 0x2700000027, matchRI: 0x1139, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x113a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x113b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x113c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x113e, match64: 0x00000000, model64: 0xf3090000f30f},
		modelTuple{type64: 0x2700000027, matchRI: 0x113f, match64: 0x00000000, model64: 0xf30f0000f314},
		modelTuple{type64: 0x2700000027, matchRI: 0x1140, match64: 0x00000000, model64: 0xf3140000f31a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1141, match64: 0x00000000, model64: 0xf31a0000f320},
		modelTuple{type64: 0x2700000027, matchRI: 0x1142, match64: 0x00000000, model64: 0xf3200000f32a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1143, match64: 0x00000000, model64: 0xf32a0000f338},
		modelTuple{type64: 0x2700000027, matchRI: 0x1144, match64: 0x00000000, model64: 0xf3380000f33e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1145, match64: 0x00000000, model64: 0xf33e0000f344},
		modelTuple{type64: 0x2700000027, matchRI: 0x1146, match64: 0x00000000, model64: 0xf3440000f34b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1147, match64: 0x00000000, model64: 0xf34b0000f351},
		modelTuple{type64: 0x2700000027, matchRI: 0x1148, match64: 0x00000000, model64: 0xf3510000f357},
		modelTuple{type64: 0x2700000027, matchRI: 0x1149, match64: 0x00000000, model64: 0xf3570000f35d},
		modelTuple{type64: 0x2700000027, matchRI: 0x114a, match64: 0x00000000, model64: 0xf35d0000f362},
		modelTuple{type64: 0x2700000027, matchRI: 0x114b, match64: 0x00000000, model64: 0xf3620000f368},
		modelTuple{type64: 0x2700000027, matchRI: 0x114c, match64: 0x00000000, model64: 0xf3680000f36d},
		modelTuple{type64: 0x2700000027, matchRI: 0x114d, match64: 0x00000000, model64: 0xf36d0000f373},
		modelTuple{type64: 0x2700000027, matchRI: 0x114e, match64: 0x00000000, model64: 0xf3730000f37a},
		modelTuple{type64: 0x2700000027, matchRI: 0x114f, match64: 0x00000000, model64: 0xf37a0000f382},
		modelTuple{type64: 0x2700000027, matchRI: 0x1150, match64: 0x00000000, model64: 0xf3820000f389},
		modelTuple{type64: 0x2700000027, matchRI: 0x1151, match64: 0x00000000, model64: 0xf3890000f390},
		modelTuple{type64: 0x2700000027, matchRI: 0x1152, match64: 0x00000000, model64: 0xf3900000f398},
		modelTuple{type64: 0x2700000027, matchRI: 0x1153, match64: 0x00000000, model64: 0xf3980000f3a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1154, match64: 0x00000000, model64: 0x6b1800006b1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1155, match64: 0x00000000, model64: 0xf3a30000f3a6},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0xf3a60000f3b4, model64: 0xf3b40000f3bb},
		modelTuple{type64: 0x20000000206, matchRI: 0x1156, match64: 0x00000000, model64: 0xf3bb0000f3c6},
		modelTuple{type64: 0x20000000206, matchRI: 0x1157, match64: 0x00000000, model64: 0xf3c60000f3d1},
		modelTuple{type64: 0x20000000206, matchRI: 0x1158, match64: 0x00000000, model64: 0xf3d10000f3db},
		modelTuple{type64: 0x20000000206, matchRI: 0x1159, match64: 0x00000000, model64: 0xf3db0000f3e5},
		modelTuple{type64: 0x20000000206, matchRI: 0x115a, match64: 0x00000000, model64: 0xf3e50000f3f0},
		modelTuple{type64: 0x20000000206, matchRI: 0x115b, match64: 0x00000000, model64: 0xf3f00000f3ff},
		modelTuple{type64: 0x20000000206, matchRI: 0x115c, match64: 0x00000000, model64: 0xf3ff0000f404},
		modelTuple{type64: 0x20000000206, matchRI: 0x115d, match64: 0x00000000, model64: 0xf4040000f40d},
		modelTuple{type64: 0x20000000206, matchRI: 0x115e, match64: 0x00000000, model64: 0xf40d0000f414},
		modelTuple{type64: 0x20000000206, matchRI: 0x115f, match64: 0x00000000, model64: 0xf4140000f41f},
		modelTuple{type64: 0x20000000206, matchRI: 0x1160, match64: 0x00000000, model64: 0xf41f0000f429},
		modelTuple{type64: 0x20000000206, matchRI: 0x1161, match64: 0x00000000, model64: 0xf4290000f439},
		modelTuple{type64: 0x20000000206, matchRI: 0x1162, match64: 0x00000000, model64: 0xf4390000f444},
		modelTuple{type64: 0x20000000206, matchRI: 0x1163, match64: 0x00000000, model64: 0xf4440000f453},
		modelTuple{type64: 0x20000000206, matchRI: 0x1164, match64: 0x00000000, model64: 0xf4530000f45d},
		modelTuple{type64: 0x20000000206, matchRI: 0x1165, match64: 0x00000000, model64: 0xf45d0000f468},
		modelTuple{type64: 0x20000000206, matchRI: 0x1166, match64: 0x00000000, model64: 0xf4680000f472},
		modelTuple{type64: 0x20000000206, matchRI: 0x1167, match64: 0x00000000, model64: 0xa5f50000a5fa},
		modelTuple{type64: 0x20000000206, matchRI: 0x1168, match64: 0x00000000, model64: 0xf4720000f47d},
		modelTuple{type64: 0x20000000206, matchRI: 0x1169, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x116a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x116b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x116d, match64: 0x00000000, model64: 0xf4810000f484},
		modelTuple{type64: 0x2700000027, matchRI: 0x116e, match64: 0x00000000, model64: 0xf4840000f487},
		modelTuple{type64: 0x2700000027, matchRI: 0x116f, match64: 0x00000000, model64: 0xf4870000f48f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1170, match64: 0x00000000, model64: 0x5a0f00005a16},
		modelTuple{type64: 0x2700000027, matchRI: 0x1171, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf4a70000f4b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1174, match64: 0x00000000, model64: 0xe9c20000e9c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1175, match64: 0x00000000, model64: 0xf4b80000f4c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1176, match64: 0x00000000, model64: 0xf4c00000f4c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1177, match64: 0x00000000, model64: 0xf4c70000f4cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1178, match64: 0x00000000, model64: 0xf4cb0000f4d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1179, match64: 0x00000000, model64: 0xf4d20000f4d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x117b, match64: 0x00000000, model64: 0xf4da0000f4e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x117c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf4ea0000f4f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4fb0000f501, model64: 0xf5010000f508},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5080000f50e, model64: 0xf50e0000f519},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5190000f51f, model64: 0xf51f0000f52b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf52b0000f531, model64: 0xf5310000f53f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf53f0000f545, model64: 0xf5450000f550},
		modelTuple{type64: 0x2700000027, matchRI: 0x1180, match64: 0x00000000, model64: 0xf5500000f557},
		modelTuple{type64: 0x2700000027, matchRI: 0x1181, match64: 0x00000000, model64: 0xf5570000f55f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf55f0000f565, model64: 0xf5650000f568},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5680000f56e, model64: 0xf56e0000f570},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5700000f576, model64: 0xf5760000f57d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf57d0000f583, model64: 0xf5830000f589},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5890000f58f, model64: 0xf58f0000f591},
		modelTuple{type64: 0x2700000027, matchRI: 0x1182, match64: 0x00000000, model64: 0xf5910000f598},
		modelTuple{type64: 0x2700000027, matchRI: 0x1183, match64: 0x00000000, model64: 0xf5980000f59e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf59e0000f5a4, model64: 0xf5a40000f5af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5af0000f5b5, model64: 0xf5b50000f5b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5b80000f5c1, model64: 0xf5c10000f5c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1184, match64: 0x00000000, model64: 0xf5c80000f5d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1185, match64: 0x00000000, model64: 0xf5d20000f5da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5da0000f5e0, model64: 0xf5e00000f5e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5e30000f5e9, model64: 0xf5e90000f5ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5ed0000f5f3, model64: 0xf5f30000f5fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5fb0000f601, model64: 0xd44e0000d450},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6010000f607, model64: 0xf6070000f60a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1186, match64: 0x00000000, model64: 0xf60a0000f612},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6120000f618, model64: 0xf6180000f622},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6220000f628, model64: 0xf6280000f630},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6300000f636, model64: 0xf6360000f63a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf63a0000f640, model64: 0xf6400000f643},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6430000f649, model64: 0xf6490000f64c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf64c0000f652, model64: 0xf6520000f65b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf65b0000f661, model64: 0xb1d80000b1da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6610000f667, model64: 0xf6670000f670},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6700000f676, model64: 0xf6760000f682},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6820000f688, model64: 0xc7750000c779},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6880000f68e, model64: 0xf68e0000f695},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6950000f69b, model64: 0xf69b0000f6a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6a20000f6a8, model64: 0xf6a80000f6aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6aa0000f6b0, model64: 0xf6b00000f6b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6b70000f6bd, model64: 0xf6bd0000f6bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1187, match64: 0x00000000, model64: 0xf6bf0000f6c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6c10000f6cb, model64: 0xf6cb0000f6ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1188, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x118a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x118b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x118c, match64: 0x00000000, model64: 0xf6d20000f6d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6dc0000f6eb, model64: 0xf6eb0000f6fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x118e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x118f, match64: 0x00000000, model64: 0xf6fb0000f70c},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0xf70c0000f722, model64: 0xf7220000f72f},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0xf72f0000f73c, model64: 0xf73c0000f745},
		modelTuple{type64: 0xed000000f4, matchRI: -0x0001, match64: 0xf7450000f74b, model64: 0xf74b0000f75a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1191, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1192, match64: 0x00000000, model64: 0xf75c0000f75f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1193, match64: 0x00000000, model64: 0xf75f0000f771},
		modelTuple{type64: 0x2700000027, matchRI: 0x1195, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1196, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1197, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1198, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xa5f50000a5fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x119e, match64: 0x00000000, model64: 0x42d9000042dc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7950000f79f, model64: 0xf79f0000f7ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a1, match64: 0x00000000, model64: 0xf7ab0000f7b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a3, match64: 0x00000000, model64: 0xf7ba0000f7bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a4, match64: 0x00000000, model64: 0xf7bd0000f7c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a5, match64: 0x00000000, model64: 0xf7c10000f7c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a6, match64: 0x00000000, model64: 0xf7c40000f7c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a7, match64: 0x00000000, model64: 0xf7c80000f7cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a8, match64: 0x00000000, model64: 0xf7cc0000f7cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a9, match64: 0x00000000, model64: 0xf7bd0000f7c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x11aa, match64: 0x00000000, model64: 0xf7cf0000f7d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ab, match64: 0x00000000, model64: 0xf7d20000f7d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ac, match64: 0x00000000, model64: 0xf7d60000f7d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ad, match64: 0x00000000, model64: 0xf7d90000f7dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ae, match64: 0x00000000, model64: 0x11cb000011cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x11af, match64: 0x00000000, model64: 0xf7dc0000f7e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b0, match64: 0x00000000, model64: 0xf7e20000f7e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b1, match64: 0x00000000, model64: 0xf7e60000f7e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b2, match64: 0x00000000, model64: 0xf7e90000f7ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b3, match64: 0x00000000, model64: 0xf7ec0000f7ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b4, match64: 0x00000000, model64: 0xf7ef0000f7f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b5, match64: 0x00000000, model64: 0x11f8000011fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b6, match64: 0x00000000, model64: 0xf7f20000f7fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b7, match64: 0x00000000, model64: 0xf7fb0000f801},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b8, match64: 0x00000000, model64: 0xf8010000f804},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b9, match64: 0x00000000, model64: 0xf8040000f807},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ba, match64: 0x00000000, model64: 0xf8070000f80a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11bb, match64: 0x00000000, model64: 0xf80a0000f80d},
		modelTuple{type64: 0x2700000027, matchRI: 0x11bc, match64: 0x00000000, model64: 0xf80d0000f811},
		modelTuple{type64: 0x2700000027, matchRI: 0x11bd, match64: 0x00000000, model64: 0xf8110000f818},
		modelTuple{type64: 0x2700000027, matchRI: 0x11be, match64: 0x00000000, model64: 0xf8180000f81e},
		modelTuple{type64: 0x2700000027, matchRI: 0x11bf, match64: 0x00000000, model64: 0xf81e0000f821},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c0, match64: 0x00000000, model64: 0xf8210000f825},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c1, match64: 0x00000000, model64: 0xf8250000f82b},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c2, match64: 0x00000000, model64: 0xf82b0000f82e},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c3, match64: 0x00000000, model64: 0xf82e0000f835},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8350000f83b, model64: 0xf83b0000f841},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c4, match64: 0x00000000, model64: 0xf8410000f844},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c5, match64: 0x00000000, model64: 0xf8440000f847},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c6, match64: 0x00000000, model64: 0x120f00001211},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c7, match64: 0x00000000, model64: 0xf8470000f84a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c8, match64: 0x00000000, model64: 0xf84a0000f854},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c9, match64: 0x00000000, model64: 0xf8540000f857},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ca, match64: 0x00000000, model64: 0xf8570000f85d},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cb, match64: 0x00000000, model64: 0xf85d0000f860},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cc, match64: 0x00000000, model64: 0xf8600000f866},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cd, match64: 0x00000000, model64: 0xf8660000f86d},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ce, match64: 0x00000000, model64: 0xf86d0000f870},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cf, match64: 0x00000000, model64: 0xf8700000f873},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d0, match64: 0x00000000, model64: 0xf8730000f876},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d1, match64: 0x00000000, model64: 0xf8760000f879},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d2, match64: 0x00000000, model64: 0xc0060000c008},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d3, match64: 0x00000000, model64: 0xf8790000f87c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d4, match64: 0x00000000, model64: 0xf87c0000f886},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d5, match64: 0x00000000, model64: 0x2e9000002eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d6, match64: 0x00000000, model64: 0xf8860000f88f},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d7, match64: 0x00000000, model64: 0xf88f0000f892},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d8, match64: 0x00000000, model64: 0xf8920000f895},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d9, match64: 0x00000000, model64: 0xf8950000f899},
		modelTuple{type64: 0x2700000027, matchRI: 0x11da, match64: 0x00000000, model64: 0xf8990000f89c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11db, match64: 0x00000000, model64: 0xf89c0000f8a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8a00000f8a6, model64: 0xf8a60000f8ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x11dc, match64: 0x00000000, model64: 0xf8ac0000f8af},
		modelTuple{type64: 0x2700000027, matchRI: 0x11dd, match64: 0x00000000, model64: 0xf8600000f866},
		modelTuple{type64: 0x2700000027, matchRI: 0x11de, match64: 0x00000000, model64: 0xf8af0000f8b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x11df, match64: 0x00000000, model64: 0xf8b20000f8b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e0, match64: 0x00000000, model64: 0xf8b50000f8b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e1, match64: 0x00000000, model64: 0xf8b80000f8bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e2, match64: 0x00000000, model64: 0xf8bc0000f8bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e3, match64: 0x00000000, model64: 0xf8bf0000f8c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e4, match64: 0x00000000, model64: 0xf8c60000f8c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e5, match64: 0x00000000, model64: 0xf8c90000f8d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e6, match64: 0x00000000, model64: 0xf8d00000f8d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e7, match64: 0x00000000, model64: 0xf8d30000f8da},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e8, match64: 0x00000000, model64: 0xf8da0000f8dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e9, match64: 0x00000000, model64: 0xf8dd0000f8df},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ea, match64: 0x00000000, model64: 0xf8df0000f8e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x11eb, match64: 0x00000000, model64: 0xca2c0000ca2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ec, match64: 0x00000000, model64: 0xf8e60000f8ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ed, match64: 0x00000000, model64: 0xf8ee0000f8f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ee, match64: 0x00000000, model64: 0xf8f00000f8f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ef, match64: 0x00000000, model64: 0xf8f20000f8f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f0, match64: 0x00000000, model64: 0xf8f80000f8fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f1, match64: 0x00000000, model64: 0xf8fc0000f903},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f2, match64: 0x00000000, model64: 0xf9030000f90f},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f3, match64: 0x00000000, model64: 0xf90f0000f915},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f4, match64: 0x00000000, model64: 0xf9150000f920},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f5, match64: 0x00000000, model64: 0xf9200000f926},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f6, match64: 0x00000000, model64: 0xf9260000f92d},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f7, match64: 0x00000000, model64: 0xf92d0000f936},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f8, match64: 0x00000000, model64: 0xf9360000f941},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f9, match64: 0x00000000, model64: 0xf9410000f94c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fa, match64: 0x00000000, model64: 0xf94c0000f957},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fb, match64: 0x00000000, model64: 0xf9570000f960},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fc, match64: 0x00000000, model64: 0xf9600000f96a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fd, match64: 0x00000000, model64: 0xf96a0000f971},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fe, match64: 0x00000000, model64: 0xf9710000f977},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ff, match64: 0x00000000, model64: 0xf9770000f989},
		modelTuple{type64: 0x2700000027, matchRI: 0x1200, match64: 0x00000000, model64: 0xf9890000f990},
		modelTuple{type64: 0x2700000027, matchRI: 0x1201, match64: 0x00000000, model64: 0xf9900000f99c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1202, match64: 0x00000000, model64: 0xf99c0000f9a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1203, match64: 0x00000000, model64: 0xf9a70000f9ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1204, match64: 0x00000000, model64: 0xf9ae0000f9b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1205, match64: 0x00000000, model64: 0xf9b90000f9c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1206, match64: 0x00000000, model64: 0x751b0000751d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1207, match64: 0x00000000, model64: 0xb2e00000b2e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1208, match64: 0x00000000, model64: 0xb1ac0000b1ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1209, match64: 0x00000000, model64: 0xb2f30000b2f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x120a, match64: 0x00000000, model64: 0xf9c10000f9c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x120b, match64: 0x00000000, model64: 0xf9c40000f9c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x120c, match64: 0x00000000, model64: 0xf9c70000f9ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x120d, match64: 0x00000000, model64: 0xf9ca0000f9d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x120e, match64: 0x00000000, model64: 0xf6bf0000f6c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x120f, match64: 0x00000000, model64: 0xdb370000db3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1210, match64: 0x00000000, model64: 0xf9d10000f9d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1211, match64: 0x00000000, model64: 0xf9d60000f9db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1212, match64: 0x00000000, model64: 0xf9db0000f9e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1213, match64: 0x00000000, model64: 0xf9e00000f9e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1214, match64: 0x00000000, model64: 0xf9e60000f9eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1215, match64: 0x00000000, model64: 0xf9eb0000f9ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1216, match64: 0x00000000, model64: 0xf9ee0000f9f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1217, match64: 0x00000000, model64: 0xf9f60000f9f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1218, match64: 0x00000000, model64: 0xf9f90000fa02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1219, match64: 0x00000000, model64: 0xfa020000fa06},
		modelTuple{type64: 0x2700000027, matchRI: 0x121a, match64: 0x00000000, model64: 0xfa060000fa09},
		modelTuple{type64: 0x2700000027, matchRI: 0x121b, match64: 0x00000000, model64: 0xfa090000fa10},
		modelTuple{type64: 0x2700000027, matchRI: 0x121c, match64: 0x00000000, model64: 0xfa100000fa14},
		modelTuple{type64: 0x2700000027, matchRI: 0x121d, match64: 0x00000000, model64: 0xfa140000fa17},
		modelTuple{type64: 0x2700000027, matchRI: 0x121e, match64: 0x00000000, model64: 0xfa170000fa1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x121f, match64: 0x00000000, model64: 0xfa1e0000fa25},
		modelTuple{type64: 0x2700000027, matchRI: 0x1220, match64: 0x00000000, model64: 0xfa250000fa28},
		modelTuple{type64: 0x2700000027, matchRI: 0x1221, match64: 0x00000000, model64: 0xfa280000fa2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1222, match64: 0x00000000, model64: 0xfa2b0000fa2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1223, match64: 0x00000000, model64: 0xfa2d0000fa34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1224, match64: 0x00000000, model64: 0xfa340000fa3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1225, match64: 0x00000000, model64: 0xfa3b0000fa44},
		modelTuple{type64: 0x2700000027, matchRI: 0x1226, match64: 0x00000000, model64: 0xfa440000fa4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1227, match64: 0x00000000, model64: 0xfa4b0000fa4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1228, match64: 0x00000000, model64: 0xfa4e0000fa56},
		modelTuple{type64: 0x2700000027, matchRI: 0x1229, match64: 0x00000000, model64: 0xfa560000fa5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x122a, match64: 0x00000000, model64: 0xfa5a0000fa60},
		modelTuple{type64: 0x2700000027, matchRI: 0x122b, match64: 0x00000000, model64: 0xfa600000fa6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x122c, match64: 0x00000000, model64: 0xfa6d0000fa73},
		modelTuple{type64: 0x2700000027, matchRI: 0x122d, match64: 0x00000000, model64: 0xfa730000fa7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x122e, match64: 0x00000000, model64: 0xfa7a0000fa81},
		modelTuple{type64: 0x2700000027, matchRI: 0x122f, match64: 0x00000000, model64: 0xfa810000fa87},
		modelTuple{type64: 0x2700000027, matchRI: 0x1230, match64: 0x00000000, model64: 0xfa870000fa8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1231, match64: 0x00000000, model64: 0xfa8e0000fa97},
		modelTuple{type64: 0x2700000027, matchRI: 0x1232, match64: 0x00000000, model64: 0xfa970000faa1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1233, match64: 0x00000000, model64: 0xfaa10000faac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1234, match64: 0x00000000, model64: 0xfaac0000fab5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1235, match64: 0x00000000, model64: 0xfab50000fac0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1236, match64: 0x00000000, model64: 0xfac00000facd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1237, match64: 0x00000000, model64: 0xfacd0000fad6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1238, match64: 0x00000000, model64: 0xfad60000fae3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1239, match64: 0x00000000, model64: 0xfae30000faf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x123a, match64: 0x00000000, model64: 0xfaf00000fafa},
		modelTuple{type64: 0x2700000027, matchRI: 0x123b, match64: 0x00000000, model64: 0xfafa0000fb01},
		modelTuple{type64: 0x2700000027, matchRI: 0x123c, match64: 0x00000000, model64: 0xfb010000fb07},
		modelTuple{type64: 0x2700000027, matchRI: 0x123d, match64: 0x00000000, model64: 0xfb070000fb0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x123e, match64: 0x00000000, model64: 0xfb0e0000fb19},
		modelTuple{type64: 0x2700000027, matchRI: 0x123f, match64: 0x00000000, model64: 0xfb190000fb22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1240, match64: 0x00000000, model64: 0xfb220000fb29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1241, match64: 0x00000000, model64: 0xfb290000fb30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1242, match64: 0x00000000, model64: 0xfb300000fb37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1243, match64: 0x00000000, model64: 0xfb370000fb44},
		modelTuple{type64: 0x2700000027, matchRI: 0x1244, match64: 0x00000000, model64: 0xfb440000fb56},
		modelTuple{type64: 0x2700000027, matchRI: 0x1245, match64: 0x00000000, model64: 0xfb560000fb5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1246, match64: 0x00000000, model64: 0xfb5d0000fb63},
		modelTuple{type64: 0x2700000027, matchRI: 0x1247, match64: 0x00000000, model64: 0xfb630000fb6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1248, match64: 0x00000000, model64: 0xfb6e0000fb78},
		modelTuple{type64: 0x2700000027, matchRI: 0x1249, match64: 0x00000000, model64: 0xfb780000fb85},
		modelTuple{type64: 0x2700000027, matchRI: 0x124a, match64: 0x00000000, model64: 0xfb850000fb94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb940000fb9a, model64: 0xfb9a0000fba0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfba00000fba6, model64: 0xfba60000fbaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x124b, match64: 0x00000000, model64: 0xfbaf0000fbb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x124c, match64: 0x00000000, model64: 0xfbb90000fbc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x124d, match64: 0x00000000, model64: 0xfbc20000fbc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x124e, match64: 0x00000000, model64: 0xfbc70000fbcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x124f, match64: 0x00000000, model64: 0xfbcf0000fbd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1250, match64: 0x00000000, model64: 0xfbd90000fbe0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1251, match64: 0x00000000, model64: 0xfbe00000fbe6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1252, match64: 0x00000000, model64: 0xfbe60000fbea},
		modelTuple{type64: 0x52100000528, matchRI: 0x1253, match64: 0x00000000, model64: 0xfbea0000fbed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1254, match64: 0x00000000, model64: 0xc85a0000c85d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1255, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1256, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1259, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x125a, match64: 0x00000000, model64: 0xfbf60000fbfd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfc030000fc0d, model64: 0xfc0d0000fc14},
		modelTuple{type64: 0x2700000027, matchRI: 0x125c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x125e, match64: 0x00000000, model64: 0xfc170000fc1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x125f, match64: 0x00000000, model64: 0xfc1c0000fc21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1260, match64: 0x00000000, model64: 0xfc210000fc28},
		modelTuple{type64: 0x2700000027, matchRI: 0x1261, match64: 0x00000000, model64: 0xfc280000fc2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1262, match64: 0x00000000, model64: 0xfc2e0000fc34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1263, match64: 0x00000000, model64: 0xfc340000fc37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1264, match64: 0x00000000, model64: 0xfc370000fc40},
		modelTuple{type64: 0x2700000027, matchRI: 0x1265, match64: 0x00000000, model64: 0xfc400000fc47},
		modelTuple{type64: 0x2700000027, matchRI: 0x1266, match64: 0x00000000, model64: 0xfc470000fc4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1267, match64: 0x00000000, model64: 0xfc4f0000fc52},
		modelTuple{type64: 0x2700000027, matchRI: 0x1268, match64: 0x00000000, model64: 0xfc520000fc59},
		modelTuple{type64: 0x2700000027, matchRI: 0x1269, match64: 0x00000000, model64: 0xfc590000fc60},
		modelTuple{type64: 0x2700000027, matchRI: 0x126a, match64: 0x00000000, model64: 0xfc600000fc65},
		modelTuple{type64: 0x2700000027, matchRI: 0x126b, match64: 0x00000000, model64: 0xfc650000fc6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x126c, match64: 0x00000000, model64: 0xfc6d0000fc76},
		modelTuple{type64: 0x2700000027, matchRI: 0x126d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x126e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfc7c0000fc83, model64: 0xfc830000fc85},
		modelTuple{type64: 0x2700000027, matchRI: 0x1270, match64: 0x00000000, model64: 0xfc850000fc8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43d9000043de, model64: 0x43d9000043de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1272, match64: 0x00000000, model64: 0xfc900000fc99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfc990000fca7, model64: 0xfca70000fcb7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfcb70000fcc0, model64: 0xfcc00000fcc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfcc90000fcde, model64: 0xfcde0000fcf3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfcf30000fd06, model64: 0xfd060000fd19},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfd190000fd27, model64: 0xfd270000fd36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfd360000fd45, model64: 0xfd450000fd55},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfd550000fd67, model64: 0xfd670000fd7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfd7a0000fd85, model64: 0xfd850000fd90},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfd900000fda0, model64: 0xfda00000fdb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfdb00000fdc1, model64: 0xfdc10000fdd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfdd30000fddf, model64: 0xfddf0000fded},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfded0000fdf8, model64: 0xfdf80000fe05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe050000fe15, model64: 0xfe150000fe25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe250000fe31, model64: 0xfe310000fe3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1273, match64: 0x00000000, model64: 0xfe3d0000fe51},
		modelTuple{type64: 0x2700000027, matchRI: 0x1274, match64: 0x00000000, model64: 0xfe510000fe5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1275, match64: 0x00000000, model64: 0xfe5e0000fe6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1276, match64: 0x00000000, model64: 0xfe6a0000fe75},
		modelTuple{type64: 0x2700000027, matchRI: 0x1277, match64: 0x00000000, model64: 0xfe750000fe80},
		modelTuple{type64: 0x2700000027, matchRI: 0x1278, match64: 0x00000000, model64: 0xfe800000fe8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe8c0000fe93, model64: 0xfe930000fe9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe9a0000fea9, model64: 0xfea90000feb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfeb90000fec7, model64: 0xfec70000fed6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1279, match64: 0x00000000, model64: 0xfed60000fedd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfedd0000fee8, model64: 0xfee80000fef5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfef50000ff01, model64: 0xff010000ff0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff0d0000ff15, model64: 0xff150000ff1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff1a0000ff1f, model64: 0xff1f0000ff25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff250000ff33, model64: 0xff330000ff41},
		modelTuple{type64: 0x2700000027, matchRI: 0x127a, match64: 0x00000000, model64: 0xff410000ff48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff480000ff4c, model64: 0xff4c0000ff50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff500000ff61, model64: 0xff610000ff72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff720000ff78, model64: 0xff780000ff80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff800000ff86, model64: 0xff860000ff8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff8c0000ff95, model64: 0xff950000ff9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff9a0000ffa6, model64: 0xffa60000ffb2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffb20000ffc0, model64: 0xffc00000ffce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffce0000ffdd, model64: 0xffdd0000ffec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffec0000fff8, model64: 0xfff80000ffff},
		modelTuple{type64: 0x2700000027, matchRI: 0x127b, match64: 0x00000000, model64: 0xffff0001000e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1000e00010019, model64: 0x1001900010026},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100260001002f, model64: 0x1002f00010038},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1003800010043, model64: 0x100430001004e},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x127c, match64: 0x00000000, model64: 0x1004e00010057},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1005700010060, model64: 0x1006000010069},
		modelTuple{type64: 0x2700000027, matchRI: 0x127d, match64: 0x00000000, model64: 0x1006900010070},
		modelTuple{type64: 0x2700000027, matchRI: 0x127e, match64: 0x00000000, model64: 0x1007000010074},
		modelTuple{type64: 0x2700000027, matchRI: 0x127f, match64: 0x00000000, model64: 0x100740001007c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1280, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1007e00010087},
		modelTuple{type64: 0x2700000027, matchRI: 0x1283, match64: 0x00000000, model64: 0x1008d00010099},
		modelTuple{type64: 0x2700000027, matchRI: 0x1285, match64: 0x00000000, model64: 0x1009d000100a1},
		modelTuple{type64: 0x20000000206, matchRI: 0x1286, match64: 0x00000000, model64: 0x100a1000100a4},
		modelTuple{type64: 0x20000000206, matchRI: 0x1287, match64: 0x00000000, model64: 0x100a4000100b1},
		modelTuple{type64: 0x20000000206, matchRI: 0x1288, match64: 0x00000000, model64: 0x100b1000100be},
		modelTuple{type64: 0x20000000206, matchRI: 0x1289, match64: 0x00000000, model64: 0x100be000100ca},
		modelTuple{type64: 0x20000000206, matchRI: 0x128a, match64: 0x00000000, model64: 0x100ca000100dd},
		modelTuple{type64: 0x20000000206, matchRI: 0x128b, match64: 0x00000000, model64: 0x100dd000100ed},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x100ed000100ff, model64: 0x100ff00010112},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1011200010123, model64: 0x1012300010135},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x101350001013f, model64: 0x1013f0001014a},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1014a00010158, model64: 0x1015800010167},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1016700010170, model64: 0x101700001017b},
		modelTuple{type64: 0x20000000206, matchRI: 0x128c, match64: 0x00000000, model64: 0x1017b00010190},
		modelTuple{type64: 0x20000000206, matchRI: 0x128d, match64: 0x00000000, model64: 0x101900001019c},
		modelTuple{type64: 0x20000000206, matchRI: 0x128e, match64: 0x00000000, model64: 0x1019c000101a7},
		modelTuple{type64: 0x20000000206, matchRI: 0x128f, match64: 0x00000000, model64: 0x101a7000101b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1290, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1291, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1293, match64: 0x00000000, model64: 0x101b9000101c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1294, match64: 0x00000000, model64: 0x101c0000101ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1295, match64: 0x00000000, model64: 0x101ca000101d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1296, match64: 0x00000000, model64: 0x101d0000101d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1297, match64: 0x00000000, model64: 0x101d9000101e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1298, match64: 0x00000000, model64: 0x101e5000101ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1299, match64: 0x00000000, model64: 0x101ed000101f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x129a, match64: 0x00000000, model64: 0x101f800010205},
		modelTuple{type64: 0x2700000027, matchRI: 0x129b, match64: 0x00000000, model64: 0x102050001020e},
		modelTuple{type64: 0x2700000027, matchRI: 0x129c, match64: 0x00000000, model64: 0x1020e00010217},
		modelTuple{type64: 0x2700000027, matchRI: 0x129d, match64: 0x00000000, model64: 0x102170001021c},
		modelTuple{type64: 0x2700000027, matchRI: 0x129e, match64: 0x00000000, model64: 0x1021c0001021e},
		modelTuple{type64: 0x2700000027, matchRI: 0x129f, match64: 0x00000000, model64: 0x2d9300002d94},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a0, match64: 0x00000000, model64: 0x1021e00010225},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a1, match64: 0x00000000, model64: 0x7c5700007c58},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a2, match64: 0x00000000, model64: 0x102250001022b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a3, match64: 0x00000000, model64: 0x1022b0001022d},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a4, match64: 0x00000000, model64: 0x7c4900007c4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a5, match64: 0x00000000, model64: 0x1022d00010243},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a6, match64: 0x00000000, model64: 0x1024300010248},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a7, match64: 0x00000000, model64: 0x156600001567},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a8, match64: 0x00000000, model64: 0x102480001024a},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a9, match64: 0x00000000, model64: 0x1024a00010250},
		modelTuple{type64: 0x2700000027, matchRI: 0x12aa, match64: 0x00000000, model64: 0x1025000010259},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ab, match64: 0x00000000, model64: 0x1021c0001021e},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ac, match64: 0x00000000, model64: 0x788e00007891},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ad, match64: 0x00000000, model64: 0xd4330000d434},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ae, match64: 0x00000000, model64: 0x9c9700009c98},
		modelTuple{type64: 0x2700000027, matchRI: 0x12af, match64: 0x00000000, model64: 0x102590001025b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b0, match64: 0x00000000, model64: 0x153a0000153b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b1, match64: 0x00000000, model64: 0x1025b0001025d},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b2, match64: 0x00000000, model64: 0x156000001561},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b3, match64: 0x00000000, model64: 0xf06f0000f070},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b4, match64: 0x00000000, model64: 0x1025d0001025f},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b8, match64: 0x00000000, model64: 0x102630001026f},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x12b9, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x788e00007891},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1028b00010297, model64: 0x10297000102a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x102a3000102b5, model64: 0x102b5000102bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x102bc000102ce, model64: 0x102ce000102d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x102d8000102eb, model64: 0x102eb000102f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x12bd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x102f900010305, model64: 0x1030500010311},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1031100010319, model64: 0x1031900010321},
		modelTuple{type64: 0x2700000027, matchRI: 0x12bf, match64: 0x00000000, model64: 0x103270001032f},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c0, match64: 0x00000000, model64: 0x103270001032f},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x103350001033d, model64: 0x1033d00010349},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1034900010352, model64: 0x103520001035b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1035b00010361, model64: 0x1035b00010361},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1036100010365, model64: 0x1036100010365},
		modelTuple{type64: 0x20000000206, matchRI: 0x12c4, match64: 0x00000000, model64: 0x103650001036e},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c5, match64: 0x00000000, model64: 0x4a9300004a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c6, match64: 0x00000000, model64: 0x1036e0001037a},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c7, match64: 0x00000000, model64: 0x1037a00010381},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c9, match64: 0x00000000, model64: 0x1038100010387},
		modelTuple{type64: 0x2700000027, matchRI: 0x12cb, match64: 0x00000000, model64: 0x1038c00010390},
		modelTuple{type64: 0x2700000027, matchRI: 0x12cc, match64: 0x00000000, model64: 0x1039000010394},
		modelTuple{type64: 0x2700000027, matchRI: 0x12cd, match64: 0x00000000, model64: 0x103940001039a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d1, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20000000206, matchRI: 0x12d2, match64: 0x00000000, model64: 0x103ae000103b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d9, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x12da, match64: 0x00000000, model64: 0xa1b90000a1bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x12db, match64: 0x00000000, model64: 0x103c2000103c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x12dc, match64: 0x00000000, model64: 0x3a5500003a5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x12dd, match64: 0x00000000, model64: 0x3a5c00003a63},
		modelTuple{type64: 0x2700000027, matchRI: 0x12de, match64: 0x00000000, model64: 0x103c8000103ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x12df, match64: 0x00000000, model64: 0x103ce000103d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x12e1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x103dd000103e3, model64: 0x103e3000103ee},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x103ee000103fd, model64: 0x103ee000103fd},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x103fd0001040c, model64: 0x103fd0001040c},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x12e5, match64: 0x00000000, model64: 0x1040c00010415},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1041500010421, model64: 0x104210001042e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1042e0001043b, model64: 0x1042e0001043b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1043b0001044b, model64: 0x1043b0001044b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e6, match64: 0x00000000, model64: 0x1044b0001045c},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1046000010468},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e9, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ea, match64: 0x00000000, model64: 0x1046c00010477},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x12ec, match64: 0x00000000, model64: 0x1047e0001048a},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1048a00010492, model64: 0x104920001049b},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1049b000104a5, model64: 0x104a5000104b0},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x104b0000104ba, model64: 0x104ba000104c5},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x104c5000104cc, model64: 0x104cc000104d4},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x12ed, match64: 0x00000000, model64: 0x104d4000104de},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x12ee, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ef, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f0, match64: 0x00000000, model64: 0x4a9300004a98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104de000104e7, model64: 0x104e7000104f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x104f4000104fa},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f5, match64: 0x00000000, model64: 0x105050001050e},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f6, match64: 0x00000000, model64: 0x1050e00010517},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x12f7, match64: 0x00000000, model64: 0x1051700010524},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1052900010535, model64: 0x1053500010538},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1053800010544, model64: 0x1054400010547},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1054700010554, model64: 0x1055400010558},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1055800010560, model64: 0x1056000010569},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1056900010571, model64: 0x1057100010575},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105780001057e, model64: 0x105780001057e},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fa, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fc, match64: 0x00000000, model64: 0xb0870000b089},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fd, match64: 0x00000000, model64: 0xf8dd0000f8df},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fe, match64: 0x00000000, model64: 0xd44e0000d450},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ff, match64: 0x00000000, model64: 0x1058f00010598},
		modelTuple{type64: 0x2700000027, matchRI: 0x1300, match64: 0x00000000, model64: 0xbaf20000baf9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10598000105a2, model64: 0x105a2000105ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105ab000105b4, model64: 0x105b4000105ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1301, match64: 0x00000000, model64: 0xd4e90000d4eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1302, match64: 0x00000000, model64: 0x105ba000105c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1303, match64: 0x00000000, model64: 0x105c0000105c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1304, match64: 0x00000000, model64: 0x9c8b00009c8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1305, match64: 0x00000000, model64: 0x105c6000105cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1306, match64: 0x00000000, model64: 0x105cb000105d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1307, match64: 0x00000000, model64: 0x105d0000105d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1308, match64: 0x00000000, model64: 0x105d2000105d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1309, match64: 0x00000000, model64: 0x105d5000105db},
		modelTuple{type64: 0x2700000027, matchRI: 0x130b, match64: 0x00000000, model64: 0x105e1000105ea},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x130e, match64: 0x00000000, model64: 0x385f00003862},
		modelTuple{type64: 0x2700000027, matchRI: 0x130f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1310, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x105ff0001060a, model64: 0x1060a00010615},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106150001061d, model64: 0x1061d00010625},
		modelTuple{type64: 0x2700000027, matchRI: 0x1312, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x106360001063c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1314, match64: 0x00000000, model64: 0x4a9300004a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x1315, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1316, match64: 0x00000000, model64: 0x1064000010647},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106470001064f, model64: 0x106470001064f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1064f00010655, model64: 0x106550001065b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1317, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1066200010669, model64: 0x1066200010669},
		modelTuple{type64: 0x2700000027, matchRI: 0x1319, match64: 0x00000000, model64: 0x1067200010680},
		modelTuple{type64: 0x2700000027, matchRI: 0x131a, match64: 0x00000000, model64: 0x1068000010687},
		modelTuple{type64: 0x2700000027, matchRI: 0x131b, match64: 0x00000000, model64: 0x106870001068e},
		modelTuple{type64: 0x2700000027, matchRI: 0x131c, match64: 0x00000000, model64: 0x1068e00010696},
		modelTuple{type64: 0x2700000027, matchRI: 0x131d, match64: 0x00000000, model64: 0x106960001069e},
		modelTuple{type64: 0x2700000027, matchRI: 0x131e, match64: 0x00000000, model64: 0x106960001069e},
		modelTuple{type64: 0x50000000b, matchRI: 0x131f, match64: 0x00000000, model64: 0x1069e000106a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1320, match64: 0x00000000, model64: 0x106a6000106b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1321, match64: 0x00000000, model64: 0x106b7000106c2},
		modelTuple{type64: 0x20000000206, matchRI: 0x1322, match64: 0x00000000, model64: 0x106c2000106d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106d1000106dc, model64: 0x106d1000106dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106dc000106e3, model64: 0x106dc000106e3},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x1323, match64: 0x00000000, model64: 0x106e3000106e8},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x106e8000106fa, model64: 0x106fa00010704},
		modelTuple{type64: 0x28400000286, matchRI: 0x1324, match64: 0x00000000, model64: 0x107040001070c},
		modelTuple{type64: 0x28400000286, matchRI: 0x1325, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x1326, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1327, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1328, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1329, match64: 0x00000000, model64: 0x1070c0001071c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x107230001072a, model64: 0x1072a00010730},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1073000010738, model64: 0x1073800010741},
		modelTuple{type64: 0x2700000027, matchRI: 0x132b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x132c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x132d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x132e, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x132f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1330, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1075400010761, model64: 0x1076100010767},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1076700010775, model64: 0x107750001077c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1334, match64: 0x00000000, model64: 0x3a5500003a5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1335, match64: 0x00000000, model64: 0x1078200010789},
		modelTuple{type64: 0x2700000027, matchRI: 0x1336, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1078900010794, model64: 0x1079400010798},
		modelTuple{type64: 0x2700000027, matchRI: 0x1337, match64: 0x00000000, model64: 0x107980001079f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1339, match64: 0x00000000, model64: 0x107a8000107b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x133a, match64: 0x00000000, model64: 0x107b0000107c2},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x133b, match64: 0x00000000, model64: 0x107c2000107cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x133c, match64: 0x00000000, model64: 0x107cc000107d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x133d, match64: 0x00000000, model64: 0x37d9000037df},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x133e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x107db000107ea, model64: 0x107ea000107f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x107f0000107ff, model64: 0x107ff00010803},
		modelTuple{type64: 0x2700000027, matchRI: 0x1340, match64: 0x00000000, model64: 0x1080a00010810},
		modelTuple{type64: 0x2700000027, matchRI: 0x1341, match64: 0x00000000, model64: 0x1081000010818},
		modelTuple{type64: 0x2700000027, matchRI: 0x1342, match64: 0x00000000, model64: 0x1081800010821},
		modelTuple{type64: 0x2700000027, matchRI: 0x1343, match64: 0x00000000, model64: 0x1082100010828},
		modelTuple{type64: 0x2700000027, matchRI: 0x1345, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1346, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x1347, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20000000206, matchRI: 0x1348, match64: 0x00000000, model64: 0x1082e00010834},
		modelTuple{type64: 0x2700000027, matchRI: 0x134a, match64: 0x00000000, model64: 0x1083b00010844},
		modelTuple{type64: 0x2700000027, matchRI: 0x134b, match64: 0x00000000, model64: 0x1083b00010844},
		modelTuple{type64: 0x2700000027, matchRI: 0x134c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x134d, match64: 0x00000000, model64: 0x7b9b00007ba5},
		modelTuple{type64: 0x20000000206, matchRI: 0x134e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x134f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x1350, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x28400000286, matchRI: 0x1351, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x1352, match64: 0x00000000, model64: 0x1084400010850},
		modelTuple{type64: 0x20000000206, matchRI: 0x1353, match64: 0x00000000, model64: 0x1085000010859},
		modelTuple{type64: 0x20000000206, matchRI: 0x1354, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1355, match64: 0x00000000, model64: 0x108590001085f},
		modelTuple{type64: 0x28400000286, matchRI: 0x1356, match64: 0x00000000, model64: 0x1085f00010875},
		modelTuple{type64: 0x28400000286, matchRI: 0x1357, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x1358, match64: 0x00000000, model64: 0x1087500010881},
		modelTuple{type64: 0x2700000027, matchRI: 0x1359, match64: 0x00000000, model64: 0x1088100010889},
		modelTuple{type64: 0x2700000027, matchRI: 0x135a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x135c, match64: 0x00000000, model64: 0x1089100010899},
		modelTuple{type64: 0x2700000027, matchRI: 0x135d, match64: 0x00000000, model64: 0x108990001089f},
		modelTuple{type64: 0x2700000027, matchRI: 0x135e, match64: 0x00000000, model64: 0x1089f000108a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x135f, match64: 0x00000000, model64: 0x108a3000108aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1360, match64: 0x00000000, model64: 0xcd0e0000cd15},
		modelTuple{type64: 0x2700000027, matchRI: 0x1362, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x108ae000108b7, model64: 0x108590001085f},
		modelTuple{type64: 0x28400000286, matchRI: 0x1363, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1366, match64: 0x00000000, model64: 0xb9720000b974},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x108c2000108ca, model64: 0x108ca000108d7},
		modelTuple{type64: 0xbbce0000bbe3, matchRI: 0x1367, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x940000009f, matchRI: 0x1368, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x108d7000108de, model64: 0x108d7000108de},
		modelTuple{type64: 0x28400000286, matchRI: 0x1369, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x136a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x136b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x108e4000108ef},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x15ed000015ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x136f, match64: 0x00000000, model64: 0x108fe00010906},
		modelTuple{type64: 0x2700000027, matchRI: 0x1370, match64: 0x00000000, model64: 0x1090600010914},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109140001091c, model64: 0x109140001091c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1091c00010925, model64: 0x1091c00010925},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109250001092c, model64: 0x109250001092c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1371, match64: 0x00000000, model64: 0x1092c00010932},
		modelTuple{type64: 0x2700000027, matchRI: 0x1372, match64: 0x00000000, model64: 0x109320001093c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1373, match64: 0x00000000, model64: 0x1093c00010946},
		modelTuple{type64: 0x2700000027, matchRI: 0x1374, match64: 0x00000000, model64: 0x1094600010951},
		modelTuple{type64: 0x2700000027, matchRI: 0x1375, match64: 0x00000000, model64: 0x109510001095c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1376, match64: 0x00000000, model64: 0x1095c0001096a},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1096a0001096e, model64: 0x1096a0001096e},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1096e00010977, model64: 0x109770001097a},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1097a00010985, model64: 0x109850001098a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109a0000109a9, model64: 0x109a9000109b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109b4000109c1, model64: 0x109c1000109ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1379, match64: 0x00000000, model64: 0x109ce000109d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x137a, match64: 0x00000000, model64: 0x109ce000109d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109d9000109dd, model64: 0x109dd000109e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109e4000109e8, model64: 0x109e8000109ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109ed000109f1, model64: 0x109f1000109f8},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x109f8000109fc, model64: 0x109fc00010a06},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x10a0600010a0a, model64: 0x10a0a00010a13},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x10a1300010a17, model64: 0x10a1700010a21},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x137e, match64: 0x00000000, model64: 0x120f00001211},
		modelTuple{type64: 0x2700000027, matchRI: 0x137f, match64: 0x00000000, model64: 0x10a3000010a36},
		modelTuple{type64: 0x2700000027, matchRI: 0x1380, match64: 0x00000000, model64: 0x10a3600010a39},
		modelTuple{type64: 0x2700000027, matchRI: 0x1381, match64: 0x00000000, model64: 0x10a3900010a42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1382, match64: 0x00000000, model64: 0x10a4200010a52},
		modelTuple{type64: 0x2700000027, matchRI: 0x1383, match64: 0x00000000, model64: 0x10a5200010a5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1384, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a6a00010a6e, model64: 0x10a6a00010a6e},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x10a7b00010a8c, model64: 0x10a8c00010aa0},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x10aa000010ab1, model64: 0x10ab100010ac4},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x10ac400010acc, model64: 0x10acc00010adc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10adc00010ae8, model64: 0x10ae800010af5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1386, match64: 0x00000000, model64: 0x10af500010b02},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b0200010b0f, model64: 0x10b0f00010b18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b1800010b24, model64: 0x10b2400010b31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b3100010b41, model64: 0x10b4100010b52},
		modelTuple{type64: 0x2700000027, matchRI: 0x1387, match64: 0x00000000, model64: 0x10b5200010b5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b5e00010b6c, model64: 0x10b6c00010b76},
		modelTuple{type64: 0x2700000027, matchRI: 0x1388, match64: 0x00000000, model64: 0x10b7600010b7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1389, match64: 0x00000000, model64: 0x10b7f00010b87},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b9d00010ba3, model64: 0x10ba300010bab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10bab00010bb1, model64: 0x10bb100010bb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10bb900010bbf, model64: 0x10bbf00010bc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10bc700010bd0, model64: 0x10bd000010bdd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10bdd00010be3, model64: 0x10be300010bea},
		modelTuple{type64: 0x2700000027, matchRI: 0x138d, match64: 0x00000000, model64: 0xa1180000a120},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10bea00010bf3, model64: 0x10bf300010bfb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10bfb00010c01, model64: 0x10c0100010c08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c0800010c0e, model64: 0x10c0e00010c1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c1a00010c23, model64: 0x10c2300010c2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c2b00010c34, model64: 0x10c3400010c41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c4100010c47, model64: 0x10c4700010c4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c4e00010c57, model64: 0x10c5700010c5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c5f00010c68, model64: 0x10c6800010c70},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c7000010c76, model64: 0x10c7600010c7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c7f00010c85, model64: 0x10c8500010c8e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c8e00010c94, model64: 0x10c9400010c9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c9b00010ca4, model64: 0x10ca400010cac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10cac00010cb2, model64: 0x10cb200010cb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x138e, match64: 0x00000000, model64: 0x10cb500010cbc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10cbc00010cc3, model64: 0x10cc300010ccc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10ccc00010cd3, model64: 0x10cd300010cd8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10cd800010cdf, model64: 0x10cdf00010ce6},
		modelTuple{type64: 0x2700000027, matchRI: 0x138f, match64: 0x00000000, model64: 0x10ce600010ced},
		modelTuple{type64: 0x2700000027, matchRI: 0x1390, match64: 0x00000000, model64: 0x10ced00010cf2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10cf200010cf9, model64: 0x10cf900010d07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10d0700010d0f, model64: 0x10d0f00010d13},
		modelTuple{type64: 0x28400000286, matchRI: 0x1391, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x10d1300010d1c, model64: 0x10d1c00010d26},
		modelTuple{type64: 0x20000000206, matchRI: 0x1392, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1393, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1394, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x10b9500010b9d, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1397, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1398, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10d3d00010d42, model64: 0x5ee400005eea},
		modelTuple{type64: 0x2700000027, matchRI: 0x139a, match64: 0x00000000, model64: 0x10d4200010d4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10d4f00010d54, model64: 0x10d5400010d5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x139b, match64: 0x00000000, model64: 0x10d5d00010d69},
		modelTuple{type64: 0x2700000027, matchRI: 0x139c, match64: 0x00000000, model64: 0x10d6900010d72},
		modelTuple{type64: 0x2700000027, matchRI: 0x139d, match64: 0x00000000, model64: 0x10d7200010d7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x139e, match64: 0x00000000, model64: 0x10d7b00010d84},
		modelTuple{type64: 0x2700000027, matchRI: 0x139f, match64: 0x00000000, model64: 0x10d8400010d8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a0, match64: 0x00000000, model64: 0x10d8d00010d96},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a1, match64: 0x00000000, model64: 0x10d9600010d9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a2, match64: 0x00000000, model64: 0x10d9f00010da8},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a3, match64: 0x00000000, model64: 0x10da800010db4},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a4, match64: 0x00000000, model64: 0x10db400010dbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a5, match64: 0x00000000, model64: 0x10dbd00010dc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a6, match64: 0x00000000, model64: 0x10dc600010dcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a7, match64: 0x00000000, model64: 0x10dcf00010dda},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a8, match64: 0x00000000, model64: 0x10dda00010de9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10de900010dee, model64: 0x10dee00010df3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10df300010df8, model64: 0x10df800010e05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10e0500010e0a, model64: 0x10e0a00010e13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10e1300010e18, model64: 0x10e1800010e21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10e2100010e26, model64: 0x10e2600010e2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a9, match64: 0x00000000, model64: 0x10e2f00010e3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13aa, match64: 0x00000000, model64: 0x10e3a00010e42},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ab, match64: 0x00000000, model64: 0x10e4200010e4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10e4d00010e52, model64: 0x10e5200010e5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10e5c00010e61, model64: 0x10e6100010e70},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10e7000010e75, model64: 0x10e7500010e7d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10e7d00010e82, model64: 0x10e8200010e93},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ac, match64: 0x00000000, model64: 0x10e9300010e9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ad, match64: 0x00000000, model64: 0x10e9d00010ea8},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ae, match64: 0x00000000, model64: 0x10ea800010eb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x13af, match64: 0x00000000, model64: 0x10eb200010ebc},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b0, match64: 0x00000000, model64: 0x10ebc00010ecb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10ecb00010ed2, model64: 0x10ecb00010ed2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10ed200010ed7, model64: 0x10ed200010ed7},
		modelTuple{type64: 0x20000000206, matchRI: 0x13b1, match64: 0x00000000, model64: 0x10ed700010ee4},
		modelTuple{type64: 0x20000000206, matchRI: 0x13b2, match64: 0x00000000, model64: 0x10ee400010eee},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5af100005af3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10f2f00010f37, model64: 0x10f3700010f3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b8, match64: 0x00000000, model64: 0x10f3f00010f49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10f4900010f50, model64: 0x10f4900010f50},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x10f5000010f55, model64: 0x10f5000010f55},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x10f5500010f61, model64: 0x10f6100010f6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ba, match64: 0x00000000, model64: 0x10f7900010f7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x13bb, match64: 0x00000000, model64: 0x10f7f00010f8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x13bc, match64: 0x00000000, model64: 0x10f8b00010f9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x13bd, match64: 0x00000000, model64: 0x10f9b00010fa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x13be, match64: 0x00000000, model64: 0x10fa600010faf},
		modelTuple{type64: 0x2700000027, matchRI: 0x13bf, match64: 0x00000000, model64: 0x10faf00010fb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c0, match64: 0x00000000, model64: 0x10fb900010fc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c1, match64: 0x00000000, model64: 0x10fc400010fce},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c2, match64: 0x00000000, model64: 0x10fce00010fd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c3, match64: 0x00000000, model64: 0x10fd900010fe1},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c4, match64: 0x00000000, model64: 0x10fe100010fe9},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c5, match64: 0x00000000, model64: 0x10fe900010ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c6, match64: 0x00000000, model64: 0x10ff100010ff7},
		modelTuple{type64: 0x20000000206, matchRI: 0x13c7, match64: 0x00000000, model64: 0x10ff700010ffd},
		modelTuple{type64: 0x20000000206, matchRI: 0x13c8, match64: 0x00000000, model64: 0x10ffd00011003},
		modelTuple{type64: 0x20000000206, matchRI: 0x13c9, match64: 0x00000000, model64: 0x110030001100c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110120001101e, model64: 0x1101e00011020},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1102000011026, model64: 0x110260001102c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1102c00011038, model64: 0x110380001103c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1103c00011048, model64: 0x110480001104c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1104c00011058, model64: 0x110580001105c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1105c00011068, model64: 0x110680001106c},
		modelTuple{type64: 0x2700000027, matchRI: 0x13cb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1107500011087, model64: 0x110870001109a},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x13cd, match64: 0x00000000, model64: 0x1109a000110ab},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x110ab000110b5, model64: 0x110b5000110bd},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x110bd000110c7, model64: 0x110c7000110d3},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x110d3000110dd, model64: 0x110dd000110e9},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x110e9000110f3, model64: 0x110f3000110fb},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x110fb00011105, model64: 0x111050001110d},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1110d00011117, model64: 0x111170001111f},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1111f00011129, model64: 0x1112900011131},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x111310001113b, model64: 0x1113b00011147},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1114700011151, model64: 0x1115100011159},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1115900011163, model64: 0x111630001116f},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1116f00011179, model64: 0x1117900011181},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x111810001118b, model64: 0x1118b00011197},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x11197000111a1, model64: 0x111a1000111a9},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x111a9000111b3, model64: 0x111b3000111ba},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x111ba000111c4, model64: 0x111c4000111cf},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x111cf000111d9, model64: 0x111d9000111e4},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x111e4000111ee, model64: 0x111ee000111f9},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x111f900011203, model64: 0x112030001120e},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1120e00011218, model64: 0x112180001121f},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1121f00011229, model64: 0x1122900011234},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x112340001123e, model64: 0x1123e00011249},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1124900011253, model64: 0x112530001125a},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1125a00011264, model64: 0x112640001126f},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1126f00011279, model64: 0x1127900011284},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x112840001128e, model64: 0x1128e00011299},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x11299000112a3, model64: 0x112a3000112ae},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x112ae000112b8, model64: 0x112b8000112c3},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x112c3000112cd, model64: 0x112cd000112d8},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x13ce, match64: 0x00000000, model64: 0x112d8000112df},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x112df000112e9, model64: 0x112e9000112f0},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x112f0000112fa, model64: 0x112fa00011301},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x113010001130b, model64: 0x1130b00011312},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x113120001131c, model64: 0x1131c00011323},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x113230001132d, model64: 0x1132d00011334},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x113340001133e, model64: 0x1133e00011345},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x113450001134f, model64: 0x1134f00011356},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1135600011360, model64: 0x1136000011368},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1136800011372, model64: 0x1137200011379},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1137900011383, model64: 0x113830001138a},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1138a00011394, model64: 0x113940001139f},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1139f000113a9, model64: 0x113a9000113b0},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x113b0000113ba, model64: 0x113ba000113c2},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x113c2000113cc, model64: 0x113cc000113d4},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x113d4000113de, model64: 0x113de000113e6},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x113e6000113f0, model64: 0x113f0000113f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x113f800011402, model64: 0x1140200011419},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1141900011420, model64: 0x114200001142a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1142a00011431, model64: 0x114310001143c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1143c00011446, model64: 0x1144600011460},
		modelTuple{type64: 0x2700000027, matchRI: 0x13cf, match64: 0x00000000, model64: 0x1146000011471},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d0, match64: 0x00000000, model64: 0x1147100011482},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d1, match64: 0x00000000, model64: 0x114820001148e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1148e00011498, model64: 0x11498000114ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x114ae000114b8, model64: 0x114b8000114bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d2, match64: 0x00000000, model64: 0x114bd000114d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d3, match64: 0x00000000, model64: 0x114d1000114dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d4, match64: 0x00000000, model64: 0x114dc000114e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d5, match64: 0x00000000, model64: 0x114e7000114ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d6, match64: 0x00000000, model64: 0x114ec000114f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x13d8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x13da, match64: 0x00000000, model64: 0x114f900011502},
		modelTuple{type64: 0x2700000027, matchRI: 0x13db, match64: 0x00000000, model64: 0x1150200011509},
		modelTuple{type64: 0x2700000027, matchRI: 0x13dd, match64: 0x00000000, model64: 0x1150f00011518},
		modelTuple{type64: 0x2700000027, matchRI: 0x13de, match64: 0x00000000, model64: 0x115180001151f},
		modelTuple{type64: 0x2700000027, matchRI: 0x13df, match64: 0x00000000, model64: 0x1151f00011527},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e0, match64: 0x00000000, model64: 0x115270001152c},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e1, match64: 0x00000000, model64: 0x1152c00011532},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e2, match64: 0x00000000, model64: 0x428d00004295},
		modelTuple{type64: 0x20000000206, matchRI: 0x13e3, match64: 0x00000000, model64: 0x1153200011534},
		modelTuple{type64: 0x20000000206, matchRI: 0x13e4, match64: 0x00000000, model64: 0x115340001153b},
		modelTuple{type64: 0x20000000206, matchRI: 0x13e5, match64: 0x00000000, model64: 0x1153b00011543},
		modelTuple{type64: 0x20000000206, matchRI: 0x13e6, match64: 0x00000000, model64: 0x115430001154b},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x13e8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e9, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x13eb, match64: 0x00000000, model64: 0x115590001155e},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ec, match64: 0x00000000, model64: 0x1155e00011564},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x13ef, match64: 0x00000000, model64: 0x115740001157d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x115920001159a, model64: 0x115920001159a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x115ac000115b4, model64: 0x115ac000115b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x115bb000115c8, model64: 0x115c8000115d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f9, match64: 0x00000000, model64: 0x115d6000115e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x115e1000115e9, model64: 0x115e1000115e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fa, match64: 0x00000000, model64: 0x115e9000115f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x115f2000115f9, model64: 0x115f900011605},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116050001160c, model64: 0x116050001160c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1160c00011615, model64: 0x1160c00011615},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9af600009afb, model64: 0x9af600009afb},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fb, match64: 0x00000000, model64: 0x1161500011622},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116220001162a, model64: 0x1162a00011632},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1163200011638, model64: 0x116380001163e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1163e00011644, model64: 0x116440001164a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fc, match64: 0x00000000, model64: 0x1164a00011655},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fd, match64: 0x00000000, model64: 0x116550001165f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1165f00011666, model64: 0x116660001166d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1166d0001167b, model64: 0x1167b00011689},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116890001169a, model64: 0x116890001169a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fe, match64: 0x00000000, model64: 0x1169a000116a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ff, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1400, match64: 0x00000000, model64: 0x116a7000116af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1401, match64: 0x00000000, model64: 0x116af000116b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1402, match64: 0x00000000, model64: 0x5dfd00005e06},
		modelTuple{type64: 0x20000000206, matchRI: 0x1403, match64: 0x00000000, model64: 0x116b2000116b8},
		modelTuple{type64: 0x20000000206, matchRI: 0x1404, match64: 0x00000000, model64: 0x116b2000116b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1405, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116b8000116c2, model64: 0x116b8000116c2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116cd000116d5, model64: 0x116d5000116df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116df000116e8, model64: 0x116e8000116f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116f2000116fc, model64: 0x116fc00011706},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117060001170e, model64: 0x1170e00011718},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1171800011721, model64: 0x117210001172b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1172b00011733, model64: 0x117330001173d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1173d00011746, model64: 0x1174600011750},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117500001175a, model64: 0x1175a00011765},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117650001176f, model64: 0x1176f0001177a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1408, match64: 0x00000000, model64: 0x1177a00011785},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117850001178e, model64: 0x1178e00011799},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x117990001179f, model64: 0xb3370000b339},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1179f000117a7, model64: 0x117a7000117af},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x117af000117b6, model64: 0x117b6000117be},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x117be000117c6, model64: 0x117c6000117d0},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x117d0000117d6, model64: 0x117d6000117dd},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x117dd000117e6, model64: 0x117e6000117f1},
		modelTuple{type64: 0x20000000206, matchRI: 0x1409, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x140a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x140b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x140c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x117f1000117f6, model64: 0x117f6000117fa},
		modelTuple{type64: 0x20000000206, matchRI: 0x140d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x140f, match64: 0x00000000, model64: 0x118050001180f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1410, match64: 0x00000000, model64: 0x1180f0001181b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1181b00011823, model64: 0x1181b00011823},
		modelTuple{type64: 0x2700000027, matchRI: 0x1411, match64: 0x00000000, model64: 0x1182300011830},
		modelTuple{type64: 0x2700000027, matchRI: 0x1412, match64: 0x00000000, model64: 0x1183000011838},
		modelTuple{type64: 0x2700000027, matchRI: 0x1413, match64: 0x00000000, model64: 0x1183800011840},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1416, match64: 0x00000000, model64: 0x1184b00011853},
		modelTuple{type64: 0x2700000027, matchRI: 0x1417, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1418, match64: 0x00000000, model64: 0x118530001185a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1419, match64: 0x00000000, model64: 0x1185a00011860},
		modelTuple{type64: 0x2700000027, matchRI: 0x141a, match64: 0x00000000, model64: 0x1186000011862},
		modelTuple{type64: 0x2700000027, matchRI: 0x141b, match64: 0x00000000, model64: 0x118620001186d},
		modelTuple{type64: 0x20000000206, matchRI: 0x141c, match64: 0x00000000, model64: 0x1186d00011878},
		modelTuple{type64: 0x20000000206, matchRI: 0x141d, match64: 0x00000000, model64: 0x1187800011881},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1188c0001189b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1420, match64: 0x00000000, model64: 0x1189f000118a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1421, match64: 0x00000000, model64: 0x118a6000118ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1422, match64: 0x00000000, model64: 0x118ab000118b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1423, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1424, match64: 0x00000000, model64: 0x118b4000118bc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x118c0000118c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118d1000118dd, model64: 0x118dd000118e5},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x118e5000118ef, model64: 0x118ef00011900},
		modelTuple{type64: 0x20000000206, matchRI: 0x1427, match64: 0x00000000, model64: 0x119000001190c},
		modelTuple{type64: 0x20000000206, matchRI: 0x1428, match64: 0x00000000, model64: 0x1190c0001191c},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1191c00011927, model64: 0x1192700011936},
		modelTuple{type64: 0x20000000206, matchRI: 0x1429, match64: 0x00000000, model64: 0x1193600011941},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x119410001194c, model64: 0x1194c0001195d},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1195d00011967, model64: 0x1196700011978},
		modelTuple{type64: 0x20000000206, matchRI: 0x142a, match64: 0x00000000, model64: 0x1197800011988},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1198800011994, model64: 0x11994000119a3},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x119a3000119ae, model64: 0x119ae000119bd},
		modelTuple{type64: 0x20000000206, matchRI: 0x142b, match64: 0x00000000, model64: 0x119bd000119c2},
		modelTuple{type64: 0x20000000206, matchRI: 0x142c, match64: 0x00000000, model64: 0x119c2000119c6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x119c9000119d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x142f, match64: 0x00000000, model64: 0x119d8000119e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1430, match64: 0x00000000, model64: 0x119e9000119ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x119ef000119f7, model64: 0x119f7000119fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1431, match64: 0x00000000, model64: 0x119fd00011a03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1432, match64: 0x00000000, model64: 0x11a0300011a0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1433, match64: 0x00000000, model64: 0x11a0a00011a0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a0e00011a16, model64: 0x11a1600011a21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a2100011a29, model64: 0x11a2900011a33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a3300011a3b, model64: 0x46940000469a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a3b00011a43, model64: 0x11a4300011a4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1434, match64: 0x00000000, model64: 0x3cd200003cd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1435, match64: 0x00000000, model64: 0x11a4b00011a5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1436, match64: 0x00000000, model64: 0x11a5a00011a6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1437, match64: 0x00000000, model64: 0x11a6b00011a78},
		modelTuple{type64: 0x20000000206, matchRI: 0x1438, match64: 0x00000000, model64: 0x11a7800011a8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1439, match64: 0x00000000, model64: 0x11a6b00011a78},
		modelTuple{type64: 0x2700000027, matchRI: 0x143a, match64: 0x00000000, model64: 0x11a6b00011a78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a8b00011a8f, model64: 0x11a8f00011a9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x143b, match64: 0x00000000, model64: 0x11a9c00011aa4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11aa400011aa8, model64: 0x11aa800011ab1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11ab100011ab5, model64: 0x11ab100011ab5},
		modelTuple{type64: 0x2700000027, matchRI: 0x143c, match64: 0x00000000, model64: 0x11ab500011abd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11abd00011ac7, model64: 0x11abd00011ac7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11ace00011adc, model64: 0x11ace00011adc},
		modelTuple{type64: 0x2700000027, matchRI: 0x143f, match64: 0x00000000, model64: 0x11ae600011aee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11af500011af9, model64: 0x11af900011afc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11afc00011b02, model64: 0x11b0200011b07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b0700011b0b, model64: 0x11b0b00011b0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b0f00011b13, model64: 0x11b1300011b1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1442, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1443, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b2100011b28, model64: 0x11b2800011b30},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x11b3000011b39, model64: 0x11b3900011b43},
		modelTuple{type64: 0x20000000206, matchRI: 0x1444, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x11b5600011b5d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1449, match64: 0x00000000, model64: 0x11b6900011b70},
		modelTuple{type64: 0x2700000027, matchRI: 0x144a, match64: 0x00000000, model64: 0x11b7000011b77},
		modelTuple{type64: 0x2700000027, matchRI: 0x144b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x144d, match64: 0x00000000, model64: 0x11b7d00011b88},
		modelTuple{type64: 0x2700000027, matchRI: 0x144e, match64: 0x00000000, model64: 0x14dc000014dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x144f, match64: 0x00000000, model64: 0xd4330000d434},
		modelTuple{type64: 0x2700000027, matchRI: 0x1450, match64: 0x00000000, model64: 0x11b8800011b8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1451, match64: 0x00000000, model64: 0x153a0000153b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b8d00011b94, model64: 0x11b9400011b96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1452, match64: 0x00000000, model64: 0x11b9600011b9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1453, match64: 0x00000000, model64: 0x9c9700009c98},
		modelTuple{type64: 0x2700000027, matchRI: 0x1454, match64: 0x00000000, model64: 0xb0870000b089},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b9b00011ba2, model64: 0xf0d40000f0db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1455, match64: 0x00000000, model64: 0x11ba200011ba8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11ba800011baf, model64: 0x11baf00011bb4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11bb400011bbb, model64: 0x11bbb00011bc1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11bc100011bc8, model64: 0x11bc800011bd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11bd100011bd8, model64: 0x11bd800011bdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1456, match64: 0x00000000, model64: 0x11bdd00011be2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1457, match64: 0x00000000, model64: 0x11be200011beb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1458, match64: 0x00000000, model64: 0x11beb00011bed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1459, match64: 0x00000000, model64: 0x156000001561},
		modelTuple{type64: 0x2700000027, matchRI: 0x145a, match64: 0x00000000, model64: 0x11bed00011bf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x145b, match64: 0x00000000, model64: 0x11bf200011bf4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11bf400011bfb, model64: 0x11bfb00011bfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x145c, match64: 0x00000000, model64: 0xf06f0000f070},
		modelTuple{type64: 0x2700000027, matchRI: 0x145d, match64: 0x00000000, model64: 0x11bfd00011bff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11bff00011c06, model64: 0x11c0600011c08},
		modelTuple{type64: 0x2700000027, matchRI: 0x145e, match64: 0x00000000, model64: 0x11c0800011c0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x145f, match64: 0x00000000, model64: 0x156600001567},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c0d00011c14, model64: 0x11c1400011c16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c1600011c1d, model64: 0x1024300010248},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c1d00011c24, model64: 0x11c2400011c3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c3a00011c41, model64: 0x102170001021c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c4100011c48, model64: 0x2d9300002d94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c4800011c4f, model64: 0x11c4f00011c51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c5100011c58, model64: 0x11c5800011c5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c5a00011c61, model64: 0x11c6100011c65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c6500011c6c, model64: 0x11c6c00011c6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c6e00011c75, model64: 0x11c7500011c7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c7e00011c85, model64: 0x11c8500011c8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1460, match64: 0x00000000, model64: 0x11c8d00011c8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1461, match64: 0x00000000, model64: 0x3bf000003c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1462, match64: 0x00000000, model64: 0x4e9900004e9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1463, match64: 0x00000000, model64: 0x105d0000105d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1464, match64: 0x00000000, model64: 0x11c8f00011c92},
		modelTuple{type64: 0x2700000027, matchRI: 0x1465, match64: 0x00000000, model64: 0x11c9200011c95},
		modelTuple{type64: 0x2700000027, matchRI: 0x1466, match64: 0x00000000, model64: 0x11c9500011c98},
		modelTuple{type64: 0x2700000027, matchRI: 0x1467, match64: 0x00000000, model64: 0x11c9800011cac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1468, match64: 0x00000000, model64: 0x11cac00011caf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1469, match64: 0x00000000, model64: 0x11caf00011cb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x146a, match64: 0x00000000, model64: 0x11cb200011cb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x146b, match64: 0x00000000, model64: 0x11cb500011cb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x146c, match64: 0x00000000, model64: 0x11cb900011cbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x146d, match64: 0x00000000, model64: 0x11cbc00011cc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x146e, match64: 0x00000000, model64: 0x11cc000011cc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11cc400011ccb, model64: 0x11ccb00011cd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x146f, match64: 0x00000000, model64: 0x11cd500011cdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1470, match64: 0x00000000, model64: 0x11cdd00011ce3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1471, match64: 0x00000000, model64: 0x11ce300011ceb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1472, match64: 0x00000000, model64: 0x11ceb00011cf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1473, match64: 0x00000000, model64: 0x11cf400011d05},
		modelTuple{type64: 0x2700000027, matchRI: 0x1474, match64: 0x00000000, model64: 0x11d0500011d11},
		modelTuple{type64: 0x2700000027, matchRI: 0x1475, match64: 0x00000000, model64: 0x11d1100011d1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1476, match64: 0x00000000, model64: 0x11d1d00011d25},
		modelTuple{type64: 0x2700000027, matchRI: 0x1477, match64: 0x00000000, model64: 0x11d2500011d2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1478, match64: 0x00000000, model64: 0x11d2e00011d37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1479, match64: 0x00000000, model64: 0x11d3700011d3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d3f00011d46, model64: 0x11d4600011d51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d5100011d58, model64: 0x11d5800011d61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d6100011d68, model64: 0x11d6800011d71},
		modelTuple{type64: 0x2700000027, matchRI: 0x147a, match64: 0x00000000, model64: 0x751d0000751f},
		modelTuple{type64: 0x2700000027, matchRI: 0x147b, match64: 0x00000000, model64: 0x11d7100011d77},
		modelTuple{type64: 0x2700000027, matchRI: 0x147c, match64: 0x00000000, model64: 0x11d7700011d7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x147d, match64: 0x00000000, model64: 0x11d7e00011d85},
		modelTuple{type64: 0x2700000027, matchRI: 0x147e, match64: 0x00000000, model64: 0x11d8500011d8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x147f, match64: 0x00000000, model64: 0x11d8f00011d9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1480, match64: 0x00000000, model64: 0x9c8b00009c8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1481, match64: 0x00000000, model64: 0x11d9d00011daa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11daa00011db1, model64: 0x9c8b00009c8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11bb400011bbb, model64: 0x11bbb00011bc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1482, match64: 0x00000000, model64: 0x11db100011db4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1483, match64: 0x00000000, model64: 0x11db400011db9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1484, match64: 0x00000000, model64: 0x11db900011dbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1485, match64: 0x00000000, model64: 0x11dbe00011dc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11dc400011dcb, model64: 0x11dcb00011dd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1486, match64: 0x00000000, model64: 0x11dd200011dd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1487, match64: 0x00000000, model64: 0x11dd800011dde},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11dde00011de5, model64: 0x11de500011dea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1488, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x20000000206, matchRI: 0x1489, match64: 0x00000000, model64: 0x11dea00011ded},
		modelTuple{type64: 0x2700000027, matchRI: 0x148b, match64: 0x00000000, model64: 0x11df300011e03},
		modelTuple{type64: 0x2700000027, matchRI: 0x148d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11e0900011e11, model64: 0x11e1100011e1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11e1a00011e20, model64: 0x11e2000011e27},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x11e2700011e2f, model64: 0x11e2f00011e38},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x11e3800011e45, model64: 0x11e4500011e52},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x11e5200011e5f, model64: 0x11e5f00011e6c},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x11e6c00011e79, model64: 0x11e7900011e88},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x11e8800011e99, model64: 0x11e9900011eac},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x148e, match64: 0x00000000, model64: 0x11eac00011eb8},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x11eb800011ec0, model64: 0x11ec000011ec8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1490, match64: 0x00000000, model64: 0x11ece00011ed3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11ed700011ee3, model64: 0x11ee300011eeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1492, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x11ef400011ef8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1496, match64: 0x00000000, model64: 0x11f0300011f09},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1497, match64: 0x00000000, model64: 0x11f0900011f0f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x11f1700011f1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x149a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x149c, match64: 0x00000000, model64: 0x11f2700011f33},
		modelTuple{type64: 0x2700000027, matchRI: 0x149d, match64: 0x00000000, model64: 0x11f3300011f3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x149e, match64: 0x00000000, model64: 0x11f3f00011f4a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x11f6600011f6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11f7400011f7a, model64: 0x11f7400011f7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11f7a00011f82, model64: 0x11f7a00011f82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11f8200011f87, model64: 0x11f8200011f87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11f8b00011f90, model64: 0x11f9000011f97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2700000027, model64: 0x11f9700011fab},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a2, match64: 0x00000000, model64: 0x11fb200011fc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a3, match64: 0x00000000, model64: 0x11fc000011fcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x11fd600011fdd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x14a8, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a9, match64: 0x00000000, model64: 0x11fea00011ff5},
		modelTuple{type64: 0x2700000027, matchRI: 0x14aa, match64: 0x00000000, model64: 0x11ff500012001},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ab, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ad, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x14ae, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1200f00012018, model64: 0x1200f00012018},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x120180001201f, model64: 0x120180001201f},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b3, match64: 0x00000000, model64: 0x3a5500003a5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1202a00012030, model64: 0x1203000012037},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1203c00012041, model64: 0x1203c00012041},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1204100012048, model64: 0xc0ea0000c0ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x14b8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ba, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x14bb, match64: 0x00000000, model64: 0xa6b30000a6b6},
		modelTuple{type64: 0x20000000206, matchRI: 0x14bd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x14bf, match64: 0x00000000, model64: 0x1205f00012066},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c0, match64: 0x00000000, model64: 0x1206600012071},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c1, match64: 0x00000000, model64: 0x1207100012077},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c4, match64: 0x00000000, model64: 0x1207a00012085},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c5, match64: 0x00000000, model64: 0x1208500012091},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c6, match64: 0x00000000, model64: 0x120910001209a},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c7, match64: 0x00000000, model64: 0x1209a000120a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c8, match64: 0x00000000, model64: 0x120a5000120b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c9, match64: 0x00000000, model64: 0x120b0000120c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ca, match64: 0x00000000, model64: 0x120c0000120cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x14cb, match64: 0x00000000, model64: 0x120cc000120d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x14cc, match64: 0x00000000, model64: 0x120d5000120e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x14cd, match64: 0x00000000, model64: 0x120e0000120e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ce, match64: 0x00000000, model64: 0x120e9000120f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x14cf, match64: 0x00000000, model64: 0x120f500012101},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d0, match64: 0x00000000, model64: 0x1210100012112},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d1, match64: 0x00000000, model64: 0x121120001211e},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d2, match64: 0x00000000, model64: 0x1211e00012128},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d3, match64: 0x00000000, model64: 0x1212800012132},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d4, match64: 0x00000000, model64: 0x121320001213a},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d5, match64: 0x00000000, model64: 0x1213a00012145},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d6, match64: 0x00000000, model64: 0x1214500012151},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d7, match64: 0x00000000, model64: 0x121510001215a},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1215a00012161, model64: 0x1215a00012161},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d9, match64: 0x00000000, model64: 0x1216d00012176},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x121840001218b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12192000121a2, model64: 0x121a2000121b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121b2000121c1, model64: 0x121c1000121d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121d2000121dd, model64: 0x121d2000121dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121dd000121e6, model64: 0x121e6000121ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x14df, match64: 0x00000000, model64: 0x121ef000121f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121f800012201, model64: 0x121f800012201},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x122010001220f, model64: 0x1220f00012219},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1221900012227, model64: 0x1222700012231},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x122310001223e, model64: 0x1223e00012247},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1224700012250, model64: 0x9bb800009bbd},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x122500001225b, model64: 0x1225b00012262},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x122620001226e, model64: 0x1226e00012276},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1227600012282, model64: 0x122820001228a},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1228a00012291, model64: 0x1229100012294},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x12294000122a3, model64: 0x122a3000122ae},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x122ae000122b7, model64: 0x122b7000122bc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x122c1000122c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122ce000122d5, model64: 0x122ce000122d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122d5000122e0, model64: 0x122d5000122e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122e0000122eb, model64: 0x122eb000122f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122f600012300, model64: 0x123000001230a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1230a00012316, model64: 0x1231600012322},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1232200012329, model64: 0x1232900012330},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1233000012338, model64: 0x1233800012340},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1234000012347, model64: 0x123470001234e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1234e00012355, model64: 0x1234e00012355},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1236300012369, model64: 0x1236300012369},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1236900012376, model64: 0x1237600012383},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1238900012390, model64: 0x1238900012390},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e7, match64: 0x00000000, model64: 0x12397000123a3},
		modelTuple{type64: 0x28400000286, matchRI: 0x14e8, match64: 0x00000000, model64: 0x123a3000123ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ea, match64: 0x00000000, model64: 0x123b9000123c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x14eb, match64: 0x00000000, model64: 0x123c1000123c6},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x123c6000123cd, model64: 0x123cd000123d3},
		modelTuple{type64: 0x20000000206, matchRI: 0x14ec, match64: 0x00000000, model64: 0x123d3000123d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x123e1000123ed, model64: 0x123ed000123f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x123f900012401, model64: 0x1240100012409},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1240900012413, model64: 0x124130001241d},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x14ef, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x124220001242f, model64: 0x1242f00012434},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x124340001243d, model64: 0x1243d00012443},
		modelTuple{type64: 0x28400000286, matchRI: 0x14f3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f5, match64: 0x00000000, model64: 0x1244800012457},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x124570001245f, model64: 0x1245f00012468},
		modelTuple{type64: 0x28400000286, matchRI: 0x14f7, match64: 0x00000000, model64: 0x1246800012471},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x1247100012477, model64: 0x2700000027},
		modelTuple{type64: 0x28400000286, matchRI: 0x14f8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x14f9, match64: 0x00000000, model64: 0x1247700012487},
		modelTuple{type64: 0x20000000206, matchRI: 0x14fa, match64: 0x00000000, model64: 0x124870001249c},
		modelTuple{type64: 0x20000000206, matchRI: 0x14fb, match64: 0x00000000, model64: 0x1249c000124b2},
		modelTuple{type64: 0x20000000206, matchRI: 0x14fc, match64: 0x00000000, model64: 0x124b2000124c7},
		modelTuple{type64: 0x20000000206, matchRI: 0x14fd, match64: 0x00000000, model64: 0x124c7000124db},
		modelTuple{type64: 0x20000000206, matchRI: 0x14fe, match64: 0x00000000, model64: 0x124db000124ec},
		modelTuple{type64: 0x20000000206, matchRI: 0x14ff, match64: 0x00000000, model64: 0x124ec00012502},
		modelTuple{type64: 0x20000000206, matchRI: 0x1500, match64: 0x00000000, model64: 0x1250200012517},
		modelTuple{type64: 0x20000000206, matchRI: 0x1501, match64: 0x00000000, model64: 0x1251700012521},
		modelTuple{type64: 0x20000000206, matchRI: 0x1502, match64: 0x00000000, model64: 0x1252100012530},
		modelTuple{type64: 0x20000000206, matchRI: 0x1503, match64: 0x00000000, model64: 0x1253000012544},
		modelTuple{type64: 0x20000000206, matchRI: 0x1504, match64: 0x00000000, model64: 0x1254400012556},
		modelTuple{type64: 0x20000000206, matchRI: 0x1505, match64: 0x00000000, model64: 0x125560001256d},
		modelTuple{type64: 0x20000000206, matchRI: 0x1506, match64: 0x00000000, model64: 0x1256d00012581},
		modelTuple{type64: 0x20000000206, matchRI: 0x1507, match64: 0x00000000, model64: 0x1258100012593},
		modelTuple{type64: 0x20000000206, matchRI: 0x1508, match64: 0x00000000, model64: 0x12593000125aa},
		modelTuple{type64: 0x20000000206, matchRI: 0x1509, match64: 0x00000000, model64: 0x125aa000125c0},
		modelTuple{type64: 0x20000000206, matchRI: 0x150a, match64: 0x00000000, model64: 0x125c0000125d2},
		modelTuple{type64: 0x20000000206, matchRI: 0x150b, match64: 0x00000000, model64: 0x125d2000125e6},
		modelTuple{type64: 0x20000000206, matchRI: 0x150c, match64: 0x00000000, model64: 0x125e6000125f5},
		modelTuple{type64: 0x20000000206, matchRI: 0x150d, match64: 0x00000000, model64: 0x125f500012605},
		modelTuple{type64: 0x20000000206, matchRI: 0x150e, match64: 0x00000000, model64: 0x1260500012615},
		modelTuple{type64: 0x20000000206, matchRI: 0x150f, match64: 0x00000000, model64: 0x1261500012638},
		modelTuple{type64: 0x20000000206, matchRI: 0x1510, match64: 0x00000000, model64: 0x1263800012656},
		modelTuple{type64: 0x20000000206, matchRI: 0x1511, match64: 0x00000000, model64: 0x1265600012678},
		modelTuple{type64: 0x20000000206, matchRI: 0x1512, match64: 0x00000000, model64: 0x1267800012691},
		modelTuple{type64: 0x20000000206, matchRI: 0x1513, match64: 0x00000000, model64: 0x12691000126a5},
		modelTuple{type64: 0x20000000206, matchRI: 0x1514, match64: 0x00000000, model64: 0x126a5000126bd},
		modelTuple{type64: 0x20000000206, matchRI: 0x1515, match64: 0x00000000, model64: 0x126bd000126e5},
		modelTuple{type64: 0x20000000206, matchRI: 0x1516, match64: 0x00000000, model64: 0x126e50001270e},
		modelTuple{type64: 0x20000000206, matchRI: 0x1517, match64: 0x00000000, model64: 0x1270e00012735},
		modelTuple{type64: 0x20000000206, matchRI: 0x1518, match64: 0x00000000, model64: 0x127350001275d},
		modelTuple{type64: 0x20000000206, matchRI: 0x1519, match64: 0x00000000, model64: 0x1275d00012779},
		modelTuple{type64: 0x20000000206, matchRI: 0x151a, match64: 0x00000000, model64: 0x1277900012795},
		modelTuple{type64: 0x20000000206, matchRI: 0x151b, match64: 0x00000000, model64: 0x12795000127b3},
		modelTuple{type64: 0x20000000206, matchRI: 0x151c, match64: 0x00000000, model64: 0x127b3000127d2},
		modelTuple{type64: 0x20000000206, matchRI: 0x151d, match64: 0x00000000, model64: 0x127d2000127f4},
		modelTuple{type64: 0x20000000206, matchRI: 0x151e, match64: 0x00000000, model64: 0x127f400012817},
		modelTuple{type64: 0x20000000206, matchRI: 0x151f, match64: 0x00000000, model64: 0x1281700012832},
		modelTuple{type64: 0x20000000206, matchRI: 0x1520, match64: 0x00000000, model64: 0x1283200012849},
		modelTuple{type64: 0x20000000206, matchRI: 0x1521, match64: 0x00000000, model64: 0x1284900012861},
		modelTuple{type64: 0x20000000206, matchRI: 0x1522, match64: 0x00000000, model64: 0x1286100012879},
		modelTuple{type64: 0x20000000206, matchRI: 0x1523, match64: 0x00000000, model64: 0x1287900012897},
		modelTuple{type64: 0x20000000206, matchRI: 0x1524, match64: 0x00000000, model64: 0x12897000128aa},
		modelTuple{type64: 0x20000000206, matchRI: 0x1525, match64: 0x00000000, model64: 0x128aa000128be},
		modelTuple{type64: 0x20000000206, matchRI: 0x1526, match64: 0x00000000, model64: 0x128be000128d7},
		modelTuple{type64: 0x20000000206, matchRI: 0x1527, match64: 0x00000000, model64: 0x128d7000128ea},
		modelTuple{type64: 0x20000000206, matchRI: 0x1528, match64: 0x00000000, model64: 0x128ea00012901},
		modelTuple{type64: 0x20000000206, matchRI: 0x1529, match64: 0x00000000, model64: 0x1290100012919},
		modelTuple{type64: 0x20000000206, matchRI: 0x152a, match64: 0x00000000, model64: 0x1291900012936},
		modelTuple{type64: 0x20000000206, matchRI: 0x152b, match64: 0x00000000, model64: 0x129360001294e},
		modelTuple{type64: 0x20000000206, matchRI: 0x152c, match64: 0x00000000, model64: 0x1294e00012964},
		modelTuple{type64: 0x20000000206, matchRI: 0x152d, match64: 0x00000000, model64: 0x129640001297c},
		modelTuple{type64: 0x20000000206, matchRI: 0x152e, match64: 0x00000000, model64: 0x1297c00012992},
		modelTuple{type64: 0x20000000206, matchRI: 0x152f, match64: 0x00000000, model64: 0x12992000129a0},
		modelTuple{type64: 0x20000000206, matchRI: 0x1530, match64: 0x00000000, model64: 0x129a0000129b6},
		modelTuple{type64: 0x20000000206, matchRI: 0x1531, match64: 0x00000000, model64: 0x129b6000129cc},
		modelTuple{type64: 0x20000000206, matchRI: 0x1532, match64: 0x00000000, model64: 0x129cc000129dd},
		modelTuple{type64: 0x20000000206, matchRI: 0x1533, match64: 0x00000000, model64: 0x129dd000129f3},
		modelTuple{type64: 0x20000000206, matchRI: 0x1534, match64: 0x00000000, model64: 0x129f300012a07},
		modelTuple{type64: 0x20000000206, matchRI: 0x1535, match64: 0x00000000, model64: 0x12a0700012a1c},
		modelTuple{type64: 0x20000000206, matchRI: 0x1536, match64: 0x00000000, model64: 0x12a1c00012a37},
		modelTuple{type64: 0x20000000206, matchRI: 0x1537, match64: 0x00000000, model64: 0x12a3700012a4d},
		modelTuple{type64: 0x20000000206, matchRI: 0x1538, match64: 0x00000000, model64: 0x12a4d00012a61},
		modelTuple{type64: 0x20000000206, matchRI: 0x1539, match64: 0x00000000, model64: 0x12a6100012a72},
		modelTuple{type64: 0x20000000206, matchRI: 0x153a, match64: 0x00000000, model64: 0x12a7200012a87},
		modelTuple{type64: 0x20000000206, matchRI: 0x153b, match64: 0x00000000, model64: 0x12a8700012a9d},
		modelTuple{type64: 0x20000000206, matchRI: 0x153c, match64: 0x00000000, model64: 0x12a9d00012ab2},
		modelTuple{type64: 0x20000000206, matchRI: 0x153d, match64: 0x00000000, model64: 0x12ab200012aca},
		modelTuple{type64: 0x20000000206, matchRI: 0x153e, match64: 0x00000000, model64: 0x12aca00012ae0},
		modelTuple{type64: 0x20000000206, matchRI: 0x153f, match64: 0x00000000, model64: 0x12ae000012afb},
		modelTuple{type64: 0x20000000206, matchRI: 0x1540, match64: 0x00000000, model64: 0x12afb00012b0d},
		modelTuple{type64: 0x20000000206, matchRI: 0x1541, match64: 0x00000000, model64: 0x12b0d00012b24},
		modelTuple{type64: 0x20000000206, matchRI: 0x1542, match64: 0x00000000, model64: 0x12b2400012b3a},
		modelTuple{type64: 0x20000000206, matchRI: 0x1543, match64: 0x00000000, model64: 0x12b3a00012b51},
		modelTuple{type64: 0x20000000206, matchRI: 0x1544, match64: 0x00000000, model64: 0x12b5100012b68},
		modelTuple{type64: 0x20000000206, matchRI: 0x1545, match64: 0x00000000, model64: 0x12b6800012b7e},
		modelTuple{type64: 0x20000000206, matchRI: 0x1546, match64: 0x00000000, model64: 0x12b7e00012b93},
		modelTuple{type64: 0x20000000206, matchRI: 0x1547, match64: 0x00000000, model64: 0x12b9300012baa},
		modelTuple{type64: 0x20000000206, matchRI: 0x1548, match64: 0x00000000, model64: 0x12baa00012bc0},
		modelTuple{type64: 0x20000000206, matchRI: 0x1549, match64: 0x00000000, model64: 0x12bc000012bd7},
		modelTuple{type64: 0x20000000206, matchRI: 0x154a, match64: 0x00000000, model64: 0x12bd700012bed},
		modelTuple{type64: 0x20000000206, matchRI: 0x154b, match64: 0x00000000, model64: 0x12bed00012c04},
		modelTuple{type64: 0x20000000206, matchRI: 0x154c, match64: 0x00000000, model64: 0x12c0400012c1a},
		modelTuple{type64: 0x20000000206, matchRI: 0x154d, match64: 0x00000000, model64: 0x12c1a00012c31},
		modelTuple{type64: 0x20000000206, matchRI: 0x154e, match64: 0x00000000, model64: 0x12c3100012c47},
		modelTuple{type64: 0x20000000206, matchRI: 0x154f, match64: 0x00000000, model64: 0x12c4700012c5f},
		modelTuple{type64: 0x20000000206, matchRI: 0x1550, match64: 0x00000000, model64: 0x12c5f00012c78},
		modelTuple{type64: 0x20000000206, matchRI: 0x1551, match64: 0x00000000, model64: 0x12c7800012c8f},
		modelTuple{type64: 0x20000000206, matchRI: 0x1552, match64: 0x00000000, model64: 0x12c8f00012ca7},
		modelTuple{type64: 0x20000000206, matchRI: 0x1553, match64: 0x00000000, model64: 0x12ca700012cbe},
		modelTuple{type64: 0x20000000206, matchRI: 0x1554, match64: 0x00000000, model64: 0x12cbe00012cd4},
		modelTuple{type64: 0x20000000206, matchRI: 0x1555, match64: 0x00000000, model64: 0x12cd400012cee},
		modelTuple{type64: 0x20000000206, matchRI: 0x1556, match64: 0x00000000, model64: 0x12cee00012d07},
		modelTuple{type64: 0x20000000206, matchRI: 0x1557, match64: 0x00000000, model64: 0x12d0700012d22},
		modelTuple{type64: 0x20000000206, matchRI: 0x1558, match64: 0x00000000, model64: 0x12d2200012d3e},
		modelTuple{type64: 0x20000000206, matchRI: 0x1559, match64: 0x00000000, model64: 0x12d3e00012d55},
		modelTuple{type64: 0x20000000206, matchRI: 0x155a, match64: 0x00000000, model64: 0x12d5500012d6e},
		modelTuple{type64: 0x20000000206, matchRI: 0x155b, match64: 0x00000000, model64: 0x12d6e00012d84},
		modelTuple{type64: 0x20000000206, matchRI: 0x155c, match64: 0x00000000, model64: 0x12d8400012d9c},
		modelTuple{type64: 0x20000000206, matchRI: 0x155d, match64: 0x00000000, model64: 0x12d9c00012db2},
		modelTuple{type64: 0x20000000206, matchRI: 0x155e, match64: 0x00000000, model64: 0x12db200012dc7},
		modelTuple{type64: 0x20000000206, matchRI: 0x155f, match64: 0x00000000, model64: 0x12dc700012ddd},
		modelTuple{type64: 0x20000000206, matchRI: 0x1560, match64: 0x00000000, model64: 0x12ddd00012df2},
		modelTuple{type64: 0x20000000206, matchRI: 0x1561, match64: 0x00000000, model64: 0x12df200012e0e},
		modelTuple{type64: 0x20000000206, matchRI: 0x1562, match64: 0x00000000, model64: 0x12e0e00012e2a},
		modelTuple{type64: 0x20000000206, matchRI: 0x1563, match64: 0x00000000, model64: 0x12e2a00012e47},
		modelTuple{type64: 0x20000000206, matchRI: 0x1564, match64: 0x00000000, model64: 0x12e4700012e5d},
		modelTuple{type64: 0x20000000206, matchRI: 0x1565, match64: 0x00000000, model64: 0x12e5d00012e72},
		modelTuple{type64: 0x20000000206, matchRI: 0x1566, match64: 0x00000000, model64: 0x12e7200012e90},
		modelTuple{type64: 0x20000000206, matchRI: 0x1567, match64: 0x00000000, model64: 0x12e9000012ead},
		modelTuple{type64: 0x20000000206, matchRI: 0x1568, match64: 0x00000000, model64: 0x12ead00012eca},
		modelTuple{type64: 0x20000000206, matchRI: 0x1569, match64: 0x00000000, model64: 0x12eca00012ee3},
		modelTuple{type64: 0x20000000206, matchRI: 0x156a, match64: 0x00000000, model64: 0x12ee300012ef4},
		modelTuple{type64: 0x20000000206, matchRI: 0x156b, match64: 0x00000000, model64: 0x12ef400012f0a},
		modelTuple{type64: 0x20000000206, matchRI: 0x156c, match64: 0x00000000, model64: 0x12f0a00012f1e},
		modelTuple{type64: 0x20000000206, matchRI: 0x156d, match64: 0x00000000, model64: 0x12f1e00012f32},
		modelTuple{type64: 0x20000000206, matchRI: 0x156e, match64: 0x00000000, model64: 0x12f3200012f48},
		modelTuple{type64: 0x20000000206, matchRI: 0x156f, match64: 0x00000000, model64: 0x12f4800012f63},
		modelTuple{type64: 0x20000000206, matchRI: 0x1570, match64: 0x00000000, model64: 0x12f6300012f7b},
		modelTuple{type64: 0x20000000206, matchRI: 0x1571, match64: 0x00000000, model64: 0x12f7b00012f98},
		modelTuple{type64: 0x20000000206, matchRI: 0x1572, match64: 0x00000000, model64: 0x12f9800012fb0},
		modelTuple{type64: 0x20000000206, matchRI: 0x1573, match64: 0x00000000, model64: 0x12fb000012fcd},
		modelTuple{type64: 0x20000000206, matchRI: 0x1574, match64: 0x00000000, model64: 0x12fcd00012fe8},
		modelTuple{type64: 0x20000000206, matchRI: 0x1575, match64: 0x00000000, model64: 0x12fe800013008},
		modelTuple{type64: 0x20000000206, matchRI: 0x1576, match64: 0x00000000, model64: 0x130080001301d},
		modelTuple{type64: 0x20000000206, matchRI: 0x1577, match64: 0x00000000, model64: 0x1301d00013029},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x1302900013030, model64: 0x130300001304a},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x1304a00013052, model64: 0x130520001305d},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x1305d00013065, model64: 0x1306500013074},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x130740001307c, model64: 0x1307c00013089},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x1308900013092, model64: 0x13092000130a3},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x130a3000130aa, model64: 0x130aa000130c8},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x130c8000130cf, model64: 0x130cf000130e9},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x130e9000130f0, model64: 0x130f00001310e},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x1310e00013115, model64: 0x1311500013126},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x131260001312d, model64: 0x1312d00013142},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x1314200013149, model64: 0x131490001315a},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x1315a00013161, model64: 0x1316100013176},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x131760001317d, model64: 0x1317d00013190},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x1319000013197, model64: 0x13197000131ad},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x131ad000131b4, model64: 0x131b4000131d0},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x131d0000131d7, model64: 0x131d7000131e2},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x131e2000131e9, model64: 0x131e9000131f5},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x131f5000131fc, model64: 0x131fc00013218},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x132180001321f, model64: 0x1321f0001323a},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x1323a00013241, model64: 0x1324100013258},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x132580001325f, model64: 0x1325f00013272},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x1327200013279, model64: 0x132790001328c},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x1328c00013293, model64: 0x13293000132a9},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x132a9000132b2, model64: 0x132a9000132b2},
		modelTuple{type64: 0x5f5100005f5b, matchRI: 0x1578, match64: 0x00000000, model64: 0x132b2000132bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1579, match64: 0x00000000, model64: 0x132bc000132c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x157a, match64: 0x00000000, model64: 0x132c8000132d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x157b, match64: 0x00000000, model64: 0x132d3000132de},
		modelTuple{type64: 0x2700000027, matchRI: 0x157c, match64: 0x00000000, model64: 0x132de000132eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x157d, match64: 0x00000000, model64: 0x132eb000132f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x157e, match64: 0x00000000, model64: 0x132f700013308},
		modelTuple{type64: 0x2700000027, matchRI: 0x157f, match64: 0x00000000, model64: 0x1330800013312},
		modelTuple{type64: 0x2700000027, matchRI: 0x1580, match64: 0x00000000, model64: 0x133120001331e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1581, match64: 0x00000000, model64: 0x1331e0001332b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1582, match64: 0x00000000, model64: 0x1332b00013333},
		modelTuple{type64: 0x2700000027, matchRI: 0x1583, match64: 0x00000000, model64: 0x133330001333b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1584, match64: 0x00000000, model64: 0x1333b00013343},
		modelTuple{type64: 0x2700000027, matchRI: 0x1585, match64: 0x00000000, model64: 0x1334300013354},
		modelTuple{type64: 0x2700000027, matchRI: 0x1586, match64: 0x00000000, model64: 0x133540001335e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1587, match64: 0x00000000, model64: 0x1335e0001336e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1588, match64: 0x00000000, model64: 0x1336e0001337a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1589, match64: 0x00000000, model64: 0x1337a00013386},
		modelTuple{type64: 0x2700000027, matchRI: 0x158a, match64: 0x00000000, model64: 0x1338600013397},
		modelTuple{type64: 0x2700000027, matchRI: 0x158b, match64: 0x00000000, model64: 0x13397000133a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x158c, match64: 0x00000000, model64: 0x133a8000133b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x158d, match64: 0x00000000, model64: 0x133b8000133c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x158e, match64: 0x00000000, model64: 0x133c3000133d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x158f, match64: 0x00000000, model64: 0x133d5000133e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1590, match64: 0x00000000, model64: 0x133e600013405},
		modelTuple{type64: 0x2700000027, matchRI: 0x1591, match64: 0x00000000, model64: 0x1340500013410},
		modelTuple{type64: 0x2700000027, matchRI: 0x1592, match64: 0x00000000, model64: 0x134100001341f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1593, match64: 0x00000000, model64: 0x1341f00013433},
		modelTuple{type64: 0x2700000027, matchRI: 0x1594, match64: 0x00000000, model64: 0x1343300013435},
		modelTuple{type64: 0x2700000027, matchRI: 0x1595, match64: 0x00000000, model64: 0x1343500013440},
		modelTuple{type64: 0x2700000027, matchRI: 0x1596, match64: 0x00000000, model64: 0x134400001344d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1597, match64: 0x00000000, model64: 0x1344d00013458},
		modelTuple{type64: 0x2700000027, matchRI: 0x1598, match64: 0x00000000, model64: 0x1345800013462},
		modelTuple{type64: 0x2700000027, matchRI: 0x1599, match64: 0x00000000, model64: 0x1346200013470},
		modelTuple{type64: 0x2700000027, matchRI: 0x159a, match64: 0x00000000, model64: 0x1347000013483},
		modelTuple{type64: 0x2700000027, matchRI: 0x159b, match64: 0x00000000, model64: 0x1348300013491},
		modelTuple{type64: 0x2700000027, matchRI: 0x159c, match64: 0x00000000, model64: 0x134910001349a},
		modelTuple{type64: 0x2700000027, matchRI: 0x159d, match64: 0x00000000, model64: 0x1349a000134a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x159e, match64: 0x00000000, model64: 0x134a3000134ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x159f, match64: 0x00000000, model64: 0x134ab000134b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a0, match64: 0x00000000, model64: 0x134b8000134c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a1, match64: 0x00000000, model64: 0x134c1000134d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a2, match64: 0x00000000, model64: 0x134d8000134e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a3, match64: 0x00000000, model64: 0x133b8000133c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a4, match64: 0x00000000, model64: 0x134e8000134f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a5, match64: 0x00000000, model64: 0x134f900013501},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a6, match64: 0x00000000, model64: 0x1350100013511},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a7, match64: 0x00000000, model64: 0x135110001351f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a8, match64: 0x00000000, model64: 0x1351f0001352d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a9, match64: 0x00000000, model64: 0x1352d00013544},
		modelTuple{type64: 0x2700000027, matchRI: 0x15aa, match64: 0x00000000, model64: 0x1354400013554},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ab, match64: 0x00000000, model64: 0x1355400013560},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ac, match64: 0x00000000, model64: 0x1356000013570},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ad, match64: 0x00000000, model64: 0x1357000013579},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ae, match64: 0x00000000, model64: 0x135790001358c},
		modelTuple{type64: 0x2700000027, matchRI: 0x15af, match64: 0x00000000, model64: 0x1358c00013599},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b0, match64: 0x00000000, model64: 0x13599000135a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b1, match64: 0x00000000, model64: 0x135a4000135b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b2, match64: 0x00000000, model64: 0x135b6000135c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b3, match64: 0x00000000, model64: 0x135c7000135d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b4, match64: 0x00000000, model64: 0x135d6000135ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b5, match64: 0x00000000, model64: 0x135ea000135f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b6, match64: 0x00000000, model64: 0x135f600013607},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b7, match64: 0x00000000, model64: 0x1360700013615},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b8, match64: 0x00000000, model64: 0x1361500013627},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b9, match64: 0x00000000, model64: 0x1362700013640},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ba, match64: 0x00000000, model64: 0x136400001364b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bb, match64: 0x00000000, model64: 0x1364b0001365b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bc, match64: 0x00000000, model64: 0x1365b00013666},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bd, match64: 0x00000000, model64: 0x1366600013673},
		modelTuple{type64: 0x2700000027, matchRI: 0x15be, match64: 0x00000000, model64: 0x136730001367f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bf, match64: 0x00000000, model64: 0x1367f0001368e},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c0, match64: 0x00000000, model64: 0x1368e0001369a},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c1, match64: 0x00000000, model64: 0x1369a000136ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c2, match64: 0x00000000, model64: 0x136ab000136bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c3, match64: 0x00000000, model64: 0x136bc000136ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c4, match64: 0x00000000, model64: 0x136ca000136d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c5, match64: 0x00000000, model64: 0x136d7000136e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c6, match64: 0x00000000, model64: 0x136e6000136f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c7, match64: 0x00000000, model64: 0x136f500013704},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c8, match64: 0x00000000, model64: 0x1370400013713},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c9, match64: 0x00000000, model64: 0x1371300013725},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ca, match64: 0x00000000, model64: 0x1372500013734},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cb, match64: 0x00000000, model64: 0x1373400013744},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cc, match64: 0x00000000, model64: 0x1374400013755},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cd, match64: 0x00000000, model64: 0x137550001376b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ce, match64: 0x00000000, model64: 0x1376b0001377a},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cf, match64: 0x00000000, model64: 0x136500001369},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d0, match64: 0x00000000, model64: 0x1377a00013781},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d1, match64: 0x00000000, model64: 0x1378100013787},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d2, match64: 0x00000000, model64: 0x137870001378d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d3, match64: 0x00000000, model64: 0x1378d00013793},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d4, match64: 0x00000000, model64: 0x137930001379b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d5, match64: 0x00000000, model64: 0x1379b000137a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d6, match64: 0x00000000, model64: 0x137a3000137ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d7, match64: 0x00000000, model64: 0x137ab000137b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d8, match64: 0x00000000, model64: 0x137b3000137c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d9, match64: 0x00000000, model64: 0x137c1000137ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x15da, match64: 0x00000000, model64: 0x137ce000137db},
		modelTuple{type64: 0x2700000027, matchRI: 0x15db, match64: 0x00000000, model64: 0x137db000137e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x15dc, match64: 0x00000000, model64: 0x137e8000137f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x15dd, match64: 0x00000000, model64: 0x137f800013809},
		modelTuple{type64: 0x2700000027, matchRI: 0x15de, match64: 0x00000000, model64: 0x1380900013828},
		modelTuple{type64: 0x2700000027, matchRI: 0x15df, match64: 0x00000000, model64: 0x134100001341f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e0, match64: 0x00000000, model64: 0x138280001383b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e1, match64: 0x00000000, model64: 0x1383b0001384a},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e2, match64: 0x00000000, model64: 0x1384a0001385b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e3, match64: 0x00000000, model64: 0x1385b00013869},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e4, match64: 0x00000000, model64: 0x138690001387b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e5, match64: 0x00000000, model64: 0x1387b00013889},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e6, match64: 0x00000000, model64: 0x1388900013892},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e7, match64: 0x00000000, model64: 0x13892000138a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e8, match64: 0x00000000, model64: 0x138a0000138b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e9, match64: 0x00000000, model64: 0x138b0000138bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ea, match64: 0x00000000, model64: 0x138bd000138ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x15eb, match64: 0x00000000, model64: 0x138ce000138d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ec, match64: 0x00000000, model64: 0x138a0000138b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ed, match64: 0x00000000, model64: 0x138d7000138e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ee, match64: 0x00000000, model64: 0x138e5000138f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ef, match64: 0x00000000, model64: 0x138f4000138fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f0, match64: 0x00000000, model64: 0x138fd0001390b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f1, match64: 0x00000000, model64: 0x1390b0001391b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f2, match64: 0x00000000, model64: 0x1391b00013924},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f3, match64: 0x00000000, model64: 0x1392400013932},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f4, match64: 0x00000000, model64: 0x1393200013942},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f5, match64: 0x00000000, model64: 0x139420001394c},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f6, match64: 0x00000000, model64: 0x1394c00013955},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f7, match64: 0x00000000, model64: 0x139550001395f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f8, match64: 0x00000000, model64: 0x1395f00013969},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f9, match64: 0x00000000, model64: 0x1396900013978},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fa, match64: 0x00000000, model64: 0x1397800013983},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1398300013989, model64: 0x13989000139aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fb, match64: 0x00000000, model64: 0x139aa000139b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fc, match64: 0x00000000, model64: 0x139b5000139bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fd, match64: 0x00000000, model64: 0x139bf000139cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fe, match64: 0x00000000, model64: 0x139cc000139d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ff, match64: 0x00000000, model64: 0x139d9000139e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1600, match64: 0x00000000, model64: 0x139e9000139fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1601, match64: 0x00000000, model64: 0x139fc00013a07},
		modelTuple{type64: 0x2700000027, matchRI: 0x1602, match64: 0x00000000, model64: 0x13a0700013a15},
		modelTuple{type64: 0x2700000027, matchRI: 0x1603, match64: 0x00000000, model64: 0x13a1500013a22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1604, match64: 0x00000000, model64: 0x13a2200013a32},
		modelTuple{type64: 0x2700000027, matchRI: 0x1605, match64: 0x00000000, model64: 0x13a3200013a55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1606, match64: 0x00000000, model64: 0x13a5500013a68},
		modelTuple{type64: 0x2700000027, matchRI: 0x1607, match64: 0x00000000, model64: 0x13a6800013a76},
		modelTuple{type64: 0x2700000027, matchRI: 0x1608, match64: 0x00000000, model64: 0x13a7600013a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x1609, match64: 0x00000000, model64: 0x13a8000013a90},
		modelTuple{type64: 0x2700000027, matchRI: 0x160a, match64: 0x00000000, model64: 0x13a9000013a9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x160b, match64: 0x00000000, model64: 0x13a9b00013aa8},
		modelTuple{type64: 0x2700000027, matchRI: 0x160c, match64: 0x00000000, model64: 0x13aa800013ab8},
		modelTuple{type64: 0x2700000027, matchRI: 0x160d, match64: 0x00000000, model64: 0x13ab800013ac6},
		modelTuple{type64: 0x2700000027, matchRI: 0x160e, match64: 0x00000000, model64: 0x13ac600013ad7},
		modelTuple{type64: 0x2700000027, matchRI: 0x160f, match64: 0x00000000, model64: 0x13ad700013ae6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1610, match64: 0x00000000, model64: 0x13ae600013af4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1611, match64: 0x00000000, model64: 0x13af400013afe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1612, match64: 0x00000000, model64: 0x13afe00013b0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1613, match64: 0x00000000, model64: 0x13b0a00013b1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1614, match64: 0x00000000, model64: 0x13b1a00013b24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1615, match64: 0x00000000, model64: 0x13b2400013b33},
		modelTuple{type64: 0x2700000027, matchRI: 0x1616, match64: 0x00000000, model64: 0x13b3300013b3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1617, match64: 0x00000000, model64: 0x13b3e00013b49},
		modelTuple{type64: 0x2700000027, matchRI: 0x1618, match64: 0x00000000, model64: 0x13b4900013b53},
		modelTuple{type64: 0x2700000027, matchRI: 0x1619, match64: 0x00000000, model64: 0x13b5300013b62},
		modelTuple{type64: 0x2700000027, matchRI: 0x161a, match64: 0x00000000, model64: 0x13b6200013b6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x161b, match64: 0x00000000, model64: 0x13b6c00013b7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x161c, match64: 0x00000000, model64: 0x13b7a00013b84},
		modelTuple{type64: 0x2700000027, matchRI: 0x161d, match64: 0x00000000, model64: 0x13b8400013b8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x161e, match64: 0x00000000, model64: 0x13b8e00013b9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x161f, match64: 0x00000000, model64: 0x13b9b00013bab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1620, match64: 0x00000000, model64: 0x13bab00013bbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1621, match64: 0x00000000, model64: 0x13bbb00013bcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1622, match64: 0x00000000, model64: 0x13bcb00013bd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1623, match64: 0x00000000, model64: 0x13bd400013bdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1624, match64: 0x00000000, model64: 0x13bdd00013beb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1625, match64: 0x00000000, model64: 0x13beb00013bfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1626, match64: 0x00000000, model64: 0x13bfb00013c0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1627, match64: 0x00000000, model64: 0x13c0b00013c1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1628, match64: 0x00000000, model64: 0x13c1b00013c25},
		modelTuple{type64: 0x2700000027, matchRI: 0x1629, match64: 0x00000000, model64: 0x13c2500013c32},
		modelTuple{type64: 0x2700000027, matchRI: 0x162a, match64: 0x00000000, model64: 0x13c3200013c40},
		modelTuple{type64: 0x2700000027, matchRI: 0x162b, match64: 0x00000000, model64: 0x13c4000013c49},
		modelTuple{type64: 0x2700000027, matchRI: 0x162c, match64: 0x00000000, model64: 0x13c4900013c53},
		modelTuple{type64: 0x2700000027, matchRI: 0x162d, match64: 0x00000000, model64: 0x13c5300013c64},
		modelTuple{type64: 0x2700000027, matchRI: 0x162e, match64: 0x00000000, model64: 0x13c6400013c6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x162f, match64: 0x00000000, model64: 0x13c6e00013c77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1630, match64: 0x00000000, model64: 0x13c7700013c87},
		modelTuple{type64: 0x2700000027, matchRI: 0x1631, match64: 0x00000000, model64: 0x13c8700013c97},
		modelTuple{type64: 0x2700000027, matchRI: 0x1632, match64: 0x00000000, model64: 0x13c9700013ca7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1633, match64: 0x00000000, model64: 0x13ca700013cb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1634, match64: 0x00000000, model64: 0x13cb100013cbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1635, match64: 0x00000000, model64: 0x13cbb00013cc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1636, match64: 0x00000000, model64: 0x13cc800013cd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1637, match64: 0x00000000, model64: 0x13cd100013cdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1638, match64: 0x00000000, model64: 0x13cdf00013cef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1639, match64: 0x00000000, model64: 0x13cef00013cf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x163a, match64: 0x00000000, model64: 0x13cf900013d09},
		modelTuple{type64: 0x2700000027, matchRI: 0x163b, match64: 0x00000000, model64: 0x13d0900013d1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x163c, match64: 0x00000000, model64: 0x13d1a00013d23},
		modelTuple{type64: 0x2700000027, matchRI: 0x163d, match64: 0x00000000, model64: 0x13d2300013d2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x163e, match64: 0x00000000, model64: 0x13d2e00013d3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x163f, match64: 0x00000000, model64: 0x13d3e00013d4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1640, match64: 0x00000000, model64: 0x13d4c00013d59},
		modelTuple{type64: 0x2700000027, matchRI: 0x1641, match64: 0x00000000, model64: 0x13d5900013d63},
		modelTuple{type64: 0x2700000027, matchRI: 0x1642, match64: 0x00000000, model64: 0x13d6300013d6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1643, match64: 0x00000000, model64: 0x13d6e00013d79},
		modelTuple{type64: 0x2700000027, matchRI: 0x1644, match64: 0x00000000, model64: 0x13b7a00013b84},
		modelTuple{type64: 0x2700000027, matchRI: 0x1645, match64: 0x00000000, model64: 0x13d7900013d83},
		modelTuple{type64: 0x2700000027, matchRI: 0x1646, match64: 0x00000000, model64: 0x13d8300013d90},
		modelTuple{type64: 0x2700000027, matchRI: 0x1647, match64: 0x00000000, model64: 0x13d9000013d9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1648, match64: 0x00000000, model64: 0x13d9a00013da4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1649, match64: 0x00000000, model64: 0x13da400013daf},
		modelTuple{type64: 0x2700000027, matchRI: 0x164a, match64: 0x00000000, model64: 0x13daf00013dba},
		modelTuple{type64: 0x2700000027, matchRI: 0x164b, match64: 0x00000000, model64: 0x13dba00013dc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x164c, match64: 0x00000000, model64: 0x13dc500013dcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x164d, match64: 0x00000000, model64: 0x13dcf00013dda},
		modelTuple{type64: 0x2700000027, matchRI: 0x164e, match64: 0x00000000, model64: 0x13dda00013de4},
		modelTuple{type64: 0x2700000027, matchRI: 0x164f, match64: 0x00000000, model64: 0x13de400013dee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1650, match64: 0x00000000, model64: 0x13dee00013dfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1651, match64: 0x00000000, model64: 0x13dfb00013e05},
		modelTuple{type64: 0x2700000027, matchRI: 0x1652, match64: 0x00000000, model64: 0x13e0500013e10},
		modelTuple{type64: 0x2700000027, matchRI: 0x1653, match64: 0x00000000, model64: 0x13e1000013e1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1654, match64: 0x00000000, model64: 0x13e1a00013e27},
		modelTuple{type64: 0x2700000027, matchRI: 0x1655, match64: 0x00000000, model64: 0x13e2700013e31},
		modelTuple{type64: 0x2700000027, matchRI: 0x1656, match64: 0x00000000, model64: 0x13e3100013e3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1657, match64: 0x00000000, model64: 0x13e3100013e3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1658, match64: 0x00000000, model64: 0x13e3c00013e46},
		modelTuple{type64: 0x2700000027, matchRI: 0x1659, match64: 0x00000000, model64: 0x13e4600013e53},
		modelTuple{type64: 0x2700000027, matchRI: 0x165a, match64: 0x00000000, model64: 0x13e5300013e5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x165b, match64: 0x00000000, model64: 0x13e5d00013e68},
		modelTuple{type64: 0x2700000027, matchRI: 0x165c, match64: 0x00000000, model64: 0x13e6800013e72},
		modelTuple{type64: 0x2700000027, matchRI: 0x165d, match64: 0x00000000, model64: 0x13e7200013e7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x165e, match64: 0x00000000, model64: 0x13e7c00013e89},
		modelTuple{type64: 0x2700000027, matchRI: 0x165f, match64: 0x00000000, model64: 0x13e8900013e93},
		modelTuple{type64: 0x2700000027, matchRI: 0x1660, match64: 0x00000000, model64: 0x13e9300013e9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1661, match64: 0x00000000, model64: 0x13e9d00013ea7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1662, match64: 0x00000000, model64: 0x13ea700013eb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1663, match64: 0x00000000, model64: 0x13eb400013ebe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1664, match64: 0x00000000, model64: 0x13ebe00013ece},
		modelTuple{type64: 0x2700000027, matchRI: 0x1665, match64: 0x00000000, model64: 0x13ece00013ed9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1666, match64: 0x00000000, model64: 0x13ed900013ee2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1667, match64: 0x00000000, model64: 0x13ee200013ef0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1668, match64: 0x00000000, model64: 0x13ef000013f04},
		modelTuple{type64: 0x2700000027, matchRI: 0x1669, match64: 0x00000000, model64: 0x13f0400013f14},
		modelTuple{type64: 0x2700000027, matchRI: 0x166a, match64: 0x00000000, model64: 0x13f1400013f21},
		modelTuple{type64: 0x2700000027, matchRI: 0x166b, match64: 0x00000000, model64: 0x13f2100013f2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x166c, match64: 0x00000000, model64: 0x13f2a00013f38},
		modelTuple{type64: 0x2700000027, matchRI: 0x166d, match64: 0x00000000, model64: 0x13f3800013f46},
		modelTuple{type64: 0x2700000027, matchRI: 0x166e, match64: 0x00000000, model64: 0x13f4600013f54},
		modelTuple{type64: 0x2700000027, matchRI: 0x166f, match64: 0x00000000, model64: 0x13f5400013f61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1670, match64: 0x00000000, model64: 0x13f6100013f70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1671, match64: 0x00000000, model64: 0x13f7000013f7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1672, match64: 0x00000000, model64: 0x13f7d00013f8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1673, match64: 0x00000000, model64: 0x13f8a00013f9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1674, match64: 0x00000000, model64: 0x13f9c00013fab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1675, match64: 0x00000000, model64: 0x13fab00013fbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1676, match64: 0x00000000, model64: 0x13fbb00013fc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1677, match64: 0x00000000, model64: 0x13fc900013fd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1678, match64: 0x00000000, model64: 0x13fd700013fe8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1679, match64: 0x00000000, model64: 0x13f8a00013f9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x167a, match64: 0x00000000, model64: 0x13fe800013ff8},
		modelTuple{type64: 0x2700000027, matchRI: 0x167b, match64: 0x00000000, model64: 0x13ff800014008},
		modelTuple{type64: 0x2700000027, matchRI: 0x167c, match64: 0x00000000, model64: 0x1400800014018},
		modelTuple{type64: 0x2700000027, matchRI: 0x167d, match64: 0x00000000, model64: 0x1401800014028},
		modelTuple{type64: 0x2700000027, matchRI: 0x167e, match64: 0x00000000, model64: 0x1402800014031},
		modelTuple{type64: 0x2700000027, matchRI: 0x167f, match64: 0x00000000, model64: 0x1403100014041},
		modelTuple{type64: 0x2700000027, matchRI: 0x1680, match64: 0x00000000, model64: 0x1404100014051},
		modelTuple{type64: 0x2700000027, matchRI: 0x1681, match64: 0x00000000, model64: 0x1405100014061},
		modelTuple{type64: 0x2700000027, matchRI: 0x1682, match64: 0x00000000, model64: 0x1406100014070},
		modelTuple{type64: 0x2700000027, matchRI: 0x1683, match64: 0x00000000, model64: 0x1407000014079},
		modelTuple{type64: 0x2700000027, matchRI: 0x1684, match64: 0x00000000, model64: 0x1407900014083},
		modelTuple{type64: 0x2700000027, matchRI: 0x1685, match64: 0x00000000, model64: 0x1408300014091},
		modelTuple{type64: 0x2700000027, matchRI: 0x1686, match64: 0x00000000, model64: 0x140910001409b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1687, match64: 0x00000000, model64: 0x1409b000140a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1688, match64: 0x00000000, model64: 0x140a4000140b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1689, match64: 0x00000000, model64: 0x140b4000140c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x168a, match64: 0x00000000, model64: 0x140c4000140d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x168b, match64: 0x00000000, model64: 0x140d4000140e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x168c, match64: 0x00000000, model64: 0x140e4000140f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x168d, match64: 0x00000000, model64: 0x140f300014102},
		modelTuple{type64: 0x2700000027, matchRI: 0x168e, match64: 0x00000000, model64: 0x1410200014113},
		modelTuple{type64: 0x2700000027, matchRI: 0x168f, match64: 0x00000000, model64: 0x1411300014120},
		modelTuple{type64: 0x2700000027, matchRI: 0x1690, match64: 0x00000000, model64: 0x1412000014131},
		modelTuple{type64: 0x2700000027, matchRI: 0x1691, match64: 0x00000000, model64: 0x141310001413e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1692, match64: 0x00000000, model64: 0x1413e0001414c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1693, match64: 0x00000000, model64: 0x1414c00014159},
		modelTuple{type64: 0x2700000027, matchRI: 0x1694, match64: 0x00000000, model64: 0x1415900014168},
		modelTuple{type64: 0x2700000027, matchRI: 0x1695, match64: 0x00000000, model64: 0x1416800014173},
		modelTuple{type64: 0x2700000027, matchRI: 0x1696, match64: 0x00000000, model64: 0x141730001417e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1697, match64: 0x00000000, model64: 0x1417e00014187},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1418700014191, model64: 0x141910001419f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1419f000141a8, model64: 0x141a8000141b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1698, match64: 0x00000000, model64: 0x141b5000141c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1699, match64: 0x00000000, model64: 0x141c6000141d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x169a, match64: 0x00000000, model64: 0x141d5000141df},
		modelTuple{type64: 0x2700000027, matchRI: 0x169b, match64: 0x00000000, model64: 0x141df000141ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x169c, match64: 0x00000000, model64: 0x141ee000141f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x169d, match64: 0x00000000, model64: 0x141f900014204},
		modelTuple{type64: 0x2700000027, matchRI: 0x169e, match64: 0x00000000, model64: 0x142040001420e},
		modelTuple{type64: 0x2700000027, matchRI: 0x169f, match64: 0x00000000, model64: 0x1420e00014218},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a0, match64: 0x00000000, model64: 0x1421800014223},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a1, match64: 0x00000000, model64: 0x142230001422d},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a2, match64: 0x00000000, model64: 0x1422d00014237},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a3, match64: 0x00000000, model64: 0x1423700014241},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a4, match64: 0x00000000, model64: 0x142410001424b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a5, match64: 0x00000000, model64: 0x1424b0001425c},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a6, match64: 0x00000000, model64: 0x1425c00014266},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a7, match64: 0x00000000, model64: 0x1426600014271},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a8, match64: 0x00000000, model64: 0x142710001427b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a9, match64: 0x00000000, model64: 0x1427b00014285},
		modelTuple{type64: 0x2700000027, matchRI: 0x16aa, match64: 0x00000000, model64: 0x142850001428f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ab, match64: 0x00000000, model64: 0x1428f0001429c},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ac, match64: 0x00000000, model64: 0x1429c000142a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ad, match64: 0x00000000, model64: 0x142a7000142b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ae, match64: 0x00000000, model64: 0x142b1000142be},
		modelTuple{type64: 0x2700000027, matchRI: 0x16af, match64: 0x00000000, model64: 0x142be000142c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b0, match64: 0x00000000, model64: 0x142c8000142d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b1, match64: 0x00000000, model64: 0x142d5000142df},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b2, match64: 0x00000000, model64: 0x142df000142ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b3, match64: 0x00000000, model64: 0x142ec000142f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b4, match64: 0x00000000, model64: 0x142f600014305},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b5, match64: 0x00000000, model64: 0x1430500014311},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b6, match64: 0x00000000, model64: 0x143110001431b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b7, match64: 0x00000000, model64: 0x1431b0001432c},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b8, match64: 0x00000000, model64: 0x1432c00014336},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b9, match64: 0x00000000, model64: 0x1433600014347},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ba, match64: 0x00000000, model64: 0x1434700014357},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bb, match64: 0x00000000, model64: 0x1435700014360},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bc, match64: 0x00000000, model64: 0x143600001436d},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bd, match64: 0x00000000, model64: 0x1436d00014376},
		modelTuple{type64: 0x2700000027, matchRI: 0x16be, match64: 0x00000000, model64: 0x1437600014383},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bf, match64: 0x00000000, model64: 0x143830001438c},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c0, match64: 0x00000000, model64: 0x1438c00014399},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c1, match64: 0x00000000, model64: 0x14399000143a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c2, match64: 0x00000000, model64: 0x143a2000143ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c3, match64: 0x00000000, model64: 0x143ab000143b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c4, match64: 0x00000000, model64: 0x143b4000143bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c5, match64: 0x00000000, model64: 0x143bd000143ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c6, match64: 0x00000000, model64: 0x143ca000143d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c7, match64: 0x00000000, model64: 0x143d9000143e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c8, match64: 0x00000000, model64: 0x143e3000143ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c9, match64: 0x00000000, model64: 0x143ef000143fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ca, match64: 0x00000000, model64: 0x143fb00014406},
		modelTuple{type64: 0x2700000027, matchRI: 0x16cb, match64: 0x00000000, model64: 0x1440600014418},
		modelTuple{type64: 0x2700000027, matchRI: 0x16cc, match64: 0x00000000, model64: 0x1441800014431},
		modelTuple{type64: 0x52100000528, matchRI: 0x16cd, match64: 0x00000000, model64: 0x144310001443c},
		modelTuple{type64: 0x52100000528, matchRI: 0x16ce, match64: 0x00000000, model64: 0x1443c0001444b},
		modelTuple{type64: 0x52100000528, matchRI: 0x16cf, match64: 0x00000000, model64: 0x1444b0001445d},
		modelTuple{type64: 0x52100000528, matchRI: 0x16d0, match64: 0x00000000, model64: 0x1445d0001446f},
		modelTuple{type64: 0x52100000528, matchRI: 0x16d1, match64: 0x00000000, model64: 0x1446f0001447f},
		modelTuple{type64: 0x52100000528, matchRI: 0x16d2, match64: 0x00000000, model64: 0x1447f00014494},
		modelTuple{type64: 0x52100000528, matchRI: 0x16d3, match64: 0x00000000, model64: 0x14494000144a0},
		modelTuple{type64: 0x52100000528, matchRI: 0x16d4, match64: 0x00000000, model64: 0x144a0000144b1},
		modelTuple{type64: 0x52100000528, matchRI: 0x16d5, match64: 0x00000000, model64: 0x144b1000144c2},
		modelTuple{type64: 0x52100000528, matchRI: 0x16d6, match64: 0x00000000, model64: 0x144c2000144cd},
		modelTuple{type64: 0x52100000528, matchRI: 0x16d7, match64: 0x00000000, model64: 0x144cd000144dd},
		modelTuple{type64: 0x52100000528, matchRI: 0x16d8, match64: 0x00000000, model64: 0x144dd000144f4},
		modelTuple{type64: 0x52100000528, matchRI: 0x16d9, match64: 0x00000000, model64: 0x144f400014502},
		modelTuple{type64: 0x52100000528, matchRI: 0x16da, match64: 0x00000000, model64: 0x1450200014514},
		modelTuple{type64: 0x52100000528, matchRI: 0x16db, match64: 0x00000000, model64: 0x1451400014522},
		modelTuple{type64: 0x2700000027, matchRI: 0x16dc, match64: 0x00000000, model64: 0x1452200014532},
		modelTuple{type64: 0x52100000528, matchRI: 0x16dd, match64: 0x00000000, model64: 0x1453200014544},
		modelTuple{type64: 0x52100000528, matchRI: 0x16de, match64: 0x00000000, model64: 0x145440001455e},
		modelTuple{type64: 0x52100000528, matchRI: 0x16df, match64: 0x00000000, model64: 0x1455e00014575},
		modelTuple{type64: 0x52100000528, matchRI: 0x16e0, match64: 0x00000000, model64: 0x1457500014589},
		modelTuple{type64: 0x52100000528, matchRI: 0x16e1, match64: 0x00000000, model64: 0x1458900014598},
		modelTuple{type64: 0x52100000528, matchRI: 0x16e2, match64: 0x00000000, model64: 0x14598000145ae},
		modelTuple{type64: 0x52100000528, matchRI: 0x16e3, match64: 0x00000000, model64: 0x145ae000145bf},
		modelTuple{type64: 0x52100000528, matchRI: 0x16e4, match64: 0x00000000, model64: 0x145bf000145d1},
		modelTuple{type64: 0x52100000528, matchRI: 0x16e5, match64: 0x00000000, model64: 0x145d1000145e2},
		modelTuple{type64: 0x52100000528, matchRI: 0x16e6, match64: 0x00000000, model64: 0x145e2000145ef},
		modelTuple{type64: 0x52100000528, matchRI: 0x16e7, match64: 0x00000000, model64: 0x145ef000145fc},
		modelTuple{type64: 0x52100000528, matchRI: 0x16e8, match64: 0x00000000, model64: 0x145fc0001460d},
		modelTuple{type64: 0x52100000528, matchRI: 0x16e9, match64: 0x00000000, model64: 0x1460d0001461f},
		modelTuple{type64: 0x52100000528, matchRI: 0x16ea, match64: 0x00000000, model64: 0x1461f0001462c},
		modelTuple{type64: 0x52100000528, matchRI: 0x16eb, match64: 0x00000000, model64: 0x1462c0001463e},
		modelTuple{type64: 0x52100000528, matchRI: 0x16ec, match64: 0x00000000, model64: 0x1463e0001464b},
		modelTuple{type64: 0x52100000528, matchRI: 0x16ed, match64: 0x00000000, model64: 0x1464b0001465a},
		modelTuple{type64: 0x52100000528, matchRI: 0x16ee, match64: 0x00000000, model64: 0x1465a00014669},
		modelTuple{type64: 0x52100000528, matchRI: 0x16ef, match64: 0x00000000, model64: 0x1466900014676},
		modelTuple{type64: 0x52100000528, matchRI: 0x16f0, match64: 0x00000000, model64: 0x1467600014683},
		modelTuple{type64: 0x52100000528, matchRI: 0x16f1, match64: 0x00000000, model64: 0x1468300014690},
		modelTuple{type64: 0x52100000528, matchRI: 0x16f2, match64: 0x00000000, model64: 0x146900001469e},
		modelTuple{type64: 0x52100000528, matchRI: 0x16f3, match64: 0x00000000, model64: 0x1469e000146b1},
		modelTuple{type64: 0x52100000528, matchRI: 0x16f4, match64: 0x00000000, model64: 0x146b1000146c0},
		modelTuple{type64: 0x52100000528, matchRI: 0x16f5, match64: 0x00000000, model64: 0x146c0000146ce},
		modelTuple{type64: 0x52100000528, matchRI: 0x16f6, match64: 0x00000000, model64: 0x146ce000146df},
		modelTuple{type64: 0x52100000528, matchRI: 0x16f7, match64: 0x00000000, model64: 0x146df000146f3},
		modelTuple{type64: 0x52100000528, matchRI: 0x16f8, match64: 0x00000000, model64: 0x146f30001470a},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f9, match64: 0x00000000, model64: 0x1470a00014711},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fa, match64: 0x00000000, model64: 0x1471100014722},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x16fb, match64: 0x00000000, model64: 0x1472200014727},
		modelTuple{type64: 0x7f1000007f8, matchRI: -0x0001, match64: 0x1472700014733, model64: 0x1472700014733},
		modelTuple{type64: 0x20000000206, matchRI: 0x16fc, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1473300014739, model64: 0x133b8000133c3},
		modelTuple{type64: 0x20000000206, matchRI: 0x16fd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fe, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x1473900014741, model64: 0x107040001070c},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ff, match64: 0x00000000, model64: 0x147410001474a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1700, match64: 0x00000000, model64: 0x147410001474a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1701, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1702, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1703, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1704, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1705, match64: 0x00000000, model64: 0x1474a0001474f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1706, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1707, match64: 0x00000000, model64: 0x1474f00014755},
		modelTuple{type64: 0x2700000027, matchRI: 0x1708, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1709, match64: 0x00000000, model64: 0x1474f00014755},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1475a0001475d, model64: 0x1475a0001475d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1475d00014760, model64: 0x1475d00014760},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1476000014765, model64: 0x1476500014769},
		modelTuple{type64: 0x2700000027, matchRI: 0x170b, match64: 0x00000000, model64: 0x76f6000076f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x170d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x170f, match64: 0x00000000, model64: 0x147750001477f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1710, match64: 0x00000000, model64: 0x1477f00014788},
		modelTuple{type64: 0x2700000027, matchRI: 0x1711, match64: 0x00000000, model64: 0x147880001478e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1712, match64: 0x00000000, model64: 0x1478e0001479a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1713, match64: 0x00000000, model64: 0x1479a000147a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1714, match64: 0x00000000, model64: 0x147a8000147b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1715, match64: 0x00000000, model64: 0x147b4000147bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1716, match64: 0x00000000, model64: 0x147bd000147c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1717, match64: 0x00000000, model64: 0x147c3000147cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1718, match64: 0x00000000, model64: 0x147cd000147d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1719, match64: 0x00000000, model64: 0x414d00004152},
		modelTuple{type64: 0x2700000027, matchRI: 0x171a, match64: 0x00000000, model64: 0x147d3000147d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x171b, match64: 0x00000000, model64: 0x147d8000147de},
		modelTuple{type64: 0x2700000027, matchRI: 0x171c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x171d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x171e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1720, match64: 0x00000000, model64: 0x147e3000147f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1721, match64: 0x00000000, model64: 0x147f3000147fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1722, match64: 0x00000000, model64: 0x147fc00014804},
		modelTuple{type64: 0x2700000027, matchRI: 0x1723, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1724, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1481400014823, model64: 0x148230001482c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1726, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1728, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1729, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x172b, match64: 0x00000000, model64: 0x1484100014847},
		modelTuple{type64: 0x2700000027, matchRI: 0x172c, match64: 0x00000000, model64: 0x2de300002de5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1485a00014867, model64: 0x148670001486e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1486e00014879, model64: 0x1487900014884},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1488400014893, model64: 0x148930001489b},
		modelTuple{type64: 0x2700000027, matchRI: 0x172f, match64: 0x00000000, model64: 0x148a1000148af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1730, match64: 0x00000000, model64: 0x148af000148bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1731, match64: 0x00000000, model64: 0x148bb000148cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1732, match64: 0x00000000, model64: 0x148cd000148d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1733, match64: 0x00000000, model64: 0x148d9000148e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1734, match64: 0x00000000, model64: 0x148e5000148f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1735, match64: 0x00000000, model64: 0x148f1000148fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1736, match64: 0x00000000, model64: 0x148fa00014908},
		modelTuple{type64: 0x2700000027, matchRI: 0x1737, match64: 0x00000000, model64: 0x1490800014916},
		modelTuple{type64: 0x2700000027, matchRI: 0x1738, match64: 0x00000000, model64: 0x1491600014921},
		modelTuple{type64: 0x2700000027, matchRI: 0x1739, match64: 0x00000000, model64: 0x149210001492d},
		modelTuple{type64: 0x2700000027, matchRI: 0x173a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x173b, match64: 0x00000000, model64: 0x1492d00014932},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x173c, match64: 0x00000000, model64: 0x149320001493d},
		modelTuple{type64: 0x2700000027, matchRI: 0x173d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1494a00014956, model64: 0x1495600014963},
		modelTuple{type64: 0x2700000027, matchRI: 0x1740, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1743, match64: 0x00000000, model64: 0x6aaf00006ab3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1744, match64: 0x00000000, model64: 0x1a5700001a5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1745, match64: 0x00000000, model64: 0x1496f00014973},
		modelTuple{type64: 0x2700000027, matchRI: 0x1746, match64: 0x00000000, model64: 0x1496f00014973},
		modelTuple{type64: 0x2700000027, matchRI: 0x1747, match64: 0x00000000, model64: 0x1497300014979},
		modelTuple{type64: 0x2700000027, matchRI: 0x1748, match64: 0x00000000, model64: 0x1497900014983},
		modelTuple{type64: 0x2700000027, matchRI: 0x1749, match64: 0x00000000, model64: 0x50870000508a},
		modelTuple{type64: 0x2700000027, matchRI: 0x174a, match64: 0x00000000, model64: 0x1498300014988},
		modelTuple{type64: 0x2700000027, matchRI: 0x174b, match64: 0x00000000, model64: 0xc8150000c81e},
		modelTuple{type64: 0x2700000027, matchRI: 0x174c, match64: 0x00000000, model64: 0x149880001498f},
		modelTuple{type64: 0x2700000027, matchRI: 0x174d, match64: 0x00000000, model64: 0x1498f00014993},
		modelTuple{type64: 0x2700000027, matchRI: 0x174e, match64: 0x00000000, model64: 0x149930001499a},
		modelTuple{type64: 0x2700000027, matchRI: 0x174f, match64: 0x00000000, model64: 0x1499a000149a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1750, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1753, match64: 0x00000000, model64: 0x149ab000149b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1754, match64: 0x00000000, model64: 0x149b4000149c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1755, match64: 0x00000000, model64: 0x149c2000149cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1756, match64: 0x00000000, model64: 0x149cb000149d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1757, match64: 0x00000000, model64: 0x149d3000149db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1758, match64: 0x00000000, model64: 0x149db000149e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1759, match64: 0x00000000, model64: 0x149e6000149f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x175a, match64: 0x00000000, model64: 0x149f400014a02},
		modelTuple{type64: 0x2700000027, matchRI: 0x175b, match64: 0x00000000, model64: 0x14a0200014a10},
		modelTuple{type64: 0x2700000027, matchRI: 0x175c, match64: 0x00000000, model64: 0x14a1000014a1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x175d, match64: 0x00000000, model64: 0x14a1e00014a28},
		modelTuple{type64: 0x2700000027, matchRI: 0x175e, match64: 0x00000000, model64: 0x14a2800014a34},
		modelTuple{type64: 0x2700000027, matchRI: 0x175f, match64: 0x00000000, model64: 0x14a3400014a44},
		modelTuple{type64: 0x2700000027, matchRI: 0x1760, match64: 0x00000000, model64: 0x14a4400014a54},
		modelTuple{type64: 0x2700000027, matchRI: 0x1761, match64: 0x00000000, model64: 0x14a5400014a67},
		modelTuple{type64: 0x2700000027, matchRI: 0x1762, match64: 0x00000000, model64: 0x14a6700014a74},
		modelTuple{type64: 0x2700000027, matchRI: 0x1763, match64: 0x00000000, model64: 0x14a7400014a81},
		modelTuple{type64: 0x2700000027, matchRI: 0x1764, match64: 0x00000000, model64: 0x14a8100014a8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1765, match64: 0x00000000, model64: 0x14a8f00014a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x1766, match64: 0x00000000, model64: 0x14a9800014aa9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1767, match64: 0x00000000, model64: 0x14aa900014ab3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1768, match64: 0x00000000, model64: 0x14ab300014abd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1769, match64: 0x00000000, model64: 0x14abd00014ac9},
		modelTuple{type64: 0x2700000027, matchRI: 0x176a, match64: 0x00000000, model64: 0x14ac900014ad5},
		modelTuple{type64: 0x2700000027, matchRI: 0x176b, match64: 0x00000000, model64: 0x14ad500014ae8},
		modelTuple{type64: 0x2700000027, matchRI: 0x176c, match64: 0x00000000, model64: 0x14ae800014af6},
		modelTuple{type64: 0x2700000027, matchRI: 0x176d, match64: 0x00000000, model64: 0x14af600014b06},
		modelTuple{type64: 0x2700000027, matchRI: 0x176e, match64: 0x00000000, model64: 0x14b0600014b12},
		modelTuple{type64: 0x2700000027, matchRI: 0x176f, match64: 0x00000000, model64: 0x14b1200014b24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1770, match64: 0x00000000, model64: 0x14b2400014b32},
		modelTuple{type64: 0x2700000027, matchRI: 0x1771, match64: 0x00000000, model64: 0x14b3200014b43},
		modelTuple{type64: 0x2700000027, matchRI: 0x1772, match64: 0x00000000, model64: 0x14b4300014b4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1773, match64: 0x00000000, model64: 0x14b4b00014b52},
		modelTuple{type64: 0x2700000027, matchRI: 0x1774, match64: 0x00000000, model64: 0x14b5200014b61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1775, match64: 0x00000000, model64: 0x14b6100014b69},
		modelTuple{type64: 0x2700000027, matchRI: 0x1776, match64: 0x00000000, model64: 0x14b6900014b79},
		modelTuple{type64: 0x2700000027, matchRI: 0x1777, match64: 0x00000000, model64: 0x14b7900014b82},
		modelTuple{type64: 0x2700000027, matchRI: 0x1778, match64: 0x00000000, model64: 0x14b8200014b8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1779, match64: 0x00000000, model64: 0x14b8f00014b9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x177a, match64: 0x00000000, model64: 0x14b9b00014ba2},
		modelTuple{type64: 0x2700000027, matchRI: 0x177b, match64: 0x00000000, model64: 0x14ba200014bac},
		modelTuple{type64: 0x2700000027, matchRI: 0x177c, match64: 0x00000000, model64: 0x14bac00014bbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x177d, match64: 0x00000000, model64: 0x14bbf00014bc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x177e, match64: 0x00000000, model64: 0x14bc900014bd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x177f, match64: 0x00000000, model64: 0x14bd600014be3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1780, match64: 0x00000000, model64: 0x14be300014bf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1781, match64: 0x00000000, model64: 0x14bf200014c01},
		modelTuple{type64: 0x2700000027, matchRI: 0x1782, match64: 0x00000000, model64: 0x14c0100014c08},
		modelTuple{type64: 0x2700000027, matchRI: 0x1783, match64: 0x00000000, model64: 0x14c0800014c0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1784, match64: 0x00000000, model64: 0x14c0f00014c16},
		modelTuple{type64: 0x2700000027, matchRI: 0x1785, match64: 0x00000000, model64: 0x14c1600014c23},
		modelTuple{type64: 0x2700000027, matchRI: 0x1786, match64: 0x00000000, model64: 0x14c2300014c2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1787, match64: 0x00000000, model64: 0x14c2f00014c37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1788, match64: 0x00000000, model64: 0x14c3700014c44},
		modelTuple{type64: 0x2700000027, matchRI: 0x1789, match64: 0x00000000, model64: 0x14c4400014c51},
		modelTuple{type64: 0x2700000027, matchRI: 0x178a, match64: 0x00000000, model64: 0x14c5100014c59},
		modelTuple{type64: 0x2700000027, matchRI: 0x178b, match64: 0x00000000, model64: 0x14c5900014c61},
		modelTuple{type64: 0x2700000027, matchRI: 0x178c, match64: 0x00000000, model64: 0x14c6100014c6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x178d, match64: 0x00000000, model64: 0x14c6e00014c7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x178e, match64: 0x00000000, model64: 0x14c7c00014c89},
		modelTuple{type64: 0x2700000027, matchRI: 0x178f, match64: 0x00000000, model64: 0x14c8900014c96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1790, match64: 0x00000000, model64: 0x14b7900014b82},
		modelTuple{type64: 0x2700000027, matchRI: 0x1791, match64: 0x00000000, model64: 0x14c9600014c9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1792, match64: 0x00000000, model64: 0x14c9e00014ca5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1793, match64: 0x00000000, model64: 0x14ca500014cab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1794, match64: 0x00000000, model64: 0x14cab00014cae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1795, match64: 0x00000000, model64: 0xb9790000b97b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1796, match64: 0x00000000, model64: 0xb97b0000b97d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1797, match64: 0x00000000, model64: 0xb9720000b974},
		modelTuple{type64: 0x2700000027, matchRI: 0x1798, match64: 0x00000000, model64: 0xfa280000fa2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1799, match64: 0x00000000, model64: 0x14cae00014cb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x179a, match64: 0x00000000, model64: 0x14cb500014cbe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14cbe00014cc5, model64: 0x14cc500014cd2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14cd200014cd7, model64: 0x14cd700014ce2},
		modelTuple{type64: 0x2700000027, matchRI: 0x179b, match64: 0x00000000, model64: 0x14ce200014cf2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14cf200014cf8, model64: 0x14cf800014d07},
		modelTuple{type64: 0x2700000027, matchRI: 0x179c, match64: 0x00000000, model64: 0x14d0700014d15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14d1500014d1c, model64: 0x14d1c00014d2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14d2b00014d32, model64: 0x14d3200014d3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x179d, match64: 0x00000000, model64: 0x14d3e00014d51},
		modelTuple{type64: 0x2700000027, matchRI: 0x179e, match64: 0x00000000, model64: 0x14d5100014d5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x179f, match64: 0x00000000, model64: 0x14b2400014b32},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a0, match64: 0x00000000, model64: 0x14d5d00014d68},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a1, match64: 0x00000000, model64: 0x14d6800014d71},
		modelTuple{type64: 0x20000000206, matchRI: 0x17a2, match64: 0x00000000, model64: 0x14d7100014d80},
		modelTuple{type64: 0x20000000206, matchRI: 0x17a3, match64: 0x00000000, model64: 0x14d8000014d8a},
		modelTuple{type64: 0x28400000286, matchRI: 0x17a4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x17a5, match64: 0x00000000, model64: 0x14d8a00014d98},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x17a7, match64: 0x00000000, model64: 0x14d9800014da2},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a9, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14db500014dbb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14dc400014dcf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17af, match64: 0x00000000, model64: 0x14dda00014de0},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b0, match64: 0x00000000, model64: 0x3ce000003d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14de000014de5, model64: 0x14de500014deb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14deb00014df7, model64: 0x14df700014dfc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14dfc00014e08, model64: 0x1499a000149a1},
		modelTuple{type64: 0x20000000206, matchRI: 0x17b1, match64: 0x00000000, model64: 0x14e0800014e0d},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x14e0d00014e19, model64: 0x14e1900014e26},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x14e2600014e2e, model64: 0x14e2e00014e37},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x17b3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b9, match64: 0x00000000, model64: 0x14e3e00014e4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ba, match64: 0x00000000, model64: 0x14e4e00014e5a},
		modelTuple{type64: 0x20000000206, matchRI: 0x17bb, match64: 0x00000000, model64: 0x14e5a00014e69},
		modelTuple{type64: 0x2700000027, matchRI: 0x17bc, match64: 0x00000000, model64: 0x14e6900014e74},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14e8800014e94},
		modelTuple{type64: 0x2700000027, matchRI: 0x17bf, match64: 0x00000000, model64: 0x14e9b00014ea6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ea600014eae, model64: 0x14ea600014eae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14eae00014eb5, model64: 0x14eae00014eb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14eb500014ebc, model64: 0x14eb500014ebc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ebc00014ec8, model64: 0x14ec800014ed4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ed400014eda, model64: 0x14ed400014eda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14eda00014edf, model64: 0x14eda00014edf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14edf00014ee3, model64: 0x14edf00014ee3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c2, match64: 0x00000000, model64: 0xabd60000abe1},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c4, match64: 0x00000000, model64: 0x14ef100014efc},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c5, match64: 0x00000000, model64: 0x14efc00014f0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f1b00014f24},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ca, match64: 0x00000000, model64: 0x14f2400014f31},
		modelTuple{type64: 0x2700000027, matchRI: 0x17cb, match64: 0x00000000, model64: 0x14f3100014f3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x17cc, match64: 0x00000000, model64: 0x14f3e00014f51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14f5100014f61, model64: 0x14f6100014f72},
		modelTuple{type64: 0x2700000027, matchRI: 0x17cd, match64: 0x00000000, model64: 0x14f7200014f7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ce, match64: 0x00000000, model64: 0x14f7e00014f8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x17cf, match64: 0x00000000, model64: 0x14f8d00014f98},
		modelTuple{type64: 0x20000000206, matchRI: 0x17d0, match64: 0x00000000, model64: 0x14f9800014fa7},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x14fa700014fb0, model64: 0x14fb000014fb6},
		modelTuple{type64: 0x20000000206, matchRI: 0x17d1, match64: 0x00000000, model64: 0x14fb600014fc0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14fc000014fce, model64: 0x14fce00014fdc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14fdc00014fe8, model64: 0x14fe800014ff5},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d2, match64: 0x00000000, model64: 0xbb3a0000bb42},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d3, match64: 0x00000000, model64: 0x14ff500015000},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d4, match64: 0x00000000, model64: 0x1500000015008},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1500800015011, model64: 0x1501100015016},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1501600015021, model64: 0x1502100015028},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150280001502f, model64: 0x1502f00015032},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d5, match64: 0x00000000, model64: 0x150320001503c},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d6, match64: 0x00000000, model64: 0x1503c00015044},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d9, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17db, match64: 0x00000000, model64: 0x1505100015057},
		modelTuple{type64: 0x2700000027, matchRI: 0x17dc, match64: 0x00000000, model64: 0x150570001505f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17df, match64: 0x00000000, model64: 0x150790001507d},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1508d00015095, model64: 0x15095000150a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150a5000150ab, model64: 0x150ab000150b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150b7000150bd, model64: 0x150bd000150c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150c7000150cd, model64: 0x150cd000150d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150d8000150de, model64: 0x150de000150e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150e9000150ef, model64: 0x150ef000150fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150fb00015101, model64: 0x1510100015110},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1511000015116, model64: 0x1511600015121},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1512100015127, model64: 0x1512700015131},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151310001513f, model64: 0x1513f0001514d},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e3, match64: 0x00000000, model64: 0x1514d00015158},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e4, match64: 0x00000000, model64: 0x1514d00015158},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x17e6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e8, match64: 0x00000000, model64: 0x1516100015163},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1516300015168, model64: 0x151680001516a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1516a0001516f, model64: 0x1516f00015171},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1517100015176, model64: 0x1517600015179},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e9, match64: 0x00000000, model64: 0x751d0000751f},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ea, match64: 0x00000000, model64: 0x3c6000003c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x17eb, match64: 0x00000000, model64: 0x9cbf00009cc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ec, match64: 0x00000000, model64: 0xb9720000b974},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ed, match64: 0x00000000, model64: 0x1517900015183},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ee, match64: 0x00000000, model64: 0x1518300015188},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ef, match64: 0x00000000, model64: 0x151880001518d},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f0, match64: 0x00000000, model64: 0x1518d00015196},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f1, match64: 0x00000000, model64: 0x15196000151a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151a3000151b3, model64: 0x151b3000151b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f3, match64: 0x00000000, model64: 0x151bf000151c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151c6000151ce, model64: 0x151c6000151ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f5, match64: 0x00000000, model64: 0x151db000151e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f6, match64: 0x00000000, model64: 0x151e4000151ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f7, match64: 0x00000000, model64: 0x151ef000151ff},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17fa, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17fb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x17fc, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1522100015226, model64: 0x1522600015236},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x152360001523b, model64: 0x1523b0001524c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1524c00015251, model64: 0x152510001525f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1525f00015269, model64: 0x152690001526f},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ff, match64: 0x00000000, model64: 0x1526f0001527a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1800, match64: 0x00000000, model64: 0x1527a00015284},
		modelTuple{type64: 0x2700000027, matchRI: 0x1801, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x9f700000a04, matchRI: -0x0001, match64: 0x1528900015295, model64: 0x152950001529b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1803, match64: 0x00000000, model64: 0x1529b000152a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1804, match64: 0x00000000, model64: 0x152a1000152a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1805, match64: 0x00000000, model64: 0x152a7000152aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1807, match64: 0x00000000, model64: 0x152aa000152b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1808, match64: 0x00000000, model64: 0x152b9000152cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1809, match64: 0x00000000, model64: 0x152cc000152d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x180a, match64: 0x00000000, model64: 0x152d5000152df},
		modelTuple{type64: 0x2700000027, matchRI: 0x180b, match64: 0x00000000, model64: 0x152df000152eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x180c, match64: 0x00000000, model64: 0x152eb000152f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x180d, match64: 0x00000000, model64: 0x152f700015301},
		modelTuple{type64: 0x2700000027, matchRI: 0x180e, match64: 0x00000000, model64: 0x153010001530c},
		modelTuple{type64: 0x2700000027, matchRI: 0x180f, match64: 0x00000000, model64: 0x1530c00015316},
		modelTuple{type64: 0x2700000027, matchRI: 0x1810, match64: 0x00000000, model64: 0x1531600015321},
		modelTuple{type64: 0x2700000027, matchRI: 0x1811, match64: 0x00000000, model64: 0x153210001532e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1812, match64: 0x00000000, model64: 0x1532e00015338},
		modelTuple{type64: 0x2700000027, matchRI: 0x1813, match64: 0x00000000, model64: 0x1533800015342},
		modelTuple{type64: 0x2700000027, matchRI: 0x1814, match64: 0x00000000, model64: 0x1534200015351},
		modelTuple{type64: 0x2700000027, matchRI: 0x1815, match64: 0x00000000, model64: 0x153510001535b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1816, match64: 0x00000000, model64: 0x1535b00015360},
		modelTuple{type64: 0x2700000027, matchRI: 0x1817, match64: 0x00000000, model64: 0x153600001536b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1818, match64: 0x00000000, model64: 0x1536b0001537c},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x1819, match64: 0x00000000, model64: 0x1537c0001537f},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x181a, match64: 0x00000000, model64: 0x1537f00015386},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x181b, match64: 0x00000000, model64: 0x153860001538b},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x181c, match64: 0x00000000, model64: 0x1538b00015390},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x181d, match64: 0x00000000, model64: 0x1539000015395},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x181e, match64: 0x00000000, model64: 0x1539500015398},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x181f, match64: 0x00000000, model64: 0x153980001539d},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x1820, match64: 0x00000000, model64: 0x1539d000153a1},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x1821, match64: 0x00000000, model64: 0x153a1000153a5},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x1822, match64: 0x00000000, model64: 0x153a5000153aa},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x1823, match64: 0x00000000, model64: 0x153aa000153af},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x1824, match64: 0x00000000, model64: 0x153af000153b8},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x1825, match64: 0x00000000, model64: 0x153b8000153bc},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x1826, match64: 0x00000000, model64: 0x153bc000153c1},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x1827, match64: 0x00000000, model64: 0x153c1000153c6},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x1828, match64: 0x00000000, model64: 0x153c6000153ca},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x1829, match64: 0x00000000, model64: 0x153ca000153d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x182a, match64: 0x00000000, model64: 0x153d5000153de},
		modelTuple{type64: 0x2700000027, matchRI: 0x182b, match64: 0x00000000, model64: 0x153de000153ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x153ea000153f0, model64: 0x153f0000153f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x153f9000153ff, model64: 0x153ff00015408},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x154080001540d, model64: 0x1540d0001541b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1541b00015421, model64: 0x154210001542a},
		modelTuple{type64: 0x2700000027, matchRI: 0x182c, match64: 0x00000000, model64: 0x1542a00015433},
		modelTuple{type64: 0x2700000027, matchRI: 0x182d, match64: 0x00000000, model64: 0x1532e00015338},
		modelTuple{type64: 0x2700000027, matchRI: 0x182e, match64: 0x00000000, model64: 0x1543300015440},
		modelTuple{type64: 0x2700000027, matchRI: 0x182f, match64: 0x00000000, model64: 0x154400001544c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1830, match64: 0x00000000, model64: 0x1544c00015459},
		modelTuple{type64: 0x2700000027, matchRI: 0x1831, match64: 0x00000000, model64: 0x154590001546b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1832, match64: 0x00000000, model64: 0x1546b00015479},
		modelTuple{type64: 0x2700000027, matchRI: 0x1833, match64: 0x00000000, model64: 0x1547900015487},
		modelTuple{type64: 0x2700000027, matchRI: 0x1834, match64: 0x00000000, model64: 0x154870001548f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1835, match64: 0x00000000, model64: 0x1548f000154ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1836, match64: 0x00000000, model64: 0x154ac000154b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1837, match64: 0x00000000, model64: 0x154b7000154c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1838, match64: 0x00000000, model64: 0x154c3000154cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1839, match64: 0x00000000, model64: 0x154cb000154d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x183a, match64: 0x00000000, model64: 0x154d3000154e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x183b, match64: 0x00000000, model64: 0x154e0000154e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x183c, match64: 0x00000000, model64: 0x154e8000154f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x183d, match64: 0x00000000, model64: 0x154f3000154ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x183e, match64: 0x00000000, model64: 0x154ff00015507},
		modelTuple{type64: 0x2700000027, matchRI: 0x183f, match64: 0x00000000, model64: 0x1550700015514},
		modelTuple{type64: 0x2700000027, matchRI: 0x1840, match64: 0x00000000, model64: 0x155140001551d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1841, match64: 0x00000000, model64: 0x1551d00015525},
		modelTuple{type64: 0x2700000027, matchRI: 0x1842, match64: 0x00000000, model64: 0x1552500015530},
		modelTuple{type64: 0x2700000027, matchRI: 0x1843, match64: 0x00000000, model64: 0x155300001553e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1844, match64: 0x00000000, model64: 0x1553e0001554b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1845, match64: 0x00000000, model64: 0x1554b00015555},
		modelTuple{type64: 0x2700000027, matchRI: 0x1846, match64: 0x00000000, model64: 0x155550001555e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1847, match64: 0x00000000, model64: 0x1555e0001556a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1848, match64: 0x00000000, model64: 0x1556a00015572},
		modelTuple{type64: 0x2700000027, matchRI: 0x1849, match64: 0x00000000, model64: 0x1557200015582},
		modelTuple{type64: 0x2700000027, matchRI: 0x184a, match64: 0x00000000, model64: 0x155820001558d},
		modelTuple{type64: 0x2700000027, matchRI: 0x184b, match64: 0x00000000, model64: 0x1558d00015598},
		modelTuple{type64: 0x2700000027, matchRI: 0x184c, match64: 0x00000000, model64: 0x15598000155a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x184d, match64: 0x00000000, model64: 0x155a0000155a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x184e, match64: 0x00000000, model64: 0x155a9000155b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x184f, match64: 0x00000000, model64: 0x155b2000155ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1850, match64: 0x00000000, model64: 0x155ba000155c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1851, match64: 0x00000000, model64: 0x155c3000155cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1852, match64: 0x00000000, model64: 0x155cb000155d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1853, match64: 0x00000000, model64: 0x155d8000155e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1854, match64: 0x00000000, model64: 0x155e1000155eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1855, match64: 0x00000000, model64: 0x155eb000155f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1856, match64: 0x00000000, model64: 0x155f300015600},
		modelTuple{type64: 0x2700000027, matchRI: 0x1857, match64: 0x00000000, model64: 0x1560000015608},
		modelTuple{type64: 0x2700000027, matchRI: 0x1858, match64: 0x00000000, model64: 0x1560800015610},
		modelTuple{type64: 0x2700000027, matchRI: 0x1859, match64: 0x00000000, model64: 0x1561000015619},
		modelTuple{type64: 0x2700000027, matchRI: 0x185a, match64: 0x00000000, model64: 0x1561900015622},
		modelTuple{type64: 0x2700000027, matchRI: 0x185b, match64: 0x00000000, model64: 0x156220001562b},
		modelTuple{type64: 0x2700000027, matchRI: 0x185c, match64: 0x00000000, model64: 0x1562b00015635},
		modelTuple{type64: 0x2700000027, matchRI: 0x185d, match64: 0x00000000, model64: 0x156350001563d},
		modelTuple{type64: 0x52100000528, matchRI: 0x185e, match64: 0x00000000, model64: 0x1563d0001564b},
		modelTuple{type64: 0x2700000027, matchRI: 0x185f, match64: 0x00000000, model64: 0x156350001563d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1860, match64: 0x00000000, model64: 0x1564b00015654},
		modelTuple{type64: 0x2700000027, matchRI: 0x1861, match64: 0x00000000, model64: 0x1565400015662},
		modelTuple{type64: 0x2700000027, matchRI: 0x1862, match64: 0x00000000, model64: 0x156620001566b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1863, match64: 0x00000000, model64: 0x1566b00015679},
		modelTuple{type64: 0x2700000027, matchRI: 0x1864, match64: 0x00000000, model64: 0x1567900015688},
		modelTuple{type64: 0x2700000027, matchRI: 0x1865, match64: 0x00000000, model64: 0x1568800015691},
		modelTuple{type64: 0x2700000027, matchRI: 0x1866, match64: 0x00000000, model64: 0x156910001569f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1569f000156a4, model64: 0x156a4000156ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1867, match64: 0x00000000, model64: 0x156ad000156bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1868, match64: 0x00000000, model64: 0x156bb000156c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1869, match64: 0x00000000, model64: 0x156c4000156d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x186a, match64: 0x00000000, model64: 0x156d2000156db},
		modelTuple{type64: 0x2700000027, matchRI: 0x186b, match64: 0x00000000, model64: 0x156db000156e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x186c, match64: 0x00000000, model64: 0x156e9000156f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x186d, match64: 0x00000000, model64: 0x156f70001570a},
		modelTuple{type64: 0x2700000027, matchRI: 0x186e, match64: 0x00000000, model64: 0x1570a00015713},
		modelTuple{type64: 0x2700000027, matchRI: 0x186f, match64: 0x00000000, model64: 0x1571300015721},
		modelTuple{type64: 0x2700000027, matchRI: 0x1870, match64: 0x00000000, model64: 0x157210001572f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1871, match64: 0x00000000, model64: 0x1572f00015738},
		modelTuple{type64: 0x2700000027, matchRI: 0x1872, match64: 0x00000000, model64: 0x1573800015741},
		modelTuple{type64: 0x2700000027, matchRI: 0x1873, match64: 0x00000000, model64: 0x157410001574f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1874, match64: 0x00000000, model64: 0x1574f0001575e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1875, match64: 0x00000000, model64: 0x1575e00015772},
		modelTuple{type64: 0x2700000027, matchRI: 0x1876, match64: 0x00000000, model64: 0x157720001577b},
		modelTuple{type64: 0x52100000528, matchRI: 0x1877, match64: 0x00000000, model64: 0x1577b0001578a},
		modelTuple{type64: 0x52100000528, matchRI: 0x1878, match64: 0x00000000, model64: 0x1578a0001579e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1879, match64: 0x00000000, model64: 0x1579e000157af},
		modelTuple{type64: 0x2700000027, matchRI: 0x187a, match64: 0x00000000, model64: 0x157af000157b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x187b, match64: 0x00000000, model64: 0x157b8000157c9},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x157c9000157de, model64: 0x157de000157f3},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x157f3000157f9, model64: 0x157f900015809},
		modelTuple{type64: 0x2700000027, matchRI: 0x187c, match64: 0x00000000, model64: 0x1580900015812},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1581200015817, model64: 0x1581700015821},
		modelTuple{type64: 0x2700000027, matchRI: 0x187d, match64: 0x00000000, model64: 0x158210001582a},
		modelTuple{type64: 0x2700000027, matchRI: 0x187e, match64: 0x00000000, model64: 0x1582a00015838},
		modelTuple{type64: 0x2700000027, matchRI: 0x187f, match64: 0x00000000, model64: 0x1583800015842},
		modelTuple{type64: 0x2700000027, matchRI: 0x1880, match64: 0x00000000, model64: 0x158420001584c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1881, match64: 0x00000000, model64: 0x1584c00015855},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158550001585a, model64: 0x1585a00015864},
		modelTuple{type64: 0x20000000206, matchRI: 0x1882, match64: 0x00000000, model64: 0x1584c00015855},
		modelTuple{type64: 0x2700000027, matchRI: 0x1883, match64: 0x00000000, model64: 0x1586400015875},
		modelTuple{type64: 0x2700000027, matchRI: 0x1884, match64: 0x00000000, model64: 0x158750001587e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1885, match64: 0x00000000, model64: 0x1587e0001588c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1886, match64: 0x00000000, model64: 0x1588c0001589d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1887, match64: 0x00000000, model64: 0x1589d000158b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1888, match64: 0x00000000, model64: 0x158b3000158bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1889, match64: 0x00000000, model64: 0x158bc000158ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x188a, match64: 0x00000000, model64: 0x158ca000158d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x188b, match64: 0x00000000, model64: 0x158d9000158ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x188c, match64: 0x00000000, model64: 0x158ed000158f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x188d, match64: 0x00000000, model64: 0x158f600015900},
		modelTuple{type64: 0x2700000027, matchRI: 0x188e, match64: 0x00000000, model64: 0x1590000015912},
		modelTuple{type64: 0x2700000027, matchRI: 0x188f, match64: 0x00000000, model64: 0x159120001591b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1890, match64: 0x00000000, model64: 0x1591b00015925},
		modelTuple{type64: 0x2700000027, matchRI: 0x1891, match64: 0x00000000, model64: 0x1592500015934},
		modelTuple{type64: 0x2700000027, matchRI: 0x1892, match64: 0x00000000, model64: 0x1593400015948},
		modelTuple{type64: 0x2700000027, matchRI: 0x1893, match64: 0x00000000, model64: 0x1594800015958},
		modelTuple{type64: 0x2700000027, matchRI: 0x1894, match64: 0x00000000, model64: 0x1595800015962},
		modelTuple{type64: 0x2700000027, matchRI: 0x1895, match64: 0x00000000, model64: 0x1596200015971},
		modelTuple{type64: 0x2700000027, matchRI: 0x1896, match64: 0x00000000, model64: 0x1597100015985},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159850001598a, model64: 0x159850001598a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1897, match64: 0x00000000, model64: 0x1598a0001599a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1898, match64: 0x00000000, model64: 0x1599a000159a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1899, match64: 0x00000000, model64: 0x159a4000159b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x189a, match64: 0x00000000, model64: 0x159b5000159bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159bf000159c4, model64: 0x159c4000159d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159d3000159d9, model64: 0x159d9000159eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x189b, match64: 0x00000000, model64: 0x159eb00015a02},
		modelTuple{type64: 0x2700000027, matchRI: 0x189c, match64: 0x00000000, model64: 0x15a0200015a0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x189d, match64: 0x00000000, model64: 0x15a0c00015a15},
		modelTuple{type64: 0x2700000027, matchRI: 0x189e, match64: 0x00000000, model64: 0x15a1500015a23},
		modelTuple{type64: 0x2700000027, matchRI: 0x189f, match64: 0x00000000, model64: 0x15a2300015a2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a0, match64: 0x00000000, model64: 0x15a2b00015a34},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a1, match64: 0x00000000, model64: 0x15a3400015a3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a2, match64: 0x00000000, model64: 0x15a3d00015a45},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a3, match64: 0x00000000, model64: 0x15a4500015a52},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a4, match64: 0x00000000, model64: 0x15a5200015a62},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a5, match64: 0x00000000, model64: 0x15a6200015a76},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a6, match64: 0x00000000, model64: 0x15a7600015a8f},
		modelTuple{type64: 0x20000000206, matchRI: 0x18a7, match64: 0x00000000, model64: 0x15a8f00015a9e},
		modelTuple{type64: 0x20000000206, matchRI: 0x18a8, match64: 0x00000000, model64: 0x15a9e00015aae},
		modelTuple{type64: 0x20000000206, matchRI: 0x18a9, match64: 0x00000000, model64: 0x15aae00015abe},
		modelTuple{type64: 0x20000000206, matchRI: 0x18aa, match64: 0x00000000, model64: 0x15abe00015ad6},
		modelTuple{type64: 0x20000000206, matchRI: 0x18ab, match64: 0x00000000, model64: 0x15ad600015ae5},
		modelTuple{type64: 0x1fd200001fda, matchRI: -0x0001, match64: 0x15ae500015af1, model64: 0x15ae500015af1},
		modelTuple{type64: 0x28400000286, matchRI: 0x18ac, match64: 0x00000000, model64: 0x15af100015afa},
		modelTuple{type64: 0x28400000286, matchRI: 0x18ad, match64: 0x00000000, model64: 0x15afa00015b0a},
		modelTuple{type64: 0x28400000286, matchRI: 0x18ae, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x18af, match64: 0x00000000, model64: 0x15b0a00015b14},
		modelTuple{type64: 0xbbce0000bbe3, matchRI: -0x0001, match64: 0x15b1400015b21, model64: 0x15b2100015b2d},
		modelTuple{type64: 0xbbce0000bbe3, matchRI: -0x0001, match64: 0x15b2d00015b3b, model64: 0x15b3b00015b48},
		modelTuple{type64: 0x28400000286, matchRI: 0x18b0, match64: 0x00000000, model64: 0x15b4800015b56},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x15b5600015b5d, model64: 0x15b5d00015b72},
		modelTuple{type64: 0x28400000286, matchRI: 0x18b1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x18b2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b5, match64: 0x00000000, model64: 0xa1b90000a1bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b6, match64: 0x00000000, model64: 0x15b7200015b7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x18b8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b9, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x7f1000007f8, matchRI: 0x18ba, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x18bb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x18bc, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x18bd, match64: 0x00000000, model64: 0x15b7c00015b85},
		modelTuple{type64: 0x2700000027, matchRI: 0x18be, match64: 0x00000000, model64: 0x15b7c00015b85},
		modelTuple{type64: 0x2700000027, matchRI: 0x18bf, match64: 0x00000000, model64: 0x15b7c00015b85},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b9200015b97, model64: 0x15b9200015b97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b9700015b9d, model64: 0x15b9700015b9d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c9, match64: 0x00000000, model64: 0x15bb000015bbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ca, match64: 0x00000000, model64: 0x15bbc00015bc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x18cb, match64: 0x00000000, model64: 0x15bc800015bd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x18cc, match64: 0x00000000, model64: 0x15bd300015be0},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ce, match64: 0x00000000, model64: 0x15be000015be8},
		modelTuple{type64: 0x2700000027, matchRI: 0x18cf, match64: 0x00000000, model64: 0x15be800015bf2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15bf200015bfe, model64: 0x15bfe00015c0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c0a00015c17, model64: 0x15c1700015c25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c2500015c36, model64: 0x15c3600015c48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c4800015c59, model64: 0x15c5900015c6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x15c6c00015c71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c7500015c7a, model64: 0x51ee000051f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d4, match64: 0x00000000, model64: 0x74170000741a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c8300015c8c, model64: 0x15c8c00015c95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c9500015c9d, model64: 0x15c9d00015ca5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15ca500015caf, model64: 0x15caf00015cb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15cb900015cc3, model64: 0x15cc300015ccd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15ccd00015cd8, model64: 0x15cd800015ce3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15ce300015cf3, model64: 0x15cf300015cf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d7, match64: 0x00000000, model64: 0x15d0300015d0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d8, match64: 0x00000000, model64: 0x15d0a00015d0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d9, match64: 0x00000000, model64: 0x15d0f00015d16},
		modelTuple{type64: 0x2700000027, matchRI: 0x18da, match64: 0x00000000, model64: 0x15d1600015d1b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x15d2200015d2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x18dd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18de, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e0, match64: 0x00000000, model64: 0x15d5100015d5b},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x15d5b00015d69, model64: 0x15d6900015d70},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e5, match64: 0x00000000, model64: 0x15d7f00015d87},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e6, match64: 0x00000000, model64: 0x15d8700015d97},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e7, match64: 0x00000000, model64: 0x15d9700015da6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15da600015daf, model64: 0x15daf00015db8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15db800015dc1, model64: 0x15dc100015dca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15dca00015dd2, model64: 0x15dd200015dda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15dda00015ddf, model64: 0x15ddf00015de6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15de600015dee, model64: 0x15de600015dee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15dee00015df7, model64: 0x15df700015e00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e0000015e08, model64: 0x15e0800015e10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e1000015e17, model64: 0x15e1000015e17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e1700015e20, model64: 0x15e2000015e29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e2900015e31, model64: 0x15e3100015e39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e3900015e3f, model64: 0x15e3f00015e45},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e8, match64: 0x00000000, model64: 0x15e4500015e4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e9, match64: 0x00000000, model64: 0x15e4e00015e56},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ea, match64: 0x00000000, model64: 0x15e5600015e5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e5d00015e66, model64: 0x15e6600015e6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6d60000c6da, model64: 0xc6d60000c6da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e6f00015e75, model64: 0x15e7500015e7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x18eb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ec, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x18ed, match64: 0x00000000, model64: 0x15e7b00015e87},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ef, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f0, match64: 0x00000000, model64: 0xc05a0000c062},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f2, match64: 0x00000000, model64: 0x15e9100015e98},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f3, match64: 0x00000000, model64: 0x15e9800015e9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x41400000421, matchRI: 0x18fa, match64: 0x00000000, model64: 0x15eb300015ebb},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x18fe, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15ecf00015ed7, model64: 0x15ed700015ee0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1901, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1905, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1906, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1908, match64: 0x00000000, model64: 0x15efd00015f07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f0700015f0e, model64: 0x15f0e00015f16},
		modelTuple{type64: 0x2700000027, matchRI: 0x190a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x190b, match64: 0x00000000, model64: 0x15f1b00015f22},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f3300015f38, model64: 0x15f3300015f38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f3800015f48, model64: 0x15f4800015f4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x190e, match64: 0x00000000, model64: 0x15f4f00015f56},
		modelTuple{type64: 0x2700000027, matchRI: 0x190f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1910, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f6300015f6a, model64: 0x15f6a00015f71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1913, match64: 0x00000000, model64: 0x15f7100015f7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1914, match64: 0x00000000, model64: 0x15f7d00015f84},
		modelTuple{type64: 0x2700000027, matchRI: 0x1915, match64: 0x00000000, model64: 0x15f8400015f8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f8c00015f98, model64: 0x15f9800015fa4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1916, match64: 0x00000000, model64: 0x15fa400015faf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15faf00015fb6, model64: 0x515900005163},
		modelTuple{type64: 0x2700000027, matchRI: 0x1917, match64: 0x00000000, model64: 0x15fb600015fbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1918, match64: 0x00000000, model64: 0x15fbd00015fc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1919, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x191a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x191c, match64: 0x00000000, model64: 0x37d9000037df},
		modelTuple{type64: 0x2700000027, matchRI: 0x191e, match64: 0x00000000, model64: 0x15fd900015fe1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1920, match64: 0x00000000, model64: 0x15fe400015fec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1921, match64: 0x00000000, model64: 0x15fec00015ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1922, match64: 0x00000000, model64: 0x15ff100015ff4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1923, match64: 0x00000000, model64: 0x15ff400015ff7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1924, match64: 0x00000000, model64: 0x15ff70001600f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1925, match64: 0x00000000, model64: 0x1600f00016017},
		modelTuple{type64: 0x2700000027, matchRI: 0x1926, match64: 0x00000000, model64: 0x160170001601a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1601a0001601f, model64: 0x1601f00016022},
		modelTuple{type64: 0x2700000027, matchRI: 0x1927, match64: 0x00000000, model64: 0x1602200016024},
		modelTuple{type64: 0x2700000027, matchRI: 0x1928, match64: 0x00000000, model64: 0x11cb000011cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1929, match64: 0x00000000, model64: 0x1602400016027},
		modelTuple{type64: 0x2700000027, matchRI: 0x192a, match64: 0x00000000, model64: 0x4e9b00004e9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x192b, match64: 0x00000000, model64: 0x1602700016029},
		modelTuple{type64: 0x2700000027, matchRI: 0x192c, match64: 0x00000000, model64: 0x4db700004db9},
		modelTuple{type64: 0x2700000027, matchRI: 0x192d, match64: 0x00000000, model64: 0x160290001602b},
		modelTuple{type64: 0x2700000027, matchRI: 0x192e, match64: 0x00000000, model64: 0x1205f00012066},
		modelTuple{type64: 0x2700000027, matchRI: 0x192f, match64: 0x00000000, model64: 0x1602b0001602e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1930, match64: 0x00000000, model64: 0x1602e00016032},
		modelTuple{type64: 0x2700000027, matchRI: 0x1931, match64: 0x00000000, model64: 0x160320001603a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1932, match64: 0x00000000, model64: 0xd42e0000d430},
		modelTuple{type64: 0x2700000027, matchRI: 0x1933, match64: 0x00000000, model64: 0x1603a0001603f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1934, match64: 0x00000000, model64: 0x1603f00016043},
		modelTuple{type64: 0x2700000027, matchRI: 0x1935, match64: 0x00000000, model64: 0x77b5000077bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1936, match64: 0x00000000, model64: 0x1604300016048},
		modelTuple{type64: 0x2700000027, matchRI: 0x1937, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1938, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1939, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x193a, match64: 0x00000000, model64: 0x160480001604a},
		modelTuple{type64: 0x2700000027, matchRI: 0x193b, match64: 0x00000000, model64: 0x998000009982},
		modelTuple{type64: 0x2700000027, matchRI: 0x193c, match64: 0x00000000, model64: 0x1604a0001604d},
		modelTuple{type64: 0x2700000027, matchRI: 0x193d, match64: 0x00000000, model64: 0x1604d00016052},
		modelTuple{type64: 0x2700000027, matchRI: 0x193e, match64: 0x00000000, model64: 0x1605200016057},
		modelTuple{type64: 0x2700000027, matchRI: 0x193f, match64: 0x00000000, model64: 0x160570001605d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1940, match64: 0x00000000, model64: 0x1605d00016060},
		modelTuple{type64: 0x2700000027, matchRI: 0x1941, match64: 0x00000000, model64: 0x1606000016065},
		modelTuple{type64: 0x2700000027, matchRI: 0x1942, match64: 0x00000000, model64: 0x160650001606a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1943, match64: 0x00000000, model64: 0x1606a00016073},
		modelTuple{type64: 0x2700000027, matchRI: 0x1944, match64: 0x00000000, model64: 0x1607300016079},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x160790001607e, model64: 0x1604d00016052},
		modelTuple{type64: 0x20000000206, matchRI: 0x1945, match64: 0x00000000, model64: 0x1607e00016087},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x160870001608c, model64: 0x1608c00016098},
		modelTuple{type64: 0x28400000286, matchRI: 0x1946, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x1947, match64: 0x00000000, model64: 0x16098000160a4},
		modelTuple{type64: 0x28400000286, matchRI: 0x1948, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x160b5000160bd, model64: 0x160bd000160c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x194b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x194d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x194e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x160e3000160f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1953, match64: 0x00000000, model64: 0x160f4000160ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1954, match64: 0x00000000, model64: 0x160ff00016109},
		modelTuple{type64: 0x20000000206, matchRI: 0x1955, match64: 0x00000000, model64: 0x160ff00016109},
		modelTuple{type64: 0x20000000206, matchRI: 0x1957, match64: 0x00000000, model64: 0x1610c00016116},
		modelTuple{type64: 0x2700000027, matchRI: 0x1958, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x161220001612e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x195d, match64: 0x00000000, model64: 0x1613e00016143},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x161430001614a, model64: 0x1614a00016151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1615100016159, model64: 0x1615100016159},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1616000016165, model64: 0x1616000016165},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1616500016170, model64: 0x1617000016174},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1617400016180, model64: 0x1618000016184},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x161840001618e, model64: 0x1618e00016191},
		modelTuple{type64: 0x2700000027, matchRI: 0x195f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1960, match64: 0x00000000, model64: 0x1619100016194},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1619400016199, model64: 0x161990001619e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1619e000161aa, model64: 0x161aa000161b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1961, match64: 0x00000000, model64: 0x161b6000161bd},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1962, match64: 0x00000000, model64: 0x161bd000161c2},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x161c2000161c8, model64: 0x161c8000161cf},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1963, match64: 0x00000000, model64: 0x161cf000161d9},
		modelTuple{type64: 0x9f700000a04, matchRI: -0x0001, match64: 0x161d9000161ee, model64: 0x161ee000161fa},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1964, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1966, match64: 0x00000000, model64: 0x162020001620d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1968, match64: 0x00000000, model64: 0x1621c00016224},
		modelTuple{type64: 0x2700000027, matchRI: 0x1969, match64: 0x00000000, model64: 0x1622400016227},
		modelTuple{type64: 0x2700000027, matchRI: 0x196a, match64: 0x00000000, model64: 0x162270001622a},
		modelTuple{type64: 0x2700000027, matchRI: 0x196b, match64: 0x00000000, model64: 0x1622a0001622e},
		modelTuple{type64: 0x2700000027, matchRI: 0x196c, match64: 0x00000000, model64: 0x1622e00016233},
		modelTuple{type64: 0x2700000027, matchRI: 0x196d, match64: 0x00000000, model64: 0x1623300016238},
		modelTuple{type64: 0x2700000027, matchRI: 0x196e, match64: 0x00000000, model64: 0x162380001623b},
		modelTuple{type64: 0x2700000027, matchRI: 0x196f, match64: 0x00000000, model64: 0xbaf20000baf9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1623b00016241, model64: 0x1624100016247},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162470001624e, model64: 0x162470001624e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1624e00016254, model64: 0x162540001625a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1625a00016260, model64: 0x1626000016263},
		modelTuple{type64: 0x2700000027, matchRI: 0x1970, match64: 0x00000000, model64: 0x1626300016266},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162660001626b, model64: 0x1626b00016271},
		modelTuple{type64: 0x2700000027, matchRI: 0x1971, match64: 0x00000000, model64: 0x1627100016278},
		modelTuple{type64: 0x2700000027, matchRI: 0x1972, match64: 0x00000000, model64: 0x1627800016280},
		modelTuple{type64: 0x2700000027, matchRI: 0x1973, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1974, match64: 0x00000000, model64: 0x1628000016290},
		modelTuple{type64: 0x2700000027, matchRI: 0x1975, match64: 0x00000000, model64: 0x1629000016299},
		modelTuple{type64: 0x2700000027, matchRI: 0x1976, match64: 0x00000000, model64: 0x16299000162a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1977, match64: 0x00000000, model64: 0x162a4000162ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1978, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162ba000162c7, model64: 0x162c7000162d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162d5000162dd, model64: 0x162dd000162e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x197a, match64: 0x00000000, model64: 0x162e6000162ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x197b, match64: 0x00000000, model64: 0x162ef000162f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x197c, match64: 0x00000000, model64: 0x162f800016301},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1630100016309, model64: 0x163090001630b},
		modelTuple{type64: 0x2700000027, matchRI: 0x197d, match64: 0x00000000, model64: 0x1630b00016311},
		modelTuple{type64: 0x2700000027, matchRI: 0x197e, match64: 0x00000000, model64: 0x1631100016318},
		modelTuple{type64: 0x2700000027, matchRI: 0x197f, match64: 0x00000000, model64: 0x1631800016323},
		modelTuple{type64: 0x2700000027, matchRI: 0x1980, match64: 0x00000000, model64: 0x1632300016330},
		modelTuple{type64: 0x2700000027, matchRI: 0x1981, match64: 0x00000000, model64: 0x163300001633c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1982, match64: 0x00000000, model64: 0x1633c00016345},
		modelTuple{type64: 0x2700000027, matchRI: 0x1983, match64: 0x00000000, model64: 0x163450001634d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1984, match64: 0x00000000, model64: 0x1634d0001635b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1985, match64: 0x00000000, model64: 0x1635b00016365},
		modelTuple{type64: 0x2700000027, matchRI: 0x1986, match64: 0x00000000, model64: 0x1636500016371},
		modelTuple{type64: 0x20000000206, matchRI: 0x1987, match64: 0x00000000, model64: 0x163710001637c},
		modelTuple{type64: 0x20000000206, matchRI: 0x1988, match64: 0x00000000, model64: 0x1637c00016387},
		modelTuple{type64: 0x20000000206, matchRI: 0x1989, match64: 0x00000000, model64: 0x1638700016396},
		modelTuple{type64: 0x20000000206, matchRI: 0x198a, match64: 0x00000000, model64: 0x16396000163a1},
		modelTuple{type64: 0x20000000206, matchRI: 0x198b, match64: 0x00000000, model64: 0x163a1000163ac},
		modelTuple{type64: 0x20000000206, matchRI: 0x198c, match64: 0x00000000, model64: 0x163ac000163bc},
		modelTuple{type64: 0x20000000206, matchRI: 0x198d, match64: 0x00000000, model64: 0x163bc000163cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x198e, match64: 0x00000000, model64: 0x163cb000163ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x198f, match64: 0x00000000, model64: 0x163ce000163d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1990, match64: 0x00000000, model64: 0x163d6000163de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1991, match64: 0x00000000, model64: 0x163de000163e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1992, match64: 0x00000000, model64: 0x163e6000163f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1993, match64: 0x00000000, model64: 0x163f2000163fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1994, match64: 0x00000000, model64: 0x163fa00016406},
		modelTuple{type64: 0x2700000027, matchRI: 0x1995, match64: 0x00000000, model64: 0x1640600016412},
		modelTuple{type64: 0x2700000027, matchRI: 0x1996, match64: 0x00000000, model64: 0x164120001641a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1997, match64: 0x00000000, model64: 0x1641a00016426},
		modelTuple{type64: 0x2700000027, matchRI: 0x1998, match64: 0x00000000, model64: 0x1642600016436},
		modelTuple{type64: 0x2700000027, matchRI: 0x1999, match64: 0x00000000, model64: 0x1643600016442},
		modelTuple{type64: 0x2700000027, matchRI: 0x199a, match64: 0x00000000, model64: 0x164420001644a},
		modelTuple{type64: 0x2700000027, matchRI: 0x199b, match64: 0x00000000, model64: 0x1644a0001645a},
		modelTuple{type64: 0x2700000027, matchRI: 0x199c, match64: 0x00000000, model64: 0x1645a00016466},
		modelTuple{type64: 0x2700000027, matchRI: 0x199d, match64: 0x00000000, model64: 0x1646600016470},
		modelTuple{type64: 0x2700000027, matchRI: 0x199e, match64: 0x00000000, model64: 0x164700001647b},
		modelTuple{type64: 0x2700000027, matchRI: 0x199f, match64: 0x00000000, model64: 0x1647b00016483},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a0, match64: 0x00000000, model64: 0x164830001648f},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a1, match64: 0x00000000, model64: 0x1648f00016498},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a2, match64: 0x00000000, model64: 0x16498000164a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a3, match64: 0x00000000, model64: 0x164a8000164b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a4, match64: 0x00000000, model64: 0x164b0000164b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a5, match64: 0x00000000, model64: 0x164b9000164c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a6, match64: 0x00000000, model64: 0x164c1000164c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a7, match64: 0x00000000, model64: 0x164c8000164d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a8, match64: 0x00000000, model64: 0x164d3000164db},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a9, match64: 0x00000000, model64: 0x164db000164e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x19aa, match64: 0x00000000, model64: 0x164e7000164ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ab, match64: 0x00000000, model64: 0x164ec000164f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ac, match64: 0x00000000, model64: 0x164f1000164fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ad, match64: 0x00000000, model64: 0x164fb00016501},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ae, match64: 0x00000000, model64: 0x1650100016507},
		modelTuple{type64: 0x2700000027, matchRI: 0x19af, match64: 0x00000000, model64: 0x1650700016511},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b0, match64: 0x00000000, model64: 0x165110001651b},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b1, match64: 0x00000000, model64: 0x1651b00016526},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b2, match64: 0x00000000, model64: 0x1652600016531},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b3, match64: 0x00000000, model64: 0x165310001653b},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b4, match64: 0x00000000, model64: 0x1653b00016541},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b5, match64: 0x00000000, model64: 0x165410001654a},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b6, match64: 0x00000000, model64: 0x1654a0001654f},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b7, match64: 0x00000000, model64: 0x1654f00016559},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b8, match64: 0x00000000, model64: 0x165590001655e},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b9, match64: 0x00000000, model64: 0x1655e00016567},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ba, match64: 0x00000000, model64: 0x1656700016570},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bb, match64: 0x00000000, model64: 0x1657000016579},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bc, match64: 0x00000000, model64: 0x165790001657e},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bd, match64: 0x00000000, model64: 0x1657e00016586},
		modelTuple{type64: 0x2700000027, matchRI: 0x19be, match64: 0x00000000, model64: 0x165860001658f},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bf, match64: 0x00000000, model64: 0x1658f00016598},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c0, match64: 0x00000000, model64: 0x165980001659e},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c1, match64: 0x00000000, model64: 0x1659e000165a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c2, match64: 0x00000000, model64: 0x165a6000165b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c3, match64: 0x00000000, model64: 0x7ce800007cef},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c4, match64: 0x00000000, model64: 0x165b5000165c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c5, match64: 0x00000000, model64: 0x165c2000165c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c6, match64: 0x00000000, model64: 0x165c9000165d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c7, match64: 0x00000000, model64: 0x165d4000165db},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c8, match64: 0x00000000, model64: 0x165db000165e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c9, match64: 0x00000000, model64: 0x165e6000165f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ca, match64: 0x00000000, model64: 0x165f2000165fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x19cb, match64: 0x00000000, model64: 0x165fd00016604},
		modelTuple{type64: 0x2700000027, matchRI: 0x19cc, match64: 0x00000000, model64: 0x166040001660f},
		modelTuple{type64: 0x2700000027, matchRI: 0x19cd, match64: 0x00000000, model64: 0x1660f00016616},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ce, match64: 0x00000000, model64: 0x1661600016621},
		modelTuple{type64: 0x2700000027, matchRI: 0x19cf, match64: 0x00000000, model64: 0x166210001662b},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d0, match64: 0x00000000, model64: 0x1662b00016632},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d1, match64: 0x00000000, model64: 0x166320001663d},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d2, match64: 0x00000000, model64: 0x1663d00016645},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d3, match64: 0x00000000, model64: 0x166450001664d},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d4, match64: 0x00000000, model64: 0x1664d00016654},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d5, match64: 0x00000000, model64: 0x166540001665c},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d6, match64: 0x00000000, model64: 0x1665c00016664},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d7, match64: 0x00000000, model64: 0x166640001666c},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d8, match64: 0x00000000, model64: 0x1666c00016677},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d9, match64: 0x00000000, model64: 0x166770001667f},
		modelTuple{type64: 0x2700000027, matchRI: 0x19da, match64: 0x00000000, model64: 0x1667f00016688},
		modelTuple{type64: 0x2700000027, matchRI: 0x19db, match64: 0x00000000, model64: 0x1668800016692},
		modelTuple{type64: 0x2700000027, matchRI: 0x19dc, match64: 0x00000000, model64: 0x166920001669d},
		modelTuple{type64: 0x2700000027, matchRI: 0x19dd, match64: 0x00000000, model64: 0x1669d000166a5},
		modelTuple{type64: 0x20000000206, matchRI: 0x19de, match64: 0x00000000, model64: 0x166a5000166b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x19df, match64: 0x00000000, model64: 0x166b0000166bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e0, match64: 0x00000000, model64: 0x166bd000166c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e1, match64: 0x00000000, model64: 0x166c6000166cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e2, match64: 0x00000000, model64: 0x166cf000166d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e3, match64: 0x00000000, model64: 0x166d8000166e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e4, match64: 0x00000000, model64: 0x166e5000166f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e5, match64: 0x00000000, model64: 0x166f3000166fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e6, match64: 0x00000000, model64: 0x166fc00016709},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e7, match64: 0x00000000, model64: 0x1670900016710},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e8, match64: 0x00000000, model64: 0x1671000016715},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e9, match64: 0x00000000, model64: 0x167150001671b},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ea, match64: 0x00000000, model64: 0x1671b00016722},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x167220001672a, model64: 0x2e9000002e92},
		modelTuple{type64: 0x52100000528, matchRI: 0x19eb, match64: 0x00000000, model64: 0x1672a0001672e},
		modelTuple{type64: 0x52100000528, matchRI: 0x19ec, match64: 0x00000000, model64: 0x1672e00016736},
		modelTuple{type64: 0x52100000528, matchRI: 0x19ed, match64: 0x00000000, model64: 0x167360001673c},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ee, match64: 0x00000000, model64: 0xedbd0000edc3},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x19ef, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1674300016752, model64: 0x1675200016759},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f3, match64: 0x00000000, model64: 0x1675900016761},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f5, match64: 0x00000000, model64: 0x167660001676c},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f6, match64: 0x00000000, model64: 0x1676c00016774},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1677e0001678a, model64: 0x1678a00016796},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fa, match64: 0x00000000, model64: 0x167960001679c},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1679c000167a4, model64: 0x167a4000167ad},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x167ad000167b5, model64: 0x167b5000167bd},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x167bd000167c5, model64: 0x167c5000167cd},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x19fb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fc, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x19fd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x19fe, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x167d9000167e4, model64: 0x167e4000167e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x167e8000167f3, model64: 0x167f3000167f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ff, match64: 0x00000000, model64: 0x167f8000167fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a01, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a02, match64: 0x00000000, model64: 0xcc5a0000cc65},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1681100016814},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a03, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a04, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1681e00016824, model64: 0x1681e00016824},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a06, match64: 0x00000000, model64: 0x1682900016830},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a07, match64: 0x00000000, model64: 0x1683000016839},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x168410001684b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1684e00016856, model64: 0x1684e00016856},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0f, match64: 0x00000000, model64: 0xcaf00000caf8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1685d00016864, model64: 0x1685d00016864},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168640001686c, model64: 0x168640001686c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1686c00016874, model64: 0x1686c00016874},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a10, match64: 0x00000000, model64: 0x1687400016881},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a11, match64: 0x00000000, model64: 0x1688100016888},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a12, match64: 0x00000000, model64: 0x168880001688d},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1a13, match64: 0x00000000, model64: 0x1688d00016892},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1a14, match64: 0x00000000, model64: 0x1689200016899},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1a15, match64: 0x00000000, model64: 0x16899000168a0},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x168a0000168ad, model64: 0x168a0000168ad},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x168ad000168bb, model64: 0x168bb000168c9},
		modelTuple{type64: 0x28400000286, matchRI: 0x1a16, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168db000168e4, model64: 0x168e4000168ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168ed000168f6, model64: 0x168ed000168f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1b, match64: 0x00000000, model64: 0x168fc00016906},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1c, match64: 0x00000000, model64: 0x169060001690f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x169140001691c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1f, match64: 0x00000000, model64: 0x666300006668},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1692200016931, model64: 0x169310001693a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1693a00016942, model64: 0x169420001694b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a20, match64: 0x00000000, model64: 0x1694b00016958},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1695800016966, model64: 0x1695800016966},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1696600016970, model64: 0x1696600016970},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a21, match64: 0x00000000, model64: 0x169700001697e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1697e00016988, model64: 0x1698800016992},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169920001699e, model64: 0x1699e000169aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169aa000169ae, model64: 0x169aa000169ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169ae000169b5, model64: 0x169b5000169bc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x169cc000169d9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a26, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a27, match64: 0x00000000, model64: 0x169e7000169ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169f700016a00, model64: 0x169f700016a00},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x16a0000016a09, model64: 0x16a0900016a12},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x16a1200016a17, model64: 0x16a1200016a17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a1700016a22, model64: 0x16a2200016a28},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16a3700016a49},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1a2c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a5b00016a60, model64: 0x16a6000016a6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a6b00016a70, model64: 0x16a7000016a7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a7b00016a80, model64: 0x16a8000016a8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a8b00016a8f, model64: 0x16a8f00016a99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a9900016a9e, model64: 0x16a9e00016aa9},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x16aa900016aae, model64: 0x947c00009482},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x16aae00016ab3, model64: 0x16ab300016abe},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x16abe00016ac5, model64: 0x16ac500016ad2},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x16ad200016ad8, model64: 0x16ad800016ae4},
		modelTuple{type64: 0x20000000206, matchRI: 0x1a2e, match64: 0x00000000, model64: 0x16ae400016aee},
		modelTuple{type64: 0x20000000206, matchRI: 0x1a2f, match64: 0x00000000, model64: 0x16aee00016afd},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x16afd00016b03, model64: 0x16b0300016b10},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x16b1000016b19, model64: 0x16b1900016b23},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x16b2300016b2d, model64: 0x16b2d00016b37},
		modelTuple{type64: 0x28400000286, matchRI: 0x1a30, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x28400000286, matchRI: -0x0001, match64: 0x16b3700016b40, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a31, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a32, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a33, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1a35, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x16b4900016b56, model64: 0x16b5600016b6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a36, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a37, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a39, match64: 0x00000000, model64: 0x16b7300016b81},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3c, match64: 0x00000000, model64: 0x16b8900016b95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b9500016b9e, model64: 0x16b9e00016bb3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16bb300016bc6, model64: 0x16bc600016bd9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16bd900016be5, model64: 0x16bd900016be5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3e, match64: 0x00000000, model64: 0x16be500016bef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3f, match64: 0x00000000, model64: 0x16be500016bef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16bef00016bfb, model64: 0x16bfb00016c06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a40, match64: 0x00000000, model64: 0x16c0600016c1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a41, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a43, match64: 0x00000000, model64: 0x16c2200016c2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a44, match64: 0x00000000, model64: 0x16c2e00016c39},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a45, match64: 0x00000000, model64: 0x16c3900016c41},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a46, match64: 0x00000000, model64: 0x16c4100016c4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c4e00016c59, model64: 0x16c5900016c65},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1a47, match64: 0x00000000, model64: 0x16c6500016c70},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1a48, match64: 0x00000000, model64: 0x16c7000016c7b},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1a49, match64: 0x00000000, model64: 0x16c7b00016c87},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1a4a, match64: 0x00000000, model64: 0x16c8700016c92},
		modelTuple{type64: 0x52100000528, matchRI: 0x1a4b, match64: 0x00000000, model64: 0x16c9200016c9f},
		modelTuple{type64: 0x52100000528, matchRI: 0x1a4c, match64: 0x00000000, model64: 0x16c9f00016cb4},
		modelTuple{type64: 0x52100000528, matchRI: 0x1a4d, match64: 0x00000000, model64: 0x16cb400016cbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a4e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ccd00016cd7, model64: 0x16cd700016ce1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ce100016ced, model64: 0x16ced00016cf9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16cf900016d04, model64: 0x16d0400016d0f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16d1300016d18},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a54, match64: 0x00000000, model64: 0x16d2500016d37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a55, match64: 0x00000000, model64: 0x16d3700016d49},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a56, match64: 0x00000000, model64: 0x16d4900016d61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a57, match64: 0x00000000, model64: 0x16d6100016d72},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a58, match64: 0x00000000, model64: 0x16d7200016d83},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a59, match64: 0x00000000, model64: 0x16d8300016d94},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a5a, match64: 0x00000000, model64: 0x16d9400016d9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a5b, match64: 0x00000000, model64: 0x16d9f00016daf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16daf00016dc1, model64: 0x16dc100016dce},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16deb00016dfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a60, match64: 0x00000000, model64: 0x16dfa00016e02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a61, match64: 0x00000000, model64: 0x16e0200016e09},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a62, match64: 0x00000000, model64: 0x16e0900016e0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a63, match64: 0x00000000, model64: 0x16e0e00016e16},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a64, match64: 0x00000000, model64: 0x16e1600016e1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a65, match64: 0x00000000, model64: 0x16e1c00016e20},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a66, match64: 0x00000000, model64: 0x74a7000074a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e2700016e30, model64: 0x16e3000016e32},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a68, match64: 0x00000000, model64: 0x998000009982},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a69, match64: 0x00000000, model64: 0x16e3200016e34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a6a, match64: 0x00000000, model64: 0x16e3400016e3b},
		modelTuple{type64: 0x20000000206, matchRI: 0x1a6b, match64: 0x00000000, model64: 0x16e3b00016e3e},
		modelTuple{type64: 0x20000000206, matchRI: 0x1a6c, match64: 0x00000000, model64: 0x16e3e00016e47},
		modelTuple{type64: 0x20000000206, matchRI: 0x1a6d, match64: 0x00000000, model64: 0x16e4700016e53},
		modelTuple{type64: 0x28400000286, matchRI: 0x1a6e, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20000000206, matchRI: 0x1a6f, match64: 0x00000000, model64: 0xc72b0000c733},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a70, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a74, match64: 0x00000000, model64: 0x16e6c00016e75},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a75, match64: 0x00000000, model64: 0x16e7500016e79},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a76, match64: 0x00000000, model64: 0x16e7900016e88},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a77, match64: 0x00000000, model64: 0x16e8800016e96},
		modelTuple{type64: 0x20000000206, matchRI: 0x1a78, match64: 0x00000000, model64: 0x16e9600016e9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a7a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a7b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a7d, match64: 0x00000000, model64: 0x16ec000016ec5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a7f, match64: 0x00000000, model64: 0x823300008243},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a80, match64: 0x00000000, model64: 0x8b2200008b2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a81, match64: 0x00000000, model64: 0x16ecc00016ed8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16eea00016ef4, model64: 0x16ef400016f05},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a82, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1a84, match64: 0x00000000, model64: 0x16f0c00016f13},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a85, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f1300016f1e, model64: 0x16f1300016f1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a86, match64: 0x00000000, model64: 0x16f1e00016f22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f2200016f2d, model64: 0x16f2d00016f34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f3400016f3d, model64: 0x16f3d00016f42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a87, match64: 0x00000000, model64: 0x15cf300015cf9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f4200016f4a, model64: 0x16f4a00016f52},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f5200016f5a, model64: 0x16f5200016f5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a88, match64: 0x00000000, model64: 0x16f5a00016f63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f6300016f6c, model64: 0x16f6c00016f75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f7500016f7a, model64: 0x16f7a00016f7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f7f00016f87, model64: 0x16f8700016f8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f8f00016f97, model64: 0x16f9700016f9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a89, match64: 0x00000000, model64: 0x16f9f00016fa4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16fa400016fab, model64: 0x16fab00016fb2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16fb200016fb9, model64: 0x16fb200016fb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a8a, match64: 0x00000000, model64: 0x16fb900016fc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a8b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a8c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a8d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a90, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16fe500016fef},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a98, match64: 0x00000000, model64: 0x16fff00017003},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1700300017008, model64: 0x1700300017008},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170080001700d, model64: 0x170080001700d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1700d00017011, model64: 0x1700d00017011},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a99, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a9a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a9c, match64: 0x00000000, model64: 0x5a0f00005a16},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a9d, match64: 0x00000000, model64: 0x1701800017022},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a9e, match64: 0x00000000, model64: 0x170220001702e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a9f, match64: 0x00000000, model64: 0x1702e00017035},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa0, match64: 0x00000000, model64: 0x1703500017040},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa1, match64: 0x00000000, model64: 0x1704000017046},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa2, match64: 0x00000000, model64: 0x170460001704a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa3, match64: 0x00000000, model64: 0x1704a00017051},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170510001705b, model64: 0x5d5400005d5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1705b00017062, model64: 0x1706200017069},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa4, match64: 0x00000000, model64: 0x1706900017077},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa5, match64: 0x00000000, model64: 0x170770001707f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa6, match64: 0x00000000, model64: 0x1707f00017088},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa7, match64: 0x00000000, model64: 0x1708800017095},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa8, match64: 0x00000000, model64: 0x170950001709e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa9, match64: 0x00000000, model64: 0x1709e000170a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aaa, match64: 0x00000000, model64: 0x170a7000170ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aab, match64: 0x00000000, model64: 0x170ae000170b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aac, match64: 0x00000000, model64: 0x170b6000170bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aad, match64: 0x00000000, model64: 0x170bf000170ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aae, match64: 0x00000000, model64: 0x170ca000170d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aaf, match64: 0x00000000, model64: 0x170d6000170de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab0, match64: 0x00000000, model64: 0x170de000170e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab1, match64: 0x00000000, model64: 0x170e3000170ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab2, match64: 0x00000000, model64: 0xbb570000bb5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab3, match64: 0x00000000, model64: 0x170ed000170f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab4, match64: 0x00000000, model64: 0x170f4000170fb},
		modelTuple{type64: 0x52100000528, matchRI: 0x1ab5, match64: 0x00000000, model64: 0x170fb00017103},
		modelTuple{type64: 0x20000000206, matchRI: 0x1ab6, match64: 0x00000000, model64: 0x37d9000037df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab9, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1abb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1abc, match64: 0x00000000, model64: 0x1710700017119},
		modelTuple{type64: 0x2700000027, matchRI: 0x1abd, match64: 0x00000000, model64: 0x171190001712b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1abe, match64: 0x00000000, model64: 0x1712b0001713d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1abf, match64: 0x00000000, model64: 0x1713d0001714f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac0, match64: 0x00000000, model64: 0x1714f00017162},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1ac1, match64: 0x00000000, model64: 0x1716200017179},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1ac2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac4, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac5, match64: 0x00000000, model64: 0x1718100017188},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1718800017194, model64: 0x17194000171a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8c5900008c5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac9, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x28400000286, matchRI: 0x1acb, match64: 0x00000000, model64: 0x171b5000171bb},
		modelTuple{type64: 0x52100000528, matchRI: 0x1acc, match64: 0x00000000, model64: 0x171bb000171c4},
		modelTuple{type64: 0x28400000286, matchRI: 0x1acd, match64: 0x00000000, model64: 0x171c4000171ca},
		modelTuple{type64: 0x28400000286, matchRI: 0x1ace, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x28400000286, matchRI: 0x1acf, match64: 0x00000000, model64: 0x171ca000171d1},
		modelTuple{type64: 0x28400000286, matchRI: 0x1ad0, match64: 0x00000000, model64: 0x171d1000171d9},
		modelTuple{type64: 0x28400000286, matchRI: 0x1ad1, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad2, match64: 0x00000000, model64: 0x171d9000171e4},
		modelTuple{type64: 0x940000009f, matchRI: 0x1ad3, match64: 0x00000000, model64: 0x171e4000171eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171f2000171f6, model64: 0x171f6000171fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171fe00017203, model64: 0x5eba00005ebe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1720300017207, model64: 0x1720700017210},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1721000017214, model64: 0x172140001721d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1721d00017221, model64: 0x172210001722a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1722a0001722e, model64: 0x1722a0001722e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1722e00017232, model64: 0x172320001723e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1723e00017242, model64: 0x172420001724b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1724b00017250, model64: 0x1725000017254},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1725400017258, model64: 0xf75c0000f75f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172580001725c, model64: 0x1725c00017263},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1727300017277},
		modelTuple{type64: 0x5f5100005f5b, matchRI: 0x1ada, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1728000017286, model64: 0x172860001728d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1adc, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1adf, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172930001729d, model64: 0x1729d000172a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae0, match64: 0x00000000, model64: 0x172a7000172ac},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae4, match64: 0x00000000, model64: 0x172bb000172c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae5, match64: 0x00000000, model64: 0x172c6000172ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172d2000172dc, model64: 0x172dc000172e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172e6000172f0, model64: 0x172f0000172fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae7, match64: 0x00000000, model64: 0x172fa00017307},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1731000017314},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aea, match64: 0x00000000, model64: 0x103c2000103c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aeb, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aec, match64: 0x00000000, model64: 0x1731b00017320},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aed, match64: 0x00000000, model64: 0x1731000017314},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x173240001732e, model64: 0x1732e0001732f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1733600017338},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af1, match64: 0x00000000, model64: 0x1733e0001734b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af2, match64: 0x00000000, model64: 0x1734b00017352},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af6, match64: 0x00000000, model64: 0x1735f0001736c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afa, match64: 0x00000000, model64: 0x173710001737b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afd, match64: 0x00000000, model64: 0x1738300017397},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afe, match64: 0x00000000, model64: 0x173970001739c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x173a2000173ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b01, match64: 0x00000000, model64: 0x173b3000173be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x173be000173c5, model64: 0x173c5000173d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x173d2000173d9, model64: 0x173d9000173ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x173ed000173f6, model64: 0x173f600017407},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x174070001740d, model64: 0x1740d00017417},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b02, match64: 0x00000000, model64: 0x1741700017421},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b04, match64: 0x00000000, model64: 0x1742700017432},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b05, match64: 0x00000000, model64: 0x174320001743a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1743a00017442, model64: 0x1743a00017442},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1744200017448, model64: 0x1744200017448},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1744800017451, model64: 0x1744800017451},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x174510001745a, model64: 0x164b0000164d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1745a00017460, model64: 0x4df900004dfb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1746000017467, model64: 0xb0870000b089},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b06, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b07, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b08, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1746e00017479},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0c, match64: 0x00000000, model64: 0x1747f0001748a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0d, match64: 0x00000000, model64: 0x1748a00017499},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0e, match64: 0x00000000, model64: 0x17499000174a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0f, match64: 0x00000000, model64: 0x174a3000174b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b10, match64: 0x00000000, model64: 0x174b6000174bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b11, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1b12, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1b13, match64: 0x00000000, model64: 0x174bc000174c3},
		modelTuple{type64: 0x20000000206, matchRI: 0x1b14, match64: 0x00000000, model64: 0x174c3000174d1},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1b16, match64: 0x00000000, model64: 0x174d6000174dd},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1b17, match64: 0x00000000, model64: 0x174dd000174ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b18, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b19, match64: 0x00000000, model64: 0x109770001097a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1a, match64: 0x00000000, model64: 0x174fc00017501},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1b, match64: 0x00000000, model64: 0x1750100017509},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1c, match64: 0x00000000, model64: 0x1750900017513},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1d, match64: 0x00000000, model64: 0x175130001751b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1e, match64: 0x00000000, model64: 0x1751b00017524},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1f, match64: 0x00000000, model64: 0x136500001369},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b20, match64: 0x00000000, model64: 0x175240001752c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b21, match64: 0x00000000, model64: 0x1752c00017538},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b22, match64: 0x00000000, model64: 0x175380001753f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b23, match64: 0x00000000, model64: 0x1753f00017546},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b24, match64: 0x00000000, model64: 0x175460001754e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b25, match64: 0x00000000, model64: 0x1754e00017557},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b26, match64: 0x00000000, model64: 0x2c9000002ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b27, match64: 0x00000000, model64: 0x1755700017562},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b28, match64: 0x00000000, model64: 0x175620001756e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b29, match64: 0x00000000, model64: 0x1756e0001757d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2a, match64: 0x00000000, model64: 0x1757d00017588},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2b, match64: 0x00000000, model64: 0x1758800017594},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2c, match64: 0x00000000, model64: 0x1759400017599},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2d, match64: 0x00000000, model64: 0x17599000175a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2e, match64: 0x00000000, model64: 0x175a1000175af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2f, match64: 0x00000000, model64: 0x175af000175b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175b5000175c2, model64: 0x175b5000175c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b30, match64: 0x00000000, model64: 0x175c2000175cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b31, match64: 0x00000000, model64: 0x175cc000175d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b32, match64: 0x00000000, model64: 0x175d6000175dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b33, match64: 0x00000000, model64: 0x175dc000175e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b34, match64: 0x00000000, model64: 0x175e2000175e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b35, match64: 0x00000000, model64: 0x175e7000175ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b36, match64: 0x00000000, model64: 0xc6d60000c6da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b37, match64: 0x00000000, model64: 0x103a9000103ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b38, match64: 0x00000000, model64: 0x175ed000175f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b39, match64: 0x00000000, model64: 0x175f6000175fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3a, match64: 0x00000000, model64: 0x175fe00017603},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3b, match64: 0x00000000, model64: 0x1760300017611},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3c, match64: 0x00000000, model64: 0x5ec200005eca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3d, match64: 0x00000000, model64: 0x5ee400005eea},
		modelTuple{type64: 0x20000000206, matchRI: 0x1b3e, match64: 0x00000000, model64: 0x176110001761d},
		modelTuple{type64: 0x20000000206, matchRI: 0x1b3f, match64: 0x00000000, model64: 0x1761d00017628},
		modelTuple{type64: 0x20000000206, matchRI: 0x1b40, match64: 0x00000000, model64: 0x1762800017633},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b41, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b42, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1763800017643, model64: 0x1764300017652},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1765200017660, model64: 0x1766000017667},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1766d00017674, model64: 0x1767400017680},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1768000017684, model64: 0x1768400017690},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1769000017696, model64: 0x176960001769d},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1769d000176ac, model64: 0x176ac000176b8},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x176b8000176c8, model64: 0x176c8000176d5},
		modelTuple{type64: 0x20000000206, matchRI: 0x1b45, match64: 0x00000000, model64: 0x176d5000176dc},
		modelTuple{type64: 0x20000000206, matchRI: 0x1b46, match64: 0x00000000, model64: 0x176d5000176dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176dc000176e8, model64: 0x176e8000176fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176fa00017701, model64: 0x177010001770a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1770a00017711, model64: 0x177110001771b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1771b00017722, model64: 0x177220001772c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1772c00017733, model64: 0x177330001773d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1773d00017744, model64: 0x177440001774e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b47, match64: 0x00000000, model64: 0x1774e00017759},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b48, match64: 0x00000000, model64: 0x1775900017762},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b49, match64: 0x00000000, model64: 0xdaad0000dab5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1776200017774, model64: 0x1776200017774},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4a, match64: 0x00000000, model64: 0x1777400017781},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4b, match64: 0x00000000, model64: 0x177810001778a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1778a0001779a, model64: 0x1779a000177a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177a3000177b2, model64: 0x177b2000177ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x9f700000a04, matchRI: -0x0001, match64: 0x177c7000177d5, model64: 0x177d5000177da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1b50, match64: 0x00000000, model64: 0x177da000177df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b51, match64: 0x00000000, model64: 0x177df000177e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b52, match64: 0x00000000, model64: 0x177e7000177f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b53, match64: 0x00000000, model64: 0x177f5000177fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b54, match64: 0x00000000, model64: 0x177fe00017807},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b55, match64: 0x00000000, model64: 0x1780700017812},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b56, match64: 0x00000000, model64: 0x178120001781d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b57, match64: 0x00000000, model64: 0x1781d00017826},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b58, match64: 0x00000000, model64: 0x178260001782e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b59, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5a, match64: 0x00000000, model64: 0x1782e0001783d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5b, match64: 0x00000000, model64: 0x1783d0001784f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5c, match64: 0x00000000, model64: 0x1784f00017860},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1b5e, match64: 0x00000000, model64: 0x178690001786d},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1b5f, match64: 0x00000000, model64: 0x1786d00017874},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1b60, match64: 0x00000000, model64: 0x1787400017880},
		modelTuple{type64: 0x20000000206, matchRI: 0x1b61, match64: 0x00000000, model64: 0x178800001788a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b62, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b63, match64: 0x00000000, model64: 0x1788a000178a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b64, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x178b0000178ba, model64: 0x178ba000178bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x178bd000178c8, model64: 0x178c8000178cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x178cb000178d6, model64: 0x178d6000178d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x178d9000178e4, model64: 0x178e4000178e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x178e7000178f2, model64: 0x178f2000178f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x178f5000178ff, model64: 0x178ff00017902},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b66, match64: 0x00000000, model64: 0x1790200017905},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b68, match64: 0x00000000, model64: 0x1790f00017916},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6a, match64: 0x00000000, model64: 0x1791b00017921},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6b, match64: 0x00000000, model64: 0x37d3000037d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6d, match64: 0x00000000, model64: 0x179260001792b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1793700017946, model64: 0x179460001794a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1794a00017951, model64: 0x1794a00017951},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b70, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b71, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b72, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b74, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b75, match64: 0x00000000, model64: 0x37e5000037ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b77, match64: 0x00000000, model64: 0x179640001796e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b78, match64: 0x00000000, model64: 0x1796e00017977},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b79, match64: 0x00000000, model64: 0x179770001797f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7a, match64: 0x00000000, model64: 0x1797f00017986},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7b, match64: 0x00000000, model64: 0x179860001798c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7c, match64: 0x00000000, model64: 0x1798c00017993},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7e, match64: 0x00000000, model64: 0x17993000179a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7f, match64: 0x00000000, model64: 0x14df700014dfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b80, match64: 0x00000000, model64: 0x179a4000179ae},
		modelTuple{type64: 0x28400000286, matchRI: 0x1b81, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b83, match64: 0x00000000, model64: 0x179b2000179b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b84, match64: 0x00000000, model64: 0x179b6000179bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b85, match64: 0x00000000, model64: 0x179bc000179c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b86, match64: 0x00000000, model64: 0x179c2000179cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b87, match64: 0x00000000, model64: 0x179cc000179d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b88, match64: 0x00000000, model64: 0x179d5000179dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b89, match64: 0x00000000, model64: 0x179dc000179e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x179e2000179e8, model64: 0x179e8000179f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x179f5000179fb, model64: 0x179fb00017a06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8a, match64: 0x00000000, model64: 0x17a0600017a0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8b, match64: 0x00000000, model64: 0x17a0f00017a17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8c, match64: 0x00000000, model64: 0x17a1700017a22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8d, match64: 0x00000000, model64: 0x17a2200017a2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8e, match64: 0x00000000, model64: 0x17a2a00017a34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8f, match64: 0x00000000, model64: 0x17a3400017a40},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b90, match64: 0x00000000, model64: 0x17a4000017a4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b91, match64: 0x00000000, model64: 0x17a4a00017a59},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b92, match64: 0x00000000, model64: 0x17a5900017a60},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b93, match64: 0x00000000, model64: 0x17a6000017a68},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b94, match64: 0x00000000, model64: 0x17a6800017a6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17a6f00017a75, model64: 0x17a7500017a7d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17a7d00017a83, model64: 0x17a8300017a8e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17a8e00017a94, model64: 0x17a9400017a9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b95, match64: 0x00000000, model64: 0x17a9b00017aa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b96, match64: 0x00000000, model64: 0x17aa500017aac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b97, match64: 0x00000000, model64: 0x17aac00017ab4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b98, match64: 0x00000000, model64: 0x17ab400017abb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b99, match64: 0x00000000, model64: 0x17abb00017ac3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9a, match64: 0x00000000, model64: 0x17ac300017ace},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9b, match64: 0x00000000, model64: 0x17ace00017ad4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9c, match64: 0x00000000, model64: 0x17ad400017ade},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9d, match64: 0x00000000, model64: 0x17ade00017ae4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9e, match64: 0x00000000, model64: 0x17ae400017aee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9f, match64: 0x00000000, model64: 0xaf370000af3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba0, match64: 0x00000000, model64: 0x17aee00017af1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba1, match64: 0x00000000, model64: 0x17af100017af7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba2, match64: 0x00000000, model64: 0x17af700017afb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba3, match64: 0x00000000, model64: 0x17afb00017b02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba4, match64: 0x00000000, model64: 0x17b0200017b0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba5, match64: 0x00000000, model64: 0x17b0c00017b0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba6, match64: 0x00000000, model64: 0x17b0f00017b12},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba7, match64: 0x00000000, model64: 0x17b1200017b15},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba8, match64: 0x00000000, model64: 0x17b1500017b1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba9, match64: 0x00000000, model64: 0x17b1a00017b22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1baa, match64: 0x00000000, model64: 0x17b2200017b28},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bab, match64: 0x00000000, model64: 0x17b2800017b2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bac, match64: 0x00000000, model64: 0x17b2d00017b32},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bad, match64: 0x00000000, model64: 0x17b1200017b15},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bae, match64: 0x00000000, model64: 0x17b3200017b42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1baf, match64: 0x00000000, model64: 0x788e00007891},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17b4200017b48, model64: 0x17b4800017b4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17b4d00017b54, model64: 0x17b5400017b59},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb0, match64: 0x00000000, model64: 0x15ed000015ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb1, match64: 0x00000000, model64: 0x17b5900017b5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb2, match64: 0x00000000, model64: 0xf4840000f487},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17b5f00017b65, model64: 0x17b6500017b6c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17b6c00017b71, model64: 0x17b7100017b77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb3, match64: 0x00000000, model64: 0x9bfc00009bfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb4, match64: 0x00000000, model64: 0x17b7700017b7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb5, match64: 0x00000000, model64: 0x17b7c00017b82},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb6, match64: 0x00000000, model64: 0x17b8200017b84},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb7, match64: 0x00000000, model64: 0x17b8400017b87},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb8, match64: 0x00000000, model64: 0x17b8700017b8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb9, match64: 0x00000000, model64: 0x17b8a00017b93},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bba, match64: 0x00000000, model64: 0x17b9300017b96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbb, match64: 0x00000000, model64: 0x148000001482},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbc, match64: 0x00000000, model64: 0x17b9600017b99},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbd, match64: 0x00000000, model64: 0x17b9900017ba0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbe, match64: 0x00000000, model64: 0x17ba000017ba4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbf, match64: 0x00000000, model64: 0x17ba400017ba7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc0, match64: 0x00000000, model64: 0x17ba700017bae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc1, match64: 0x00000000, model64: 0x17bae00017bb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc2, match64: 0x00000000, model64: 0x17bb500017bbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc3, match64: 0x00000000, model64: 0x17bbc00017bbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc4, match64: 0x00000000, model64: 0x17bbf00017bc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc5, match64: 0x00000000, model64: 0x17bc200017bc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc6, match64: 0x00000000, model64: 0xb2750000b27c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc7, match64: 0x00000000, model64: 0x17bc800017bca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc8, match64: 0x00000000, model64: 0x17bca00017bd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc9, match64: 0x00000000, model64: 0x17bd100017bd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bca, match64: 0x00000000, model64: 0x17bd800017bdb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcb, match64: 0x00000000, model64: 0xb9810000b983},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcc, match64: 0x00000000, model64: 0x17bdb00017be2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcd, match64: 0x00000000, model64: 0x17be200017be4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bce, match64: 0x00000000, model64: 0x17be400017bec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcf, match64: 0x00000000, model64: 0x17bec00017bf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd0, match64: 0x00000000, model64: 0x17bf200017bf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd1, match64: 0x00000000, model64: 0x17bf800017c00},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd2, match64: 0x00000000, model64: 0x17c0000017c03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd3, match64: 0x00000000, model64: 0x17c0300017c09},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd4, match64: 0x00000000, model64: 0x17c0900017c14},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd5, match64: 0x00000000, model64: 0x17c1400017c17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd6, match64: 0x00000000, model64: 0x17c1700017c1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd7, match64: 0x00000000, model64: 0x17c1f00017c23},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd8, match64: 0x00000000, model64: 0x17c2300017c29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd9, match64: 0x00000000, model64: 0x17c2900017c2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bda, match64: 0x00000000, model64: 0x17c2c00017c30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdb, match64: 0x00000000, model64: 0x17c3000017c33},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdc, match64: 0x00000000, model64: 0x17c3000017c33},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdd, match64: 0x00000000, model64: 0x17c3300017c36},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bde, match64: 0x00000000, model64: 0x17c3600017c3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdf, match64: 0x00000000, model64: 0x17c3d00017c40},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be0, match64: 0x00000000, model64: 0x17c4000017c47},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be1, match64: 0x00000000, model64: 0x17c4700017c4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be2, match64: 0x00000000, model64: 0x17c4a00017c4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be3, match64: 0x00000000, model64: 0x11d7100011d77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be4, match64: 0x00000000, model64: 0x17c4e00017c56},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be5, match64: 0x00000000, model64: 0x11d7e00011d85},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be6, match64: 0x00000000, model64: 0x17c5600017c62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be7, match64: 0x00000000, model64: 0x17c6200017c65},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be8, match64: 0x00000000, model64: 0x17c6500017c69},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be9, match64: 0x00000000, model64: 0x17c6900017c70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bea, match64: 0x00000000, model64: 0x17c7000017c7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1beb, match64: 0x00000000, model64: 0x17c7c00017c83},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bec, match64: 0x00000000, model64: 0x17c8300017c8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bed, match64: 0x00000000, model64: 0x17c8b00017c8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bee, match64: 0x00000000, model64: 0x17c8e00017c94},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bef, match64: 0x00000000, model64: 0x17c9400017c9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf0, match64: 0x00000000, model64: 0x17c9c00017ca4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf1, match64: 0x00000000, model64: 0x17ca400017ca7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf2, match64: 0x00000000, model64: 0x17ca700017caa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf3, match64: 0x00000000, model64: 0x17caa00017cad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf4, match64: 0x00000000, model64: 0x17cad00017cb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17cb000017cb6, model64: 0x17cb600017cbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf5, match64: 0x00000000, model64: 0x17cbd00017cc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf6, match64: 0x00000000, model64: 0x17cc100017cc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf7, match64: 0x00000000, model64: 0x17cc500017cc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf8, match64: 0x00000000, model64: 0x17cc800017ccc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf9, match64: 0x00000000, model64: 0x17ccc00017ccf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfa, match64: 0x00000000, model64: 0x17ccf00017cd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfb, match64: 0x00000000, model64: 0x17cd200017cd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfc, match64: 0x00000000, model64: 0x17cd500017cdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfd, match64: 0x00000000, model64: 0x17cdf00017ce3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfe, match64: 0x00000000, model64: 0x17ce300017ce7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bff, match64: 0x00000000, model64: 0x17ce700017ceb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c00, match64: 0x00000000, model64: 0x17ceb00017cf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c01, match64: 0x00000000, model64: 0x17cf600017cfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c02, match64: 0x00000000, model64: 0x17cfa00017cfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c03, match64: 0x00000000, model64: 0x17cd500017cdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c04, match64: 0x00000000, model64: 0x17cfe00017d04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d0400017d0a, model64: 0x17d0a00017d11},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c05, match64: 0x00000000, model64: 0x17d1100017d15},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c06, match64: 0x00000000, model64: 0x17d1500017d19},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c07, match64: 0x00000000, model64: 0x17d1900017d1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c08, match64: 0x00000000, model64: 0x17bc200017bc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c09, match64: 0x00000000, model64: 0x17d1c00017d1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0a, match64: 0x00000000, model64: 0x17d1e00017d29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0b, match64: 0x00000000, model64: 0x17d2900017d2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0c, match64: 0x00000000, model64: 0x17d2c00017d36},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0d, match64: 0x00000000, model64: 0x17d3600017d3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0e, match64: 0x00000000, model64: 0x17d3a00017d3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0f, match64: 0x00000000, model64: 0x17d3d00017d41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d4100017d47, model64: 0x17d4700017d4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c10, match64: 0x00000000, model64: 0x17d4a00017d4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c11, match64: 0x00000000, model64: 0x17d4d00017d51},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c12, match64: 0x00000000, model64: 0x17d5100017d54},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c13, match64: 0x00000000, model64: 0xeed30000eed6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d5400017d5b, model64: 0x17d5b00017d5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c14, match64: 0x00000000, model64: 0x17d5f00017d62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c15, match64: 0x00000000, model64: 0x17d6200017d6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c16, match64: 0x00000000, model64: 0x17d6c00017d70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c17, match64: 0x00000000, model64: 0x17d3d00017d41},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c18, match64: 0x00000000, model64: 0x17d7000017d74},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c19, match64: 0x00000000, model64: 0x17d7400017d77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1a, match64: 0x00000000, model64: 0x17d7700017d7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1b, match64: 0x00000000, model64: 0x17d7b00017d7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1c, match64: 0x00000000, model64: 0x17d7e00017d82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d8200017d88, model64: 0x17d8800017d8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1d, match64: 0x00000000, model64: 0x17d8f00017d93},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1e, match64: 0x00000000, model64: 0x17d9300017d97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d9700017d9d, model64: 0x17d9d00017da8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17da800017dae, model64: 0x17dae00017db2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1f, match64: 0x00000000, model64: 0x17db200017db5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c20, match64: 0x00000000, model64: 0x17db500017db8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c21, match64: 0x00000000, model64: 0x17db800017dbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c22, match64: 0x00000000, model64: 0x17dbc00017dc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c23, match64: 0x00000000, model64: 0x17dc000017dc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c24, match64: 0x00000000, model64: 0x17dc300017dc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c25, match64: 0x00000000, model64: 0x17dc700017dca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c26, match64: 0x00000000, model64: 0x17dca00017dd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c27, match64: 0x00000000, model64: 0x17dd400017dd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c28, match64: 0x00000000, model64: 0x17dd800017dde},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17dde00017de4, model64: 0x17de400017de8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c29, match64: 0x00000000, model64: 0x17de800017deb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2a, match64: 0x00000000, model64: 0x17deb00017dee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2b, match64: 0x00000000, model64: 0x17dee00017df2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2c, match64: 0x00000000, model64: 0x17df200017df6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2d, match64: 0x00000000, model64: 0x17df600017df9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2e, match64: 0x00000000, model64: 0x17df900017e00},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2f, match64: 0x00000000, model64: 0x17e0000017e03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c30, match64: 0x00000000, model64: 0x17e0300017e06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c31, match64: 0x00000000, model64: 0x17e0600017e09},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c32, match64: 0x00000000, model64: 0x17e0900017e0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c33, match64: 0x00000000, model64: 0x17e0d00017e10},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c34, match64: 0x00000000, model64: 0x17e1000017e14},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c35, match64: 0x00000000, model64: 0x17e1400017e1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c36, match64: 0x00000000, model64: 0x17e0900017e0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c37, match64: 0x00000000, model64: 0x17e1f00017e22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c38, match64: 0x00000000, model64: 0x17e2200017e26},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c39, match64: 0x00000000, model64: 0x17e2600017e29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3a, match64: 0x00000000, model64: 0x17e2900017e2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3b, match64: 0x00000000, model64: 0x17e2c00017e2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3c, match64: 0x00000000, model64: 0x17e2e00017e34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3d, match64: 0x00000000, model64: 0x17e3400017e37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3e, match64: 0x00000000, model64: 0x17e3700017e3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3f, match64: 0x00000000, model64: 0xb97b0000b97d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c40, match64: 0x00000000, model64: 0x17e3a00017e3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c41, match64: 0x00000000, model64: 0xc1450000c147},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c42, match64: 0x00000000, model64: 0x17e3d00017e40},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c43, match64: 0x00000000, model64: 0x17e4000017e4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c44, match64: 0x00000000, model64: 0xb9770000b979},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c45, match64: 0x00000000, model64: 0x17e4a00017e50},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c46, match64: 0x00000000, model64: 0x17e5000017e54},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c47, match64: 0x00000000, model64: 0x17e5400017e5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c48, match64: 0x00000000, model64: 0x17e5a00017e62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c49, match64: 0x00000000, model64: 0x17e6200017e65},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4a, match64: 0x00000000, model64: 0x42d9000042dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4b, match64: 0x00000000, model64: 0x17c0300017c09},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4c, match64: 0x00000000, model64: 0x17e6500017e69},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4d, match64: 0x00000000, model64: 0x376a0000376d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4e, match64: 0x00000000, model64: 0x17e6900017e73},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4f, match64: 0x00000000, model64: 0x17e7300017e7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c50, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c51, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17e8100017e87, model64: 0x17e8100017e87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17e8700017e8e, model64: 0x17e8700017e8e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17e8e00017e95, model64: 0x17e8e00017e95},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c53, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x17e9c00017eab, model64: 0x17e9c00017eab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c55, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17eb300017eba, model64: 0x17eba00017ec4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ec400017ec9, model64: 0x17ec900017ed4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ed400017ed9, model64: 0x17ed900017ee6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ee600017eed, model64: 0x17eed00017efa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17efa00017f01, model64: 0x17f0100017f0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c57, match64: 0x00000000, model64: 0x17f0d00017f1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c58, match64: 0x00000000, model64: 0x17f1a00017f22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c59, match64: 0x00000000, model64: 0x17f2200017f2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f2a00017f31, model64: 0x17f3100017f3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f3e00017f44, model64: 0x17f4400017f4c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f4c00017f53, model64: 0x17f5300017f5b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f5b00017f62, model64: 0x17f6200017f6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f6a00017f71, model64: 0x17f7100017f7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f7a00017f81, model64: 0x17f8100017f8e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f8e00017f9b, model64: 0x17f9b00017fa8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17fa800017faf, model64: 0x17faf00017fbc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17fbc00017fc3, model64: 0x17fc300017fcb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17fcb00017fd2, model64: 0x17fd200017fdb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17fdb00017fe2, model64: 0x17fe200017ff2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c5a, match64: 0x00000000, model64: 0x17eba00017ec4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c5b, match64: 0x00000000, model64: 0xfc0d0000fc14},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c5c, match64: 0x00000000, model64: 0x17ff200017ffe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c5d, match64: 0x00000000, model64: 0x17ffe00018006},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c5e, match64: 0x00000000, model64: 0x1800600018013},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c5f, match64: 0x00000000, model64: 0x1801300018020},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1802000018031, model64: 0x180310001803b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1803b00018041, model64: 0x180410001804e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1804e00018054, model64: 0x1805400018061},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1806100018068, model64: 0x1806800018075},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x180750001807c, model64: 0x1807c00018087},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x180870001808e, model64: 0x1808e00018099},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x18099000180a1, model64: 0x180a1000180ab},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x180ab000180b3, model64: 0x180b3000180bf},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x180bf000180c7, model64: 0x180c7000180d2},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c60, match64: 0x00000000, model64: 0x180d2000180de},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c61, match64: 0x00000000, model64: 0x180de000180ea},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c62, match64: 0x00000000, model64: 0x180ea000180f5},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c63, match64: 0x00000000, model64: 0x180f500018100},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c64, match64: 0x00000000, model64: 0x181000001810c},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c65, match64: 0x00000000, model64: 0x1810c0001811a},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c66, match64: 0x00000000, model64: 0x1811a00018129},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c67, match64: 0x00000000, model64: 0x1812900018138},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c68, match64: 0x00000000, model64: 0x1813800018148},
		modelTuple{type64: 0x28400000286, matchRI: 0x1c69, match64: 0x00000000, model64: 0xa5b80000a5ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c6a, match64: 0x00000000, model64: 0x181480001814e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c6b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c6c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c6e, match64: 0x00000000, model64: 0x181540001815a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c6f, match64: 0x00000000, model64: 0x1815a00018160},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c70, match64: 0x00000000, model64: 0x1816000018165},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c71, match64: 0x00000000, model64: 0x181650001816c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c72, match64: 0x00000000, model64: 0x1816c00018175},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c73, match64: 0x00000000, model64: 0x181750001817b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c74, match64: 0x00000000, model64: 0x1817b00018181},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c75, match64: 0x00000000, model64: 0x1818100018188},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c76, match64: 0x00000000, model64: 0x181880001818f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c77, match64: 0x00000000, model64: 0x1818f00018196},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c78, match64: 0x00000000, model64: 0x181960001819c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c79, match64: 0x00000000, model64: 0x1819c000181a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7a, match64: 0x00000000, model64: 0x181a4000181aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7b, match64: 0x00000000, model64: 0x181aa000181b2},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x181b2000181bb, model64: 0x181bb000181c4},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c7c, match64: 0x00000000, model64: 0x181c4000181cb},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c7d, match64: 0x00000000, model64: 0x181cb000181d4},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c7e, match64: 0x00000000, model64: 0x181d4000181dd},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c7f, match64: 0x00000000, model64: 0x181dd000181e5},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c80, match64: 0x00000000, model64: 0x181e5000181ee},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x181ee000181f5, model64: 0x181f5000181fc},
		modelTuple{type64: 0x20000000206, matchRI: 0x1c81, match64: 0x00000000, model64: 0x616a00006171},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x181fc00018203, model64: 0x182030001820a},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1820a00018213, model64: 0x182130001821c},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1821c00018223, model64: 0x182230001822a},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1822a00018231, model64: 0x1823100018238},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c83, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c84, match64: 0x00000000, model64: 0x1823e00018245},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c85, match64: 0x00000000, model64: 0x182450001824d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c86, match64: 0x00000000, model64: 0x1824d00018255},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c87, match64: 0x00000000, model64: 0x182550001825c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1826800018270, model64: 0x1826800018270},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x182760001827b, model64: 0x1827b00018281},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c90, match64: 0x00000000, model64: 0x182940001829a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c91, match64: 0x00000000, model64: 0xc8940000c899},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c92, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c94, match64: 0x00000000, model64: 0x182a0000182ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c95, match64: 0x00000000, model64: 0x182ab000182b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c96, match64: 0x00000000, model64: 0x182b1000182be},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c97, match64: 0x00000000, model64: 0x182be000182c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c98, match64: 0x00000000, model64: 0x182c3000182cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c99, match64: 0x00000000, model64: 0x182cb000182d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9a, match64: 0x00000000, model64: 0x182d1000182d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9c, match64: 0x00000000, model64: 0x182dd000182e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9d, match64: 0x00000000, model64: 0x182e5000182ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9e, match64: 0x00000000, model64: 0x182ef000182f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9f, match64: 0x00000000, model64: 0x182f800018302},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca0, match64: 0x00000000, model64: 0x183020001830f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca1, match64: 0x00000000, model64: 0x9a3a00009a3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca5, match64: 0x00000000, model64: 0x1830f00018318},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca6, match64: 0x00000000, model64: 0x1831800018321},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x183210001832a, model64: 0x1832a00018333},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1833900018348},
		modelTuple{type64: 0x20000000206, matchRI: 0x1caa, match64: 0x00000000, model64: 0x1834e0001835d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1835d0001836e, model64: 0x1836e0001837f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cab, match64: 0x00000000, model64: 0x1837f0001838b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cac, match64: 0x00000000, model64: 0x1838b00018398},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cad, match64: 0x00000000, model64: 0x18398000183a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cae, match64: 0x00000000, model64: 0x183a6000183ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1caf, match64: 0x00000000, model64: 0xcaf00000caf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x183b4000183bc, model64: 0x183bc000183c4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x183da000183e6, model64: 0x183e6000183f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1cb6, match64: 0x00000000, model64: 0x184040001840b},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1cb7, match64: 0x00000000, model64: 0x1840b00018412},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1cb8, match64: 0x00000000, model64: 0x1841200018417},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1cb9, match64: 0x00000000, model64: 0x1841700018421},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cba, match64: 0x00000000, model64: 0x1842100018428},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbb, match64: 0x00000000, model64: 0x1842800018433},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbc, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbe, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc2, match64: 0x00000000, model64: 0x184420001844b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc3, match64: 0x00000000, model64: 0x1844b00018454},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc4, match64: 0x00000000, model64: 0x184540001845d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc5, match64: 0x00000000, model64: 0x1845d00018468},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc6, match64: 0x00000000, model64: 0x184680001846e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc7, match64: 0x00000000, model64: 0x1846e00018475},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc8, match64: 0x00000000, model64: 0x1847500018481},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc9, match64: 0x00000000, model64: 0x184810001848d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cca, match64: 0x00000000, model64: 0x1848d00018496},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccb, match64: 0x00000000, model64: 0x18496000184a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccc, match64: 0x00000000, model64: 0x184a0000184a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccd, match64: 0x00000000, model64: 0x184a4000184a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cce, match64: 0x00000000, model64: 0x184a9000184b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccf, match64: 0x00000000, model64: 0x184b1000184bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd0, match64: 0x00000000, model64: 0x184bd000184c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd1, match64: 0x00000000, model64: 0x184c5000184ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd2, match64: 0x00000000, model64: 0x184ca000184d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd3, match64: 0x00000000, model64: 0x431d00004324},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd4, match64: 0x00000000, model64: 0x184d4000184dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd5, match64: 0x00000000, model64: 0x184dc000184e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd6, match64: 0x00000000, model64: 0x184e4000184ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd7, match64: 0x00000000, model64: 0x184ec000184f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd8, match64: 0x00000000, model64: 0x184f5000184fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd9, match64: 0x00000000, model64: 0x184fb000184ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cda, match64: 0x00000000, model64: 0x184ff00018504},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdb, match64: 0x00000000, model64: 0x1850400018509},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdc, match64: 0x00000000, model64: 0x185090001850e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdd, match64: 0x00000000, model64: 0x1850e00018513},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x185130001851c, model64: 0x1851c00018525},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x185250001852b, model64: 0x1852b00018532},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x185320001853c, model64: 0x1853c00018543},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cde, match64: 0x00000000, model64: 0x185430001854a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdf, match64: 0x00000000, model64: 0x1854a0001854f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce0, match64: 0x00000000, model64: 0x1854f00018556},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce1, match64: 0x00000000, model64: 0x1855600018559},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce2, match64: 0x00000000, model64: 0x185590001855f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce3, match64: 0x00000000, model64: 0x1855f00018563},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1856300018569, model64: 0x1856900018570},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce4, match64: 0x00000000, model64: 0x179460001794a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce5, match64: 0x00000000, model64: 0x15e3f00015e45},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce6, match64: 0x00000000, model64: 0x1857000018576},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce7, match64: 0x00000000, model64: 0x185760001857b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce8, match64: 0x00000000, model64: 0x1857b00018586},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce9, match64: 0x00000000, model64: 0x1858600018592},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cea, match64: 0x00000000, model64: 0x185920001859a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ceb, match64: 0x00000000, model64: 0x1859a0001859f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cec, match64: 0x00000000, model64: 0x1859f000185a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ced, match64: 0x00000000, model64: 0x185a4000185ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cee, match64: 0x00000000, model64: 0x185ac000185b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cef, match64: 0x00000000, model64: 0x185b2000185b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x185b9000185bf, model64: 0x185bf000185cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf0, match64: 0x00000000, model64: 0x185cb000185d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf1, match64: 0x00000000, model64: 0x185d7000185de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x185de000185e7, model64: 0x185e7000185f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x185f3000185fd, model64: 0x185fd00018604},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186040001860e, model64: 0x1860e00018615},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf2, match64: 0x00000000, model64: 0x15ebb00015ec0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf3, match64: 0x00000000, model64: 0x186150001861c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf4, match64: 0x00000000, model64: 0x1861c00018628},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf5, match64: 0x00000000, model64: 0x186280001862f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf6, match64: 0x00000000, model64: 0x1862f00018634},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf7, match64: 0x00000000, model64: 0x1863400018637},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf8, match64: 0x00000000, model64: 0x186370001863c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1863c00018642, model64: 0x1864200018649},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf9, match64: 0x00000000, model64: 0x1864900018651},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfa, match64: 0x00000000, model64: 0x186510001865c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfb, match64: 0x00000000, model64: 0x1865c00018664},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfc, match64: 0x00000000, model64: 0x186640001866b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfd, match64: 0x00000000, model64: 0x1866b0001866f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfe, match64: 0x00000000, model64: 0x1866f00018676},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cff, match64: 0x00000000, model64: 0x1867600018682},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d00, match64: 0x00000000, model64: 0x1868200018689},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d01, match64: 0x00000000, model64: 0x1868900018694},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d02, match64: 0x00000000, model64: 0x18694000186a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d03, match64: 0x00000000, model64: 0x186a0000186a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186a6000186ad, model64: 0x186ad000186b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d04, match64: 0x00000000, model64: 0x186b7000186c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d05, match64: 0x00000000, model64: 0x186c0000186cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d06, match64: 0x00000000, model64: 0x186cb000186d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d07, match64: 0x00000000, model64: 0x186d2000186dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186dc000186e1, model64: 0x186e1000186ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186ea000186f0, model64: 0x3dc400003dca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186f0000186f6, model64: 0x186f600018700},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1870000018706, model64: 0x187060001870e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1870e00018714, model64: 0x187140001871b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d08, match64: 0x00000000, model64: 0x1871b00018726},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x187260001872c, model64: 0x1872c00018732},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x187320001873c, model64: 0x1873c00018747},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d09, match64: 0x00000000, model64: 0xeed30000eed6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1874700018751, model64: 0xeed30000eed6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1875100018757, model64: 0x17d5f00017d62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0a, match64: 0x00000000, model64: 0x187570001875a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0b, match64: 0x00000000, model64: 0x1875a0001875d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1875d00018763, model64: 0x1876300018766},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0c, match64: 0x00000000, model64: 0x1876600018769},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x187690001876f, model64: 0x17deb00017dee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1876f00018775, model64: 0x1877500018778},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0d, match64: 0x00000000, model64: 0x3dd000003dd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0e, match64: 0x00000000, model64: 0x1877800018782},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0f, match64: 0x00000000, model64: 0x1878200018788},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d10, match64: 0x00000000, model64: 0x1878800018793},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x187930001879d, model64: 0x184420001844b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d11, match64: 0x00000000, model64: 0x1879d000187a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d12, match64: 0x00000000, model64: 0x187a1000187a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d13, match64: 0x00000000, model64: 0x187a7000187ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d14, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d16, match64: 0x00000000, model64: 0x187b5000187bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d17, match64: 0x00000000, model64: 0x3c6000003c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x187bc000187cc, model64: 0x187cc000187d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d18, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d19, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1a, match64: 0x00000000, model64: 0x187d3000187dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1b, match64: 0x00000000, model64: 0x187dd000187e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x187e4000187ed, model64: 0x39c000003a1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x187f2000187fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1d1f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d21, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1d22, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x9f700000a04, matchRI: 0x1d23, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d25, match64: 0x00000000, model64: 0x1880f00018816},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d26, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1d27, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1881e00018822},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1882900018831},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2a, match64: 0x00000000, model64: 0x188370001883f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1883f0001884d, model64: 0x1884d00018855},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2b, match64: 0x00000000, model64: 0x188550001885f},
		modelTuple{type64: 0x20000000206, matchRI: 0x1d2c, match64: 0x00000000, model64: 0x1885f00018867},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1886f00018876},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1887b00018880, model64: 0x1888000018887},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x188870001888c, model64: 0x1888c00018892},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18899000188a8, model64: 0x188a8000188af},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x188b7000188c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d32, match64: 0x00000000, model64: 0x188c9000188d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d33, match64: 0x00000000, model64: 0x188d2000188d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d34, match64: 0x00000000, model64: 0x4a9300004a98},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1d35, match64: 0x00000000, model64: 0x188d7000188df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d36, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x188e9000188f9, model64: 0x188f900018903},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x189030001890d, model64: 0x1890d00018918},
		modelTuple{type64: 0x20000000206, matchRI: 0x1d39, match64: 0x00000000, model64: 0x1891800018921},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1892100018930, model64: 0x1893000018939},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d3a, match64: 0x00000000, model64: 0x1893900018940},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d3b, match64: 0x00000000, model64: 0x17bbf00017bc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d3c, match64: 0x00000000, model64: 0x1894000018949},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1894900018957, model64: 0x1895700018965},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x189650001896c, model64: 0x1896c00018973},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d3d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d3f, match64: 0x00000000, model64: 0x1897900018980},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x189800001898a, model64: 0x1898a00018994},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x18994000189a3, model64: 0x189a3000189b2},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x189b2000189c3, model64: 0x189c3000189d4},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x189d4000189e0, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d42, match64: 0x00000000, model64: 0x17ca700017caa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d43, match64: 0x00000000, model64: 0x17ccc00017ccf},
		modelTuple{type64: 0x28400000286, matchRI: 0x1d44, match64: 0x00000000, model64: 0x189ea000189ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d46, match64: 0x00000000, model64: 0x189f700018a08},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d47, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d48, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d49, match64: 0x00000000, model64: 0x18a0800018a17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d4a, match64: 0x00000000, model64: 0x18a1700018a1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d4b, match64: 0x00000000, model64: 0x18a1f00018a30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d4c, match64: 0x00000000, model64: 0x18a3000018a3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d4e, match64: 0x00000000, model64: 0x18a4300018a4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18a4e00018a54, model64: 0x18a5400018a64},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d4f, match64: 0x00000000, model64: 0x18a6400018a71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d50, match64: 0x00000000, model64: 0x18a7100018a82},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d51, match64: 0x00000000, model64: 0x18a8200018a8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d52, match64: 0x00000000, model64: 0x18a8f00018aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d53, match64: 0x00000000, model64: 0x18aa000018ab0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d54, match64: 0x00000000, model64: 0x18ab000018ac4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d55, match64: 0x00000000, model64: 0x18ac400018ad5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d56, match64: 0x00000000, model64: 0x18ad500018ae2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d57, match64: 0x00000000, model64: 0x18ae200018aeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d58, match64: 0x00000000, model64: 0x18aeb00018af4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d59, match64: 0x00000000, model64: 0x18af400018afa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5a, match64: 0x00000000, model64: 0x18afa00018b05},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5b, match64: 0x00000000, model64: 0x18b0500018b0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5c, match64: 0x00000000, model64: 0x18b0d00018b18},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5d, match64: 0x00000000, model64: 0x18b1800018b1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5e, match64: 0x00000000, model64: 0x18b1f00018b26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b2600018b2e, model64: 0x18b2e00018b36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b3600018b50, model64: 0x18b5000018b6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b6b00018b75, model64: 0x18b7500018b80},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5f, match64: 0x00000000, model64: 0x18b8000018b87},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d60, match64: 0x00000000, model64: 0x18b8700018b8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d61, match64: 0x00000000, model64: 0x18b8c00018b95},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d62, match64: 0x00000000, model64: 0x18b9500018b9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d63, match64: 0x00000000, model64: 0x18b9a00018ba0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d64, match64: 0x00000000, model64: 0x18ba000018baa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d65, match64: 0x00000000, model64: 0x18baa00018bb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d66, match64: 0x00000000, model64: 0x18bb700018bc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d67, match64: 0x00000000, model64: 0x18bc500018bce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d68, match64: 0x00000000, model64: 0x18bce00018bdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d69, match64: 0x00000000, model64: 0x18bdc00018be2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6a, match64: 0x00000000, model64: 0x18be200018bef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6b, match64: 0x00000000, model64: 0x18bef00018bf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6c, match64: 0x00000000, model64: 0x18bf500018bfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6d, match64: 0x00000000, model64: 0x18bfb00018c05},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6e, match64: 0x00000000, model64: 0x18c0500018c0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6f, match64: 0x00000000, model64: 0x18c0b00018c18},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d70, match64: 0x00000000, model64: 0x18c1800018c28},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d71, match64: 0x00000000, model64: 0x18c2800018c32},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d72, match64: 0x00000000, model64: 0x18c3200018c3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d73, match64: 0x00000000, model64: 0x18c3d00018c46},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d74, match64: 0x00000000, model64: 0x18c4600018c4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d75, match64: 0x00000000, model64: 0x18c4c00018c4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d76, match64: 0x00000000, model64: 0x18c4e00018c51},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d77, match64: 0x00000000, model64: 0x18c5100018c5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d78, match64: 0x00000000, model64: 0x18c5a00018c6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d79, match64: 0x00000000, model64: 0x18c6f00018c76},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7a, match64: 0x00000000, model64: 0x18c7600018c7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7b, match64: 0x00000000, model64: 0x18c7f00018c8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7c, match64: 0x00000000, model64: 0x18c8a00018ca2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7d, match64: 0x00000000, model64: 0x18ca200018cac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7e, match64: 0x00000000, model64: 0x18cac00018cb6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18cb600018cc1, model64: 0x18cc100018cc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7f, match64: 0x00000000, model64: 0x18cc600018cca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d80, match64: 0x00000000, model64: 0x18cca00018cd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d81, match64: 0x00000000, model64: 0x18cd000018cd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d82, match64: 0x00000000, model64: 0x18cd500018cda},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d83, match64: 0x00000000, model64: 0x18cda00018ce2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d84, match64: 0x00000000, model64: 0x18ce200018ceb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d85, match64: 0x00000000, model64: 0x18ceb00018cf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d86, match64: 0x00000000, model64: 0x18cf100018cfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d87, match64: 0x00000000, model64: 0x18cfb00018d03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d88, match64: 0x00000000, model64: 0x18d0300018d0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d89, match64: 0x00000000, model64: 0x18d0e00018d17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8a, match64: 0x00000000, model64: 0x18d1700018d20},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8b, match64: 0x00000000, model64: 0x18d2000018d26},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8c, match64: 0x00000000, model64: 0x18d2600018d2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8d, match64: 0x00000000, model64: 0x18d2f00018d3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18d3b00018d47, model64: 0x18d3b00018d47},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8e, match64: 0x00000000, model64: 0x18d4700018d4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8f, match64: 0x00000000, model64: 0x18d4e00018d55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d90, match64: 0x00000000, model64: 0x18d5500018d60},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d91, match64: 0x00000000, model64: 0x18d6000018d68},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d92, match64: 0x00000000, model64: 0x18d6800018d70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d93, match64: 0x00000000, model64: 0x18d7000018d77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d94, match64: 0x00000000, model64: 0x18d7700018d82},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d95, match64: 0x00000000, model64: 0x18d8200018d8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d96, match64: 0x00000000, model64: 0x18d8b00018d92},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d97, match64: 0x00000000, model64: 0x18d9200018d9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d98, match64: 0x00000000, model64: 0x18d9f00018da7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d99, match64: 0x00000000, model64: 0x18da700018daf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9a, match64: 0x00000000, model64: 0x18daf00018db7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9b, match64: 0x00000000, model64: 0x18db700018dc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9c, match64: 0x00000000, model64: 0x18dc000018dc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9d, match64: 0x00000000, model64: 0x18dc800018dd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9e, match64: 0x00000000, model64: 0x18dd400018ddc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9f, match64: 0x00000000, model64: 0x18ddc00018deb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da0, match64: 0x00000000, model64: 0x18deb00018df9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da1, match64: 0x00000000, model64: 0x18df900018e0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da2, match64: 0x00000000, model64: 0x18e0e00018e1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da3, match64: 0x00000000, model64: 0x18e1b00018e38},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da4, match64: 0x00000000, model64: 0x18e3800018e52},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da5, match64: 0x00000000, model64: 0x18e5200018e5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da6, match64: 0x00000000, model64: 0x18e5f00018e6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da7, match64: 0x00000000, model64: 0x18e6b00018e74},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da8, match64: 0x00000000, model64: 0x18e7400018e84},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da9, match64: 0x00000000, model64: 0x18e8400018e91},
		modelTuple{type64: 0x2700000027, matchRI: 0x1daa, match64: 0x00000000, model64: 0x18e9100018ea0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dab, match64: 0x00000000, model64: 0x18ea000018ead},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dac, match64: 0x00000000, model64: 0x18ead00018eb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dad, match64: 0x00000000, model64: 0x18eb800018ec5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dae, match64: 0x00000000, model64: 0x18ec500018ece},
		modelTuple{type64: 0x2700000027, matchRI: 0x1daf, match64: 0x00000000, model64: 0x18ece00018ed3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db0, match64: 0x00000000, model64: 0x18ed300018ed7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db1, match64: 0x00000000, model64: 0x18ed700018edb},
		modelTuple{type64: 0x20000000206, matchRI: 0x1db2, match64: 0x00000000, model64: 0x18edb00018ee3},
		modelTuple{type64: 0x20000000206, matchRI: 0x1db3, match64: 0x00000000, model64: 0x18ee300018ef2},
		modelTuple{type64: 0x20000000206, matchRI: 0x1db4, match64: 0x00000000, model64: 0x18ef200018efe},
		modelTuple{type64: 0x20000000206, matchRI: 0x1db5, match64: 0x00000000, model64: 0x18efe00018f0b},
		modelTuple{type64: 0x20000000206, matchRI: 0x1db6, match64: 0x00000000, model64: 0x18f0b00018f13},
		modelTuple{type64: 0x20000000206, matchRI: 0x1db7, match64: 0x00000000, model64: 0x18f1300018f1b},
		modelTuple{type64: 0x20000000206, matchRI: 0x1db8, match64: 0x00000000, model64: 0x18f1b00018f23},
		modelTuple{type64: 0x20000000206, matchRI: 0x1db9, match64: 0x00000000, model64: 0x18f2300018f29},
		modelTuple{type64: 0x28400000286, matchRI: 0x1dba, match64: 0x00000000, model64: 0x18f2900018f35},
		modelTuple{type64: 0x28400000286, matchRI: 0x1dbb, match64: 0x00000000, model64: 0x18f3500018f3e},
		modelTuple{type64: 0x28400000286, matchRI: 0x1dbc, match64: 0x00000000, model64: 0x18f3e00018f47},
		modelTuple{type64: 0x28400000286, matchRI: 0x1dbd, match64: 0x00000000, model64: 0x18f4700018f4e},
		modelTuple{type64: 0x28400000286, matchRI: 0x1dbe, match64: 0x00000000, model64: 0x18f4e00018f55},
		modelTuple{type64: 0x28400000286, matchRI: 0x1dbf, match64: 0x00000000, model64: 0x18f5500018f5f},
		modelTuple{type64: 0x28400000286, matchRI: 0x1dc0, match64: 0x00000000, model64: 0x18f5f00018f6c},
		modelTuple{type64: 0x28400000286, matchRI: 0x1dc1, match64: 0x00000000, model64: 0x18f6c00018f73},
		modelTuple{type64: 0x28400000286, matchRI: 0x1dc2, match64: 0x00000000, model64: 0x18f7300018f7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc3, match64: 0x00000000, model64: 0x18f7a00018f85},
		modelTuple{type64: 0x28400000286, matchRI: 0x1dc4, match64: 0x00000000, model64: 0x18f8500018f8c},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dc5, match64: 0x00000000, model64: 0x18f8c00018f97},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dc6, match64: 0x00000000, model64: 0x18f9700018fa1},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dc7, match64: 0x00000000, model64: 0x18fa100018fb0},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dc8, match64: 0x00000000, model64: 0x18fb000018fbd},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dc9, match64: 0x00000000, model64: 0x18fbd00018fc9},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x18fc900018fdc, model64: 0x18fc900018fdc},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x18fdc00018fee, model64: 0x18fdc00018fee},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dca, match64: 0x00000000, model64: 0x18fee00018ffa},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dcb, match64: 0x00000000, model64: 0x18ffa00019008},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dcc, match64: 0x00000000, model64: 0x1900800019016},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dcd, match64: 0x00000000, model64: 0x1901600019026},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dce, match64: 0x00000000, model64: 0x1902600019035},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dcf, match64: 0x00000000, model64: 0x1903500019048},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dd0, match64: 0x00000000, model64: 0x1904800019058},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x190580001906a, model64: 0x190580001906a},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dd1, match64: 0x00000000, model64: 0x1906a00019077},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x1907700019080, model64: 0x190800001908e},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dd2, match64: 0x00000000, model64: 0x1900800019016},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dd3, match64: 0x00000000, model64: 0x1908e0001909e},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x1909e000190a7, model64: 0x190a7000190b8},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dd4, match64: 0x00000000, model64: 0x190b8000190c8},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dd5, match64: 0x00000000, model64: 0x190c8000190d9},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dd6, match64: 0x00000000, model64: 0x190d9000190ea},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dd7, match64: 0x00000000, model64: 0x190ea000190fe},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dd8, match64: 0x00000000, model64: 0x190fe00019110},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dd9, match64: 0x00000000, model64: 0x1911000019120},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dda, match64: 0x00000000, model64: 0x1912000019130},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x1913000019139, model64: 0x1913900019147},
		modelTuple{type64: 0x52100000528, matchRI: 0x1ddb, match64: 0x00000000, model64: 0x1914700019158},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x1915800019161, model64: 0x1913900019147},
		modelTuple{type64: 0x52100000528, matchRI: 0x1ddc, match64: 0x00000000, model64: 0x1916100019174},
		modelTuple{type64: 0x52100000528, matchRI: 0x1ddd, match64: 0x00000000, model64: 0x1917400019184},
		modelTuple{type64: 0x52100000528, matchRI: 0x1dde, match64: 0x00000000, model64: 0x1918400019191},
		modelTuple{type64: 0x52100000528, matchRI: 0x1ddf, match64: 0x00000000, model64: 0x19191000191a6},
		modelTuple{type64: 0x52100000528, matchRI: 0x1de0, match64: 0x00000000, model64: 0x191a6000191b7},
		modelTuple{type64: 0x52100000528, matchRI: 0x1de1, match64: 0x00000000, model64: 0x191b7000191c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de2, match64: 0x00000000, model64: 0x191c4000191cc},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x191cc000191d7, model64: 0x191d7000191e2},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x191e2000191f0, model64: 0x191e2000191f0},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x191f0000191ff, model64: 0x191f0000191ff},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x191ff00019209, model64: 0x191ff00019209},
		modelTuple{type64: 0x52100000528, matchRI: 0x1de3, match64: 0x00000000, model64: 0x1920900019213},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de4, match64: 0x00000000, model64: 0x192130001921a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de5, match64: 0x00000000, model64: 0x1921a00019225},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de6, match64: 0x00000000, model64: 0x192250001922e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de7, match64: 0x00000000, model64: 0x1922e00019233},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de8, match64: 0x00000000, model64: 0x1922e00019233},
		modelTuple{type64: 0x52100000528, matchRI: 0x1de9, match64: 0x00000000, model64: 0x730b0000730f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dea, match64: 0x00000000, model64: 0x1923300019238},
		modelTuple{type64: 0x2700000027, matchRI: 0x1deb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ded, match64: 0x00000000, model64: 0x1923c00019240},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192440001924d, model64: 0x1924d00019255},
		modelTuple{type64: 0x2700000027, matchRI: 0x1def, match64: 0x00000000, model64: 0x192550001925c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df0, match64: 0x00000000, model64: 0x1925c00019266},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df1, match64: 0x00000000, model64: 0x192660001926c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df6, match64: 0x00000000, model64: 0x1927000019280},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df7, match64: 0x00000000, model64: 0x192800001928a},
		modelTuple{type64: 0xbbce0000bbe3, matchRI: 0x1df8, match64: 0x00000000, model64: 0x1928a00019290},
		modelTuple{type64: 0x28400000286, matchRI: 0x1df9, match64: 0x00000000, model64: 0x1929000019297},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1dfa, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfd, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfe, match64: 0x00000000, model64: 0x192a4000192a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dff, match64: 0x00000000, model64: 0x192a6000192ad},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e05, match64: 0x00000000, model64: 0x3a7a00003a80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192ca000192d8, model64: 0x192d8000192e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192e1000192ec, model64: 0x192ec000192f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192f2000192fe, model64: 0x192fe00019305},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1930500019311, model64: 0x1931100019318},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e06, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1931e00019328},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1932e0001933d, model64: 0x1933d00019343},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e09, match64: 0x00000000, model64: 0x193430001934a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1934a00019355, model64: 0x193430001934a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1935500019360, model64: 0x1936000019367},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1936700019375, model64: 0x193750001937d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1937d00019386, model64: 0x193860001938f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1938f00019398, model64: 0x19398000193a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193a2000193ab, model64: 0x193ab000193b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0a, match64: 0x00000000, model64: 0x193b5000193bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193bd000193c6, model64: 0x193c6000193cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193cf000193d8, model64: 0x193d8000193e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193e1000193ed, model64: 0x193ed000193f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193f5000193fd, model64: 0x193fd00019408},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1940800019411, model64: 0x194110001941d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0b, match64: 0x00000000, model64: 0x1941d00019427},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1942700019430, model64: 0x1943000019439},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1943c00019441, model64: 0x1944100019449},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1944900019451, model64: 0x194510001945b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1945b00019461, model64: 0x194610001946b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1946f00019472, model64: 0x194720001947a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1947a00019484, model64: 0x194840001948c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1948c00019494, model64: 0x194940001949c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1949c000194a0, model64: 0x194a0000194a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x194a9000194b0, model64: 0x194b0000194b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x194b9000194bd, model64: 0x194b9000194bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0f, match64: 0x00000000, model64: 0x194bd000194c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e10, match64: 0x00000000, model64: 0x194c5000194cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e11, match64: 0x00000000, model64: 0x194cf000194dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e12, match64: 0x00000000, model64: 0x194c5000194cf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x194e3000194ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e15, match64: 0x00000000, model64: 0x11b5600011b5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e16, match64: 0x00000000, model64: 0x194ee000194fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e18, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e19, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1b, match64: 0x00000000, model64: 0x1950100019509},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1c, match64: 0x00000000, model64: 0x1950900019512},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1d, match64: 0x00000000, model64: 0x1951200019519},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1e, match64: 0x00000000, model64: 0x195190001951f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1f, match64: 0x00000000, model64: 0x1951f00019527},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e20, match64: 0x00000000, model64: 0x1952700019532},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e21, match64: 0x00000000, model64: 0x1953200019539},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e22, match64: 0x00000000, model64: 0x5390000053c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1954000019544},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x195490001954e, model64: 0x195490001954e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e25, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e26, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1955700019561, model64: 0x195610001956b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1956b00019578, model64: 0x1957800019585},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2a, match64: 0x00000000, model64: 0x26c00000271},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2c, match64: 0x00000000, model64: 0x1958d00019598},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2d, match64: 0x00000000, model64: 0x19598000195a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2e, match64: 0x00000000, model64: 0x195a1000195ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2f, match64: 0x00000000, model64: 0x195ae000195b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e30, match64: 0x00000000, model64: 0x195b8000195c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e31, match64: 0x00000000, model64: 0x195c0000195c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e32, match64: 0x00000000, model64: 0x195c8000195d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e33, match64: 0x00000000, model64: 0x195d1000195dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e34, match64: 0x00000000, model64: 0x195dd000195e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e35, match64: 0x00000000, model64: 0x2a2000002a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e36, match64: 0x00000000, model64: 0x195e7000195f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e37, match64: 0x00000000, model64: 0x195f0000195f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e38, match64: 0x00000000, model64: 0x195f800019608},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e39, match64: 0x00000000, model64: 0x1960800019617},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x196170001961c, model64: 0x1961c00019625},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3a, match64: 0x00000000, model64: 0x1962500019632},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3b, match64: 0x00000000, model64: 0x196320001963f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3c, match64: 0x00000000, model64: 0x1963f0001964d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3d, match64: 0x00000000, model64: 0x1964d00019653},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3e, match64: 0x00000000, model64: 0x196530001965d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3f, match64: 0x00000000, model64: 0x1965d0001966b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e40, match64: 0x00000000, model64: 0x1966b0001967a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e41, match64: 0x00000000, model64: 0x1967a00019684},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e42, match64: 0x00000000, model64: 0x196840001968b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e43, match64: 0x00000000, model64: 0x1968b00019698},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x196980001969e, model64: 0x1969e000196ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x196ac000196b3, model64: 0x196b3000196c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x196c0000196c6, model64: 0x196c6000196d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x196d4000196d9, model64: 0x196d9000196e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x196e4000196ea, model64: 0x196ea000196f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x196f4000196f9, model64: 0x196f900019700},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e44, match64: 0x00000000, model64: 0x1970000019708},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e45, match64: 0x00000000, model64: 0x197080001970f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e46, match64: 0x00000000, model64: 0x1970f00019719},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e47, match64: 0x00000000, model64: 0x1971900019720},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e48, match64: 0x00000000, model64: 0x1972000019728},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e49, match64: 0x00000000, model64: 0x197280001972b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4a, match64: 0x00000000, model64: 0x1972b0001972e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4b, match64: 0x00000000, model64: 0x1972e00019734},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4c, match64: 0x00000000, model64: 0x197340001973c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4d, match64: 0x00000000, model64: 0x1973c00019748},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4e, match64: 0x00000000, model64: 0x197480001974c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4f, match64: 0x00000000, model64: 0x1974c00019754},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e50, match64: 0x00000000, model64: 0x1afc00001b01},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e51, match64: 0x00000000, model64: 0x1503c00015044},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e52, match64: 0x00000000, model64: 0x197540001975e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e53, match64: 0x00000000, model64: 0x1975e00019765},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e54, match64: 0x00000000, model64: 0x17bc800017bca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e55, match64: 0x00000000, model64: 0x197650001976c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e56, match64: 0x00000000, model64: 0x1976c00019776},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e57, match64: 0x00000000, model64: 0x1977600019781},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e58, match64: 0x00000000, model64: 0x1978100019789},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e59, match64: 0x00000000, model64: 0x1978900019791},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5a, match64: 0x00000000, model64: 0x197910001979c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5b, match64: 0x00000000, model64: 0x1979c000197a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5c, match64: 0x00000000, model64: 0x197a5000197ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5d, match64: 0x00000000, model64: 0x197ae000197b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5e, match64: 0x00000000, model64: 0x197b4000197bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5f, match64: 0x00000000, model64: 0x197bd000197c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e60, match64: 0x00000000, model64: 0x197c7000197cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e61, match64: 0x00000000, model64: 0x197cd000197d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e62, match64: 0x00000000, model64: 0x197d2000197dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e63, match64: 0x00000000, model64: 0x197dd000197eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x197eb000197f0, model64: 0x197f0000197fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x197fb000197ff, model64: 0x197ff00019806},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x198060001980a, model64: 0x1980a00019812},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e64, match64: 0x00000000, model64: 0x198120001981f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1981f0001982b, model64: 0x1981f0001982b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1982b00019838, model64: 0x1983800019841},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e65, match64: 0x00000000, model64: 0x198410001984c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1984c00019850, model64: 0x1985000019854},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1985400019859, model64: 0x1985900019861},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e66, match64: 0x00000000, model64: 0x1986100019868},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e67, match64: 0x00000000, model64: 0x1986800019870},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1987000019875, model64: 0x8a1c00008a22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e68, match64: 0x00000000, model64: 0x198750001987d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1987d00019881, model64: 0x198810001988d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e69, match64: 0x00000000, model64: 0x1988d00019896},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19896000198a3, model64: 0x198a3000198ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x198ab000198b0, model64: 0x198b0000198b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6a, match64: 0x00000000, model64: 0x198b8000198bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6b, match64: 0x00000000, model64: 0x198bc000198c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6c, match64: 0x00000000, model64: 0x198c1000198d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6d, match64: 0x00000000, model64: 0x198d1000198e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6e, match64: 0x00000000, model64: 0x198e0000198ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6f, match64: 0x00000000, model64: 0x198ec000198f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e70, match64: 0x00000000, model64: 0x198f900019903},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e71, match64: 0x00000000, model64: 0x1990300019910},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e72, match64: 0x00000000, model64: 0x1991000019918},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e73, match64: 0x00000000, model64: 0x1991800019925},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e74, match64: 0x00000000, model64: 0x1992500019932},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e75, match64: 0x00000000, model64: 0x199320001993a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e76, match64: 0x00000000, model64: 0x1993a00019942},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e77, match64: 0x00000000, model64: 0x199420001994e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e78, match64: 0x00000000, model64: 0x1994e0001995b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e79, match64: 0x00000000, model64: 0x1995b00019963},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7a, match64: 0x00000000, model64: 0x199630001996c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7b, match64: 0x00000000, model64: 0x1996c00019975},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7c, match64: 0x00000000, model64: 0x1997500019983},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7d, match64: 0x00000000, model64: 0x199830001998b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7e, match64: 0x00000000, model64: 0x1998b0001999b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7f, match64: 0x00000000, model64: 0x1999b000199a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e80, match64: 0x00000000, model64: 0x199a3000199b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e81, match64: 0x00000000, model64: 0x198120001981f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e82, match64: 0x00000000, model64: 0x199b1000199b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e83, match64: 0x00000000, model64: 0x199b9000199c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e84, match64: 0x00000000, model64: 0x199c5000199d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e85, match64: 0x00000000, model64: 0x199d2000199da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e86, match64: 0x00000000, model64: 0x199da000199e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e87, match64: 0x00000000, model64: 0x199e6000199ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e88, match64: 0x00000000, model64: 0x199ee000199f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x199f900019a03, model64: 0x199f900019a03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e89, match64: 0x00000000, model64: 0x19a0300019a10},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8a, match64: 0x00000000, model64: 0x19a1000019a1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8b, match64: 0x00000000, model64: 0x19a1c00019a29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8c, match64: 0x00000000, model64: 0x19a2900019a36},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8d, match64: 0x00000000, model64: 0x19a3600019a3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8e, match64: 0x00000000, model64: 0x19a3e00019a47},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8f, match64: 0x00000000, model64: 0x19a4700019a4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e90, match64: 0x00000000, model64: 0x19a4f00019a58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e91, match64: 0x00000000, model64: 0x19a5800019a61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e92, match64: 0x00000000, model64: 0x19a6100019a69},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e93, match64: 0x00000000, model64: 0x19a6900019a71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e94, match64: 0x00000000, model64: 0x19a7100019a7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e95, match64: 0x00000000, model64: 0x19a7a00019a85},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e96, match64: 0x00000000, model64: 0x19a8500019a92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19a9200019a9d, model64: 0x19a9d00019aaa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19aaa00019ab2, model64: 0x19ab200019ac0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ac000019ac9, model64: 0x19ac900019ad2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ad200019ada, model64: 0x19ada00019ae3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e97, match64: 0x00000000, model64: 0x19ae300019af1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e98, match64: 0x00000000, model64: 0x19a3e00019a47},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e99, match64: 0x00000000, model64: 0x19af100019afe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9a, match64: 0x00000000, model64: 0x19afe00019b06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9b, match64: 0x00000000, model64: 0x19b0600019b0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b0e00019b12, model64: 0x19b1200019b1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b1a00019b1f, model64: 0x19b1f00019b2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b2a00019b30, model64: 0x19b3000019b3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b3c00019b42, model64: 0x19b4200019b50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b5000019b54, model64: 0x19b5400019b5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b5f00019b63, model64: 0x19b6300019b6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b6f00019b73, model64: 0x19b7300019b80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b8000019b86, model64: 0x19b8600019b95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b9500019b9a, model64: 0x19b9a00019ba3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ba300019ba7, model64: 0x19ba700019bae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19bae00019bb4, model64: 0x19bb400019bc0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19bc000019bc4, model64: 0x19bc400019bd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19bd300019bd7, model64: 0x19bd700019be2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19be200019be6, model64: 0x19be600019bf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9c, match64: 0x00000000, model64: 0x19bf100019bfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9d, match64: 0x00000000, model64: 0x19bfc00019c08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19c0800019c0d, model64: 0x19c0d00019c17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19c1700019c1d, model64: 0x19c1d00019c29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19c2900019c2f, model64: 0x19c2f00019c3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19c3b00019c41, model64: 0x19c4100019c4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19c4b00019c55, model64: 0x19c5500019c5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19c5f00019c64, model64: 0x19c5f00019c64},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9e, match64: 0x00000000, model64: 0x19c6400019c73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19c7300019c79, model64: 0x19c7900019c8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19c8d00019c93, model64: 0x19c9300019ca3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9f, match64: 0x00000000, model64: 0x19ca300019caa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea0, match64: 0x00000000, model64: 0x19caa00019caf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19caf00019cb3, model64: 0x19cb300019cbc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19cbc00019cc0, model64: 0x19cc000019cc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19cc700019ccb, model64: 0x19ccb00019cd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19cd300019cd7, model64: 0x19cd700019cde},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea1, match64: 0x00000000, model64: 0x19cde00019cea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19cea00019cef, model64: 0x19cef00019cf9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19cf900019cfd, model64: 0x19cfd00019d06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d0600019d0a, model64: 0x19d0a00019d13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d1300019d17, model64: 0x19d1700019d1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d1d00019d21, model64: 0x19d2100019d2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea2, match64: 0x00000000, model64: 0x19d2a00019d35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d3500019d3b, model64: 0x19d3b00019d46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d4600019d4c, model64: 0x19d4c00019d57},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea3, match64: 0x00000000, model64: 0x19d5700019d62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d6200019d68, model64: 0x19d6800019d76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d7600019d7c, model64: 0x19d7c00019d8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea4, match64: 0x00000000, model64: 0x19d8a00019d90},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea5, match64: 0x00000000, model64: 0x19d9000019d96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d9600019d9c, model64: 0x19d9c00019da7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19da700019dab, model64: 0x19dab00019db4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19db400019dba, model64: 0x19dba00019dc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea6, match64: 0x00000000, model64: 0x19dc600019dcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea7, match64: 0x00000000, model64: 0x19dcd00019dd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea8, match64: 0x00000000, model64: 0x19dd300019ddc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ddc00019de1, model64: 0x19de100019dec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea9, match64: 0x00000000, model64: 0x1964d00019653},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19dec00019df1, model64: 0x19df100019df8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19df800019dfe, model64: 0x19dfe00019e09},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eaa, match64: 0x00000000, model64: 0x19e0900019e14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19e1400019e19, model64: 0x19e1900019e1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eab, match64: 0x00000000, model64: 0x19e1f00019e23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19e2300019e29, model64: 0x19bf100019bfc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae1d0000ae21, model64: 0x19e2900019e2e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19e2e00019e32, model64: 0x19e3200019e38},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eac, match64: 0x00000000, model64: 0x162200001625},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19e3800019e3d, model64: 0x19e3d00019e44},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ead, match64: 0x00000000, model64: 0x19e4400019e49},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eae, match64: 0x00000000, model64: 0x19e4900019e4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eaf, match64: 0x00000000, model64: 0x19e4d00019e52},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb0, match64: 0x00000000, model64: 0x19e5200019e5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb1, match64: 0x00000000, model64: 0x19e5f00019e6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb2, match64: 0x00000000, model64: 0x19e6e00019e74},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb3, match64: 0x00000000, model64: 0x19e7400019e80},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb4, match64: 0x00000000, model64: 0x19e8000019e91},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb5, match64: 0x00000000, model64: 0x19e9100019e97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19e9700019ea0, model64: 0x19ea000019eae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19eae00019eb6, model64: 0x19eb600019ec1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ec100019ec9, model64: 0x19ec900019ed9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ed900019ee1, model64: 0x19ee100019ee9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ee900019ef6, model64: 0x19ee900019ef6},
		modelTuple{type64: 0x52100000528, matchRI: 0x1eb6, match64: 0x00000000, model64: 0x19ef600019f00},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x19f0000019f08, model64: 0x19f0800019f19},
		modelTuple{type64: 0x28400000286, matchRI: 0x1eb7, match64: 0x00000000, model64: 0x19f1900019f25},
		modelTuple{type64: 0x20000000206, matchRI: 0x1eb8, match64: 0x00000000, model64: 0x19f2500019f33},
		modelTuple{type64: 0x20000000206, matchRI: 0x1eb9, match64: 0x00000000, model64: 0x19f3300019f41},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eba, match64: 0x00000000, model64: 0x19f4100019f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1ebc, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebd, match64: 0x00000000, model64: 0x19afe00019b06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebe, match64: 0x00000000, model64: 0x19a3600019a3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebf, match64: 0x00000000, model64: 0x19a4700019a4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec0, match64: 0x00000000, model64: 0x19a4f00019a58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec1, match64: 0x00000000, model64: 0x19afe00019b06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec2, match64: 0x00000000, model64: 0x19afe00019b06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec3, match64: 0x00000000, model64: 0x19f4d00019f57},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f5a00019f5e, model64: 0x766000007662},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f5e00019f63, model64: 0x19f6300019f6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f6b00019f70, model64: 0x19f7000019f77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f7700019f7c, model64: 0x19f7c00019f83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f8300019f88, model64: 0x19f8300019f88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f8800019f8d, model64: 0x19f8800019f8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f8d00019f92, model64: 0x19f9200019f98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f9800019f9d, model64: 0x19f9d00019fa4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19fa400019fa9, model64: 0x19fa900019fb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19fb000019fb5, model64: 0x19fb000019fb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19fb500019fbc, model64: 0x19fbc00019fc3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19fc300019fc7, model64: 0x19fc700019fcf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19fcf00019fd3, model64: 0x19fd300019fd8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19fd800019fdb, model64: 0x19fdb00019fe0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec8, match64: 0x00000000, model64: 0x19fe000019fe7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec9, match64: 0x00000000, model64: 0x19fe700019feb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eca, match64: 0x00000000, model64: 0x19feb00019ff5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ecb, match64: 0x00000000, model64: 0x19ff500019ffe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ecc, match64: 0x00000000, model64: 0x19ffe0001a007},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ecd, match64: 0x00000000, model64: 0x1a0070001a00e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ece, match64: 0x00000000, model64: 0x1a00e0001a012},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ecf, match64: 0x00000000, model64: 0x1a0120001a01d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed0, match64: 0x00000000, model64: 0x1a01d0001a022},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed1, match64: 0x00000000, model64: 0x1a0220001a031},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed2, match64: 0x00000000, model64: 0x1a0310001a03c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed3, match64: 0x00000000, model64: 0x1a03c0001a040},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed4, match64: 0x00000000, model64: 0x1a0400001a04a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed5, match64: 0x00000000, model64: 0x1a04a0001a053},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed6, match64: 0x00000000, model64: 0x1a0530001a05c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed7, match64: 0x00000000, model64: 0x1a05c0001a064},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed8, match64: 0x00000000, model64: 0x1a0640001a069},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a0690001a072, model64: 0x1a0720001a07b},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a07b0001a082, model64: 0x1a0820001a085},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1edb, match64: 0x00000000, model64: 0xcdbb0000cdc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1edc, match64: 0x00000000, model64: 0x1a08f0001a093},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0930001a09e, model64: 0x1a09e0001a0aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0aa0001a0b5, model64: 0x1a0b50001a0c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0c20001a0cd, model64: 0x1a0cd0001a0d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ede, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1edf, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0e50001a0ef, model64: 0x1a0ef0001a0fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0ff0001a104, model64: 0x1a1040001a10c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a10c0001a111, model64: 0x1a1110001a119},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1190001a11e, model64: 0x1a11e0001a121},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1210001a126, model64: 0x1a1260001a12f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a12f0001a134, model64: 0x1a0d80001a0dd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1a13d0001a148},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1a14e0001a152},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eeb, match64: 0x00000000, model64: 0xf8f20000f8f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eec, match64: 0x00000000, model64: 0x1a15b0001a166},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eed, match64: 0x00000000, model64: 0x1a1660001a16e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eee, match64: 0x00000000, model64: 0x1a16e0001a17a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eef, match64: 0x00000000, model64: 0x1a17a0001a183},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1a1880001a18d, model64: 0x1a18d0001a192},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef3, match64: 0x00000000, model64: 0x1a1960001a19b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef4, match64: 0x00000000, model64: 0x1a19b0001a1a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef5, match64: 0x00000000, model64: 0x1a1a30001a1a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef6, match64: 0x00000000, model64: 0x188a8000188af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef7, match64: 0x00000000, model64: 0x1a1a90001a1b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef8, match64: 0x00000000, model64: 0x1a1b50001a1bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef9, match64: 0x00000000, model64: 0x1a1bc0001a1c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efa, match64: 0x00000000, model64: 0x1a1c30001a1cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efb, match64: 0x00000000, model64: 0x63cd000063d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efc, match64: 0x00000000, model64: 0x1a1cd0001a1d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efd, match64: 0x00000000, model64: 0x1a1d60001a1dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efe, match64: 0x00000000, model64: 0x1a1dc0001a1e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eff, match64: 0x00000000, model64: 0x1a1e30001a1ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f00, match64: 0x00000000, model64: 0x1a1ea0001a1f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f01, match64: 0x00000000, model64: 0x1a1f20001a1fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f02, match64: 0x00000000, model64: 0x1a1fd0001a204},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f03, match64: 0x00000000, model64: 0x1a2040001a20d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f04, match64: 0x00000000, model64: 0x1a20d0001a212},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f05, match64: 0x00000000, model64: 0x1a2120001a219},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f06, match64: 0x00000000, model64: 0x1a2190001a21e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f07, match64: 0x00000000, model64: 0x1a21e0001a226},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f08, match64: 0x00000000, model64: 0x1a2260001a233},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f09, match64: 0x00000000, model64: 0x1a2330001a239},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a23d0001a245, model64: 0x1a2450001a24d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a24d0001a254, model64: 0x1a2540001a25b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a25b0001a261, model64: 0x1a25b0001a261},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2610001a26f, model64: 0x1a26f0001a27d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a27d0001a286, model64: 0x1a2860001a28f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a28f0001a299, model64: 0x1a2990001a2a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0c, match64: 0x00000000, model64: 0x1a2a30001a2aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2aa0001a2b4, model64: 0x1a2b40001a2be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2be0001a2c5, model64: 0x1a2c50001a2cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0d, match64: 0x00000000, model64: 0x1a2cc0001a2d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2d30001a2d9, model64: 0x1a2d90001a2df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2df0001a2e3, model64: 0x1025f00010263},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2e30001a2e8, model64: 0x1a2e80001a2ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2ed0001a2f8, model64: 0x1a2f80001a303},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3030001a30f, model64: 0x1a30f0001a31b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0e, match64: 0x00000000, model64: 0x1a31b0001a325},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3250001a331, model64: 0x1a3310001a33d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a33d0001a348, model64: 0x1a3480001a353},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3530001a35a, model64: 0x1a35a0001a361},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0f, match64: 0x00000000, model64: 0x1a3610001a36b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a36b0001a371, model64: 0x1a3710001a377},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3770001a37b, model64: 0x1a37b0001a37f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f10, match64: 0x00000000, model64: 0x1a37f0001a388},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f11, match64: 0x00000000, model64: 0x1a3880001a38c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f12, match64: 0x00000000, model64: 0x1a38c0001a391},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f13, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f14, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f16, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f17, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f18, match64: 0x00000000, model64: 0x1a3950001a39d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f19, match64: 0x00000000, model64: 0x1a3950001a39d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1a, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1a3a20001a3a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3ad0001a3b3, model64: 0x1a3ad0001a3b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1c, match64: 0x00000000, model64: 0x1a3b30001a3b8},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x1a3b80001a3be, model64: 0x1a3b80001a3be},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1a3c10001a3ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3ce0001a3d6, model64: 0x1a3d60001a3e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3e30001a3ed, model64: 0x1a3ed0001a3fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3fa0001a404, model64: 0x1a4040001a411},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a4110001a41e, model64: 0x1a41e0001a42b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f21, match64: 0x00000000, model64: 0x1a42d0001a437},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f22, match64: 0x00000000, model64: 0x1a4370001a447},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f23, match64: 0x00000000, model64: 0x1a4470001a458},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f24, match64: 0x00000000, model64: 0x43f6000043fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f25, match64: 0x00000000, model64: 0x1a4580001a45f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f26, match64: 0x00000000, model64: 0x1a45f0001a466},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f27, match64: 0x00000000, model64: 0x1a4660001a46d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f28, match64: 0x00000000, model64: 0x1a46d0001a473},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f29, match64: 0x00000000, model64: 0xa04d0000a052},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2a, match64: 0x00000000, model64: 0x1a4730001a476},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2b, match64: 0x00000000, model64: 0x1a4760001a47f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2c, match64: 0x00000000, model64: 0x119f7000119fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2d, match64: 0x00000000, model64: 0x1a47f0001a486},
		modelTuple{type64: 0x20000000206, matchRI: 0x1f2e, match64: 0x00000000, model64: 0x14fb000014fb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2f, match64: 0x00000000, model64: 0x1a4860001a495},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a4950001a49d, model64: 0x1a49d0001a4a8},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a4a80001a4b0, model64: 0x1a4a80001a4b0},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a4b00001a4b8, model64: 0x1053500010538},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a4b80001a4c0, model64: 0x1a4c00001a4c6},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a4c60001a4ce, model64: 0x1a4ce0001a4d4},
		modelTuple{type64: 0x20000000206, matchRI: 0x1f30, match64: 0x00000000, model64: 0x170de000170e3},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a4d40001a4dc, model64: 0x1a4dc0001a4e0},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a4e00001a4e8, model64: 0x1a4e80001a4ee},
		modelTuple{type64: 0x20000000206, matchRI: 0x1f31, match64: 0x00000000, model64: 0x1a4ee0001a4f4},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a4f40001a4fc, model64: 0xec080000ec0b},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a4fc0001a504, model64: 0x440500004408},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a5040001a50c, model64: 0x1a50c0001a511},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a5110001a518, model64: 0x1a5180001a51f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f32, match64: 0x00000000, model64: 0x119f7000119fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a51f0001a527, model64: 0x2ef000002ef4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5270001a52f, model64: 0x1a52f0001a533},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f33, match64: 0x00000000, model64: 0x1a5330001a53b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f34, match64: 0x00000000, model64: 0x1a53b0001a542},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f35, match64: 0x00000000, model64: 0x1a5420001a547},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f36, match64: 0x00000000, model64: 0x1a5470001a551},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f37, match64: 0x00000000, model64: 0x1a5510001a557},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f38, match64: 0x00000000, model64: 0xf3890000f390},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f39, match64: 0x00000000, model64: 0x1a5570001a55c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a55c0001a563, model64: 0x4c6c00004c70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3a, match64: 0x00000000, model64: 0x1a5630001a567},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3b, match64: 0x00000000, model64: 0x1a5670001a570},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3c, match64: 0x00000000, model64: 0x1a5700001a578},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3d, match64: 0x00000000, model64: 0x1a5780001a580},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3e, match64: 0x00000000, model64: 0x1a5800001a584},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3f, match64: 0x00000000, model64: 0x1a5840001a588},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f40, match64: 0x00000000, model64: 0x37fd00003801},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f41, match64: 0x00000000, model64: 0x1a5880001a596},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f42, match64: 0x00000000, model64: 0x1a5960001a59b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f43, match64: 0x00000000, model64: 0x1a59b0001a5a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f44, match64: 0x00000000, model64: 0x1a5a40001a5b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f45, match64: 0x00000000, model64: 0x1a4370001a447},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f46, match64: 0x00000000, model64: 0x1a5b70001a5bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f47, match64: 0x00000000, model64: 0x1a5bf0001a5c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f48, match64: 0x00000000, model64: 0x1a5c70001a5d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f49, match64: 0x00000000, model64: 0x1a5d80001a5de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4a, match64: 0x00000000, model64: 0x1a5de0001a5e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4b, match64: 0x00000000, model64: 0x1a5e20001a5eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4c, match64: 0x00000000, model64: 0x1a5eb0001a5f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4d, match64: 0x00000000, model64: 0x1a5f10001a5f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4e, match64: 0x00000000, model64: 0x1a5f90001a602},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4f, match64: 0x00000000, model64: 0x87a00000881},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f50, match64: 0x00000000, model64: 0x1a6020001a60a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f51, match64: 0x00000000, model64: 0x1a60a0001a615},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f52, match64: 0x00000000, model64: 0x1a6150001a620},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f53, match64: 0x00000000, model64: 0x1a6200001a626},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f54, match64: 0x00000000, model64: 0x1a6260001a62d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f55, match64: 0x00000000, model64: 0x1a62d0001a63a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f56, match64: 0x00000000, model64: 0x14fb000014fb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f57, match64: 0x00000000, model64: 0x1a63a0001a644},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f58, match64: 0x00000000, model64: 0x40380000403d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f59, match64: 0x00000000, model64: 0x1a6440001a64b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5a, match64: 0x00000000, model64: 0x1a64b0001a651},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5b, match64: 0x00000000, model64: 0x1a6510001a655},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5c, match64: 0x00000000, model64: 0x1a6550001a65b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5d, match64: 0x00000000, model64: 0x1a65b0001a661},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5e, match64: 0x00000000, model64: 0x1a6610001a66b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5f, match64: 0x00000000, model64: 0x1a66b0001a677},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f60, match64: 0x00000000, model64: 0x1a6770001a688},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f61, match64: 0x00000000, model64: 0x1a6880001a690},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f62, match64: 0x00000000, model64: 0xa04d0000a052},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f63, match64: 0x00000000, model64: 0x1a6900001a697},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f64, match64: 0x00000000, model64: 0x1a6970001a6a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f65, match64: 0x00000000, model64: 0x400d00004014},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f66, match64: 0x00000000, model64: 0xc74e0000c753},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6a10001a6a9, model64: 0x1a6a90001a6ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f67, match64: 0x00000000, model64: 0xc7a20000c7a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f68, match64: 0x00000000, model64: 0x37fd00003801},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f69, match64: 0x00000000, model64: 0x1a6ae0001a6bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6a, match64: 0x00000000, model64: 0x1a6bd0001a6c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6b, match64: 0x00000000, model64: 0x1a6c30001a6c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6c, match64: 0x00000000, model64: 0x1a6c80001a6d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6d, match64: 0x00000000, model64: 0x5d1100005d18},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6e, match64: 0x00000000, model64: 0x1a6d20001a6da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6f, match64: 0x00000000, model64: 0x1a6da0001a6de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f70, match64: 0x00000000, model64: 0x1a6de0001a6e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f71, match64: 0x00000000, model64: 0x1a65b0001a661},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f72, match64: 0x00000000, model64: 0x1a6e30001a6e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f73, match64: 0x00000000, model64: 0x1a6e70001a6ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f74, match64: 0x00000000, model64: 0x1a6ef0001a6fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f75, match64: 0x00000000, model64: 0x1a6fa0001a6fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f76, match64: 0x00000000, model64: 0x1a6fe0001a709},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f77, match64: 0x00000000, model64: 0x1a7090001a70f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f78, match64: 0x00000000, model64: 0x40250000402a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a70f0001a717, model64: 0x1a7170001a723},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7230001a72b, model64: 0x7d0900007d0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f79, match64: 0x00000000, model64: 0x1a72b0001a731},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7a, match64: 0x00000000, model64: 0x1a7310001a736},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7b, match64: 0x00000000, model64: 0xa0490000a04d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7c, match64: 0x00000000, model64: 0x1a7360001a741},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7d, match64: 0x00000000, model64: 0x1a7410001a748},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7e, match64: 0x00000000, model64: 0x1a7480001a74d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7f, match64: 0x00000000, model64: 0x1a74d0001a756},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f80, match64: 0x00000000, model64: 0x1a4730001a476},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f81, match64: 0x00000000, model64: 0x1a7560001a75d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f82, match64: 0x00000000, model64: 0x1a75d0001a767},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f83, match64: 0x00000000, model64: 0x1a7670001a76e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f84, match64: 0x00000000, model64: 0x1a76e0001a773},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f85, match64: 0x00000000, model64: 0x1a7730001a778},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f86, match64: 0x00000000, model64: 0x1a7780001a77d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f87, match64: 0x00000000, model64: 0x1a77d0001a785},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f88, match64: 0x00000000, model64: 0x1a7850001a78b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f89, match64: 0x00000000, model64: 0x1a78b0001a791},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8a, match64: 0x00000000, model64: 0x1a7910001a799},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8b, match64: 0x00000000, model64: 0x1a7990001a7a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8c, match64: 0x00000000, model64: 0x1a7a20001a7a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8d, match64: 0x00000000, model64: 0x1a7a70001a7ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8e, match64: 0x00000000, model64: 0x6acd00006ad2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8f, match64: 0x00000000, model64: 0x1a7ab0001a7b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f90, match64: 0x00000000, model64: 0xfc340000fc37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f91, match64: 0x00000000, model64: 0x1a7b30001a7b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f92, match64: 0x00000000, model64: 0x1a7b90001a7c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f93, match64: 0x00000000, model64: 0x1a7c20001a7c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f94, match64: 0x00000000, model64: 0x1a7c80001a7d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f95, match64: 0x00000000, model64: 0x1a7d00001a7d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f96, match64: 0x00000000, model64: 0x1a7d80001a7dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f97, match64: 0x00000000, model64: 0x1a7dd0001a7e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7e50001a7f5, model64: 0x1a7f50001a7fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f98, match64: 0x00000000, model64: 0x1a7fc0001a804},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f99, match64: 0x00000000, model64: 0x1a8040001a80b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9a, match64: 0x00000000, model64: 0x1a80b0001a815},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9b, match64: 0x00000000, model64: 0x1a8150001a820},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9c, match64: 0x00000000, model64: 0x1a8200001a823},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9d, match64: 0x00000000, model64: 0x1535b00015360},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9e, match64: 0x00000000, model64: 0x1a8230001a82a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9f, match64: 0x00000000, model64: 0x1a82a0001a832},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa0, match64: 0x00000000, model64: 0x1a8320001a83a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa1, match64: 0x00000000, model64: 0x1a83a0001a83f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa2, match64: 0x00000000, model64: 0x1a83f0001a849},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa3, match64: 0x00000000, model64: 0x1a8490001a84f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa4, match64: 0x00000000, model64: 0x1a84f0001a853},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa5, match64: 0x00000000, model64: 0x1a8530001a859},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa6, match64: 0x00000000, model64: 0x1a8590001a863},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa7, match64: 0x00000000, model64: 0x1a8630001a869},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fa8, match64: 0x00000000, model64: 0x1a8690001a877},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fa9, match64: 0x00000000, model64: 0x1a8770001a881},
		modelTuple{type64: 0x20000000206, matchRI: 0x1faa, match64: 0x00000000, model64: 0x1a8810001a88f},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fab, match64: 0x00000000, model64: 0x1a88f0001a898},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fac, match64: 0x00000000, model64: 0x1a8980001a8a5},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fad, match64: 0x00000000, model64: 0x1a8a50001a8ac},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fae, match64: 0x00000000, model64: 0x1a8ac0001a8b3},
		modelTuple{type64: 0x20000000206, matchRI: 0x1faf, match64: 0x00000000, model64: 0x1a8b30001a8b9},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fb0, match64: 0x00000000, model64: 0x1a8b90001a8be},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a8be0001a8c8, model64: 0x1a8be0001a8c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb1, match64: 0x00000000, model64: 0x1a8c80001a8d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb2, match64: 0x00000000, model64: 0x1a5510001a557},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb3, match64: 0x00000000, model64: 0x16e3400016e3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb4, match64: 0x00000000, model64: 0x1038c00010390},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fb5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fb6, match64: 0x00000000, model64: 0x1a8d50001a8d9},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1a8d90001a8e1, model64: 0x1a8e10001a8ef},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fb7, match64: 0x00000000, model64: 0x1a8ef0001a8f3},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fb8, match64: 0x00000000, model64: 0x1a8f30001a8fb},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fb9, match64: 0x00000000, model64: 0x1a8fb0001a900},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fba, match64: 0x00000000, model64: 0x1a9000001a907},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fbb, match64: 0x00000000, model64: 0x1a9070001a90d},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fbc, match64: 0x00000000, model64: 0x1a90d0001a912},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fbd, match64: 0x00000000, model64: 0x1a9120001a918},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fbe, match64: 0x00000000, model64: 0x1a9180001a923},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fbf, match64: 0x00000000, model64: 0x172f0000172fa},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fc0, match64: 0x00000000, model64: 0x1039000010394},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fc1, match64: 0x00000000, model64: 0x1a9230001a92e},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fc2, match64: 0x00000000, model64: 0x1a92e0001a934},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fc3, match64: 0x00000000, model64: 0x103a9000103ae},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fc4, match64: 0x00000000, model64: 0x1a9340001a93a},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fc5, match64: 0x00000000, model64: 0x1a93a0001a93f},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fc6, match64: 0x00000000, model64: 0x1a93f0001a949},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fc7, match64: 0x00000000, model64: 0x1a9490001a94d},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fc8, match64: 0x00000000, model64: 0x1a94d0001a952},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fc9, match64: 0x00000000, model64: 0x1a9520001a960},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fca, match64: 0x00000000, model64: 0x1a9600001a969},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fcb, match64: 0x00000000, model64: 0x1a9690001a972},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fcc, match64: 0x00000000, model64: 0x1a9720001a97b},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fcd, match64: 0x00000000, model64: 0x1a97b0001a980},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fce, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcf, match64: 0x00000000, model64: 0x1a9800001a98a},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fd0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd2, match64: 0x00000000, model64: 0x1a98f0001a9a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd4, match64: 0x00000000, model64: 0x1a9a10001a9b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a9b50001a9c0, model64: 0x1a9c00001a9c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a9c50001a9de, model64: 0x1a9de0001a9f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a9f10001aa08, model64: 0x1aa080001aa1c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aa1c0001aa37, model64: 0x1aa370001aa4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd5, match64: 0x00000000, model64: 0x1aa4c0001aa53},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd9, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1aa650001aa71, model64: 0x1aa710001aa7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdb, match64: 0x00000000, model64: 0x1aa820001aa8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdc, match64: 0x00000000, model64: 0x1aa8b0001aa94},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdd, match64: 0x00000000, model64: 0x1aa940001aa9e},
		modelTuple{type64: 0x52100000528, matchRI: 0x1fde, match64: 0x00000000, model64: 0x1aa9e0001aaa9},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fdf, match64: 0x00000000, model64: 0x1aaa90001aab0},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fe0, match64: 0x00000000, model64: 0x1aab00001aab6},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fe1, match64: 0x00000000, model64: 0x1aab60001aaba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe2, match64: 0x00000000, model64: 0x1aaba0001aac3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1fe6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1fe7, match64: 0x00000000, model64: 0x1aad10001aadb},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1fe8, match64: 0x00000000, model64: 0x1aadb0001aae0},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x1fe9, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fea, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1feb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1aae50001aaf1, model64: 0x1aae50001aaf1},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1aaf10001ab01, model64: 0x1aaf10001ab01},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fed, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fee, match64: 0x00000000, model64: 0x1859f000185a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fef, match64: 0x00000000, model64: 0x1ab010001ab0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff0, match64: 0x00000000, model64: 0x1ab0c0001ab1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff1, match64: 0x00000000, model64: 0x1ab1c0001ab2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x1ff4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff7, match64: 0x00000000, model64: 0x8590000085c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff8, match64: 0x00000000, model64: 0x1ab360001ab3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff9, match64: 0x00000000, model64: 0x1ab3d0001ab46},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffa, match64: 0x00000000, model64: 0x1afc00001b01},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffb, match64: 0x00000000, model64: 0x1ab460001ab50},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1ab5b0001ab64},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x37e5000037ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab6d0001ab7b, model64: 0x1ab7b0001ab8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab8b0001ab98, model64: 0x1ab980001aba7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aba70001abb8, model64: 0x1abb80001abcb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1abcb0001abd5, model64: 0x1abd50001abdd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1abdd0001abed, model64: 0x1abed0001abfd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1abfd0001ac11, model64: 0x1ac110001ac27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac270001ac3b, model64: 0x1ac3b0001ac51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac510001ac5b, model64: 0x1ac5b0001ac65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac650001ac6d, model64: 0x1ac650001ac6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2000, match64: 0x00000000, model64: 0x1ac6d0001ac74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac740001ac7b, model64: 0x1ac7b0001ac82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac820001ac8c, model64: 0x1a6510001a655},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac8c0001ac96, model64: 0x1ac8c0001ac96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac960001aca8, model64: 0x1aca80001acbc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1acbc0001acd2, model64: 0x1acd20001acea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1acea0001acf8, model64: 0x1acf80001ad0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ad0b0001ad1b, model64: 0x1ad1b0001ad2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ad2b0001ad37, model64: 0x1ad2b0001ad37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ad370001ad48, model64: 0x1ad480001ad5b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ad5b0001ad67, model64: 0x1ad670001ad73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ad730001ad7a, model64: 0x1ad7a0001ad81},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ad810001ad8e, model64: 0x1ad8e0001ad9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2001, match64: 0x00000000, model64: 0x1ad9d0001adb2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1adb20001adc3, model64: 0x1adc30001add6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1add60001adec, model64: 0x1adec0001ae04},
		modelTuple{type64: 0x2700000027, matchRI: 0x2002, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae1e0001ae2b, model64: 0x1ae2b0001ae32},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae320001ae38, model64: 0x1ae380001ae3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae3e0001ae4a, model64: 0x1ae4a0001ae56},
		modelTuple{type64: 0x2700000027, matchRI: 0x200a, match64: 0x00000000, model64: 0x1ae5a0001ae5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x200b, match64: 0x00000000, model64: 0x1ae5d0001ae61},
		modelTuple{type64: 0x2700000027, matchRI: 0x200c, match64: 0x00000000, model64: 0x1ae610001ae68},
		modelTuple{type64: 0x2700000027, matchRI: 0x200d, match64: 0x00000000, model64: 0x1ae680001ae6b},
		modelTuple{type64: 0x20000000206, matchRI: 0x200e, match64: 0x00000000, model64: 0x1ae6b0001ae75},
		modelTuple{type64: 0x2700000027, matchRI: 0x200f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae7b0001ae80, model64: 0x1ae7b0001ae80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae800001ae8b, model64: 0x1ae8b0001ae96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae960001ae9d, model64: 0x1ae9d0001aea4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2011, match64: 0x00000000, model64: 0x1aea40001aead},
		modelTuple{type64: 0x2700000027, matchRI: 0x2012, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2013, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2014, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2016, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2018, match64: 0x00000000, model64: 0x1aec70001aed1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2019, match64: 0x00000000, model64: 0x1aed10001aed9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aed90001aee0, model64: 0x1aee00001aee8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aee80001aeef, model64: 0x1aee80001aeef},
		modelTuple{type64: 0x2700000027, matchRI: 0x201a, match64: 0x00000000, model64: 0x1aeef0001aef7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aef70001af02, model64: 0x1af020001af0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1af0e0001af14, model64: 0x1af140001af1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1af1b0001af22, model64: 0x1af220001af2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1af2a0001af35, model64: 0x1af350001af41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1af410001af4c, model64: 0x1af4c0001af58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1af580001af5e, model64: 0x1af5e0001af65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1af650001af6b, model64: 0x1af650001af6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x201b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x201e, match64: 0x00000000, model64: 0x1af740001af7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x201f, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2020, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2022, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x2023, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2025, match64: 0x00000000, model64: 0x1af870001af8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2026, match64: 0x00000000, model64: 0x1af8d0001af91},
		modelTuple{type64: 0x2700000027, matchRI: 0x2027, match64: 0x00000000, model64: 0xcd590000cd5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2028, match64: 0x00000000, model64: 0x1af910001af95},
		modelTuple{type64: 0x2700000027, matchRI: 0x2029, match64: 0x00000000, model64: 0x1af950001af9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x202a, match64: 0x00000000, model64: 0x651400006519},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1afa80001afad},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x1afb10001afb6, model64: 0x1afb60001afb9},
		modelTuple{type64: 0x52100000528, matchRI: -0x0001, match64: 0x1afb90001afbe, model64: 0x1afbe0001afc5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1afc50001afca, model64: 0x1afca0001afcd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1afcd0001afd2, model64: 0x1afd20001afd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x202d, match64: 0x00000000, model64: 0x1afd50001afd8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1afd80001afdd, model64: 0x1afdd0001afe0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1afe00001afe5, model64: 0x1afe50001afec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1afec0001aff1, model64: 0x1aff10001aff4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aff40001affa, model64: 0x1affa0001affd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1affd0001b002, model64: 0x1b0020001b005},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0050001b00a, model64: 0x1b00a0001b00d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b00d0001b012, model64: 0x1b0120001b019},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0190001b01e, model64: 0x1b01e0001b021},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0210001b027, model64: 0x1b0270001b02e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b02e0001b034, model64: 0x1b0340001b03b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b03b0001b041, model64: 0x1b0410001b048},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0480001b04e, model64: 0x1b04e0001b055},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0550001b05a, model64: 0x1b05a0001b05d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b05d0001b062, model64: 0x1b0620001b065},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0650001b06b, model64: 0x1b06b0001b072},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0720001b078, model64: 0x1b0780001b07c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b07c0001b081, model64: 0x1b0810001b085},
		modelTuple{type64: 0x2700000027, matchRI: 0x202e, match64: 0x00000000, model64: 0x1b0850001b08c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b08c0001b091, model64: 0x1b0910001b099},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0990001b09f, model64: 0xf7ec0000f7ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b09f0001b0a4, model64: 0xf82b0000f82e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0a40001b0a9, model64: 0xf8410000f844},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0a90001b0ae, model64: 0x1b0ae0001b0b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0b60001b0bb, model64: 0x1b0bb0001b0c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0c40001b0c9, model64: 0x1b0c90001b0d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0d60001b0db, model64: 0x1b0db0001b0e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0e70001b0f0, model64: 0x1b0e70001b0f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x202f, match64: 0x00000000, model64: 0x1b0f00001b0f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2030, match64: 0x00000000, model64: 0x1b0f00001b0f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2031, match64: 0x00000000, model64: 0x1b0f80001b0fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2032, match64: 0x00000000, model64: 0x1b0fc0001b105},
		modelTuple{type64: 0x2700000027, matchRI: 0x2033, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: -0x0001, match64: 0x1b1050001b110, model64: 0x1b1100001b11b},
		modelTuple{type64: 0x20000000206, matchRI: 0x2034, match64: 0x00000000, model64: 0x1b11b0001b129},
		modelTuple{type64: 0x2700000027, matchRI: 0x2035, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2036, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1b12f0001b136},
		modelTuple{type64: 0x2700000027, matchRI: 0x2039, match64: 0x00000000, model64: 0x1b1390001b141},
		modelTuple{type64: 0x2700000027, matchRI: 0x203a, match64: 0x00000000, model64: 0xb7c60000b7c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1460001b151, model64: 0x1b1510001b15c},
		modelTuple{type64: 0x2700000027, matchRI: 0x203c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1620001b16a, model64: 0x1b16a0001b172},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1720001b178, model64: 0x1b1780001b17c},
		modelTuple{type64: 0x2700000027, matchRI: 0x203e, match64: 0x00000000, model64: 0x1b17c0001b181},
		modelTuple{type64: 0x5f5100005f5b, matchRI: 0x2040, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2042, match64: 0x00000000, model64: 0x1b1900001b19d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2043, match64: 0x00000000, model64: 0x1b19d0001b1a9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2047, match64: 0x00000000, model64: 0x1b1b90001b1c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2048, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x20000000206, matchRI: 0x2049, match64: 0x00000000, model64: 0x162270001622a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1cd0001b1d4, model64: 0x1b1d40001b1e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1e50001b1ec, model64: 0x1b1ec0001b1fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1fb0001b202, model64: 0x1b2020001b213},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2130001b21a, model64: 0x1b21a0001b227},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2270001b22e, model64: 0x1b22e0001b23e},
		modelTuple{type64: 0x2700000027, matchRI: 0x204c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b23e0001b247, model64: 0x1b2470001b251},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2510001b258, model64: 0x1b2580001b269},
		modelTuple{type64: 0x2700000027, matchRI: 0x204d, match64: 0x00000000, model64: 0x1b2690001b27c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b27c0001b28c, model64: 0x1b28c0001b29f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b29f0001b2ae, model64: 0x1b2ae0001b2c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x204e, match64: 0x00000000, model64: 0x1b2c00001b2d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2d20001b2e2, model64: 0x1b2e20001b2f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2f50001b301, model64: 0x1b3010001b30d},
		modelTuple{type64: 0x2700000027, matchRI: 0x204f, match64: 0x00000000, model64: 0x1b30d0001b31b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b31b0001b322, model64: 0x1b3220001b336},
		modelTuple{type64: 0x2700000027, matchRI: 0x2050, match64: 0x00000000, model64: 0x1b3360001b34a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2051, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2052, match64: 0x00000000, model64: 0x1b34a0001b35c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b35c0001b363, model64: 0x1b3630001b375},
		modelTuple{type64: 0x2700000027, matchRI: 0x2053, match64: 0x00000000, model64: 0x1b3750001b387},
		modelTuple{type64: 0x2700000027, matchRI: 0x2054, match64: 0x00000000, model64: 0x1b3870001b398},
		modelTuple{type64: 0x2700000027, matchRI: 0x2055, match64: 0x00000000, model64: 0x1b3980001b3ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b3ab0001b3b2, model64: 0x1b3b20001b3c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b3c40001b3cb, model64: 0x1b3cb0001b3dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b3dd0001b3e4, model64: 0x1b3e40001b3f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b3f60001b3fd, model64: 0x1b3fd0001b410},
		modelTuple{type64: 0x2700000027, matchRI: 0x2056, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1b4100001b417, model64: 0x1b4170001b41d},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x2057, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1b41d0001b424, model64: 0x1b4240001b42a},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1b42a0001b431, model64: 0x1b4310001b438},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1b4380001b43f, model64: 0x1b43f0001b446},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x2058, match64: 0x00000000, model64: 0x1b4460001b44d},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x2059, match64: 0x00000000, model64: 0x1b44d0001b459},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1b4590001b460, model64: 0x1b4600001b46b},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1b46b0001b472, model64: 0x1b4720001b47e},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1b47e0001b485, model64: 0x5bb200005bb6},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1b4850001b48c, model64: 0x1b48c0001b493},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x205a, match64: 0x00000000, model64: 0x1b4930001b49b},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1b49b0001b4a2, model64: 0x1b4a20001b4a9},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1b4a90001b4b0, model64: 0x1b4b00001b4b7},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x205b, match64: 0x00000000, model64: 0x1b4b70001b4be},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1b4be0001b4c5, model64: 0x1b4c50001b4cd},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1b4cd0001b4d5, model64: 0x1b4d50001b4e2},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1b4e20001b4e9, model64: 0x1b4e90001b4ef},
		modelTuple{type64: 0x19e000001a8, matchRI: -0x0001, match64: 0x1b4ef0001b4f6, model64: 0x1b4f60001b4fd},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x205c, match64: 0x00000000, model64: 0x1b4fd0001b504},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x205d, match64: 0x00000000, model64: 0x1b5040001b50a},
		modelTuple{type64: 0x19e000001a8, matchRI: 0x205e, match64: 0x00000000, model64: 0x1b50a0001b517},
		modelTuple{type64: 0x2700000027, matchRI: 0x2060, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2061, match64: 0x00000000, model64: 0x1b51f0001b525},
		modelTuple{type64: 0x2700000027, matchRI: 0x2063, match64: 0x00000000, model64: 0x1b5290001b52f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2064, match64: 0x00000000, model64: 0x1b52f0001b537},
		modelTuple{type64: 0x2700000027, matchRI: 0x2065, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b5370001b53f, model64: 0x1b5370001b53f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x788e00007891, model64: 0x788e00007891},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b53f0001b546, model64: 0x1b5460001b54d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2066, match64: 0x00000000, model64: 0x1b54d0001b554},
		modelTuple{type64: 0x2700000027, matchRI: 0x2067, match64: 0x00000000, model64: 0x1b5540001b562},
		modelTuple{type64: 0x2700000027, matchRI: 0x2069, match64: 0x00000000, model64: 0x1b5620001b570},
		modelTuple{type64: 0x2700000027, matchRI: 0x206a, match64: 0x00000000, model64: 0x1b5700001b57d},
		modelTuple{type64: 0x2700000027, matchRI: 0x206b, match64: 0x00000000, model64: 0x1b57d0001b583},
		modelTuple{type64: 0x2700000027, matchRI: 0x206d, match64: 0x00000000, model64: 0x1b5830001b588},
		modelTuple{type64: 0x2700000027, matchRI: 0x206e, match64: 0x00000000, model64: 0x1b5880001b58c},
		modelTuple{type64: 0x2700000027, matchRI: 0x206f, match64: 0x00000000, model64: 0x1b58c0001b59c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2070, match64: 0x00000000, model64: 0x1b59c0001b5ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x2071, match64: 0x00000000, model64: 0x1b5ac0001b5b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2072, match64: 0x00000000, model64: 0x1b5b80001b5be},
		modelTuple{type64: 0x2700000027, matchRI: 0x2073, match64: 0x00000000, model64: 0x1b5be0001b5c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2074, match64: 0x00000000, model64: 0x1b5c40001b5ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x2075, match64: 0x00000000, model64: 0x1b5ca0001b5d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b5d10001b5df, model64: 0x1b5d10001b5df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b5df0001b5ec, model64: 0x1b5df0001b5ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b5ec0001b5f7, model64: 0x1b5ec0001b5f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b5f70001b602, model64: 0x1b5f70001b602},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b6020001b622, model64: 0x1b6220001b636},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b6360001b64f, model64: 0x1b64f0001b65a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b65a0001b66c, model64: 0x1b66c0001b678},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b6780001b699, model64: 0x1b6990001b6b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2078, match64: 0x00000000, model64: 0x1b6b10001b6bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2079, match64: 0x00000000, model64: 0x77f900007803},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b6bd0001b6d8, model64: 0x1b6d80001b6e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b6e40001b6f8, model64: 0x1b6f80001b700},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b7000001b71b, model64: 0x1b71b0001b727},
		modelTuple{type64: 0x7f1000007f8, matchRI: -0x0001, match64: 0x1b7270001b745, model64: 0x1b7450001b76b},
		modelTuple{type64: 0x7f1000007f8, matchRI: -0x0001, match64: 0x1b76b0001b772, model64: 0x1b7720001b7a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x207b, match64: 0x00000000, model64: 0x1b7a30001b7b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x207c, match64: 0x00000000, model64: 0x1b7b60001b7bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x207d, match64: 0x00000000, model64: 0x1b7bc0001b7cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x207e, match64: 0x00000000, model64: 0x1b7cd0001b7d8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1b7e10001b7fa},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1b7fa0001b812},
		modelTuple{type64: 0x2700000027, matchRI: 0x2081, match64: 0x00000000, model64: 0x1b8210001b82d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2082, match64: 0x00000000, model64: 0x1b8210001b82d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2084, match64: 0x00000000, model64: 0x1b82d0001b83a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2085, match64: 0x00000000, model64: 0x1b83a0001b847},
		modelTuple{type64: 0x2700000027, matchRI: 0x2086, match64: 0x00000000, model64: 0x1b8470001b853},
		modelTuple{type64: 0x2700000027, matchRI: 0x2087, match64: 0x00000000, model64: 0x1b8530001b85f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2088, match64: 0x00000000, model64: 0x1b85f0001b86b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2089, match64: 0x00000000, model64: 0x1b86b0001b877},
		modelTuple{type64: 0x2700000027, matchRI: 0x208a, match64: 0x00000000, model64: 0x1b8770001b883},
		modelTuple{type64: 0x2700000027, matchRI: 0x208b, match64: 0x00000000, model64: 0x1b8830001b88d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8960001b8a2, model64: 0x1b8960001b8a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x208d, match64: 0x00000000, model64: 0xa6b30000a6b6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1b8b20001b8b9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2090, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2091, match64: 0x00000000, model64: 0x1b8be0001b8c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2092, match64: 0x00000000, model64: 0x788e00007891},
		modelTuple{type64: 0x2700000027, matchRI: 0x2094, match64: 0x00000000, model64: 0x1b8c40001b8d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8d50001b8db, model64: 0x1b8db0001b8ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8ec0001b8f2, model64: 0x1b8f20001b903},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9030001b909, model64: 0x1b9090001b91a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b91a0001b920, model64: 0x1b9200001b931},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9310001b937, model64: 0x1b9370001b947},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9470001b94f, model64: 0x1b94f0001b964},
		modelTuple{type64: 0x2700000027, matchRI: 0x2095, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x209a, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x209b, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba570001ba61, model64: 0x1ba570001ba61},
		modelTuple{type64: 0x2700000027, matchRI: 0x209d, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x209e, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba770001ba7e, model64: 0x1ba770001ba7e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1ba940001ba9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba9d0001baaa, model64: 0x1ba9d0001baaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1bab10001bab7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1baba0001bac2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bad40001bad6, model64: 0x1bad40001bad6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bad60001bae0, model64: 0x1bad60001bae0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bae00001baea, model64: 0x1bae00001baea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1baea0001baf4, model64: 0x1baea0001baf4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1baf40001bafd, model64: 0x1baf40001bafd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bafd0001bb07, model64: 0x1bafd0001bb07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb070001bb10, model64: 0x1bb070001bb10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb100001bb1d, model64: 0x1bb100001bb1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ae, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20af, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb1d0001bb24, model64: 0x1bb1d0001bb24},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb2e0001bb36, model64: 0x1bb360001bb3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb3f0001bb47, model64: 0x1bb470001bb50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb500001bb58, model64: 0x1bb580001bb61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb610001bb69, model64: 0x1bb690001bb72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb720001bb7a, model64: 0x1bb7a0001bb83},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b9, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb930001bb9b, model64: 0x1bb9b0001bba4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bba80001bbaf, model64: 0x1bba80001bbaf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bbb20001bbbc, model64: 0x1bbb20001bbbc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bbbc0001bbc7, model64: 0x1bbbc0001bbc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bbc70001bbd2, model64: 0x1bbc70001bbd2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bbd20001bbdf, model64: 0x1bbd20001bbdf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bbdf0001bbea, model64: 0x1bbdf0001bbea},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bd, match64: 0x00000000, model64: 0x1bbea0001bbf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x20be, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bf, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c2, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c3, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bbf50001bbfa, model64: 0x1bbf50001bbfa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bbfa0001bbfe, model64: 0x1bbfa0001bbfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c9, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20cc, match64: 0x00000000, model64: 0x1bc140001bc1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ce, match64: 0x00000000, model64: 0x1bc1b0001bc29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bc320001bc34, model64: 0x1bc320001bc34},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d1, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bc450001bc50, model64: 0x1bc450001bc50},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d5, match64: 0x00000000, model64: 0x1bc640001bc6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d7, match64: 0x00000000, model64: 0x1bc6e0001bc75},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d8, match64: 0x00000000, model64: 0x1bc750001bc82},
		modelTuple{type64: 0x2700000027, matchRI: 0x20da, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20db, match64: 0x00000000, model64: 0x1087500010881},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bc8b0001bc92, model64: 0x1bc8b0001bc92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bc920001bc99, model64: 0x1bc920001bc99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bca00001bca9, model64: 0x1bca00001bca9},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e5, match64: 0x00000000, model64: 0x1bcb30001bcb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e6, match64: 0x00000000, model64: 0x1bc750001bc82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bcb50001bcbf, model64: 0x1bcbf0001bcce},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e7, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ea, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x20eb, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ec, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ed, match64: 0x00000000, model64: 0x1bcd80001bcdd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bcdd0001bce3, model64: 0x1bcdd0001bce3},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ee, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f0, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f1, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bcfc0001bd03, model64: 0x1bcfc0001bd03},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f2, match64: 0x00000000, model64: 0x1bd030001bd0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f3, match64: 0x00000000, model64: 0x1bd0b0001bd14},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f4, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f5, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f6, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f8, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fa, match64: 0x00000000, model64: 0x1bc750001bc82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bd190001bd24, model64: 0x1bd190001bd24},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fc, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bd380001bd42, model64: 0x1bd420001bd4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fe, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2101, match64: 0x00000000, model64: 0x1bd5f0001bd67},
		modelTuple{type64: 0x2700000027, matchRI: 0x2102, match64: 0x00000000, model64: 0x1bd670001bd6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2103, match64: 0x00000000, model64: 0x1bd6f0001bd77},
		modelTuple{type64: 0x2700000027, matchRI: 0x2104, match64: 0x00000000, model64: 0x1bd770001bd7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2105, match64: 0x00000000, model64: 0x1bd7f0001bd87},
		modelTuple{type64: 0x2700000027, matchRI: 0x2106, match64: 0x00000000, model64: 0x1bd870001bd8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bd8f0001bd97, model64: 0x1bd8f0001bd97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bd970001bd9e, model64: 0x1bd970001bd9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2107, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x210c, match64: 0x00000000, model64: 0x14f00000151},
		modelTuple{type64: 0x2700000027, matchRI: 0x210d, match64: 0x00000000, model64: 0x1bda90001bdb4},
	}
	__dr_re = []*regexp.Regexp{
		regexp.MustCompile(`(?i)EK-G[CN][0-9]{3}`),
		regexp.MustCompile(`(?i)EK-GC([0-9]{3})`),
		regexp.MustCompile(`(?i)(?:Tesla/[0-9.]+|QtCarBrowser)`),
		regexp.MustCompile(`(?i)Tesla/[0-9.]+`),
		regexp.MustCompile(`(?i)Archos.*GAMEPAD([2]?)`),
		regexp.MustCompile(`(?i)Nintendo (([3]?DS[i]?)|Wii[U]?|Switch)`),
		regexp.MustCompile(`(?i)PlayStation ?(2|3|4 Pro|4|5|Portable|Vita)`),
		regexp.MustCompile(`(?i)(?:E500A_2019|2E E450 2018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E500A_2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2E E450 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:180[1379]-A01|1713-A01|1707-A01|1509-A00|1603-A03|1607-A01|1503-A01|1505-A02|1605-A01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1807-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1803-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1809-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1713-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1707-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1801-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1509-A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1503-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1605-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1603-A03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1607-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1505-A02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)3GNET[ _]`),
		regexp.MustCompile(`(?i)3GNET[ _](U8|T800|U6s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)3GNET[ _]T ?900`),
		regexp.MustCompile(`(?i)(?:Aplay ?[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aplay ?([34])`),
		regexp.MustCompile(`(?i)AC0731B|AC1024C|AC7803C|BC9710AM|EL72B|LC0720C|LC0723B|LC0725B|LC0804B|LC0808B|LC0809B|LC0810C|LC0816C|LC0901D|LC1016C|MT0724B|MT0729[BD]|MT0811B|OC1020A|RC0709B|RC0710B|RC0718C|RC0719H|RC0721B|RC0722C|RC0726B|RC0734H|RC0743H|RC0817C|RC1018C|RC1019G|RC1025F|RC1301C|RC780[24]F|RC9711B|RC9712C|RC9716B|RC9717B|RC9724C|RC9726C|RC9727F|RC9730C|RC9731C|TS0807B|TS1013B|VM0711A|VM1017A|RC0813C|QS9719D|QS9718C|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT7801C|TS9708B|AC0732C|MT0739D|MT0812E|(?:3Q_)?ER71B`),
		regexp.MustCompile(`(?i)MT0724B|LC0901D|LC0816C|LC0810C|LC0809B|LC0808B|LC0804B|LC0725B|LC0723B`),
		regexp.MustCompile(`(?i)VM1017A|TS1013B|TS0807B|RC9731C|RC9730C|RC9727F|RC9726C|RC9724C|RC9717B|RC9716B|RC9712C|RC9711B|RC1301C|RC1025F|RC1019G|RC1018C|RC0817C|RC0813C|RC0743H|RC0734H|RC0726B|RC0722C|RC0721B|RC0719H|RC0718C|RC0710B|RC0709B|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT0811B|MT0739D|MT0729[BD]|LC1016C|LC0720C|BC9710AM|AC1024C|AC0731B`),
		regexp.MustCompile(`(?i)MT7801C|QS9718C|QS9719D|VM0711A|OC1020A`),
		regexp.MustCompile(`(?i)AC7803C|AC0732C`),
		regexp.MustCompile(`(?i)MT0812E|RC7802F`),
		regexp.MustCompile(`(?i)EL72B|(?:3Q_)?ER71B`),
		regexp.MustCompile(`(?i)(RC7804F)`),
		regexp.MustCompile(`(?i)4Good[ _]|S450m [43]G|S555m 4G|S501m 3G|T700i_3G|People (?:G503|G410|GT300)|Light (?:A10[34]|B100)`),
		regexp.MustCompile(`(?i)(T700i|T100m)[_ ]?3G`),
		regexp.MustCompile(`(?i)People (GT300|AT100)`),
		regexp.MustCompile(`(?i)S555m[_ ]4G`),
		regexp.MustCompile(`(?i)(S(?:450m|501m)[_ ][43]G|Light (?:A10[34]|B100)|People (?:G503|G410))`),
		regexp.MustCompile(`(?i)4Good[ _]([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)4ife (4K Smart TV Box)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SWEGUE|DRENA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8848 (M[3-6])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A1 (?:Alpha|Alpha 20\+)|Alpha 20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1 Alpha 20\+`),
		regexp.MustCompile(`(?i)(Hashtag|Shine|Chacer)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM ([^/;)]+)(?: Build|[;)])|AG[_ ]Go[_-]Tab|(?:Flair|Ultra 2|Freedom Access)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AG[_ ]Go[_-]Tab[_ ]Access(_2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Flair|Ultra 2|Freedom Access)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM A9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:AIDATA ELDE 10 TABLET|ADT_?1061(?:_1)?|ADT1012L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADT_?1061(?:_1)?`),
		regexp.MustCompile(`(?i)AIRBOOK PRO 8S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris708|Kingcomm C500`),
		regexp.MustCompile(`(?i)ALDINORD, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)ALDISUED, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)AM(350|355|40[257]|41[025]|450|50[689]|52[037]|51[58]|53[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AM(355|407)`),
		regexp.MustCompile(`(?i)AM([0-9]{3})`),
		regexp.MustCompile(`(?i)ANS/|UL40 Build`),
		regexp.MustCompile(`(?i)AOC,|(?:Q10107L-ME)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Q10107L-ME)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LE(?:32|43)S5970(?:s)?-20|LE55U7970-30|LE43S5977-20|U60856)`),
		regexp.MustCompile(`(?i)AOYODKG[_ ](A38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(WT(?:22|19)M-FI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARRIS[,;] ([^),;/]+)`),
		regexp.MustCompile(`(?i)(?:EA1002|EA21100[12]|U(?:304|202|705|31[89])AA|QS5509A|V340U|V350U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U304AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U705AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA211001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QS5509A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U318AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U319AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V350U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U202AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA1002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA211002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V340U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TB-703G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Excer[ _]`),
		regexp.MustCompile(`(?i)Excer[ _]G5.([36])`),
		regexp.MustCompile(`(?i)Excer[ _]G5`),
		regexp.MustCompile(`(?i)Excer[ _]10[ _]PRO`),
		regexp.MustCompile(`(?i)Excer[ _]8`),
		regexp.MustCompile(`(?i)(?:ACCENT[_ ]NEON|FAST73G|PEARL[_ ]A[24567]|TANK_P55|CAMELEON[_ ](?:C[456]|A1)(?:[_ ]PLUS)?|Speed[- ](?:[AXYM]2|X2\+)|SURF1000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ACCENT[_ ]NEON(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAMELEON[_ ]C6[_ ]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Speed[- ]([AXYM]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Speed-X2\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAMELEON[_ ](C[456]|A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL A4 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL[_ ]A([2567])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TANK_P55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FAST73G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURF1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BUZZ [12]|BUZZ 2|CLEVER 1|URBAN 1(?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BUZZ ([12]) Lite`),
		regexp.MustCompile(`(?i)BUZZ ([12]) Plus`),
		regexp.MustCompile(`(?i)BUZZ ([12])`),
		regexp.MustCompile(`(?i)acer|a(?:101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)|Android.*V3[67]0(?:[);/ ]|$)|Android.*Z1[23456]0 Build|Android.*Z5\d{2} Build|Android.*T0[234678] Build|Android.*S55(?:[);/ ]|$)|(?:A1-(713(HD)?|7[23]4|830|841|840(?:FHD)?|81[01])|A3-A[1234][01]|B1-(7[1235-9][01](HD)?|7[23]3|7A0|8[1235]0|A71|860A)|TPA60W|B3-(A[125]0|A3[02]|A40FHD)|E39)(?:[);/ ]|$)|S5[12]0 Build|(DA[0-9]+HQ?L|Aspire (?:V5-121|XC-704G|V5-573G|4349)|Chromebook 14 \(CB3-431\)|Predator G9-793|GT-810|B1-870|B3-A20B|B3-A4[02]|B3-A50FHD|ET-108-11A|ATAB1021E|ACTAB721|A3-A20FHD|ATAB721E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DA220HQL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DA241HL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DA[0-9]+HQ?L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1-81[01]`),
		regexp.MustCompile(`(?i)ATAB(1021|721)E`),
		regexp.MustCompile(`(?i)A1-84(1|0(?:FHD)?)`),
		regexp.MustCompile(`(?i)A1-713(HD)?`),
		regexp.MustCompile(`(?i)A1-7[23]4`),
		regexp.MustCompile(`(?i)A3-A[12][01]`),
		regexp.MustCompile(`(?i)A3-A[34]0`),
		regexp.MustCompile(`(?i)B1-7(?:[5-9]0|30HD|A0)`),
		regexp.MustCompile(`(?i)B1-7[123][01]|B1-A71`),
		regexp.MustCompile(`(?i)B1-7[23]3`),
		regexp.MustCompile(`(?i)B1-8[123567]0`),
		regexp.MustCompile(`(?i)B3-A([125]0|3[02]|[45]0FHD|4[02])`),
		regexp.MustCompile(`(?i)A50[01]`),
		regexp.MustCompile(`(?i)(ACTAB721)`),
		regexp.MustCompile(`(?i)E39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E310(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E320(?:-orange)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*V360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*V370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?P400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?P300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?S200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?E100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z1([234])0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z150(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z160(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z(5\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*S57(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T07(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T08(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*S55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer )?(Chromebook R1[13])`),
		regexp.MustCompile(`(?i)(?:Acer )?(Chromebook 14)`),
		regexp.MustCompile(`(?i)(Aspire (?:V5-121|XC-704G|V5-573G|A515-51G|4349))`),
		regexp.MustCompile(`(?i)(Predator G9-793|Aspire E5-511)`),
		regexp.MustCompile(`(?i)Acer; ?([^;\(\)/]+)`),
		regexp.MustCompile(`(?i)Acer[ _\-]?([^;\(\)/]+)[();/ ]`),
		regexp.MustCompile(`(?i)acer[\-_]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)a(101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Adronix[ _]?(?:MT[0-9]+|X1001|Mini ?Tab ?7 ?3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Adronix ?Mini ?Tab ?7 ?3G`),
		regexp.MustCompile(`(?i)Adronix[ _]?(MT[0-9]+|X1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ADVAN (?:M4|S40)|i7U|S45E|S50H|I7D|i55[KD]|i4U|S7D|S4Z|i5[KE]|S5E[ _]NXT|S5J\+|S4\+)(?:[);/ ]|$)|[ ](?:50(?:[46]1|5[89]|62)|600[24])(?: Build|\) AppleWebKit)|(?:E1C_3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S5E[ _]NXT`),
		regexp.MustCompile(`(?i)i(55[KD]|5[KE])`),
		regexp.MustCompile(`(?i) 6004(?: Build|\) AppleWebKit)`),
		regexp.MustCompile(`(?i) 6002(?: Build|\) AppleWebKit)`),
		regexp.MustCompile(`(?i)(S45E|50[46]1|505[89]|5062|S50H|I7D|S7D|S4Z|S5J\+|S4\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hollogram|(?:HL(?:4936|6246|[56]575|5[67]67|9000)|IntroTr3544|Pr(?:61(?:4[56]|50)|60[27]0|5[69]50)|Tr3845|SP[345]701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IntroTr3544|Tr3845`),
		regexp.MustCompile(`(?i)SP([345]701)`),
		regexp.MustCompile(`(?i)Pr(61(?:4[56]|50)|60[27]0|5[69]50)`),
		regexp.MustCompile(`(?i)HL(4936|6246|[56]575|5[67]67|9000)`),
		regexp.MustCompile(`(?i)Hollogram ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(CYGNUSX?|Gravity Z2|ChampionPro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CYGNUSX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CYGNUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gravity Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ChampionPro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy|novo[0-9]|Novo 10 Hero|AX10PRO|NUMY3GAX9|NOVO10 Spark|Aurora-II`),
		regexp.MustCompile(`(?i)Numy[_ ]?3G[_ ]?Sword`),
		regexp.MustCompile(`(?i)NUMY3GAX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy3G_AX10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Novo 10 Hero QuadCore)`),
		regexp.MustCompile(`(?i)Novo7 ?Flame(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOVO7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Novo([0-9]+)[ \-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)AIRNESS-([\w]+)`),
		regexp.MustCompile(`(?i)Airtel[ _]`),
		regexp.MustCompile(`(?i)(AT702)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AW790|M300|AWM(?:53[39]|50[19]|561)|AW500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AW790(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AW500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AWM(53[39]|50[19]|561)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AKAI,|Akai[ _-]|Eco[ _]E2|Glory[ _](?:G[1235]|L[123]|O[125])|TAB-[79]8[03]0Q?|X6 METAL|AKTB-703MZ`),
		regexp.MustCompile(`(?i)TAB-([79]8[03]0Q?)`),
		regexp.MustCompile(`(?i)Glory[ _](G[1235]|L[123]|O[125])`),
		regexp.MustCompile(`(?i)Eco[ _]E2`),
		regexp.MustCompile(`(?i)Akai[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)AKAI,(AK3219NF)`),
		regexp.MustCompile(`(?i)Alba ?(?:57|4|10 TABLET|(?:[78]|10)(?:Nou|Pie))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alba (4)`),
		regexp.MustCompile(`(?i)Alba((?:[78]|10)(?:Nou|Pie))`),
		regexp.MustCompile(`(?i)Alcatel|Alc[^o][^r][^\s][a-z0-9]+|One[ _]?Touch|idol3|TIMXL|(?:(?:4003[AJ]|4009[ADEFIKMSX]|4013[DEJKMX]|4014[ADEKMX]|4015[ADNTX]|4016[ADX]|4017[ADEFSX]|4018[ADEFMX]|4024[DEX]|4027[ADNX]|4028[AEJS]|4032[ADEX]|4034[ADEFGLTX]|4035[ADXY]|4045[ADELX]|4047[ADFGNX]|4049[DEGMX]|4060[SW]|4087U|4114E|5001[ADJTU]|5002[ABDEFJHLMRSX]|5003[ADGU]|5006[ADG]|5007[AGUO]|5008[ADTUY]|5009[AD]|5010[DEGSUX]|5011A|5012[DFG]|5015[ADEX]|5016[AJX]|5017[ABDEOX]|5019D|5022[DEX]|5023[EF]|5024[ADFIJ]|5025[DEG]|5026[ADJ]|5027B|5028[ADY]|5029[ADEFY]|5030[ADEFJMU]|5032W|5033(?:[YX]R|FP|[ADEFGJMOQSTXY])|5034D|5036D|5038[ADEX]|5039[DY]|5041[CD]|5042[ADEFGTWX]|5044[ADGIKOPSTY]|5045[ADFGIJTXY]|5046[ADGIJSTUY]|5047[DIUY]|5048[AIUY]|5049[EGSWZ]|5050[ASXY]|5051[ADEJMTWX]|5052[ADY]|5053[ADKY]|5054[ADNSTWX]|5056[ADEGIJMNTUWX]|5057M|5058[AIY]|5059[ADIJSTXYZ]|5060[ADJ]|5061[AKU]|5065[ADNWX]|5070D|5080[ADFQUX]|5085[ABCDGHIJNOQY]|5086[ADY]|5090[AIY]|5095[IKY]|5098[OS]|5099[ADIUY]|5116J|5145A|6016[ADEX]|6025[DH]|6036[AXY]|6037[BKY]|6039[AHJKSY]|6042D|6043[AD]|6044D|6045[BFIKOXY]|6050[AFY]|6055[ABDHIKPUYZ]|6056H|6058[ADX]|6060[SXC]|6062W|6070K|7040[ADEFKRT]|7041[DX]|7042A|7043[AEKY]|7044[AX]|7045Y|7048[ASWX]|7053D|7055A|7070X|7071[ADX]|8030Y|8050[DEGX]|8063|8088[MQX]|8094M|9001[DIX]|9002X|9003[AX]|9005X|9007[ATX]|9008[ADIJNTUX]|9009[AG]|9010X|9013[AX]|9020A|9022X|9024O|9026X|9027[FQTWX]|9029Z|9032[WXZ]|9203A|A(?:46[46]BG|57[04]BL|576CC|621BL|50[13]DL|57[17]VL)|I213|I216[AX]|80(?:82|6[78]|5[12]))(?:_(?:EEA|RU|TR))?|P3[36]0X|AM-H200|4063F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5022[EDX]|5070D`),
		regexp.MustCompile(`(?i)4015[ATX]|4016A`),
		regexp.MustCompile(`(?i)4015[DN]|4016[DX]`),
		regexp.MustCompile(`(?i)4032[AX]`),
		regexp.MustCompile(`(?i)4032[DE]`),
		regexp.MustCompile(`(?i)7040[AFK]|7041X|7042A`),
		regexp.MustCompile(`(?i)7040[DE]|7041D`),
		regexp.MustCompile(`(?i)4018[ADEFMX]`),
		regexp.MustCompile(`(?i)4035[ADXY]`),
		regexp.MustCompile(`(?i)5038[ADEX]`),
		regexp.MustCompile(`(?i)4045[AXL]`),
		regexp.MustCompile(`(?i)4045[DE]`),
		regexp.MustCompile(`(?i)5042[AFGWX]`),
		regexp.MustCompile(`(?i)5042[DE]`),
		regexp.MustCompile(`(?i)7043[AY]|7044[AX]`),
		regexp.MustCompile(`(?i)7043[EK]`),
		regexp.MustCompile(`(?i)50[16]5X`),
		regexp.MustCompile(`(?i)5015[AE]|5016[AJ]|5065[ADWX]|5116J`),
		regexp.MustCompile(`(?i)5025[DEG]|5054[ADSTX]`),
		regexp.MustCompile(`(?i)5051[AEJMTWX]`),
		regexp.MustCompile(`(?i)5095[IKY]`),
		regexp.MustCompile(`(?i)5056[ADEGJMTUX]`),
		regexp.MustCompile(`(?i)5050[ASXY]`),
		regexp.MustCompile(`(?i)6037[BKY]`),
		regexp.MustCompile(`(?i)7071[ADX]`),
		regexp.MustCompile(`(?i)5002[ABDEHLMSXJ]`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5008R`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5002R`),
		regexp.MustCompile(`(?i)5034D|6056H`),
		regexp.MustCompile(`(?i)7040[RT]`),
		regexp.MustCompile(`(?i)5056[NW]`),
		regexp.MustCompile(`(?i)6016[AX]`),
		regexp.MustCompile(`(?i)6016[DE]`),
		regexp.MustCompile(`(?i)6036[AXY]`),
		regexp.MustCompile(`(?i)6050[AFY]`),
		regexp.MustCompile(`(?i)6039[AHJKYS]|idol3`),
		regexp.MustCompile(`(?i)6045[BFIKOYX]|AM-H200`),
		regexp.MustCompile(`(?i)6055[ABDHIKPUYZ]`),
		regexp.MustCompile(`(?i)6058[ADX]`),
		regexp.MustCompile(`(?i)6060[SX]`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?6060C`),
		regexp.MustCompile(`(?i)6043[AD]`),
		regexp.MustCompile(`(?i)4024[DEX]`),
		regexp.MustCompile(`(?i)4009[AFIKMSX]`),
		regexp.MustCompile(`(?i)4009[DE]`),
		regexp.MustCompile(`(?i)4003[AJ]|4013[DEJKMX]|4014[AEKMX]|4114E`),
		regexp.MustCompile(`(?i)4027[ADNX]|4028[AEJS]|5019D`),
		regexp.MustCompile(`(?i)5017[ABDEOX]`),
		regexp.MustCompile(`(?i)9007[TX]`),
		regexp.MustCompile(`(?i)(?:9009G|9013A)`),
		regexp.MustCompile(`(?i)8082(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8052(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8051(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:806[78]|9013X)(?:_(?:EEA|RU))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4017[ADEFSX]`),
		regexp.MustCompile(`(?i)4034[ADEFGXL]`),
		regexp.MustCompile(`(?i)4060[SW]`),
		regexp.MustCompile(`(?i)5023[EF]`),
		regexp.MustCompile(`(?i)5010[DEGSUX]`),
		regexp.MustCompile(`(?i)5012[DFG]`),
		regexp.MustCompile(`(?i)5045[ADFGIJTXY]|5145A`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5004R`),
		regexp.MustCompile(`(?i)5046[ADIJTUY]`),
		regexp.MustCompile(`(?i)5011A|5049[EG]`),
		regexp.MustCompile(`(?i)9008[ADIJNTUX]`),
		regexp.MustCompile(`(?i)(?:9027[QFTWX]|9032X)`),
		regexp.MustCompile(`(?i)5085[BQ]`),
		regexp.MustCompile(`(?i)5085[ADHIJY]`),
		regexp.MustCompile(`(?i)5090[AIY]`),
		regexp.MustCompile(`(?i)5046[GS]`),
		regexp.MustCompile(`(?i)5085[GO]`),
		regexp.MustCompile(`(?i)5048[AYUI]`),
		regexp.MustCompile(`(?i)8050[GX]`),
		regexp.MustCompile(`(?i)8050[ED]`),
		regexp.MustCompile(`(?i)5098S|9001[DIX]`),
		regexp.MustCompile(`(?i)9003[AX]`),
		regexp.MustCompile(`(?i)I216[AX]`),
		regexp.MustCompile(`(?i)7048[ASWX]`),
		regexp.MustCompile(`(?i)(?:Alcatel-)?OT-802`),
		regexp.MustCompile(`(?i)(?:TRIBE_)?3075A`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch[ _]((?:T[0-9]+|TAB[^/;]+|EVO[78](?:HD)?)) Build`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch([^/;\)]*)\)`),
		regexp.MustCompile(`(?i)5080[ADFQUX]`),
		regexp.MustCompile(`(?i)4049[DEGMX]`),
		regexp.MustCompile(`(?i)5044[ADIKOPTY]`),
		regexp.MustCompile(`(?i)4047[DFXN]`),
		regexp.MustCompile(`(?i)5047[DIUY]`),
		regexp.MustCompile(`(?i)4044[CV]`),
		regexp.MustCompile(`(?i)(?:Alcatel)?4044[MNT]`),
		regexp.MustCompile(`(?i)5044[GS]`),
		regexp.MustCompile(`(?i)5033[ADJEFGMOTXYQS]`),
		regexp.MustCompile(`(?i)5009[AD]`),
		regexp.MustCompile(`(?i)5008[ADUYT]`),
		regexp.MustCompile(`(?i)5007[AGU]`),
		regexp.MustCompile(`(?i)5003[ADGU]`),
		regexp.MustCompile(`(?i)5006[ADG]`),
		regexp.MustCompile(`(?i)5024[ADFIJ]|5028Y|6025[DH]`),
		regexp.MustCompile(`(?i)(?:5028[AD]|5007O)`),
		regexp.MustCompile(`(?i)5030[ADFJMU]`),
		regexp.MustCompile(`(?i)5001[ADJTU]`),
		regexp.MustCompile(`(?i)5059[ADJXYZIT]`),
		regexp.MustCompile(`(?i)5060[ADJ]`),
		regexp.MustCompile(`(?i)5052[ADY]|5053[ADKY]`),
		regexp.MustCompile(`(?i)5029[ADFY]`),
		regexp.MustCompile(`(?i)5032W|5099[ADYUI]`),
		regexp.MustCompile(`(?i)5026[ADJ]`),
		regexp.MustCompile(`(?i)5039[DY]`),
		regexp.MustCompile(`(?i)5058[AIY]`),
		regexp.MustCompile(`(?i)5061[AKU]`),
		regexp.MustCompile(`(?i)5086[ADY]`),
		regexp.MustCompile(`(?i)8088[XQM]`),
		regexp.MustCompile(`(?i)9032[WZ]`),
		regexp.MustCompile(`(?i)(?:ALCATEL_)?A383G`),
		regexp.MustCompile(`(?i)ALCATEL([^/;]+) Build`),
		regexp.MustCompile(`(?i)ALCATEL[ \-]?([^/;\)]+)`),
		regexp.MustCompile(`(?i)ALCATEL_([^/;\)]+)`),
		regexp.MustCompile(`(?i)Alc([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Access_Q784C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Alfawise (?:A9)|(?:A95X_R1|Z28Pro))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A95X_R1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z28Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfawise (A9)`),
		regexp.MustCompile(`(?i)ALIGATOR[_ ]`),
		regexp.MustCompile(`(?i)ALIGATOR[ _](S4080|S50(?:6[56]|[678]0)|S5540|RX510|S6[05]00|RX710|RX800|S5520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AllCall_|Heat[34]|Rio_X(?:[);/ ]|$)|Hot ?[125][^;/]+ Build`),
		regexp.MustCompile(`(?i)AllCall_(Alpha|Atom|Bro|Madrid)`),
		regexp.MustCompile(`(?i)Heat([34])`),
		regexp.MustCompile(`(?i)Rio_X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hot ?([125][^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:T1001XS?|T1006S?|T1001|iPlay_[234]0|U1006H?|U63PLUS|iPlay8|iPlay_?8T|iPlay[34]0|iPlay_40H|iPlay20S|kPad|X_Game)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001XS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kPad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1006S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U63PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U1006H?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iPlay_?([234]0|8T?|40H|20s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X_Game(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Allview|A4You|H1003_LTE_PRO|A5_(?:Easy(?:_TM)?|Ready(?:_TM)?|Quad|Quad_Plus_TM)|A[5-9]_Lite|A5Smiley|A6_Duo|A10_Lite_(?:2019|2GB)|A10_(?:Plus|Max)|AX2_Frenzy|AX4Nano|AX5NanoQ|C6_Duo|E[23]_Living|E3_(?:Jump|Sign)|E4_Lite|M9_Connect|P(?:43_Easy|[5689]_Energy|6_Energy_Lite|[68]_Energy_Mini(?:_TM)?|(41|[458])_eMagic(?:_TM)?|[589](?:_)?Life(?:_TM)?|[567]_Lite(?:_TM)?|6_plus|[45678]_Pro|7_Seon|10_Life|10_Max|10_Style|7_Xtreme|6_Qmax|4_Quad)|V(?:[134]_Viper|1_Viper_I|2_Viper_(?:[EISX]|X_plus|Xe))|X4_Soul_Vision|X(?:[1-46]_Soul_Xtreme|[1-5]_Soul|3_Soul_Lite|[2-6]_Soul_Mini(?:_TM)?|4_Soul_Mini_S(?:_TM)?|[2-58]_Soul_Style(?:_TM)?|2_Soul_Style_Plus|2_Twin)|Viva_(?:H801|100[13]G|(?:H100[12]|H701|H802)_LTE|C701|i701G|803G)`),
		regexp.MustCompile(`(?i)E([23])_Living`),
		regexp.MustCompile(`(?i)P(41|[458])_eMagic(?:_TM)?`),
		regexp.MustCompile(`(?i)P([567])_Lite(?:_TM)?`),
		regexp.MustCompile(`(?i)P([45678])_Pro`),
		regexp.MustCompile(`(?i)P([69])_Energy_Lite`),
		regexp.MustCompile(`(?i)P([689])_Energy_mini(?:_TM)?`),
		regexp.MustCompile(`(?i)P([5689])_Energy`),
		regexp.MustCompile(`(?i)P([589])(?:_)?Life(?:_TM)?`),
		regexp.MustCompile(`(?i)V([12])_Viper_I4G(?:_TM)?`),
		regexp.MustCompile(`(?i)V([134])_Viper`),
		regexp.MustCompile(`(?i)V2_Viper_(E|I|S|X(?:e)?)`),
		regexp.MustCompile(`(?i)X([1246])_Soul_Xtreme`),
		regexp.MustCompile(`(?i)X4_Soul_Infinity_(L|N|S|Z)`),
		regexp.MustCompile(`(?i)X([34])_Soul_Lite`),
		regexp.MustCompile(`(?i)X4_Soul_Mini_S(?:_TM)?`),
		regexp.MustCompile(`(?i)X([23456])_Soul_Mini(?:_TM)?`),
		regexp.MustCompile(`(?i)X([35])_Soul_Pro`),
		regexp.MustCompile(`(?i)X([23458])_Soul_Style(?:_TM)?`),
		regexp.MustCompile(`(?i)X([12345])_Soul`),
		regexp.MustCompile(`(?i)A5_Easy(?:_TM)?`),
		regexp.MustCompile(`(?i)A([56789])_Lite`),
		regexp.MustCompile(`(?i)A5_Ready(?:_TM)?`),
		regexp.MustCompile(`(?i)Viva_(H801|100[13]G|(?:H802|H100[12]|H701)_LTE|C701|i701G|803G)`),
		regexp.MustCompile(`(?i)ALLVIEW ?SPEEDI`),
		regexp.MustCompile(`(?i)ALLVIEW ?SPEED`),
		regexp.MustCompile(`(?i)Allview[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Allview[ _-]([^;/]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:QUAD-CORE (?:T3 p1|A64 p3|A33 y3|T3 K2001M|T3 k2001o|T3 k2001-nwd)|ZY-07B|UltraOcta-T8|OCTA-CORE T8|OCTOPUS-CORE T8|QuadCore-R16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUAD-CORE T3 K(2001M?)`),
		regexp.MustCompile(`(?i)(?:FF-5000|ZQ8003)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FF-5000)`),
		regexp.MustCompile(`(?i)(ZQ8003)`),
		regexp.MustCompile(`(?i)Altice[ _](S62|S31|S43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AFT[ABMNRST]|AFTSSS?|AFTKA|SD4930UR|AEO(?:BC|C[HW]|KN)|KF(?:OT|ONWI|TT|JWI|JWA|[DFS]OWI|A[PRSU]WI|T[BH]WI|TRP?WI|SAW[IA]|GIWI|KAWI|MAWI|MEWI|MUWI|SUWI))(?:[);/ ]|$)|Kindle|AlexaMediaPlayer|Amazon (?:Tate|Jem)|Silk/\d+\.\d+|Echo/1|.+FIRETVSTICK`),
		regexp.MustCompile(`(?i)AFT[MST]`),
		regexp.MustCompile(`(?i).+FIRETVSTICK2018`),
		regexp.MustCompile(`(?i)KFFOWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFJWI(?:[);/ ]|$)|Amazon Jem`),
		regexp.MustCompile(`(?i)KFJWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSOWI(?:[);/ ]|$)|Amazon Tate`),
		regexp.MustCompile(`(?i)KFTHWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTHWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAPWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAPWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFARWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFASWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMEWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFGIWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFDOWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFKAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFONWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSAWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTBWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTRWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTRPWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFOT|Kindle Fire|Silk/\d+\.\d+`),
		regexp.MustCompile(`(?i)Echo/1|AEO(?:BC|KN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AEOC[HW](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMIGOO (R300|R9 Max|M1 Max|X15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Amigo7x?(?:YUF|SCB)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amoi|(?:A862W|Clever[ -]?(?:Gem S52|Gleam S45|Pad P7|Wave S50|Touch S46|JOY S40|Lite S41))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Clever[ -]?(Gleam S45|Gem S52|Wave S50|Touch S46|Lite S41)`),
		regexp.MustCompile(`(?i)Amoi[-_ /](CA6)`),
		regexp.MustCompile(`(?i)Amoi[-_ /]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Amoisonic-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:ANDOWL-)?(Q[45]|QG9)(?:[);/ ]|$)|Andowl`),
		regexp.MustCompile(`(?i)angelcare[ _]`),
		regexp.MustCompile(`(?i)F20 ?pro`),
		regexp.MustCompile(`(?i)angelcare[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)AFTMM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANRY-(RS10|[SX]20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AOCOS ([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)aoson(?:R10[1-3]|S[78]|M707TG)(?:[_ ]?Pro)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aosonR10([1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aosonS7_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aosonS7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aosonS8Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson(M707TG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:iTunes-)?Apple[ _]?TV|Apple\/|(?:Apple-|iTunes-)?[^l][^i][^k][^e][^\s](?:iPad|iPhone)|iPh(?:[0-9]|1[0-4]),[0-9]|CFNetwork|HomePod|AirPlay|Watch ?OS|Watch1,[12]|MDCR_Mac|ICRU_iP(?:ad|hone)|Mac OS X[,;]|macOS,`),
		regexp.MustCompile(`(?i)Watch3,[13]`),
		regexp.MustCompile(`(?i)Watch3,[24]`),
		regexp.MustCompile(`(?i)Watch5,(?:9|11)`),
		regexp.MustCompile(`(?i)Watch5,1[02]`),
		regexp.MustCompile(`(?i)Watch([456]),[13]`),
		regexp.MustCompile(`(?i)Watch([456]),[24]`),
		regexp.MustCompile(`(?i)Watch6,[68]`),
		regexp.MustCompile(`(?i)Watch6,[79]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacPro2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacPro3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacPro4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacPro5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac11(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac11(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac11(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac12(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac13(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac13(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac14(?:%2C|,)[13]`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac14(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac14(?:%2C|,)4`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac17(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac18(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac18(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac19(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac19(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac20(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac21(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:.+_)?iMacPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook[45](?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir3(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir4(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir6(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir7(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro1(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro2(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro[34](?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro5(?:%2C|,)[34]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro5(?:%2C|,)5`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro6(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro8(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro9(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro10(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro11(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro11(?:%2C|,)[23]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro11(?:%2C|,)[45]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro13(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro13(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro14(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro14(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro15(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro15(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro15(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro15(?:%2C|,)4`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro16(?:%2C|,)[14]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro16(?:%2C|,)[23]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro17(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro18(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro18(?:%2C|,)[34]`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini5(?:%2C|,)[123]`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini6(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?PowerMac7(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?PowerMac7(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:.+_)?PowerMac8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?PowerMac10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?PowerMac12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?PowerBook5(?:%2C|,)6`),
		regexp.MustCompile(`(?i)(?:.+_)?PowerBook6(?:%2C|,)7`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?1[C,_]1`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?1[C,_]2`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?2[C,_]1| 3GS\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?3[C,_][123]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?4[C,_]1|1C2%254enohPi| 4S\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?5[C,_][12]| 5\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?5[C,_][34]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?6[C,_][12]| 5S\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?7[C,_]1|1C2%257enohPi| 6PLUS\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?7[C,_]2| 6\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?8[C,_]2| 6SPLUS\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?8[C,_]1|iPhone[ /]6s| 6S\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?8[C,_]4| SE\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?9[C,_][13]|iphone7 | 7\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?9[C,_][24]| 7PLUS\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?10[C,_][14]| 8\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?10[C,_][25]| 8PLUS\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?10[C,_][36]|iPhone X| X\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?11[C,_]2| XS\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?11[C,_][46]|iPhoneXSMax| XSMAX\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?11[C,_]8| XR\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?12[C,_]1|iPhone 11| 11\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?12[C,_]3| 11PRO\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?12[C,_]5| 11PROMAX\)$|iPhone_11_Pro_Max`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?12[C,_]8| SE2\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?13[C,_]1| 12MINI\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?13[C,_]2| 12\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?13[C,_]3| 12PRO\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?13[C,_]4| 12PROMAX\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?14[C,_]2| 13PRO\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?14[C,_]3| 13PROMAX\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?14[C,_]4| 13MINI\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?14[C,_]5| 13\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?14[C,_]6`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad1[C,_]1`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad2[C,_][1-4]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad2[C,_][567]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad3[C,_][123]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad3[C,_][456]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad4[C,_][123]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad4[C,_][456]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad4[C,_][789]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad5[C,_][12]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad5[C,_][34]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad6[C,_][34]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad6[C,_][78]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad6[C,_](?:11|12)`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad7[C,_][12](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad7[C,_][34](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad7[C,_][56](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad7[C,_](?:11|12)(?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad8[C,_](?:9|10)`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_]4`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_][5-7]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad8[C,_]1[12]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad8[C,_][1-4]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad8[C,_][5-8]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad11[C,_][12]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad11[C,_][34]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad11[C,_][67]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad12[C,_]1`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad12[C,_]2`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_]8`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_](?:9|10|11)`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_]16`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_]17`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_]1`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_]2`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad14[C,_]1`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad14[C,_]2`),
		regexp.MustCompile(`(?i)Apple-?TV2[C,_]1`),
		regexp.MustCompile(`(?i)Apple-?TV3[C,_][12]`),
		regexp.MustCompile(`(?i)Apple-?TV5[C,_]3`),
		regexp.MustCompile(`(?i)Apple-?TV6[C,_]2`),
		regexp.MustCompile(`(?i)Apple-?TV11[C,_]1`),
		regexp.MustCompile(`(?i)(?:iTunes-)?Apple[ _]?TV`),
		regexp.MustCompile(`(?i)iTunes-iPad/[0-9]+(?:\.[0-9]+)* \(([^;]+);`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad`),
		regexp.MustCompile(`(?i)iTunes-iPhone/[0-9]+(?:\.[0-9]+)* \(([^;]+);`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPhone ?(3GS?|4S?|5[CS]?|6(:? Plus)?)?`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos|(?:A50TI|AC101BHE|AC50BHE|AC45NE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos (Oxygen (?:63|57|68XL))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A50TI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC45NE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos ?5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC101BHE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC50BHE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos 80 Oxygen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos 101 Oxygen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Oxygen 101S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos ([^/;]*(?:PAD)[^/;]*) Build`),
		regexp.MustCompile(`(?i)Archos ((?:[789]|10)[0-9]?[a-z]* ?(?:G9|G10|Helium|Titanium|Copper|Cobalt|Platinum|Xenon|Carbon|Neon|XS|IT)[^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos ([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\))|Impulse[ _]P[12]|(?:EDGE A5HD|Elf_S8|ICON (R40\+|R45)|Wizard_[12]|UKOZI U5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)Impulse[ _]P1\+`),
		regexp.MustCompile(`(?i)Impulse[ _](P[12])`),
		regexp.MustCompile(`(?i)EDGE (A5HD)`),
		regexp.MustCompile(`(?i)ICON (R40\+|R45)`),
		regexp.MustCompile(`(?i)Wizard_([12])`),
		regexp.MustCompile(`(?i)Elf_S8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UKOZI U5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TSD Octa A0520P|TSD Quadra A050[59]P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arnova|ARCHM901|AN7CG2|AN7G2(DTE|I)?|AN7[BCDFH]?G3|A80KSC|AN8G2|AN8[BC]?G3|AN9G2I?|AN9G3|A101[BC]|AN10G2|AN10BG2(DT|I)?|AN10BG3(DT)?|AN10[CD]G3`),
		regexp.MustCompile(`(?i)AN7G2I|AN7G2|AN7G2DTE`),
		regexp.MustCompile(`(?i)A101B2|A101C|AN10G2`),
		regexp.MustCompile(`(?i)AN10BG2|AN10BG2DT|AN10BG2I`),
		regexp.MustCompile(`(?i)AN10BG3|AN10BG3DT|AN10BG3-LZ`),
		regexp.MustCompile(`(?i)Arnova ([^/;]*) Build`),
		regexp.MustCompile(`(?i)ARTLINE[ _-](KMX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artel[_ ]|\w+_ARTEL_\w+|(?:GAP YOQ| ALO|U1 MINI|Android 8.+; U4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAP YOQ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U1 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 8.+ U4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) ALO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artel[_ ](Quadro(?: Pro)?|Tesla|Air|Tomchi|Premium|U3_4G|Z5|Sentinel (?:X 8G|X D5|X)|T10)`),
		regexp.MustCompile(`(?i)Artel[_ ]Komi3`),
		regexp.MustCompile(`(?i)Artel[_ ]Q21_PRO`),
		regexp.MustCompile(`(?i)Artel[_ ](Star|Nova|Connect|Choice|Style)`),
		regexp.MustCompile(`(?i)(?:\w+_)?ARTEL_([FVM]5|X[45])_\w+`),
		regexp.MustCompile(`(?i)Artizlee[ _]S9|ATL-(?:16|21(?:PLUS|[XT])?|31|26)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATL-21PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ATL-(?:16|21[XT]?|31|26))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artizlee[ _]S9`),
		regexp.MustCompile(`(?i)(?:32LH7010T|32LH7030S|32LF7130S|28LH7011T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2})(L[FH]\d+[ST])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASANZO[ _](?:A2|S[23]|[SZ]5|S3_PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASANZO[ _]S3[ _]PLUS`),
		regexp.MustCompile(`(?i)ASANZO[ _](A2|S[23]|[SZ]5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASK[ _]`),
		regexp.MustCompile(`(?i)ASK[ _]791SP[ _]3G`),
		regexp.MustCompile(`(?i)ASK[_ ]([^/;]*) Build`),
		regexp.MustCompile(`(?i)ASPERA|(?:Wren)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASPERA[ _](R5h|R9|RT3|A4[02]|A50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wren(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AS[-_](?:50[123]|543[1-6]|44[12]1|541[12]|54[23]1|6431|[46]01L)|AP-(?:109|115G|721N|753G|7[25]7G|10[68]|107G|110N|941|719))[;/)_ ]`),
		regexp.MustCompile(`(?i)AS[-_]401L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5432(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS[-_](?:5434|501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS_601L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5433 Secret(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5433(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5421(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-44[12]1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5435(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5436[ _]`),
		regexp.MustCompile(`(?i)AS-6431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5411[_ ]`),
		regexp.MustCompile(`(?i)AS-5412 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-721N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-941(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-108(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-106(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AP-(?:109|115G|7[25]7G|753G|107G|110N|719))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AS-(?:\d+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[- ](S451|S501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Asus|Transformer|ZenFone Max|MeMOPad 10|TF300T|Slider SL101|PadFone|ME302(?:C|KL)|ME301T|ME371MG|ME17(?:1|2V|3X)|(?:K0[01][0-9a-z]|(?:P(?:00[128ACIL]|01[MTVWYZ]|01MA|01T_1|02[13478])(?: Build|\))|X015D|X018D|X003|X00[7ABT]D|Z00D|Z00[MTY]D|Z01[7FGHKMR]D)|K01[579N]|AST21)(?:[);/ ]|$)|G55[023]KL|ZB(631|602|633|55[135]|50[01])KL|ZC(55[134]|520|600)KL|ZA550KL|ZE(5[02]0|620|55[2345])KL|ZD55[23]KL|ZS6(?:61|7[02136])KS|ZS(6[0236]0|55[10])KL|ZS590KS|ZB(500KG|601KL)|MeMo Pad FHD 10 LTE|Z00[SV]D|P01Y_S|Zenfone 5Z|AOSP on Duma`),
		regexp.MustCompile(`(?i)ME171(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASUS Z906(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME302C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ME302KL|MeMOPad 10FHD LTE|MeMo Pad FHD 10 LTE|AOSP on Duma)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME301T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z101 Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X Pad 10 LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[3A7]|K007|K00R)(?:[);/ ]|$)|MeMO Pad 7`),
		regexp.MustCompile(`(?i)K01E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00U|ME173X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[15]|K00L|AST21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TF300T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K01B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P01[YZ](?:_S)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00J`),
		regexp.MustCompile(`(?i)P01[VW]|P002`),
		regexp.MustCompile(`(?i)(?:P024|P00A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P01MA?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASUS_(w706)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00I`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00C|P02[138]|P00L|P01T_1`),
		regexp.MustCompile(`(?i)ME371MG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[2N9]|K00E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K016(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00N`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00[CE]`),
		regexp.MustCompile(`(?i)(?:ASUS[-_])?T00T`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A002(A)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I006D|ZS590KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I004D|ZS672KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A006`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A009`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z007`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00P[SD]|ZB555KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZB60[12]KL)|ZenFone Max Pro M1`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X01([AB]D)|ZB633KL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z00[AD]|Z008D|Z008|Z00AD[AB]?|ZE551ML)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZenFone 2E)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:A007|Z00YD|ZA550KL|ZB553KL|ZB501KL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00RD|G552KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z00[ERLMTW]D|Z011D|ZE500KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00[IQ1]|Z01KD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00[JF]|X00QD|X00QSA|ZE620KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00P`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00K|X017DA|X017D|ZC600KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z01RD|ZS620KL)|Zenfone 5Z`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00G|Z002|ZS630KL|I01WD[X]?)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZS671KS`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZS670KS|I002D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z010D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X018D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X00TD?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X01BDA|ZB631KL|Zenfone Max Pro M2)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X014D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(L001|X00[7AB]D|X009[DB][DA]|X009D|Z00[SV]D|ZB500K[LG]|ZB551KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X013D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?G550KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00[SV]D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00[23])`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X005`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X550`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00GD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00D[DS]|X008D)|ZC553KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X008)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(ZE553KL|Z01HDA?)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZS550KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00UD`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(Z016[DS]|Z01FD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z(?:017DA|E520KL|E552KL|017D|012(?:DC?|S))`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z01B[DS]|ZC551KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A001`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZD552KL|Z01MDA?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00LDA|ZD553KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00LD|Z01KS|Z01KDA|ZE554KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X00(?:[HIK]D|IS)|ZC554KL|ZC520KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X015D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(:?Z01G[DS]|ZS551KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00XS`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z01QD|ZS600KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I001D[ABCE]?|ZS660KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I003DD?|ZS661KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I005D[AC]?|ZS67[36]KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZenWatch( 2)?`),
		regexp.MustCompile(`(?i)Asus(?:-|;)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(PadFone(?: [^;/]+)?) Build`),
		regexp.MustCompile(`(?i)(PadFone(?: [a-z0-9]+)?)`),
		regexp.MustCompile(`(?i)(?:Asus|Transformer) ((?:Pad |Prime )?TF[0-9a-z]+)`),
		regexp.MustCompile(`(?i)Chromebook Flip (C10[01]PA|C302)`),
		regexp.MustCompile(`(?i)ATOM-(108AM|216RK|216AM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(100011886BK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Audiovox|CDM|UTS(?:TARCOM)?\-|audio[a-z0-9\-]+`),
		regexp.MustCompile(`(?i)Audiovox[_\-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)CDM(?:-)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)UTS(?:TARCOM)?-([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)audio([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)R2021W2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(R2021W2)`),
		regexp.MustCompile(`(?i)Avenzo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOB4 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOB4PRO 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avvio[ _]?([a-z0-9\-]+)|(?:CHIVAS_55|Colombia_2018|Mint_M353)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avvio[ _]PAD`),
		regexp.MustCompile(`(?i)Avvio[ _]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(UTBook)`),
		regexp.MustCompile(`(?i)PICOp(?:hone|ad)_`),
		regexp.MustCompile(`(?i)PICOphone_(L1|M4N|M4P_M3|M4U_M2_M)`),
		regexp.MustCompile(`(?i)PICOpad_(7H_7)_3G`),
		regexp.MustCompile(`(?i)Axxion ATAB-[0-9]+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Axxion ATAB-([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azumi[_ -]|(?:SPEED55|A50_Style_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azumi[_ -]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Azumi[_ -]([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)bb-mobile|Techno[-_ ](8\.0|9\.7|TQ863Q|X595BT|X800BJ|S700BF|I700AJ|10.1 LTE TQ060X|7.0 LTE TQ763I|I785AP|I101BI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]S700BF(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]10.1 LTE TQ060X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]TQ863Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]I700AJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[-_ ]I785AP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]X800BJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[-_ ]I101BI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]7.0 LTE TQ763I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FirstTab TP-17)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ](9\.7|8\.0) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ](?:X595BT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([65]5|50|4[03]|3[29]|28)LEX[-_](81(?:27|39|45|58|6[12]|7[34])|71(?:[23]7|4[345]|5[45]|6[368]|[57]8))[_/]([FU]?TS2C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BDF[- ](?:819|P10|M107|K107H|KT107|MT6753|X20)|K960N_MT(?:6580|6753)(?:_32_N)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BDF[- ](819|P10|M107|K107H|KT107|MT6753|X20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K960N_MT(6580|6753)(_32_N)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SMART_B19|Destiny)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BGH ([^/;\)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Y([17]00|2[01]0|1010)`),
		regexp.MustCompile(`(?i)BGH (\+Simple|Mini)`),
		regexp.MustCompile(`(?i)BGH ([^/;\)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(ZBH-)?BIHEE`),
		regexp.MustCompile(`(?i)(A1[1268]|A[78]\+|A[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I10(Plus)?_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RUNE III?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RUNE (III?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nook|BN[TR]V[0-9]+`),
		regexp.MustCompile(`(?i)Nook([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Nook[ _]([^/;]+)[ _]Build`),
		regexp.MustCompile(`(?i)(BN[TR]V[0-9]+)`),
		regexp.MustCompile(`(?i)Becker-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Beeline|A239s(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Beeline[_ ]Pro[_ ]([2436])`),
		regexp.MustCompile(`(?i)Tab (Fast(?: 2)?|Pro)`),
		regexp.MustCompile(`(?i)Tab ([0-9])`),
		regexp.MustCompile(`(?i)E([67]00)`),
		regexp.MustCompile(`(?i)(?:Beeline[_ ])?Smart[ _]?([0-9])`),
		regexp.MustCompile(`(?i)(?:Beeline[_ ])?Fast[_ ]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fast(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A239s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Beelink (?:G[ST]1|LAKE I|SEA I|A1)|GTKing(?:_AT)?|GT1mini-2|GT1-mini(?:[-_]AT)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beelink (G[ST]1|LAKE I|SEA I|A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT1-mini(?:-AT)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT1mini-2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTKing PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTKing(?:_AT)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beetel ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(X104)-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bp100 X-Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BENQ(?:[ \-])?([a-z0-9]+)|(?:F52_09|F5_15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F(52|5)_(?:15|09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BENQ(?:[ \-])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)BENQ-SIEMENS - ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Benco[_ ]|(?:AE9010|AE9950)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB-A03-BS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Class S300 LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SURVE(10|[26-8]|[12] PRO)|Home9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURVE([12]) PRO`),
		regexp.MustCompile(`(?i)SURVE(10|[26-8])`),
		regexp.MustCompile(`(?i)BEZKAM (BK-RAM2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAMETAB-ONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BilimBook mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Capture\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BioWolf 8-F30|BIOWOLF8F30|Ruggbo 20 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BioWolf 8-F30|BIOWOLF8F30`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+)`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+)`),
		regexp.MustCompile(`(?i)Bitel[ _-]([^/;]+) Build|(?:B(?:840[5-9]|841[0456]|850[2346]|860[146]|9401|950[1-5])|S8402L?|S8501L?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B(?:840[5789]|841[0456]|850[2346]|860[146]|9401|950[12345])|S8402L?|S8501L?)`),
		regexp.MustCompile(`(?i)Bitel[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:Mobitab10c-3G|Tab1011Q_II|Colortab[ _]?(10(?:M| II)?|816i))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Mobitab)(10)c-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab1011Q_II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Colortab[ _]?(10(?:M| II)?|816i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tough Mobile 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bphone[ _](B111[45]|B2017)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B6 Master|B6 Note X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BMM[ _-]?(?:44[123]D|441[AWB]|44[12]S|431[SD]|53[23]D|54[12]S|541[ABW]|54[123]D|543S|531[ABD]|532 S|531S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BMM441[AS]`),
		regexp.MustCompile(`(?i)BMM442S|BMM441B`),
		regexp.MustCompile(`(?i)BMM543[DS]`),
		regexp.MustCompile(`(?i)BMM[ _-]?(53[23]D|431[DS]|54[12]S|531S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blackview|(BV([24-9]000|[46]900|(5[1589]|9[15689])00|6[1368]00)(?:[ _](?:PRO))?|(P10000(?:[ _](?:PRO))?)|omega[ _]pro|Alife[ _][PS]1|Heatwave|DM550|BV9700Pro|A[68]0(?:Pro)?\))|(?:A[86]0Plus|A80S|BL6000Pro|R6 Lite|P2Lite|A8 MAX|A20Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A([268]0)Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A60\)`),
		regexp.MustCompile(`(?i)A8 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A80S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A[86]0|BV[59]500)Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BV6000S)`),
		regexp.MustCompile(`(?i)(P2|R6) ?Lite`),
		regexp.MustCompile(`(?i)(BL6000|BV(?:[0-9]+))Pro`),
		regexp.MustCompile(`(?i)Blackview (A[78]|E7S)`),
		regexp.MustCompile(`(?i)(BV6[13]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BV([24-9]000|6[69]00|4900|9[69]00E|(5[1589]|9[15689])00)(?:[ _](?:PRO))?)`),
		regexp.MustCompile(`(?i)(P10000(?:[ _](?:PRO))?)`),
		regexp.MustCompile(`(?i)omega[ _]pro`),
		regexp.MustCompile(`(?i)(Alife[ _][PS]1|DM550|Heatwave)`),
		regexp.MustCompile(`(?i)Blaupunkt|Soundphone S2|Atlantis[_ ](?:1001A|1010A|A10\.G40[23])|SLplus02|Discovery[_ ](?:A10_302|111C|1000C|1001A?)|Endeavour[_ ](?:785|101[GLM]|1000|1001|101[03]|1100)|Polaris[_ ]803|BP_6010`),
		regexp.MustCompile(`(?i)Discovery[_ ]111C`),
		regexp.MustCompile(`(?i)Discovery[_ ]A10_302`),
		regexp.MustCompile(`(?i)Discovery[_ ]1000C`),
		regexp.MustCompile(`(?i)Discovery[_ ]1001A`),
		regexp.MustCompile(`(?i)Discovery[_ ]1001`),
		regexp.MustCompile(`(?i)Endeavour[_ ](101[GLM]|785|100[01]|101[03]|1100)`),
		regexp.MustCompile(`(?i)Polaris[_ ](803)`),
		regexp.MustCompile(`(?i)Atlantis[_ ](1001A|1010A|A10\.G40[23])`),
		regexp.MustCompile(`(?i)(BP_6010)`),
		regexp.MustCompile(`(?i)Blaupunkt[_ ](SL[_ ]0[124]|SM[_ ]0[12])`),
		regexp.MustCompile(`(?i)(SF02)`),
		regexp.MustCompile(`(?i)(4K Android TV)`),
		regexp.MustCompile(`(?i)(?:BE_(xl|se|o2|fr|et|dg)|BL-919845)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE_(xl|se|o2|fr|et|dg)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Zero18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LaserTAB10|PlatinumTAB10_4G_V\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PlatinumTAB10_4G_(V\d)`),
		regexp.MustCompile(`(?i)BLU[ _]|(?:blu|Dash)[ _]([^/;)]+)(?: Build|[;)])|(?:Studio[ _](X12|5.0K|5.5|View XL|Mega|C 8\+8|[CGM][ _]HD|G2 HD|[CGX]|SELFIE|Selfie LTE|Touch|M5 Plus|J[1258]|X8 HD|X10\+?|XL(?: 2)?)|Advance (4.0 ?[LM]|5.[02](?: HD)?|A4|L[45])|M6 2021|ENERGY (DIAMOND|XL)|Energy X 2|LIFE XL|B110DL|Dash (?:X[2L]|L3)|PURE (?:X[LR]|MINI|View)|Life One X2|G50 (?:Mega|Plus)|G51 Plus|G90(?: PRO)?|G91 Pro|GRAND (?:M3|Max|5.5 HD|XL LTE|Mini)|R1 (?:HD|PLUS)|R2 (?:LTE|Plus)|Tank Xtreme [45].0|Tank Xtreme(?: Pro)?|Touchbook M7 Pro|DASH X PLUS|C[456] 2019|BOLD (?:M7|N1)|B1[34]0DL|Vivo (?:5 Mini|One Plus|5R|XL[234]| Plus|8L|XI[+]?|GO)|C[56]L(?: 2020)?|C6 2020|G9 PRO|D701|VIEW 1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Advance (4.0 ?[LM]|4.0|5.[02](?: HD)?|A4|L[54])`),
		regexp.MustCompile(`(?i)M6 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Studio[ _](5.0 C|5.5|C 5\+5 LTE|View XL|Mega|C 8\+8|[CG][ _]HD|C|G|Touch|M HD|G2 HD|M5 Plus|J[1258]|X8 HD|X5|X10\+?|XL(?: 2)?|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Studio[ _]5.0 ?K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STUDIO[_ ](X12)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STUDIO SELFIE ([23]|LTE)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?NEO_ENERGY_MINI`),
		regexp.MustCompile(`(?i)DASH[ _]X[ _]PLUS[ _]LTE`),
		regexp.MustCompile(`(?i)DASH 4.5`),
		regexp.MustCompile(`(?i)PURE (X[LR]|View)`),
		regexp.MustCompile(`(?i)BOLD (M7|N1)`),
		regexp.MustCompile(`(?i)LIFE ONE (X2?)`),
		regexp.MustCompile(`(?i)NEO (XL|X)`),
		regexp.MustCompile(`(?i)G(90?) PRO`),
		regexp.MustCompile(`(?i)(G90|D701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRAND 5.5 HD`),
		regexp.MustCompile(`(?i)R([12]) PLUS`),
		regexp.MustCompile(`(?i)C([456]) 20(19|20)`),
		regexp.MustCompile(`(?i)Tank Xtreme ([45]).0`),
		regexp.MustCompile(`(?i)C([56])L 20(20|21)`),
		regexp.MustCompile(`(?i)C([56])L`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?VIVO[ _]SELFIE`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo 5 Mini`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo (One|XL3|XI)(?: Plus|[+])`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo (5R|XI|XL[234]|8L)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?VIVO GO`),
		regexp.MustCompile(`(?i)STUDIO 7.0 II`),
		regexp.MustCompile(`(?i)DASH (L[45] LTE|5.0|L[45]X|L3|X2|[LMX])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DASH[ _]([^)/;]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)blu[ _]([^/;]+)( Build|[);])`),
		regexp.MustCompile(`(?i)Bluboo|Maya Build|(?:Picasso(?: 4G)?|Xfire2?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Picasso(?: 4G)?`),
		regexp.MustCompile(`(?i)(?:Bluboo[_ ])?S8[_ ]plus`),
		regexp.MustCompile(`(?i)Bluboo[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Bluboo[ _-]?([^;/)]+)`),
		regexp.MustCompile(`(?i)(VF550|EF501R)(:_RU)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLUEDOT[_ ]|(?:BNT-71)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLUEDOT[_ ])?(BNP-500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BNT-71)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:33GT HD|WV8R-M|WV8R[_-]N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WV8R[_-]N`),
		regexp.MustCompile(`(?i)Bmobile[_ ]|B60Pro_MV03|BL54_?Pro|(?:B50Pro|FUN 4 2018|AX-?(?:[1-9][0-9]{2,3}[eEO+]?|7OO))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AX-?([1-9][0-9]{2,3}[eEO+]?)`),
		regexp.MustCompile(`(?i)BL54_?Pro`),
		regexp.MustCompile(`(?i)Bmobile[_ ]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Bmobile[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:K10[ ]?SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:sprd-)?(BOWAY)`),
		regexp.MustCompile(`(?i)BOWAY[ _-]([^/;]+)[ _]Build`),
		regexp.MustCompile(`(?i)([^/;]+) Build/BOWAY`),
		regexp.MustCompile(`(?i).*BOWAY[ _-]([^/;]+)/`),
		regexp.MustCompile(`(?i)(BPRIME|BSTAR\+?|BPRIMES|B-ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bravis[ _]|A501 Bright|A552 JOY Max|A504 Trace|A505 JOY Plus|A503 Joy|NB(?:106M|10[1-8]|751|7[145]|8[57]1|76)|NP101|NB961|NP 104 3G|B501|N1-570 Space|Atlas A551|A511 Harmony|A512 Harmony Pro|A510_Jeans_4G|A509_Jeans|N1_550_Cruiser`),
		regexp.MustCompile(`(?i)Bravis[_ ]X500`),
		regexp.MustCompile(`(?i)Bravis[_ ]A506`),
		regexp.MustCompile(`(?i)Bravis[_ ]A553`),
		regexp.MustCompile(`(?i)BRAVIS[ _]TAU`),
		regexp.MustCompile(`(?i)BRAVIS[ _]DELTA`),
		regexp.MustCompile(`(?i)BRAVIS[ _]TREND`),
		regexp.MustCompile(`(?i)BRAVIS[ ]A554`),
		regexp.MustCompile(`(?i)BRAVIS[ ]S500`),
		regexp.MustCompile(`(?i)BRAVIS[ _]SPARK`),
		regexp.MustCompile(`(?i)BRAVIS[ _]SLIM[ _]3G`),
		regexp.MustCompile(`(?i)Bravis[_ ]([^;\)]+) Build`),
		regexp.MustCompile(`(?i)(NB(?:106M|10[1-8]|75[134]|7[145]|8[57]1|76)|NP101|NB961)`),
		regexp.MustCompile(`(?i)(HD1023|XD233|XD230|XD1030|XD1132|XT114[34]|4K1142|LS424)`),
		regexp.MustCompile(`(?i)Brondi[ _]|(?:CENTURION|GLADIATOR| GLORY|LUXURY|SENSUELLE|VICTORY|AMICO_SMARTPHONE_4G|MIDNIGHT_SKY)(?:[ _-]?[2-6])?(?:[);/ ]|$)|Surfing Tab|501 SZ`),
		regexp.MustCompile(`(?i)(?:Brondi[ _])?(620 SZ|730_4G_HD|501 SZ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CENTURION(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLADIATOR(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUXURY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIDNIGHT_SKY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SENSUELLE(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VICTORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMICO_SMARTPHONE_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Surfing Tab ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Surfing Tab ([^;/)]+)[;/)]`),
		regexp.MustCompile(`(?i)(BUB6R-3T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BTOUCH7_PLUS|SWEET 5\+ 2019|SWEET ?[56]\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET 5\+ 2019`),
		regexp.MustCompile(`(?i)SWEET ?([65])\+`),
		regexp.MustCompile(`(?i)Bush[ ,_-]|Bush10Nou`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+)Tablet(?: Build|[);])`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)BUSH, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)CAGI-([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)(?:CG_OMEGA6|Omega (?:[38])|CG_EON_Blaze_Pro|CG\|EON Blaze GOLD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Omega ([38])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG_OMEGA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG_EON_Blaze_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG\|EON Blaze GOLD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CGV_(Ultimate T8)`),
		regexp.MustCompile(`(?i)BlueS10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN[_ ]`),
		regexp.MustCompile(`(?i)CORN R([124])0`),
		regexp.MustCompile(`(?i)CORN[_ ]X(4|55|5)`),
		regexp.MustCompile(`(?i)COYOTE[ _]`),
		regexp.MustCompile(`(?i)CUBOT|QUEST(?: LITE)?|(?:[^REDMITGA ]+NOTE 7|NOTE 20(?: PRO)?|RAINBOW 2|KING_KONG_3|KINGKONG [57]|KINGKONG 5 Pro|ZORRO 001|KINGKONG[_ ]MINI2?|KING KONG CS|R15_PRO|S550 Pro| CHEETAH| [RX]19|X19 S|MAX 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHEETAH( 2)?`),
		regexp.MustCompile(`(?i)KING[_ ]?KONG[_ ]([357])`),
		regexp.MustCompile(`(?i)CUBOT[ _]Echo`),
		regexp.MustCompile(`(?i)CUBOT[ _]MANITO`),
		regexp.MustCompile(`(?i)CUBOT[ _]MAGIC`),
		regexp.MustCompile(`(?i)CUBOT[ _]MAX`),
		regexp.MustCompile(`(?i)(R15|S550|J3)[_ ]PRO`),
		regexp.MustCompile(`(?i)CUBOT[_ ]NOTE[_ ]S`),
		regexp.MustCompile(`(?i)CUBOT[ _](A5|C6W|H3|J3|P7|P20|[RXJ]9|R11|X18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (X19 S|[RX]19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUBOT ([^;/]+) Build`),
		regexp.MustCompile(`(?i)([^;/]+) Build/CUBOT`),
		regexp.MustCompile(`(?i)CVTE[_ ](MSD338_(:?1G|512M))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Camfone (?:SE)|Hero[_ ](?:H5\+|SE2|H9|(?:H7|XR)_Plus|SX|1[123]|SE3[ _]Max)|Honey (?:Y1|Y2s))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hero[_ ](?:H5\+|SE2|H9|(?:H7|XR)_Plus|SX|1[123]|SE3[ _]Max)|Honey (?:Y1|Y2s))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Camfone (SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S70CDS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Capitel-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Captiva[ _-]([^;/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)CT(?:10[0123]0|7[12]0|820|735_16GB)(?:W|FR)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT(10[0123]0(?:W|FR)?)`),
		regexp.MustCompile(`(?i)CT(7[12]0(?:W|FR)?|735)`),
		regexp.MustCompile(`(?i)(C811|C7[57]1)(?: 4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C751(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C771(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C811 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASPER[_ ]|VIA[- _]([XF]20|T7D|A[34]|E[43]|F[123]|G[345]|M4|[LS]8|S7|P[23]|V8C|A[13]_Plus(?:_64)?|A1(?:_1)?|S[13]0|S48|S|T17_M|T1[07]|T7|T7-3G|T8B|T8D-3G|S1[78]|S48_0|L30_0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CASPER[_ ])?VIA_A1_Plus(?:_64)?`),
		regexp.MustCompile(`(?i)(?:CASPER[_ ])?VIA[_ ]([XF]20|G1_Plus|A3_Plus|G[135]|E[14]|[AE]2|M[123]|V[35689]|V10|G3|V6X|A[34]|E3|F[123]|G4|M4|P[23]|S|V8C|A1(?:_1)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASPER_L10_4.5G`),
		regexp.MustCompile(`(?i)CASPER_(S[23]8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIA[- _](T7|T8D)-3G`),
		regexp.MustCompile(`(?i)VIA[- _](T7D|S[13]0|S48|[LS]8|S7|T17_M|T1[07]|T7|T8B|S1[78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIA[- _](S48|L30)(?:_0)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cat ?(tablet|stargate|nova)|(?:B15Q|CAT B35|CAT-B100|S62 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cat ?(?:tablet)? ?((?:Galactica|Nova|StarGate|PHOENIX)[^/;]*) Build`),
		regexp.MustCompile(`(?i)Cat ?tablet`),
		regexp.MustCompile(`(?i)CAT-(B100)`),
		regexp.MustCompile(`(?i)(?:Cavion[_ ](?:Solid[_ ]4[\._]5|Base[ _](?:7|7_3G_Silver|5[._]0|10|7.2 Quad)|10_3GRQ)|Cavion7.1quad)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cavion[_ ]Solid[_ ]4[._]5`),
		regexp.MustCompile(`(?i)Cavion[ _]BASE[ _]5[._]0`),
		regexp.MustCompile(`(?i)Cavion(?:7.1quad)`),
		regexp.MustCompile(`(?i)Cavion Base 7.2 Quad`),
		regexp.MustCompile(`(?i)CELCUS, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Celkon|Android 7.+ UNIQ(?: Build|[);])|(?:Millennia Hero|2GBStar|2GBXpress|CliQ2|Campus Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Celkon[ _*](C[78]20)`),
		regexp.MustCompile(`(?i)Celkon[_ ]4G_TAB-8`),
		regexp.MustCompile(`(?i)CliQ2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 7.+ UniQ(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Campus Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Celkon[ _*](CT[^;/]+) Build`),
		regexp.MustCompile(`(?i)Celkon[ _*]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Celkon[\. _*]([^;/\)]+)[\)/]`),
		regexp.MustCompile(`(?i)Cell_?C_`),
		regexp.MustCompile(`(?i)Cell_C_(Summit_Plus|Fame|Evolve)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Cool_Extreme_2|Earn|Fashion2Plus|Fashion[ _]C|Cool Duo|CHIC_X1|Miracle XS|Miracle 6.0 S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cool_Extreme_2|Earn|Fashion[ _]C|Cool Duo|Miracle XS|Miracle 6.0 S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cosmas|CT_Cosmas_V`),
		regexp.MustCompile(`(?i)(?:Centric[- ]CM(?:5001|33[23]1|3321Plus)|CM4331)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM5001`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3321Plus`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3321`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3331`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM4331`),
		regexp.MustCompile(`(?i)Changhong[ ]?(X1-K|X6|R8|Z9S?|Z1S|S18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)changhong,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:Opera TV.+)Changhong-([^);/]+)`),
		regexp.MustCompile(`(?i)Cherry|Superion[_ ](?:S2|Radar Deluxe|S1 DTV|S1 Plus DTV)|Flare([ _])?(2X|4|A[123]|J[123568]|P[13]|S[4-8]|X2|Y[367]|S Play|HD|LITE|XL|X_V2|Y3s|Tab)(?:[ _](?:Pro|Plus|Max|LTE))?|Fusion Bolt|Omega[_ ](?:Icon 2|Icon Lite 2|lite[_ ][43][Cs]?|HD [45]|HD_Duo)|Spin Max 2|Selfie_Two|Flare_5|Android 1.*Aqua S9`),
		regexp.MustCompile(`(?i)(Flare2X|Aqua S9(?: (?:Max|Lite|Pro))?)`),
		regexp.MustCompile(`(?i)Flare[_ ]HD[_ ]([345])`),
		regexp.MustCompile(`(?i)Flare[_ ]J([26])S`),
		regexp.MustCompile(`(?i)Flare_([A-Z]\d+)_Prime`),
		regexp.MustCompile(`(?i)Flare_([A-Z]\d+)_Deluxe`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Power`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Pro`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Lite`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Plus`),
		regexp.MustCompile(`(?i)Flare ?J3 ?Plus`),
		regexp.MustCompile(`(?i)Cherry[_ ]X740`),
		regexp.MustCompile(`(?i)Flare[ _]X[_ ]V2`),
		regexp.MustCompile(`(?i)Flare[ _](J[12]|S[57]|Y3|J6|P1)[ _]mini`),
		regexp.MustCompile(`(?i)Flare[_ ](S[47]|J2)[_ ]Max`),
		regexp.MustCompile(`(?i)Flare[_ ]J2[_ ]DTV`),
		regexp.MustCompile(`(?i)Flare[_ ]Lite[_ ]3S`),
		regexp.MustCompile(`(?i)Flare(?:[ _])?(A[123]|J8 LTE|J[13568]|P[13]|S[4-8]|X2|Y3s|Y7_LTE|Y[673]|[45])`),
		regexp.MustCompile(`(?i)OMEGA HD ([45])`),
		regexp.MustCompile(`(?i)Omega[_ ]Lite[_ ](3[Cs]|4)`),
		regexp.MustCompile(`(?i)Flare Tab Pro V(\d)`),
		regexp.MustCompile(`(?i)(Fusion Bolt|Flare Tab Pro|Flare Tab|Superion[_ ](?:S2|Radar Deluxe|S1 DTV))`),
		regexp.MustCompile(`(?i)Cherry(?:[ _]?Mobile)?[ _]?([^/;]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:ALTO (?:Bombo|classic|Estrella|JUEGO|SUBIR|[235])|FUEGO MAX|OJOS[ _](?:CAMBIO|NUBE|[68i]|ORO))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALTO ([235])`),
		regexp.MustCompile(`(?i)OJOS[ _]([68i])`),
		regexp.MustCompile(`(?i)(M812C|1501_M02|9930i|A1303|A309W|M651CY|CMCC[ -]M(?:670|860))(?: Build|[);])`),
		regexp.MustCompile(`(?i)(M812C|1501_M02|9930i|A1303|A309W|M670)`),
		regexp.MustCompile(`(?i)(?:TYH61[12]M|TYH211U|TYH201H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-(Hi8-super|Hi12|V99i?|V17HD3G|VX8-3G|V88-QUAD|V9-DUAL|V88S|Vi[78]|[HV]i10 (?:pro|plus))|Hi10 (?:Pro|plus)|HiPad[ -](?:X|Pro|Air)|HiBox-hero|HiBook(?: pro)?|Hi[89] ?(?:Air|Pro)|HiPad ?Plus|Hi8SE|Vi8 plus|Vi10(?: ?Pro)?|Surpad)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CW-Hi8-super)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-)?(Vi10|Hi10|Vi8) plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V88)-QUAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V9)-DUAL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V17HD|VX8)-?(3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-)?(Hi10) pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBook pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBook(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad-Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi([89]) ?Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi8SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi([89]) ?pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10 ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Surpad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBox-hero(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(Vi[78]|Hi12|V99i?|V88S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Claresta[ _]|(?:AirPhoneS[56]|AirPhone K6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AirPhone ?(S[56]|K6)`),
		regexp.MustCompile(`(?i)Claresta (F3) PRO`),
		regexp.MustCompile(`(?i)Claresta[ _](F4)`),
		regexp.MustCompile(`(?i)Clarmin[_ ](B[65]|C1)`),
		regexp.MustCompile(`(?i)ClearPHONE 620(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CLEMPAD[_ ](?:6_XL|HR_Plus|HR|[68]|7_S|201[89])|ClemPhone_7|MFC_(?:2018|8))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLEMPAD_(201[89])`),
		regexp.MustCompile(`(?i)Clempad[_ ](6_XL|HR_Plus|HR|[68])`),
		regexp.MustCompile(`(?i)ClemPhone[ _](7)`),
		regexp.MustCompile(`(?i)(?:Cyclone_C4|Storm_C3|Stratus_C5(?:_Elite)?|Sunshine_T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Sunshine_T1)`),
		regexp.MustCompile(`(?i)(Stratus_C5|Cyclone_C4)`),
		regexp.MustCompile(`(?i)CloudFone[ _]|(?:Thrill (?:Boost[ ]?(2|3)?|Snap|Access|Plus 16GB)|Excite Prime 2 Pro|Excite Prime|ExciteC|NBA Edition|Go SP|Next Infinity Plus|Go Connect)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Boost 2 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Boost (2|3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Boost(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Snap(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Plus 16GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Access(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NBA Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Go SP(?: 2)?|Next Infinity Plus|Go Connect(?: Lite)?(?: 2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Next(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)\+VT(?:107C|Q007C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)\+VT(107C)`),
		regexp.MustCompile(`(?i)\+VTQ(007C)`),
		regexp.MustCompile(`(?i)Hind[ _]5\.1|X417[ _]Amaze|X418[ _]Zest|X421[ _]Nova|X422[ ]Exotic|X425[ _]Shavit|X428[ _]Astute`),
		regexp.MustCompile(`(?i)Hind[ _]5\.1`),
		regexp.MustCompile(`(?i)X417[ _]Amaze`),
		regexp.MustCompile(`(?i)X418[ _]Zest`),
		regexp.MustCompile(`(?i)X421[ _]Nova`),
		regexp.MustCompile(`(?i)X422[ _]Exotic`),
		regexp.MustCompile(`(?i)X425[ _]Shavit`),
		regexp.MustCompile(`(?i)X428[ _]Astute`),
		regexp.MustCompile(`(?i)CnM[ \-](?:Touchpad|TP)[ \-]([0-9\.]+)`),
		regexp.MustCompile(`(?i)Cobalt[ _-](?:SM|T)`),
		regexp.MustCompile(`(?i)Cobalt[ _-]SM_(55?|6)`),
		regexp.MustCompile(`(?i)Cobalt[ _-]T((?:7|10))[ _]3G`),
		regexp.MustCompile(`(?i)Cobalt[ _-]T((?:7|10))[ _]wifi`),
		regexp.MustCompile(`(?i)(MID(?:1024|112[56]|1045|1048|106[05]|4331|701[26]|7015A?|70[32]2|703[56]|704[278]|7052|7065|7120|8024|80[47]2|8048|8065|8125|812[78]|9724|974[02]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Colors[ _](S(?:[19]|11)|P70|P[456]5|P32|E15|P50 Plus)|Pride_1A|P52_Pride5C|P90_Pride5X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pride_1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P52_Pride5C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P90_Pride5X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Colors[ _](S(?:[19]|11)|P70|E15|P[456]5|P32|P50 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tesla|Impulse 7.85 3G|Impulse 10.1 OCTA|Smartphone_6.1|SP(?:6.2|6.2_Lite)|TTL(?:713G|8)`),
		regexp.MustCompile(`(?i)TeslaEvo5.0`),
		regexp.MustCompile(`(?i)(Gravity 9.7 SHD)`),
		regexp.MustCompile(`(?i)(Impulse 7.85 3G)`),
		regexp.MustCompile(`(?i)Impulse 10.1 OCTA`),
		regexp.MustCompile(`(?i)Tesla_SP([^/;)]+)L(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Smartphone_6.1`),
		regexp.MustCompile(`(?i)SP6.2_Lite`),
		regexp.MustCompile(`(?i)Tesla_SP(\d+)[_.](\d+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Tesla_SP([^/;]+) Build`),
		regexp.MustCompile(`(?i)SP([^/;]+) Build`),
		regexp.MustCompile(`(?i)Smartphone ([36])`),
		regexp.MustCompile(`(?i)(L7.1)`),
		regexp.MustCompile(`(?i)(L7 Quad) Build`),
		regexp.MustCompile(`(?i)(L7 Quad Lite)`),
		regexp.MustCompile(`(?i)(L8.1)`),
		regexp.MustCompile(`(?i)TESLA,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Comio|CT701G PLUS|CT701W|GT100`),
		regexp.MustCompile(`(?i)Comio[ _-]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Compal-[a-z0-9]+`),
		regexp.MustCompile(`(?i)ConCorde ([^/;]+) Build|Concorde_Raptor_Z55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Concorde_(Raptor_Z55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ConCorde Tab ?([^/;]+) Build`),
		regexp.MustCompile(`(?i)ConCorde ReadMan ?([^/;]+) Build`),
		regexp.MustCompile(`(?i)ConCorde ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Concord[ _-]|(?:Flyfix 6|C-721|Plus-7_C777|Plus_M19_C779|Plus-9_C778)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Plus[-_]([79]|M19)_(C77[789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Allure (?:M[123]|X)|Griffe T[235-9]|TFX712G|TRA-901G|TGW[-]?(710G|709|102L|801[GL])|(?:PGN\-?[456][012][0-9]|PHS\-601|PHQ519|PHQ52[056]|TB105L|TB717G|PKT\-301|Plume (?:H1|L[1-468]|P8|P6 PRO LTE))(?:[);/ ]|$)|CTAB[^/;]+ Build`),
		regexp.MustCompile(`(?i)CTAB([^/;]+) Build`),
		regexp.MustCompile(`(?i)(TGW)-?(710G|709|801[GL]|102L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TFX712G|TB105L|TB717G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TRA)-(901G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHS\-601`),
		regexp.MustCompile(`(?i)PGN\-?403`),
		regexp.MustCompile(`(?i)PGN\-?404`),
		regexp.MustCompile(`(?i)PGN\-?409`),
		regexp.MustCompile(`(?i)PKT\-?301`),
		regexp.MustCompile(`(?i)PGN\-?504`),
		regexp.MustCompile(`(?i)PGN\-?505`),
		regexp.MustCompile(`(?i)PGN\-?506`),
		regexp.MustCompile(`(?i)(Allure \w+) Plus`),
		regexp.MustCompile(`(?i)(Allure \w+) Lite`),
		regexp.MustCompile(`(?i)(Allure (?:M[123]|X))`),
		regexp.MustCompile(`(?i)PGN\-?507`),
		regexp.MustCompile(`(?i)PGN\-?508`),
		regexp.MustCompile(`(?i)PGN\-?509`),
		regexp.MustCompile(`(?i)PGN\-?511`),
		regexp.MustCompile(`(?i)PGN\-?513`),
		regexp.MustCompile(`(?i)PGN\-?514`),
		regexp.MustCompile(`(?i)PGN\-?515`),
		regexp.MustCompile(`(?i)PGN\-?516`),
		regexp.MustCompile(`(?i)PGN\-?51[78]`),
		regexp.MustCompile(`(?i)PGN\-?521`),
		regexp.MustCompile(`(?i)Griffe T3 ?pro`),
		regexp.MustCompile(`(?i)Griffe T([0-9]) Plus`),
		regexp.MustCompile(`(?i)Griffe T([0-9])`),
		regexp.MustCompile(`(?i)PGN\-?522`),
		regexp.MustCompile(`(?i)PGN\-?523`),
		regexp.MustCompile(`(?i)PGN\-?527`),
		regexp.MustCompile(`(?i)PGN\-?528|PLUME P6 PRO LTE`),
		regexp.MustCompile(`(?i)PGN\-?605`),
		regexp.MustCompile(`(?i)PGN\-?606`),
		regexp.MustCompile(`(?i)PGN\-?607`),
		regexp.MustCompile(`(?i)PGN\-?608`),
		regexp.MustCompile(`(?i)PGN\-?609`),
		regexp.MustCompile(`(?i)PGN\-?610`),
		regexp.MustCompile(`(?i)PGN\-?611`),
		regexp.MustCompile(`(?i)PGN\-?612`),
		regexp.MustCompile(`(?i)PGN\-?613`),
		regexp.MustCompile(`(?i)Plume L([2468]) Pro`),
		regexp.MustCompile(`(?i)Plume L([13]) Plus`),
		regexp.MustCompile(`(?i)Plume L([1-4])`),
		regexp.MustCompile(`(?i)PGN\-?([0-9]{3})`),
		regexp.MustCompile(`(?i)(?:CP6001A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CTAB1044hn|CTAB-1044|SEN_1055_ARM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CTAB1044hn|CTAB-1044)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Conquest[-_](?:S(?:20|[68]|1[0126])|F2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Conquest[-_]S([68]|1[0126]|20)`),
		regexp.MustCompile(`(?i)Contixo|(?:CX-1045 3G|KT995 3G|CX1045|B108_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CX-?1045(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CONTIXO GX 1035(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Contixo GT1160 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B105(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B108(?:[_ ]4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT107(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT715 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT995(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT ?1100GT(?: 4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad|(?:Cool_9S|1824-S0|8190Q|1831-A0|8676-[AM]01|1872-A0|CP8298_I00|CP3648AT?|CP8676_I0[23]|REVVLPLUS C3701A|VCR-[AI]0|C105-(?:8|E0)|C106-[789]|C107-9| C106|MTS-T0|cp3705A[S]?|ORL-C0|DLS-E0|1826-I01|8298-(?:M02|A01)|5560S|CP3320AS2|CP3667AT|CP3706AS|CP3669AS|CP3321AT|CP350[34]L|C103|CP03)(?:[);/ ]|$)|(8295|5860S) Build`),
		regexp.MustCompile(`(?i)VCR-[AI]0`),
		regexp.MustCompile(`(?i)1831-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1872-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8190Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DLS-E0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1824-S0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3321AT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3705A[S]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3648AT?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3320AS2?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3706AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3669AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MTS-T0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:C106-[789]|R116|C10[36])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C107-9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C105-(?:E0|8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1826-I01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ORL-C0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cool_9S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5560S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(5860S|8295) Build`),
		regexp.MustCompile(`(?i)CP8676_I02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP8676_I03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP8298_I00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CP350[34]L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(8676-[AM]01|8298-(?:M02|A01))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad[ _\-]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(CP-J55a|CP-J55aW|CP-J55aX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WING 5|WING9|Venus[ _][14]`),
		regexp.MustCompile(`(?i)Venus[ _]([14])`),
		regexp.MustCompile(`(?i)Cricket-([a-z0-9]+)|(?:U304AC|U325AC|U705AC|V350C|EC1002|EC21100[1-4])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cricket-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Q7A\+?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRONY-7021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Crosscall|ODYSSEY_Plus|Odyssey S1|Trekker-[MSX][1-4]|Action-X[35]|Core-(?:M[45]|T4|X[34])`),
		regexp.MustCompile(`(?i)Action-X3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Action-X([35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Core-(M[45]|X[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Crosscall ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Trekker-([MSX][1-4]) Core`),
		regexp.MustCompile(`(?i)Trekker-([MSX][1-4](?: Core)?)`),
		regexp.MustCompile(`(?i)CROWN, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(<!myPhone ?)Cube|(U[0-9]+GT|K8GT)|(?:T8-PLUSM?S?|T8PLUSML|I1-TF[BD]?|I1-TC|i15-TG|i1002S|Iwork10 Flagship|iwork10 Pro|T10 PLUS|CUBE-T970)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T8-PLUSM?S?|T8PLUSML)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1-TF[BD]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1-TC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i15-TG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:i1002S|iwork10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Iwork10 Flagship(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUBE-T970(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U[0-9]+GT[^;/]*) Build`),
		regexp.MustCompile(`(?i)(U[0-9]+GT(?:[0-9]|[\-_][a-z]+)?)`),
		regexp.MustCompile(`(?i)(K8GT)`),
		regexp.MustCompile(`(?i)Cyrus[ _-]|CyrusApel`),
		regexp.MustCompile(`(?i)Cyrus[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Cyrus[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP|(?:Ursus|Ixion)[ _]([^;/)]+)|H135[ _]Build|Larus_TV1|Ixion(?:ML4.7|ES250)|M150Storm|(?:SENIOR|F4[38]D8000K|VA(?:[12]10|170)|ML450|MS[56]50|BL(?:[123]50|160|155)|BS(?:155|160|[1256]50)|S(?:3[78]0|2[89]0|670)|AL(?:[12]40|[23]50)|AS(?:155|[123]60)| (?:N280i|P310|P380i?|R1[18]0|Q110|E1[78]0|E[12]10|B(?:450|340|35[05])|M445|T155|U43F8000Q|A(?:1[456]0|340|[34]55)|GS15[035]|GL[23]55|G25[05]|G15[05]|ES750|XL150|Z[1-4]55|H170|H310|P510|L2[17]0)|Z250|A440|N[13]80i|L3[17]0i|G450|G660|Q[123]10|Q[12]80|N[234]10|N[35]70|EX111)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ixion[_ ]([^;/]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(ML450|MS[56]50|ES750|XL150)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IxionES250(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IxionML4.7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M150Storm(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M445(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AL250(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AL350(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS155(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ursus[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(VA[21]10|VA170|E210|R1[18]0|Q110|N280i|P380i?|P[35]10|S2[89]0|S3[78]0|S670|H170|H310|L2[17]0|N[13]80i|N[234]10|E1[178]0|Q[123]10|Q[12]80|EX111|N[35]70|L3[17]0i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G450)[ _](2021)`),
		regexp.MustCompile(`(?i) (A440|A[34]55|B450|B340|B35[05]|BL155|BL160|A160|A340|T155|Z[1-4]55|G25[05]|Z250|G450|G660)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SENIOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H135[ _]Build`),
		regexp.MustCompile(`(?i)(BL[123]50|BS155|BS160|BS[1256]50|AL[12]40|A1[45]0|GS15[035]|AS160|GL[23]55|G15[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)DEXP[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F4[38]D8000K|U43F8000Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JAGUAR|SATURN|TIGER|PUMA)-0\dC?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SATURN-(02C?)`),
		regexp.MustCompile(`(?i)DIGIFORS (400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DINGDING[ _-](SK\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WTCELERO5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIXON_|(?:ACK1010|KT5512|HK7-3502|DN6015|DFM48)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ACK1010|KT5512|DFM48)`),
		regexp.MustCompile(`(?i)DIXON_XK1_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DNS|AirTab)[ _\-]([^;/)]+)|(?:S4505M|S4004M|SD01M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DNS[_ ])?(S4505M|S4004M|SD01M|S4502|S4003|S4003)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-4003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AirTab[ _\-]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)DNS[ _\-]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Aloha_5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUNNS[ _]`),
		regexp.MustCompile(`(?i)DUNNS[ _](?:MOBILE[ _])?(703GDC|AT1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Daewoo|(DTA-07IDRF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DTA-07IDRF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Daewoo (Android TV 638)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dslide ?([^;/]+) Build|Konnect_?(?:402|50[246]|60[1278])|GEODROID_A5|Dslide[ _]?(?:714|101[45]|1020|1013QC)`),
		regexp.MustCompile(`(?i)Konnect_?(402|50[246]|60[1278])`),
		regexp.MustCompile(`(?i)Dslide ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Dslide[ _]?(714|1013QC|101[45]|1020)`),
		regexp.MustCompile(`(?i)(?:MEMOR 10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K908H4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DATANG[ _-])+([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:DATANG[ _-])+([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)DW-[A-Z0-9]{5}(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DW-PS3G5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DBTEL(?:[\-/])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)DeWalt (MD501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dell[^a-z]|Venue|XCD35`),
		regexp.MustCompile(`(?i)Venue ((?:10|[78]) [0-9]{4}|[78] HSPA\+)`),
		regexp.MustCompile(`(?i)(?:Dell )?Venue(?: Build|[);])`),
		regexp.MustCompile(`(?i)Dell; Venue Pro`),
		regexp.MustCompile(`(?i)(OptiPlex (?:3050|7010))`),
		regexp.MustCompile(`(?i)(?:Dell )?(Streak|Venue) ?([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:Dell Inc./)?(XPS 13 9360|Latitude 7480)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dell; ((?:Streak|Venue)[^;/\)]*)`),
		regexp.MustCompile(`(?i)Dell; ([^;/\)]+)`),
		regexp.MustCompile(`(?i)Dell[ _\-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:TA[CDQ]-[0-9]+)|P(?:.+)TAQ-(?:[0-9]+)|SDQ[_-](?:550[24]4L|52001G|50002G|57004L)`),
		regexp.MustCompile(`(?i)P(?:.+)TAQ-(10213GMK2|10172MK3|10242MK2|70242MK2|[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA[CDQ]-[0-9]+)`),
		regexp.MustCompile(`(?i)SDQ[_-](550[24]4L|52001G|50002G|57004L)`),
		regexp.MustCompile(`(?i)Desay[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Desay[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dialog ?([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)DICAM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Digi[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGICEL|DL3(?:PlusPro)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DL3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGICEL ([^/;]+) Build`),
		regexp.MustCompile(`(?i)DIGIHOME, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:DL721-RB|DL(?:1016|1023|1036|9002|[78]006|1008M)|Compumax Blue)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DL(1016|1023|1036|9002|[78]006|721-RB)`),
		regexp.MustCompile(`(?i)(Compumax Blue)`),
		regexp.MustCompile(`(?i)Digma[_ ]([^;/]+) Build|HIT HT707[10]MG|CITI (?:7 E401 4G|8 E400 4G|ATL 4G|Kids|Octa [178]0|1902 3G|10 E402|Z530 3G)|(CITI[_ ](?:[A-Z0-9]+)[_ ][34]G)[ _][TC][ST](?:[0-9]{4}[PM][LG])|HIT 4G|HT7074ML|IDX5|(iDx10|iDx7)|MVM900H(?:WZ|C)|MVM908HCZ|(iDxD8 3G|iDxD10 3G|iDrQ10 3G|iDxD[45]|iDxQ5|iD[nx]D7(?:[_ ]3G)?)|PS604M|PT452E|Linx.+ [34]G L[TS][0-9]{4}[PM][GL]|Linx PS474S|PS1043MG|HT7071MG|HT5035PG|HT4039PG|NS6902QL|NS9797MG|TS7854M|TS1012E 3G|TT1004PG|TT702[045]MG|TT1002MG|TT7026MW|VRL42|((?:Optima|Platina|Plane)[ _](?:[EM])?(?:[0-9\.ST]+|Prime)(?:[ _][43]G)?)|(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)|DM-LED(?:43SR23|24SR20)`),
		regexp.MustCompile(`(?i)HIT(?: 3G)? HT707[10]MG`),
		regexp.MustCompile(`(?i)(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)`),
		regexp.MustCompile(`(?i)Linx ([A-Z][0-9]{3}) 3G (?:LT4028PG|LS4019PG|LT4001PG|LT5001PG|LT4038PG|LT5037MG|LT4030PG)`),
		regexp.MustCompile(`(?i)(Linx PS474S)`),
		regexp.MustCompile(`(?i)(CITI Z530 3G)`),
		regexp.MustCompile(`(?i)(CITI [A-Z0-9]+ [34]G) C[ST](?:606[32]ML|4024PG|5009PL|5021ML|502[56]PL)`),
		regexp.MustCompile(`(?i)MVM900H(?:WZ|C)`),
		regexp.MustCompile(`(?i)(iD(?:xD10|rQ10|xD7)[_ ]3G)`),
		regexp.MustCompile(`(?i)(iDx10|iDx7)`),
		regexp.MustCompile(`(?i)(iDxD[45]|iDxQ5)`),
		regexp.MustCompile(`(?i)CITI[_ ](1902 3G|Kids|8527_4G|Octa [178]0|10 E402 4G|8 E400 4G|7 E401 4G)`),
		regexp.MustCompile(`(?i)(CITI[ _](?:[A-Z0-9]+)[ _][34]G)[ _][TC][ST](?:106[24]ML|111[46]ML|1115MG|1117PG|1207MG|1210MG|3001ML|500[67]PG|7052PG|706[567]MG|7097MG|720[48]MG|820[69]MG|11[459]4MG|1195MG|1196ML|3001ML|8152ML|1050PL|709[68]PL|7113PL|7193MG|7216MG|8205PG|7203MG|8143MG|7153MG|7141MG|7140ML)`),
		regexp.MustCompile(`(?i)(iDnD7)`),
		regexp.MustCompile(`(?i)Optima ([0-9]+ [AXZ][0-9]+S?) ([43])G`),
		regexp.MustCompile(`(?i)Optima ([0-9]+ A500S) 3G`),
		regexp.MustCompile(`(?i)((?:Optima|Platina|Plane)[ _](?:[EM])?(?:[0-9\.STNMEV]+|Prime)(?:[ _][43]G)?)`),
		regexp.MustCompile(`(?i)Digma[_ ]([^;/]+) Build`),
		regexp.MustCompile(`(?i)VRL42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DM-LED(\d+SR\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M1092R(?:-[12]|V[45])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QC-(?:703GN|704GA|803GN|1013G|7BHD))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Divisat|X-MEDIA|DVS X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DVS )?(J-Link|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X-MEDIA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DoCoMo|\;FOMA|KGT/1\.0`),
		regexp.MustCompile(`(?i)DoCoMo/.+MST.+(SH2101V)`),
		regexp.MustCompile(`(?i)DoCoMo/[12]\.0[/ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)([a-z0-9]+)(?:_W)?\;FOMA`),
		regexp.MustCompile(`(?i)KGT/1\.0 ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(24DHS54)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dolamee[_ -](D[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DOOGEE[/ _-]|Valencia2_Y100(?:_?(?:pro|plus))?|Y100_Plus|X5max(?:[_ ]PRO)?|Shoot_[12]|x5_doogee|(KISSME|BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)|(?:BL12000|BL5500[_ ]Lite|X9 Mini|LEO_DG280|Y9Plus|Y8 Plus|Hitman_DG850|S(?:[568]8|9[0567]|59|40|86)Pro|X9[56]Pro|S[478]0Lite|S88Plus|BL[579]000|N[24]0Pro|S90C|Ibiza_F2|S55_Lite|T5_Lite|S60 ?Lite|Iron-bone DG750|X10S|X[56]0L|MIX2|Y6 Max|Y6_Piano(?:_black)?|X[679]pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Valencia2_)?Y100_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Valencia2_Y100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO_(DG280)`),
		regexp.MustCompile(`(?i)Iron-bone (DG750)`),
		regexp.MustCompile(`(?i)(BL[579]000|S90C|X10S|X[56]0L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X(9[56])Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N([24]0)Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL5500[_ ]Lite`),
		regexp.MustCompile(`(?i)S([568]8|9[0567]|59|40|86)Pro`),
		regexp.MustCompile(`(?i)S(88)Plus`),
		regexp.MustCompile(`(?i)S([4-8]0|55)[_ ]?Lite`),
		regexp.MustCompile(`(?i)Shoot_([12])`),
		regexp.MustCompile(`(?i)X([679])pro`),
		regexp.MustCompile(`(?i)(X5max(?:[_ ]PRO)?)`),
		regexp.MustCompile(`(?i)(?:DOOGEE[ _-])?(BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|Valencia2_Y100pro|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DOOGEE[ _-]([^);/]+) Build`),
		regexp.MustCompile(`(?i)DOOGEE[ _-]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y([89]) ?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doopro P3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dopod(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Doppio DP355(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doppio ([0-9a-z]+)`),
		regexp.MustCompile(`(?i)Doro|DSB-02[23]0`),
		regexp.MustCompile(`(?i)DSB-0230(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DSB-0220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doro[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Doro[ _-]([0-9a-z]+)`),
		regexp.MustCompile(`(?i)(Notepad[_ ](?:K10|102))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sens 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sens 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DROXIO (C40|A47|B45|KENTIA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DuneHD|SOLO 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLO 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DuneHD/\d.\d \([a-z]+__([a-z0-9_-]+);`),
		regexp.MustCompile(`(?i)DuneHD/\d.\d \(([a-z0-9_-]+);`),
		regexp.MustCompile(`(?i)E-Boda|Eclipse_(?:G400M|G500)|Revo R77 GPS`),
		regexp.MustCompile(`(?i)E-Boda ((?:Revo|Izzycomm|Essential|Intelligence|Supreme)[^/;]+) Build`),
		regexp.MustCompile(`(?i)Eclipse_(G400M|G500)`),
		regexp.MustCompile(`(?i)E-Boda ([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:CT9716(?:-B)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT9716(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT9716-B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E-tel[_ ]i250`),
		regexp.MustCompile(`(?i)EBEST[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)EBEST[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TA10CA3|TM105A?|TR10[CR]S1|TF10EA2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TA10CA3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TR10[CR]S1|TF10EA2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM105A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM105(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Harrier(?: Tab)?|Hawk|Rook)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)(Harrier Tab)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)Rook[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)(Harrier|Hawk)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)EKO[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)EKO[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EK-(?:5040|5336|5540|5937|6020|8680|MII|T7020)`),
		regexp.MustCompile(`(?i)EK-(MII|T7020)`),
		regexp.MustCompile(`(?i)EK-(5040|5336|5540|5937|6020|8680)`),
		regexp.MustCompile(`(?i)KidPhone4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVBOX-PLUS\+`),
		regexp.MustCompile(`(?i)EVBOX-PLUS\+`),
		regexp.MustCompile(`(?i)OCTA T720Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EX7SL?4|EX10S4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EXO_)?(Wave_i101G|Wave_i007B?|Wave i101[Hb]|Wave-i101L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eagle[ _](Classic Pro|Elite|Gold)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EasyPad|EasyPhone`),
		regexp.MustCompile(`(?i)(EasyPhone[^/;]+) Build`),
		regexp.MustCompile(`(?i)EasyPad ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)ECHO[ _](HOLI|HORIZON|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION)|HORIZON_M|Stellar 3G|FEELING`),
		regexp.MustCompile(`(?i)(HORIZON_M|FEELING)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ECHO[ _](HOLI|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION)`),
		regexp.MustCompile(`(?i)Einstein(T3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S5LS|X4UPlus`),
		regexp.MustCompile(`(?i)electroneum(M1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(?:4[238]S[AM]{2}RT|5[05](?:CV_)?SMART_UHD|32SMART)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(4[238])S[AM]{2}RT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-55CV_SMART_UHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(50)SMART_UHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(32)SMART(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB(?:101|728)[ _]3G|TAB7(?:[03]8|16|40|3[30]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elephone|Vowney(?: Lite)?|P6000( ?Pro| ?Plus|\+| ?02| 5.0 01)?|Soldier|(?:Trunk 1|P8_3D|P8_Max|A6_mini|Android 9.+ PX|PX_Pro| U3H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Elephone[_ ])?Trunk(?: 1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vowney Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vowney(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000(\+| ?Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 5.0 01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Soldier(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A6_mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PX_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) U3H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 9.+ PX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P8_3D|P8_Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Elephone[ _])?(P[768]000|S2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elephone[ _\-]([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:NV5(?:01|10)WAC|NV501|NV510WB|NV711WAC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV(501|510|711)WAC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV510WB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EGQ101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerMax|HARDCASEH5[05]0S|ENERGY[_ ]?(?:[45]00|400S|S[56]00|E12|E5[02]0S?)(?:[_ ](?:LTE|EU))?`),
		regexp.MustCompile(`(?i)PowerMax(P[0-9]+S?)`),
		regexp.MustCompile(`(?i)ENERGY[_ ]([45]00|E520)[_ ]LTE`),
		regexp.MustCompile(`(?i)ENERGY[_ ]400S`),
		regexp.MustCompile(`(?i)ENERGY[_ ]S([56]00)`),
		regexp.MustCompile(`(?i)ENERGY[_ ]?(E500S|E500|E12)`),
		regexp.MustCompile(`(?i)HARDCASE(H5[05]0S)`),
		regexp.MustCompile(`(?i)ENERGY[ _-]?([^;/]+) Build|Energy Phone Pro 3`),
		regexp.MustCompile(`(?i)ENERGY[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(EN1007Q)plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Enot[ _-](E102|J101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K501 Plus|[ ]K5(?:0[0-4]|1[01]|03[TS]|3[456]|4[05]|73|03HD)|[ ]K60[01]|[ ]X507T|[ ]K40[56]|[ ]T700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Projector(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ERGO|(V550[_ ]Vision|B502 Basic|B504[_ ]Unit|A502[_ ]Aurum|A503[ _]Optima|Prime B400|A551 Sky 4G|A553 Power|A555 Universe|Force F500|GoTab GBT9|GoTab Gti8|F501_Magic|V551[ _]Aura|V540_Level|V570_BIG_BEN|B506[_ ]INTRO|A503-Optima|B505_Unit_4G|LE32CT5515AK)`),
		regexp.MustCompile(`(?i)B506[_ ]INTRO`),
		regexp.MustCompile(`(?i)V550[_ ]Vision`),
		regexp.MustCompile(`(?i)B504[_ ]Unit`),
		regexp.MustCompile(`(?i)V551[ _]Aura`),
		regexp.MustCompile(`(?i)(ERGO_)?A500[ _]Best`),
		regexp.MustCompile(`(?i)(ERGO_)?A550[ _]Maxx`),
		regexp.MustCompile(`(?i)A502[_ ]Aurum`),
		regexp.MustCompile(`(?i)A503[ _]Optima`),
		regexp.MustCompile(`(?i)ERGO[_ ]A556`),
		regexp.MustCompile(`(?i)ERGO[_ ]F500`),
		regexp.MustCompile(`(?i)ERGO[_ ]F501`),
		regexp.MustCompile(`(?i)ERGO[_ ]Tab[ _]Crystal[ _]Lite`),
		regexp.MustCompile(`(?i)ERGO[_ ]Tab[ _]Hero[ _]II`),
		regexp.MustCompile(`(?i)ERGO[_ ](B700)`),
		regexp.MustCompile(`(?i)(LE32CT5515AK)`),
		regexp.MustCompile(`(?i)(?:Ericsson(?:/ )?[a-z0-9]+)|(?:R380 2.0 WAP1.1)`),
		regexp.MustCompile(`(?i)Ericsson(?:/ )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)R380 2.0 WAP1.1`),
		regexp.MustCompile(`(?i)Ericy-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(42FLEA73T2SM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PH-1[ )]`),
		regexp.MustCompile(`(?i)PH-1[ )]`),
		regexp.MustCompile(`(?i)(?:Wooze[_ ]?(?:I55?|I45|X?L)|HEYOU(?:[135]|30))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEYOU([135]|30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wooze[_ ]?((?:I55?|I45|X?L))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eton[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Eton[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ETL-S(?:3520|4521|5042|5084|6022)|ETL-T(?:752G|882G|9[78]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ETL-S(?:[^/); ]+))`),
		regexp.MustCompile(`(?i)(ETL-T(?:[^/); ]+))`),
		regexp.MustCompile(`(?i)(EUTB_758G?)`),
		regexp.MustCompile(`(?i)(ET7002C-H12|Onyx-[13]S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onyx-([13]S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ET7002C-H12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVERCOSS[ _]|(A75A\*|U50A_PLUS|M50 STAR|A75 MAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A75A\*(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A75 MAX*(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U50A_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M50 STAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVERCOSS[ _](A7[BRLZ]|A65|A74A|A5Z)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ever(?:Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Smart|Star)[^/;]*) Build|E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E7914HG|V5_Nano|EverMiracle Plus`),
		regexp.MustCompile(`(?i)(E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E7914HG)`),
		regexp.MustCompile(`(?i)(Ever(?:Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Smart|Star)[^/;]*) Build`),
		regexp.MustCompile(`(?i)Evolio|M4MAGIC`),
		regexp.MustCompile(`(?i)Evolio[ _](M6|S4 Cobalt|S5|X10|Yuppi)`),
		regexp.MustCompile(`(?i)EVOLVEO|StrongPhone`),
		regexp.MustCompile(`(?i)Smart TV ([^;/]*) Build`),
		regexp.MustCompile(`(?i)EVOLVEO StrongPhone G(\d)`),
		regexp.MustCompile(`(?i)(?:EVOLVEO[ _])?StrongPhone[ _]?Q([679])(_LTE)?`),
		regexp.MustCompile(`(?i)EVOLVEO[ _]([^;/]*) Build`),
		regexp.MustCompile(`(?i)EVM4G3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVM4G3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVROMEDIA|Playpad[ _]|PLAY_PAD_PRO_XL|3G NOTE XL`),
		regexp.MustCompile(`(?i)EX(29|45)i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Exmart[ _](K1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Explay|[\w]+-EXPLAY-FIN|ActiveD[ _]|Atlant |Informer[ _][0-9]+|CinemaTV 3G|Surfer[ _][0-9\.]|sQuad[ _][0-9\.]|Onliner[1-4]|RioPlay|Leader|Pulsar|Infinityll|Joy_TV|Imperium[78]|Winner[78]|Indigo|Lagoon|Tornado(?:3G)?|Onyx`),
		regexp.MustCompile(`(?i)ActiveD[ _]7.4[ _]3G`),
		regexp.MustCompile(`(?i)Imperium([78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ActiveD[ _]8.2[ _]3G`),
		regexp.MustCompile(`(?i)CinemaTV[ _]3G`),
		regexp.MustCompile(`(?i)Informer[ _]([0-9]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Surfer[ _]([0-9\.]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)sQuad[ _]([0-9\.]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Onliner([1-4])`),
		regexp.MustCompile(`(?i)Winner([78])`),
		regexp.MustCompile(`(?i)Atlant(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Indigo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pulsar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tornado(?:3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onyx(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy_TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[\w]+-EXPLAY-FIN`),
		regexp.MustCompile(`(?i)Lagoon(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Explay[ _-]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)RioPlay(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rock X9+|ROCK_X11`),
		regexp.MustCompile(`(?i)Rock X9+`),
		regexp.MustCompile(`(?i)EZIO-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)EZZE-|EZ[a-z0-9]+`),
		regexp.MustCompile(`(?i)EZZE-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)EZ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:Bison2021|B2021|[HR]2022)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([HR]2022)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Bison2021|B2021)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z8PLUS|Z8POCKET|LT5216|F80s_plus|C8Finger|F80 PIABELLA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LT5216)`),
		regexp.MustCompile(`(?i)(K118)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fise_32433_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPTIMUM (500[1-4]|5501)`),
		regexp.MustCompile(`(?i)UNICUM (1002|8S|8003)`),
		regexp.MustCompile(`(?i)(?:16M4HI105024|FMT-NM7058-02|176HS1050(?:232|531)|175WT1050231|175HS1050231|175FT1050241)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ConeXis (A[12]|X[12])|SP5045V`),
		regexp.MustCompile(`(?i)ifive(?:[_ ]mini[_ ][43]G?S|X2|Mini3|3| Air)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ifive[_ ]mini[_ ]([43]G?S)`),
		regexp.MustCompile(`(?i)ifive(X2|3)`),
		regexp.MustCompile(`(?i)FORME[ _-]`),
		regexp.MustCompile(`(?i)FORME[ _-]F520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FORME[ _-](A[35]7|R7S?|P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FTRW100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (FP(?:1U?|[23]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FX[123]00)`),
		regexp.MustCompile(`(?i)FAN-M300H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart ?(601|550|50[59])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(vKB011B|vKB004L)`),
		regexp.MustCompile(`(?i)Fero[_ ]|Royale[_ ](?:[YX]2|A1)`),
		regexp.MustCompile(`(?i)Royale[_ ]([YX]2|A1)`),
		regexp.MustCompile(`(?i)Fero[ _](A4001|A450[23]|A5001|L100|Iris|Power|Mega LTE|Vibe)`),
		regexp.MustCompile(`(?i)ATRIUM II F55L2|TRIO F40LT|CENTRIC S50G|EPIC F50G|Gravity X55L|Orion M50L|ULTRA M50G|UltraJ8|M405B|VIRTUE3|F55L Build|Orbit_ll`),
		regexp.MustCompile(`(?i)(F55L)`),
		regexp.MustCompile(`(?i)(Gravity X55L|Orion M50L)`),
		regexp.MustCompile(`(?i)Note_(?:[37]|11)_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Note_([37]|11)_Pro`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([AB][1-9]|[CD][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([AB][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([CD][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FINLUX, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:AURII[ _](?:Passion|Virtuoso|ULTRA|Secret Lite|AMUSE[_ ]3G|FORCE|FUSION|F8[_ ]Premium|XCITE|DELIGHT|DREAM[_ ](?:MINI|One))|SECRET_XR|INTENSE[ _](?:POWER|METAL_2|XT)|SUPER SWEET|SWEET MINI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FORCE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DELIGHT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DREAM[_ ]MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DREAM[_ ]One(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]ULTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]AMUSE[_ ]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FUSION(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]XCITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SECRET_XR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]((?:Passion|Virtuoso|Secret Lite|F8[_ ]Premium))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE POWER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_XT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_METAL_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPER SWEET(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly|Power Plus 5000|Photo Pro|Slimline|Life (?:Ace|Jet|Sky|Compact 4G|Geo|Zen|Play)|FS50[1-9]|FS51[0-8]|FS52[0-9]|FS530|FS55[134]|FS40[1-9]|FS45[1-9]|4FS06|MERIDIAN-|(?:IQ[0-9]{3,}[i]?)[ _]?(?:Quad|Firebird|Quattro|Turbo|Magic)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ310(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ236(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slimline(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Plus 5000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Photo Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Ace(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Jet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Sky(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Geo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Zen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Buzz(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Compact 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ237(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ238(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ240(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ255(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ270(?: Firebird)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ275(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ285(?: Turbo)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ432(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ436(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4490(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ434(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4406(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ436i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ440(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ441(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ442 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ442(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ443(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ444(?: Quattro)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ445(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ446(?: Magic)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ447(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ456(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4409 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ448(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ449(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ450(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ450[ _]Quattro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ451(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ452 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ454(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4404(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4410 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4411(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4412 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4413[ _]Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4414 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4415 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4504 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ([0-9]+[i]? ?(?:Quad|Firebird|Quattro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly[ _\-]?([a-z0-9_]+)/`),
		regexp.MustCompile(`(?i)Flylife[ _\-]?([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Fly[ _\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MERIDIAN-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Fondi[- _]([^;/)]+)|(T702|Q008B|Q010B|Q718B|Q902|T602B|T707G|T708B|T725B|T725B1|T907B)(?:\)| Build)`),
		regexp.MustCompile(`(?i)(T702|T602B)`),
		regexp.MustCompile(`(?i)(Q008B|Q010B|Q718B|Q902|T707G|T708B|T725B|T725B1|T907B)`),
		regexp.MustCompile(`(?i)Fondi[- _]([^;/)]+)`),
		regexp.MustCompile(`(?i)Fonos-(O1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Formuler[ _]|(?:S_TURBO_PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Formuler[ _](Z8(?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S_TURBO_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amosta ?3G5`),
		regexp.MustCompile(`(?i)Amosta ?3G5`),
		regexp.MustCompile(`(?i)(Apollo 5 Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Four[ _]?(S600|S300I|S185|K500|S61)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Four[ _]?(S600|S300I|K500)`),
		regexp.MustCompile(`(?i)Four[ _]?S185`),
		regexp.MustCompile(`(?i)Four[ _]?S61`),
		regexp.MustCompile(`(?i)(?:EASYSMARTM3|EasySmart M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY ?SMART ?M([32])`),
		regexp.MustCompile(`(?i)InFocus M[0-9]+[a-z]?`),
		regexp.MustCompile(`(?i)InFocus M([0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)(?:FTJ17[AC]00|FTJ152[ABCD]|FTU18A00|FT141B|FT142D(?:_LTEXM)?|FT142A?|FTJ161[AB]|FTJ1[56]2E|FTJ162[BD]|FTE161[GE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTJ17A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTJ17C00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTU18A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FT142D(?:_LTEXM)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FT142A?`),
		regexp.MustCompile(`(?i)(?:F-01[FHJKLM]|F-02[EFGHLK]|F-03[DEFGKHL]|F-04[EGFHKJ]|F-05[DEFJG]|F-06[EF]|F-07[DE]|F-08D|F-09[DE]|F-10D|F-[45]1A|F-41B|F-[45]2A|F-11D|F-12C|F-51B|M532|FARTM933KZ|901FJ|arrows(?:RX|M03|M0[45](?:-PREMIUM)?)|801FJ|FJL2[12]|RM02|FCG01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-01[LM]|F-06F|F-03K|F-42A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FJL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FJL22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-52A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901FJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-41B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-06E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-07D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:F-51B|FCG01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)801FJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-07E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-08D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-09D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-09E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-10D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-11D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-12C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-04[JF])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RM02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsRX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM04-PREMIUM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM(0[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-0[32]F|F-03G|F-04H|F-05E|F-02K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUNAI, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Fusion5|F104Bv2`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F104B)v2_PRO`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F104B)v2`),
		regexp.MustCompile(`(?i)G-TiDE_(A1|S[34])`),
		regexp.MustCompile(`(?i)E(57|60|66|72|77)`),
		regexp.MustCompile(`(?i)GTouch[_ ]|(?:Stella (?:XS?|Omega))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Stella (XS?|Omega)`),
		regexp.MustCompile(`(?i)GTouch[_ ]STELLA`),
		regexp.MustCompile(`(?i)GEOFOX[_ ](MID ?743)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PRESIDENT_GOLD_(9|10)|President Gpower 1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRESIDENT_GOLD_(9|10)`),
		regexp.MustCompile(`(?i)Quartz(T10-3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLX (?:Aria|Dorna|Taban|Shine|Spark|ASA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLX (Aria|Taban|Shine|Spark)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLX (Dorna)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOCLEVER|QUANTUM_(?:[235]_)?[0-9]{3}|QUANTUM [0-9]{1}|QUANTUM 700N|Quantum2 500|QUANTUM_(1010N|1010M|900|II_500_N)|ARIES|INSIGNIA|ORION_|ELIPSO|LIBRA[ _]97`),
		regexp.MustCompile(`(?i)QUANTUM_(1010N|1010M|900)`),
		regexp.MustCompile(`(?i)INSIGNIA_(785_PRO|1010M|800M)`),
		regexp.MustCompile(`(?i)(ORION|ARIES|ELIPSO)[_ ](71|101|102)`),
		regexp.MustCompile(`(?i)QUANTUM_2_(1010|700|960)_Mobile`),
		regexp.MustCompile(`(?i)QUANTUM_([235])_(5[05]0)_RUGGED`),
		regexp.MustCompile(`(?i)QUANTUM_(\d+)_RUGGED_PRO`),
		regexp.MustCompile(`(?i)QUANTUM[_ ]([235])_([45]00)[_ ]LITE`),
		regexp.MustCompile(`(?i)QUANTUM[_ ]([45]00)[_ ]LITE`),
		regexp.MustCompile(`(?i)QUANTUM[ _]?([235])[ _]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)((?:QUANTUM|ARIES|INSIGNIA|ORION|ELIPSO)[ _-]?[^;/]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]TAB[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)TAB ([^;/)]+) Build/GOCLEVER`),
		regexp.MustCompile(`(?i)([^;/)]+) Build/GOCLEVER`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?TAB[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)LIBRA[ _]97`),
		regexp.MustCompile(`(?i)GI UNI2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Garmin-Asus|Garminfone`),
		regexp.MustCompile(`(?i)Garminfone[ \-_]([^;/]*)Build`),
		regexp.MustCompile(`(?i)Garmin-Asus[ \-_]([^;/]+)Build`),
		regexp.MustCompile(`(?i)Garmin-Asus[ \-_]([^;/]+)[\)/]`),
		regexp.MustCompile(`(?i)(GEM[0-9]+[a-z]*)`),
		regexp.MustCompile(`(?i)GM 5 Plus|GM8 go|GM [568] d|GM 8|General Mobile 4G|GM 9 (?:Pro|Plus)|(?:e-tab 20|Android 1.+ (?:G[35]01|G[35]10|G700)|GM Discovery II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GM (\d+) d`),
		regexp.MustCompile(`(?i)e-tab 20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SK-Mtek GT730[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEOTEL[ _]?`),
		regexp.MustCompile(`(?i)GEOTEL[ _]?Note`),
		regexp.MustCompile(`(?i)GEOTEL[ _]AMIGO`),
		regexp.MustCompile(`(?i)(GTX-R10i Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GHIA|QS702|SVEGLIO[ _][QH]1|VECTOR10\.1|GTKIDS7[BVR]?|(?:GTA7WF|VENUS7|TREO_TAB8G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SVEGLIO[ _]([QH]1)`),
		regexp.MustCompile(`(?i)GHIA[ _](L1)`),
		regexp.MustCompile(`(?i)VECTOR10\.1`),
		regexp.MustCompile(`(?i)GTKIDS7[BVR]?`),
		regexp.MustCompile(`(?i)GHIA[ ]?(47458)`),
		regexp.MustCompile(`(?i)GHONG(V10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GHOST G03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GSmart[ _][a-z0-9 ]+(?: Build|\))|Gigabyte-[a-z0-9]+|Simba SX1|GSmart_Classic_Lite|Classic[_ ](?:Joy|Pro)`),
		regexp.MustCompile(`(?i)(GSmart[ _][a-z0-9 ]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Gigabyte-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Classic[ _](?:Joy|Pro)|GSmart_Classic_Lite)`),
		regexp.MustCompile(`(?i)Gigaset|(?: GX290|GS80|GS1[0189]0|GS1[89]5|GS2[89]0|GS5[357]-6|GS[23]70(?:_Plus)?|E940-2795-00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gigaset QV(1030|830)`),
		regexp.MustCompile(`(?i)G(S[23]70)[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GS([23]70|1[0189]0|1[89]5|2[89]0|80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GX290)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gigaset ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Gigaset ([^;/)]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Gini[ _]`),
		regexp.MustCompile(`(?i)Gini[ _]W(7)`),
		regexp.MustCompile(`(?i)Gini[ _]n(8)`),
		regexp.MustCompile(`(?i)Gini[ _]s5Pro`),
		regexp.MustCompile(`(?i)Gini[ _]Tab[ _](V[78])`),
		regexp.MustCompile(`(?i)GINZZU[_ ]|((?:RS(?:7[14]|81|9[67])D)|S5002|S5021|S5230|S50[45]0|S51[24]0|RS(6[12]|9[45])D|S40[23]0|RS850[12]|RS9602)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GINZZU[_ ]?(S40[17]0|S4710|ST60[14]0|ST6120)`),
		regexp.MustCompile(`(?i)GINZZU[_ ]?(GT-(?:1050|7105|70[1-4]0|7115|7210|[WX]831|X[78]70|7810|8[01]10|X853|X890))`),
		regexp.MustCompile(`(?i)(RS6[12]D) ULTIMATE`),
		regexp.MustCompile(`(?i)(?:GINZZU[ _])?((?:RS(?:7[14]|81|9[14-7]|7)D)|S50[45]0|S5002|S5021|S5230|S51[24]0|S40[23]0|RS850[12]|RS9602|RS94D|R8 Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]?[a-z0-9]+|(?:Dream_D1|V188S?|GN[0-9]{3,4}[a-z]?)(?:[);/ ]|$)|F103(?: Pro)?(?: Build|\))|P5 mini Build|P7 Max Build|(M7 Power|F106L|F100A|F103S|F103 Pro|M6 mirror|20190620G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GN810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GN([0-9]{3,4}[a-z]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F106L|F100A|V188S|V188|F103S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7 Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190620G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S11|F205|S10) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M6 mirror(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F9 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F103( Pro)?( BUILD|\))`),
		regexp.MustCompile(`(?i)(?:(?:GIO-)?GIONEE[ _-])?Dream_D1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+).*Android`),
		regexp.MustCompile(`(?i)Android.*(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(GU1011C|GU8012C|GU7013C|GU730C|GU-6012B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GU8012C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GU-6012B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GU1011C|GU7013C|GU730C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Gpad_U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO Onyx|GO[0-9]{3,4}`),
		regexp.MustCompile(`(?i)GO([0-9]{3,4})`),
		regexp.MustCompile(`(?i)Goly[ _-]`),
		regexp.MustCompile(`(?i)Goly[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Goly[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:GOME[_ ](?:201[678].+|C7_Note(?:_Plus)?|U9|S[17])|Fenmmy_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018X38A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018X07A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017X05A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017X82A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2016G68A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2016M25A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017M27A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017M95A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018M29A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](C7_Note(?:_Plus)?|U9|S[17])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GOME[_ ])?(Fenmmy_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexus|GoogleTV|Google Fiber|Google Pixel|Glass|CrKey[^a-z0-9]|(?:Pixel|sailfish|taimen|blueline|Chromecast)(?: Build|[)])|Pixel (?:XL|C|[2-6]|[2-4] XL)|Google 2XL|G011A|AOSP on (?:HammerHead|Manta)`),
		regexp.MustCompile(`(?i)(Nexus (?:S|4|5X?|One))`),
		regexp.MustCompile(`(?i)(Nexus (?:6P?))`),
		regexp.MustCompile(`(?i)(Nexus (?:7|9|10))`),
		regexp.MustCompile(`(?i)(GFHD[12]00)`),
		regexp.MustCompile(`(?i)CrKey[^a-z0-9]`),
		regexp.MustCompile(`(?i)(?:Pixel|sailfish)(?: Build|[)])`),
		regexp.MustCompile(`(?i)Pixel 2 XL|taimen`),
		regexp.MustCompile(`(?i)Pixel 4a \(5G\)`),
		regexp.MustCompile(`(?i)pixel ([45])a`),
		regexp.MustCompile(`(?i)pixel ([2-6])`),
		regexp.MustCompile(`(?i)Goophone[ _]|(?:M(G492|L7[JK]2)CH|MN(4A2|8J2)ZP|MGA92ZP|MKU82ZP|MNGW2CH|MNH02CH|MNRM2CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MG492CH|MGA92ZP)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML7[JK]2CH[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MKU82ZP[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MNGW2CH[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MN4A2ZP|MNH02CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MN8J2ZP|MNRM2CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S4 MEGA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Goophone i([69])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gooweel| M5 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gooweel; (S7);`),
		regexp.MustCompile(`(?i)Gplus ([ZXP]10|N809)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRADIENTE-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)GRADIENTE ([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(?:Grape[ _])?GTM-5([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:G0[256]15D|G0245D|G0335D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G0215D|G0245D|G0335D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X1_Light(?:_Lte)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1_Light(?:_Lte)?`),
		regexp.MustCompile(`(?i)Gresso[ _]|(?:REGAL R2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gresso[ _]Regal(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gretel|(?:GT6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GT6000)`),
		regexp.MustCompile(`(?i)Gretel; (A[67])`),
		regexp.MustCompile(`(?i)GR?-TB[0-9]+[a-z]*|GRUNDIG|portalmmm/2\.0 G|AFTEU(?:011|014|FF014)`),
		regexp.MustCompile(`(?i)(GR?-TB[0-9]+[a-z]*)`),
		regexp.MustCompile(`(?i)GRUNDIG ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 G([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Gtel[ _]`),
		regexp.MustCompile(`(?i)Infinity 8s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity 9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H96[ _]`),
		regexp.MustCompile(`(?i)Max RK3318(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Max X2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T2000)(?: Build|[);])`),
		regexp.MustCompile(`(?i)SP-001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HKPRO,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Hewlett-Packard|HP/HP|HP Chromebook|HP EliteBook 820|TouchPad/\d+\.\d+|hp-tablet|HP ?iPAQ|webOS.*P160U|HP (?:Pro )?Slate|HP [78]|HP 10 Plus|Compaq [7|8]|HP; [^;/)]+`),
		regexp.MustCompile(`(?i)HP ([78][^)/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)Compaq ([78][^/;]*) Build`),
		regexp.MustCompile(`(?i)HP Slate ?(.+) Build`),
		regexp.MustCompile(`(?i)HP Slate ?([0-9]+)`),
		regexp.MustCompile(`(?i)TouchPad/(\d+\.\d+)|hp-tablet`),
		regexp.MustCompile(`(?i)HP; ([^;/)]+)`),
		regexp.MustCompile(`(?i)HP ?iPAQ ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)webOS.*(P160U)`),
		regexp.MustCompile(`(?i)HP ProBook (6560b)`),
		regexp.MustCompile(`(?i)Chromebook (11 G5|x360 11 G1 EE|13 G1)`),
		regexp.MustCompile(`(?i)HTC|Sprint (?:APA|ATP)|ADR[a-z0-9]+|NexusHD2|Amaze[ _]4G(?:[);/ ]|$)|(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|\))|(Amaze[ _]4G|One ?[XELSV\+]+)(?:[);/ ]|$)|SPV E6[05]0|(One M8|One Mini 2|X525a|PG86100|PC36100|XV6975|PJ83100|2PYB2|2PS64|2PZC5|0PJA10|0PJA2|HTV33|0PM92|0PCV1|601HT|0PAJ5|HTL2[23]|HTV3[12]|2PQ93|X2-HT|EXODUS 1|ISW13HT|710C|U Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2PZF1|U Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ](?:U-2u|U Play|2PZM3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]U-1w(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:U11 plus|(?:HTC_)?2Q4D[12]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC (?:U12\+|2Q55[13]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U(1[12]) life(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:U11 Eyes|2Q4R100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XV6975(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PG86100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PC36100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ])?(?:HTV33|601HT|2PZC100|2PZC5|U-3[uw])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:801e|802[wdt])`),
		regexp.MustCompile(`(?i)PJ83100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC)?One ?Mini ?2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X2-HT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC 2PXH3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ISW13HT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTL22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTL23|HTV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTCButterflys901s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ])?(?:M9pw|One M9 ?PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ]M9u|0PJA2|0PJA10|HTC One M9|HTC6535LVW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)One[ _](X9|[EM]8) dual sim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire[ _](.+) dual sim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC(?: One m7|6500LVW|PN071)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:One M8|HTC6525LVW|HTC[_ ]M8[xd]|HTC[_ ]0P6B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)0PAJ5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]E9x(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]E9pw(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_S9u(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC6515LVW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X525a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2PQ9(?:3|10)|HTC[_ ]A9u)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2PS64|HTC6545LVW`),
		regexp.MustCompile(`(?i)(710C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)0PM92(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)0PCV1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC ?D160LVW(?:PP)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]D310n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)608t(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_(?:0P9O2|D610x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(0P4E[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?D620h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(?:D626ph|D200LVWPP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?(?:0P9C2|D816[xd]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?D526h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EXODUS 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC 2Q7A100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire 10 compact(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_D10i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[ _]10[ _]evo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire (.+) pro 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire (.+) pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire 10 lifestyle(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[ _-]P715a`),
		regexp.MustCompile(`(?i)HTC[ _-]Flyer Build`),
		regexp.MustCompile(`(?i)HTC[ _-]Flyer[ _\-]([\w]{1,5})`),
		regexp.MustCompile(`(?i)HTC(?:[ _-])?(?:One[ _\-]max|6600LVW|0P3P7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[ _]([^/;]+) [0-9]+(?:\.[0-9]+)+ Build`),
		regexp.MustCompile(`(?i)HTC[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)HTC[ _]([a-z0-9]+[ _\-]?(?:[a-z0-9_+\-])*)`),
		regexp.MustCompile(`(?i)USCCHTC(\d+)`),
		regexp.MustCompile(`(?i)Sprint (ATP.*) Build`),
		regexp.MustCompile(`(?i)Sprint (APA.*) Build`),
		regexp.MustCompile(`(?i)(?:HTC-)?HTC(?:[\-/ ])?([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)HTC;(?: )?([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(Amaze[ _]4G|One ?[XELSV\+]*) Build`),
		regexp.MustCompile(`(?i)(ADR[^;/]+) Build`),
		regexp.MustCompile(`(?i)(ADR[a-z0-9]+)`),
		regexp.MustCompile(`(?i)HTV32(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HAFURY|GT20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MIX|UMAX)`),
		regexp.MustCompile(`(?i)Haier|(?:M53-52401|I6_Infinity|Titan[ _]T[135]|(?:HW-)?W(?:71[67]|757|86[07]|970)|S5 Silk|(?:HM-)?(N505|N700|G(?:152|303|353|552|70[01])?-FL|HM-(?:I559|N50[15]|I560|G553|N70[01])-FL|HR-V101|G(?:303)?-W|I(?:557)?-FL)|(?:PAD[ _](?:D71|G781|d85))|A2_Lite_NFC|A4_Lite|HL810G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HM-)?(G(?:152|353|552|70[01])|G(?:303)|I(?:557))`),
		regexp.MustCompile(`(?i)(Titan[_ ]T[135]|I6_Infinity)`),
		regexp.MustCompile(`(?i)(?:HW-)?W(71[67]|757|86[07]|970)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAD[ -_](D71|G781|d85)`),
		regexp.MustCompile(`(?i)(HL810G|HR-V101|M53-52401)`),
		regexp.MustCompile(`(?i)Haier[ _\-](H[WT]-[^/;]+) Build`),
		regexp.MustCompile(`(?i)Haier[ _\-](H[WT]-[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)Haier[ _\-](sy[0-9]+)`),
		regexp.MustCompile(`(?i)Haier[ _\-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Haipai ?noble S6`),
		regexp.MustCompile(`(?i)Hamlet[ _]`),
		regexp.MustCompile(`(?i)(?:Hamlet[ _])?XZPAD(412W)`),
		regexp.MustCompile(`(?i)(HSG[0-9]{4})|SN97T41W|SN1AT71W\(B\)|SN70T51A|SN70T31?|T7-QC`),
		regexp.MustCompile(`(?i)(HSG[0-9]{4})`),
		regexp.MustCompile(`(?i)SN1AT71W\(B\)`),
		regexp.MustCompile(`(?i)ODROID[-]?(C2|U2|XU[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hasee ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Hasee ([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Helio (S60|S5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HTB801)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Boost (?:Hypa|Ultra)|HMR5012)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost (Hypa|Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMR5012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Hebe|Hera)-BD00`),
		regexp.MustCompile(`(?i)HLV-T([a-z0-9]+)`),
		regexp.MustCompile(`(?i) HIMAX[_ ]`),
		regexp.MustCompile(`(?i)POLYMER( X)?`),
		regexp.MustCompile(`(?i)HIMAX[_ ]PURE[_ ]3S`),
		regexp.MustCompile(`(?i)(ELT070[46]H|ELT0802H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIGHSCREEN|(Easy[- ]Power(?:[- ]Pro)?|Pure[_ ](?:Power|F)|Power Ice(?: Max)?|Easy[_ ]([SFL]|XL)(?:_Pro)?|Razar_Pro|Power Rage(?: Evo)?|Zera-S-Power|Zera[ _][UFS]|Power[ _]?Five[ _]?(?:Pro|Evo|Max|Max(?:Lite|2))|Power(?:Four|Five)|BOOST II(?:se)?|Fest(?:XL)?(?:-Pro)?|Tasty|Boost3|Boost 3(?: Pro)? SE|Expanse|Hercules|Alpha Rage|VergeM|Ice2|Prime [LS]|Spade|Spark 2|Alpha GTR|Wallet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Power Ice(?:[ ](?:Max|Evo))?|Power Rage(?: Evo)?|Zera[ _][UFS]|Alpha GTR|Wallet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFivePro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFiveMaxLite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFiveMax2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Five Evo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Five Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power[_ ]?Five(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spade(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spark 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FestXL-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FestXL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fest-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fest(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFour(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure[_ ]Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure[ _]F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Razar_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Easy[_ ]([SLF]|XL)[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Easy[_ ]([SFL]|XL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HIGHSCREEN )?Easy[- ]Power[- ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HIGHSCREEN )?Easy-Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST IIse(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost 3 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost 3 Pro SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zera-S-Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tasty(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VergeM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WinWin(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Expanse(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hercules(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alpha Rage(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ice2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime ([LS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_|10DTB12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_9DTB39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10DTB12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/]+) Build|Hisense [^);/]+|HISENSE; |HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9\-]*|HNR55[01]T|E270BSA|HWCD100E|HITV300C|M470BS[AE]|EG98|E2281|EG680|I46D1G|HAT4KDTV|HITV10[12]C|HLTE([237]00T|200M|203T|202N|21[023567][TM]|22[67]T|22[13]E|230E|103E|310[TM]|31[16]T|500T|501N|510[TM]|7[23]0T)|KS(?:907|964)|U601S Pro|HNR320T|HiSmart [24]K ATV4`),
		regexp.MustCompile(`(?i)HITV10[12]C`),
		regexp.MustCompile(`(?i)M470BS[AE]`),
		regexp.MustCompile(`(?i)HLTE221E|E MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE200T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE210T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE215T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE213T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE311T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE216[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE316T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE226T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F8 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE217T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE227T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HNR550T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HNR551T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE310[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE510[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE500T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HLTE230E|Infinity H40 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE720T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWCD100E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HLTE300T|HLTE200M|HLTE212T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HITV300C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E260T\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U601S Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity H50 ZOOM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity E30SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9\-]*)`),
		regexp.MustCompile(`(?i)(HAT4KDTV|HiSmart [24]K ATV4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KS964(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense (U3) 2021(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+) Pro(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+) Plus(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^/]+)/`),
		regexp.MustCompile(`(?i)HITACHI, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(Amaze[ _](?:S2_4G|S[56] 4G|S1|S[56](?: Plus)?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HOFFMANN|Neo[_ ]A[1379]00|X-Go|X-Play|X-Pro|X_Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neo[_ ](A[1379]00)`),
		regexp.MustCompile(`(?i)HOFFMANN[ _]X[-_ ](Prime|Twist|Max)`),
		regexp.MustCompile(`(?i)X[-_](Play|Go|Pro|Ultra)`),
		regexp.MustCompile(`(?i)(?:Ideal (?:10S|Tab [79])|ALFA(?:10TB|7LM)|ALFA[_ ](?:10RC|10TM?|10MB|7RS|[78]RC|7M)|HT[ _](?:7RT|8MZ))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ideal (?:10S|Tab 9))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALFA[_ ]?(10RC|10T[BM]?|7RS|[78]RC|7L?M|10MB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ideal Tab 7 Ips( 3G)?`),
		regexp.MustCompile(`(?i)HT[ _](7RT|8MZ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Homtom|(?:HT[0-9]{1,2}(?: ?Pro)?|HT3_Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Homtom[_ ])?HT ?([0-9]{1,2})[ _]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Homtom[_ ])?HT ?([0-9]{1,2}?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Homtom ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:EDA50K?|EDA70|EDA51|CK65|CT60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EDA50K?|EDA70|EDA51)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CK65|CT60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001)|MZ104|HZ0010|HZ1012|YK_P30(?:_EEA)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001|MZ104)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HZ0010|HZ1012)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YK_P30)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Horizont (32LE7011D)`),
		regexp.MustCompile(`(?i)HOSIN[ _-]`),
		regexp.MustCompile(`(?i)HOSIN[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)HOSIN[ _-]([^;/]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:HPP-(GS1|L55B)|VLE5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Venus[_ ](?:X[12]|X1[0245679]|R8 PLUS|R[236-9]|R1[028]|X16-1)|Cosmos[ _](?:V8_lite|V19_Plus|V2[0-3]|U2|V1[359]|V[45689]|V8-2)|Pearl K2|Magic Q8|Magic 5 Plus|Magic (?:[89]|1[13])|Hot[_ ]6|Symbol (?:M1|X|Max|R60)|Cyber 9 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cosmos[ _]V8_lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hot[_ ]6?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus R8 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus[_ ]X16(?:-1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus[_ ](X[12]|X1[0245679]|R[236-9]|R1[028])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cosmos[ _](?:V19_Plus|V2[0-3]|U2|V1[359]|V[45689])|Pearl K2(?: Prime)?|Magic Q8|Magic 5 Plus|Magic (?:[89]|1[13])|Symbol (?:X|Max))(?:-2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HT-705XS|705-G Go|1001-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HT-705XS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(1001-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(705-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huadoo[ _](HG0[46]|HG11|V[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huagan[ _]`),
		regexp.MustCompile(`(?i)Huagan[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)KHATAR H-20 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KHATAR H-20 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HW-)?(?:Huawei|MediaPad T1|Ideos|Honor[ _]?|(?:(?:AGS|AGS2|ALE|ALP|AMN|ANA|ANE|ARE|ARS|ASK|ATH|ATU|AUM|BAC|BAH[234]?|BG2|BGO|B[ZK]K|BKL|BL[ALN]|BND|BTV|CA[GMNZ]|CH[CM]|CHE[12]?|CLT|CMR|COL|COR|CPN|CRO|CRR|CUN|DIG|DLI|DRA|DUA|DUB|DUK|EDI|ELE|EML|EVA|EVR|FDR|FIG|FLA|FRD|FRL|GEM|GRA|HDN|HLK|HMA|Hol|HRY|HWI|H[36]0|INE|JAT|JEF|JDN|JDN2|JKM|JMM|JSN|KII|KIW|KNT|KOB|KSA|LDN|LEO|LIO|LLD|LND|LON|LRA|LUA|LY[AO]|MAR|MHA|MRD|MYA|NCE|NEN|NEM|NEO|NXT|PAR|PCT|PIC|PLE|PLK|POT|PPA|PRA|RIO|RNE|RVL|SCC|SCL|SCM|SEA|SHT|SLA|SNE|SPN|STF|STK|TAG|TIT|TNY|TRT|VCE|VEN|VIE|VKY|VNS|VOG|VRD|VTR|WAS|YAL|G(?:527|620S|621|630|735)|Y(?:221|330|550|6[23]5))-(?:[A-Z]{0,2}[0-9]{1,4}[A-Z]{0,3}?)|H1711|U(?:8230|8500|8661|8665|8667|8800|8818|8860|9200|9508))(?:[);/ ]|$))|hi6210sft|PE-(UL00|TL[12]0|TL00M)|T1-(A21?[Lw]|A2[23]L|701u|823L)|G7-(?:L01|TL00)|HW-01K|JNY-(LX[12]|AL10)|OXF-AN[01]0|TAS-(A[LN]00|L29|TL00)|WLZ-(AL10|AN00)|YOK-AN[10]0|NIC-LX1A|MRX-(AN19|AL[01]9|W[0-3]9)|CDY-(?:[AT]N00|AN[29][05]|NX9[AB]|TN[29]0)|GLK-(?:[AT]L00|LX1U)|JER-(?:[AT]N20|[AT]N10)|ELS-(?:[AT]N[10]0|NX9|N39|N04)|AKA-(AL10|L29)|MON-(W|AL)19|BMH-AN[12]0|AQM-([AT]L[01]0|LX1)|MOA-([AT]L[02]0|LX9N)|NTS-AL00|ART-(?:[AT]L00[xm]|L29N?|L28)|MED-(?:[AT]L00|LX9N?|AL20)|EBG-(?:AN[01]0|TN00)|ANA-(?:[AT]N00|NX9)|BZ[AK]-W00|BZT-(W09|AL[01]0)|HDL-(AL09|W09)|HWV3[123]|HW-02L|TEL-[AT]N(?:00a?|10)|KKG-AN[07]0|MXW-[AT]N00|JKM-AL00[ab]|TAH-(?:N29|AN00)m?|C8817D|T1-821W|d-01[JK]|d-02[HK]|KRJ-(?:W09|AN00)|HWT31|Y320-U10|Y541-U02|VAT-L19|70[14]HW|60[58]HW|NOH-(?:NX9|AN0[01]|AN50|AL[01]0)|TNNH?-AN00|LIO-(?:[TA]L00|[LN]29|AN00)|KOB2-[LW]09|AGS3-(?:[WL]09|AL0[09]|W00[DE])|DNN-LX9|NEY-NX9|LON-AL00|HLK-L41|503HW|AGR-(?:[LW]09|AL09)|PPA-LX[12]|ANG-(?:AN00|LX[12])|NOP-AN00|ALA-AN70|DVC-[AT]N[02]0|302HW|Nexus 6P|DBY-W09|WKG-(?:LX9|[AT]N00)|JSC-(?:AN00|AL50)|OCE-A[NL][015]0|NZA-AL00|BRQ-A[LN]00|BZC-(?:AL|W)00|NEN-L(?:X1|22)|KOZ-AL[04]0|NTH-(?:AN00|NX9)|MRR-W[23]9|WGR-(?:W[10]9|AN19)|TET-AN00|SCMR-(?:W09|AL09)|OXP-AN00|HJC-(?:AN90|LX9)|CDL-AN50|CND-AN00|NTN-(?:LX[13]|AN20|L22)|RNA-[AT]N00|CHL-(?:A[LN]00|AL60)|ELZ-AN[012]0|NAM-(?:LX9|AL00)|JLH-AN00|JAD-(?:AL[056]0|LX9)|AGS3K-[WL]09|AGRK-[WL]09|MT2L03|LSA-AN00|KJR-W09|TET-A[NL][05]0|TYH601M|RTE-AL00|BAL-AL00|BZI-AL00|BZT3-(?:AL00|W09)|BZD-(?:W00|AL00)|MLD-AL[01]0|AGM3-(?:W09|AL09)HN|ABR-AL00|GIA-AN00|LEO-DLXX|BZA-L00|MGI-AN00|CMA-AN00|NEW-AN90|KRJ2-(?:W09|AN00)|BRT-(?:W09|AN09)|ANY-AN00`),
		regexp.MustCompile(`(?i)POT-[TA]L00a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z100-UL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y320-(?:U10|T00|U05)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y330-U05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y541-U02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8818(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G527-U081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G620S-L0[13]|C8817D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G630-U251(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G7-(?:L01|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P7-L10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G730-C00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H1711(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y221-U(?:[12]2|[0345]3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y550-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y560-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huawei g700(?:-(?:U[012]0|T0[01]))?`),
		regexp.MustCompile(`(?i)ART-[AT]L00[xm](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MED-(?:[AT]L00|AL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG-[ACT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NCE-(AL[10]0|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-(?:TL10|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SLA-(?:AL00|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIG-(?:[AT]L[10]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TRT-AL00[A]?|TRT-TL10A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LDN-(?:AL[12]0|TL[02]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-[AT]L10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRD-[TA]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DVC-[AT]N20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DVC-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PPA-AL20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FRL-[AT]N00`),
		regexp.MustCompile(`(?i)MLD-AL[01]0`),
		regexp.MustCompile(`(?i)U8665(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MED-LX9N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G735-L(?:03|12|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHC-U(?:0[13]|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?G621-TL00M?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KII-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLL-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JAD-(?:AL[056]0|LX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8860(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COL-(?:AL[01]0|TL[01]0|L29|L10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HRY-(?:[AT]L00[A]?|LX[12]|LX1MEB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HRY-LX1T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9508(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YAL-(?:L21|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LRA-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HRY-AL00T[a]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YAL-(L41|AL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MAR-LX1H|YAL-AL50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BMH-(?:AN[12]0|TN10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EBG-[AT]N00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EBG-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CDY-(?:AN9[05]|NX9A|TN90)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LRA-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MXW-[AT]N00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?H30-(?:C00|L01M?|L02|U10|T00|T10)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hol-U19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G750-T01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?SCL-(?:AL00|CL00|TL00H?)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CHM-U01(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Honor 4c Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CHE2?-[UT]L00[HM]?|CHE1-CL[12]0|CHE2-L(?:1[12]|23)|Che1-L04|CHE-TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CUN-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CAM-(?:AL00|TL00H|TL00)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-(?:AL10|L51|UL10|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-(?:L22|TL00H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?KIW-(?:AL10|TL00H|[TC]L00|L2[1-4]|UL00)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTH-(?:NX9|AN00)`),
		regexp.MustCompile(`(?i)JLH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTN-(?:LX[13]|L22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNA-[AT]N00`),
		regexp.MustCompile(`(?i)((?:Honor_|HW-)?H60-L(?:01|02|03|04|11|12)(?:_TD)?|HW-H60-J1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-TL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PE-(UL00|TL[12]0|TL00M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?DLI-(?:AL10|L[24]2|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L21HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JMM-L22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?BLN-(?:L2[124]|AL[1-4]0|TL[01]0(?:[);/ ]|$))`),
		regexp.MustCompile(`(?i)(?:Honor[_]?|HW-)?PLK-(?:AL10|CL00|TL00|TL01H?|UL00|L01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUM-(?:AL[20]0|L33[A]?|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUM-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?(?:LND-(?:AL[34]0|L29|TL40)|AUM-L41)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATH-(?:[CAU]L00|TL00H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?DUA-(?:L22|LX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?BND-(?:AL[01]0|TL10|L2[14]|L31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FRD-(?:AL[01]0|L0[249]|L1[49]|DL00)|VAT-L19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRA-(?:AL00X|AL00|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUK-(?:L09|TL30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEN-L22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JAT-L(29|X[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JAT-L41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKK-(?:AL[10]0|L21|L22|LX2|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KSA-(LX[239]|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JSN-L(?:2[123]|42)|JSN-[TA]L00[a]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARE-(?:AL[10]0|L22(?:HN)?|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STF-(?:AL[10]0|L09S?|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOA-LX9N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AKA-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LLD-(?:AL[01]0|L[23]1|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LLD-AL[23]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUA-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLK-AL00a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLK-(?:AL10|L4[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAM-UL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTS-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNY-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RVL-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EDI-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VKY-TL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOG-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-(?:[AT]N00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-NX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COR-(?:AL[01]0|L29|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASK-AL(00x|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMA-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KSA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNNH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHM-[CUT]L00[HM]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AKA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OXP-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NZA-AL00?|KOZ-AL40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHL-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHL-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUA-[TA]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HJC-AN90(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KOZ-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HJC-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JAT-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOA-(?:AL[02]0|TL00))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKL-(?:AL00|AL20|AL30|L09|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCT-[TA]L10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOK-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KNT-(?:AL[12]0|[TU]L10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUK-AL20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JMM-[AT]L[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKL-L04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCT-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OXF-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OXF-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?SCL-L(0[1-4]|21|32)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?LYO-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTN-AN20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TEL-(?:AN(?:00a?|10)|TN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KKG-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DNN-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALA-AN70(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNN-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAH-(?:N29|AN00)m(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TET-A[NL]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALP-(?:[TA]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNE-(?:AL00|L(?:01|03|21|23))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLA-(?:A09|L[02]9|[TA]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMA-(?:[AT]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SNE-(?:AL00|LX[0-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LYA-(?:AL[01]0|L[02]9|L0C|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LYA-AL00P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVR-(?:[TA]L00|L29|N29|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAS-([AT]L00|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAS-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-AN00P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPN-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-(?:[TA]L00|L29|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-N29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-AN00m(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOH-(?:NX9|AN0[01]|AN50|AL[01]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOP-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OCE-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OCE-(?:A[NL]50|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NXT-(?:AL10|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MHA-(?:L[02]9|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLL-L23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LON-(?:AL00(?:-PD)?|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRR-(?:L09|UL[20]0|CL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BND-L34(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CAZ-(?:AL[01]0|TL[12]0)|CAN-L[01][1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:608HW|PRA-LX[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-L11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PIC-(?:[AT]L00|LX9)|HWV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704HW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-(?:L01|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-(?:AL00|L2[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNE-L[02]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWI-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAR-(?:[AT]L00|LX[19]|LX1M|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANE-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INE-(?:AL00|LX[12]r|LX[12]|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCE-(L22|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAR-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEA-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLK-(?:[AT]L00|LX1U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPN-TL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WLZ-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WLZ-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JNY-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JEF-(?:[AT]N00|[AT]N20|NX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JER-(?:[AT]N10|[AT]N20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CDY-(?:[AT]N00|NX9B|[AT]N20)|CDL-AN50|CND-AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JNY-LX2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANG-LX[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEN-L(?:X[13]|22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANG-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BRQ-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BRQ-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAM-(?:AL00|LX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RTE-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WAS-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WKG-[AT]N00`),
		regexp.MustCompile(`(?i)WKG-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIG-L(?:A1|X[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-(?:LX(?:[13]|1T|2J|1AF)|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-LX1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PPA-LX[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VTR-(?:L[02]9|AL00|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WAS-(?:L(?:X1|X1A|X2|X2J|X3|03T)|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VKY-(?:AL00|L09|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EML-(?:[TA]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ANE-(?:LX[123]|LX2J|TL00)|HWV32)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CLT-(?:AL0[01]|TL0[01]|L(?:04|[02]9))l?|HW-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ELE-L(?:04|09|29)|ELE-[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MAR-(?:LX(?:1[BM]|2B|[13]Am?|2J?|3BM)|TL00)|NIC-LX1A|HWV33)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VOG-(?:L(?:04|09|29)|TL00|AL10)|HW-02L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-LX4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JNY-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L29N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ELS-(?:[AT]N00|NX9|N04)|NEY-NX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELS-(?:AN10|N39)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRA-(?:L09|[TU]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRA-UL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ALE-L(?:02|21|23)|ALE-[TUC]L00|503HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PRA-L(?:A1|X[12])|hi6210sft)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVA-(?:AL[10]0|L[012]9|[TCD]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-L(?:[23]1|[26]2|53|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-L52(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SLA-L(?:02|03|22|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L(?:03|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIE-(?:AL10|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-TL[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATH-UL0[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U(8230|8661|8667)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARS-([AT]L00|L22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRO-(?:L[02]2|U00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAG-L[02]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUA-(U22|L2[12]|U03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-(?:L(?:02|03|2[23])|U29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-L(?:01|03|21|23|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMN-LX[1239](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-LX5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRO-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAG-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-(?:LX2|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-L13(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUN-(?:L(?:0[123]|2[123]|33)|U29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SCC-U21|SCL-U31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-L11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-(L41|AL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-L(?:11|21|22|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRD-L(?:X1[NF]?|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-L(?:31|42)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIT-(?:AL00|L01|U02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRD-LX2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y625-U03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y635-L0[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y635-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAM-L(?:03|21|23|32)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TRT-LX[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LDN-L(?:01|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HUAWEI[ _]?)?DUB-(?:LX[13]|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LDN-(?:AL00|L21)|TRT-TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LDN-(?:LX2|TL10)|TRT-(?:L21A|L53))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-(?:LX2|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-AL00a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-AL20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PPA-LX3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L28(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLA-(LX[123]|AL20|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JKM-(?:[TA]L00[ab]?|LX[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-(L2[12]|LX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FRL-L2[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)302HW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NMO-L31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexus 6P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWT31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HDN-[LW]09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH3-(?:AL00|[LW]09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH3-W59(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH3-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DBY-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCMR-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCMR-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-(L09|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HDL-(?:W09|AL09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JDN-(?:AL00|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KJR-W09|KRJ-W09`),
		regexp.MustCompile(`(?i)AGS3-AL09HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W09HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MON-(W|AL)19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZA-W00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZA-L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZC-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZC-W00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2-801L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-AL[01]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-W[0-3]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRR-W[23]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-AN19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WGR-W[10]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WGR-AN19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMR-(?:AL[01]9|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMR-W19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCM-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEM-70[1-3]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JDN2-(:?[WL]09|AL[50]0)|BAH2-(?:AL[01]0|L09|W[01]9))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHT-(?:AL|W)09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VRD-(?:(AL|W)09|AL10|W10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCM-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BTV-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BAH-W09|CPN-(?:L|W)09|CPN-AL00|701HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH-(?:L09|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AGS2-AL00|JDN2-(?:AL00|W09))HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS2-(?:[LW]09|W09HN|W19|L03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KOB2-[LW]09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGR-[LW]09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS-(?:L0[39]|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KOB-(?:L|W)09|BZK-[LW]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BG2-(?:U0[13]|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BGO-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BGO-DL09|PLE-70[13]L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JDN-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FDR-(A01[LW]|A03L)|605HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1-(?:A21[LW]|A2[23]L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1-701u(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T1-82(?:3L|1W)|MediaPad T1 8.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS2-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W00[DE](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZT-(W09|AL[01]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:d-01J|d-02[HK])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(d-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO-BX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO-DLXX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MediaPad[^/;]*) Build`),
		regexp.MustCompile(`(?i)Ideos([^;/]*) Build`),
		regexp.MustCompile(`(?i)(?:HUAWEI )?MT([0-9]+)`),
		regexp.MustCompile(`(?i)Huawei[ _\-]?([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:HW-)?Huawei(?:/1\.0/0?(?:Huawei))?[_\- /]?([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)Huawei; ([a-z0-9 \-]+)`),
		regexp.MustCompile(`(?i)Hurricane[ _]|(?:Flame_Plus|Glaze|Cobra|Ridge Plus|Rush Plus|DZIRE|Android 7.+ Beam|Vulcan|SAGE|Iris Plus 2021|VortexPlus|Excite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hurricane[ _]IGNITE`),
		regexp.MustCompile(`(?i)Hurricane[ _]Bolt`),
		regexp.MustCompile(`(?i)Hurricane[ _]VORTEX`),
		regexp.MustCompile(`(?i)Hurricane[ _]GIGA`),
		regexp.MustCompile(`(?i)VULKANO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hyundai|Ultra (?:Active|Air|Charm|Dream|Energy|Latitude|Link|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)|Ultra_Vision_Plus|E(?:475|504|603)|G(?:24027|2552[34])K|W25042L|HP554O|Seoul S8|L503F Plus|HT0701L16|HT0704K08|HT1004L16|HT1004LI16|Koral_8W2|Eternity[_ ]G25|HYMI 5S Plus|7GB1|7WD1|(?:Android 9.+ E553)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultra[_ ]Vision[_ ]Plus`),
		regexp.MustCompile(`(?i)Ultra (Active|Air|Charm|Dream|Energy Lite|Energy Plus|Energy|Latitude|Link|Live II|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)`),
		regexp.MustCompile(`(?i)Eternity[_ ]G25`),
		regexp.MustCompile(`(?i)E(475|504|553|603)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Hyundai_)?(Eternity_(?:G57L?|G[56]0))`),
		regexp.MustCompile(`(?i)7GB1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)7WD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hyundai ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Hyundai[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:Pryme 01|ST01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GO5_55|BLESS_GO55|BLESSPLUS|KF4Go|KF5bless)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KF4Go|KF5bless)`),
		regexp.MustCompile(`(?i)(?:IKU[_ ](?:A40|T[123]|K3|i[34]|T[_ ]MAX)|Powerful_K55i|Curvy C50L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Powerful_K55i|Curvy C50L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ](A40|K3|i[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ](T[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ]T[_ ]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]\w`),
		regexp.MustCompile(`(?i)IMO[ _]Q([23]) Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q([4]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]FEEL A2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S80(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S89(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S88(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S99(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S98(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S87(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S67(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S78(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Discovery II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _](Y5|Z[67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO TAB X9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KZCAR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INQ[/ ]`),
		regexp.MustCompile(`(?i)INQ/([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)INQ ([^;/]+) Build`),
		regexp.MustCompile(`(?i)HK9-4010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM (?:picasso|vivaldi|newton)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM picasso(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM vivaldi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM newton(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IRA_DUO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IT-(?:1101S?|1101-QUAD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IT-(1101S?)`),
		regexp.MustCompile(`(?i)IUNI[ _]`),
		regexp.MustCompile(`(?i)IUNI[ _](U3|i1|N1)`),
		regexp.MustCompile(`(?i)IconBIT|NT-(3506M|1501C|0704S|0909T|1009T|10[01]1T|1017T|3601P/3602P|3603P|3702S|3805C|3905T|3701S|0701S|0805C|0902S|370[23]M)|XDS[789]4K|Omnicast UHD|Movie Smart 4K|Movie IPTV Quad|TOUCAN (?:NANO|Stick) 4K|NetTAB_Space_3G`),
		regexp.MustCompile(`(?i)NT-10[01]1T`),
		regexp.MustCompile(`(?i)(?:iconBIT )?(Movie Smart 4K|Movie IPTV Quad|Movie Ultra HD 4K|XDS[789]4K|Omnicast UHD|Stick|XDS1000)`),
		regexp.MustCompile(`(?i)(?:Impression[ _\-]?([^/;]+)|A502|I10\-LE|ImPad[ _]?(.*)|ImSmart[ _]?(.*))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A502)`),
		regexp.MustCompile(`(?i)ImSmart[ _]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)ImPad[ _]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(I10\-LE)`),
		regexp.MustCompile(`(?i)Impression[ _\-]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)IF(900[1237]|902[19]|903[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Inch (?:Regulus (?:7.85|II)|Avior 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Regulus 7.85)`),
		regexp.MustCompile(`(?i)(Regulus II|Avior 3)`),
		regexp.MustCompile(`(?i)(?:Inco[ _](Aurora II|Colors|Sphere|Plain[_ ]2S?|Plain2 S|Flex(?: 2S)?|S4|Bloom(?: 2)?)|(Horizon_S|Horizon \+|MATTER))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Inco[ _])?(Plain[_ ]2S?|Colors|Horizon_S|Horizon \+|Aurora II|Flex(?: 2S)?|S4|Bloom(?: 2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Inco Sphere( 3)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X260`),
		regexp.MustCompile(`(?i)Infinix[ _-]X502`),
		regexp.MustCompile(`(?i)Infinix[ _-]X570`),
		regexp.MustCompile(`(?i)Infinix[ _-]X350`),
		regexp.MustCompile(`(?i)Infinix[ _-]X351`),
		regexp.MustCompile(`(?i)Infinix[ _-]X352`),
		regexp.MustCompile(`(?i)Infinix[ _-]X403`),
		regexp.MustCompile(`(?i)Infinix[ _-]X503`),
		regexp.MustCompile(`(?i)Infinix[ _-]X511`),
		regexp.MustCompile(`(?i)Infinix[ _-]X400`),
		regexp.MustCompile(`(?i)Infinix[ _-]X401`),
		regexp.MustCompile(`(?i)Infinix[ _-]X450`),
		regexp.MustCompile(`(?i)Infinix[ _-]X451`),
		regexp.MustCompile(`(?i)Infinix[ _-]X454`),
		regexp.MustCompile(`(?i)Infinix[ _-]X500`),
		regexp.MustCompile(`(?i)Infinix[ _-]X501`),
		regexp.MustCompile(`(?i)Infinix[ _-]X506`),
		regexp.MustCompile(`(?i)Infinix[ _-]X509`),
		regexp.MustCompile(`(?i)Infinix[ _-]X552`),
		regexp.MustCompile(`(?i)Infinix[ _-]X555`),
		regexp.MustCompile(`(?i)Infinix[ _-]X(?:574|602)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X603`),
		regexp.MustCompile(`(?i)Infinix[ _-]X603B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X620`),
		regexp.MustCompile(`(?i)Infinix[ _-]X687B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X687`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6811`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6810`),
		regexp.MustCompile(`(?i)Infinix[ _-]X507`),
		regexp.MustCompile(`(?i)Infinix[ _-]X510`),
		regexp.MustCompile(`(?i)Infinix[ _-]X55[34]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X521`),
		regexp.MustCompile(`(?i)Infinix[ _-]X522`),
		regexp.MustCompile(`(?i)Infinix[ _-]X557`),
		regexp.MustCompile(`(?i)Infinix[ _-]X556`),
		regexp.MustCompile(`(?i)Infinix[ _-]X559c`),
		regexp.MustCompile(`(?i)Infinix[ _-]X559`),
		regexp.MustCompile(`(?i)Infinix[ _-]X606[BC]?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X608`),
		regexp.MustCompile(`(?i)Infinix[ _-]X624`),
		regexp.MustCompile(`(?i)Infinix[ _-]X625`),
		regexp.MustCompile(`(?i)Infinix[ _-]X650`),
		regexp.MustCompile(`(?i)Infinix[ _-]X655F`),
		regexp.MustCompile(`(?i)Infinix[ _-]X655`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680[BCEF]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680`),
		regexp.MustCompile(`(?i)Infinix[ _-]X688`),
		regexp.MustCompile(`(?i)Infinix[ _-]X682[BC]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X689C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X689F`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X659|PR652|X658)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X573B?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6812`),
		regexp.MustCompile(`(?i)Infinix[ _-]X662`),
		regexp.MustCompile(`(?i)Infinix[ _-]X612`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5010`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5515F`),
		regexp.MustCompile(`(?i)Infinix[ _-]X609`),
		regexp.MustCompile(`(?i)Infinix[ _-]X627`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5514D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X653`),
		regexp.MustCompile(`(?i)Infinix[ _-]X657`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6511`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X626`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652`),
		regexp.MustCompile(`(?i)Infinix[ _-]X660`),
		regexp.MustCompile(`(?i)Infinix[ _-]X551`),
		regexp.MustCompile(`(?i)Infinix[ _-]X600`),
		regexp.MustCompile(`(?i)Infinix[ _-]X601`),
		regexp.MustCompile(`(?i)Infinix[ _-]X572`),
		regexp.MustCompile(`(?i)Infinix[ _-]X571`),
		regexp.MustCompile(`(?i)Infinix[ _-]X604`),
		regexp.MustCompile(`(?i)Infinix[ _-]X605`),
		regexp.MustCompile(`(?i)Infinix[ _-]X610`),
		regexp.MustCompile(`(?i)Infinix[ _-]X690`),
		regexp.MustCompile(`(?i)Infinix[ _-]X656`),
		regexp.MustCompile(`(?i)Infinix[ _-]X692`),
		regexp.MustCompile(`(?i)Infinix[ _-]X683`),
		regexp.MustCompile(`(?i)Infinix[ _-]X695`),
		regexp.MustCompile(`(?i)Infinix[ _-]X693`),
		regexp.MustCompile(`(?i)Infinix[ _-]X663`),
		regexp.MustCompile(`(?i)Infinix[ _-]X697`),
		regexp.MustCompile(`(?i)Infinix HOT ([a-z]?[1-6])( (?:Lite|Plus|Pro))?`),
		regexp.MustCompile(`(?i)Infinix[ _-](X[78]00)`),
		regexp.MustCompile(`(?i)Infinix[ _-](X\d+)`),
		regexp.MustCompile(`(?i)Infinix[ _-]([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)(TVB-906X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)intki[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)InnJoo|(?:Halo Plus|Halo X|Halo[ _]4(?:[ _]mini[ _]LTE)?|Halo2 3G|Fire2 Plus LTE|Superb_PLus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]X3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo[ _]X[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo[ _]4[ _]mini[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo2 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]Pro2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Innjoo ONE 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Innjoo[ _]2[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]([2-4])`),
		regexp.MustCompile(`(?i)Innos_?(D6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INNO([a-z0-9]+)`),
		regexp.MustCompile(`(?i)inoiPad mini 2\+32 Wi-Fi\+3G`),
		regexp.MustCompile(`(?i)inoiPad 2\+32 Wi-Fi\+3G`),
		regexp.MustCompile(`(?i)inoiPad mini 1\+16 Wi-Fi`),
		regexp.MustCompile(`(?i)INOI (2|5) Lite (2019|2021)`),
		regexp.MustCompile(`(?i)INOI[_ ]([13])[_ ]LITE`),
		regexp.MustCompile(`(?i)INOI ([257]) (?:\d\+\d+ )?(2019|202[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INOI[_ ]([^);/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)NS-(P11A8100|P10A8100|P10A6100|P16AT08|P16AT10|P16AT785HD|P08A7100|P10A7100)(?:[);/ ]|$)|AFTEAMR311|AFTJMST12`),
		regexp.MustCompile(`(?i)NS-(P10A6100|P16AT10)`),
		regexp.MustCompile(`(?i)NS-(P10A8100|P10A7100)`),
		regexp.MustCompile(`(?i)Intex|(Aqua|Cloud[ _][XY][0-9]{1}|Cloud (?:Fame|Glory) 4G)|CLOUD TREAD|IM0318ND(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _]LIONS[ _]T1[ _]LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _]LIONS[ _]([NT]1|[23]|E3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA (A4) PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _](A4|S[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA CRYSTAL\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA FulVU e5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA JEWEL 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Intex[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)CLOUD TREAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cloud (?:Fame|Glory) 4G)`),
		regexp.MustCompile(`(?i)(Aqua|Cloud)[ _\.]([^/;\)]+)(?:[ _]Build|/|\))`),
		regexp.MustCompile(`(?i)Intex[ _]([a-z0-9_+\-]+)`),
		regexp.MustCompile(`(?i)(Fighter|Eager|Royal R[1-8])(?: Build|[;)])`),
		regexp.MustCompile(`(?i)INVIN[ _-]|KM5PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INVIN[ _-](X[24]|KM[678])`),
		regexp.MustCompile(`(?i)IRBIS|TZ(1(?:0[04]|42|5[01]|84|65|7[01345-89]|8[356]|9[12578])|200|49|55|72|22|7(?:0[127]|1[1-46789]|2[021567]|3[025-8]|4[257]|5[23457]|6[12]|72|7[137]|8[1]|9[147])|8(?:[34]1|32|5[3-8]|6[2-5]|7[12478]|8[1-5]|9[0127])|96[0-9])|TZ85|TZ13|TZ(?:one|art|HIT|81L)|(SP(?:0[56]|2[01]|4[1-36]|40[12]|45[345]|49[34]|50|51[0147]|531|54[12]|55[0124]|571))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TZ(?:[0-9]+)|TZ(?:one|art|HIT|81L))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SP[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Vox[_ ](?:[45]S|Alpha|POP|STEEL Plus|Energy|FORTIS|VERO)|IS2_?Plus|IS2S|Next_P_PRO|IRS002-16|X1 mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vox[_ ]([45])S`),
		regexp.MustCompile(`(?i)VOX[_ ]FORTIS`),
		regexp.MustCompile(`(?i)VOX[_ ]VERO`),
		regexp.MustCompile(`(?i)IS2_?Plus`),
		regexp.MustCompile(`(?i)TPC-[A-Z0-9]+|TPCY-TX[TE][^);/ ]+`),
		regexp.MustCompile(`(?i)TPC-([A-Z0-9]+)`),
		regexp.MustCompile(`(?i)(TPCY-TX[TE][^);/ ]+)`),
		regexp.MustCompile(`(?i)JFone[ _](JS501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JKL[_ ](A28)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JVC[;,]|AV-10NT310`),
		regexp.MustCompile(`(?i)JVC[;,](32D1290)`),
		regexp.MustCompile(`(?i)JVC, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(AV-10NT310)`),
		regexp.MustCompile(`(?i)Remix (?:Pro|Mini)`),
		regexp.MustCompile(`(?i)(?:JK(?:960|[71]03) 3G|JK702|JK101|JK[17]00 v2.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JK(960|[71]03) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JK(702|[17]00 v2.0|101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jesy_(J7)|J9S_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jesy_(J7)`),
		regexp.MustCompile(`(?i)JK-?(760)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JIAYU[ _-]|(?:JY-G4[\\_]G5|(?:JY-[a-z0-9]+)|JY_G4C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JIAYU G4_G5|JY-G4[\\_]G5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JIAYU[ _-](G4[S]?|G2F|G3[S]?|S[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JY[-_]([a-z0-9]+|G4C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga[-_ ]|(?:(?:Fresh|Optim)4G|Pass(?:Plus|3G)|PicassoNote|Hotz[_ ]M1|WinPRO|Touch4G|Start(?:3G|LTE)?|IGO[ _]L[41]|Basco (?:L3|L[45]00|XS1|S2)|M500-1|Hit4G|A450|Neon|JoyPRO|Fresh|GoalPlus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Optim4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hotz[_ ]M1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hit4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PassPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pass3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GoalPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Win|Joy)PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Touch4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Start3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StartLTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Start(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PicassoNote(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Iron(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Basco neo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M500-1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Jinga[ _])?Basco[ _](L[13]|L[45]00|XS1|S2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Trezor S1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JINGA_IGO_L2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JINGA[_ ])?IGO[_ ]([ML]1|L4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JINGA[_ ])?(Neon|A450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS1542QWN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS1542QWN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Revolution TnT3|Xtreme_(?:[37]|3x)|Xtreme (?:XT84|XT309 Plus|1))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Revolution (TnT3)`),
		regexp.MustCompile(`(?i)Xtreme (XT84)`),
		regexp.MustCompile(`(?i)Xtreme (XT309) Plus`),
		regexp.MustCompile(`(?i)Xtreme[ _]([137]|3x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy (?:HH|JD)`),
		regexp.MustCompile(`(?i)Joy[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)EZpad ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER(s)?|COSMO[_ ](L707|L808)|BLASTER|FREEDOM[ _](C100|M303|X1)|Freedom`),
		regexp.MustCompile(`(?i)COSMO[_ ](L707|L808)`),
		regexp.MustCompile(`(?i)FREEDOM[ _](C100|M303|X1)`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER2s`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER2`),
		regexp.MustCompile(`(?i)K-?Touch[ _][a-z0-9]+|Pace 2 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K-?Touch[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)K-?Touch[ _]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KATV-01) PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kddi-([a-z0-9]+)|INFOBAR A01`),
		regexp.MustCompile(`(?i)kddi-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)INFOBAR (A01)`),
		regexp.MustCompile(`(?i)KINGZONE_|K1[_ ]turbo`),
		regexp.MustCompile(`(?i)KINGZONE_(N5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K1[_ ]turbo`),
		regexp.MustCompile(`(?i)KOPO[ _-]`),
		regexp.MustCompile(`(?i)KOPO[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)KOPO[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)KREZ[_ ]`),
		regexp.MustCompile(`(?i)KREZ[_ ](SL502)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KREZ[_ ](TM100[12]S8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KRIP_|K(?:4[bm]|5[bdm]|6b|55h|57|65)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K(4[bm]|5[bdm]|6b|55h|57|65)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KRIP_K4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NET1100|NET_(?:TITAN|VOLT)`),
		regexp.MustCompile(`(?i)NET_(TITAN|VOLT)`),
		regexp.MustCompile(`(?i)(KM-[a-z0-9]+|EV-[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KAAN[ _](N[12]|A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KaiCloud[ ]?(7[48]4|942)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KALLEY|(?:ELEMENT (?:4 Plus|MAX|Q)|ELEMENT_PRO_2|K-BOOK(?:8MG|73G)|SILVER_MAX|Silver Max (?:Lite|Pro)|Black G|ATV R[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Silver Max (Lite|Pro)`),
		regexp.MustCompile(`(?i)K-BOOK(8MG|73G)`),
		regexp.MustCompile(`(?i)ATV (R[12])`),
		regexp.MustCompile(`(?i)KALLEY,(55D1240)`),
		regexp.MustCompile(`(?i)KJ-(OB0[23]|YUBI|SMART4K|GOCHI|ALFARK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Browser-)?Karbonn|K9 Kavach 4G|K9[_ ](?:Viraat|Smart)[_ ]Plus|K9 Music 4G|K9 Smart|K9 VIRAAT 4G|Aura (?:Sleek Plus|Power 4G Plus|Note Play|Note 2)|Titanium[ _](?:3D-Plex|Octane Plus|Vista 4G|Jumbo|S360|S1[059]|S35|S20[13]|S22|S[15]|S200 HD|Frames S7|MOGHUL|S9)|MACHFIVE|MACHONE|K-lite F3|Sparkle V|Alfa A114 Quad|Quattro[ _]L(?:45|5[025])[ _](?:HD|IPS|VR)|A9 Indian|S2052GB`),
		regexp.MustCompile(`(?i)K9[_ ]Smart[_ ]Plus`),
		regexp.MustCompile(`(?i)K9[_ ]Viraat[_ ]Plus`),
		regexp.MustCompile(`(?i)karbonnK9 Viraat 4G|K9 VIRAAT 4G`),
		regexp.MustCompile(`(?i)Titanium[ _]S2[ _]Plus`),
		regexp.MustCompile(`(?i)Titanium[_ ]S(99|360|1[059]|109|35|200 HD|20[13]|22|[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Titanium[ _]MOGHUL`),
		regexp.MustCompile(`(?i)Titanium[ _]3D-Plex`),
		regexp.MustCompile(`(?i)Quattro[ _]L(5[05])[ _]HD`),
		regexp.MustCompile(`(?i)Quattro[ _]L(45)[ _]IPS`),
		regexp.MustCompile(`(?i)Quattro[ _]L(52)[ _]VR`),
		regexp.MustCompile(`(?i)Karbonn ([a-z0-9]+) WAP-Browser`),
		regexp.MustCompile(`(?i)WAP Browser-Karbonn ([a-z0-9]+)/`),
		regexp.MustCompile(`(?i)Karbonn_([^;/)]+)`),
		regexp.MustCompile(`(?i)Karbonn ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Karbonn ([^;/]+)/`),
		regexp.MustCompile(`(?i)Kata[ _-]`),
		regexp.MustCompile(`(?i)Kata[ _-](C3|L1|M3s|M4|V[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata[ _-]i5-\w`),
		regexp.MustCompile(`(?i)Kata-(T5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata-Tmini4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata Box 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kazam|(?:Trooper_X[0-9][0-9]|Tornado 348|TROOPER 4\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TROOPER 4\.0`),
		regexp.MustCompile(`(?i)Trooper_X([0-9])([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kazam[; _]([^;/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Alumini_?3_?Plus|Alumini ?[23]|KEMPLER_(?:P1|TV|[X9]|8_PLUS)`),
		regexp.MustCompile(`(?i)Alumini ?2`),
		regexp.MustCompile(`(?i)Alumini_?3_?Plus`),
		regexp.MustCompile(`(?i)KENEKSI|(?:Hemera|Teta Dual|Helios)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hemera|Teta Dual|Helios)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]liberty`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]FLASH`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]SUN`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]ZETA`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]SIGMA`),
		regexp.MustCompile(`(?i)KENEKSI[ _-](Moon|Libra_Dual|Glass|Amber|Chance|Amulet|Choice|Crystal|Dream|Delta[_ ]Dual|Norma 2|Norma|Sky|Fire 2|Fire|Flame|Flora|Rock|Solo|Soul|Step|Smart|Star|Storm|Wind)`),
		regexp.MustCompile(`(?i)Three[_ ]Proofings[_ ]W([5-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kiano|Elegance_[45]_[015](?:_PRO)?|Elegance 6|CORE 10.1 DUAL 3G|Intelect ?(7|8|10)|Slim ?Tab ?\d+(?:[_ ]3GR?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slim ?Tab ?(\d+)(?:[_ ]3GR?)?`),
		regexp.MustCompile(`(?i)CORE 10.1 DUAL 3G`),
		regexp.MustCompile(`(?i)Elegance_(5)_([51])_Pro`),
		regexp.MustCompile(`(?i)Elegance_([45])_([015])`),
		regexp.MustCompile(`(?i)(Kiano)?(Intelect|Elegance) ?(7|8|10)?`),
		regexp.MustCompile(`(?i)Kiano[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kingsun[ _-]`),
		regexp.MustCompile(`(?i)Kingsun[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kingsun[ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:[AS]5|X4)_CRISTAL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X4|[AS]5)_CRISTAL`),
		regexp.MustCompile(`(?i)KIVI [24]K|(?:24H600G[RU]|24FR50WU|24HK30B|32HR55GU|32H700GU|4[39]UP50GU|40UR50G[RU]|40U600G[RU]|55U600G[RU]|65UP50GU|55U[PC]50G[RU]|50U600G[RU]|50UX10S|55UR50G[RU]|40FK30G|40FR5[02]BR|43U(?:800BR|600KD|K35G)|50FK30G|50UK35G|32HR50GR|55UC30G|32HK30G|40FK30G|32HR50GU|43UK30G|32FR50(?:WR|BU)|32FK3[02]G|32H600KD)(?:_-Ver0[0-9])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(24H600G[RU]|24FR50WU|24HK30B|32HR55GU|32H700GU|4[39]UP50GU|40UR50G[RU]|40U600G[RU]|55U600G[RU]|65UP50GU|55U[PC]50G[RU]|50UX10S|50U600G[RU]|55UR50G[RU]|40FK30G|40FR5[02]BR|43U(?:K35G|600KD|800BR)|50FK30G|50UK35G|32HR50GR|32FR50(?:WR|BU)|32FK3[02]G|32H600KD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(55UC30G|40FK30G|43UK30G|32HR50G[RU]|32HK30G|32FK32G)_-Ver0([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KIVI ([24]K Android TV)`),
		regexp.MustCompile(`(?i)KLIPAD_|(?:KL-V905|KL4889|KL9878A?(?:_EEA)?|7589AN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KLIPAD_)?(V355B?|KL600|KL-V905)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KL4889|7589AN|KL9878A?)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kocaso|M(?:6200|729|7[357][026][hw]?|76[01236][bw]?|83[016]|8[567]0|1050s|106[012368]w?|1070|X736(?:-kit)?|X780)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M6200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M729(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(7[357][026])[hw]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(76[01236])[bw]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX780(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(83[016])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(8[567]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1050S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(106[012368])W?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX736(?:-kit)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kocaso[ _\-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kocaso[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)KODAK|(?:IM5|KD50|Ektra|Smartway[_ ](?:[FT]1|L2)|D55L|D60LX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KD50|D55L|D60LX)`),
		regexp.MustCompile(`(?i)Ektra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KODAK[_ ])?SMARTWAY[_ ]L1 PRO`),
		regexp.MustCompile(`(?i)(?:KODAK[_ ])?SMARTWAY[_ ]([FLMTX]1|[LM]2|T3)`),
		regexp.MustCompile(`(?i)Tablet (7|10)`),
		regexp.MustCompile(`(?i)Kogan ?(SmarterTV(?: 2K)?|TV|TVAP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kogan[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kogan[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Komu[_ -]`),
		regexp.MustCompile(`(?i)Komu[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Komu[_ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)KONKA[_ ]([a-z0-9]+)|(?: RE1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)W(9[67]0)`),
		regexp.MustCompile(`(?i)( RE1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KONKA[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:BIGCOOL|COOLFIVE|COOL-K|Just5|Link5|EASY(?:5|62)|CITY55|Cool55|SKY_55_EEA|android 11.+ SWEET5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BIGCOOL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COOL-K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cool55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COOLFIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Just5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Link5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY(5|62)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CITY55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY_55_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Koobee[ _\-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Koobee[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(K1 Trio)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kooper-mobile-W502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KORIDY[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(KL1071Z|KL1084)`),
		regexp.MustCompile(`(?i)Kruger[ _&]Matz|KrugerMatz[ _]|K&M|FLOW ?5PLUS|FLOW 4 PLUS|Flow 9|FLOW_5|FLOW7|FLOW6(?:S|Lite)|DRIVE9|DRIVE 8|DRIVE[_ ]6S?|MOVE8mini|MOVE9|MOVE_|LIVE_6plus|LIVE 5 PLUS|Live [89]|LIVE4_KM043[89]|LIVE 7S|Flow 7S|KM(?:106[679]|1065G|0701_1|0702|0805_1|1070)`),
		regexp.MustCompile(`(?i)MOVE[_ ]([78]|6S?)`),
		regexp.MustCompile(`(?i)DRIVE[ _]?([45689][S]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW ?([54]) ?PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW6Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW[ _]?([4-7][S]?|9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE4_(KM043[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KrugerMatz_LIVE4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)_LIVE5_(KM0450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE 5 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE_6plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE ([79])S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Live ([89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOVE9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(106[679])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(1070)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(1065G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(701)_1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(805)_1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(702)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K&M,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)KULIAO (K10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ambition|Beyond)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai[ _\-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Kurio[_ ]?(10S|7S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kurio[_ ]?Phone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kyocera|KWC-|QC-[0-9]{4}|(?:QC6035|NP501KC|302KC|503KC|602KC|705KC|901KC|C51[27]0|C5155|C5215|C67[35]0|C6522N?|C6530N|C6740N?|C6743|E6[89]10|KYL2[13]|KYV3[1-9]|KYT3[123]|KYF3[123579]|KYF40|KYX31|KYG01|KYY2[1-4]|S2151|KC-S701|S[468]-KC|KYV40U?|KYV4[1-8]|KYV4[47]|KC-S301AE|X3-KC|E6560[CT]|E6782[L]?|E6790(?:TM)?|SZJ-JS201|KCP01K|[47]04KC|A001KC|WX10K|URBANO PROGRESSO|E7110|E6921)(?:[-_]u2?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S4-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S6-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S8-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5155(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)503KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)404KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)302KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP501KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WX10K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYX31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5170(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5215(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C6522N?`),
		regexp.MustCompile(`(?i)C6740(N)?`),
		regexp.MustCompile(`(?i)E6560[CT]`),
		regexp.MustCompile(`(?i)(?:KYOCERA-)?E68[12]0`),
		regexp.MustCompile(`(?i)(?:KYOCERA-)?(?:E69[12]0|E6921)`),
		regexp.MustCompile(`(?i)KYL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYL23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY24(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF32(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF35(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF3[179](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV48(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV35(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV46(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV32?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV47(?:-u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV43(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)705KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV37(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV42(?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV44(?:_u2?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT32(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV40U?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV34(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV(?:45|38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Kyocera-)?E6790(?:TM)?`),
		regexp.MustCompile(`(?i)X3-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6782(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6782L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KCP01K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KC-S301AE|SZJ-JS201)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A001KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URBANO PROGRESSO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kyocera-KZ-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Kyocera(?:[\-/])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KWC|QC)-?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KA-E410W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ureki_U1|Victor V1|DART KZ07|REX RX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sapphire 8|Sapphire[76]|Mega plus[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mega plus([23])`),
		regexp.MustCompile(`(?i)Sapphire ?([678])`),
		regexp.MustCompile(`(?i)(Glam|New York|Dubai)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LCT_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:LEM14|LEM12Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LEM12)Pro`),
		regexp.MustCompile(`(?i)(LEM14)`),
		regexp.MustCompile(`(?i)[^\d]LG|Web0S; Linux/SmartTV|portalmmm/2\.0 (?:KE|KG|KP|L3)|(?:VX[0-9]+|L-0[12]D|L-07C|P713|(LM-[A-Z][0-9]{3}[A-Z]{0,3}(?:\(FGN?\)|\(G\)|\.FN|\.F(?:GN?)?)?)|LM-(X625N1|G820QM[0127])|G Watch)(?:[);/ ]|$)|NetCast|RS98[78]|RS500|VS(?:50[01]|835|876|880|98[05-8]|99[056]|(410|415|425|500|880)PP)|VS820|VS870 4G|Nexsus 5|LML(41[34]D|211B|713D|212V)L|VK810 4G|VK815|X5-LG|L-05[DE]|L-03K|L-01[LJK]|L-52A|L-[45]1A|901LG|A001LG|80[12]LG|402LG|LGT32|L-02K|L-01F|LM-V40|DM-01K|DM-02H|LMX130IM|VS810PP|VS425|VM670`),
		regexp.MustCompile(`(?i)DM-(01K|02H)`),
		regexp.MustCompile(`(?i)LG-D32[05]`),
		regexp.MustCompile(`(?i)LG-?(D315|L31L)`),
		regexp.MustCompile(`(?i)LG-D4(?:[01]5|10)`),
		regexp.MustCompile(`(?i)VS980|L-01F|LG-F320L|LG-D800`),
		regexp.MustCompile(`(?i)LG-D6(?:18|20)`),
		regexp.MustCompile(`(?i)LG-(?:D85[012568]|AS990)|VS985|LGLS990|LGL24(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-D693n?|LG-D690n`),
		regexp.MustCompile(`(?i)LG-(?:D72[23568]|F470K)`),
		regexp.MustCompile(`(?i)LG-?H81[012589]|LG-?[LU]S991|LGV32|LG-F500[LSK]|VS986`),
		regexp.MustCompile(`(?i)LG-H525n?`),
		regexp.MustCompile(`(?i)LG-(?:H540|H542|H630)`),
		regexp.MustCompile(`(?i)LG-H8(?:20|3[01]|5[08]|6[08])|VS987|(?:LG-)?RS988|LG-F700[SKL]|LG-?[LU]S992`),
		regexp.MustCompile(`(?i)LG-H84[05]`),
		regexp.MustCompile(`(?i)VS988|LG-H87(?:[01](?:DS|[SI]|AR)?|[23])|LG-?US997|LGM-G600[SKL]|LG-[AL]S993`),
		regexp.MustCompile(`(?i)LGL23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-D68[06]`),
		regexp.MustCompile(`(?i)LM-G820([NV]|QM[0127]|UMB)?`),
		regexp.MustCompile(`(?i)901LG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-H410(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS501|LM-X120`),
		regexp.MustCompile(`(?i)LG-(?:F520K|H788)`),
		regexp.MustCompile(`(?i)(?:LG-)?H50[02]`),
		regexp.MustCompile(`(?i)LG-(?:X15[05]|X165g)`),
		regexp.MustCompile(`(?i)LG-D33[15]`),
		regexp.MustCompile(`(?i)LG-D29[05]`),
		regexp.MustCompile(`(?i)(?:LG-)?H343`),
		regexp.MustCompile(`(?i)(?:LG-)?H650`),
		regexp.MustCompile(`(?i)(?:LG-)?M154`),
		regexp.MustCompile(`(?i)LGM-K120[LSK]`),
		regexp.MustCompile(`(?i)LG-K120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGM-X320[SKL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?P500H`),
		regexp.MustCompile(`(?i)LG-F240[KLS]`),
		regexp.MustCompile(`(?i)LG-E4(?:70f|40|65f)`),
		regexp.MustCompile(`(?i)LG-E4[17]5f`),
		regexp.MustCompile(`(?i)(L-05[DE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-L160L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:P713|LG-P71[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-01D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-02D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:F800[SKL]?|H990|H910(?:PR)?|US996|V34|LS997)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q710(?:\(FGN\)|[\.]?FGN)`),
		regexp.MustCompile(`(?i)LG-(?:K520|F720[SL])`),
		regexp.MustCompile(`(?i)LG-(?:K53[05])`),
		regexp.MustCompile(`(?i)LM-Q[67]10\.FG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(Q72[57][KLS]|Q610.FGN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q815[KSL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGM-X800[KL]|LG-H970`),
		regexp.MustCompile(`(?i)LM-Q925[LKS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(?:Q730N|Q620)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q520N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGV33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-03K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-01L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS835(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:MS550|K550)`),
		regexp.MustCompile(`(?i)L-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:MS63[14]|H63[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:LS777|L84VL|M430|L83BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?([TM]P450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q710|LML713DL|LG-Q710[AP]L`),
		regexp.MustCompile(`(?i)(?:LM-Q720|LGL722DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-G710(N|VM)?|LG-G710`),
		regexp.MustCompile(`(?i)LM-X410\.FG?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGL455DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LML41[34]DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?L355DL`),
		regexp.MustCompile(`(?i)LG-(?:K580|F690[LS])`),
		regexp.MustCompile(`(?i)LG-(?:SP320|M32[27])`),
		regexp.MustCompile(`(?i)LG-K200|LGLS676`),
		regexp.MustCompile(`(?i)LG-(?:K500|F650)`),
		regexp.MustCompile(`(?i)LG-(?:M710|H700|US701)`),
		regexp.MustCompile(`(?i)LM-X(?:41[05]K|410S)`),
		regexp.MustCompile(`(?i)LM-X(415[LS]|410L)`),
		regexp.MustCompile(`(?i)LM-X410(?:\.FN|\(FG\))`),
		regexp.MustCompile(`(?i)LM-X(?:320|410[UP]M)|LGL322DL`),
		regexp.MustCompile(`(?i)(?:LG-X230|VS425)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-K130(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:M160|L57BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-X430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:802LG|LM-X520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LM-X510[KLS]|X5-LG)`),
		regexp.MustCompile(`(?i)LGMS210|LG-M210`),
		regexp.MustCompile(`(?i)LM-X210[G]?`),
		regexp.MustCompile(`(?i)LM-X220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-X220N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-V40(?:5|9N|5EBW)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(?:V500N?|V450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:RS987|H90[01]|H96[0218]|VS990|F600[LK]|K428)`),
		regexp.MustCompile(`(?i)LG-(?:X240|M200)`),
		regexp.MustCompile(`(?i)(?:LG-)?RS500`),
		regexp.MustCompile(`(?i)(?:LG-)?VS500`),
		regexp.MustCompile(`(?i)LM-X212\(G\)|LGUS215`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:VS995|F800K|US999|LS997|H91[058]|H990(?:DS|[NT])?)`),
		regexp.MustCompile(`(?i)(?:VS996|LG-(?:H933|H93[012]|H930RE|H932PR|[LU]S998|AS998)|LGM-V300[KLS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L-01K|LGV35|LG-H930DS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L-52A|LM-G900(?:N|TM)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-V700N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A001LG|LM-V600V?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?VS410PP`),
		regexp.MustCompile(`(?i)LM-V350[N]?`),
		regexp.MustCompile(`(?i)(?:LG-)?VS415PP`),
		regexp.MustCompile(`(?i)(?:LG-)?VS425PP`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K100|LS450)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K|MS)33[02]|LG-X210`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K|MS)350`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K420(?:N)?|F670[KLS]?|K430(?:DS|DSF|DSY)?|K410|MS428)`),
		regexp.MustCompile(`(?i)(?:LG-)?M250N?`),
		regexp.MustCompile(`(?i)(?:LG-)?M255`),
		regexp.MustCompile(`(?i)(?:LG-?)?[MT]P260`),
		regexp.MustCompile(`(?i)LM-K200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K420(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LM-K500|LGL555DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K526(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q510N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) LM-Q310N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q630N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?M700(?:N|A|DSK|AN)?|LGM-X600[SLK]|LG-M703|LG-US700`),
		regexp.MustCompile(`(?i)LGV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-M257(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K220|LS755|F750K)`),
		regexp.MustCompile(`(?i)(?:LG-?)?M320`),
		regexp.MustCompile(`(?i)(?:LG-)?K371`),
		regexp.MustCompile(`(?i)(?:LG-)?M150`),
		regexp.MustCompile(`(?i)(?:LG-)?F100[SL]`),
		regexp.MustCompile(`(?i)(?:LG-)?VM670`),
		regexp.MustCompile(`(?i)(?:LG-)?P880`),
		regexp.MustCompile(`(?i)(?:LG-)?(H340n?|H32[04])`),
		regexp.MustCompile(`(?i)(?:LG-)?H342|LGMS345`),
		regexp.MustCompile(`(?i)(?:LG-)?H4(?:40|2[02])`),
		regexp.MustCompile(`(?i)(?:LG)?C660`),
		regexp.MustCompile(`(?i)LML21(?:1B|2V)L`),
		regexp.MustCompile(`(?i)VS880(PP)?|LG-D690`),
		regexp.MustCompile(`(?i)LM-F100N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-T60[05]`),
		regexp.MustCompile(`(?i)LG-?(?:UK|V)410`),
		regexp.MustCompile(`(?i)LG-?(?:LK430|V400)`),
		regexp.MustCompile(`(?i)LG-V49[56]`),
		regexp.MustCompile(`(?i)LG-V4[89]0`),
		regexp.MustCompile(`(?i)\(LGE?, WEBOS[123], (?:wired|wireless)`),
		regexp.MustCompile(`(?i)\(LGE?, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)webOS.TV`),
		regexp.MustCompile(`(?i)LGE_DLNA_SDK|NetCast`),
		regexp.MustCompile(`(?i)G Watch( R)?`),
		regexp.MustCompile(`(?i)(LM-[A-Z]{1}[0-9]{3}([A-Z]{1,3})?)`),
		regexp.MustCompile(`(?i)LGE(?: |-LG| LG-AX|-)([a-z0-9]+)`),
		regexp.MustCompile(`(?i)FBDV/LG-([a-z0-9]+);FBSV`),
		regexp.MustCompile(`(?i)LGE;([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)LG[ _\-](V90.*|Optimus[ _\-]Pad.*) Build`),
		regexp.MustCompile(`(?i)LGM-([^/;]*)( Build|[;)])`),
		regexp.MustCompile(`(?i)LG(?:/|-LG| |-)?([^/;]*) Build`),
		regexp.MustCompile(`(?i)LG(?:/|-LG| |-)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)LG; ([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 ((?:KE|KG|KP|L3)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(VX[0-9]+)`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV`),
		regexp.MustCompile(`(?i)(APPLLP2?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[ _-](?:NOTE 10[SM]|C3100|S10[ _]Lite)`),
		regexp.MustCompile(`(?i)LT[- ]NOTE (10[SM])`),
		regexp.MustCompile(`(?i)LT[ _]S10[ _]Lite`),
		regexp.MustCompile(`(?i)(LYF[ _])?LS-[456][0-9]{3}|LYF/[^/]+/`),
		regexp.MustCompile(`(?i)(LYF[ _])?LS-4006`),
		regexp.MustCompile(`(?i)LS-450[58]`),
		regexp.MustCompile(`(?i)LYF/([^/]+)/`),
		regexp.MustCompile(`(?i)Land[ ]?Rover[d]?[ _-](?:X1[0-9]|Explore|T878|L15\+|V18|V[168]|X)(?:[);/ ]|$)|Polar3|Vphone[- ]X3`),
		regexp.MustCompile(`(?i)Land[ ]?Rover[d]?[ _-](X1[0-9]|Explore|T878|L15\+|V18|V[168]|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vphone[- ]X3`),
		regexp.MustCompile(`(?i)XM[123]00|S6 Build`),
		regexp.MustCompile(`(?i)XM([123])00([^/;]*) Build`),
		regexp.MustCompile(`(?i)LANIX-([a-z0-9]+)|Ilium[ _]|IliumPad|X120C|Alpha 950`),
		regexp.MustCompile(`(?i)ILIUM[ _]?PAD[ _]?([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Ilium[ _](Alpha [15]s|Alpha [379]|Alpha 1T|L(?:200|6[12]0|9[0125]0|1[0124]00|1050|1120)|LT5[012]0|M[579]s|M7T|M[13579]|S(?:106|520|6[27]0)|X(?:1[12]0|2[0126]0|5[12]0|500B|710))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILIUM[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)LANIX-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Lark|Cumulus|Evolution|FreeMe|Ultimate (?:X4|7i))[ _-]|Build/Lark|Bjorn[_ ]SP-500|FreeBird 5WiFi`),
		regexp.MustCompile(`(?i)Cumulus[ _](5\.5|[56])[ _]HD`),
		regexp.MustCompile(`(?i)FreeMe X2 ([79]) (?:ver|v)?\.([23])`),
		regexp.MustCompile(`(?i)FreeMe[ _]X2[ _]([7-9])`),
		regexp.MustCompile(`(?i)FreeMe X4[ _]7[_ ]?HD`),
		regexp.MustCompile(`(?i)FreeMe X4[ _]9`),
		regexp.MustCompile(`(?i)(?:Lark[ _-])?Evolution[ _](X2 7 3G-GPS|X4[_ ]10\.1|10|X4[_ ]7[ _]IPS)`),
		regexp.MustCompile(`(?i)Ul(?:ti|it)mate (X4 10\.1 3G IPS|X4 8s 3G|7i)`),
		regexp.MustCompile(`(?i)Phablet 6\.0`),
		regexp.MustCompile(`(?i)Bjorn[_ ]SP-500`),
		regexp.MustCompile(`(?i)Cirrus[ _](4\.5|[45])`),
		regexp.MustCompile(`(?i)Lark[ _](Stratus[_ ]5)`),
		regexp.MustCompile(`(?i)Lava[ _]|LAVA(?:A1|X10)|(?:DISCOVER136|KKT QUADRA)|iris[ _]?([^/;)]+)(?: Build|[;)])|A(?:67|76) Build|X1 Selfie Build|X41 Plus Build|(?:Flair (?:[ZS]1|P8)|PixelV1|Pixel V2\+?|Z60s|Z61_2GB|A97 IPS|A97 2GB PLUS|L[EH]9920(?:[_ ]P)?|L[NEH]9910|LH9810|Ivory(?:S1|S4G)?|A76Plus|Grand2c|AH9910| A3_mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Flair ([ZS]1|P8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AH9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LXX501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z61P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A97 IPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF6810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A97 2GB PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A76Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) A3_mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixel V2\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixel ?V([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1 Selfie(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X41 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LAVA[_ ]?)?A([13]|67|76)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z61_2GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMX06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMG01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z60s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9920[ _]P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF9810(?:_2GB)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9830(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9950(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KKT40[ ]?Power[P\+]`),
		regexp.MustCompile(`(?i)Ivory(S1|S4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lava[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)LAVA[ _]([^/;)]+)/MIDP`),
		regexp.MustCompile(`(?i)Le ?Pan|TC970 ([^;/]+)Build`),
		regexp.MustCompile(`(?i)TC970 ([^;/]+)Build`),
		regexp.MustCompile(`(?i)Le ?Pan ?(II|S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le ?Pan ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Letv|LeEco|Le ?X[0-9][^;/]+|Le Max|Le [12]|Le2[_ ]x527|X900 Build|(?:X[89]00\+|X52[67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X800\+`),
		regexp.MustCompile(`(?i)X900\+`),
		regexp.MustCompile(`(?i)X50[10]`),
		regexp.MustCompile(`(?i)(X910)`),
		regexp.MustCompile(`(?i)LEX72[07](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Le ?X526|Le2[_ ]x527|Le 2|X52[67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEX82[09]`),
		regexp.MustCompile(`(?i)Le ?X([^;/]+) Build`),
		regexp.MustCompile(`(?i)Le ?X([^) ;/]+)`),
		regexp.MustCompile(`(?i)Le ?([12][^;/]+) Build`),
		regexp.MustCompile(`(?i)Le Max([^;/]*) Build`),
		regexp.MustCompile(`(?i)Le Max([^ ;/]*)`),
		regexp.MustCompile(`(?i)LeEco ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(Vyper|N-5[07]|N-45|LP DAISY|LP_(?:VEYRON|PRADO|Pro1|B-50))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LP_)?(Vyper|N-5[07]|N-45|Pro1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MY)?LEAGOO[ _-]?|(?:XRover(?: C)?|Shark 5000|M5 EDGE|KIICAA (POWER|MIX)|Leapad[ _](?:X|7s)|Alfa [125]|Elite [15]|Venture 1|Z10-E|M9 Pro|Power 5|Power[ _]2(?: Pro)?|Android 9.+ M1[23]|Lead 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[- _])?M([89])[_-]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEAGOO[- _](Z[156]|Z5c|M[58]|T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[_ ])?Lead ?([357])`),
		regexp.MustCompile(`(?i)Elite ([15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Shark 5000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power 2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power[ _]([25])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venture 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfa ([125])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XRover( C)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[- _])?(Z10-E|M6|M1[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:My)?Leagoo[- _](E4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Leapad[ _])(7s|10|X)`),
		regexp.MustCompile(`(?i)(?:Ledstar[_ ])?(?:Trendy 5.0|Novus_Premium_6.0)`),
		regexp.MustCompile(`(?i)Trendy 5.0`),
		regexp.MustCompile(`(?i)Ledstar_Novus_Premium_6.0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(32H520T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Leke[ _]Pad-([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lemhoov[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Lenco ([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lenco ([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:LNV-)?Lenovo|IdeaTab|IdeaPad|Thinkpad|Yoga Tablet|Tab2A[0-9]-[0-9]{2}[a-z]?|ZUK[ -_]|(?:TB2-X30L|TB3-710I|YT3-X50[ML]|K50a40|TB-(?:X103F|8504F|X304F|X704V|X704A)|A5500-H|A2107A-H|A3500-HV|A2109A|S6000|Z2 Plus|Vibe[ _](?:P1|S6i Plus|S[23567]i|C|[ZX]2|K5(?: Plus)?|V7)|P2A42|L38011|L18011|[5-8]01LV|[67]02LV|Z2131|K350t|K31-t3|TAB 2 A8-50LC|S90-A|A101LV|P70-A|VR-1541F|d-42A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ?G780`),
		regexp.MustCompile(`(?i)Lenovo ?A3500-FL`),
		regexp.MustCompile(`(?i)(?:Lenovo ?)?A3500-(?:H|HV|F)`),
		regexp.MustCompile(`(?i)(?:Lenovo[ _])?A5500-[HF]`),
		regexp.MustCompile(`(?i)Lenovo ?A7600`),
		regexp.MustCompile(`(?i)TB2-X30[FL]`),
		regexp.MustCompile(`(?i)TB-X6C6[XF]`),
		regexp.MustCompile(`(?i)YT3-X50[FLM]`),
		regexp.MustCompile(`(?i)YT-J706[XF]`),
		regexp.MustCompile(`(?i)TB3-710[IF]`),
		regexp.MustCompile(`(?i)501LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB 2 A10-70L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TB3-850[FM]|601LV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X304[FL]`),
		regexp.MustCompile(`(?i)(?:TB-X704[FVL]|70[12]LV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)801LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X103F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X704A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X605F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X705[FL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J606[LF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J606[FN]`),
		regexp.MustCompile(`(?i)TB-J607F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J616[XF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J706[LF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7104[IF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-8304F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7504X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X606[FXV]A?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X605[FL]C`),
		regexp.MustCompile(`(?i)TB-7305[IXF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7306[XF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ?B8000(-[FH])?`),
		regexp.MustCompile(`(?i)YOGA Tablet 2 Pro-1380[FL]`),
		regexp.MustCompile(`(?i)YOGA Tablet 2-1050[FL]`),
		regexp.MustCompile(`(?i)YOGA Tablet 2-830(?:[FL]|LC)`),
		regexp.MustCompile(`(?i)Lenovo ?B6000(-[FH])?`),
		regexp.MustCompile(`(?i)YT3-X90(L|F|X)`),
		regexp.MustCompile(`(?i)YT3-850[FL]`),
		regexp.MustCompile(`(?i)YT-X705[FL]`),
		regexp.MustCompile(`(?i)S6000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ([ASB][0-9]{4})[A-Z]?\-[EHF]`),
		regexp.MustCompile(`(?i)ThinkPadTablet_(A[0-9]{3})_`),
		regexp.MustCompile(`(?i)ThinkPad ?Tablet([^;/]*) Build`),
		regexp.MustCompile(`(?i)Lenovo ?A3300-(?:GV|H)`),
		regexp.MustCompile(`(?i)TAB 2 A7-30[HGD]C`),
		regexp.MustCompile(`(?i)TB-X505[FX]`),
		regexp.MustCompile(`(?i)TB-X104[FXL]`),
		regexp.MustCompile(`(?i)Tab2A([0-9]-[0-9]{2}[a-z]?)`),
		regexp.MustCompile(`(?i)IdeaTab[ \-_]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Yoga Tablet([^;/]+) Build`),
		regexp.MustCompile(`(?i)TB-8505[FX]S`),
		regexp.MustCompile(`(?i)TB-8505[FX]|TB-8506F`),
		regexp.MustCompile(`(?i)TB-8705[FX]`),
		regexp.MustCompile(`(?i)Lenovo (TB[0-9]?\-[a-z0-9\-]+) Build`),
		regexp.MustCompile(`(?i)Lenovo K30-W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L19111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L10041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78121(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z213[12]`),
		regexp.MustCompile(`(?i)ZUK[ -_]([^/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)K10a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:k50a40|K50-t5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K(1[30]) Note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7010(?:a48)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K350t(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L38041|K5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L39051(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A7020a4[08]|L38012|K52e78)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L19041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K31-t3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A6010Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A6020a46|Vibe K5 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Lenovo-)?(?:A6020(?:a40|l36)|Vibe K5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIBE C|A2020a40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIBE X2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X3(?:a40|c[57]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo X3 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE V7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE S6i Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE[ _]S([23567])i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L79031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L70081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)k33a48(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38043(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38082(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P2A42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)k53a48(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K33a42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P1ma40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vibe P1 Turbo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:P1(?:a42|c72)|Vibe P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2016a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1010a20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z90a40|Z90-7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S1a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S1La40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z6 Pro|L78051)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L58041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L58091(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB2-6(?:70M|50[YM])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB1-750M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB1-770M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S90-A|P70-A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IdeaPad ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)d-42A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo X2(?:-[ER]U)?`),
		regexp.MustCompile(`(?i)LENOVO/81W8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LENOVO/81MV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LENOVO/81SS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo TAB ?([^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Lenovo ([^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:LNV-|Lenovo-)?Lenovo[ \-_]?([a-z0-9_+\-]+)`),
		regexp.MustCompile(`(?i)(LESPH501[14]|LESPH5003B|SUPERNOVA (?:Qi16|Qi32|i3G96[X]?|iS3G)|PULSAR QI3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPERNOVA (Qi16|Qi32|i3G96[X]?|iS3G)`),
		regexp.MustCompile(`(?i)PULSAR (QI3G)`),
		regexp.MustCompile(`(?i)lephone[ _]|lephoneP1`),
		regexp.MustCompile(`(?i)lephone[ _](K7|K10)`),
		regexp.MustCompile(`(?i)lephone(?:[ _])?(W(1[0125]|[279])|T2|P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANOVA A5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lexand[ _]|(?:SC7 PRO HD|S5A[1-4]|S4A[1-5]|S6A1|A811|A802|LPH7_Smarty)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A(811|802)`),
		regexp.MustCompile(`(?i)Lexand[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(MFC[0-9]{3}[a-z]{2,})`),
		regexp.MustCompile(`(?i)MFC17[05]FR`),
		regexp.MustCompile(`(?i)(MFC[0-9]{3}[a-z]{2,})`),
		regexp.MustCompile(`(?i)((?:24|32)TP1HDTA1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIFEMAXX, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Lingwin[ _\-]`),
		regexp.MustCompile(`(?i)Lingwin[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Lingwin[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)LI(22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LOGIC[_ ](X50|X[135]|X4M|L5D|X5[AFT]|X60G|L50T?|L57|L6[01]|X60_PLUS)(:?[_ ]LITE2?)?|L55[ABS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ]X60_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](X5|X4M)[_ ]LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](X5)[_ ]LITE2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](X50|X[13]|X4M|L5D|X5[AFT]|X60G|L6[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(L50T?|L57|L55[ABS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fieldbook F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGICOM[_ ]|(TAB950|TAB1062|E731|E812|E912|E1031|POWER BOT|La[ _]Tab[ _](?:7[24]|10[57]|11[345])|(?:B|C|M|ID|VR)[ _]?BOT[ _]?(?:TAB[ _])?([0-9]+\+?)(?:PLUS)?|KT712A_4\.4|L-?IXIR[0-9]*|L-ITE|L-EGANTONE(?:-R)?|Le Fizz|L-?EMENT.+|Le[ _]?(?:Up|Connect|Hop|Hello|Lift|Hola|Moov[2]?|Must(?: 2)?|Starter L|Fit FR|Spark|Prime|Smooth(?: FR)?)|LeFit)(?:[);/ ]|$|_)`),
		regexp.MustCompile(`(?i)La[ _]Tab[ _](7[24]|10[57]|11[345]|105_P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT712A_4.4|L-IXIR TAB 701 3G`),
		regexp.MustCompile(`(?i)L-?IXIR[ _]TAB[ _]([^);/]+)( Build|[);])`),
		regexp.MustCompile(`(?i)L-ITE[ _](400M|452|50[46] HD|506R HD|552 HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-ITE[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)L-?EMENT[ _]?(350|451|40[103]|55[013]|50[15]|500L?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-?EMENT[ _](?:TAB)[ )]?([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)L-?EMENT[ _]?(74[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB950|TAB1062|E731|E812|E912|E1031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:B|C|M|ID|VR))[ _]?BOT[ _]?((?:TAB[ _])?([0-9]+\+?)(?:PLUS)?)`),
		regexp.MustCompile(`(?i)Le[ _]Connect`),
		regexp.MustCompile(`(?i)Le Hola FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Hola(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LeMoov2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LeMoov(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Fit FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]?Fit`),
		regexp.MustCompile(`(?i)Le Hop(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Hello(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Smooth FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Smooth(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Must 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Must(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Starter L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Spark(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Up(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lumigon[ _](T3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEO(SR620|SC600)|INNOSR545|Lumus[_ ]Ion|AEONSR570)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO(SR620|SC600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INNO(SR545)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lumus[_ ]Ion(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AEON(SR570)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LUNA[ _](?:[VG]55|G[56]0)|TG-L800S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUNA[ _]([VG]55|G[56]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TG-L800S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUXOR, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)M-HORSE|(?:Pure (?:3|2A?)|Pure ?1|Power1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure ?([13]|2A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EROS 4G|MTECH (?:ACE9|TURBO L\d+|TEZ 4G|JAZBAA))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TURBO L(\d+)`),
		regexp.MustCompile(`(?i)M\.T\.T\.`),
		regexp.MustCompile(`(?i)M\.T\.T\. ?Tablet([^;/]+)? Build`),
		regexp.MustCompile(`(?i)M\.T\.T\. ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:M4 SS[0-9]{4}(?:-R)?|M4_B[23]|M4_R2|R2_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M4_B([23])`),
		regexp.MustCompile(`(?i)M4_R(2)`),
		regexp.MustCompile(`(?i)MAXVI[ _](?:MS401)(?:[);/ ]|$)|\w*_?MAXVI?_\w+|MS502[_ ]Orion|MS531`),
		regexp.MustCompile(`(?i)MAXVI[ _](MS401)`),
		regexp.MustCompile(`(?i)MS502[_ ]Orion`),
		regexp.MustCompile(`(?i)\w*MAXVI_(P11|K10|X[358]00)_`),
		regexp.MustCompile(`(?i)(T1270G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MBOX3?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Prime_S|M300 4G|MDC M5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime_S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M300) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MDC M5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MDTV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MEEG[ _-]`),
		regexp.MustCompile(`(?i)MEEG[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)MEEG[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)MEU ([a-z0-9]+) Build`),
		regexp.MustCompile(`(?i)(Caryota [1245789]|Jazz J[13] 2018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Caryota [1245789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jazz (J[13]) 2018`),
		regexp.MustCompile(`(?i)(M35|M20|G7106|G7108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M[0-9]{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G[0-9]{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLLED[ _]`),
		regexp.MustCompile(`(?i)MLLED[ _]([^;/]+)Build`),
		regexp.MustCompile(`(?i)MLLED[ _]([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)IQ(?:0705|L550|1010w?|1012N?|1019N|1025|1060M|1380|1401|1436|1452a|1453|1470|1502a|1511|1552|1553|1568|1570|1805N|1806|1808|1810B_M|1832|1850|1890|5017|L626|9610|181011N|A27X_E|E[12]00|EL41|G550|GW516|L30|L5[01]|M801|M1001|N700|P50|R300|S300|S1001|W503|W511T|W553N?|W60[38]|W626|M960|D700|9013_4N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ0705(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1010W?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1012N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ9013_4N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1019N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1805N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ181011N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1380(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1436(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1452a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1453(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1470(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1502a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1552(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1553(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1568(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1806(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1808(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1810B_M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1832(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1850(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1890(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ5017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ9610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQM960(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQG550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQGW516(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQE100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQE200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQA27X_E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQEL41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQN700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQP50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQS300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQS1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1060M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQR300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW608(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQW603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW626(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW511T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW553N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQL626?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQD700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MMI, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Primo ?(?:9[13]|81|76)|Enjoy 7 Plus`),
		regexp.MustCompile(`(?i)Primo ?(9[13]|76|81)`),
		regexp.MustCompile(`(?i)MTC[ _](968|97[82]|970|982[OT]?|1078)|(?:MTC[_ ])?SMART[ _]?(?:Race[2]?|Sprint|Run|Turbo|Surf[2]?)[ _]4G|MTC975|Smart Bit|Smart_(?:LINE|Light)|(?:MTC[ _])?SMART[ _](?:Run|Start_[23])|Redbox Mini 5\(MTS\)|MTS TV|DV8304-C`),
		regexp.MustCompile(`(?i)MTC[ _]?(97[258]|970[H]?|982[OT]?|968)`),
		regexp.MustCompile(`(?i)MTC[ _](1078)`),
		regexp.MustCompile(`(?i)SMART[ _]Race[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Race2[ _]4G`),
		regexp.MustCompile(`(?i)(?:MTC_)?SMART[ _]Sprint[ _]4G`),
		regexp.MustCompile(`(?i)(?:MTC_)?SMART[ _]Start_([23])`),
		regexp.MustCompile(`(?i)SMART[ _]?Run(?:[ _]4G)?`),
		regexp.MustCompile(`(?i)SMART[ _]Surf2[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Surf[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Turbo[ _]4G`),
		regexp.MustCompile(`(?i)Redbox Mini 5\(MTS\)`),
		regexp.MustCompile(`(?i)MTN-(L860|S620)`),
		regexp.MustCompile(`(?i)MTN-([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)(MC-X7MINI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mafe_M820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N5NOVA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Magnus[ _](?:bravoZ[23]0|Infinity_?(?:G8|G11))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)bravo(Z[23]0)`),
		regexp.MustCompile(`(?i)(?:Magnus[ _])?Infinity_?(G8|G11)`),
		regexp.MustCompile(`(?i)MAJESTIC[ _-]|CRONO ?[0-9]+|(?:TAB (?:647|411) 3G|TAB-714|TAB 711 4G|URANO 77LTE|PLUTO__?26N?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URANO 77LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLUTO__?(26N?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB (647|411) 3G`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]Tab([^;/]+)Build`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]Tab([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]([^;/]+)Build`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]([^);/]+)(?:(?:[);/ ]|$)|$)`),
		regexp.MustCompile(`(?i)CRONO ?([0-9]+) Build`),
		regexp.MustCompile(`(?i)CRONO ?([0-9]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)(?:Build/)?Malata[ _]?([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZUG 3|ZUG 5S(?: Q)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MSP950(1[245]|2[01])|MSP96017|MSP94501|MSP95009|MSP96002|MSP450[79]|(MID713|MID(?:06[SN]|08[S]?|12|13|14|15|701|702|703|704|705(?:DC)?|706[AS]?|707|708|709|711|712|714|717|781|801|802|901|1001|1002|1003|1004(?: 3G)?|1005|1009|1010|7802|9701|9702))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID713|MID(?:06[SN]|08[S]?|12|13|14|15|701|702|703|704|705(?:DC)?|706[AS]?|707|708|709|711|712|714|717|781|801|802|901|1001|1002|1003|1004(?: 3G)?|1005|1009|1010|7802|9701|9702))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MSP450[79]|MSP95009)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MFSTAB(?:_74G)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mara(?: Phones)?[ _](Z1?|X1|S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Massgo[ _]`),
		regexp.MustCompile(`(?i)Massgo[ _]VI2S`),
		regexp.MustCompile(`(?i)Massgo[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Masstel|(?:Juno[ _]Q[567]|Tab10Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Masstel[_ ])?(Juno[_ ]Q[3567]|X9|N4[56]0|N5[2458]0|N536|M05|M1[29]0|M1[125]|M250|M25)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel[_ ]\((M18)\)`),
		regexp.MustCompile(`(?i)Masstel_Tab7LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel_Tab10_?4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel Tab (840|700i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MASTERTECH,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:7116-A5|818 3G|MATRIX GRAVITY|Matrix7116)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(7116-A5|818 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Matrix7116(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS(?:45[036]|505|514)|MS457(?:PLUS)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS457)PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MS(45[0367]|505|514)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maximus[ _]|(Noir X|G10 max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Maximus[ _])?(Noir X|D1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G10 max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maximus_(T2)`),
		regexp.MustCompile(`(?i)Maxtron[ _-](V[327]|S[89]|T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxtron[ _-](V[327]|S[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxtron[ _-](T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Astro[_ ](?:Phablet_9|55?N[_ ]LTE|5 PRO|5s|[45]P|X4|5_GO_LTE|X55s?|4\.5|4|X5)|Astro6|Virtue Z5|Nitro[_ ](?:4S?|55R|5[XRP]|[45] GO|4s LTE)|Gravity_55?_GO|Nitro_Phablet_9s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[_ ](55?)N[_ ]LTE`),
		regexp.MustCompile(`(?i)Astro[_ ]X55[_ ]LTE`),
		regexp.MustCompile(`(?i)Astro[_ ](X55s?|5s|4|X[45]|[45]P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[_ ](4\.5)`),
		regexp.MustCompile(`(?i)Astro (X55s?|5s)`),
		regexp.MustCompile(`(?i)Astro[_ ]X4`),
		regexp.MustCompile(`(?i)Nitro ([45]) GO`),
		regexp.MustCompile(`(?i)Nitro[ _]4s`),
		regexp.MustCompile(`(?i)Nitro[_ ](4|55R|5[XRP])`),
		regexp.MustCompile(`(?i)Gravity_(55?)_GO`),
		regexp.MustCompile(`(?i)(?:Alpha[_ ]X|Maze Alpha)(?:[);/ ]|$)|(?:Android [78].+ Blade|Comet)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Alpha[_ ]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maze Alpha(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Blade|Comet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SSB-(?:500|508)|SSB408D|SSB504R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SSB-?(500|508|408D|504R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M785|800P3[12]C|101P51C|X1010|M7[67]QF6|M17QF6_[43]G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M785(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M17QF6_([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)800P31C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)800P32C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)101P51C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7([76])QF6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mecool[ _-]|(?:KM9PRO|BB2 PRO|K[I]{1,3} PRO|KI PLUS|KM9_TV_BOX|M8SPROW|M8S (?:PLUS|PRO) (?:DVB|[LW]|PLUS)|M8S (?:MAX|PRO))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM9PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM9_TV_BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BB2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K[I]{1,3}) PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KI PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8SPROW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PLUS DVB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PLUS ([LW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO ([LW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mecool[ _-]([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:SmartPad7503G|M-SP10MXA|M-PPAB500|SmartPad970s2(?:3G)?|M[_-][MPS]P[0-9a-z]+|M-IPRO[0-9a-z]+|1AEC|1AZ2[TP])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad7503G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad970s23G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad970s2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP84[02]M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP940M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP8MXA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP7HXAH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP8HXAH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP(?:710|720|725|726|740)GOx?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP876S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8S2[AB]?3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP(101|102|860|875)S2[BW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP85S23G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP10[45][01]S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1S2[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8[24]S4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8S4[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP9S4A3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1[02]S4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP7S4A3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1040MC?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1S4[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10HXxH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXHA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXHL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8PA3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP10PA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP10PA3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-IPRO([18][01]0)[BW](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1AZ2[TP](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M-MP75S23G|M-MP72[01]M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP7S2[ABDK]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP5303G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxB400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAG550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAB500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2G530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPG700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS531(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S650C?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS551U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAG4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP[ABC]G500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S500[BC]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M[_-]PP[Ax]X(470|510|520)U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxG(400|501|[457][PM]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS(532[LU]|470|501|5P?|7P?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxG(450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP([0-9a-z]+)`),
		regexp.MustCompile(`(?i)Medion|(?:MD_)?LIFETAB|([SPX]10[0-9]{2}X|E10[45]1X|X5001|P851X|P850X|E691X|E1050X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MD_)?LIFETAB[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(E450[46]|E5004|S5004|X5001|E5020|P5015|P500[45]|X6001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B5530)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(E10[45]1X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([SPX]10[0-9]{2}X|P851X|P850X|E691X|E1050X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Medion(?: Smartphone)? ([^/;]+) Build`),
		regexp.MustCompile(`(?i)MEDION, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)MegaFon|MFLoginPh|MegLogPh|(MFLogin[34]T?|MS3B|SP-A5|SP-A20i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MFLoginPh|MegLogPh`),
		regexp.MustCompile(`(?i)MFLogin3T|MegaFon Login 3`),
		regexp.MustCompile(`(?i)MS3B|Megafon Optima`),
		regexp.MustCompile(`(?i)(SP-A5)`),
		regexp.MustCompile(`(?i)MegaFon V9+`),
		regexp.MustCompile(`(?i)(?:Meitu[2]?|MP1503|MP1512|MP160[235]|MP170[19]|MP171[138]|MP1801)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MP1512|Meizu M6s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1602(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP17(?:01|13)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP17(?:09|11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meitu2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meitu (Kiss|[MV]4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meizu|MZ-[A-Z]|(M04[05]|MZ-16th(?: Plus)?|MZ-16[st]|M7[12]1C|M35[1356]|M612C|M578CA|M181[36]|M1822|M681C|M6T|MX[ -]?[2345](?: Pro)?|(?:MZ-)?m[1-6] note|M621C|M1852|M57[18]C|M3[ESX]|M3 Max|M031|m1 metal|M1 E|M2|M2 E|M5s Build|PRO [567]|PRO 7-[HS]| 15 Lite| 16th|MZ-15 (?:Lite|Plus)|15 Plus|MZ-16 X| 16 X| 16T|MX6|16s Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M571C`),
		regexp.MustCompile(`(?i)(?:MZ-|Meizu-)?m([1-6])[_ ]note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M1 E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2 E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M578C[A]?|M2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M681C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M621C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M711C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M721C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M6T|MX6|M3E|M3X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M3S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M3 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M5S|M612C`),
		regexp.MustCompile(`(?i)(M04[05]|MX[ -]?2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M35[1356]|MX[ -]?3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX[ -]?4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX[ -]?4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Meizu[- _])?MX[ -]?5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1813(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M1816|M8 lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8c Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO 7-[HS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO ([76]) Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO ([567])`),
		regexp.MustCompile(`(?i)M031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1852(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1822(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16th Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?15 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-15 Lite| 15 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MZ-16th| 16th(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16 X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16s Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meizu (17|C9) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MZ-?M3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Meizu[_ ])?note([89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?Meizu[_ ]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:MZ-)?Meizu[_ ]([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)MZ-([^/;]+) Build`),
		regexp.MustCompile(`(?i)MELROSE[_ ](?:S9\+?|S9P|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE[_ ]S9\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE[_ ](S9|S9P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE_2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SlidePad ?([^;/]*) Build|SPNG?[0-9]{2,4}[a-z]{0,2}(?:[);/ ]|$)|SP704CE?|SP-NG708-3G`),
		regexp.MustCompile(`(?i)SlidePad ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)SPNG([0-9]{2,4}[a-z]{0,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-NG(708)-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP704(CE?)`),
		regexp.MustCompile(`(?i)(?:MiXzo[ _])?(?:ME ?10(?:2[35]|30)|MX1037|MX1024|MX10[24]1|MX1397)([ _][34]G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiXzo[_ ]ME ?(1023|1030)(?:[_ ]([34])G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiXzo[_ ]MX1021(?:[_ ]3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MiXzo[ _])?MX(1037|1041|1024|1397)[ _]4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME ?1025`),
		regexp.MustCompile(`(?i)(?:MicroMax[ \-\_]?[a-z0-9]+|Q327)|4560MMX|P70221|(?:YU(?:5040|5530)|AQ5001(?: Canvas Power)?|N8216|N8301|IN_2b|IN_Note1|ione note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q465(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E451(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4560MMX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN_2b(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E481(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q462(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P70221(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q(3[25]7|301|326|338)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q402\+`),
		regexp.MustCompile(`(?i)YU5040(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q402 ?Plus`),
		regexp.MustCompile(`(?i)Q440Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax[_ ]Q353P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q452(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q421(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E313(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q413(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4251(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax C1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C2APLS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bharat (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ione note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN_Note1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E7533(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ \-\_])?(X291|X246|X252|X458|X312)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ \-\_])?(P[a-z0-9]+)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ \-\_])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)KIN\.(One|Two)|RM-(?:1010|1031|106[57]|107[23467]|1089|109[02]|1096|1099|1109|111[348]|1127|1141|115[24]|994)|Microsoft; Lumia|Lumia (?:1530|1320|950|850|650|640|550|535|435)|Corporation/Surface|Surface Duo`),
		regexp.MustCompile(`(?i)KIN\.(One|Two)`),
		regexp.MustCompile(`(?i)RM-1099|Lumia 430`),
		regexp.MustCompile(`(?i)RM-1114|Lumia 435`),
		regexp.MustCompile(`(?i)RM-1031|Lumia 532`),
		regexp.MustCompile(`(?i)RM-109[02]|RM-1089|Lumia 535`),
		regexp.MustCompile(`(?i)RM-1141|Lumia 540`),
		regexp.MustCompile(`(?i)RM-1127|Lumia 550`),
		regexp.MustCompile(`(?i)RM-106[57]|RM-1096|Lumia 640 XL`),
		regexp.MustCompile(`(?i)RM-1109|RM-1113|RM-107[23467]|Lumia 640`),
		regexp.MustCompile(`(?i)RM-1154|Lumia 650`),
		regexp.MustCompile(`(?i)Lumia 950|RM-1118`),
		regexp.MustCompile(`(?i)RM-994|Lumia 1320`),
		regexp.MustCompile(`(?i)Surface Pro( [34])?`),
		regexp.MustCompile(`(?i)Microsoft; Lumia ([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:ETL101AL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO[- ](?:X8-H|U9-H|X[57]-mini|X8H-PLUS|X88-?I|X7-216A|X5-116A|X[68]|U1|Z64|U22-XJ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X8-H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO U22-XJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X([57])-mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X8H-PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X88-?I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X7-216A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X5-116A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X([68])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-U1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-Z64(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-U9-H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Coolmintt(?:A3|M2)?|Ultramintt(?:S2)?|FRESHMINTT(?:A7|A10)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Coolmintt ?([PM]1|P3|A3|M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultramintt ?([SR]1|S2|A5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FRESHMINTT ?(A7|A10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIO(?:/)?([a-z0-9]+)|(?:MOBIX M6|Mio TouchPad 7 Quad Core)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOBIX M6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIO(?:/)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Mione[_ ]`),
		regexp.MustCompile(`(?i)Hero (\d+)`),
		regexp.MustCompile(`(?i)Mione_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIDM[_-]|MPM[_-]`),
		regexp.MustCompile(`(?i)MIDM[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MPM[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MITO[- _]`),
		regexp.MustCompile(`(?i)MITO[- _]3255(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITO[- _]A37[_ ]Z1plus`),
		regexp.MustCompile(`(?i)MITO[- _](A(?:19[_ ][12]GB|37[_ ]Z1|36[_ ]W1|[0-9]+)|311)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITO[- _](T(?:[0-9]+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITSU|portalmmm/[12]\.0 M`),
		regexp.MustCompile(`(?i)MITSU/[a-z0-9.]+ \(([a-z0-9]+)\)`),
		regexp.MustCompile(`(?i)MITSU[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12]\.0 (M[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(MC32020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MobiPrint 4\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MobiPrint 4\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Kiona|KANUNA|Halona|Kicka[_ ][45][ _]Plus|Kohana|Kosumi|KWANITA|Lonan|Hotah|Kicka 5|Kiona|SmartE11|Sakari)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Kiona|Kicka[_ ][45][ _]Plus|Kohana|Kosumi|Lonan|Halona|Hotah|Kicka 5|Kiona|Sakari)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobicel_(R1)|ASTRO(?: Build|[;)]|$)|(?:Android 8.+ BEAM|FAME(?:_DS)?|CLIK|R7_1|HYPE(?:_X)?|DANDY(?:_ZAM)?|Matrix|VENUS_G|TRENDY PLUS|FENDY_DS|TANGO_LITE|BLINK|BERRY|BERRY[_ ]?(?:[12]|PLUS)|R1PLUS_1|ZOOM-H|REBEL|LEGEND MAX|HERO_DS|Switch[ _]GO|SWITCH1|PULSE_1|TRENDY 2|TRENDY_LITE|FEVER_PLUS_[HJ]|RIO_(?:SS|ZAM)|Clik plus|(PURE|Fendy) PLUS|Neo[ _]LTE|Titan_1|ZOOM_1|R4 LTE|NEO_1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BERRY[_ ]PLUS`),
		regexp.MustCompile(`(?i)Neo[ _]LTE`),
		regexp.MustCompile(`(?i)RIO_(SS|ZAM)`),
		regexp.MustCompile(`(?i)Switch[ _]GO`),
		regexp.MustCompile(`(?i)Mobicel_(R1)`),
		regexp.MustCompile(`(?i)FEVER_PLUS_([HJ])`),
		regexp.MustCompile(`(?i)Mobiistar|Zumbo[ _]S|(?:PRIME X MAX|X1 (?:Notch|Dual)|E1 Selfie|XQ[_ ]Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1 (Notch|Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E1 Selfie(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ[_ ]Dual(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mobiistar_LAI_Zumbo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zumbo[_ ]S[_ ]2017[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zumbo[_ ]S[_ ]2017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mobiistar ZUMBO S2( Dual)`),
		regexp.MustCompile(`(?i)Mobiistar_LAI_Zumbo_J_2017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobiistar_LAI_Zumbo_J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobiistar[_ ]Zumbo[_ ]S2`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]YUNA[ _]([1XCS])`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]ZORO[ _]([23])`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]Zena`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]Z([12])?`),
		regexp.MustCompile(`(?i)mobiistar LAI 504([KC])`),
		regexp.MustCompile(`(?i)mobiistar[ _]PRIME[ _](X1|558|X[ _]Plus|X[ _]Grand) Build`),
		regexp.MustCompile(`(?i)mobiistar[ _]KOOL([ _]Lite)?`),
		regexp.MustCompile(`(?i)Mobiistar[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(MS5[50]X6|MS55X5|MS55L1|MS50L1|MS43A3000|MS45A4000|MS50A4000|MS50A4500|MS50A5000|MS50A6000|MS50B11000|MB-2900 QUATTRO|POLYS[_ ]MS45L1|Wave5)`),
		regexp.MustCompile(`(?i)POLYS[_ ]MS45L1`),
		regexp.MustCompile(`(?i)(Cynus[ _][^/;)]+)( Build|\))`),
		regexp.MustCompile(`(?i)(?:(?:MOBO[_ ]MB7005|MT7-421HD)|(?:MT7-442D|MT7-411D))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOBO[_ ])?(MB7005|MT7-421HD|MT7-442D|MT7-411D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Modecom|Free(?:Way )?Tab|xino z[\d]+ x[\d]+`),
		regexp.MustCompile(`(?i)xino Z([\d]+) X([\d]+)`),
		regexp.MustCompile(`(?i)FreeTab[ _\-]?([^/;]+)? Build`),
		regexp.MustCompile(`(?i)FreeTab[ _\-]?([^);/ ]+)?`),
		regexp.MustCompile(`(?i)FreeWay Tab[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)FreeWay Tab[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)Mofut[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Mofut[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)MOT[^T][^O]|[^A][^N]DROID ?(?:Build|[a-z0-9]+)|portalmmm\/2.0 (?:E378i|L6|L7|v3)|XOOM [^;\/]*Build|XT1941-2|XT1924-9|XT1925-10|XT1965-6|XT1970-5|XT1799-2|XT1021|XT2171-3|XT2071-4|XT2175-2|XT2125-4|XT2143-1|XT2153-1|XT2201-2|XT2137-2|XT1710-08|XT180[3-5]|XT194[23]-1|XT1929-15|(?:XT|MZ|MB|ME)[0-9]{3,4}[a-z]?(?:\(Defy\)|-0[1-5])?(?:[;]? Build|\))`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT300`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT30[35]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT31[16]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2125-4`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2175-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2143-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2153-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT32[01]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT3(?:89|90)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT502`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT531`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT535`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT55[567]C?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT603`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT610`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT615`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT621`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT626`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT682`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT685`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT687`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT720`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT800W`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT860`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT881`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT882`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT88[56]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT890`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT894`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT897`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT901`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT90[567]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT910S?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT91[4568]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT9(?:19|20)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT925`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT102[12]|XT830C)`),
		regexp.MustCompile(`(?i)Moto E \(XT2052DL\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1706`),
		regexp.MustCompile(`(?i)MotoE2\(4G-LTE\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1924-9`),
		regexp.MustCompile(`(?i)moto e\(?([0-9])\)? plus`),
		regexp.MustCompile(`(?i)Moto E([0-9]) Play`),
		regexp.MustCompile(`(?i)moto e6 \(XT2005DL\)`),
		regexp.MustCompile(`(?i)moto e5 cruise(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)moto e5 supra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E5 go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?(\di?)\)? Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?([567]i?)\)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?([567])s\)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1030`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1565`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1096`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1254`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT10(?:28|3[12349]|68|69)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?g\(?(\d+)\)? 5G`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1609`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT180[3-5]|Moto G ?5S Plus|Moto G \(5S\) Plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1799-2|Moto G \(5S\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT168[57]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT167[06]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1925-10`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1965-6`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT10(?:49|5[23568]|60|9[23457])`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT156[234]|Moto X Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1572`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1575`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT158[01]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1080`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1585`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1650(?:-05)?`),
		regexp.MustCompile(`(?i)moto z4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto Z3 Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1635(?:-0[1-3])?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1710-(?:-0[28])?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1789-05|Moto Z2 Force(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1929-15|moto z3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1663`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1943-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1941-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1942-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge 20 fusion`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge 20 lite`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge 20 pro`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge 5G UW \(2021\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge (\d+)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge \(2021\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one vision plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT1970-5|one vision)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one power`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one hyper`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one zoom`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one fusion\+`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one fusion`),
		regexp.MustCompile(`(?i)moto g stylus \(XT2115DL\)`),
		regexp.MustCompile(`(?i)moto g stylus \(2021\)`),
		regexp.MustCompile(`(?i)moto g play \(XT2093DL\)`),
		regexp.MustCompile(`(?i)moto g play \(2021\)`),
		regexp.MustCompile(`(?i)moto g power \(XT2041DL\)`),
		regexp.MustCompile(`(?i)moto g power \(2021\)`),
		regexp.MustCompile(`(?i)moto g power \(2022\)`),
		regexp.MustCompile(`(?i)moto g\(?40\)? fusion`),
		regexp.MustCompile(`(?i)moto g(31|41)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)moto g\(?60\)?s`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) \(XT1925DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) forge`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) optimo \(XT1952DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) optimo maxx\(XT1955DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) power lite`),
		regexp.MustCompile(`(?i)moto g\(([0-9]|10)\) power`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) supra`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) plus`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) play`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\)`),
		regexp.MustCompile(`(?i)moto e\(?([0-9]+)\)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)moto x\(?(4+)\)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)moto(?:rola)? one 5G`),
		regexp.MustCompile(`(?i)Moto ([CGEXZ]) ?\(([a-z0-9]+)\)( Plus| Play)?`),
		regexp.MustCompile(`(?i)Moto ?([CGEXZ])([0-9]+)( Plus| Play)?`),
		regexp.MustCompile(`(?i)(?:Motorola-)?Moto[ _]?([CGEXZ])([ _](?:Plus|Play))?`),
		regexp.MustCompile(`(?i)Moto(?:rola)?[- _]F100`),
		regexp.MustCompile(`(?i)razr \(2020\)`),
		regexp.MustCompile(`(?i)MOTORAZR[ _-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MOTORIZR[ _\-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Motorola[ _-]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Moto[ _-]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)MOT[O]?[_-]?([a-z0-9.]+)`),
		regexp.MustCompile(`(?i)DROID ?([a-z0-9 ]*) Build`),
		regexp.MustCompile(`(?i)DROID ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 ((?:E378i|L6|L7|V3)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(XOOM [^;/]*)Build`),
		regexp.MustCompile(`(?i)(MZ[0-9]{3})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:ME|MB|XT)[0-9]{3,4}(?:\(Defy\))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOVIC|F4502`),
		regexp.MustCompile(`(?i)MOVIC[ -]W([2345])`),
		regexp.MustCompile(`(?i)(?:MPQC|MPDC)[0-9]+|PH(?:150|340|350|360|451|500|520|544|604)|(?:MID(?:7C|74C|82C|84C|801|811|701|711|170|77C|43C|102C|103C|104C|114C)|MP100i OCTA|MP(?:843|717|718|1010|7007|7008|843|888|959|969|QCG(1[01]|77)(?: 3G)?)|MGP7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:MPQC|MPDC)[0-9]+[^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)MP100i OCTA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MPQCG10(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID(?:7C|74C|82C|84C|801|811|701|711|170|77C|43C|102C|103C|104C|114C)|MP(?:843|717|718|1010|7007|7008|843|888|959|969|QCG(?:11|77))|MGP7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PH(?:150|340|350|360|451|500|520|544|604))`),
		regexp.MustCompile(`(?i)(?:Multilaser[ _](?:[FEGH])(?:[_ ](?:Pro|Max|Lite))?|MS50[LGXM]|M7[_-]3G[_-](?:PLUS|QC_3|QUAD_CORE)|MS5\.V2|M9-3G|MS45S_A6|ML([02]1|12)-M7s[- ]?Quad-?Core| ML01-M7-SD|MS45S|MS50S|MS60[XZ]|M7SQC_Plus|MS80X|MS40[GS]|MS55M|MS70|M7_3G_A10|M7-3G QUAD CORE|M7s_?Lite|M10_4G_PRO|MS50L?_4G|MS60F(?:_PLUS)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]F[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G[_ ]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]E[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]([FEH])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MS60F_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS50[LGXSM]|MS45S_A6|MS40[GS]|MS55M|MS60F|MS70|MS60[XZ]|MS45S|MS80X|MS50L?_4G|MS5\.V2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7[_-]3G[_-]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M10_4G_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7SQC_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7-3G_QC_3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7-3G[ _]QUAD[ _]CORE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML([02]1|12)-M7s[- ]?Quad-?Core(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7s_?Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML01-M7-SD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M9-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7_3G_A10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyGica[_ ]`),
		regexp.MustCompile(`(?i)HDR (Quad Core|Smart TV) Box`),
		regexp.MustCompile(`(?i)ATV(19[60]0|495 Pro 16G)`),
		regexp.MustCompile(`(?i)(?:MyPhone|MyPad|MyTab)[ _][^;/)]+( Build|\))|Cube_LTE|myTab10II|LUNA_II|AXE_M_LTE|HAMMER[ _](FORCE|Blade_3|Blade2_PRO|IRON_[23]|Explorer|ENERGY|Titan 2|AXE[_ ](?:M[_ ]LTE|Pro)|Iron 2|Active[2]?(_LTE)?)|IRON_2|C-Smart_pix|myPhone_Fun_8|FUN_18x9|MyPhoneMY27|Prime_4_Lite|myA17|myX12|Pocket_2|Prime_18x9|Prime3Lite|myT6 DTV|myXI1 (?:Plus|Pro)|myXI3|Q_Smart_BE|Brown 1|Q-Smart_III_Plus|SmartView_(?:[78]|9_6)_(?:LTE|[34]G)`),
		regexp.MustCompile(`(?i)MyPad[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)MyTab[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY[ _](\d+)`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY`),
		regexp.MustCompile(`(?i)HAMMER_AXE[_ ]M[_ ]LTE`),
		regexp.MustCompile(`(?i)Hammer[_ ]FORCE`),
		regexp.MustCompile(`(?i)(?:Hammer[ _])?Iron[ _](2|3)`),
		regexp.MustCompile(`(?i)Hammer[ _]Explorer`),
		regexp.MustCompile(`(?i)Hammer Active(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer_Active2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer_Active2_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pocket_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myA17(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun[_ ]?(\d)[_ ]?Lite`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun[_ ]?(\d)[_ ]?LTE`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun_?([48]|18x9)`),
		regexp.MustCompile(`(?i)myX12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myXI1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myXI1 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myXI3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q_Smart_BE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime_18x9(_LTE)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime3Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Brown 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myPhone[_ ]Pocket[_ ]Pro`),
		regexp.MustCompile(`(?i)MyPhone[ _]([^;/)]+)( Build|\))`),
		regexp.MustCompile(`(?i)MyTAB[ _-](?:8 MINI Dual Core|U55GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyTAB[ _-]8 MINI Dual Core(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyTAB-U55GT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyWigo[ _]([^;/)]+)( Build|\))`),
		regexp.MustCompile(`(?i)(MOVE_S201)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (Myria_[^/;]+|502M|Cozy|Easy tab 9|Grand) Build|Myria_FIVE|Myria_Grand_4G|Myria_Wide_2|Myria_Wide_4G`),
		regexp.MustCompile(`(?i)Myria_([^/;]+) Build`),
		regexp.MustCompile(`(?i)(502M|Grand)`),
		regexp.MustCompile(`(?i)(Cozy|Easy tab 9)`),
		regexp.MustCompile(`(?i)(E70 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYSTERY|(MID-(?:123G|72[12]|7[01348]3G|753G|8[23]3G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MID-(123G|72[12]|7[01348]3G|753G|8[23]3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYSTERY_TV_(D3155CH31)`),
		regexp.MustCompile(`(?i)NEC[ _\-]|KGT/2\.0|portalmmm/1\.0 (?:DB|N)|(?:portalmmm|o2imode)/2.0[ ,]N|(?:PC-T[SE]\d{3}[\w]{2,3}|N-06C|N-02E|LAVIE Tab E (?:10|8)FHD[12]|7SD1|8HD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N-06C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEC[ _\-]|KGT/2\.0 )([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/1\.0 ((?:DB|N)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:portalmmm|o2imode)/2\.0[ ,](N[a-z0-9]+)`),
		regexp.MustCompile(`(?i)LAVIE Tab E ((?:10|8)FHD[12]|7SD1|8HD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PC-TE(\d+)`),
		regexp.MustCompile(`(?i)PC-TS(\d+)`),
		regexp.MustCompile(`(?i)(MXQ|MXQ-Pro)-NEXBOX|NEXBOX-([^) ]+)`),
		regexp.MustCompile(`(?i)NEXBOX-([^) ]+)`),
		regexp.MustCompile(`(?i)NEXON (X3\+|X[12589])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NG3128HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NGM[_ ][a-z0-9]+|(Forward|Dynamic)[ _]?[^/;]+(?:Build|/)|Smart5Plus32GB`),
		regexp.MustCompile(`(?i)(Forward|Dynamic)[ _]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)(Forward|Dynamic)[ _]?([^/;]+)/`),
		regexp.MustCompile(`(?i)NGM ([^;/]+) Build`),
		regexp.MustCompile(`(?i)NGM_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:NOA-)?NOA[ _]|Hummer(?:_2019_R|LE)|NextSE|Vivo 4G_r|SPRINT4G`),
		regexp.MustCompile(`(?i)NOA[_ ]CORE[_ ]FORTE`),
		regexp.MustCompile(`(?i)NOA[_ ]Hummer[_ ]Lite`),
		regexp.MustCompile(`(?i)NOA[_ ]MOVEse`),
		regexp.MustCompile(`(?i)NOA[_ ]NEXT`),
		regexp.MustCompile(`(?i)NOA[_ ]VISION[_ ]H3SE`),
		regexp.MustCompile(`(?i)NOA[_ ]VISION[_ ]H3`),
		regexp.MustCompile(`(?i)NOA[_ ]LOOP`),
		regexp.MustCompile(`(?i)(?:NOA-)?NOA[_ ]H4se`),
		regexp.MustCompile(`(?i)NOA[_ ]Mg12`),
		regexp.MustCompile(`(?i)NOA[_ ]H44SE`),
		regexp.MustCompile(`(?i)NOA[_ ]H10LE`),
		regexp.MustCompile(`(?i)(?:NOA[_ ])?Vivo 4G_r`),
		regexp.MustCompile(`(?i)NOA[_ ]([^;)/ ]+)`),
		regexp.MustCompile(`(?i)SMART_VOLT_NX5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPAD7G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPAD7G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_|(?:(?:N(5702|500[12])L|S6001L|[SN]5501L)|A6L-[CG]|N5502L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_A([13])`),
		regexp.MustCompile(`(?i)NUU_M([32])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_X5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(N5001L|A6L-[CG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NYX[ _]|(?:GLAM|ARGON)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NYX[ _]REX`),
		regexp.MustCompile(`(?i)(?:DMTAB-(?:IN08A|NV08B|NV2[04]A)|NBTY07SMKG|NBFP07PMKG|SNB02-NV7A|NABI2-NV7A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DMTAB-(?:IN08A|NV08B)`),
		regexp.MustCompile(`(?i)DMTAB-NV(2[04])A`),
		regexp.MustCompile(`(?i)(?:NAOMIPHONE Ambar|DAMMAR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAOMIPHONE Ambar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DAMMAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NX-32THS100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEXO (?:Smarty|handy|SMART DUO|Evo)|MOVIO 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP-752Go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NeoTab)[ _-]((?:S1[23]0|S125|H85|H11[05]|KID741|S9700))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _]|(?:T737PRO|T505PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _](T70[07]) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _](T757)LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _](A73[0157]|A650)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T(505|737)PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RE900 Full HD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ]|(?:Vision_Tab_(?:7|10)|Pure Micro|Superme_Max|Raptor3G8GB|Predator (?:10|3G)|Platinum[_ ]10[_ ]3G(?:_V2)?|Supreme[_ ](?:Fine(?:[_ ]Micro)?|Chief|Pure|Pro)(?:[_ ](?:Mini|Plus))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M505 LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F552|D504)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Superme_Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine_Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine_Micro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Fine[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Chief(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Pure[ _]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme Pure(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure Micro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ]Infinity(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ](D405)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Platinum[ _]10[ _]3G(_V2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Orpheus[ _]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon_)?Predator[_ ](3G|10|7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Raptor3G8GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vision_Tab_(7|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M002[DGQK]-2|M002N|M002N-3T|M002W-2T|6M-3T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neffos|(TP601A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:C57|TP601A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neffos[_ ]Y50`),
		regexp.MustCompile(`(?i)Neffos[_ ]((?:[YNCXA])[0-9][A-Z]?(?: Max| Lite| Plus)?)`),
		regexp.MustCompile(`(?i)NEO, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)NEO[ ]?(90[689])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NQT-(?:101|7)[34]GIQ|NQT-7W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NQT-101([34])GIQ`),
		regexp.MustCompile(`(?i)NQT-7([34])GIQ`),
		regexp.MustCompile(`(?i)NIM-(450D|550O|600Q)`),
		regexp.MustCompile(`(?i)NB (RunIQ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEWGEN\-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:NLS-MT90)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Newman[ _](P308|K1|G5i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CarPad-(?:II|III)-P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Newsday[_ ](E1|A[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexa[ _](?:Atlas|Vega N1)`),
		regexp.MustCompile(`(?i)Nexa[ _](Vega N1)`),
		regexp.MustCompile(`(?i)Nexa[ _](Atlas)`),
		regexp.MustCompile(`(?i)S?Nexian`),
		regexp.MustCompile(`(?i)S?Nexian[ ]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)S?Nexian-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Next[0-9]|NX(?:785QC8G|M900MC|008HD8G|010HI8G|M908HC|M726|16A8116K|A8QC116|16A10132S|16A11264)`),
		regexp.MustCompile(`(?i)Next([0-9]+[^;/]+) Build`),
		regexp.MustCompile(`(?i)TAB (A40[13]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nextbit|(?:Robin)(?: Build|\))`),
		regexp.MustCompile(`(?i)(Robin)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOAIN[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)NOAIN[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)Nobby[ ](S500|X800(?: Pro)?|S300(?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Noblex|NBX-`),
		regexp.MustCompile(`(?i)(?:Noblex|NBX)[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Noblex|NBX)[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)Nokia|Lumia|Maemo RX|portalmmm/2\.0 N7|portalmmm/2\.0 NK|nok[0-9]+|Symbian.*\s([a-z0-9]+)$|RX-51 N900|TA-[0-9]{4}|ARM; 909`),
		regexp.MustCompile(`(?i)TA-10(07|23|29|35)`),
		regexp.MustCompile(`(?i)TA-10(20|28|32|38)`),
		regexp.MustCompile(`(?i)TA-10(24|27|44|53)`),
		regexp.MustCompile(`(?i)TA-10(00|03|21|25|33|39|54)`),
		regexp.MustCompile(`(?i)TA-10(04|12|52)`),
		regexp.MustCompile(`(?i)Nokia 6\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 5\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 3\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 2 V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nokia ?X2DS`),
		regexp.MustCompile(`(?i)(?: )?(Nokia500|nokiaasha500(?:dualsim)?)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia5130c(?:-2)?`),
		regexp.MustCompile(`(?i)Nokia8800e?`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})c(?:-)?`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})s(?:-)?`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})`),
		regexp.MustCompile(`(?i)(?: )?Nokia([235][0-9]{2})(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia([CEX]-?[0-9]{1,2}i?)-[0-9]{1,2}u?(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia;? 520T`),
		regexp.MustCompile(`(?i)RM-91[45]`),
		regexp.MustCompile(`(?i)RM-997|Nokia 526`),
		regexp.MustCompile(`(?i)RM-97[68]`),
		regexp.MustCompile(`(?i)RM-97[45]`),
		regexp.MustCompile(`(?i)NOKIA;? 710`),
		regexp.MustCompile(`(?i)Nokia;? 720T`),
		regexp.MustCompile(`(?i)RM-103[89]`),
		regexp.MustCompile(`(?i)Nokia;? 800C`),
		regexp.MustCompile(`(?i)Nokia;? 800`),
		regexp.MustCompile(`(?i)Nokia;? 900`),
		regexp.MustCompile(`(?i)(RM-82[12]|Nokia;? 920)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)(RM-89[23]|RM-910|Nokia;? 925)(?: Build|[a_);/])`),
		regexp.MustCompile(`(?i)(ARM; 909|NOKIA;? 909|NOKIA; id300)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)NOKIA;? 1520\.1`),
		regexp.MustCompile(`(?i)Nokia ([A-Za-z0-9\. ]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Nokia(N[0-9]+)`),
		regexp.MustCompile(`(?i)Nokia-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NOKIA; ([a-z0-9\- ]+)`),
		regexp.MustCompile(`(?i)NOKIA[ _]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)NOKIA/([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(Lumia [a-z0-9\-]+ XL)`),
		regexp.MustCompile(`(?i)(Lumia [a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Maemo RX-51 ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NokiaInternal|Nokia-WAP-Toolkit|Nokia-MIT-Browser|Nokia Mobile|Nokia Browser|Nokia/Series`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 (N7[37]|NK[a-z0-9]+)`),
		regexp.MustCompile(`(?i)nok([0-9]+)`),
		regexp.MustCompile(`(?i)Symbian.*\s([a-z0-9]+)$`),
		regexp.MustCompile(`(?i)Nomi[ _-]|(C101010 Ultra2|i501[234]|i5032|i50[537]0|i5031|i55[13]0|i5532|C0(700(?:[02358]|2HD)|7850)|C1010[0-3]|i(?:50[0158]|450|40[01]|55[02]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i501[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i506(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i6030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I5070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[_ ]I4070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i4510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i4500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[_ ]i5511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i5710(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i508(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi[ _])?i(50[015]|450|40[01]|55[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101040`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101030`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101014`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101034`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101044`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070010`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070020`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070011`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070030`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070014L`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C0700[13]4`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070044`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080034`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080014`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C07008`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C10105`),
		regexp.MustCompile(`(?i)(?:Nomi[ _])?(C0(?:700(?:[0235]|2HD)|7850|9600)|C1010[0-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Nomi[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:Nomu[ _-](?:T18|S30mini|S10)|(?:V1600S|S10 PRO|S50_Pro))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]T18(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]s10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]S30mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S([15]0)[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1600S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NT-TP10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nos (?:FIVE|NOVU|NEVA|Roya)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS FIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NEVA 80(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS Roya(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NS(?:[356]|500[2-68]|5511|5502)|NS 5511)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NS 5511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NS[0-9]{1,4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NWX-40F171MSY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO \[Reloaded\](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nubia[ _]|(?:NX(?:403A|404H|406E|40[X2]|503A|50[5678]J|51[0123]J|521J|523J_V1|529Jq?|5[345]1J|5[48]9J|569[HJ]|5[67]3J|575J|59[157]J|60[1689]J|61[12679]J|62[79]J|65[19]J|6[126]9J|66[67]J|907J))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NX40[X2]`),
		regexp.MustCompile(`(?i)NX(403[AE]|406E|404H)`),
		regexp.MustCompile(`(?i)(NX5[12]1J|Nubia Z9 mini)`),
		regexp.MustCompile(`(?i)(NX510J|Nubia Z9 Max)`),
		regexp.MustCompile(`(?i)(?:NX549J|Nubia Z11 mini S)`),
		regexp.MustCompile(`(?i)(?:NX529Jq?|Nubia Z11 mini)`),
		regexp.MustCompile(`(?i)NX569[HJ]`),
		regexp.MustCompile(`(?i)NX6(?:08|17)J`),
		regexp.MustCompile(`(?i)Nubia[_ ]([^;)/]+)( build|[;)])`),
		regexp.MustCompile(`(?i)Nuvo[_ ](NS35|Blue ND40|Green[_ ]ND[_ ]45)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nuvo[_ ](NS35)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blue (ND40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Green[_ ]ND[_ ]45(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NVIDIA|SHIELD|Tegra(Note-P1640| Note 7)`),
		regexp.MustCompile(`(?i)(SHIELD Tablet(?: K1)?|Tegra Note 7)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)SHIELD Andr[o0]id TV`),
		regexp.MustCompile(`(?i)O\+[ _](Air|Crunch|Ultra|Upsized|Venti|360 ALPHA PLUS 2.0)`),
		regexp.MustCompile(`(?i)O\+[ _](Crunch|Ultra 2.0|Ultra|Upsized|Venti 4G)`),
		regexp.MustCompile(`(?i)O\+_AIR`),
		regexp.MustCompile(`(?i)O\+ 360 ALPHA PLUS 2.0`),
		regexp.MustCompile(`(?i)Xda|O2[ \-]|COCOON`),
		regexp.MustCompile(`(?i)(Xda[ _][a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(COCOON)`),
		regexp.MustCompile(`(?i)O2 ([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)O2-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(TEG9300)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OINOM[_ ](V9D|V7H|V[679])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GEN-10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OKWU SIGMA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OMIX[ _]`),
		regexp.MustCompile(`(?i)X(\d*)`),
		regexp.MustCompile(`(?i)(ONA19TB00[327]|10000520[6-9]|O8HD|100026191|100011886|10000356[12]|100011885|100015685-A|TBBVNC10000520[78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KON_TIKI(2)?|Nova3Color)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KON_TIKI(2)?`),
		regexp.MustCompile(`(?i)(?:OB-)?OPPO[ _]?([a-z0-9]+)|N1T|R8001|A101OP|OPG01|A00[12]OP|(?:OPG02|X90[07][0679]|U70[57]T?|X909T?|R(?:10[01]1|2001|201[07]|6007|7005|7007|80[13579]|81[13579]|82[01379]|83[013]|800[067]|8015|810[679]|811[13]|820[057])[KLSTW]?|N520[79]|N5117|A33[wf]|A33fw|A37fw?|PAAM00|PAAT00|PAC[TM]00|R7kf|R7plus[fmt]?|A1601|CPH[0-9]{4}|CPH19(69|79|23|1[179])|PB(A[TM]00|CT10|BT30|CM[13]0|[FD]M00)|P(E[RFHG]M\d{2}|E[GH]T\d{2}|DAM10|ADM00|AF[TM]00|ADT00|AHM00|BBM[03]0|BBT00|BDT00|BFT00|[CB]E[MT]00|CA[MT]00|C[CDG]M00|CA[MT]10|[CD]PM00|CRM00|CDT00|CD[TM]10|CHM[013]0|CKM[08]0|CLM[15]0|DEM[13]0|DHM00|D[RK][TM]00|DPT00|DB[TM]00|DCM00|[CD]NM00|DVM00|DY[TM][12]0|DNT00|EA[TM]00|CRT01|EDM00)|PFDM00|PEG[MT]10|PEM[MT][02]0|PDET10|PDS[TM]00|PEC[MT]30|OPG03|PE[QYPEXNLU]M00|PCHT30|PCRT00|PFGM00|PF[VU]M10|A102OP|PFCM00|PFJM10|PGCM10|PECM20|PDAT10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCHM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCHT30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2083|CPH2077)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2179)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2271)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2185)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCHM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1923(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1925(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2269(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(CPH1837|PAD[TM]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A37f(w)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A37f(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH20(?:81|73|31|15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2137(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH18(?:0[35]|53)|PBBM30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1809|PBA[TM]00|PBBT30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH19(?:3[13]|43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEC[MT]30|PECM20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDVM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEFM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDA[TM]10|CPH2069|CPH2061)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH(?:2127|213[19])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2135(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2321(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2195|OPG02|CPH2303)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2239|CPH2241)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2273(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEM[MT][02]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2325(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A102OP|CPH2309)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH170[15](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH19(?:09|1[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH190[15]|PBF[TM]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1717(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDY[TM]20|CPH2067)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH(?:2161|2099)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2219(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2263(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDY[TM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1715(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A79kt`),
		regexp.MustCompile(`(?i)PCD[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PBBT00|PBBM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDBM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1729(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1827(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PCA[TM]10|CPH1938)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CPH1937|CPH1941|PCHM30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCPM00|CPH20[02]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2059(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDK[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEH[MT]00|CPH212[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PFGM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2203)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2197)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2365|PELM00`),
		regexp.MustCompile(`(?i)PCE[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1903(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X9009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH191[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH19(?:69|87)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2095`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2119)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A1601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1613(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH172[37](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1725(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH18(?:[15]9|21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1825|CPH1881)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1823(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2223(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2285(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2213(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X909T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R827T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X907[067](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X900[067](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PEUM00`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R815[TW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8015(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R821T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?U707T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?U705T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH187[15]|PAF[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PAHM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDE[TM]10|CPH2023)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDEM30|OPG01|CPH2025)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEDM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEEM00|CPH2173|OPG03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R1011 Build`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PBC(?:M30|T10))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1955(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PCNM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PCLM50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PERM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGCM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PERM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?N5117(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?N520[79](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R831T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R831K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R831[SL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A33[wf](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A33fw(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8113(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R11 Plusk?t?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R8001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1721|R11s Plust?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1719|R11st?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1835|PAC[TM]00|PAAM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH183[13]|PAAT00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PBCM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1879|PBE[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1893)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1877|PBD[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R800[07](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R810[679](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7kf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7Plus[mt]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7Plusf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X9079(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1607|R9sk)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1611|R9s Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1917|PCA[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1983(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1919|PCCM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCKM00|CPH1907)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1989(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCKM80|CPH1945|CPH1951)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2043(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2013|A002OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDCM00|A001OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCR[MT]00|CPH203[567]|CPH2009)`),
		regexp.MustCompile(`(?i)PCRT01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2113(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2125(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDP[TM]00|CPH2091)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEA[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDN[TM]00|CPH2089)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2065(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2209(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2159(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2199|A101OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2205(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEG[MT]00|CPH2145)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEG[MT]10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2217(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2211(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDS[TM]00|CPH220[17])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDR[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1921(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2235|PEQM00|CPH2251)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2237(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEPM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH224[79](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PENM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PFDM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEYM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEXM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCLM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDHM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCGM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1979|PCD[TM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A59st(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N1T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R([0-9]{3,4}[KSTW]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CPH[0-9]{4})`),
		regexp.MustCompile(`(?i)(?:OB-)?OPPO[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)OYSIN[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Apex([13])|CC1 PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CC1) PRO`),
		regexp.MustCompile(`(?i)Apex([13])`),
		regexp.MustCompile(`(?i)(?:OBA_?(?:SMART_3|Conecta_Max|Conecta_4G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBA_(Conecta_(?:Max|4G))`),
		regexp.MustCompile(`(?i)Obi[ _-]|(SJ1\.5|SJ2\.6|S(400|452\+|45[13]|50[127]|503\+?|520|55[01])|falcon)[ _]`),
		regexp.MustCompile(`(?i)SJ2\.6`),
		regexp.MustCompile(`(?i)SJ1\.5`),
		regexp.MustCompile(`(?i)(?:Obi_)?S400`),
		regexp.MustCompile(`(?i)(?:Obi_)?S451|falcon`),
		regexp.MustCompile(`(?i)(?:Obi_)?S452\+`),
		regexp.MustCompile(`(?i)(?:Obi_)?S453`),
		regexp.MustCompile(`(?i)(?:Obi_)?S501`),
		regexp.MustCompile(`(?i)(?:Obi_)?S502`),
		regexp.MustCompile(`(?i)(?:Obi_)?S503\+`),
		regexp.MustCompile(`(?i)(?:Obi_)?S503`),
		regexp.MustCompile(`(?i)(?:Obi_)?S507`),
		regexp.MustCompile(`(?i)(?:Obi_)?S520`),
		regexp.MustCompile(`(?i)(?:Obi_)?S550`),
		regexp.MustCompile(`(?i)(?:Obi_)?S551`),
		regexp.MustCompile(`(?i)(?:Obi_)?S454`),
		regexp.MustCompile(`(?i)Obi[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Obi[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:Pacific|Quest).+OculusBrowser|Standalone HMD`),
		regexp.MustCompile(`(?i)(?:Quest 2|Standalone HMD)`),
		regexp.MustCompile(`(?i)ODYS[ _-]|IEOS[_ ]([^/;]+)|NOON(?:_PRO)? Build|SPACE10_(?:PLUS|PRO)_3G|THOR_?10|TAO_X10|RAPID_?(?:10|7)_?LTE|MAVEN_?10_|CONNECT[78]|ELEMENT10_PLUS_3G|XELIO[_0-9P]|ADM816HC|ADM8000KP|NEO6_LTE|EOS10|AEON|FALCON_10_PLUS_3G|FUSION|THANOS_10|MAVEN_X10_HD(?:_LTE)?|JUNIOR_8_PRO|JuniorT8Pro|(?:NOVA|PYRO)_X?7_PLUS_3G|UNO_X8|MAVEN_G10|SLADE_X55|XELIO_PRO_10_LTE|NOTOSplus3G|PACE ?10|PACE_10_LTE|Titan_10_LTE|PEDI_PLUS_W`),
		regexp.MustCompile(`(?i)XELIO[_ ]A10`),
		regexp.MustCompile(`(?i)MAVEN_?10_PRO_PLUS_3G`),
		regexp.MustCompile(`(?i)MAVEN_?10_?PLUS`),
		regexp.MustCompile(`(?i)MAVEN_?10_?PRO`),
		regexp.MustCompile(`(?i)MAVEN_?10_?HD`),
		regexp.MustCompile(`(?i)RAPID_?7_?LTE`),
		regexp.MustCompile(`(?i)RAPID_?10_?LTE`),
		regexp.MustCompile(`(?i)THOR_?10 Build`),
		regexp.MustCompile(`(?i)PACE ?10`),
		regexp.MustCompile(`(?i)THOR_?10_PLUS_3G`),
		regexp.MustCompile(`(?i)NEO6[_ ]LTE`),
		regexp.MustCompile(`(?i)IEOS[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:ODYS[ _-])?NOON Build`),
		regexp.MustCompile(`(?i)(?:ODYS[ _-])?NOON_PRO Build`),
		regexp.MustCompile(`(?i)Odys[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)AFTWI001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Signature (?:L|Pro|Touch)`),
		regexp.MustCompile(`(?i)Signature (L|Pro|Touch)`),
		regexp.MustCompile(`(?i)Onda|(?:(?:V820w|V891[w]?|V919(?: 3G)? Air)[ _-]DualOS|(?:V919 4G Air|V989 Air|V972) Core[48]|T2101L2B1C| V10 4G|OBOOK (?:20 SE|20 PLUS DUALOS)|OBOOK10 SE|V919 Air CH DualOS| T9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?: T9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONDA[ _]MID`),
		regexp.MustCompile(`(?i)V820w[ _-]DualOS`),
		regexp.MustCompile(`(?i)V891W[ _-]DualOS`),
		regexp.MustCompile(`(?i)V891[ _-]DualOS`),
		regexp.MustCompile(`(?i)V919 3G Air[ _-]DualOS`),
		regexp.MustCompile(`(?i)V919 Air[ _-]DualOS`),
		regexp.MustCompile(`(?i)T2101L2B1C|OBOOK 20 PLUS DUALOS`),
		regexp.MustCompile(`(?i) V10 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK 20 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK10 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([a-z0-9]+)[ _]Onda`),
		regexp.MustCompile(`(?i)Onda ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:du_)?ONEPLUS|(?:A0001|A200[135]|AC200[13]|A300[03]|A3010|A5000|A600[03]|A601[03]|BE201[1235]|BE202[5689]|E100[135]|GM191[03517]|GM190[0135]|GM192[05]|HD191[013]|HD190[01357]|HD1925|IN201[013579]|IN202[0135]|KB200[01357]|LE211[01357]|LE212[035]|Nord N10 5G|LE210[01]|LE212[17]|DE211[78]|DN210[13]|EB210[13]|MT211[01]|IV2201|NE2210)(?: Build|\))`),
		regexp.MustCompile(`(?i)AC200[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EB210[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE201[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DE211[78](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BE202[69]|Nord N10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DN210[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IV2201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN202[0135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KB2000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IN201[01357]|OnePlus 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE211[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MT211[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE210[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE212[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NE2210(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GM191[01357]|OnePlus 7 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GM190[0135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HD190[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HD191[013]|OnePlus 7T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HD1925|GM192[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KB200[1357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A200[135]|OnePlus2`),
		regexp.MustCompile(`(?i)E100[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A3010|OnePlus3T`),
		regexp.MustCompile(`(?i)A300[03]|OnePlus3`),
		regexp.MustCompile(`(?i)A5010|OnePlus[ ]?5T`),
		regexp.MustCompile(`(?i)A5000|OnePlus5`),
		regexp.MustCompile(`(?i)A600[03]|OnePlus6`),
		regexp.MustCompile(`(?i)A601[03](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:du_)?ONEPLUS[ _]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:ONIX S405|AT101-1116|ONIX_8_3G_01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT101-1116)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONIX_8_3G_01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S405)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DP-CMX1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Opel ?Mobile|(?:OpelMobile_Smart(?:JX|X1)|Easy_Smart_2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Openbox (?:A[34](?: (?:Pro|Lite))?)|AS_4K_CI(?:_PRO)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Openbox (A[34](?: (?:Pro|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Opsson|IUSAI`),
		regexp.MustCompile(`(?i)IUSAI[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)IUSAI[ _]([^/;\)]+)[/;\)]`),
		regexp.MustCompile(`(?i)Opsson[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:Opsson-)?Opsson[ -_]([^/;]+)/`),
		regexp.MustCompile(`(?i)SPV[ \-]?([a-z0-9]+)|Orange[ _-]([^/;]+)( Build|\))|SC/IHD92|Nura 2|FunTab ([^/;]+) Build|Orange Mahpee|Dive 50`),
		regexp.MustCompile(`(?i)FunTab ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Orange[ _-](Rise)(3[12]|5[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Orange[ _-])?Dive ?(\d+) Dual(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Orange[ _-])?Dive ?(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Orange[ _-](Daytona|Dublin|Fova|Gova|Hi 4G|Hiro|Kivo|Monte Carlo|Neva 80|Neva play|Nura|Reyo|Rise[_ ](3[034]|40|5[345])|Rono|Roya|San Francisco|Tactile internet 2|Tado|Yomi|Yumo|Zali|Mahpee)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPV[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)RC(?:501|545|555)L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RC501L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RC545L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RC555L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(OT-DVB\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LeNumero1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ORION, ([a-z0-9_ \-]+), (?:wired|wireless)|CRANE-EVB`),
		regexp.MustCompile(`(?i)ORION, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(CRANE-EVB)`),
		regexp.MustCompile(`(?i)OUKI|OK[AU][0-9]+[a-z]* Build`),
		regexp.MustCompile(`(?i)OUKI[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)([^;/)]+) Build/OUKI`),
		regexp.MustCompile(`(?i)OUKI[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(OK[AU][0-9]+[a-z]*) Build`),
		regexp.MustCompile(`(?i)OUKITEL|(?:Android 10.+ (?:C19|C22)|Android 8.+ U23|Android 7.+ (?:U1[78]|U22)|(?:C1[569]|K10000|K[46]000)(?:[ _]Pro)|K4000Pro|C1[18]_Pro|C1[0237] Pro|C2[13] Pro|C12 Plus|U15 Pro|K15_Plus|U16 Max|C11_F|U7 Max|U7 Plus|U11[_ ]Plus|U20_Plus|OK6000 Plus|WP5000|WP[58] Pro|K[46]000[ _](?:Plus|Lite)|Y4800|K10000|K7 Power|K[4-8]000| RT1| WP(?:[15-79]|1[023567])|K[37]_Pro|K13_Pro|U25_Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C1[0-9]|C2[13]|K10000|K[46]000|WP[258]|WP12|U[12]5|K[37]|K13)[ _]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OUKITEL K([37])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K10000|U16|U7)[ _]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U20|K[46]000|U7|U11|OK6000|K15|C12)[_ ]?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K4000)[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K10000)[_ ]Mix(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K7 Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y4800|K10000|K[4-8]000|WP5000|[CU]2|U1[078]|U2[23]|C19|C22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (RT1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OUKITEL)? (WP\d+|C11_F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OUKITEL; ([^;]+);`),
		regexp.MustCompile(`(?i)OV-[a-z]+(?:[^;(/]*)[();/ ]|Qualcore 10(?:10|27)|Livecore7032|Vertis 5021 Aim|Vertis 4004 You|OV1027[34]G`),
		regexp.MustCompile(`(?i)OV-Vertis[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)OV1027([34])G`),
		regexp.MustCompile(`(?i)(OV-[a-z]+(?:[^;(/]*))[();/ ]`),
		regexp.MustCompile(`(?i)(?:OWWO[ _]?(?:[1457]S|Q[78])|CARNIVAL B5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OWWO[ _]?([1457]S|Q[78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CARNIVAL B5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Oysters|T84ERI[ _]3G|T72HM(s_)?3G|T102MS_3G|T102ER3G|(T74HMi|T84Bi)[_ ]4G|T74MR4G|T84Ni[_ ][34]G|Pacific(?:[ ]?800i|E)|T104B_[34]G|IndianV|T72HA_3G|T12V? 3G|T74D_3G|T74N_3G|T74SC_3G|T74Mai_3G|T104MBi_3G|T104SCi_3G|T104ER4G|Atlantic4G|AntarcticE|T7V 3G|Pacific(?:VS?|4G)`),
		regexp.MustCompile(`(?i)Pacific[ ]?800i`),
		regexp.MustCompile(`(?i)(?:Oysters[_ ])?Pacific(VS?|4G)`),
		regexp.MustCompile(`(?i)Oysters ((?:Arctic|Indian|Atlantic|Pacific)[^/;]+) Build`),
		regexp.MustCompile(`(?i)(T84ERI[ _]3G|T72HM(s_)?3G|(?:(T74HMi|T84Bi)[_ ]4G)|T84Ni[_ ][34]G)`),
		regexp.MustCompile(`(?i)(T74MR|T102MS|T104B|T74SC|T74[DN]|T72HA|T102ER|T104SCi|T104MBi|T104ER|T7V|T12V?)[ _]?([34]G)`),
		regexp.MustCompile(`(?i)Oysters ([^/;]+)( Build|\))`),
		regexp.MustCompile(`(?i)OYYUT11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ozone HD|OzoneHD[ _](T2 WiFi|4K(?: TV)?|Fun)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-0[143]P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-04P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-03P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-01P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Art-PCB-V116|Bee-PCB-V216|Clap-PCB-I316|PCB-T(103|715)`),
		regexp.MustCompile(`(?i)PCD[ ]?50[689]`),
		regexp.MustCompile(`(?i)PCD[ ]?(50[689])`),
		regexp.MustCompile(`(?i)(?:POCO[ _](?:X[23](?:_SN)?|F2 PRO|M[32]|F3)|M2010J19C[GI]|M2007J20C[ITG]|M2012K11AG|M2006C3MI|M2004J19PI|M2102J20S[GI]|M2103K19P[IGY]|21091116AG|21061110AG|M2104K10I|211033MI|2201117PG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCO X2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K11AG|POCO F3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2004J19PI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2103K19P[IGY]|M3 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCO M([23]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2010J19C[GI]|POCO M3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J20C[GT]|POCO X3 NFC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2102J20S[GI]|X3 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J20CI|POCO X3(?:_SN)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061110AG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2104K10I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3MI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)211033MI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCO F2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P9000_MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P9000_MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KING 7S?)`),
		regexp.MustCompile(`(?i)PULID[ _]|F1[01357]\+? Build`),
		regexp.MustCompile(`(?i)F(1[01357]\+?) Build`),
		regexp.MustCompile(`(?i)PULID[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)PULID[ _]([a-z0-9_]+)\)`),
		regexp.MustCompile(`(?i)(PB1009|M10[45]00|M7500|M7600-D|DAYTONA-G12|MONZA-T7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PB1009|M10[45]00|M7500|M7600-D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Pre|Pixi)/(\d+)\.(\d+)|Palm|Treo|Xiino|PVG100(?:E_RU|E)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:Pre|Pixi))/(\d+\.\d+)`),
		regexp.MustCompile(`(?i)Palm(?:[ \-])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Treo([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Xiino|Palmscape`),
		regexp.MustCompile(`(?i)Panasonic|PANATV[0-9]+|Viera/|(?:P902i|P-0[28]D|FZ-B2D|FZ-[NX]1|DMC-CM1|P-01J|P-0[23]E|P55 Max)(?:[);/ ]|$)|Eluga[ _]|P55 Novo 4G`),
		regexp.MustCompile(`(?i)P-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P-03E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eluga[ _]I7(?:_EE)?`),
		regexp.MustCompile(`(?i)Eluga[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Eluga[ _-]([^);/]+)[;/)]`),
		regexp.MustCompile(`(?i)(DMC-CM1)`),
		regexp.MustCompile(`(?i)P-02D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FZ-[XN]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FZ-B2D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P902i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PANATV[0-9]+|Viera/`),
		regexp.MustCompile(`(?i)(43D1200|(?:32|43)D1270|32D1280)`),
		regexp.MustCompile(`(?i)PANASONIC, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Panasonic[ _\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 (P[a-z0-9]+)`),
		regexp.MustCompile(`(?i)P-08D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pantech|P[GN]-|PT-[a-z0-9]{3,}|TX[T]?[0-9]+|IM-[a-z0-9]+(?:[);/ ]|$)|ADR910L`),
		regexp.MustCompile(`(?i)Pantech[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Pantech_([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(P[GTN]-[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(TX[T]?[0-9]+) Pro`),
		regexp.MustCompile(`(?i)(TX[T]?[0-9]+)`),
		regexp.MustCompile(`(?i)(IM-[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Xplorer_2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pelitt[ _]`),
		regexp.MustCompile(`(?i)Pendoo|A5X MAX(?:[\.-]\w+)?\.01\.d4`),
		regexp.MustCompile(`(?i)Pendoo ?(T95Z|X10) PLUS`),
		regexp.MustCompile(`(?i)Pendoo ?X8PRO+`),
		regexp.MustCompile(`(?i)Pendoo[ \.]?(X9[29]|T95)`),
		regexp.MustCompile(`(?i)A5X MAX(?:[\.-]\w+)?\.01\.d4`),
		regexp.MustCompile(`(?i)Pentagram|Quadra|Monster X5`),
		regexp.MustCompile(`(?i)(?:PENTAGRAM[_ ])?EON[_ ]PRIX`),
		regexp.MustCompile(`(?i)Quadra 7(?: UltraSlim)?`),
		regexp.MustCompile(`(?i)Monster X5?`),
		regexp.MustCompile(`(?i)Quadra ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)Pentagram ?TAB ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)Pentagram ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)(PHICOMM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C630 \(CLUE L\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E653\(ENERGY L\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHICOMM ENERGY 3\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLUE (2S|M|C230)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHILCO |(PCS0[12]|PH350B|PTB[78]R|PTB7PAP_PTB7PAB_PTB7PAR|Hit Max|Hit P10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PCS0[12]|PH350B|Hit Max|Hit P10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PTB[78]R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHILCO Android TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PTB7PAP_PTB7PAB_PTB7PAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Philips|NETTV/|Xenium S[25]66|(?:PI3210G|TPM1[79]1E|70PUH6774_96|QM152E|QM16[134]E|TLE(?:821L|722G)|AND1E|S397|W5510|S410J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?Xenium[ _](S[25]66|V787)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?(X818|X588)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?(S397|W5510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AND1E(?: TV)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PI3210G)`),
		regexp.MustCompile(`(?i)(TPM1[79]1E)`),
		regexp.MustCompile(`(?i)QM152E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QM16[134]E)`),
		regexp.MustCompile(`(?i)(70PUH6774)_96`),
		regexp.MustCompile(`(?i)(TLE821L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TLE722G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S410J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Philips, BDP([0-9]{4})`),
		regexp.MustCompile(`(?i)Philips, ([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)(NETTV/[0-9\.]{5})`),
		regexp.MustCompile(`(?i)Philips-FISIO ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Philips[ _-]?([a-z0-9\-@]+)`),
		regexp.MustCompile(`(?i)(?:PHONEMAX[_ ](?:Saturn(?:[_ ]X)?|Mars|Venus X)|Rocky 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Saturn[_ ]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Saturn(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Mars(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Venus X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rocky 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pipo[_ ]|PipoM9Pro`),
		regexp.MustCompile(`(?i)Pipo[_ ]([TP]9)`),
		regexp.MustCompile(`(?i)PIPO[_ ](X10|X9S)`),
		regexp.MustCompile(`(?i)Pico (G2 4K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pioneer|.*; R1 Build|(?:dvr700pi|XDP-300R|F9212[AB])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i).*; R1 Build`),
		regexp.MustCompile(`(?i)(XDP-300R)`),
		regexp.MustCompile(`(?i)(F9212[AB])`),
		regexp.MustCompile(`(?i)Pioneer, ?([a-z0-9_ \-]+), ?(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Pioneer[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Pioneer[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)Infineum[_ ](Z4?5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixelphone S1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixus|(hiPower|Touch_7_3G|Ride[_ ][34]G|Play[ _]Three[ _]v(?:[234].0|3.1))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ride[_ ]([34])G`),
		regexp.MustCompile(`(?i)Play[ _]Three[ _]v([234].0|3.1)`),
		regexp.MustCompile(`(?i)Pixus[ _]Sprint`),
		regexp.MustCompile(`(?i)(?:Pixus_)?Touch[ _]7[ _]3G`),
		regexp.MustCompile(`(?i)Pixus[ _]hiMax`),
		regexp.MustCompile(`(?i)Pixus[ _]Blast`),
		regexp.MustCompile(`(?i)Pixus[ _]Joker`),
		regexp.MustCompile(`(?i)Pixus Blaze 10.1 3G`),
		regexp.MustCompile(`(?i)(Cosmo_Communicator)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOMO([0-9]|[ ]?mini[ ]?(?:S|3GS)?)`),
		regexp.MustCompile(`(?i)MOMO([0-9][^);/]*) Build`),
		regexp.MustCompile(`(?i)MOMO([0-9][^);/]*)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)PLUM[ _]`),
		regexp.MustCompile(`(?i)Pluzz[_-](Z552|PL5[05]10|PL4010|PL501[46]|Elite_Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook[ _/]`),
		regexp.MustCompile(`(?i)A7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A10 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURFpad2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook SURFpad 3 \(([\d]+).([\d]+)["]?\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURFpad 4 ([LMS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook/(515|614|62[23467]|63[012]|64[01]|650|740|801|840)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POV_TV|POV_TAB|MOB-5045`),
		regexp.MustCompile(`(?i)POV_TAB[_-]NAVI7[_-]3G[_-]M`),
		regexp.MustCompile(`(?i)POV_TAB-PROTAB25XXL8?`),
		regexp.MustCompile(`(?i)POV_TAB-PROTAB([a-z0-9]+)`),
		regexp.MustCompile(`(?i)POV_TAB-P?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Polar[_ ](P24L51T2CSM|P40L33T2CSM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PolarLine[_ ](32PL13TC-SM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Polaroid|(?:PMID|MIDC)[0-9a-z]+(?:[);/ ]|$)|MID(?:1014|0714)|PRO[VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z])|(?:P(?:400[56]|4526|500[56]|502[56]|504[67]|552[56])A|P902/A900|PSPC(?:505|550|[MZL]20A0|K2[01]NA)|SIGMA 5|MIDS145PXE|MIDS747PX|MID4004JBL|MIDS185PR|PSPTD21NA|POMDTB006|PSPCL30A0|PSN-H116)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PSPC(505|550)`),
		regexp.MustCompile(`(?i)PRO4611(?:PR201)?`),
		regexp.MustCompile(`(?i)SIGMA 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO([VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z]))`),
		regexp.MustCompile(`(?i)POLAROID, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(MID(?:1014|0714|S145PXE|S747PX|4004JBL)|POMDTB006)`),
		regexp.MustCompile(`(?i)((?:PMID|MIDC)[0-9a-z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P902/A900)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Polestar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POLY ?PAD`),
		regexp.MustCompile(`(?i)POLY ?PAD[_ \.]([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POLY ?PAD[_\.]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)POLYTRON|W8480|W7430|PW1100S|W7550|W7531|W8570|R2401`),
		regexp.MustCompile(`(?i)POLYTRON[ _]R1500`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2402`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2403`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2406`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2407`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2452`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2457`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2501`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2507`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2509SE`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2509`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R250A`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2506`),
		regexp.MustCompile(`(?i)POLYTRON[ _-](?:R3450|W1400)`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R3500`),
		regexp.MustCompile(`(?i)POLYTRON[ _]L501`),
		regexp.MustCompile(`(?i)POLYTRON[ _]P520`),
		regexp.MustCompile(`(?i)POLYTRON[ _]P552`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G501`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G502`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G503`),
		regexp.MustCompile(`(?i)POLYTRON[_ ]?[ _]4G550`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G551`),
		regexp.MustCompile(`(?i)POLYTRON[ _]T7800`),
		regexp.MustCompile(`(?i)POLYTRON[ _]T7700`),
		regexp.MustCompile(`(?i)POMP[ _-]`),
		regexp.MustCompile(`(?i)POMP[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)POMP[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:YPY_S450|Twist 4(?: Fit|Pro)?|T1085|Positivo Q20|M10 4G PRO X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Positivo (Q20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 4 (Fit|Pro)`),
		regexp.MustCompile(`(?i)(?:T1060B|S455|Positivo (?:Twist|Ypy|Mini I)|Twist[ _](?:\(2018\)|2 (?:Fit|Pro)|Mini|Tab|Metal(?: 32GB)?|Max|XL|SE|[23SM]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S455(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist \(2018\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Metal 32GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Metal(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist[ _]Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Fit(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist XL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Positivo )?Twist ([23SM])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Positivo )Mini I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1060B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Positivo Ypy (AB7F|AB10H|L1050E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Tab(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AXE_II|186HS2080531|186HS1050531|186HS1050232|186FT1080231|185FT5050231|PREMIO[ _](?:S50|P420|P451))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PREMIO[ _](S50|P420|P451)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prestigio 5500 DUO|(?:PMP|PAP|PMT|PSP|PGPS)[0-9]+[a-z0-9_]+(?:[);/ ]|$)|Muze C3`),
		regexp.MustCompile(`(?i)PSP(5517|550[578])DUO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Muze C3|PSP3504DUO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGPS7799CIS08GBPG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGPS7797(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PMT(3118|38[74]8|3[12]01|3[12]57|778[18]|5588|5791|577[18]|4327|3768)[_ ]([34])G`),
		regexp.MustCompile(`(?i)PMT(1177|3208|3618|31[357]1|1157|1196|3[10]96|3[17]61)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PMT(4638|4311|413[17]|411[178]|3771)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PMT(3231|4231|4667|38[3678]1)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PSP7546DUO([ _][A-Z]{2})?`),
		regexp.MustCompile(`(?i)PSP7610DUO([ _][A-Z]{2})?`),
		regexp.MustCompile(`(?i)(PM[PT][0-9]+[a-z0-9_]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:PAP|PSP)[0-9]+[a-z0-9_]+(?: DUO)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PD\-(3127NC|3127) Build`),
		regexp.MustCompile(`(?i)PD\-3127NC Build`),
		regexp.MustCompile(`(?i)PD\-3127 Build`),
		regexp.MustCompile(`(?i)Primux|SirocoY`),
		regexp.MustCompile(`(?i)Primux_ioxphone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxDelta6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxKappa(P50[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxKappa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_Beta2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_?Omega([57])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxUP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) PrimuxZonda4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_Siroco6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SirocoY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRIXTON |(T7012Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRIXTON (C18)`),
		regexp.MustCompile(`(?i)(T7012Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLT([^;/]+) Build|PLT(?:777[45]|9774|1074)G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLT([^;/]+) Build`),
		regexp.MustCompile(`(?i)PLT(777[45]|9774|1074)G`),
		regexp.MustCompile(`(?i)ProVision (S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Proline_|(?:H10882M-TN|H10888M|H1010)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Proline[_ ]FalconXL`),
		regexp.MustCompile(`(?i)(H10882M-TN|H10888M|H1010)`),
		regexp.MustCompile(`(?i)(MPC-(?:[57]0|65)|MPC-110DSP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PROTRULY[ _](D[78]|V10S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QBOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qtouch_|[ ](Q09|QS701|Q05A|QS31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Qtouch[_ ])?[ ]?(Q09|QS701|Q05A|Q85|QS31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QPHONE[_ ](?:10.1|9.[12]|7.1|5.[246])|QTAB10EW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QPHONE[_ ](?:10.1|9.[12]|7.1|5.[246]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QMobile|QTab|Q-?Smart|(?:E2 Noir|Noir X1S|LUNA PRO|NICE S|JazzX JS(?:[27]|10)(?: PRO)?|LT[57]00[ _]PRO|LT950|Q Infinity|Hot 5|Hot Pro 2|VITA S|i7i 2020|i10[ _]20(?:20|19)|Z12 PRO| GLi)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JazzX JS(2|10)`),
		regexp.MustCompile(`(?i)A600(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT([57]00)[ _]PRO`),
		regexp.MustCompile(`(?i)i(\d+)i 20(20|1[89])`),
		regexp.MustCompile(`(?i)i10[ _]20(20|19)`),
		regexp.MustCompile(`(?i)Q Infinity ([FCB])`),
		regexp.MustCompile(`(?i)(LT950)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLi Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) GLi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QMobile ENERGY (X[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QTab[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)QTab[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:QMobile|Q-?Smart)[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(QMP_K8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qilive [0-9][^;/]*|Q(7S5[5]?IN4G|7T10INP|T19101HV|8T10IN|8S55IN4G2|8S[56]IN4G|9T9IN|9T(?:7|10)IN4G|9S55IN4G|10S5[37]IN4G|10S[56]IN4G|10S[56]IN4GR|9S5IN4G|6T7IN)`),
		regexp.MustCompile(`(?i)Q10S5IN4G[R]?`),
		regexp.MustCompile(`(?i)(QT19101HV)`),
		regexp.MustCompile(`(?i)Qilive (1\d+[^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Qilive ([0-5][^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Qilive ([0-5]*)/`),
		regexp.MustCompile(`(?i)Qilive ([6-9][^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i) Passion[ _]P|Hynex plus|Stark K1|Hynex H[356]|Levin V[12]`),
		regexp.MustCompile(`(?i)Passion[ _](P[0-9]+)`),
		regexp.MustCompile(`(?i)Hynex plus( 2)?`),
		regexp.MustCompile(`(?i)Hynex (H[356])\+`),
		regexp.MustCompile(`(?i)Hynex (H[35])`),
		regexp.MustCompile(`(?i)Levin (V[12])`),
		regexp.MustCompile(`(?i)Qtek[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:Quantum (?:Fit|Five|UP|MUV (?:PRO|UP)|Go|Mini|V|You [2E])|Q20|LIO\+|Q-TITANO(_007i|-H2)?|Q-Pulse70M|Q-Wave(?:101|71M))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum (Fit|Five|Go|Mini|V|You [2E]|Q20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum MUV PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum MUV UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-TITANO[ _-](BOS|X|M1|007i|H[12]|AK47)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Pulse70M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Wave(101|71M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cronos|MINERVA(?:_32GB)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUMO[ _]?|(?:Quest[ _]?(?:408|410|45[56]|50[679])|Vega[ _]?78[23]|Sirius[ _]?(?:1001|890))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _]?)?Vega[ _]?(78[23]|8002)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Yooda(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sirius[ _]?(1001|890)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _]?)?(Sirius 101-4G 8GB Black|Altair 701 8GB Black|Altair 71 4GB Black|Altair 700[24]|Altair 706|Vega_803i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _])?Quest[ _]?(35[34]|40[268]|410|45[2568]|47[46]|50[679]|5[137]0|574|600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R-TV BOX[ _]?(MINI\+|X99|X10 PRO|[RXS]10)`),
		regexp.MustCompile(`(?i)RCT([^;/]+) Build|RCA RLTP4028|RC7T3G21|RCT6B06P23|RCT6613W23P|RCT6513W87|RCT6973W43(?:MD)?|RCT6703W12|RCT(?:6A06P22|6603W47M7|6303W87(?:DK|M)|6773W22B|6203W46L|6873W42M|6K03W13|6876Q22N|6A06Q22)`),
		regexp.MustCompile(`(?i)RCT6873W42M|RCT6876Q22N?`),
		regexp.MustCompile(`(?i)RCT6973W43(?:MD)?`),
		regexp.MustCompile(`(?i)RCT6703W12|RCT6B06P23`),
		regexp.MustCompile(`(?i)RCT(?:6303W87(?:DK|M)|6K03W13)`),
		regexp.MustCompile(`(?i)RCT([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)RC([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:H1A1000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BB10;|BlackBerry|rim[0-9]+|PlayBook|STV100-[1234]|STH100-[12]|BBA100-[12]|BBB100-[1234567]|BBD100-[126]|BB[EF]100-[123456789]|BB[CGH]100-1`),
		regexp.MustCompile(`(?i)BBA100-[12]`),
		regexp.MustCompile(`(?i)BBB100-[1234567]`),
		regexp.MustCompile(`(?i)BBD100-[126]`),
		regexp.MustCompile(`(?i)BBE100-[123456789]`),
		regexp.MustCompile(`(?i)BBF100-[1234567]`),
		regexp.MustCompile(`(?i)(?:BlackBerry )?(9000|9790)`),
		regexp.MustCompile(`(?i)STV100-[1234]`),
		regexp.MustCompile(`(?i)STH100-[12]`),
		regexp.MustCompile(`(?i)BB10; ([a-z0-9\- ]+)\)`),
		regexp.MustCompile(`(?i)PlayBook.+RIM Tablet OS`),
		regexp.MustCompile(`(?i)BlackBerry(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)rim([0-9]+)`),
		regexp.MustCompile(`(?i)(8520|8530|9220|9320|9360)`),
		regexp.MustCompile(`(?i)(9800|9860)`),
		regexp.MustCompile(`(?i)FORTIUS QUAD 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Shock ?(?:5|5\.5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Shock ?(5|5\.5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZR01|3917JR|P710|C330)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ramos ?([^/);]+)(?: Build|[);])|(?:MOS1(?:max)?|W22PRO 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ramos[ _])?(R10|R9|M7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MOS1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ramos ?([^/;]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Raspberry (Pi [0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RAVOZ[ _](Z[57] (?:Lite|Pro)|Z[3-7]|R[478])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Allure[_ ](?:Ultra(?:[_]Curve)?|Secure|Admire|Rise)|Opulent X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Readboy[ _-]`),
		regexp.MustCompile(`(?i)Readboy[ _-]C18Max`),
		regexp.MustCompile(`(?i)Readboy[ _-]C(\d+)Pro`),
		regexp.MustCompile(`(?i)Readboy[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Realme[ _]|(?:RMX(?:19(03|4[1235]|19|9[23]|2[1579]|[01379]1|73)|20(?:[025-7]1|42|[0357]2|03|2[257]|63|7[56]|8[1356]|[2-5]0)|21(?:0[13]|1[27]|[12]1|4[24]|5[156]|6[13]|7[036]|8[059]|9[345])|220[0125]|18(0[13579]|11|3[13]|2[1257]|[45]1|53|45)|32(?:0[13]|42|[346]1)|30(?:[3468]1|4[23]|9[23]|63|85)|31(?:2[12]|15|42|9[1357]|51|6[16]|71)|3125|33[57]0|330[01]|3357|3393|336[036]|326[23589]|3235|3430|3472|34[69]1|33[86]1)|(?:OPPO[ _]?)?CPH1861|RMP210[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?RMX3142(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1861(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX180[59]`),
		regexp.MustCompile(`(?i)RMX180[137]`),
		regexp.MustCompile(`(?i)RMX(1833|182[125])`),
		regexp.MustCompile(`(?i)RMX185[13]`),
		regexp.MustCompile(`(?i)RMX190[13]|Realme X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX199[12]`),
		regexp.MustCompile(`(?i)RMX1931|Realme X2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2176(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2121(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX1921|Realme XT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX19(1[19]|27)`),
		regexp.MustCompile(`(?i)RMX197[13]`),
		regexp.MustCompile(`(?i)RMX203[02]`),
		regexp.MustCompile(`(?i)RMX200[13]`),
		regexp.MustCompile(`(?i)RMX204[02]`),
		regexp.MustCompile(`(?i)RMX206[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX215[15]`),
		regexp.MustCompile(`(?i)RMX1925(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX1811(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX194[1235](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX202[1207](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2185(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2189(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2180(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX219[45](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX306[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX320[13]`),
		regexp.MustCompile(`(?i)RMX326[123]`),
		regexp.MustCompile(`(?i)RMX319[13]`),
		regexp.MustCompile(`(?i)RMX319[57]`),
		regexp.MustCompile(`(?i)RMX326[589]`),
		regexp.MustCompile(`(?i)RMX330[01]`),
		regexp.MustCompile(`(?i)RMX3031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3357(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX336[0136]`),
		regexp.MustCompile(`(?i)RMX3350(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX216[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2193(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3171(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2156(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX1831(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX(?:20(?:51|[2]5)|2144)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2052(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX207[56](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2072(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX(2142|2081)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX208[56]`),
		regexp.MustCompile(`(?i)RMX346[12]`),
		regexp.MustCompile(`(?i)RMX211[12]`),
		regexp.MustCompile(`(?i)RMX220[01]`),
		regexp.MustCompile(`(?i)RMX312[12]`),
		regexp.MustCompile(`(?i)RMX304[123]`),
		regexp.MustCompile(`(?i)RMX309[23]`),
		regexp.MustCompile(`(?i)Realme[ _]([1-9])[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP210[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wizpad_)?Valuer_V8`),
		regexp.MustCompile(`(?i)(?:Wizpad_)?Valuer_V8`),
		regexp.MustCompile(`(?i)(?:reeder[_ ](?:3G_Tablet|A7iC|A[78]i[_ ]Quad|A8i Q2|M8 Plus|[TM]8|M10 Plus|P11SE)|M10SPlus|P12Curve|P13_Blue_Plus|P13_Max_Blue|P13[_ ]Blue[_ ]Ma(?:ks|x)|P13_Blue|P13 Blue 2021|M7Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)reeder[_ ](3G_Tablet|A7iC|A[78]i[_ ]Quad|A8i Q2|M8 Plus|[TM]8|M10 Plus|P11SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P13[_ ]Blue[_ ]Max|P13_Max_Blue`),
		regexp.MustCompile(`(?i)RD86E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RD86E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Revo[_ ](?:Youplus|555)|RevoYou`),
		regexp.MustCompile(`(?i)Revo[ _]?(You|555)`),
		regexp.MustCompile(`(?i)MK(80[28][^/;]*) Build`),
		regexp.MustCompile(`(?i)Rinno (R(?:400|505))`),
		regexp.MustCompile(`(?i)(RMD[-_](?:10(?:2[689]|30|5[089])|1121|75[017]|726|85[57]|870)|RMP-(?:450|50[56]|530|600))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMD[-_](10(?:2[689]|30|5[089])|1121|75[017]|726|85[57]|870)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP[-_](450|50[56]|530|600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RITZVIVA[_ ]S500C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIVIERA[ _]`),
		regexp.MustCompile(`(?i)RIVIERA[ _](F23|U963)`),
		regexp.MustCompile(`(?i)PHANTOM (?:PZ|RX)|RHYTHM RX`),
		regexp.MustCompile(`(?i)PHANTOM PZ ?(2[05]|[13]5|4|18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHANTOM RX ?(298|387)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RHYTHM RX ?([15-9]0|[467]5|[12]80|150|[14]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IO (?:Pro|3D|Light)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Roku(?:OS)?/(?:DVP|Pluto)?-?|QSP; Roku`),
		regexp.MustCompile(`(?i)Rombica[_ ]|(SSQ-A0500|Smart Box v[0-9]+|Smart Box (?:[ADBXZ]1|[GDFQ]2|A3|H4))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SSQ-A0500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Rombica[_ ])?Cinema4K_v01`),
		regexp.MustCompile(`(?i)(Infinity K8|Smart Box (?:v00[3-9]|Quad|Ultra HD v002|4K V001|[ADBXZ]1|[GDFQ]2|A3|H4)|TV (?:Ultima|Fly))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RM(D)?[-_](974R|600|550|790)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rover ([0-9]+)`),
		regexp.MustCompile(`(?i)(?:Rover[ ]?Pad|RoverPhone|Sky 7.85 3G|Pro_Q(?:8|10)_LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RoverPhone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro_Q(8|10)_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Rover[ ]?Pad)?sky 7.85(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RoverPad (10.4|Air S70|9.7 3G|Sky 9.7|3W A73|3W7|3WT70|3W9.4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RQ[ -](Regal R8|713S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RQ (Regal R8)`),
		regexp.MustCompile(`(?i)RQ-(713S)`),
		regexp.MustCompile(`(?i)(RugGear|RG(?:310|500|65[05]|702|7[13]0|850))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RG[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ruio[ _]|M671M4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ruio[ _](S4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ruio[ _](S5)Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Runbo|F1-TT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Runbo[ _-]?(X5-W|F1 Plus|[PF]1-TT|F1-EN|[FH]1|TT|Q5-S|X5-King|X6|Q5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RYTE U55 LTE|RT701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RYTE (U55 LTE)`),
		regexp.MustCompile(`(?i)(RT701)`),
		regexp.MustCompile(`(?i)S-TELL|(?:M630|M55[78]|P760|M555i|M655)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P760)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S-TELL[ _])?M([0-9]{3}|555i|M655)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S2TEL[ _-]`),
		regexp.MustCompile(`(?i)S2TEL-(Q8)`),
		regexp.MustCompile(`(?i)(?:GO[35]E|5101J|GO3C(?: Plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5101J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO3C Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO3C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GO[35]E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem|StarTab`),
		regexp.MustCompile(`(?i)StarXtrem II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarXtrem ?([3-6])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarXtrem(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail[ _]?([1-9])[ _]([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail[ _]?([1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT II Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarText II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarText(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarNaute II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARNAUTE ?([1-4])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarNaute(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem)[^;/]*) Build`),
		regexp.MustCompile(`(?i)BHX-UH200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Modern[ _](?:S10?|S[3679]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Atractivo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLE[_ ]POP[_ ]S([45]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLO[_ ](Aspire(?: M)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Gravity Max|GRAVITY 2|GRAVITY 4G_2019|GRAVITY_OCTACORE|SPC (?:GEN|SMART)|SPC_ALIEN(?:_STICK)?|SPC Glow9.7|Lightyear)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPC Glow9.7`),
		regexp.MustCompile(`(?i)SQOOL-V(41?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AERIAL PLUS|BLOCK_MINI|BLOCK GO|BLOCK 3|Fractal|Joy Pro|Origins Pro|SLAY II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STG[ _](A[12] Pro|[AS]1|X[1-3]|X20|S[1-3]0|[BC]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK[_ ]|Storm 2e Pluz`),
		regexp.MustCompile(`(?i)STK[_ ]([^/;]+) Build`),
		regexp.MustCompile(`(?i)STK[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SUNWIND[_ ]|SUN[-_]LED\d+|(?:SKY 9 [EA]\d+ 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY ([79]) ([EA]\d+) 3G`),
		regexp.MustCompile(`(?i)SUN[-_]LED(\d+\w\d+)`),
		regexp.MustCompile(`(?i)(?:SCHR9G[RL]|PRA(?:U8|100|557|507)|ZUR(?:722M|70016W?|700[RW]|805A))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCHR9G[RL]`),
		regexp.MustCompile(`(?i)PRA(U8|100|557|507)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZUR(70016W?|700[RW]|805A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEON[_ ]RAY`),
		regexp.MustCompile(`(?i)SAGEM|portalmmm/2.0 (?:SG|my)`),
		regexp.MustCompile(`(?i)SAGEM-(my[a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)SAGEM ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAGEM-([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 ((?:SG|my)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)Sagemcom_Broadband_SAS,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:STS570)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(STS570)`),
		regexp.MustCompile(`(?i)SAMSUNG|lineage_j5y17lte|FamilyHub|Maple |Gear Live|(?:SEC_)?SC-(?:001|01[FGHKLM]|02[CGHJKLMF]|03[EFJKL]|04[EFJL]|05[GL]|(?:4[12]|5[1-4])A|5[1-5]B)|N[57]100|N5110|N9100|S(?:CH|GH|PH|EC|AM|HV|HW|M)-|SMART-TV|GT-|Galaxy|(?:portalmmm|o2imode)/2\.0 [SZ]|sam[rua]|vollo Vi86(?:[);/ ]|$)|(?:OTV-)?SMT-E5015|ISW11SC|40[34]SC|SC(?:V3[1-9]|V4[0-9]|51Aa|-56B|T21|G0[1-9]|G1[012]|L2[234])(?:-[uj])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OTV-)?SMT-E5015`),
		regexp.MustCompile(`(?i)Samsung, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-)?N5100`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T677(?:[ATV]|N[KL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T670(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-)?N5110`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N5120`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT|SM)-N8000`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N8010`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N8020`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P1000M?|SCH-I800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P3100B?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P311[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5100|SCH-I915`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P511[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T217T`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5210`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5220`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6201`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6810`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P7100`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P75[01]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P600`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P60[12]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P605|P607T)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P901`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P905`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P587|P588C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P583(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P205(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T307U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T297`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T505[CN]?|T507)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T225`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T11[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X205`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T830[X]?|T837R4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T837P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T835[CN]?|T837[VTA]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T725[CN]?|T720X|T727(?:R4|[AUV])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T720(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T865N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T867(?:R4|[VU])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P615[CN]?|P617)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P610X?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T860X?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T866N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T111`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T116(?:BU|NU|NY)?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T2105|T212)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T210R?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T21(?:[15]|7[AS])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T230(?:NU)?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T23[15]|403SC`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T239|T237[PV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T232(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T312`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T311`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T315`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T33[215]|T337[AVT])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T520`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T53[15]|T537[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T536(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T320`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T325`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T525`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T530(?:NU)?|T533)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T705|T707[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:T805|T807[PV]?)|SCT21)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T813|T810)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T719[CY]?|T715(?:N0|[CY])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T71[03]|T710X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T815|T817[ATW]?|T818[ATVW]?|T819[Y]?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T820`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T82[57]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T975N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T970(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T976[BN]|T978U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T870(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T875N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T878U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T735`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T736`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T733`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X906`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X806`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X706`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T280`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T285`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T3[58]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P350|T3[58]5|T357[TW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T387(?:AA|R4|VK|[TVW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T295`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T290`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P355([MY])?|T550)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P550|P555(M)?|T555)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T58[05]|P58[05])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T587[P]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T59[057]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T51(?:7P|[057])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T37[57]|T378[KLSV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T56[02]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T561`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T567V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T365(?:F0|[MY])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T395[CN]?|T397U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T390(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T575N?|T577U?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T545|T547U?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T540(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P902|P907A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-T2519`),
		regexp.MustCompile(`(?i)Family ?Hub`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G850(?:8S|[AFKLMSWXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A605K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A202K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5510`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5512`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B7510`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5801`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8000`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I8150|SM-T255S)`),
		regexp.MustCompile(`(?i)SC-01H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5830`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G357(?:FZ|M)|G310HN)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8160`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G313(?:HY|M[LUY]|[FM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G316M`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G313[HU]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G316U|G318(?:H|ML))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G9100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHV-E120S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8190`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I826[02]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G386W`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3589W`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8320`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I85[23]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3858`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G600S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I855[028]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G381[28]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8580`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8730`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:E500(?:HQ|YZ|[0FHM])|S978L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E700[09FHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I90(?:00|08|18|88)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9001`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9003`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9010`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9070`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I910[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?ISW11SC`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9103`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9105`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G730(?:W8|[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I919[025]|SCH-I435)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9515`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9295`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9300|SCH-(?:I535|I939|L710))|SC-03E`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9305|SCH-R530)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S975L|GT-I950[025]|SC-04E|SCH-(?:I545|I959|R970)|SGH-M919N?|Galaxy-S4|SHV-E300K)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9506)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHV-E330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5280`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5301`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G110[BHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5360`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6312`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G130(?:BT|HN|[EHMU])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G130BU`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6790`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6810`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6812`),
		regexp.MustCompile(`(?i)SC-04J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SC-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7275`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7500`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-S7560|SCH-I699)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7390`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7580`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I739`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-S7562|SCH-I919)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7582`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G31[36]HU|G313HZ)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7710`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G388F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G389F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G390[FWY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G398FN`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G715(?:FN|U1|[AUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G889(?:YB|[AFG])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G525F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8500`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8530`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8600`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5380`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7250`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5250`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5780`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7230`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:C101|C105([AL])?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:C111(M)?|C115)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G318[HM]Z`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G355(?:6D|[89HM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G350`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G360[FH]?|S820L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G361[FH]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G386F|G3518(?:_TD)?|G3586V)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3568V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G5108Q?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3815`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G9009D`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G900FD`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G900|G906[KLS]|S902L|S903VL)|Galaxy-S5|SCL23|SC-04F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G901F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G870[AFW]|SC-02G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G903[FMW]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G860P`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G920(?:F[DQ]|W8|[089AFIKLPRSTVX])?|SM-S906L|SM-S907VL)|SC-05G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G890A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G925[0ADFIKLPRSTVWX]|SCV31|404SC`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G928(?:7C|N0|R4|W8|[07ACFGIKLPSTVX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G930(?:AZ|FD|R[467]|T1|V[CL]|W8|[0AFKLPRSTUVX8])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G935(?:R4|W8|[0AFKLPSTUVX])|SC-02H|SCV33`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G891A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G950[08FNUW]?|SCV36|SC-02J`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G8750`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G892[AU]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G955[0AFKLNPRTUVWX]?|SCV35|SC-03J`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G960[0FNUWX]?|SCV38|SC-02K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G965[0FNUWX]|SCV39|SC-03K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:G973|G977[BNPTU])|SCV41|SC-03L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S10 Lite|G770(?:U1|F))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G975[08FUNWX]|SCV42|SC-04L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G970(?:U1|[08FUNWX])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G980F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G981(?:U1|[0BNUVW])|SCG01|SC-51A|SC51Aa`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G780`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G781(?:U1|[0BNUVW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G988(?:U1|[0BNQUW])|SCG03`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G985F|SCG02`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G986(?:U1|[0BNUW])|SC-52A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G991(?:U1|[0BNWQU])|SCG09`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G990`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SC-51B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G998(?:U1|[0BNUW])|SC-52B)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G996(?:U1|[0BNWU])|SCG10`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S901(?:U1|[0BENUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S908(?:U1|[0BENUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S906(?:U1|[0BENUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F700(?:U1|[0FNUW])|SCV47`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F707(?:U1|[0BNUW])|SCG04`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I829`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SCH-R740|SGH-S730)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-S738`),
		regexp.MustCompile(`(?i)vollo Vi86(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G386(?:T1|T)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A716S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A015(?:DL|[TU]1|[AFGMUV])|S111DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A013[FGM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A025(?:[AFGM]|AZ)?|S124DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A037[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A035[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A032[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A022[GMF]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A260[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S115(?:DL)?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A225[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A226|SC-56B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A300(?:FU|YZ|XU|XZ|[09FGHMXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A310(?:N0|[FMXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A320(?:FL|[FXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A430F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A500(?:YZ|[9LSWY])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A500[0FGHKM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A500(?:FU|X)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A510[08FKLMSXY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A520[FKLSWX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A525`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SC-53B|SM-A526)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A528`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A600(?:AZ|FN|GN|T1|[AFGNPTUX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A605(?:[FG]N|[08FGX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G6200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A606[0Y]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A700(?:YD|[09FHKLSX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A710[08FKLMSXY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A720[FMSX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A750(?:GN|[CFGNX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A71(?:5[FW])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A725[FM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A716(?:U1|[0BUV])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A(?:530F|800[0FISXY])|SCV32`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G885[FSY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A810(?:YZ|[FS])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A8s|G887[0F])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A530[MNWX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A730[FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A900[0F]`),
		regexp.MustCompile(`(?i)SM-A9\[7\]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A920[0FXN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G885[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A9 Pro|A910[0F]|G887N)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A105[FGMN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A107[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S102DL|A102[NUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A115(?:A[PZ]|U1|[AFMUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A12(?:5[FMNUW]|7[FM])|S127DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A136(?:U1|[UW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A205(?:U1|YN|[FGSWU])|S205DL)|SC-02M|SCV46`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A215(?:DL|U1|[UW])|SM-S215DL|SC-42A|SCV49)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A217[FMN](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A202[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A207[0FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A305(?:[FGY]N|GT|[FGN])|SCV43)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A307(?:FN|GN|GT|[FG])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A315[FGN](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A325`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:A326(?:BR|U1|[BUW])|S326DL)|SCG08)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A405(?:F[NM]|S)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A305[018](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A415F|SC-41A|SCV48)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A426(?:U1|[0BNU])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A505(?:F[GN]|U1|YN|[FGNUWX])|S506DL|505FN)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A5070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A507FN`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A515[FUW]|S515DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A516(?:U1|[0BNUV])|SC-54A|SCG07)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A705(?:GM|[MYF]N|[0FUWX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A707[0F]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A805[0FNX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A908[BN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A9080`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F127G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E225F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F415F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E5260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E625`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9301I`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S120VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J100(?:FN|VPP|MU|[FGHMY])|S777C)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J105[BFHYM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J106[BFHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J120(?:ZN|[AFGHMPTW])|J05H)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J110[FGHLM]|J111[FM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J200[FGHMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J200BT`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J260AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J260([AFGMY]|T1)|S260DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J(?:210F|250[FGMNY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S367VL|S357BL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J311(?:[09]|9S)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S320VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S327VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327(?:T1|[ATW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327(?:[FP]|R4)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337R4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S337TL`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J3109`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J300H|J320(?:[ZF]N|R4|W8|YZ|[AFGHMNPVY]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J330(?:FN|[08FGLN])|J327(?:R7|U))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337(?:VPP|[AWPUV])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G400[FG]|J400[FGM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J500(?:FN|N0|[78FGHMY])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J510(?:[FGMU]N|FQ|[8FGHKLSY])|5108|G510H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J530|lineage_j5y17lte`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G570[0FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J600[FGLN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J610[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J410[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J415(?:[FG]N|[FGN])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J7[01]0(?:FN|MN|[8FHKM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J700P`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J700(?:T1|T)|J710GN|J7109)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J730[K]|J727(?:R4|[AFSU]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J737(?:R4|T1|VPP|[APSTUV])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C710F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G610[FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G611(?:FF|MT|M)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G615F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S727VL|S737TL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J7 Pro|J730(?:GM|[FG]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J701[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J720[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S767VL|S757BL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J727[PTV]`),
		regexp.MustCompile(`(?i)SM-J7\[7\]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J810`),
		regexp.MustCompile(`(?i)SM-J9\[7\] Prime`),
		regexp.MustCompile(`(?i)SM-J9\[8\] Pro`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M015[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M013F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M017F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M025F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M022[FGM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M105[FGMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M107F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M115[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M127[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:M205(?:[FGMN]|FN)|M20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M215F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M215G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M225`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:M307(?:FN|[0F])|M30s)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M305?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M315F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M325F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M326`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M317F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M405`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M426`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M515F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M526`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M625`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W201([689])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2022`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2015`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G910S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G550(?:FY|T[12]?)|S550TL|G55[01]0|G5520)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G5528`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G600(?:FY|[0F])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G610[0KLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G611[FKLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C500[0X]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C501[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C700[0X]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C701[08FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C710[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C900[08FY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z130H`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z200[FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z300H`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z400[FY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G150(?:N[0KLS])?|G155S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G16(?:0N|[05]0?|5N))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J321AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J326AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J336AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J727AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:F900[0FUW]|F907[BN])|SCV44`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F711|SCG12|SC-54B)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F916(?:U1|[0BNQUW])|SCG05`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F926|SC-55B|SCG11)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9060(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9063`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9(?:080|128)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9168`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9082`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N7000`),
		regexp.MustCompile(`(?i)(?:SC-01G|SCL24)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N935[FSLK](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:(?:GT-)?N7100|SCH-(?:I605|N719|R950)|SPH-L900)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N7105`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G710(?:2T|5[HL]|[25689KLS])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G720(?:AX|N0|[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G530(?:[689]W|[AF]Z|BT|MU|R[47]|[AFHMPTWY])|G531[FH]|S920L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G531(?:BT|[MY])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532MT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532[MG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N7502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N750[05LQ]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N9002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-9005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-N900(?:W8|[05689][VQ]?|[AKLPSTV])?|SCL22|SC-01F|SC-02F)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:N910|910U)|N9100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N916[KLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N915`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N920(?:R[467]|W8|[0ACFGIKLPSTVX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N9208`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G750(?:8Q|[9AFH])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I915[028]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I920[05]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-N930(?:R[467]|W8|[0AFKLPSTUVX])|SCV34)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-N950|SCV37|SC-01K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N960|SCV40|SC-01L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-(?:N970(?:U1|W8|[089DFJKLSUWX])|N971N)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-N770[FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N975(?:U1|XU|[0CFUWX])|SM-N976[0BVNQU]|SC-01M|SCV45)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N980(?:F/DS|F))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N981(?:B/DS|U1|[0BNUW]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N985(?:F/DS|F))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N986(?:B/DS|U1|[0BNUW])|SC-53A|SCG06)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W750V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G310R5`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-E2152`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(GT-(P|N8|N5)[0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?((?:SM-[TNP]|GT-P)[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)((?:SCH|SGH|SPH|SHV|SHW|GT|SM)-[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)Galaxy ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Galaxy ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG[\-][ ]?([a-z0-9]+[\-_][a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG;[ ]?([a-z0-9]+[\-_][a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG[ _/\-]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)SAMSUNG;[ ]?([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)SEC_SC-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SEC-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:portalmmm|o2imode)/2\.0 ([SZ][a-z0-9]+)`),
		regexp.MustCompile(`(?i)sam([rua][0-9]+)`),
		regexp.MustCompile(`(?i)(?:8312D|G(60[25]|70[3568]G?|785|803)|N83(?:-2cpu)?|N91) Build`),
		regexp.MustCompile(`(?i)G(60[25]|70[3568]G?|785|803)`),
		regexp.MustCompile(`(?i)Sansui[_ ]`),
		regexp.MustCompile(`(?i)Sansui[_ ](Switch|Play|Fun|SA4[01]|U4[56]|U3[02]|Nova)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SANTIN|(?:BiTBiZ_V58|ACTOMA ACE|DREAMPLUS03A|Candy U7 Pro|GAAMII|RS635H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BiTBiZ_V58(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAAMII G1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAAMII(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Candy U7 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DREAMPLUS03A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GreenOrange(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLASSONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)halove(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ACTOMA ACE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)monica(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POWER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GALAZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEWDUN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SANTIN[ _][#]?(Dante|Candy U7|Armor|YSL-Y7|ANT.W|N[13]|JS|S6|V9(?:[ _]Pro)?|Life Shine|ovvi|D|11 XS Max|SHUGUO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RS635H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Santin[ _#]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Sanyo|MobilePhone[ ;]`),
		regexp.MustCompile(`(?i)SCP-?6750`),
		regexp.MustCompile(`(?i)SCP-?6760`),
		regexp.MustCompile(`(?i)SCP-?6780`),
		regexp.MustCompile(`(?i)SANYO[ /_-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)MobilePhone ([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i) (TB-PO1|TB-B01|TB-G01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Seatel[ _](L2|V8[AE]|T[5-8]|R6|V[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Seeken[ _-]`),
		regexp.MustCompile(`(?i)Seeken[_ -](SG1|SJ1)`),
		regexp.MustCompile(`(?i)Seeken[_ -](ST-101)`),
		regexp.MustCompile(`(?i)Selecline[ _]|S4T7IN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S4T7IN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Selecline 10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Selenga[ _](A[134])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sencor|(?:ELEMENT[ _]?(?:(?:7|8|9\.7|10[ _]1)(?:[ _]?V[23])?|P[0-9]+|10.1 Q001)|10_1Q205)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?Element (10\.1) (Q001)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2[ _]BASIC`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT8`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT10[ _]1`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?(7Q105)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(10)_(1Q205)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?P([0-9]+)`),
		regexp.MustCompile(`(?i)Sencor[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Sendo([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Senkatel[ _]|(?:MaximusT1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Senkatel[ _](T1009|T8002|T701[12]|T9702)`),
		regexp.MustCompile(`(?i)SENSEIT[ _]?([^;/)]+)( Build|\))`),
		regexp.MustCompile(`(?i)Senwa|(?:S\-?(?:471|7[12]5|6[01]5|915|905TL|1000|5018)|V705B|LS50F| LS50?|LS5518H|LS5718|LS5018F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?471(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?905TL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?5018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5018F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?(615|7[12]5|915)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V705B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS50F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) LS50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) LS5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5518H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Senwa[ _-]*([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(AUTOID9N|CRUISE1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHARP|SBM|SH-?[0-9]+[a-z]?(?:[);/ ]|$)|AQUOS|(?:SH-M0[14-9]|SH-M1[1-7](?:-y)?|S[357]-SH|SH-[MZ](10|01)|SH-[CL]02|SH-RM(?:1[1258]|02)|SH-R?M19|SH-R10A|[34]04SH|401SH|[45]02SH|306SH|[36]05SH|70[1246]SH|80[138]SH|90[1678]SH|50[3679]SH|SHL2[125]|SHV4[0-8]|SHV3[1-9](?:[-_]u)?|FS80(?:1[08]|32|28|0[29])|TG-L900S|NP601SH|403SH|603SH|SHF3[1-4]|SHV4[035][-_]u|SW001SH|SHG0[1-6]|X4-SH|A002SH|SH-A01|DM-01[JH]|SH-D01|SH-01FDQ|A[01]01SH|606SH|FS801[56]|d-41A|NP80[567]SH|NP501SH|A00[34]SH|A102SH|IS05|SH-(?:53A|51B|H01)|LP-01|FS8014|SBM00[35]SH|SBM103SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)506SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)603SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)50[23]SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[34]04SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)606SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)507SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S3-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S5-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S7-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X4-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHG06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M07(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A003SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-54B|SHG05|SH-R?M19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG03|A004SH|SH-M17|SH-53A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-D01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M12(?:-y)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-H01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-[MZ]10|801SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-M13|906SH|SH-01M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG04|A102SH|SH-RM18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG02|A002SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-Z01|Aquos S2 4/64)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-02E|SH-01[GH]|SH-04H|SH-09D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-01FDQ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-?06D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHL2[125]|SH-M01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(203SH|30[23]SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-L02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:605SH|SH-03J|SHV39)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:701SH|SHV41|SH-M06)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-M09|SHV42|706SH|SH-03K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)803SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:908SH|SHG01|SH-M14)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M16(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-C02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHF3[1-4])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-02J|SH-04G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-02H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)30[56]SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)402SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)403SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:509SH|SH-R10A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP601SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV40|SHV3[24])(?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)702SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV3[183](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8010|SH-M08|SHV43(?:-u)?|SH-01[KL])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8016(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV46|SH-R?M11|901SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV44|808SH|SH-04L|SH-03G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8032|FS8015|SH-02M|SHV45(?:-U)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV48|907SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-RM12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-RM15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-51B|A101SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV3[57](?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TG-L900S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8002|SHV47)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SW001SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DM-01[JH])`),
		regexp.MustCompile(`(?i)NP80[56]SH`),
		regexp.MustCompile(`(?i)LP-01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(00[35]SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(103SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM200SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-08E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)d-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LC-(?:[0-9]{2})[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHARP-AQUOS|AQUOSBrowser`),
		regexp.MustCompile(`(?i)SHARP[ \-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)AQUOS[ \-]TV([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(?:SHARP|SBM)([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(SH-?[0-9]+[a-z]?|IS05)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHIFT6m)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STV[-_](40LED25S|40LED42S|32LED42S|32LED30C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHTRIH-SMARTPOS-F2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PNT-704[025])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SICO[_ ](?:PLUS|e1002)|(?:Express3-Max|SSR3-1-51-5M|SSD-1-53-13M|Mega2|Express3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SICO[_ ]PLUS2`),
		regexp.MustCompile(`(?i)SICO[_ ]PLUS`),
		regexp.MustCompile(`(?i)SICO[_ ]e1002`),
		regexp.MustCompile(`(?i)SIEMENS|SIE-|portalmmm/2\.0 SI|(?:S55|SL45i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SIE-)?(S[56]5|S40|C45|ME45|SLIK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SIEMENS[ \-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SIE(?:MENS )?[\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:SIE-)?(SL45i)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 (SI[a-z0-9]+)`),
		regexp.MustCompile(`(?i)Sigma|(X[_-]Style[ _]?Tab[_ ]A(\d+)|X[-_ ]?treme[-_ ]?PQ[0-9]{2}|X-Style_S5501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?treme[-_ ]?PQ([0-9]{2}) Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?treme[-_ ]?PQ([0-9]{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[_-]Style[ _]?Tab[_ ]A(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?Style[-_ ]S([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Silelis[ _](T-1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TangoTab|Presto[ )]|PicassoTab_X|Ultimax|Valumax|S72-B|SX2W`),
		regexp.MustCompile(`(?i)TangoTab_(\d+)`),
		regexp.MustCompile(`(?i)(NP602SI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Singtech|(?:Sapphire[_ ](?:H50S|H7S?|H90)|Infinity_I(?:1|_Mix))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sapphire[_ ](H50S|H7S?|H90)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Singtech[ _](Q2|S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity_I1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity_I_Mix(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Siragon|(?:SP-(?:5[0124]50|5400))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Siragon[_ ])?(SP-(?:5[0124]50|5400))`),
		regexp.MustCompile(`(?i)(?:FINNEY U1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SKY|Elite|Fuego)[_ ][3-7]\.[05](?:[A-Z]{1,2})?|Elite[ _](?:5_0T|M45|[45]T|45T|GO|M5Plus|T[46]|[ABCHP]5|5_5_Octa|Octa|[BCEFHPT]55|A65)|Platinum[_ ](?:5.0M|5\.5C|[56]\.[05]\+?|[HJM]5|[ABCMP]4|[ACGK]55|[ABDEFG]5|A57|P9|X|UNO|VIEW2|O|4\.0|4_0Plus)|PLATINUMVIEW|SKY[ _](?:55M|Pro_III)|SKYVISION|SKY Black| SKY[ _]Prestige`),
		regexp.MustCompile(`(?i)Platinum[_ ](?:5\.0M|M5)`),
		regexp.MustCompile(`(?i)Platinum[_ ]5\.5C`),
		regexp.MustCompile(`(?i)Platinum[_ ]([56])\.([05])\+`),
		regexp.MustCompile(`(?i)Platinum[ _]4\.0`),
		regexp.MustCompile(`(?i)Platinum[_ ](P9) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Platinum[_ ]([ABCMP]4|[HJ]5|[ACGK]55|[ABDEFG]5|A57|P9|X|UNO|O|6\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Platinum[_ ]?VIEW(2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite Octa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite[ _](M45|Go|[45]T|T[46]|[ABCHP]5|[ABCEFHPT]55|A65|45T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite[_ ]([3-7])[\._]([05](?:[A-Z]{1,2})?\+?)`),
		regexp.MustCompile(`(?i)Fuego[_ ]([3-7]\.[05](?:[A-Z]{1,2})?\+?)`),
		regexp.MustCompile(`(?i)SKY[ _]PrestigeX`),
		regexp.MustCompile(`(?i)SKY[ _]Prestige`),
		regexp.MustCompile(`(?i)SKY[_ ]([3-7]\.[05](?:[A-Z]{1,2})?)`),
		regexp.MustCompile(`(?i)Sky_?worth`),
		regexp.MustCompile(`(?i)Sky_?worth ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Android.+(?:Safari)(?: Build|\) AppleWebKit)|SMADL[ _]`),
		regexp.MustCompile(`(?i)Android.+(?:Safari)(?: Build|\) AppleWebKit)`),
		regexp.MustCompile(`(?i)SMADL[ _]Matri([2X])`),
		regexp.MustCompile(`(?i)Smailo_(2GO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Coral 4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMARTBOOK SB ?13`),
		regexp.MustCompile(`(?i)SMARTBOOK (S9Q9)`),
		regexp.MustCompile(`(?i)(ST1009|ST7160)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smartfren|Androtab|Andromax|PD6D1J|AD682J|AD68[89]G|AD6B1H|AD9A1H|AD682H|AD683G`),
		regexp.MustCompile(`(?i)Andromax[ _\-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Andromax[ _\-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Smartfren[ _\-]([^/;\)]+)(?: Build|[/;\)])`),
		regexp.MustCompile(`(?i)(Androtab[^/;]+) Build`),
		regexp.MustCompile(`(?i)Smartisan[_ ]|(SM(?:70[15]|[89]01|919)|OD10[35]|YQ60[1357]|DT2002C|DE106|DT190[12]A|O[CE]106|OS103|O[CS]105)[ /;\)]`),
		regexp.MustCompile(`(?i)SM70[15]`),
		regexp.MustCompile(`(?i)YQ60[1357]`),
		regexp.MustCompile(`(?i)OD10[35]`),
		regexp.MustCompile(`(?i)OS105[ /;\)]`),
		regexp.MustCompile(`(?i)DE106[ /;\)]`),
		regexp.MustCompile(`(?i)OE106[ /;\)]`),
		regexp.MustCompile(`(?i)OC10[56][ /;\)]`),
		regexp.MustCompile(`(?i)DT2002C[ /;\)]`),
		regexp.MustCompile(`(?i)DT190[12]A[ /;\)]`),
		regexp.MustCompile(`(?i)OS103[ /;\)]`),
		regexp.MustCompile(`(?i)Smarty[_ ]`),
		regexp.MustCompile(`(?i)Mini ?(7L?)`),
		regexp.MustCompile(`(?i)Smooth ?(?:5.[05]|626|6.26 Lite|6.[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth (5.[05]|6.[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth626(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth 6.26 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smotreshka Box (115NA|413NA|213a?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Softbank|J-PHONE`),
		regexp.MustCompile(`(?i)Softbank/[12]\.0/([a-z0-9]+)`),
		regexp.MustCompile(`(?i)([a-z0-9]+);Softbank;`),
		regexp.MustCompile(`(?i)J-PHONE/[0-9]\.[0-9]/([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(SS5214G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLONE|(?:E1457|W145[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLONE[ _]Elite[ _]L5501`),
		regexp.MustCompile(`(?i)SOLONE[ _]SUMO[_ ]S5001`),
		regexp.MustCompile(`(?i)SOLONE[ _](SL-K40|S5002)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sonim[ -]|XP(?:[67]7|88)00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XP6700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XP7700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XP8800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sony(?: ?Ericsson)?|SGP|Xperia|(?:[4-9]0[12])SO|C1[569]0[45]|C2[01]0[45]|C230[45]|C530[236]|C550[23]|C6[56]0[236]|C6616|C68(?:0[26]|[34]3)|C69(?:0[236]|16|43)|D(?:200[45]|21(?:0[45]|14)|22(?:0[236]|12|43)|230[2356]|240[36]|2502|2533|510[236]|530[36]|5316|5322|5503|58[03]3|65(?:0[23]|43|63)|66[03458]3|66[14]6|6708)|E(?:20[0345]3|2006|210[45]|2115|2124|230[36]|2312|23[356]3|530[36]|53[3456]3|5506|55[356]3|56[46305][36]|58[02]3|6508|65[35]3|66[0358]3|68[358]3)|F(?:311[12356]|331[13]|321[12356]|5[13]21|5122|813[12]|833[12])|G(?:2299|312[135]|311[26]|322[136]|3212|331[123]|3412|3416|342[136]|823[12]|834[123]|8[14]4[12]|8188)|H(?:3113|3123|3133|3213|3223|3311|3321|4113|4133|4213|4233|4311|4331|4413|4433|4493|8116|8166|82[1679]6|83[12]4|8416|9436|9493)|I(?:3[12]23|3213|[34]113|[34]312|4193|42[19]3|4332)|J(?:3173|3273|81[17]0|82[17]0|91[15]0|92[16]0)|(?:WT|LT|SO|ST|SK|MK)[0-9]+[a-z]+[0-9]*(?: Build|\))|X?L39H|XM50[ht]|XQ-[A-Z]{2}[0-9]{2}|W960|portalmmm/2\.0 K|S3[69]h|SOG0[1-5]|SOL2[2-6]|SOT31|SOV3[1-9]|SOV4[0-3]|X10[ia]v?|E1[05][ai]v?|MT[0-9]{2}[a-z]? Build|SO-0(?:[12]C|[2-5]D|[1-4]E|[1-5]F|[1-5]G|[1-4]H|[1-4]J|[1-5]K|1M|[1-3]L)|R800[aix]|LiveWithWalkman|BRAVIA|SGP771|E3 Dual|A[01]01SO|A102SO|SO-[45]1[AB]|SO-5[23][AB]|A103SO|A002SO|NW-(A100|Z1000)Series|NSZ-GS7|SmartWatch 3|SVP-DTV15`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E10[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E15[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(LT15[ai]?v?|SO-01C)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT18[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT11`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT15`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT27`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MK16[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST15[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST17[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-02L`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST18[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SK17[ai]?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?X10[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)M1`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?R800`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?WT19|LiveWithWalkman`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?CK13i`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?CK15[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F100i`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J105`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J108`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J10`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U10`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U100`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U1`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U5`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U8`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W100`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W150`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W960`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?WT13`),
		regexp.MustCompile(`(?i)SO-01E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ-BE[4-7]2`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I(?:4113|31[12]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J3173(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SO-41B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A001SO|XQ-AU42|XQ-AU51|XQ-A[TU]52|SO-41A|SOV43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A10[12]SO|SO-52B|SOG04|XQ-BT52)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ-BT44(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I(?:42[19]3|32[12]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I4193`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J(?:9110|81[17]0)|SOV40|SO-03L|802SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J9150)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG01|SO-51A|XQ-AT42|XQ-AT51|SO51Aa|XQ-AT72)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SO-51B|SOG03|XQ-BC[457]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT22i|Xperia P`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT25i|Xperia V`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J92[16]0`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J82[17]0|SO-01M|SOV41|901SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG02|A002SO|XQ-AS[4567]2|SO-52A)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SO-53B|A103SO|SOG05|XQ-BQ[75]2)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOV42|902SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J3273`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26ii`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26i|Xperia S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-02C`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-03D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26w`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT28[aih]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT29i|Xperia TX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT30a`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT30p`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST21[ia]2`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST21[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST23[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST25[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL22`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL21`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST26[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST27[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C150[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C160[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E210[45]|E2115|E2124)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E20[05]3|E2006`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C190[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C200[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C210[45]|S36h`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C230[45]|S39h`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C530[236]|Xperia SP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C550[23]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C650[236]|Xperia ZL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL25(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C66(?:0[236]|16)|SO-02E)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C68(?:0[26]|[34]3)|XL39H|SOL24)|Xperia Z Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xperia Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D200[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D21(?:0[45]|14)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D22(?:0[236]|43)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2212|E3 Dual`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E20[34]3`),
		regexp.MustCompile(`(?i)H33[12]1`),
		regexp.MustCompile(`(?i)H43[13]1`),
		regexp.MustCompile(`(?i)I43[13]2`),
		regexp.MustCompile(`(?i)XQ-AD5[12]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2302`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D230[356]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D240[36]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E230[36]|E23[35]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E2312|E2363)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E56[05][36]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E56[436]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2502`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2533`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E53[05]3|E5306`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E53[0346]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E5506|E5553`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E55[36]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D510[236]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D530[36]|D5316|XM50[ht])`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D5322`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D5503|Xperia Z1 Compact`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C69(?:0[236]|16|43)|SOL23|L39H|SO-0[12]F)|Xperia Z1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D58[03]3|SO-02G)|Xperia Z3 Compact(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D65(?:0[23]|43)|SO-03F)|Xperia Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D66[045]3|D66[14]6|SO-01G|SOL26|401SO)|Xperia Z3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D6633|D6683)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E65[35]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D6708)`),
		regexp.MustCompile(`(?i)SOV31|402SO|SO-03G`),
		regexp.MustCompile(`(?i)SGP771|SOT31|SO-05G`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E58[02]3|SO-02H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E66[05]3|SOV32|501SO|SO-01H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E66[38]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E68[58]3|SO-03H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E6833`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F311[135]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F311[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F321[135]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F321[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F833[12]|SOV34|601SO|SO-01J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:701SO|SOV36|G834[123]|SO-01K)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G8441|SO-02K`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F331[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G312[135]|G311[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G341[26]|G342[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G3426`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G322[136]|G3212`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H31[123]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H41[13]3`),
		regexp.MustCompile(`(?i)H44[19]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H(?:3213|3223|4213|4233)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G823[12]|SOV35|602SO|SO-03J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:G814[12]|G8188|SO-04[JK])`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:H83[12]4|H82[17]6|SOV37|SO-03K|H8296|702SO)`),
		regexp.MustCompile(`(?i)(?:H81[16]6|SOV38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:H(8416|9436|9493)|SO-01L|SOV39|801SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G331[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G3312`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-04E`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-04D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-05D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5121`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5122`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5321|SO-02J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:F8131|502SO|SOV33|SO-04H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F8132`),
		regexp.MustCompile(`(?i)(?:SGP(?:311|312|321)|(Sony)?SO-03E|Tablet Z LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP712(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP(?:511|512|521)(?:[);/ ]|$)|SO-05F`),
		regexp.MustCompile(`(?i)SGP(?:6[124]1|612)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGPT(?:12|121|122|123|13|131|132|133)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BRAVIA )(2K GB ATV3|[48]K UR[123]|4K GB ATV3|4K GB|4K VH2|4K 2015|2015|VH1|VU1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SVP-DTV15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NSZ-GS7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sony-BRAVIA-VH1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SonyBDP|SonyDBV`),
		regexp.MustCompile(`(?i)(?:Sony-)?(KDL?-?[0-9a-z]+)`),
		regexp.MustCompile(`(?i)Opera TV Store.*(?:Sony-)([0-9a-z\-_]+)`),
		regexp.MustCompile(`(?i)((?:WT|SO|ST|SK|MK)[0-9]+[a-z]*[0-9]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)(MT[0-9]{2}[a-z]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 K([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SonyEricsson ?IS11S`),
		regexp.MustCompile(`(?i)Sony ?Ericsson?([^/;]*) Build`),
		regexp.MustCompile(`(?i)SonyEricsson([CGJKPTWZ][0-9]+[a-z]+)/`),
		regexp.MustCompile(`(?i)Sony ?Ericsson ?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Sony Corporation/([^/;]*)\)`),
		regexp.MustCompile(`(?i)Sony (Tablet[^/;]*) Build`),
		regexp.MustCompile(`(?i)(SGP[^/;]*) Build`),
		regexp.MustCompile(`(?i)Xperia ([^/;]*Tablet[^/;]*) Build`),
		regexp.MustCompile(`(?i)Xperia ([^;/]+) \(AOSP\) Build`),
		regexp.MustCompile(`(?i)Xperia ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(XQ-[A-Z]{2}[0-9]{2})`),
		regexp.MustCompile(`(?i)Sony[ -]?([^/;]*) Build`),
		regexp.MustCompile(`(?i)Sony[ -]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)((?:SM-LED32M(?:11|04)S)(?:_-Ver01)?|SM-LED40M04S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOYES[ _](?:[67]S|XS|XS11)|S10-H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOYES[ _]([67]S|XS11|XS)`),
		regexp.MustCompile(`(?i)Spark Plus 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Versity 9640)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CARBONO_5|CUARZO_6|DIAMANTE_5|VULCANO_55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VULCANO_55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CARBONO_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUARZO_6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIAMANTE_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice|(?:Xlife[-_ ](?:\d+Q?|Victor5|M5q\+|M5 Pro|Proton5|Electro55HD))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Spice_)?Xlife[-_ ](\d+Q?|M5\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xlife-M5q\+`),
		regexp.MustCompile(`(?i)Spice[-_ ]?([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Spice[-_ ]?([^/;]+)(?:/|$)`),
		regexp.MustCompile(`(?i)AQT(100|8[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N(9[5678]00|8800|9000|9977)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N(9[5678]00|8800|9977)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starlight|(?:My_Star_X|RIO STAR|C_Note_Pro|Star_Mix_2|I_STAR_PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Starmobile (?:Play (?:Neo|Spark|GO|Click)|Astra)|UP[_ ](?:Sense|Rave|Groove|Prime|Selfie|Xtreme|XL|Max)|PLAY (?:Club|Style))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starmobile PLAY GO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starmobile ASTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Starmobile )?Play (Neo|Spark|Click|Club|Style)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UP[_ ](Sense|Rave|Groove|Prime|Selfie|Xtreme|XL|Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Andromeda[ _]S(707|84[05]|850|8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STX[ -]([^;/]+)|STONE EVO`),
		regexp.MustCompile(`(?i)STX[ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)STX[ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)eZee[^a-z]*Tab ?([^;/]*) Build|STOREX LinkBox`),
		regexp.MustCompile(`(?i)eZee[^a-z]*Tab ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)StrawBerry[ _]`),
		regexp.MustCompile(`(?i)StrawBerry[ _](SX|QX15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STYLO|(?:TARISTAB[234]|Luna|CPE91|VS571|VS5502|S57_A[ZL]URE|INKOSI|Ithemba|S56 MIST|S55 Nova|S40_VISTA|S50_JADE|S64_ALPHA|S53_STARK|S40_LIFE|LIFE_2|S49[_ ](?:MONO|POISE|ECO))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STYLO[ _](F1|Viva)`),
		regexp.MustCompile(`(?i)STYLO[ _]S9[_ ]TOPAZ`),
		regexp.MustCompile(`(?i)SV61 VECTOR\+`),
		regexp.MustCompile(`(?i)SM61 MAGIC\+`),
		regexp.MustCompile(`(?i)S49[_ ]POISE`),
		regexp.MustCompile(`(?i)S49[_ ]MONO`),
		regexp.MustCompile(`(?i)S49[_ ]ECO`),
		regexp.MustCompile(`(?i)Stylo[_ ](521)`),
		regexp.MustCompile(`(?i)(VS571|VS5502)`),
		regexp.MustCompile(`(?i)TARISTAB([2-4])`),
		regexp.MustCompile(`(?i)SUBOR[ _]`),
		regexp.MustCompile(`(?i)SUBOR[ _](S5|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUBOR[_ ]K10PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR[ _]`),
		regexp.MustCompile(`(?i)SUGAR Y([78]) MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR F7 Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR[ _]([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Cyclone [^/;]+) Build`),
		regexp.MustCompile(`(?i)SUNVAN[ _\-]`),
		regexp.MustCompile(`(?i)SUNVAN[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)SUNVAN[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(?:V1s-G|T2s_LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T2s_LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1s)-G`),
		regexp.MustCompile(`(?i)(?:SS4G9 Mira|SS4G7 Sole|SS4G1 Luna|SS4G8 Nora|SS4G6 Lola|SN7014S?|SN7016)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SS4G9 Mira|SS4G7 Sole|SS4G1 Luna|SS4G8 Nora|SS4G6 Lola)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SN7014S?|SN7016)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB2323GMQC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T95ZPLUS|T95[KU]PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T95[KU])PRO`),
		regexp.MustCompile(`(?i)(SC-[0-9]+[a-z]+|SC-2110)`),
		regexp.MustCompile(`(?i)SuperTab(A10|K7|S7G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPRA|NVTAB 7.0 3G|M74C 3G`),
		regexp.MustCompile(`(?i)SUPRA[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(NVTAB 7.0 3G|M74C 3G)`),
		regexp.MustCompile(`(?i)SUZUKI[ _]|(?:ECOPAD7|SUMOPad10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUMOPAD(8100|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Elite Sense|Elite_VR|Slate2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Elite Sense|Elite_VR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slate2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)swisstone (SD 5[13]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SYMPHONY[ \_]([a-z0-9]+)|(?:(?:roar[ _](?:V20|V78|E80|V150))|roarV95|ZVIII|V141)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)roar[ _]?(V20|E80|V78|V95|V150)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V141)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SYMPHONY[ \_]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(SYX-(?:T70[04]|T10[12]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T-Mobile[ _][a-z0-9 ]+|(?:REVVLRY\+?|REVVL V\+ 5G|REVVL 2(?: PLUS)?|5062[ZW]|5007[ZW]|T790[WZ]|Telekom Puls|TMRVL4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5062[ZW]`),
		regexp.MustCompile(`(?i)5007[ZW]`),
		regexp.MustCompile(`(?i)T790[WZ]`),
		regexp.MustCompile(`(?i)REVVL V\+ 5G`),
		regexp.MustCompile(`(?i)REVVL 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Telekom Puls(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T-Mobile[ _]([a-z0-9_ ]+) Build`),
		regexp.MustCompile(`(?i)T-Mobile[ _]([a-z0-9_ ]+)`),
		regexp.MustCompile(`(?i)TAG[ -]TAB[ -]III?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG[ -]TAB[ -](III?)`),
		regexp.MustCompile(`(?i)Ignis [89]`),
		regexp.MustCompile(`(?i)Ignis ([89])`),
		regexp.MustCompile(`(?i)TCL,|TCL[_ -][a-z0-9]+|(?:TCL[_ -][^;/]+ Build)|(?:TCLGalaG60(?:\(9108A\))?|4187[DMU]|5004S|5087Z|5101A|5102[BKM]|5107G|5130[JM]|5133A|5148A|5152D|5159[AJ]|5199I|6125[ADFH]|6156H|7040N|9048S|9295G|A(?:50[279]|600)DL|T(?:671[EFHO]|766[AHJU]|767H|770[BH]|773O|774H|775[BH]|780H|781|782H|790Y|799[BH]|810[HS])|Percee TV|BeyondTV\d?)(?:_(?:RU|EEA|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TCLGalaG60(?:\(9108A\))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5004S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4187D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T774H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T775B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T775H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6125[ADFH]`),
		regexp.MustCompile(`(?i)5199I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A509DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A600DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5152D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5133A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5102[BKM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5159[AJ](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5101A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5107G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5130J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4187[MU](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5148A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5130M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T780H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T782H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T790Y(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TCL[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)TCL[_ -]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(7040N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A502DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A507DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T770[HB](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T766[AHJU](?:_(?:EEA|RU))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T671[HFEO](?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T767H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T773O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5087Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T781(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T810[SH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T799[BH]`),
		regexp.MustCompile(`(?i)9048S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Percee TV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BeyondTV(\d)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:43|55)S62FS|(?:43|50)P65US|U(?:43|60|65)P60|65P4USM|(?:40|49)S62|L32S6|55P610|50P8S|55S62|(?:43|50)P6US|55DP60)`),
		regexp.MustCompile(`(?i)(K32DLX9HS|K40DLM8FS|K40DLX9FS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Build/TDTech|(?:NAT-TN70)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TEENO[_ ](S9|A1|S11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TENPLUS[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)TIANYU ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TIANYU-KTOUCH/([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(T12|T151)-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Magictab (?:9GX|7GE|718))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NuclearSX-SP5)`),
		regexp.MustCompile(`(?i)Amazing[ _](X[35]s|X[123567]|A5S|A3[025]|A[468]|A4S|A5[057]|P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](X[35])s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](A5S|X[123567]|A[468]|A4S|A5[057]|A3[025])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWZ[-_ ](?:TabPlay|Y6[08]|Y52|A49|A[59]5|A567|AA8|QQ[12])|TWZQQ1`),
		regexp.MustCompile(`(?i)TWZ[_ ]TabPlay[_ ](12[56])`),
		regexp.MustCompile(`(?i)TWZ[-_ ]?(Y6[08]|Y52|A49|A[59]5|A567|AA8|QQ[12])`),
		regexp.MustCompile(`(?i)(?:TP_1_3000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID211H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA-(?:2[_ ](?:3G|Pro)|5[05][_ ]Power|[1-4]|[1246]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TX5 MAX|TX[69]s|TX3 Mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TX([69])s`),
		regexp.MustCompile(`(?i)Tech[ _]?pad|XTAB[ _-]|(?:3G_16|Dual C1081HD|S813G|NOTE[_ ]4CAM|M5(?:Go|Plus)|M6Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TechPad[_ ](10Y|9x|i700)`),
		regexp.MustCompile(`(?i)TechPad[_ ]3Gx`),
		regexp.MustCompile(`(?i)XTAB[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)M5(Go|Plus)`),
		regexp.MustCompile(`(?i)NOTE[ _]4CAM`),
		regexp.MustCompile(`(?i)Tech ?pad[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)UP10SI[34]6LA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(UP10SI[34]6LA)`),
		regexp.MustCompile(`(?i)Teclast|P80_G3M2|TLA002|TLA016|X98 Air III|M20_4G|X98 Air II\(HG5N\)|Tbook|X80 Power\(B2N4\)|(?:T40 Plus|T30|P80[XH]|P20HD|P10[_ ]HD|M40|P10S|M30_Pro|M40SE|P80)_(?:ROW|EEA|RUS)|P20HD\(N6H5\)|T40 Plus\(M7T3\)|T40 PRO\(T1A1\)|T10\(E3C[56]\)|P10S\(N4H5\)|98\(M1E[45789]\)|98\(M3E3\)|X10 \(M1D3\)|M89 Pro|M40\(N9H3\)|M40(?:SE|Pro)_(?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)Tbook[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)T10\(E3C[56]\)`),
		regexp.MustCompile(`(?i)X10 \(M1D3\)`),
		regexp.MustCompile(`(?i)P10S(?:\(N4H5\)|_(?:ROW|EEA))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P20HD_?(?:ROW|EEA|RUS)|P20HD\(N6H5\)`),
		regexp.MustCompile(`(?i)P10[_ ]HD_(?:ROW|EEA)`),
		regexp.MustCompile(`(?i)P80[_ ](?:ROW|EEA)|P80_G3M2`),
		regexp.MustCompile(`(?i)M([43]0)_?Pro[_ ](?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)M40\(N9H3\)`),
		regexp.MustCompile(`(?i)T40 PRO\(T1A1\)`),
		regexp.MustCompile(`(?i)T40 Plus(?:_(?:ROW|EEA)|\(M7T3\))`),
		regexp.MustCompile(`(?i)(P80[Xh]|T30|M40)[_ ](?:ROW|EEA)`),
		regexp.MustCompile(`(?i)98\(M1E[45789]\)|98\(M3E3\)`),
		regexp.MustCompile(`(?i)X80 Power\(B2N4\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X98 Air III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X98 Air II\(HG5N\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Teclast[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Tecno|Phantom6|Phantom6-Plus|DP7C Pro-SGA1`),
		regexp.MustCompile(`(?i)TECNO[ _]AC8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AB7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AX8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]F4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IA5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID3k(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID5b(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID5a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]7C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P701(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DP7C Pro-SGA1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P703(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P704a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]DP10A Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]P904(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]RC6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CB7[j]?`),
		regexp.MustCompile(`(?i)Tecno[- _]C9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CF7k?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CF8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CC7S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CC9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:CC6|KC3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD6S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD8j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:CE9h|CE7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD6j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE7j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CH9n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CH6n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CH7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]Camon CX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CX Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]F3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]SA2S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1[fg](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:RA8|KB2h)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB2j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BA2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB8S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB6S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]SC7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BB2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BB4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC2c?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC3?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC1s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD2[dp]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD4j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]SA1S Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KG5[mh]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KA7O?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]LB6?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KB7j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KB8?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:KC8S?|KC2j?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:KC6S?|KC1j)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]BB4k(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD6a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD7[hS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE5[jk]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:KF6[nmjki]?|PR651[EH]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF7j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF6p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG6k?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG5n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG6p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KC1h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KC1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]K9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KA9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]DP8D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA7 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LB7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LC6a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]LB8a?`),
		regexp.MustCompile(`(?i)TECNO[ _]LC7S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LC8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]J8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]RA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]W3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]WX3P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LD7j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno (F2) ?LTE`),
		regexp.MustCompile(`(?i)TECNO[ _-]?(T611)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Tecno[ _-]?([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)Preo[ _]`),
		regexp.MustCompile(`(?i)Preo[ _]P([23])`),
		regexp.MustCompile(`(?i)Tele2[ _]`),
		regexp.MustCompile(`(?i)Tele2[ _](Mi[dn]i)[ _]1.1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _]Midi[ _]2.0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _]((?:Maxi|Midi)(?:[_ ](?:Plus|LTE))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _](Mi[dn]i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TELEFUNKEN|Foxtrot|TEL-1013GIQA|TEL-1014GIQ|TEL-73GIQA|TEL-74GIQ|TF-SP(?:500[12]|4002)|(TF-MID(?:[78]02G|70[78]G|80[46]G|9705RG|9707G|7805G|100[57]G|1010G))|(TF-LED(?:65S75T2SU|32S39T2S|32S5[289]T2S|32S7[05]T2S|40S63T2S|40S19T2S))|LTE_LIMA|LTE Mike|Outdoor (?:LTE|WT4|WT4-S)`),
		regexp.MustCompile(`(?i)TEL-(1014GIQ|74GIQ|73GIQA)`),
		regexp.MustCompile(`(?i)(?:TELEFUNKEN)?(TF-SP(?:500[12]|4002)|Outdoor (?:LTE|WT4-S|WT4)|Foxtrot)`),
		regexp.MustCompile(`(?i)(TF-MID(?:[78]02G|70[78]G|80[46]G|9705RG|9707G|7805G|100[57]G|1010G))`),
		regexp.MustCompile(`(?i)(TF-LED(?:65S75T2SU|32S39T2S|32S5[289]T2S|32S7[05]T2S|40S63T2S|40S19T2S))`),
		regexp.MustCompile(`(?i)TELEFUNKEN, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Telego[ _]Mate`),
		regexp.MustCompile(`(?i)Telenor|(?:Infinity[_ ](?:E[2-5]|K2?|A2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Telenor[ _]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Infinity[ _](E[2-5]|K2?|A2)`),
		regexp.MustCompile(`(?i)Telit_Mobile_Terminals-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Telit[\-_]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Hudl (?:[^/;]+)(?: Build|[;)])|W032i-C3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hudl ([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)W032i-C3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASEBOOK_3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ThL[ _-]|(?:Knight 2|THL5000|T200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)THL ?(5000)`),
		regexp.MustCompile(`(?i)(T200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ThL[ _-]*([^;/]+) Build`),
		regexp.MustCompile(`(?i)ThL[ _-]*([^ ;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Primo(7|8)|QM73[45]-8G|QM734-2|QM736-8G\(HD\)|8950|MID1002|5014G|TEO7RK|TEO104G|Friendly_TH101|Delight TH201)(?:[);/ ]|$)|(?:Tlink|Every)[0-9]+|THOMSON,`),
		regexp.MustCompile(`(?i)Primo(7|8)`),
		regexp.MustCompile(`(?i)QM736-8G\(HD\)`),
		regexp.MustCompile(`(?i)8950(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TEO(7RK|104G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5014G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tlink([0-9]+)`),
		regexp.MustCompile(`(?i)Every([0-9]+)`),
		regexp.MustCompile(`(?i)((?:49|55)UC6306|55UC63|32HD55|40FD54|55UD63)`),
		regexp.MustCompile(`(?i)Thuraya[ _](X5-Touch)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TiPhone ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TIVO[ ,]`),
		regexp.MustCompile(`(?i)TIS001[_-]`),
		regexp.MustCompile(`(?i)TIS001[_-]S([34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIS001[_-]T2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TC1050G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tmovi[ _]|(?:Infinit[ _](?:Lite[_ ]2|X[_ ]CAM)|Infinit MX(?: Pro)?|Vision_PRO|VISION ULTRA|Epix|Yeah_Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tmovi[ _]Prime`),
		regexp.MustCompile(`(?i)Infinit[_ ]X[_ ]CAM`),
		regexp.MustCompile(`(?i)Infinit[_ ]Lite([_ ]2)?`),
		regexp.MustCompile(`(?i)Tinai (K[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TiNMO[- _](A11|K3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tolino Tab ([^/;]+) Build`),
		regexp.MustCompile(`(?i)TONE[ _](e19|m15|e2[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOKY (A19|W1|T8[368]|T1982)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOKY A9PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Coto[_ ]|X1013`),
		regexp.MustCompile(`(?i)Toplux ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TOREX[- ](?:PS12|S18|S27)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOREX-(PS12)`),
		regexp.MustCompile(`(?i)TOREX[- ](S18|S27)`),
		regexp.MustCompile(`(?i)Toshiba|TSBNetTV/|portalmmm/[12].0 TS|(?:T-01C|T-0[12]D|IS04|IS11T|AT1S0|AT300SE|AT(?:7-C|10-A|10[PL]E-A|100|200|270|300|330|374|400|470|500a?|503|570|703|830)|AFTKMST12|AFTBAMR311)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AT(100|200|270|300|330|374|400|470|500|503|570|703|830)`),
		regexp.MustCompile(`(?i)AT10([PL])E-A`),
		regexp.MustCompile(`(?i)TOSHIBA, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Toshiba[ /_\-]?([a-z0-9_ \-]+) Build`),
		regexp.MustCompile(`(?i)Toshiba[ /_\-]?([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12].0 (TS[a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)TOUCHMATE|(TM-(?:MID1050WKD|MID1020A|MID794C|MID795|MID710|MID798|MID792|MID788D|SM500N|SM410|MID1010))`),
		regexp.MustCompile(`(?i)(TM-(?:MID1020A|MID794C|MID795|MID710|MID798|MID792|MID788D|MID1010))`),
		regexp.MustCompile(`(?i)(TM-(?:SM500N|SM410))`),
		regexp.MustCompile(`(?i)Touchmate ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Transpeed[_ ]|(?:TR99 MINI\+|TR99)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TR99 MINI\+`),
		regexp.MustCompile(`(?i)(?:Transpeed[_ ])?(TR99|H616|6K|X4S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TrekStor|Surftab) ([^/;]+)(?: Build|\))|Surftab[^;\)]*(?:[;\)]|$)|ST10216-2A|ST13416-1|VT10416-[12]|TFMTKAW01232|PEAQ PET 100|Xintroni10.1`),
		regexp.MustCompile(`(?i)ST10216-2A|VT10416-[12]`),
		regexp.MustCompile(`(?i)TrekStor ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Surftab ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Surftab[ _]([^;\)]*)(?:[;\)]|$)`),
		regexp.MustCompile(`(?i)Xintroni10.1`),
		regexp.MustCompile(`(?i)(PEAQ PET 100)`),
		regexp.MustCompile(`(?i)Trevi[ _]|TAB[ _]10[ _]3G[ _]V16|TAB[ _](7|8)[ _]3G[ _]V8|TAB9 3G|MINITAB 3GV|Phablet[ _](?:4|4\.5|5|5\,3|6)[ _]?[CSQ]|REVERSE[ _]5\.5[ _]?Q`),
		regexp.MustCompile(`(?i)TAB[ _]?(7|8)[ _]3G[ _]V8`),
		regexp.MustCompile(`(?i)TAB[ _]?9[ _]3G[ _]V8`),
		regexp.MustCompile(`(?i)TAB[ _]?9[ _]3G`),
		regexp.MustCompile(`(?i)TAB[ _]10[ _]3G[ _]V16`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4[ _]?C`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4[ _]?S`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4.5[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]5[ _]?S`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]5,3[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?REVERSE[ _]5.5[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]6[ _]?S`),
		regexp.MustCompile(`(?i)Trevi[_]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(A23 Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Passion[-_](?:1S|PRO|PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Trio V51 DT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Orion R68G|Draco AW80|Draco H3|Vega S95_(?:Meta|Pro|Telos))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) TRUE BEYOND TAB 3G|SMART[ _](MAX 4.0 PLUS|4G[ _](?:GEN C [45].[05]|M1 Plus|Champion|Speedy 5.0 Plus|Speedy[_ ]5inch|P1))`),
		regexp.MustCompile(`(?i)SMART MAX 4.0 PLUS`),
		regexp.MustCompile(`(?i)SMART 4G Gen C ([45].[05])`),
		regexp.MustCompile(`(?i)SMART 4G Speedy 5.0 Plus`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]Speedy[_ ]5inch`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]Champion`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]P1 Prime`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]P1`),
		regexp.MustCompile(`(?i)SMART[ _]4G M1 Plus`),
		regexp.MustCompile(`(?i)(SSB-508[ED])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TL554B|TC504B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail TT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[_ ]?(?:X5[_ ]?(?:Max|Black|Space|Hero)|X8|X6[ _]Z|X[ _]Ray)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX5Space(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX5Hero(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX[ _]Ray(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]?X5[ _]?Black(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X5[ _]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X6[ _]Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo-X|(?:Hive V 3G|Turbox_S3|Fire_II_WiFi)(?:[);/ ]|$)|Mercury`),
		regexp.MustCompile(`(?i)Turbo-X_A2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo-X_e3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mercury`),
		regexp.MustCompile(`(?i)Turbo-X Ice(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hive V 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fire_II_WiFi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TURBO-X, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Turbo-X Tablet([^;/]+) Build`),
		regexp.MustCompile(`(?i)Turbo-X ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Turbokids[-_ ]?(TMNT|3G|S4|Princess)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbopad[-_ ]?(72[34]|80[23]|912|101[456]|Pro)(?:NEW)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TURKCELL[_ ]`),
		regexp.MustCompile(`(?i)Turbo T50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T([124-8])0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxi Plus 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MaxiPRO5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turkcell_T_Tablet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TWOE[-_ ]E450R|F534L|F572L|E500A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWOE[-_ ](E450R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F534L|F572L|E500A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tymes[ _](V5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TT175(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Liantong)?(?:VP00[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP001`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP002`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP003`),
		regexp.MustCompile(`(?i)(USCC-[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)UMI(?:DIGI)?[ _]|(?:A[5]_Pro|.+; A[79] Pro|S3_Pro|ROME[_ ]X|BISON|hammer_S|S2 LITE|London|Z2_PRO|C NOTE 2|A11 Pro Max|Power 3|Android 10.+ (?:A3[SX]|A7S)|RP01|MT01|MP0[12])(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MT01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(A[3579]|Z2|S3)[_ ]Pro`),
		regexp.MustCompile(`(?i)MP01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)ROME[_ ]X`),
		regexp.MustCompile(`(?i)RP01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)UMI[_ ]SUPER`),
		regexp.MustCompile(`(?i)MP02(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i) (A3[SX]|A7S)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(?:UMI_)?(London|Diamond(?:_X)?)`),
		regexp.MustCompile(`(?i)UMI(?:DIGI)?[ _]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)UNIWA[ _](X5|F40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNNO[_ ]`),
		regexp.MustCompile(`(?i)UNNO[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)UTOK (45[01]D)`),
		regexp.MustCompile(`(?i)utstar[ _-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)UTIME[ _](U6|G7|U100|[TX]1|FX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uzbekistan(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGOOS-(AM[36])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A101S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uhappy|UP?580|UP350|UP[35679]20`),
		regexp.MustCompile(`(?i)UP([35679]20)`),
		regexp.MustCompile(`(?i)Uhappy[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Uhappy[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone|Gemini Pro|Power 3S|Power_[356]|Power_5S|S(?:10|9)_Pro|(?:Note [89]P|Armor(?:[ _](?:[2367]|2S|X[236]|6[SE]|3WT|3W|X))?|U00[78][ _]Pro|Be[ _]X|Be[ _]Touch(?:[ _][23])?|Be[ _](?:One|Pure)(?:[ _]Lite)?|Note (?:11P|7T)|Paris_X|P6000_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S(10|9)_Pro`),
		regexp.MustCompile(`(?i)Be[ _]Touch([ _][23])?`),
		regexp.MustCompile(`(?i)Be[ _]Pure[ _]Lite`),
		regexp.MustCompile(`(?i)Be[ _]Pure`),
		regexp.MustCompile(`(?i)Be[ _]One[ _]Lite`),
		regexp.MustCompile(`(?i)Be[ _]One`),
		regexp.MustCompile(`(?i)Be[ _]X`),
		regexp.MustCompile(`(?i)U(00[78]) Pro`),
		regexp.MustCompile(`(?i)Power Armor (\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]6S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([679])E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([25])S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]3W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]3WT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _](1\d|11T) 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _](8) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([236789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gemini Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power[_ ]([356][SL]?)`),
		regexp.MustCompile(`(?i)Note 8P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Note 7T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Note (9|11)P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone[_ ]Tab[_ ]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Ulefone[_ ](X|S1[ _]Pro|S[17])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Ulefone[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)VisionBook[ _]|([78]Qa_3G|VB_10Q_Plus|10A_LTE_eea)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VisionBook[ _](?:10Qi|7Q[i]?|8Q[ei]?|P70|8Qi_3G)(?:[ _](?:[34]G|Plus|LTE))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([78])Qa_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_10Q_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_10Q_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10A_LTE_eea(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VB_10Q_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_P50Plus_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VisionBook[ _](?:P50 LTE|P55 X2 LTE|P55 LTE(?: Pro)?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Titan(_pocket)?|Jelly-Pro|Jelly2(?:_JP)?|Atom_X?L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Jelly)-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jelly2(?:_JP)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Titan|Atom_X?L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U((?:67[013]|680)C|(?:452|504)TL|683CL|693CL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uniscope[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Uniscope[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)Plasma Mobile|WebTV/(\d+\.\d+)|(?:M10 Ultra|FO-R15|TVBOX|Smart[ _]?TV|SmartATV|M8S\+ 4K|PCBox|rk3368-box|H10 PLAY|Smart AIO TV|TVBOX_L|L-BOX|TVBOX-5G|mips.+(?:Opera TV|wireless|wired)|smartbox|TV BOX|I12Pro Max|(?:audi_)?ks1280x480)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WebTV/(\d+\.\d+)`),
		regexp.MustCompile(`(?i)M10 Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FO-R15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Smart[ _]?TV|SmartATV|PCBox|rk3368-box|TVBOX|Smart AIO TV|TVBOX_L|L-BOX|TVBOX-5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S\+ 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H10 PLAY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Opera TV|wireless|wired|smartbox|TV BOX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I12Pro Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:audi_)?ks1280x480`),
		regexp.MustCompile(`(?i)Unnecto|(?:U513|U5151|U61[1356]|U7[12]0|U-830|U90[35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Unonu[ _-]|(?:U4001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U4001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Unonu[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Unonu[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DT[45]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DT[45]0)`),
		regexp.MustCompile(`(?i)(?:VPA051|VA-10J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VA-10J)`),
		regexp.MustCompile(`(?i)VAVA[ _](X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Camellia_II|Cactus II|Maple III|Maple-II|Cactus-Pro|LavenderII|Jasmine-II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Camellia_II|Cactus II|Maple III)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Maple|Jasmine|Lavender)-?II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VDVD[_ ](P20|IX21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEON[_ ](C8680)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VGOTEL|(?:Venture V(?:[278]|12)|VentureV10|Ocean[_ ][689]|Ocean9L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venture ?V([278]|1[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ocean[_ ]?([689]|9L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LIGHT MINI|VIWA A5\+|LIGHT PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIWA A5\+`),
		regexp.MustCompile(`(?i)VK-VK([79]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:VK700)-MAX|VK700 Pro|T5SE|VK700X|vk6050|vk6735|vk700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VK700)-MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VK700) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T5SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VK(700X|6050|6735|700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOGA[ _]`),
		regexp.MustCompile(`(?i)ZYVV1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vankyo[_ ]|QTAB1010X`),
		regexp.MustCompile(`(?i)Vankyo[_ ]S(10|[78])`),
		regexp.MustCompile(`(?i)QTAB(1010X)`),
		regexp.MustCompile(`(?i)Vargo[; _]|(?:V210101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V210101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M910A|M783K|M783K-16G|M1072R-3G|KingPad_(?:K10|SA10)(?:Pro)?)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KingPad_(K10|SA10)(Pro)?`),
		regexp.MustCompile(`(?i)(M910A|M783K|M783K-16G|M1072R-3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vega (Q7128)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CX-508|CX-551|Reiv 500|Creon F5|Isprit U50|Isprit-U50-LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Isprit U50|Isprit-U50-LTE`),
		regexp.MustCompile(`(?i)(CX-508|CX-551|Reiv 500|Creon F5)`),
		regexp.MustCompile(`(?i)VCT([a-z0-9_-]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCT9B06Q22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCT([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(RP-UDM0[12]A|RP-UDP05A|JO-UQM10A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QTA(SUN[12]|XIA1|QZ3|QZ3KID|IR7)|QMV7[AB]`),
		regexp.MustCompile(`(?i)QTAXIA1|QTAIR7`),
		regexp.MustCompile(`(?i)QMV7[AB]`),
		regexp.MustCompile(`(?i)Vernee|(?:Mars Pro|Apollo[ _](?:Lite|X)|Thor (?:E|Plus)|X2_euro|M7_EEA|T3 Pro|V2 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Apollo[ _]Lite`),
		regexp.MustCompile(`(?i)Apollo[ _]X`),
		regexp.MustCompile(`(?i)(V2|T3) Pro`),
		regexp.MustCompile(`(?i)Vernee[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Vernee[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)MotionE11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Luck|Luck_L1[02]0_[34]G|Lion_Dual|V709X|TAB X8|TAB X10|Tab [43]G (?:7-2|8-1|10-1)|Pro_P3[01]0_4G|Lion_DC|Baccara|Eagle[ _]4G|ImpressMAX)(?:[);/ ]|$)|Impress[ _]([^;/]+)(?:Build|\))`),
		regexp.MustCompile(`(?i)(Lion_Dual|Lion_DC|Baccara|Eagle[ _]4G|Luck_L1[02]0_[34]G|Luck)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Impress ?MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMPRESS ECLIPSE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro_P(3[01]0)_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Impress_Luck[_ ]?4G_NFC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Impress[ _][a-z]+)([34])G(?:Build|\))`),
		regexp.MustCompile(`(?i)(Impress[ _](?:[^;/]+))(?:Build|\))`),
		regexp.MustCompile(`(?i)(V709X)`),
		regexp.MustCompile(`(?i)TAB X(8|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab ([43])G ([78]|10)-([21])`),
		regexp.MustCompile(`(?i)Vertu[ ]?([a-z0-9]+)|(?:ASTER P|CONSTELLATION X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASTER P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CONSTELLATION X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vertu[ ]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5009`),
		regexp.MustCompile(`(?i)verykool[ _]?S5001`),
		regexp.MustCompile(`(?i)verykool[ _]?S5004`),
		regexp.MustCompile(`(?i)verykool[ _]?S5007`),
		regexp.MustCompile(`(?i)verykool[ _]?s5015`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5011`),
		regexp.MustCompile(`(?i)verykool[ _]?s5019`),
		regexp.MustCompile(`(?i)verykool[ _]?S5005`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5560`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5200`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5050`),
		regexp.MustCompile(`(?i)verykool[ _]?S5030`),
		regexp.MustCompile(`(?i)verykool[ _]?s5527`),
		regexp.MustCompile(`(?i)verykool[ _]?s5526`),
		regexp.MustCompile(`(?i)verykool[ _]?S5530`),
		regexp.MustCompile(`(?i)verykool[ _]?S5525`),
		regexp.MustCompile(`(?i)verykool[ _]?S5524`),
		regexp.MustCompile(`(?i)verykool[ _]?s5516`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5550`),
		regexp.MustCompile(`(?i)verykool[ _]?s5035`),
		regexp.MustCompile(`(?i)verykool[ _]?s5034`),
		regexp.MustCompile(`(?i)verykool[ _]?s5037`),
		regexp.MustCompile(`(?i)verykool[ _]?s5036`),
		regexp.MustCompile(`(?i)verykool[ _]?s6005x`),
		regexp.MustCompile(`(?i)verykool[ _]?SL6010`),
		regexp.MustCompile(`(?i)verykool[ _]?S4006[QT]?`),
		regexp.MustCompile(`(?i)verykool[ _]?S4007`),
		regexp.MustCompile(`(?i)verykool[ _]?S4008`),
		regexp.MustCompile(`(?i)verykool[ _]?s5017|Dorado s5017`),
		regexp.MustCompile(`(?i)verykool[ _]?s4510`),
		regexp.MustCompile(`(?i)verykool[ _]?s5204`),
		regexp.MustCompile(`(?i)verykool[ _]?s5205`),
		regexp.MustCompile(`(?i)verykool[ _]?s5528Jr`),
		regexp.MustCompile(`(?i)verykool[ _]?s5528`),
		regexp.MustCompile(`(?i)verykool[ _]?s5702`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5029`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5565`),
		regexp.MustCompile(`(?i)verykool[ _]?TL8010`),
		regexp.MustCompile(`(?i)verykool[ _]?T7440`),
		regexp.MustCompile(`(?i)verykool[ _]?T7445`),
		regexp.MustCompile(`(?i)verykool[ _]?([^/;)]+)(?:[ _]SL?[0-9]{4}[QT]?)(?: Build|[);])`),
		regexp.MustCompile(`(?i)verykool[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VESTA_SMART|VESTA32LD86(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vestel[ _]|Venus[ _](GO|E[2-5]|V[1-9]|Z[1-9]0)|V_?TAB|VP74|VT97PRO|VSP145M|VSP250[GS]|VSP355[GS]|V3_5580_Dual|V TAB Z1`),
		regexp.MustCompile(`(?i)V_TAB_([0-9]{4}[A-Z]?)`),
		regexp.MustCompile(`(?i)V[_ ]TAB[_ ](Z1)`),
		regexp.MustCompile(`(?i)Venus[ _]V([1-9])([ _][0-9]{4})?`),
		regexp.MustCompile(`(?i)Venus[ _]Z([1-9]0)`),
		regexp.MustCompile(`(?i)Venus[ _]GO`),
		regexp.MustCompile(`(?i)Venus[ _]E2 Plus`),
		regexp.MustCompile(`(?i)Venus[ _]E([345])`),
		regexp.MustCompile(`(?i)Vestel[ _](5000|5530)`),
		regexp.MustCompile(`(?i)(Zippers Tab 10i 3G)`),
		regexp.MustCompile(`(?i)Videocon[_ \-]|(?:VT75C|V406018|V512930|V50(?:2430|3630|4730|5024|5430|4630|5[98]20)|Z45_(?:Dazzle|Amaze)|Z45Q Star|Z50 Nova)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Videocon[_ \-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)VT75C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V502430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505024(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V503630(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V504730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V406018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V512930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V505430|V504630)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z45_(Dazzle|Amaze)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z45Q Star(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z50 Nova(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ViewSonic|ViewPad|ViewPhone|(?:IFP(?:98|86|[67]5)50-3|VSD[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?V500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ViewSonic A8\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?ViewPhone ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?ViewPad ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(VSD[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IFP(98|86|[67]5)50-3`),
		regexp.MustCompile(`(?i)Vinabox[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VMP-(015-162|021-82|041-162|011-81|025-324|045-664)(?:[);/ ]|$)|VMP023\.`),
		regexp.MustCompile(`(?i)VMP023\.`),
		regexp.MustCompile(`(?i)(XA Pro) Build`),
		regexp.MustCompile(`(?i)VMP0617(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO PRO2X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO PRO[ _-]?([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V608C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V608C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vision ?Touch`),
		regexp.MustCompile(`(?i)Vitelcom|portalmmm/[12].0 TSM`),
		regexp.MustCompile(`(?i)TSM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TSM([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12].0 (TSM[a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(?:SMART[_ ]EV[56]|EV7_Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EV7)_Pro`),
		regexp.MustCompile(`(?i)SMART[_ ](EV[56])`),
		regexp.MustCompile(`(?i)VIVAX|(?:Fly5[_ ]Lite|Fun[_ ]S500|Point[_ ](?:X[12]|X501|X450)|PRO3|32LE77SM|40LE77SM|FUN S1|FUN_S20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly5[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Point_X([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fun[_ ]S500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUN[ _]S(1|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[ _]Fly ?(\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[ _]Fly[ _]V(1|550)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIVAX )?(Point[ _](?:X551|X501|X450))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART Point X5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[_ ]PRO3`),
		regexp.MustCompile(`(?i)VIVAX (?:TABLET )?TPC[-_ ](\d+) ([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(32LE77SM|40LE77SM)`),
		regexp.MustCompile(`(?i)((?:VIV-|BBG-)?vivo)|(?:V1730(D[AT]|GA)|V18(01A0|13B[AT])|1819|V1937|I(?:192[78]|201[28])|V(?:2006|202[2-9]|203[0-35-9]|204[0-3568]|205[02-5789]|206[015689]|2070|210[12459]|211[01]|212[049])|V(?:2026|2031|2036|2043)_21|V1936AL|V(?:1732|1809|181[3468]|182[149]|183[1268]|1901|191[13469]|192[1-48]|193[0246]|194[15]|195[05]|196[235]|198[16]|1990|200[125]|201[12]|202[03-5]|203[146]|204[6789]|205[45679]|2066B|206[1568]|207[23]|208[05]|2099|2106|211[18]|212[13]|213[346]|214[1358]|2162)A|V1824BA|V(?:1731|1818|2020)CA|V(?:1818|1938)CT|V(?:1730|2031)EA|V(?:1732|1809|181[3468]|182[19]|183[1268]|1901|1913|1938)T|V2029_PK|V2069A|V217[12]A|I2011|X50 Pro\+|V211[45]A?|V204[57]A?|V210[28]A?|I2009|V215[4678]A|V213[01]A?|V2023EA|V1962BA|V2142|V1930|V216[345]A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1824[B]?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1955A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2171A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2172A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I192[78](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2165A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2049A|I2009)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1922A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1916A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1914A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1981A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1936A[L]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2055A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2118A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1986A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2012A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2073A|I2011)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2023A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2065A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2061A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2143A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2106A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2024A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2025A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2136A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2141A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2025)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2066|V2108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2061(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2055(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2040(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo 1921(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo 1916(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1805(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1912|V1923A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1924A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1950A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1821[AT]|vivo 1813)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo ONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1831[AT]`),
		regexp.MustCompile(`(?i)V1832[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2121A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1932[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1962A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2162A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2020C?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031EA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2080A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2072A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2048A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1941A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1928A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1804(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1806(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1819(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1818(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 19(?:10|09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1907(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 19(?:20(?:_20)?|19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1933(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2022(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]1601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1611(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (1713|1612)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1716|1850)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1723(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1727(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo V3Max(?: [AL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X9s Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X9s(?: [AL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X5Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X20Plus UD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1721(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X20Plus(?: a)?|vivo 1720)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X21i(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X21UD(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1725|X21A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1814[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1809[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1816[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V18(38|29)[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1836[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1938CT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1938T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2001A|vivo 2004)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1937|V1937)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2005A|vivo 2006)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2011A|X50 Pro\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V20(?:46|59)A|V2045)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2085A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2047A|V2046)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2056A|V2047)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2134A|V2105)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2145A|V2114)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2133A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2104(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X([0-9])Plus(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1929|2015)(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1902(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1906(?:_20)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 19(?:04|40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2102(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1901(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1915(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V202[79](?:_PK)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1613(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2043_21|V2048)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V205[24]|V2070|V2101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2037(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2129(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2065(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2038(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2043(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(?:2041|2060)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2023(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1901[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1930A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1938|V203[46]A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2099A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2066[B]?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2036(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2068A?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2057(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1934A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1965A|vivo 1935)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(?:2024|203[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2054A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2057A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2053(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1606(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1606a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2058|V2111A|V2123A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1719(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1714|Y69A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2002A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1724|Y71A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1801i?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1731CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2059(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2124(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1913[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 180([38]|8i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1812(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1732[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:Y83A?|1802)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1726(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1730EA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1823|1908)(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 181[17](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1820(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1945A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2026|V2033|V2042)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V20[63]9|V2026_21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 18(16|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1818[AT]|vivo 181[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1818C[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1807(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1813[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1801A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1918|1951)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1730D[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1917(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1813B[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo Z3x|V1730GA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1921A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1911A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1990A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1963A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2142(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y75s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X710L?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X6SPlus(?: [AD])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X6S(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X([5679]|20)[ALD]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X5Pro(?: L)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y66i(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y(\d{2})[AL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay(\d)S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay(\d)[AL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Vizio|(?:VAP430|VTAB1008|XR6[PM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VTAB1008|XR6[PM]10)`),
		regexp.MustCompile(`(?i)(?:Vodacom)[ _]|(?:Kicka 5 Plus 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Vodacom)[ _](Power Tab 10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _-]|Smart ?Tab ?(?:III? ?)?(?:|4G|7|10)[);/ -]|VodafoneSmartChat|Smart Ultra 6|(?:VFD[ _][0-9]+|VFD320|VF6[89]5|VF-(696|1397|795|895N|1497))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD 50[02]`),
		regexp.MustCompile(`(?i)VFD 51[013]`),
		regexp.MustCompile(`(?i)VFD 52[78]`),
		regexp.MustCompile(`(?i)Vodafone[ _]875(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]975N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]785(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD 525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]890N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]985N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart ?Tab ?3G`),
		regexp.MustCompile(`(?i)Smart ?Tab ?4G`),
		regexp.MustCompile(`(?i)Smart ?Tab ?4`),
		regexp.MustCompile(`(?i)SmartTab7[);/ -]`),
		regexp.MustCompile(`(?i)SmartTab10[);/ -]`),
		regexp.MustCompile(`(?i)Smart ?Tab ?II ?7`),
		regexp.MustCompile(`(?i)Smart ?Tab ?II ?10`),
		regexp.MustCompile(`(?i)Smart ?Tab ?III ?7`),
		regexp.MustCompile(`(?i)Smart ?Tab ?III ?10`),
		regexp.MustCompile(`(?i)Vodafone TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD[ _]([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Vodafone[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Vonino|Epic (?:E8|P7)|Gyga[ _](?:X|S|QS|XS)|Jax[ _](?:QS|[SXQN]|Mini)|Magnet[ _](?:M[19]|G[35]0)|Navo_QS|Onyx_(QS|Z)|Orin_QS|Pluri[ _](?:[BCMQ]7|[CQM]8)|Sirius_QS|Volt[ _][XS]|Xavy_(T7|L8)|Xylo[ _][XSPQT]|Zun[ _]X[OS]?|JAX_N|Druid_L10|iMart_Pro`),
		regexp.MustCompile(`(?i)Zun[ _]XO`),
		regexp.MustCompile(`(?i)Zun[ _]XS`),
		regexp.MustCompile(`(?i)Zun[ _]X`),
		regexp.MustCompile(`(?i)Xylo[ _]([PSXQT])`),
		regexp.MustCompile(`(?i)Volt[ _]S_A7`),
		regexp.MustCompile(`(?i)Volt[ _]S`),
		regexp.MustCompile(`(?i)Volt[ _]X`),
		regexp.MustCompile(`(?i)Gyga[ _]QS`),
		regexp.MustCompile(`(?i)Gyga[ _]XS`),
		regexp.MustCompile(`(?i)Gyga[ _](S|X)`),
		regexp.MustCompile(`(?i)Jax[ _]QS`),
		regexp.MustCompile(`(?i)Jax[ _]S_A7`),
		regexp.MustCompile(`(?i)Jax[ _]([SQXN])`),
		regexp.MustCompile(`(?i)Jax[ _]Mini`),
		regexp.MustCompile(`(?i)Epic (E8|P7)`),
		regexp.MustCompile(`(?i)Pluri[ _](B|C|M|Q)7`),
		regexp.MustCompile(`(?i)Pluri[ _]([CQM])8`),
		regexp.MustCompile(`(?i)Druid[_ ](L10)`),
		regexp.MustCompile(`(?i)Magnet[ _](M[19]|G[35]0)`),
		regexp.MustCompile(`(?i)Onyx_(QS|Z)`),
		regexp.MustCompile(`(?i)(HK1 (?:Max|MINI|PLUS|PRO)|VONTAR[ -](?:Z[58]|V1|KIII|MX-4K|X3))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VONTAR[ -](Z[58]|V1|KIII|MX-4K|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SXPro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VORKE (Z[157]|Z6(?: Plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOTO[ _\-]|VT8[89]8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOTO[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)VOTO[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(VT8[89]8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Voxtel_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:VOYO[_ ](?:A15)|i8-Max|Q101-4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i8-Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Q101)-4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOYO[_ ](A15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Joy [123]\+|Joy [34]|Active 1\+|Bee 3|Active 3|V341U|Bee Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy ([123])\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy ([34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active 1\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bee 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V341U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bee Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VSUN (?:ILLUSION|RACE|V9)|MARS TOUCH|MARS NOTE|MARS NOCAM|SATURN SELFIE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILLUSION(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MARS TOUCH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MARS NOTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MARS NOCAM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SATURN SELFIE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RACE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VP5004A|HT0704W08|VS5513|VS4011|VR6031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VP5004A|VR6031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS5513(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS4011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WE (A[15]0|B3|F[12]0|E[12]|L[3469]|R[34]|V[34]|S1|X[13]|T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WIWA DREAM PLAYER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Walton|Walpad|RX7 Mini|Primo[ _](C[1234]?|D[1-689]|E[1-589]|F8s|S7|EF[23]?|EM|F[1-79]i?|G[1-9]|GF[234]?|GH[23]?|GM|H[2-689M]|H7s|N[F1]?|NX2?|R[1-468]|R[HM]2?|RX[23]?|S[1-6]|V1|X[1-4]|Z|ZX)`),
		regexp.MustCompile(`(?i)Walpad[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Primo H8 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo (RM2|ZX2|NX4) mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo H8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RX7 Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Walton[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)WELLCOM[ _\-/]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Westerndigital|WDSimpleBrowser`),
		regexp.MustCompile(`(?i)WESTPOINT[;,]`),
		regexp.MustCompile(`(?i)(TETS-4919SM)`),
		regexp.MustCompile(`(?i)Wexler|(?:ULTIMA 7 TWIST PLUS|TAB10iQ3G|TAB[ _]10Q)(?:[);/ ]|$)|ZEN[ _](?:4\.[57]|5)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?ZEN[ _]4\.5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?ZEN[ _]4\.7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?ZEN[ _]5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZEN[ _]5\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?TAB[ _]10Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB10iQ3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wexler[ _\-\.]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Wexler[ _\-\.]([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)(ULTIMA 7 TWIST PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wieppo (S6 Lite|S[658]|E1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wigor (V4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WIKO[_ -])|(?:WIKO-)?CINK_[a-z0-9_]+|(?:WIKO-)?HIGHWAY_[a-z0-9_]+|(?:WIKO-)?(?:Cink([^/;]*)|Highway([^/;]*)|Iggy|Stairway|Rainbow ?(Jam|Lite|Up)?|Darkside|Darkmoon|Darkfull|Darknight|Freddy|FEVER|Jerry[2]?|Sublim|Ozzy|JIMMY|Barry|Birdy|Bloom|Getaway|Goa[^nalplus]|Kite|Robby|Lenny[2-9]?|Slide|Sunset[2-9]?|Sunny[2-9]?|Tommy[2-9]?|PULP(?: Fab)?|Wax|HARRY|Ridge[^\splus](?: Fab)?|U FEEL(?: Prime| Lite)?|U PULSE(?: LITE)?|View2 (?:Go|Plus)|View XL|View Prime)(?: Plus)?(?: 4G)?(?: Build|$)?|W_(?:C8[06]0|K[346]00|P130|P200|C200SN)|WC300|W-(?:V7[23]0|V745|V755|V8[035]0|P[36]11|K130|K211|K3[68]0|K420|K510S?|K560|K610|K630)-(?:BYT|EEA|FRA|OPE|SUN|SWI|TIM|TMV|TVM|DU|T[HV]|ID)|WIM Lite|W-V851|W-V6[08]0|W-V750BN|W-K200|W-U300|U307AS|CINK PEAX 2|HIGHWAY PURE|C210AE|v3913|U614AS|V3991AN`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V745`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V750`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V755-EEA`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Cink Peax 2`),
		regexp.MustCompile(`(?i)(?:Wiko-)?Cink([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?CINK_([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY PURE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY STAR`),
		regexp.MustCompile(`(?i)(?:Wiko-)?Highway([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY_([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Iggy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?FEVER`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Stairway`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge Fab 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Rainbow ([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Rainbow`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkside`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkmoon`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkfull`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darknight`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sublim`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ozzy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Barry`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Birdy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Bloom`),
		regexp.MustCompile(`(?i)(?:WIKO-)?JIMMY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Jerry2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Jerry`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Getaway`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Goa`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Freddy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Kite`),
		regexp.MustCompile(`(?i)C210AE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U307AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U316AT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)v3913(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?3 Max`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?4 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?([2-9])`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Slide`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunset2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunset`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny3`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny`),
		regexp.MustCompile(`(?i)(?:W_K600|Tommy3|W_C200SN)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Wax`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HARRY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?WIM Lite`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp Fab 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp Fab`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Robby(2)?`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U PULSE LITE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U PULSE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL LITE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL PRIME`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View2 Go`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View XL`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View Prime`),
		regexp.MustCompile(`(?i)W-V800-(TVM|TIM|EEA|OPE|DU)`),
		regexp.MustCompile(`(?i)W-K130-(?:OPE|EEA)`),
		regexp.MustCompile(`(?i)W-K510-(?:TVM|EEA|OPE|SUN|BYT|TH)|W-K510S-SWI`),
		regexp.MustCompile(`(?i)W-K560-(?:EEA|TVM)`),
		regexp.MustCompile(`(?i)W-V720-(?:EEA|OPE|SUN)`),
		regexp.MustCompile(`(?i)W-P311-(?:EEA|OPE|TVM)`),
		regexp.MustCompile(`(?i)W-P611-(?:EEA|OPE)`),
		regexp.MustCompile(`(?i)W-V830-(?:EEA|OPE|ID)`),
		regexp.MustCompile(`(?i)W-V730-(?:EEA|TVM)`),
		regexp.MustCompile(`(?i)W-U300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U520AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U614AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wiko ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Wileyfox|(?:Swift 2|crackling)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wileyfox Spark \+`),
		regexp.MustCompile(`(?i)Wileyfox; Pro`),
		regexp.MustCompile(`(?i)Wileyfox (Spark|Swift)`),
		regexp.MustCompile(`(?i)Wileyfox ([^/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Swift 2 (X|Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Swift 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOTE GRACE V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wink[_ ]`),
		regexp.MustCompile(`(?i)Wink[_ ]((?:Glory|World|Share|City)(?:[_ ](?:SE|S))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wink[ _](Primo|Highway)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winmax[ _](?:XC14|XC[46]|TX30)(?:[);/ ]|$)|MAUI.+Winmax_BD45`),
		regexp.MustCompile(`(?i)Winmax[ _](XC14|XC[46])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winmax[ _](TX30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAUI.+Winmax_(BD45)`),
		regexp.MustCompile(`(?i)Winnovo[ _]|(?:T10LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T10LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winnovo[ _](M866|M798|VTab|750[PK])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winnovo[ _](K5[46]|K43)[a-z]{2}`),
		regexp.MustCompile(`(?i)WISENET5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)miSmart|miTab|WIAM \#24|WOLDER`),
		regexp.MustCompile(`(?i)WIAM \#24`),
		regexp.MustCompile(`(?i)miSmart[ \-_]?([^/]+) Build`),
		regexp.MustCompile(`(?i)miTab[ \-_]?([^/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)AT[ _-]AS([0-9A-Z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:W55SE|WS067)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wonu ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TERRA[ _]PAD[ _](\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]|Nimbus 101Q`),
		regexp.MustCompile(`(?i)Nimbus ?(101Q|115|1100RX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WOXTER[ _]I-101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]([SQ]X) ?([0-9A-Z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[_ ](?:Zielo[ _])?(Q27|Z800|Z420)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)X[-]?BO (V[78]|V1[01]|V[89]\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[-_]TIGI|Hope7[_ ](?:Mate|Max)|JOY10 Mate|Photo_P15_Lite|SHARP_2`),
		regexp.MustCompile(`(?i)Hope7[_ ](Mate|Max)`),
		regexp.MustCompile(`(?i)X-TIGI[_ ]V28[_ ]LTE`),
		regexp.MustCompile(`(?i)X[-_]TIGI[_ ]V19`),
		regexp.MustCompile(`(?i)X-TIGI[_ ]Photo[_ ]P11`),
		regexp.MustCompile(`(?i)X[-_]TIGI[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)X-View|ZEN_U5\+|AMBER_KIDS|Proton_Amber_HD|PROTON_JADE_2_PRO`),
		regexp.MustCompile(`(?i)ZEN_U5\+`),
		regexp.MustCompile(`(?i)XGIMI TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGODY|Y19\(EU\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGODY Y17(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y19\(EU\)`),
		regexp.MustCompile(`(?i)XGODY_X96(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LA2-(?:L|S[N]?)|HLA Note3|L7620DE|20190416Q|20170608S|20180322D|20190325D|20190718Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLA Note3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LA2-(?:L|S[N]?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(20190416Q|L7620DE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20170608S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20180322D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190325D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190718Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi|MiTV-\w|Mi9 Pro 5G|(?:MI [a-z0-9]+|Mi-4c|MI-One[ _]?[a-z0-9]+|MIX(?: 2S?)?|pomelo)(?:[);/ ]|$)|HM (?:[^/;]+) (?:Build|MIUI)|(?:2014501|2014011|201481[12378]|201302[23]|2013061) Build|Redmi|POCOPHONE|(?:SHARK )?(KLE|KSR|MBU)-[AH]0|SK[RW]-[AH]0|PRS-[AH]0|POCO F1|DLT-[AH]0|MIBOX[234]([_ ]PRO)?|MiTV4[ACSX]?|AWM-A0|MI CC 9 Meitu Edition|MiBOX1S|M2006J10C|M2006C3(?:L[IGC]|LVG|MN?G|MT)|M2007J1(?:7[CGI]|SC)|M2002J9[SEG]|HM2014819|WT88047|210611(?:8C|19BI)|M2004J(?:7[AB]|19)C|M2012K11(?:[CGI]|A[CI])|M2011K2[CG]|M2011J18C|M2006C3[ML]II|M2003J15SC|M2007J3S[ICYGP]|M2007J22[CG]|M2103K19[CGYI]|M2101K(?:[79]AG|7AI|7B[GI]|6[GIRP]|7BNY|9[GCR])|M2010J19S[CGYIL]|M1908C3JGG|M2102(?:K1AC|K1[CG]|J2SC)|HM NOTE 1(?:LTE|W)|MI[_ ]PLAY|XIG01|Qin 1s\+|Qin 2(?: Pro)?|MI_(NOTE_Pro|5X|4i|(?:A2|8)_Lite)|A001XM|lancelot|XIG02|21061119(?:[AD]G|AL)|2107119DC|M2101K(?:7BL|9AI)|M2012K10C|M2104K10AC|M1901F71|21051182[CG]|21081111RG|2109119D[GI]|21091116(?:AI|[AU]?C|i)|220111(?:7T[GIY]|19TI)|21121(?:119S[CG]|23AC)|220111[67]SG|2107113S[GR]|M2105K81A?C|2109119BC|220112[23]C|2201117SY|joyeuse|galahad|begonia|beryllium| MDG1`),
		regexp.MustCompile(`(?i)SKR-[AH]0`),
		regexp.MustCompile(`(?i)SKW-[AH]0`),
		regexp.MustCompile(`(?i)DLT-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KLE-A0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KSR-A0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KLE-H0`),
		regexp.MustCompile(`(?i)(?:SHARK )?MBU-H0`),
		regexp.MustCompile(`(?i)(?:SHARK )?MBU-A0`),
		regexp.MustCompile(`(?i)(?:SHARK )?PRS-[AH]0`),
		regexp.MustCompile(`(?i)Xiaomi_2014501|2014501 Build`),
		regexp.MustCompile(`(?i)Xiaomi_2014011|2014011 Build`),
		regexp.MustCompile(`(?i)Xiaomi_201302[23]|201302[23] Build`),
		regexp.MustCompile(`(?i)Xiaomi[_-]2014818|2014818 Build`),
		regexp.MustCompile(`(?i)Xiaomi_2014817|2014817 Build`),
		regexp.MustCompile(`(?i)Xiaomi[_-]201481[123]|201481[123] Build`),
		regexp.MustCompile(`(?i)MI[_ ]PLAY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi 9 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI CC 9(?: Meitu Edition)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi_M2001J2E_TD-LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xiaomi_)?(?:Mi 10 Pro|M2001J1E(?:_TD-LTE)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2011K2[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11AI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J3S[GI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J3S[CYP](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J1SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2102J2SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2002J9[EGS]|XIG01|Mi 10 Lite 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2107113S[GR]|Xiaomi 11T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21081111RG|Xiaomi 11T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K9[GCR]|2109119DG|Mi 11 Lite 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2109119DI|(?:Xiao)?mi 11 Lite 5G NE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K9A[GI]|Mi 11 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2102K1[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2102K1AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201122C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201123C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2112123AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI[ _]8[ _]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 8 Explorer Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 8 ([a-z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi 9T Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi ?9 Pro 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 9 Transparent Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI ([89]) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 5s Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi_2013061|2013061 Build`),
		regexp.MustCompile(`(?i)Mi[- ]([43])c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 4W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi_4i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 4 ?LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI MAX ([23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi[ _]A2[ _]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2106118C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi MIX 3 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX ([23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX 2S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi Note 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCOPHONE[ _]F1|POCO F1|beryllium`),
		regexp.MustCompile(`(?i)MDG1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WT88047(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM2014819(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 2A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 1S[CW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 8A (Dual|Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2004J7AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J19C|M2006C3MII|lancelot|galahad)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2010J19SI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3L[GCI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3LII(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3M[GT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3LVG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2010J19S[GYL]|pomelo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2006C3MNG|Redmi 9C NFC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21061119D[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061119A[GL]|21121119SG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21061119[BT]I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22011119TI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2004J7BC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K20 Pro Premium Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30 Pro Zoom Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K([23]0) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K10C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006J10C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Y1 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 6 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 4 Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qin 2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qin 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2107119DC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2109119BC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21051182[CG]|(?:Xiao)?mi Pad 5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2105K81C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2105K81AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 4 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIBOX3[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIBOX([234])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiBOX1S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MSSP[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MTEQ0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-AESP0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-ANSP0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOOQ0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MiTV-AXSO0|MiTV4(?:A|-ANSM0)|MiTV-MSSP0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-AXSO[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV(4[CSXI]|4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2011J18C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM NOTE 1W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM NOTE 1TD (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)HM NOTE 1(?:LTE|S)(?:W|GLOBAL|TD)? (?:Build|MIUI)|HM NOTE 1LTE`),
		regexp.MustCompile(`(?i)Xiaomi[_ ]2015052`),
		regexp.MustCompile(`(?i)(?:M2010J19SC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2003J15SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2101K7BL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J22G|A001XM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J22C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)joyeuse(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2101K7A[GI]`),
		regexp.MustCompile(`(?i)M2101K7B(?:[GI]|NY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2103K19[GC]|Redmi Note 10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XIG02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K6[GIRP]|M2104K10AC|Redmi Note 10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201116S[GR](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116UC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21121119SC|2201117T[GIY])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116(?:AI|I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M1908C3JGG|Redmi Note 8 \(2021\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)begonia(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1901F71(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note (\d+) Pro Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note (\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi[ _]Note[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Redmi[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)MI[ _]Note[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Qin 1s\+`),
		regexp.MustCompile(`(?i)MI[- ]One[ _]?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi[- ]One[ _]?([a-z0-9]+)?(?: Build|[);])`),
		regexp.MustCompile(`(?i)MI[ _]([^;/]*) Build`),
		regexp.MustCompile(`(?i)MI[ _]([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM Note ([^/;]+) (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)HM ([^/;]+) (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)Xiaomi[ _-]([^/;]+)(?: Build|$)`),
		regexp.MustCompile(`(?i)XI-CE(?:655|U[48])`),
		regexp.MustCompile(`(?i)XI-CE(655|U[48])`),
		regexp.MustCompile(`(?i)Xolo|(?:Q600|Q700s?|Q800|Q1000s|Q1000[ _]Opus|Q1010i|Q2000|Omega[ _]5.[05]|Era5X|Era[ _]2V|Era_4X(?:_2GB)?|BLACK-1XM|A1000s_Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era_?([45])X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era_4X_2GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era[ _]2V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Q600 Club|Q600|Q700s?|Q800|Q1000s Plus|Q1000s|Q1000[ _]Opus|Q1010i|Q2000|Omega[ _]5.[05]|A1000s_Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xolo[ _]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Xolo[ _]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:TelePAD(?:795|731|1032|10A3|7A3)|Era 2X|HMT(?:390Q?|400)|HST 260)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TelePAD(7|10)A3 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TelePAD(795|731|1032)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMT(390Q?|400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HST 260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Era 2X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xshitou[_ ](P7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xtouch[ _](?:X10|A5|X)|XBot[_ ](?:Senior|Junior)|X9_16GB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xtouch[ _](X10|A5|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X9_16GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XBot[_ ](Senior|Junior)`),
		regexp.MustCompile(`(?i)(BRIO[_ ]X31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YASIN Android TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y103)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU Fly (\w+)`),
		regexp.MustCompile(`(?i)YUHO_|(?:Netra(?:[_ ](?:Plus|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YUHO_(O2|H2|Y[123])_PRO`),
		regexp.MustCompile(`(?i)(?:YUHO_)?(Vast2?|O[12]|Y2|Netra(?:[_ ](?:Plus|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YNDX-?000SB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xenta[ \-]Tab|Luna TAB|TAB09-410|TAB10-410|TAB07-485|TAB0[78]-200|TAB08-201-3G|TAB9-200|TAB09-211|TAB10-2[01]1|TAB13-201`),
		regexp.MustCompile(`(?i)Luna TAB07-10[01]`),
		regexp.MustCompile(`(?i)Xenta-TAB07-21[01]`),
		regexp.MustCompile(`(?i)TAB10-2[01]1`),
		regexp.MustCompile(`(?i)M631Y|M685Y4|M651G_MY|YES (?:Altitude 4|MPY(?:48|54))`),
		regexp.MustCompile(`(?i)YES (Altitude 4|MPY(?:48|54))`),
		regexp.MustCompile(`(?i)Yezz|ANDY[ _]|(?:4E4|A5EI|LIV1|LIV2[_ ]?LTE|ART2PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIV2[_ ]?LTE`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9]\.[0-9][A-Z0-9]*)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9])([0-9][A-Z0-9]*)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9][A-Z0-9]+)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)KB2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YD20[16]|YOTA 3[+])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YD20[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOTA 3[+](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YTONE[ _\-]`),
		regexp.MustCompile(`(?i)YTONE[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)YTONE[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(?:YU5[05]10[A]?|YU4711|AO5510|YU5050|YU501[14]|YU5551)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5010[A]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AO5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5551(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5510[A]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU4711(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N101[ _]DUAL(?:[ _]CORE)?(?:[ _]?2|\|\|)?(?:[ _]V11)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Yusun|LA2-T`),
		regexp.MustCompile(`(?i)Yusun ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Yusun ([a-z0-9_\-\+]+)`),
		regexp.MustCompile(`(?i)YXTEL_([HU]1|U3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ODYSSEY O2|ODYSSEY RANGE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIFRO|(?:ZT-97003G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZT-9700)3G`),
		regexp.MustCompile(`(?i)ZTE|AxonPhone|([a-z0-9]+)_USA_Cricket|(?:Blade[ _](?:E01|V0820|L110|L[2357]|L7A|S6|V[6789]|V8Q|V8 SE|V9 VITA|X7|A(310|320|460|465|475|510|520|530|602|51|30|3)|V580|V Ultra|Q Lux)|N9[15]8St|N818S|N951[0579]|N91[38]0|N9101|N913[267]|N952[01]|N9560|N9810|N799D|[UV]9180|[UV]9815|Z(?:5151V|610DL|6400C|6410S|233V|331|5031O|559DL|6621O|667T|768G|792|81[25]|818L|82[08]|83[12359]|85[125]|851M|992|(557|71[67]|798|836|861|916)BL|986DL|(232|718|828)TL|(?:233|353|558|717|799|837|862|899|917|963)VL|955A|95[678]|965|97[018]|98[1237]|986U|999|936L)|V769M|Apex2|G (LTE|Lux)|Vec|Z959|V865M|Z3001S|902ZT|KIS II Max|Kis 3|K3DX-V5G|Z930L|Optus X|Blade[ _](A[357] 2019-T|A[35] 2020-T|A7S 2020-T|A6 MAX|A0622|X9)|Z3153V|Z836F|Ctyon-A9|602ZT|MO-01[JK]|Z963U|402ZT|P545|P609|P650 Pro|dandelion|901ZT|A00[13]ZT|Z-01K|UZTE (?:GRAND V7|V808)|ZTG01|K8[37]CA|VERGATARIO ?5(?:PLUS)?|Axon mini|KIS C341|A103ZT|Z3351S|Z5156CC|B867RE|MEO Smart A80|P651 2021)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P651 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)7530N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9040N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2122H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A001ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A003ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A103ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTG01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T221(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0616(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A7020(?:RU)?|Blade A7S 2020-T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0722(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade 10 Vita(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE (?:2050|V1050)(?:RU)?`),
		regexp.MustCompile(`(?i)ZTE Axon 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2019G? Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:902ZT|A2020N3 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2020 SP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2021[LGH]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2021E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9000N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N799D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z818L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3001S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3351S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ctyon-A9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K3DX-V5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE)?N918St(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N958St(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z963U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5156CC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9130(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9132(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9136(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9137(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9180(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5151V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9517(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z559DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)402ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade Q Lux(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T320(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9515(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9519(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9521(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9560(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[UV]9180(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[UV]9815(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[_ ]Blade[_ ](C2|V7)[_ ]Plus`),
		regexp.MustCompile(`(?i)(?:ZTE_)?V829`),
		regexp.MustCompile(`(?i)V970M?|V987`),
		regexp.MustCompile(`(?i)Z959(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z95[67]`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Grand[ _]Era`),
		regexp.MustCompile(`(?i)Z331(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N818S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5031O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P545(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Optus X Start(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BA520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L2 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Blade[ _]L2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3 Apex(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]T610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]Blade L4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Blade L5 Plus|BLADE L0510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L7A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L(\d+)(?:RU)?`),
		regexp.MustCompile(`(?i)Blade A([357]) (20(?:19|20))`),
		regexp.MustCompile(`(?i)ZTE BV0720(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A[35] 2020-T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE C880A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A([35]1?) Lite`),
		regexp.MustCompile(`(?i)Blade (S6|A[35]1?) Plus`),
		regexp.MustCompile(`(?i)BLADE A0622(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE (?:A6 MAX|A0605)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0622(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade S6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE A5 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]T617(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V6 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V6 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade (?:V7 Lite|V0720)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0710(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V([67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BV0800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE Blade V1000|(?:ZTE_)?V1000`),
		regexp.MustCompile(`(?i)Blade X([79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T630(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade (?:V8Q|V0840)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V8 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE (?:V0850|V8 Mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V(9|10) Vita(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V([89]|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Blade[ _])?(Apex2|G (LTE|Lux)|Vec)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z768G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z717[BV]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z233VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z798BL|Z799VL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z792`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z812`),
		regexp.MustCompile(`(?i)Z851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z836BL|Z837VL|Z836F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z861BL|Z862VL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z958|Z955A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)dandelion(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE[-_])?Z992`),
		regexp.MustCompile(`(?i)(?:Z999|Z-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B201[56]|Axon mini`),
		regexp.MustCompile(`(?i)A2017[GU]?`),
		regexp.MustCompile(`(?i)A2020(?:RU|[GU])? Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V?975|geek`),
		regexp.MustCompile(`(?i)(?:ZTE-)?G-X991`),
		regexp.MustCompile(`(?i)Z936L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MO-01[JK](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V865M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6621O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P650 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V769M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VERGATARIO 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VERGATARIO5PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE V5 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2121[LE]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B867RE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K83CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K87CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AxonPhone ([^;/]+) Build`),
		regexp.MustCompile(`(?i)([a-z0-9]+)_USA_Cricket`),
		regexp.MustCompile(`(?i)ZTE[- ](V98|V96A|V81|V70)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ](A(\d+)C?|L111|V580|E01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V0730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V0800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE B(A601|A910|A510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE Blade (A[35]1)`),
		regexp.MustCompile(`(?i)ZTE BA610T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[- ]([a-z0-9\-_ ]+) Build`),
		regexp.MustCompile(`(?i)ZTE-(?:G |G-)?([a-z0-9 _]+)`),
		regexp.MustCompile(`(?i)U?ZTE[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)ZYQ-Q88|(Q(?:2602|262[436]|638|2688|272[89]|3022|3623|TAB Tab4|328 m9|328|668)|J77|Q[._](?:Up|Boss P99|Dee R09|Good M9|Hi|Hot|Me|Mate R99|Next|TOP-X8|You))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q\.Up C5`),
		regexp.MustCompile(`(?i)Q\.Up`),
		regexp.MustCompile(`(?i)Q\.Boss P99`),
		regexp.MustCompile(`(?i)Q[._]Dee R09`),
		regexp.MustCompile(`(?i)Q\.Good M9`),
		regexp.MustCompile(`(?i)Q[._]Hi S1`),
		regexp.MustCompile(`(?i)Q[._]Hi`),
		regexp.MustCompile(`(?i)Q[._]Hot P7 3G`),
		regexp.MustCompile(`(?i)Q[._]Hot`),
		regexp.MustCompile(`(?i)Q[._]Me Phone7 3G`),
		regexp.MustCompile(`(?i)Q[._]Me Plus7`),
		regexp.MustCompile(`(?i)Q[._]Me`),
		regexp.MustCompile(`(?i)Q[._]Mate R99`),
		regexp.MustCompile(`(?i)Q[._]Next B7`),
		regexp.MustCompile(`(?i)Q[._]Next J2`),
		regexp.MustCompile(`(?i)Q[._]TOP-X8`),
		regexp.MustCompile(`(?i)Q[._]You`),
		regexp.MustCompile(`(?i)(Z3211G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZATEC[_ ]|(?:[ ]WIND|ZPLAY1_2018|Zpower_(?:Plus|2018))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZATEC[_ ]GRAVITY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[ ]WIND(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (TC5[16]|TC2[0156]|TC75|TC7[05]x|TC5[27]|TC700H|ET51)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TC5[16]|TC2[0156]|TC75|TC7[05]x|TC5[27]|TC700H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ET51)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]([^/;)]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)(Admire[_ ][^/;]+|Cinemax[^/;)]+)(?:Build|\))|(?:AdmireGlam|M72 Smart)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M72 Smart)`),
		regexp.MustCompile(`(?i)(Admire[_ ][^/;]+|Cinemax[^/;)]+)(?:Build|\))`),
		regexp.MustCompile(`(?i)Z5007|Z551[679]|Z6001`),
		regexp.MustCompile(`(?i)C-723ULTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZFINERY900(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIDOO[ _](H6 Pro|X6 Pro|X9S|Z10|X[158]|X20 Pro|Z9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIOX[_ ]|(?:Astra Viva 4G|Astra (?:(?:NXT|Curve|Young) Pro|(?:Metal|Titan|Young|Curve) 4G|Star|Blaze)|Duopix \w\d{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIOX[_ ]F9[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (Viva|Titan|Young|Metal|Curve) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (Star|Blaze)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (NXT|Curve|Young) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Duopix (\w\d{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZM(?:CK|EM|TFTV|TN)[a-z0-9]+)|ZA409`),
		regexp.MustCompile(`(?i)(ZM(?:CK|EM|TFTV|TN)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)ZOPO|(?:ZOPO[_ ])?(Flash X3|F2_Color5_5|F5_Color_M5|ZP[0-9]{2,}[^/;]+)(?:\)| Build)`),
		regexp.MustCompile(`(?i)(?:ZOPO_C2_MOD|ZP998)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO 9xxQuad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?ZP980[+](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?ZP980(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP952(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP951(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP955(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP950[+h]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP(?:900H?|910)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP(?:800H|810)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP500[+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP330(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F2_Color5_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F5_Color_M5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP5(63|86)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP567(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP300[S+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP200[+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP1790(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP781(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO[_ ]ONE[_ ]([YXTP])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?(Flash X3|X1i|ZP[0-9]{2,}[^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Zuum[ _-]|Android 6.+ UNIQ(?: Build|[);])|(?:ROCKET III?|Akus (?:PRO|Z1?)|COVET|MAGNO(?:-S)?|ONIX(?: S)?|STEDI|STELLAR(?:[ _](?:Z|PRO|[MP]1|M2))?|GRAVITY [ZM]|AURA X|COVET_PRO_LITE|RONI|Android.+; LIMIT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COVET( Z)?`),
		regexp.MustCompile(`(?i)MAGNO( C1?)?`),
		regexp.MustCompile(`(?i)STELLAR ([MP][123]|Z)`),
		regexp.MustCompile(`(?i)GRAVITY ([MZ])`),
		regexp.MustCompile(`(?i)ROCKET (III?)`),
		regexp.MustCompile(`(?i)Android 6.+; UNIQ(?: Build|[);])`),
		regexp.MustCompile(`(?i)Android.+; LIMIT(?: Build|[);])`),
		regexp.MustCompile(`(?i)Zuum[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Zuum[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZYNC|(Cloud Z5|Z1000|Z18|Z99|Z99[_ ][23]G|Z99|Z900[_ ]Plus|Z909|Z930[+]|Z930)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z18| DuZ99al Core|Z99[_ ][23]G|Z99 Dual Core|Z99|Z900[_ ]Plus|Z909|Z930[+]|Z930)`),
		regexp.MustCompile(`(?i)(Z1000[^/;]+)Build`),
		regexp.MustCompile(`(?i)Cloud (Z5)`),
		regexp.MustCompile(`(?i)ZYNC Cloud[ _]([^;]+)Build`),
		regexp.MustCompile(`(?i)ZYNC[ _]([^;]+)Build`),
		regexp.MustCompile(`(?i)(AL-555|GI-626|OB[_-](?:421|728|627))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OB[_-](421|728|627)`),
		regexp.MustCompile(`(?i)Decade 53(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BO-(FRSP4|LFSPBS5|LFSP4|LFSPSL4|LFSPBS5|LFSPSL6QCI)`),
		regexp.MustCompile(`(?i)BO-(FRSP4)`),
		regexp.MustCompile(`(?i)Aquaris|bq [^/;]+ Build|BQS[-_]([0-9]{4})|(BQ(ru)?[_ -][0-9]{3,4})|BQ5059|BQ1008G|BQru_BQru-`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5209L|5044)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:6035L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5535L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-(?:5070|6040L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-(?:6424L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5730L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5731L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5745L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5533G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5031G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5732L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-6430L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-6630L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-9011[G]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-8068L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(ru)?-(7082)`),
		regexp.MustCompile(`(?i)BQ-7022(G)?`),
		regexp.MustCompile(`(?i)BQ-6200L|BQ-6000L`),
		regexp.MustCompile(`(?i)BQ(ru)?[ -]6015L`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5525|6030G|6010G)`),
		regexp.MustCompile(`(?i)BQ-6001L|BQ-6050`),
		regexp.MustCompile(`(?i)BQ-5707G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5702(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5700L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5591|551[89]G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5520L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5519L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5540L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5517L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5516L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5515(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5515[L]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5512L|5528L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5511L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS[_ ]5505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5521|5594)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5508L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5507L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5504(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-6045L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4030G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5500L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5302G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5301(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5300G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(ru|S)?-(?:5211|5020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5206L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru|S)?-(?:5204|5050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5203(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5202(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5082(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5045L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5047L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:5065|5340)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5046L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-?(?:5059|5514G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BQru_)?BQ(?:ru)?-5058(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5057(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:5056|5030)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-6042l(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5055(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5054(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5052(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-6051G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-5045(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5037|5514L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5035(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5033(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5541L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5022(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5015L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5016G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5012L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5521L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5010G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5000G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5009L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-500[59](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5008L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5007L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5005L|5530L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5003L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5002G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5001L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru|S)?-5000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4702(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4701(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:4585|5011G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4583(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4560(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4555(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:4526|5004G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4516(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4515(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4501G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4077(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4072(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?[- ]402[68](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4008(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4001G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-3510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-3503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1085L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1084L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1083G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1082G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1077L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1057L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1051G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1050G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[-]?1008G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aquaris_([AM])4.5`),
		regexp.MustCompile(`(?i)BQ(?:ru)?[_ -](?:5590|5740G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:6016L|5520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5701L|5060)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BQ-7850|BQ-700[12]G|BQ-8002G|BQ-905[12]G|BQ-9702G|BQ-7056G)`),
		regexp.MustCompile(`(?i)BQ-8006G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7062G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1081G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7802G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7008G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7064G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7050G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7000G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7040G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7038G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7005G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7098G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1045[G]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:1054L|1020L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7083G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-8077L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7083(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1056L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1022l(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1024L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7055L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1025L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:bq )?(Aquaris[^/;]*) Build`),
		regexp.MustCompile(`(?i)Aquaris (VS|E(4.5|[56])|M(5|10)|U2 Lite|U2|U (Lite|Plus)|V Plus|X5 Plus|X2? Pro|X[25]|[CMUVX])`),
		regexp.MustCompile(`(?i)bq ([^/;]+) Build`),
		regexp.MustCompile(`(?i)eSTAR[_ ](?:Grand|GO\!?|Zoom Quad|Gemini|MINI[_ ]3G|BEAUTY|MOON)`),
		regexp.MustCompile(`(?i)eSTAR (Grand|GO\!?) (HD Intel|IPS Intel|IPS|HD|Intel) Quad Core 3G`),
		regexp.MustCompile(`(?i)eSTAR (Zoom Quad|Gemini|GO)`),
		regexp.MustCompile(`(?i)eSTAR GRAND HD quad core( [34]G)?`),
		regexp.MustCompile(`(?i)eSTAR[_ ]MINI[_ ]3G`),
		regexp.MustCompile(`(?i)eTouch ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Smart-Ex02|Ex-Handy 10)(?: (?:ROW|RUS))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iCherry_?`),
		regexp.MustCompile(`(?i)iCherry[ _](C(?:25[1258]|21[16]|110|121|22[0379]|23[03])|X1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i-Joy|i-Call|(?:Neon[79]|Sygnus|Deox|Elektra (?:M|L|XL|XXL))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra XL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra XXL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neon([79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sygnus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Deox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i-Call ([^;/]+) Build`),
		regexp.MustCompile(`(?i)i-Joy ([^;/]+) Build`),
		regexp.MustCompile(`(?i)i-mate ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)i-mobile ?[a-z0-9]+|i-Style|IQ ?(9\.1|5\.5|5\.6A?)`),
		regexp.MustCompile(`(?i)i-mobile (i-note[^/;]*) Build`),
		regexp.MustCompile(`(?i)i-Style ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)IQ ?(9\.1|5\.5|5\.6A?)`),
		regexp.MustCompile(`(?i)i-mobile (IQ[^/;]*) Build`),
		regexp.MustCompile(`(?i)i-mobile(?: )?([a-z0-9\- ]+) Build`),
		regexp.MustCompile(`(?i)i-mobile(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)iBall[ _]([^;/)]+)[ _]Build|iBall_Slide|(?:Snap[_ ]4G2|6351-Q400i|iT-KSA0003|iT-KSA0012|iT-KSA0066|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Brisk 4G2|Blaze_V4|Wondro 10|Q27 4G|Andi (?:Wink|5G Blink) 4G|Co-Mate)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Snap[_ ]4G2|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Blaze_V4|Wondro 10|Q27 4G|Brisk 4G2|Co-Mate)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6351-Q400i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0066(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBall[ _]([^;/)]+)(?:[ _]Build|\))`),
		regexp.MustCompile(`(?i)AUXUS ([^/;]+) Build`),
		regexp.MustCompile(`(?i)AUXUS (Core[^/;]+) Build`),
		regexp.MustCompile(`(?i)AUXUS ([^/;]+) Build`),
		regexp.MustCompile(`(?i)IBRIT_|(?:SI5[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IBRIT_I([57])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_POWER6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_Speed Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SI51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SI52(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iData (K1)`),
		regexp.MustCompile(`(?i)APACHE G6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART[_ ](L20X|G10[12]|S7[02]|G71|G81[H]?|L103|W10X)(?:_eea)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iHunt|One_ Love_|TITAN[_ ]P\d+|Like_(3|4U|3_Pro)|X300 Elite|S10_Tank_2019|S10 Tank PRO 2020|S60_Discovery_2019|AlienXLite2020|Alien X Lite|Alien_X|(?:S[23]0 Ultra ApeX 2021|S21 Ultra 4G 2021|Like 11 Panda Pro|Like_Hi10_2021|Like Hi5|S21 Plus 2021|Like_[78])(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Like_([378])`),
		regexp.MustCompile(`(?i)S([23]0) Ultra ApeX 2021`),
		regexp.MustCompile(`(?i)iHunt ([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)iKoMo ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(IK-102[58]|IK-1106|IK-7108|IK-787)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iLA[-_ ](Silk|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ITELL[_ ](?:K3300|K3500N?|K4700)|WTAB_714|WTAB 805)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(i5800C|i6800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IMARS VEGA X7|VIVI_8|MILKY_WAY_M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iNew|(?:V7A|V3 Plus|V3-?E|V3C|FIRE_Tab_6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3-?E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V7A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIRE_Tab_6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iNew[ -_]([^;/]+) Build`),
		regexp.MustCompile(`(?i)iOCEAN|M6752|W180|X7[ _]?S|X8 mini`),
		regexp.MustCompile(`(?i)X7[ _]?S`),
		regexp.MustCompile(`(?i)(M6752|W180) Build`),
		regexp.MustCompile(`(?i)iOCEAN[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)iOCEAN[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)iOutdoor (X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iPEGTOP[ _](Z26)`),
		regexp.MustCompile(`(?i)(?:Kylin[ _]5.[05]S?|KYLIN40|Jade[78]s|Amber[67]S?|Amber[58]S[ _]Pro|Phonenix50S|Ruby5S|Zafiro|I9355A|Opal 4S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kylin_5.0S`),
		regexp.MustCompile(`(?i)Kylin (5.[05])`),
		regexp.MustCompile(`(?i)Jade([78])s`),
		regexp.MustCompile(`(?i)(I9355A)`),
		regexp.MustCompile(`(?i)(IFoo (?:U200|H55))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iRola ([^/;]+) Build|(DX758|DX752|DX752|DX758[ _]?Pro) Build`),
		regexp.MustCompile(`(?i)DX758[ _]?Pro`),
		regexp.MustCompile(`(?i)(DX758|DX752)`),
		regexp.MustCompile(`(?i)iRola ([^/;]+) Build`),
		regexp.MustCompile(`(?i)iRULU[ _-](X11|V[34]|U2|AL101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iRULU[ _-](X11|V[34]|AL101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iRULU[ _](U2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ISWAG[ _]`),
		regexp.MustCompile(`(?i)iSWAG[_ ]KRONOS`),
		regexp.MustCompile(`(?i)iSWAG[_ ]Lynx`),
		regexp.MustCompile(`(?i)iSWAG[_ ]MANTRA`),
		regexp.MustCompile(`(?i)iSWAG[_ ]MEGA`),
		regexp.MustCompile(`(?i)iSWAG[_ ]NEMESIS`),
		regexp.MustCompile(`(?i)ISWAG[_ ]VIPER`),
		regexp.MustCompile(`(?i)(IS655)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel|iNote|GP10X2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)W6002E?`),
		regexp.MustCompile(`(?i)[LW]6004`),
		regexp.MustCompile(`(?i)iNote ([^/;]*)Build`),
		regexp.MustCompile(`(?i)iNote_([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)itel-it(1410|1512|1520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel-it1553(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel[- ](A14|A16 Plus|A44 Power|A23S|A52 Lite)`),
		regexp.MustCompile(`(?i)itel it170([23])`),
		regexp.MustCompile(`(?i)iTel ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)iTel[_ ]([a-z0-9\-_]*)`),
		regexp.MustCompile(`(?i)iTRUCK 7 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LAMCY (?:L3[05]0|C100|L400)|IVA S6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAMCY (L3[05]0|C100|L400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IVA S6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:733|730|766|930)TPC|769TPC(?:II)?|744TPC plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:733|730|766|930)TPC|769TPC(?:II)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Innelo_1|iV 505|Me 1\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Me 1\+`),
		regexp.MustCompile(`(?i)(?:MC401_GWL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MC401)_GWL`),
		regexp.MustCompile(`(?i)(Mi7_HERO_(?:BETA|TAB))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi7[_ ]HERO[_ ]BETA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi7[_ ]HERO[_ ]TAB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ivvi[ _](F1S|F2C|V1M-S|V2|i1-S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mPhone ?([68]|7 Plus|7s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _](?:C[12]|X10|X[126]|MG430|Q[145])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _]Q1 plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _](C[12]|X[126]|MG430|Q[145])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _]X10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)phoneOne[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Texet|(NaviPad [^/;]*) Build|TM-(?:1046|1058|1057|1067|3000|3200R|3500|400[34]|4071|450[34]|451[30]|4377|4082R|508[34]|550[358]|5010|5017|507[4-7]|5[23]77|6003|6906|702[13]|7055HD|709[69]|9747BT|9758|9751HD|9767|5513|520[410]|507[13]|558[134]|570[23]|7859|8044|9748[ _]3G|9720|7047HD[ _]3G|9757|9740|4982|4515|4083|500[3567]|5571|3204R|5016|8043|7047HD[ _]3G|8041HD|8066|705[23]|7041|8041HD|8051|8048|974[96]|973[78]W|974[170]|9743W|9750HD|7043XD|7049|7887|7037W|702[46])|TB-(771A|711A)|X-Force[\(-]?TM-5009\)?|X-Plus[\(-]?TM-5577\)?|TM_5011|X-pad (?:AIR 8|iX 7|NAVI 7.[35]|NAVI 10|SKY 8.1|STYLE 8|STYLE 10.1|HIT|LITE 7.[12]|QUAD (?:7.2|10|7)|SHINE 8.1)(?: 3G)?`),
		regexp.MustCompile(`(?i)(NaviPad [^/;]*) Build`),
		regexp.MustCompile(`(?i)X-pad SHINE 8.1 3G`),
		regexp.MustCompile(`(?i)X-pad QUAD 7.2 3G`),
		regexp.MustCompile(`(?i)X-pad LITE (7.[12])`),
		regexp.MustCompile(`(?i)X-pad STYLE 10.1 3G`),
		regexp.MustCompile(`(?i)(X-pad (?:AIR 8|iX 7) 3G)`),
		regexp.MustCompile(`(?i)TM-7096|X-pad NAVI 7.3 3G`),
		regexp.MustCompile(`(?i)X-pad NAVI 7.5 3G`),
		regexp.MustCompile(`(?i)X-pad SKY 8.1 3G`),
		regexp.MustCompile(`(?i)TM-1046|X-pad NAVI 10 3G`),
		regexp.MustCompile(`(?i)(TM-(?:1057|1067|6906|8043|9748[_ ]3G|9740|9757(?:[_ ]3G)?|7047HD[ _]3G|9747BT|9751HD|702[13]|705[23]|7041|9720|7047HD[_ ]3G|8044|8041HD|973[78]W|9743W|974[710]|9750HD|7043XD|7037W|702[46])|TB-(?:771A|711A|8041HD))`),
		regexp.MustCompile(`(?i)(TM-(?:3000|3200R|400[34]|4083|4377|4504|451[30]|500[35]|5[23]77|5571|3204R|520[04]|5581|5505|5017|507[13-7]|5081|6003|5513))`),
		regexp.MustCompile(`(?i)TM-508(3|4)`),
		regexp.MustCompile(`(?i)TM-558(3|4)`),
		regexp.MustCompile(`(?i)TM-(5016|3500)`),
		regexp.MustCompile(`(?i)TEXET[_ ]IX-MINI`),
		regexp.MustCompile(`(?i)X-Force[\(-]?TM-5009\)?`),
		regexp.MustCompile(`(?i)X-Plus[\(-]?TM-5577\)?`),
		regexp.MustCompile(`(?i)teXet[_ ]X-medium[_ ]plus`),
		regexp.MustCompile(`(?i)Vmobile[ _]`),
		regexp.MustCompile(`(?i)Vmobile[ _](J7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vmobile XS Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OWN[ _]|(?:S4035[ _][34]G|Smart8|SMART PLUS LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUN ([67])`),
		regexp.MustCompile(`(?i)FUN 5\(4G\)`),
		regexp.MustCompile(`(?i)(?:OWN[ _])?(S3000D|S3010|S3020D|S4010|S4025|S4035[ _][34]G)`),
		regexp.MustCompile(`(?i)Smart8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART PLUS LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FBMD/(?:Aspire E5-421G|Z5WAL|One S1003);`),
		regexp.MustCompile(`(?i)FBMD/Aspire E5-421G;`),
		regexp.MustCompile(`(?i)FBMD/Z5WAL;`),
		regexp.MustCompile(`(?i)FBMD/One S1003;`),
		regexp.MustCompile(`(?i)FBMD/(?:K50IN|K54L|T100HAN|T103HAF|UX360CAK|X550LB|X553MA|X555LN|X556UQK);`),
		regexp.MustCompile(`(?i)FBMD/K50IN;`),
		regexp.MustCompile(`(?i)FBMD/K54L;`),
		regexp.MustCompile(`(?i)FBMD/T100HAN;`),
		regexp.MustCompile(`(?i)FBMD/T103HAF;`),
		regexp.MustCompile(`(?i)FBMD/UX360CAK;`),
		regexp.MustCompile(`(?i)FBMD/X550LB;`),
		regexp.MustCompile(`(?i)FBMD/X553MA;`),
		regexp.MustCompile(`(?i)FBMD/X555LN;`),
		regexp.MustCompile(`(?i)FBMD/X556UQK;`),
		regexp.MustCompile(`(?i)FBMD/(?:Latitude E4300|Inspiron 3541|XPS 15 95[35]0);`),
		regexp.MustCompile(`(?i)FBMD/((?:Compaq|HP) |23-f364)`),
		regexp.MustCompile(`(?i)HP EliteBook (25[67]0p)`),
		regexp.MustCompile(`(?i)HP ProBook (440 G5|6[35]60b)`),
		regexp.MustCompile(`(?i)FBMD/(?:37021C5|80E5|80SM|80VR);`),
		regexp.MustCompile(`(?i)FBMD/37021C5;`),
		regexp.MustCompile(`(?i)FBMD/80E5;`),
		regexp.MustCompile(`(?i)FBMD/80SM;`),
		regexp.MustCompile(`(?i)FBMD/80VR;`),
		regexp.MustCompile(`(?i)FBMD/SCL141CTP;`),
		regexp.MustCompile(`(?i)FBMD/TH360R12.32CTW;`),
		regexp.MustCompile(`(?i)Satellite (A[25]00|C650|C855|L650|S855)`),
		regexp.MustCompile(`(?i)Satellite ([^;\)]+);`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod1[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod2[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod3[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod4[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod5[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod7[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod9[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod`),
		regexp.MustCompile(`(?i)COWON ([^;/]+) Build`),
		regexp.MustCompile(`(?i)M(1[57])`),
		regexp.MustCompile(`(?i)(SV-MV100)`),
		regexp.MustCompile(`(?i)Sonos/.+\((?:ZP.+)\)|Sonos;`),
		regexp.MustCompile(`(?i)\((ZPS(?:[13569]|1[1-578]|2[03])|ZP90)\)`),
		regexp.MustCompile(`(?i)Sonos;Play5;`),
		regexp.MustCompile(`(?i)Sonos;One;`),
		regexp.MustCompile(`(?i)YP-(G[SIPB]?1|G[57]0|GB70D)`),
		regexp.MustCompile(`(?i)YP-G[B]?1`),
		regexp.MustCompile(`(?i)Shanling (M6\(21\))`),
		regexp.MustCompile(`(?i)(DV-PTB1080)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Erisson[_ ]Shell`),
		regexp.MustCompile(`(?i)ALDINORD[;,]`),
		regexp.MustCompile(`(?i)ALDISUED[;,]`),
		regexp.MustCompile(`(?i)ALDISUED, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(LE43S5970-20|S50856)`),
		regexp.MustCompile(`(?i)ARRIS[;,]`),
		regexp.MustCompile(`(?i)Airties; ?([^);/]+)`),
		regexp.MustCompile(`(?i)Altech UEC; ?([^);/]+)`),
		regexp.MustCompile(`(?i)Blaupunkt_UMC[;,]`),
		regexp.MustCompile(`(?i)BUSH[;,]`),
		regexp.MustCompile(`(?i)CELCUS[;,]`),
		regexp.MustCompile(`(?i)Changhong; ?([^);/]+)`),
		regexp.MustCompile(`(?i)DIGIHOME[;,]`),
		regexp.MustCompile(`(?i)ELECTRONIA[;,]`),
		regexp.MustCompile(`(?i)ESSENTIELB[;,]`),
		regexp.MustCompile(`(?i)FU[;,]`),
		regexp.MustCompile(`(?i)FINLUX[;,]`),
		regexp.MustCompile(`(?i)FUEGO[;,]`),
		regexp.MustCompile(`(?i)GOGEN[;,]`),
		regexp.MustCompile(`(?i)(OWB|Grundig|Arcelik)`),
		regexp.MustCompile(`(?i)(?:HHW_)?HAIER`),
		regexp.MustCompile(`(?i)HI-LEVEL[;,]`),
		regexp.MustCompile(`(?i)Hisense|Eurofins_Digital_Testing`),
		regexp.MustCompile(`(?i)(L[A-Z]{2,3}[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,6}[0-9]?[A-Z]?)`),
		regexp.MustCompile(`(?i)(H[A-Z]?[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,4})`),
		regexp.MustCompile(`(?i)Hitachi[;,]`),
		regexp.MustCompile(`(?i)HORIZON[;,]`),
		regexp.MustCompile(`(?i)HOTEL[;,]`),
		regexp.MustCompile(`(?i)Humax|hdr1000s`),
		regexp.MustCompile(`(?i)(HD-FOX C|HD (FOX\+|NANO)|iCord (HD\+|MINI|Cable)|(CX|IR)HD-5100(C|S)|HM9503HD)`),
		regexp.MustCompile(`(?i)Humax; ([^);/]+)`),
		regexp.MustCompile(`(?i)HYUNDAI[;,]`),
		regexp.MustCompile(`(?i)(Vantage|VT-100|VT-1)`),
		regexp.MustCompile(`(?i)inverto; ([^);/]+)`),
		regexp.MustCompile(`(?i)(Volksbox Web Edition|Volksbox Essential|Volksbox II|Volksbox)`),
		regexp.MustCompile(`(?i)AFTSO001|JVC[;,]`),
		regexp.MustCompile(`(?i)KUBO[;,]`),
		regexp.MustCompile(`(?i)KALLEY[;,]`),
		regexp.MustCompile(`(?i)KEY000000(2E|2F|3B|3F)`),
		regexp.MustCompile(`(?i)(NetCast [0-9]{1}.[0-9]{1}|GLOBAL_PLAT3)`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z0-9]{3}[A-Z]{2})`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z][0-9][A-Z])`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z0-9]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}[A-Z]{2}[0-9]{4}[A-Z0-9]{1}[A-Z]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}NANO[0-9]{3}[A-Z]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}NANO[0-9]{2})`),
		regexp.MustCompile(`(?i)LGE;? ?([0-9]{2}[A-Z]{2}[0-9]{2,4}[A-Z]?)`),
		regexp.MustCompile(`(?i)LAURUS[;,]`),
		regexp.MustCompile(`(?i)Lifemaxx[;,]`),
		regexp.MustCompile(`(?i)LINSAR[;,]`),
		regexp.MustCompile(`(?i)([A-Z]{2}[0-9]{3})`),
		regexp.MustCompile(`(?i)LUXOR[;,]`),
		regexp.MustCompile(`(?i)MStar[;,]`),
		regexp.MustCompile(`(?i)([24])KTV18`),
		regexp.MustCompile(`(?i)MTC[;,]`),
		regexp.MustCompile(`(?i)([24])K_Android_TV_V01`),
		regexp.MustCompile(`(?i)MTK|MediaTek;`),
		regexp.MustCompile(`(?i)(MT[0-9]{4})`),
		regexp.MustCompile(`(?i)MEDION, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)NORDMENDE[;,]`),
		regexp.MustCompile(`(?i)OK[;,]`),
		regexp.MustCompile(`(?i)PROFILO[;,]`),
		regexp.MustCompile(`(?i)VIERA (201[1-9])`),
		regexp.MustCompile(`(?i)(DIGA [A-Z]{1}[0-9]{4})`),
		regexp.MustCompile(`(?i)DIGA Webkit ([A-Z]{1}[0-9]{4})`),
		regexp.MustCompile(`(?i)SmartTV(201[89]|202[0-1])`),
		regexp.MustCompile(`(?i)Philips|NETTV/`),
		regexp.MustCompile(`(?i)Philips[,;] ?([^),;/]+)`),
		regexp.MustCompile(`(?i)NETTV/[0-9\.]{5}`),
		regexp.MustCompile(`(?i)POLAROID[;,]`),
		regexp.MustCompile(`(?i)QILIVE[;,]`),
		regexp.MustCompile(`(?i)REGAL[;,]`),
		regexp.MustCompile(`(?i)SCBC[;,]`),
		regexp.MustCompile(`(?i)SEG[;,]`),
		regexp.MustCompile(`(?i)SWTV[;,]`),
		regexp.MustCompile(`(?i)Saba[;,]`),
		regexp.MustCompile(`(?i)Salora[;,]`),
		regexp.MustCompile(`(?i)Samsung.*Smart\s*TV|Tizen.*TV|Maple_2011`),
		regexp.MustCompile(`(?i)SmartTV(201[2-9]|202[0-1]):([^);/]+)`),
		regexp.MustCompile(`(?i)SmartTV(201[2-9]|202[0-1])`),
		regexp.MustCompile(`(?i)Selevision; (?:Selevision )?([^);/]+)`),
		regexp.MustCompile(`(?i)(EMC1000i)`),
		regexp.MustCompile(`(?i)(?:UMC-)?Sharp`),
		regexp.MustCompile(`(?i)SHARP, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Sharp[,;] ?([^),;/]+)`),
		regexp.MustCompile(`(?i)(LE[0-9]{3}[A-Z]{0,3})`),
		regexp.MustCompile(`(?i)LC-([^);/]+)`),
		regexp.MustCompile(`(?i)Sky_worth;([^);/]+)`),
		regexp.MustCompile(`(?i)Smart[;,]`),
		regexp.MustCompile(`(?i)Smart; ([^);/]+)`),
		regexp.MustCompile(`(?i)([A-Z]{2}[0-9]{2}|ZAPPIX)`),
		regexp.MustCompile(`(?i)KDL-GN([56])`),
		regexp.MustCompile(`(?i)(?:BRAVIA )(2K GB ATV3|[48]K UR[123]|4K GB ATV3|4K GB|4K VH2|4K 2015|2015|VH1|VU1)(?:[);/ ]|VH1|4K VH2|$)`),
		regexp.MustCompile(`(?i)(KDL?-?[0-9]{2}[A-Z]{1}[0-9]{4}[A-Z]{1})`),
		regexp.MustCompile(`(?i)(KDL?-?[0-9]{2}[A-Z]{1}[0-9]{3}[A-Z]{1})`),
		regexp.MustCompile(`(?i)(KDL?-?[0-9]{2}[A-Z]{1,2}[0-9]{1,5})`),
		regexp.MustCompile(`(?i)TCL[^\s]`),
		regexp.MustCompile(`(?i)(32D1820|(?:39|55)D2900|32D2930|(?:32|43)S4900)`),
		regexp.MustCompile(`(?i)TDSystems[;,]`),
		regexp.MustCompile(`(?i)SmartTV(2019|2020)`),
		regexp.MustCompile(`(?i)TOKYO[;,]`),
		regexp.MustCompile(`(?i)((DigiCorder|MultyVision|Digit) (ISIO S|ISIO C|ISIO))`),
		regexp.MustCompile(`(?i)TECHNIKA[;,]`),
		regexp.MustCompile(`(?i)([A-Z]{1}-[0-9]{3})`),
		regexp.MustCompile(`(?i)Techwood[;,]`),
		regexp.MustCompile(`(?i)THOMSON[,]?|THOM`),
		regexp.MustCompile(`(?i)(TB28D19DHS-01|T28D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T32RTM5040|T32D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T43FSL5031|T43D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T40D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T49D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T55D18[SD]FS-01B)`),
		regexp.MustCompile(`(?i)(([0-9]{2}|DTV_)[A-Z]{2}[0-9]{1,3})`),
		regexp.MustCompile(`(?i)OEM, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)VOX[;,]`),
		regexp.MustCompile(`(?i)(?:Vestel.+VESTEL|VESTEL;)`),
		regexp.MustCompile(`(?i)videoweb|tv2n`),
		regexp.MustCompile(`(?i)(tv2n)`),
		regexp.MustCompile(`(?i)(videowebtv)`),
		regexp.MustCompile(`(?i)WELLINGTON[;,]`),
		regexp.MustCompile(`(?i)X-VISION[;,]`),
	}
	__dr_buf = []byte{
		0x4e, 0x69, 0x6b, 0x6f, 0x6e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6f, 0x6c, 0x70,
		0x69, 0x78, 0x20, 0x53, 0x38, 0x30, 0x30, 0x63, 0x53, 0x61, 0x6d, 0x73, 0x75, 0x6e, 0x67, 0x45,
		0x4b, 0x2d, 0x47, 0x4e, 0x31, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x58,
		0x45, 0x4b, 0x2d, 0x47, 0x43, 0x31, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43,
		0x61, 0x6d, 0x65, 0x72, 0x61, 0x45, 0x4b, 0x2d, 0x47, 0x43, 0x31, 0x31, 0x30, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20,
		0x6f, 0x6e, 0x6c, 0x79, 0x45, 0x4b, 0x2d, 0x47, 0x43, 0x32, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x24, 0x31, 0x4d, 0x41, 0x43, 0x20, 0x41,
		0x55, 0x44, 0x49, 0x4f, 0x63, 0x61, 0x72, 0x20, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x4d,
		0x61, 0x63, 0x20, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x70, 0x72, 0x6f, 0x53, 0x70, 0x72,
		0x6f, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x51, 0x74, 0x43, 0x61, 0x72,
		0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x20, 0x53, 0x54, 0x6f,
		0x70, 0x77, 0x61, 0x79, 0x73, 0x70, 0x39, 0x38, 0x35, 0x33, 0x69, 0x5f, 0x31, 0x68, 0x31, 0x30,
		0x5f, 0x76, 0x6d, 0x6d, 0x54, 0x53, 0x39, 0x41, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x63, 0x6f, 0x6e,
		0x73, 0x6f, 0x6c, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x69,
		0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x58, 0x62, 0x6f, 0x78, 0x58, 0x62, 0x6f, 0x78, 0x20,
		0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x58, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x4f, 0x6e, 0x65,
		0x20, 0x58, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x58, 0x42, 0x4f, 0x58, 0x5f, 0x4f,
		0x4e, 0x45, 0x5f, 0x45, 0x44, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x58,
		0x62, 0x6f, 0x78, 0x20, 0x33, 0x36, 0x30, 0x4e, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x6f, 0x24,
		0x31, 0x4f, 0x55, 0x59, 0x41, 0x52, 0x65, 0x74, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x50, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x52, 0x65, 0x74, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65,
		0x74, 0x20, 0x32, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x65, 0x67,
		0x61, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x63, 0x61, 0x73, 0x74, 0x53, 0x6f, 0x6e, 0x79, 0x50, 0x6c,
		0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x32, 0x45, 0x73, 0x6d,
		0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x45, 0x35, 0x30, 0x30, 0x41, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x45, 0x34, 0x35, 0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x33,
		0x36, 0x30, 0x4e, 0x37, 0x4e, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x37, 0x20, 0x50, 0x72,
		0x6f, 0x4e, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x36, 0x4e, 0x36, 0x20, 0x50, 0x72, 0x6f,
		0x51, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x34, 0x4e, 0x35, 0x4e, 0x34, 0x41, 0x4e, 0x35,
		0x53, 0x4e, 0x34, 0x53, 0x33, 0x47, 0x4e, 0x45, 0x54, 0x54, 0x39, 0x30, 0x30, 0x33, 0x47, 0x4f,
		0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x41, 0x70, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x33, 0x51,
		0x51, 0x6f, 0x6f, 0x21, 0x20, 0x50, 0x2d, 0x50, 0x61, 0x64, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x51,
		0x2d, 0x50, 0x61, 0x64, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x53, 0x75, 0x72, 0x66, 0x54, 0x53, 0x39,
		0x37, 0x30, 0x38, 0x42, 0x53, 0x75, 0x72, 0x66, 0x20, 0x54, 0x53, 0x31, 0x30, 0x30, 0x39, 0x42,
		0x51, 0x6f, 0x6f, 0x21, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x4d, 0x65,
		0x74, 0x61, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x51, 0x2d, 0x42, 0x6f, 0x6f, 0x6b, 0x51, 0x6f, 0x6f,
		0x21, 0x20, 0x47, 0x6c, 0x61, 0x7a, 0x65, 0x34, 0x47, 0x6f, 0x6f, 0x64, 0x24, 0x31, 0x20, 0x33,
		0x47, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65,
		0x34, 0x69, 0x66, 0x65, 0x74, 0x76, 0x37, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x77,
		0x65, 0x67, 0x75, 0x65, 0x44, 0x52, 0x45, 0x4e, 0x41, 0x44, 0x72, 0x65, 0x6e, 0x61, 0x38, 0x38,
		0x34, 0x38, 0x41, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x32, 0x30, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x32,
		0x31, 0x41, 0x31, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x41, 0x47,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x47, 0x4d, 0x47, 0x6f, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x24, 0x31, 0x41, 0x39, 0x41, 0x49, 0x44, 0x41, 0x54,
		0x41, 0x41, 0x44, 0x54, 0x20, 0x31, 0x30, 0x36, 0x31, 0x41, 0x44, 0x54, 0x31, 0x30, 0x31, 0x32,
		0x4c, 0x41, 0x44, 0x54, 0x20, 0x31, 0x30, 0x31, 0x32, 0x4c, 0x45, 0x4c, 0x44, 0x45, 0x20, 0x31,
		0x30, 0x41, 0x49, 0x52, 0x4f, 0x4e, 0x41, 0x69, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x38, 0x53, 0x41, 0x49, 0x53, 0x69, 0x72, 0x69, 0x73, 0x37, 0x30, 0x38, 0x4c, 0x41,
		0x56, 0x41, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x34, 0x2e, 0x35, 0x4b, 0x69, 0x6e, 0x67, 0x63, 0x6f,
		0x6d, 0x6d, 0x20, 0x43, 0x35, 0x30, 0x30, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x58, 0x33, 0x41, 0x4c, 0x44, 0x49, 0x20, 0x4e,
		0x4f, 0x52, 0x44, 0x41, 0x4c, 0x44, 0x49, 0x20, 0x53, 0xc3, 0x9c, 0x44, 0x41, 0x4d, 0x47, 0x4f,
		0x4f, 0x41, 0x4d, 0x33, 0x35, 0x30, 0x4a, 0x61, 0x63, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x69,
		0x67, 0x6f, 0x41, 0x4d, 0x34, 0x30, 0x32, 0x50, 0x72, 0x6f, 0x6e, 0x74, 0x6f, 0x41, 0x4d, 0x34,
		0x31, 0x30, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x41, 0x4d, 0x34, 0x35, 0x30, 0x53, 0x77, 0x69, 0x66,
		0x74, 0x41, 0x4d, 0x35, 0x30, 0x38, 0x46, 0x75, 0x65, 0x67, 0x6f, 0x41, 0x4d, 0x35, 0x30, 0x39,
		0x55, 0x6e, 0x6f, 0x41, 0x4d, 0x35, 0x31, 0x35, 0x44, 0x31, 0x41, 0x4d, 0x35, 0x31, 0x38, 0x43,
		0x31, 0x41, 0x4d, 0x35, 0x32, 0x30, 0x50, 0x72, 0x6f, 0x41, 0x4d, 0x35, 0x32, 0x33, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x4d, 0x35, 0x32, 0x37, 0x47, 0x65, 0x6f, 0x41, 0x4d, 0x35, 0x33, 0x30, 0x41,
		0x4d, 0x35, 0x33, 0x35, 0x50, 0x31, 0x41, 0x4d, 0x24, 0x31, 0x41, 0x4e, 0x53, 0x55, 0x4c, 0x34,
		0x30, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x4c, 0x34, 0x30, 0x41, 0x4e, 0x53, 0x2f, 0x4c,
		0x35, 0x31, 0x4c, 0x35, 0x31, 0x41, 0x4f, 0x43, 0x41, 0x4f, 0x59, 0x4f, 0x44, 0x4b, 0x47, 0x41,
		0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
		0x79, 0x65, 0x54, 0x49, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x41, 0x52, 0x52, 0x49, 0x53, 0x41, 0x54,
		0x26, 0x54, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x61,
		0x64, 0x69, 0x61, 0x6e, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x35, 0x47, 0x41, 0x78, 0x69, 0x61, 0x43, 0x61, 0x6c, 0x79, 0x70,
		0x73, 0x6f, 0x43, 0x61, 0x6c, 0x79, 0x70, 0x73, 0x6f, 0x20, 0x32, 0x4d, 0x61, 0x65, 0x73, 0x74,
		0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x4d, 0x61,
		0x65, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x61, 0x74,
		0x65, 0x20, 0x32, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x5a, 0x41, 0x55, 0x52, 0x49, 0x53,
		0x41, 0x56, 0x48, 0x45, 0x78, 0x63, 0x65, 0x72, 0x20, 0x47, 0x35, 0x2e, 0x24, 0x31, 0x45, 0x78,
		0x63, 0x65, 0x72, 0x20, 0x47, 0x35, 0x45, 0x78, 0x63, 0x65, 0x72, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x45, 0x78, 0x63, 0x65, 0x72, 0x20, 0x38, 0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x4e,
		0x65, 0x6f, 0x6e, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x20, 0x43, 0x36, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x24, 0x31, 0x53, 0x70, 0x65, 0x65, 0x64,
		0x20, 0x58, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e,
		0x20, 0x24, 0x31, 0x50, 0x65, 0x61, 0x72, 0x6c, 0x20, 0x41, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x50, 0x65, 0x61, 0x72, 0x6c, 0x20, 0x41, 0x24, 0x31, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x50, 0x35,
		0x35, 0x70, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x46, 0x41, 0x53, 0x54, 0x37, 0x20, 0x33, 0x47,
		0x53, 0x75, 0x72, 0x66, 0x20, 0x31, 0x30, 0x30, 0x30, 0x41, 0x63, 0x65, 0x42, 0x75, 0x7a, 0x7a,
		0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x43, 0x4c, 0x45, 0x56, 0x45,
		0x52, 0x20, 0x31, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20, 0x31, 0x55, 0x52, 0x42, 0x41, 0x4e,
		0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x20, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x55, 0x52, 0x42, 0x41, 0x4e, 0x20, 0x31, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x20, 0x31, 0x41,
		0x63, 0x65, 0x72, 0x44, 0x41, 0x32, 0x32, 0x30, 0x48, 0x51, 0x4c, 0x44, 0x41, 0x32, 0x34, 0x31,
		0x48, 0x4c, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41, 0x41, 0x54, 0x41, 0x42, 0x24, 0x31,
		0x45, 0x45, 0x54, 0x2d, 0x31, 0x30, 0x38, 0x2d, 0x31, 0x31, 0x41, 0x45, 0x6e, 0x64, 0x75, 0x72,
		0x6f, 0x20, 0x54, 0x31, 0x54, 0x50, 0x41, 0x36, 0x30, 0x57, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x38, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x37, 0x41, 0x31, 0x2d, 0x38, 0x33, 0x30, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41,
		0x31, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x53, 0x41, 0x33,
		0x2d, 0x41, 0x32, 0x30, 0x46, 0x48, 0x44, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41, 0x33,
		0x20, 0x46, 0x48, 0x44, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41, 0x33, 0x49, 0x63, 0x6f,
		0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61,
		0x20, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x42, 0x31, 0x49,
		0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x37, 0x49, 0x63, 0x6f, 0x6e,
		0x69, 0x61, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x38, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x4f,
		0x6e, 0x65, 0x20, 0x31, 0x30, 0x41, 0x31, 0x30, 0x31, 0x56, 0x61, 0x6e, 0x67, 0x6f, 0x67, 0x68,
		0x41, 0x32, 0x30, 0x30, 0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x45, 0x50, 0x69, 0x63,
		0x61, 0x73, 0x73, 0x6f, 0x41, 0x63, 0x65, 0x72, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x4f, 0x6e,
		0x65, 0x20, 0x37, 0x47, 0x54, 0x2d, 0x38, 0x31, 0x30, 0x50, 0x72, 0x65, 0x64, 0x61, 0x74, 0x6f,
		0x72, 0x20, 0x38, 0x41, 0x63, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x38, 0x5f, 0x54, 0x32,
		0x4f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x54, 0x32, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x45,
		0x37, 0x30, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4c, 0x69,
		0x71, 0x75, 0x69, 0x64, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x71, 0x75,
		0x69, 0x64, 0x20, 0x45, 0x31, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20,
		0x45, 0x32, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x53, 0x31, 0x4c,
		0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x53, 0x32, 0x6e, 0x65, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x34, 0x30, 0x30, 0x6e, 0x65, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x33,
		0x30, 0x30, 0x6e, 0x65, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x53, 0x32, 0x30, 0x30, 0x62,
		0x65, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x45, 0x31, 0x30, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69,
		0x64, 0x20, 0x5a, 0x24, 0x31, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x31, 0x31, 0x30,
		0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71,
		0x75, 0x69, 0x64, 0x20, 0x5a, 0x34, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
		0x20, 0x4a, 0x61, 0x64, 0x65, 0x20, 0x5a, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x35,
		0x33, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x36, 0x33, 0x30, 0x4c, 0x69, 0x71,
		0x75, 0x69, 0x64, 0x20, 0x5a, 0x36, 0x33, 0x30, 0x53, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20,
		0x5a, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x20,
		0x34, 0x47, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4d, 0x33, 0x33, 0x30, 0x4c, 0x69, 0x71,
		0x75, 0x69, 0x64, 0x20, 0x4d, 0x32, 0x32, 0x30, 0x41, 0x63, 0x65, 0x72, 0x54, 0x44, 0x36, 0x30,
		0x30, 0x54, 0x44, 0x36, 0x30, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4a, 0x61, 0x64,
		0x65, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x24, 0x31, 0x41, 0x63, 0x74, 0x65, 0x63, 0x6b, 0x42, 0x4c, 0x45, 0x43,
		0x4b, 0x42, 0x6c, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x72, 0x6f, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x33, 0x47, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x41,
		0x44, 0x56, 0x41, 0x4e, 0x20, 0x4d, 0x34, 0x4d, 0x34, 0x41, 0x44, 0x56, 0x41, 0x4e, 0x20, 0x53,
		0x34, 0x30, 0x53, 0x34, 0x30, 0x69, 0x37, 0x55, 0x49, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x69,
		0x37, 0x55, 0x53, 0x35, 0x45, 0x20, 0x4e, 0x58, 0x54, 0x49, 0x24, 0x31, 0x69, 0x34, 0x55, 0x49,
		0x34, 0x55, 0x47, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x31,
		0x43, 0x5f, 0x33, 0x47, 0x45, 0x31, 0x43, 0x20, 0x33, 0x47, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63,
		0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x53,
		0x50, 0x24, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x50, 0x52, 0x24, 0x31, 0x48, 0x6f, 0x6c,
		0x6c, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x48, 0x4c, 0x24, 0x31, 0x48, 0x6f, 0x6c, 0x6c, 0x6f,
		0x67, 0x72, 0x61, 0x6d, 0x20, 0x24, 0x31, 0x41, 0x66, 0x72, 0x69, 0x4f, 0x6e, 0x65, 0x43, 0x79,
		0x67, 0x6e, 0x75, 0x73, 0x20, 0x58, 0x43, 0x79, 0x67, 0x6e, 0x75, 0x73, 0x47, 0x72, 0x61, 0x76,
		0x69, 0x74, 0x79, 0x20, 0x5a, 0x32, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x69, 0x6e, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x41,
		0x58, 0x31, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x41, 0x58,
		0x31, 0x20, 0x33, 0x47, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x53, 0x77, 0x6f, 0x72,
		0x64, 0x4e, 0x4f, 0x56, 0x4f, 0x31, 0x30, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x76,
		0x6f, 0x20, 0x31, 0x30, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x41, 0x58, 0x31, 0x30, 0x50, 0x52,
		0x4f, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x41, 0x58, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x75,
		0x6d, 0x79, 0x5f, 0x33, 0x47, 0x5f, 0x41, 0x58, 0x33, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x41, 0x58,
		0x33, 0x20, 0x53, 0x77, 0x6f, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x79, 0x33, 0x47, 0x54, 0x61, 0x6c,
		0x6f, 0x73, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x54, 0x61, 0x6c, 0x6f, 0x73, 0x4e,
		0x75, 0x6d, 0x79, 0x5f, 0x33, 0x47, 0x5f, 0x42, 0x57, 0x31, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33,
		0x47, 0x20, 0x54, 0x61, 0x6c, 0x6f, 0x73, 0x20, 0x32, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47,
		0x20, 0x41, 0x58, 0x39, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x41, 0x58, 0x31, 0x30,
		0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x2d, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20,
		0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x20, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x6f, 0x37, 0x46, 0x69,
		0x72, 0x65, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20, 0x46, 0x69, 0x72, 0x65, 0x4e, 0x6f, 0x76,
		0x6f, 0x20, 0x37, 0x20, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x4e,
		0x75, 0x6d, 0x79, 0x20, 0x24, 0x31, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32,
		0x41, 0x69, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x70,
		0x68, 0x6f, 0x6e, 0x65, 0x41, 0x69, 0x72, 0x74, 0x65, 0x6c, 0x41, 0x69, 0x72, 0x70, 0x61, 0x64,
		0x20, 0x37, 0x2d, 0x73, 0x41, 0x69, 0x72, 0x50, 0x61, 0x64, 0x20, 0x37, 0x53, 0x41, 0x69, 0x75,
		0x74, 0x6f, 0x41, 0x69, 0x77, 0x61, 0x41, 0x57, 0x37, 0x39, 0x30, 0x41, 0x57, 0x35, 0x30, 0x30,
		0x41, 0x57, 0x4d, 0x24, 0x31, 0x4d, 0x33, 0x30, 0x30, 0x41, 0x6b, 0x61, 0x69, 0x54, 0x41, 0x42,
		0x20, 0x24, 0x31, 0x41, 0x4b, 0x54, 0x42, 0x2d, 0x37, 0x30, 0x33, 0x4d, 0x5a, 0x58, 0x36, 0x20,
		0x4d, 0x45, 0x54, 0x41, 0x4c, 0x69, 0x4c, 0x69, 0x6b, 0x65, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x20,
		0x24, 0x31, 0x45, 0x63, 0x6f, 0x20, 0x45, 0x32, 0x53, 0x69, 0x32, 0x31, 0x35, 0x37, 0x4c, 0x47,
		0x33, 0x32, 0x41, 0x6c, 0x62, 0x61, 0x41, 0x6c, 0x62, 0x61, 0x20, 0x35, 0x37, 0x35, 0x2e, 0x37,
		0x31, 0x30, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x54, 0x31, 0x30, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x41, 0x6c, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x34, 0x30, 0x38, 0x37, 0x55, 0x31, 0x53,
		0x45, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x6f, 0x70, 0x20, 0x53, 0x74, 0x61, 0x72, 0x36, 0x30, 0x34, 0x34, 0x44, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x55, 0x70, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x31, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x31, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d,
		0x35, 0x30, 0x33, 0x36, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x43, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x37, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x37, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x6f, 0x70, 0x20, 0x44, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x6f, 0x70, 0x20, 0x44, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x6f, 0x70, 0x20, 0x44, 0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f,
		0x70, 0x20, 0x32, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x32, 0x20, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x35, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53,
		0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20,
		0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x33,
		0x20, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70,
		0x20, 0x33, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x35, 0x30, 0x31, 0x35, 0x44, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f,
		0x70, 0x20, 0x34, 0x35, 0x30, 0x35, 0x31, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x53,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x2b,
		0x37, 0x30, 0x37, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x34, 0x20, 0x36, 0x22, 0x35, 0x30, 0x35, 0x37, 0x4d, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x4d, 0x69, 0x72, 0x61, 0x67, 0x65,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x53, 0x33,
		0x37, 0x30, 0x34, 0x35, 0x59, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x53, 0x37, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49,
		0x64, 0x6f, 0x6c, 0x20, 0x32, 0x35, 0x30, 0x34, 0x32, 0x54, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x35, 0x30, 0x32, 0x37, 0x42, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x44, 0x61, 0x77, 0x6e, 0x41, 0x37, 0x20, 0x58,
		0x4c, 0x31, 0x42, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4f, 0x6e, 0x79, 0x78, 0x56, 0x6f,
		0x6c, 0x74, 0x61, 0x34, 0x30, 0x33, 0x34, 0x54, 0x31, 0x45, 0x35, 0x30, 0x30, 0x32, 0x46, 0x31,
		0x41, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x34, 0x30, 0x36, 0x33, 0x46, 0x31, 0x4c, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x33, 0x4c, 0x41, 0x35, 0x37, 0x36, 0x43, 0x43, 0x4b, 0x6f, 0x72, 0x61,
		0x20, 0x41, 0x35, 0x37, 0x36, 0x43, 0x43, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x20, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x20, 0x34, 0x35, 0x30, 0x35, 0x34, 0x4e,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65,
		0x20, 0x58, 0x4c, 0x36, 0x30, 0x34, 0x32, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x20, 0x6d, 0x69, 0x6e,
		0x69, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20,
		0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20,
		0x32, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c,
		0x20, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c,
		0x20, 0x33, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x34, 0x36, 0x30, 0x37, 0x30, 0x4b, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x34, 0x53, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x35, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x35, 0x53, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x58, 0x2b, 0x38,
		0x30, 0x33, 0x30, 0x59, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x48, 0x65,
		0x72, 0x6f, 0x20, 0x32, 0x37, 0x30, 0x35, 0x35, 0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x43, 0x37, 0x30, 0x35, 0x33, 0x44, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x58, 0x31, 0x35, 0x30, 0x36, 0x35, 0x4e,
		0x54, 0x52, 0x55, 0x41, 0x35, 0x37, 0x34, 0x42, 0x4c, 0x52, 0x61, 0x76, 0x65, 0x6e, 0x41, 0x35,
		0x37, 0x37, 0x56, 0x4c, 0x5a, 0x69, 0x70, 0x41, 0x34, 0x36, 0x36, 0x42, 0x47, 0x50, 0x69, 0x78,
		0x69, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x65, 0x35, 0x30, 0x35, 0x36, 0x49, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x41, 0x35, 0x37, 0x30, 0x42, 0x4c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x41, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x54,
		0x45, 0x41, 0x35, 0x37, 0x31, 0x56, 0x4c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x41, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x47, 0x20, 0x4c,
		0x54, 0x45, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x46, 0x69, 0x72, 0x73, 0x74, 0x41, 0x34, 0x36, 0x34, 0x42, 0x47, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x47, 0x6c, 0x69, 0x74, 0x7a,
		0x41, 0x36, 0x32, 0x31, 0x42, 0x4c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x69, 0x78, 0x69, 0x20, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x34, 0x30, 0x31, 0x34, 0x44, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x32, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20,
		0x33, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69,
		0x78, 0x69, 0x20, 0x33, 0x20, 0x33, 0x2e, 0x35, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53,
		0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x33, 0x20, 0x34, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x20,
		0x34, 0x47, 0x39, 0x30, 0x30, 0x32, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x37, 0x22, 0x39, 0x30, 0x30, 0x37, 0x41, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20,
		0x37, 0x22, 0x20, 0x34, 0x47, 0x31, 0x54, 0x31, 0x54, 0x20, 0x31, 0x30, 0x54, 0x45, 0x4b, 0x45,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x39, 0x30, 0x30, 0x39, 0x41, 0x31, 0x54, 0x20, 0x37, 0x31,
		0x54, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x39, 0x30, 0x32, 0x32, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x38, 0x22, 0x39, 0x30,
		0x31, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78,
		0x69, 0x20, 0x33, 0x20, 0x31, 0x30, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x33, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x34, 0x22, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20,
		0x34, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69,
		0x78, 0x69, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20,
		0x35, 0x22, 0x20, 0x33, 0x47, 0x35, 0x30, 0x34, 0x31, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20,
		0x35, 0x2e, 0x35, 0x22, 0x20, 0x33, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x35, 0x22, 0x20, 0x34, 0x47, 0x35, 0x30, 0x39,
		0x38, 0x4f, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x41, 0x35, 0x30, 0x31, 0x44, 0x4c, 0x41, 0x35,
		0x30, 0x33, 0x44, 0x4c, 0x41, 0x31, 0x58, 0x41, 0x78, 0x65, 0x6c, 0x41, 0x33, 0x41, 0x33, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x33, 0x20, 0x58, 0x4c, 0x39, 0x32, 0x30, 0x33, 0x41, 0x41, 0x33,
		0x20, 0x37, 0x22, 0x20, 0x33, 0x47, 0x33, 0x54, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x39, 0x30, 0x32,
		0x36, 0x58, 0x41, 0x33, 0x20, 0x31, 0x30, 0x22, 0x41, 0x35, 0x41, 0x35, 0x20, 0x4c, 0x45, 0x44,
		0x35, 0x30, 0x38, 0x35, 0x4e, 0x41, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x45, 0x44, 0x41,
		0x37, 0x41, 0x33, 0x30, 0x35, 0x30, 0x34, 0x39, 0x53, 0x41, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x35, 0x30, 0x34, 0x39, 0x5a, 0x41, 0x33, 0x30, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65,
		0x41, 0x35, 0x30, 0x33, 0x58, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x35, 0x30, 0x34, 0x39,
		0x57, 0x52, 0x65, 0x76, 0x76, 0x6c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x36, 0x22, 0x20, 0x33, 0x47, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x36, 0x22, 0x20,
		0x33, 0x47, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x36, 0x22, 0x20, 0x34,
		0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20,
		0x34, 0x20, 0x37, 0x22, 0x20, 0x33, 0x47, 0x38, 0x30, 0x36, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x37, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x39, 0x30, 0x32, 0x34, 0x4f, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x37, 0x49, 0x32, 0x31, 0x33, 0x39, 0x30, 0x30, 0x35,
		0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20,
		0x38, 0x50, 0x33, 0x32, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x4f, 0x50, 0x20, 0x38, 0x50, 0x33, 0x31, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x37, 0x50, 0x33, 0x33, 0x30, 0x58, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x37, 0x53, 0x39, 0x30,
		0x32, 0x30, 0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x54, 0x72, 0x65,
		0x6b, 0x20, 0x48, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x47, 0x6f,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x57, 0x61, 0x76, 0x65, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c,
		0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x5f, 0x37, 0x36, 0x38, 0x54, 0x49,
		0x73, 0x6c, 0x61, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x54,
		0x72, 0x69, 0x62, 0x65, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x6f, 0x6e, 0x65, 0x5f,
		0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x35, 0x38, 0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x35, 0x38, 0x35, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x4f, 0x4e,
		0x45, 0x5f, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x5f, 0x38, 0x33, 0x38, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x33, 0x38, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f,
		0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x38, 0x31, 0x33, 0x64, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x31, 0x33, 0x44, 0x41, 0x4c, 0x43, 0x41,
		0x54, 0x45, 0x4c, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x38, 0x31,
		0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x31, 0x33, 0x4f, 0x54,
		0x38, 0x37, 0x31, 0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x37,
		0x31, 0x41, 0x50, 0x33, 0x36, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x6f, 0x70, 0x20, 0x31, 0x30, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x24, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x24, 0x31, 0x53, 0x68,
		0x69, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x49, 0x4d, 0x58, 0x4c, 0x54, 0x49, 0x4d,
		0x20, 0x58, 0x4c, 0x35, 0x30, 0x38, 0x35, 0x43, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x4d, 0x69, 0x78,
		0x55, 0x33, 0x55, 0x35, 0x55, 0x35, 0x20, 0x33, 0x47, 0x55, 0x35, 0x20, 0x48, 0x44, 0x34, 0x30,
		0x34, 0x37, 0x47, 0x55, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x34, 0x30, 0x34, 0x37, 0x41, 0x55,
		0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x20, 0x46, 0x6c, 0x69, 0x70,
		0x34, 0x30, 0x34, 0x34, 0x4f, 0x43, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x46, 0x6c,
		0x69, 0x70, 0x20, 0x32, 0x47, 0x6f, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x55, 0x35, 0x30, 0x35, 0x30,
		0x33, 0x33, 0x58, 0x52, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x31, 0x31, 0x43, 0x31,
		0x58, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x31, 0x56, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x31, 0x43, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x33, 0x43, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x31, 0x53, 0x31, 0x53, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x35, 0x30,
		0x33, 0x30, 0x45, 0x31, 0x53, 0x50, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x31, 0x53, 0x45,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x31, 0x56, 0x31, 0x58, 0x35, 0x30, 0x35, 0x39, 0x53,
		0x41, 0x76, 0x61, 0x6c, 0x6f, 0x6e, 0x20, 0x56, 0x35, 0x56, 0x33, 0x35, 0x30, 0x32, 0x39, 0x45,
		0x33, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x33, 0x4c, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x33, 0x56, 0x33, 0x43, 0x33, 0x58, 0x33, 0x58, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29,
		0x35, 0x36, 0x30, 0x36, 0x32, 0x57, 0x37, 0x33, 0x54, 0x20, 0x31, 0x30, 0x22, 0x38, 0x30, 0x39,
		0x34, 0x4d, 0x33, 0x54, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x39, 0x30, 0x32, 0x39, 0x5a, 0x4a,
		0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x4a, 0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x41,
		0x6c, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x20, 0x55, 0x50, 0x42, 0x69, 0x67, 0x20, 0x45, 0x61, 0x73,
		0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x35, 0x30, 0x34, 0x31, 0x43, 0x54, 0x45, 0x54, 0x52, 0x41,
		0x41, 0x6c, 0x63, 0x6f, 0x72, 0x41, 0x6c, 0x66, 0x61, 0x77, 0x69, 0x73, 0x65, 0x5a, 0x32, 0x38,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x43,
		0x61, 0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x53, 0x31, 0x5f, 0x58, 0x53,
		0x31, 0x20, 0x58, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x53, 0x31, 0x53, 0x31, 0x41,
		0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52, 0x49, 0x4f, 0x5f, 0x53, 0x52, 0x69, 0x6f, 0x20,
		0x53, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52, 0x49, 0x4f, 0x5f, 0x50, 0x52, 0x4f,
		0x52, 0x69, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52,
		0x49, 0x4f, 0x52, 0x69, 0x6f, 0x48, 0x65, 0x61, 0x74, 0x20, 0x24, 0x31, 0x52, 0x69, 0x6f, 0x20,
		0x58, 0x48, 0x6f, 0x74, 0x20, 0x24, 0x31, 0x41, 0x6c, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x62, 0x65,
		0x4d, 0x35, 0x58, 0x53, 0x6b, 0x50, 0x61, 0x64, 0x4d, 0x35, 0x53, 0x4d, 0x35, 0x4d, 0x35, 0x58,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x33, 0x55, 0x36, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x58, 0x20, 0x47, 0x61, 0x6d, 0x65,
		0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x41, 0x34, 0x59, 0x6f, 0x75, 0x41, 0x34, 0x20, 0x59,
		0x6f, 0x75, 0x41, 0x58, 0x32, 0x5f, 0x46, 0x72, 0x65, 0x6e, 0x7a, 0x79, 0x41, 0x58, 0x32, 0x20,
		0x46, 0x72, 0x65, 0x6e, 0x7a, 0x79, 0x41, 0x58, 0x35, 0x4e, 0x61, 0x6e, 0x6f, 0x51, 0x41, 0x58,
		0x35, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x51, 0x43, 0x36, 0x5f, 0x44, 0x75, 0x6f, 0x43, 0x36,
		0x20, 0x44, 0x75, 0x6f, 0x45, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x45, 0x33,
		0x5f, 0x4a, 0x75, 0x6d, 0x70, 0x45, 0x33, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x45, 0x33, 0x5f, 0x53,
		0x69, 0x67, 0x6e, 0x45, 0x33, 0x20, 0x53, 0x69, 0x67, 0x6e, 0x45, 0x34, 0x5f, 0x4c, 0x69, 0x74,
		0x65, 0x45, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x39, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
		0x63, 0x74, 0x4d, 0x39, 0x20, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x34, 0x33, 0x5f,
		0x45, 0x61, 0x73, 0x79, 0x50, 0x34, 0x33, 0x20, 0x45, 0x61, 0x73, 0x79, 0x50, 0x24, 0x31, 0x20,
		0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x50, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x36,
		0x5f, 0x70, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x5f, 0x51,
		0x6d, 0x61, 0x78, 0x50, 0x36, 0x20, 0x51, 0x6d, 0x61, 0x78, 0x50, 0x24, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x34, 0x5f, 0x51, 0x75, 0x61, 0x64, 0x50, 0x34, 0x20, 0x51, 0x75, 0x61, 0x64, 0x50,
		0x39, 0x5f, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x32, 0x30,
		0x31, 0x37, 0x50, 0x39, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x50, 0x39, 0x5f, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
		0x5f, 0x53, 0x50, 0x39, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x53, 0x50, 0x24, 0x31,
		0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x38, 0x5f, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x38, 0x20, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x24, 0x31, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x24, 0x31, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x50,
		0x37, 0x5f, 0x53, 0x65, 0x6f, 0x6e, 0x50, 0x37, 0x20, 0x53, 0x65, 0x6f, 0x6e, 0x50, 0x37, 0x5f,
		0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x50, 0x37, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x50,
		0x24, 0x31, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x50, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x66, 0x65, 0x50,
		0x31, 0x30, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x50, 0x31, 0x30, 0x5f, 0x4d, 0x61, 0x78, 0x50, 0x31,
		0x30, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x31, 0x30, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x31,
		0x30, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x56, 0x24, 0x31, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72,
		0x20, 0x49, 0x20, 0x34, 0x47, 0x56, 0x31, 0x5f, 0x56, 0x69, 0x70, 0x65, 0x72, 0x5f, 0x49, 0x56,
		0x31, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x49, 0x56, 0x24, 0x31, 0x20, 0x56, 0x69, 0x70,
		0x65, 0x72, 0x56, 0x32, 0x5f, 0x56, 0x69, 0x70, 0x65, 0x72, 0x5f, 0x58, 0x5f, 0x70, 0x6c, 0x75,
		0x73, 0x56, 0x32, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x56, 0x32, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x24, 0x31, 0x58, 0x34, 0x5f, 0x53, 0x6f,
		0x75, 0x6c, 0x5f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c,
		0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20,
		0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75,
		0x6c, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x53, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x58, 0x33, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x58, 0x33, 0x20,
		0x53, 0x6f, 0x75, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75,
		0x6c, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x32, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x53, 0x74, 0x79,
		0x6c, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x32, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x53,
		0x74, 0x79, 0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75,
		0x6c, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x58,
		0x32, 0x5f, 0x54, 0x77, 0x69, 0x6e, 0x58, 0x32, 0x20, 0x54, 0x77, 0x69, 0x6e, 0x41, 0x35, 0x20,
		0x45, 0x61, 0x73, 0x79, 0x41, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x35, 0x20, 0x52,
		0x65, 0x61, 0x64, 0x79, 0x41, 0x35, 0x53, 0x6d, 0x69, 0x6c, 0x65, 0x79, 0x41, 0x35, 0x20, 0x53,
		0x6d, 0x69, 0x6c, 0x65, 0x79, 0x41, 0x35, 0x5f, 0x51, 0x75, 0x61, 0x64, 0x5f, 0x50, 0x6c, 0x75,
		0x73, 0x5f, 0x54, 0x4d, 0x41, 0x35, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x41, 0x35, 0x5f, 0x51, 0x75, 0x61, 0x64, 0x41, 0x35, 0x20, 0x51, 0x75, 0x61, 0x64, 0x41, 0x36,
		0x5f, 0x44, 0x75, 0x6f, 0x41, 0x36, 0x20, 0x44, 0x75, 0x6f, 0x41, 0x31, 0x30, 0x5f, 0x4c, 0x69,
		0x74, 0x65, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x41, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x32,
		0x47, 0x42, 0x41, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x31, 0x30, 0x5f, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x31, 0x30, 0x5f, 0x4d, 0x61,
		0x78, 0x41, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x20, 0x53,
		0x41, 0x4c, 0x4c, 0x56, 0x49, 0x45, 0x57, 0x20, 0x50, 0x34, 0x69, 0x41, 0x6c, 0x6c, 0x44, 0x72,
		0x6f, 0x20, 0x50, 0x34, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x50, 0x32, 0x41, 0x6c,
		0x6c, 0x44, 0x72, 0x6f, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x43, 0x69, 0x74, 0x79, 0x50,
		0x6c, 0x75, 0x73, 0x43, 0x69, 0x74, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c, 0x6c, 0x76,
		0x69, 0x65, 0x77, 0x43, 0x69, 0x74, 0x79, 0x43, 0x69, 0x74, 0x79, 0x41, 0x6c, 0x6c, 0x76, 0x69,
		0x65, 0x77, 0x41, 0x58, 0x32, 0x46, 0x72, 0x65, 0x6e, 0x7a, 0x79, 0x41, 0x6c, 0x6c, 0x76, 0x69,
		0x65, 0x77, 0x32, 0x53, 0x70, 0x65, 0x65, 0x64, 0x44, 0x75, 0x6f, 0x41, 0x6c, 0x6c, 0x64, 0x72,
		0x6f, 0x20, 0x32, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x41, 0x6c, 0x6c,
		0x76, 0x69, 0x65, 0x77, 0x33, 0x53, 0x70, 0x65, 0x65, 0x64, 0x51, 0x75, 0x61, 0x64, 0x41, 0x6c,
		0x6c, 0x64, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x51, 0x75, 0x61,
		0x64, 0x48, 0x31, 0x30, 0x30, 0x33, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x69,
		0x76, 0x61, 0x20, 0x48, 0x31, 0x30, 0x30, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x50, 0x72, 0x6f,
		0x56, 0x69, 0x76, 0x61, 0x5f, 0x31, 0x30, 0x30, 0x33, 0x47, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x56,
		0x69, 0x76, 0x61, 0x20, 0x31, 0x30, 0x30, 0x33, 0x47, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x69,
		0x76, 0x61, 0x20, 0x24, 0x31, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x49, 0x53, 0x70, 0x65, 0x65,
		0x64, 0x41, 0x4c, 0x4c, 0x56, 0x49, 0x45, 0x57, 0x53, 0x50, 0x45, 0x45, 0x44, 0x41, 0x58, 0x34,
		0x4e, 0x61, 0x6e, 0x6f, 0x41, 0x58, 0x34, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x41, 0x4c, 0x4c, 0x56,
		0x49, 0x45, 0x57, 0x5f, 0x54, 0x58, 0x31, 0x5f, 0x51, 0x75, 0x61, 0x73, 0x61, 0x72, 0x54, 0x58,
		0x31, 0x20, 0x51, 0x75, 0x61, 0x73, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x77, 0x69, 0x6e, 0x6e, 0x65,
		0x72, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x41, 0x36, 0x34, 0x20, 0x70,
		0x33, 0x41, 0x36, 0x34, 0x20, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x70,
		0x33, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x41, 0x33, 0x33, 0x20, 0x79,
		0x33, 0x41, 0x33, 0x33, 0x20, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x79,
		0x33, 0x5a, 0x59, 0x2d, 0x30, 0x37, 0x42, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4f, 0x63, 0x74, 0x61,
		0x2d, 0x54, 0x38, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x20, 0x54, 0x38,
		0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x4b, 0x32, 0x30,
		0x30, 0x31, 0x6f, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20,
		0x4b, 0x32, 0x30, 0x30, 0x31, 0x4f, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20,
		0x54, 0x33, 0x20, 0x4b, 0x24, 0x31, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20,
		0x54, 0x33, 0x20, 0x70, 0x31, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54,
		0x33, 0x20, 0x50, 0x31, 0x4f, 0x43, 0x54, 0x41, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x38,
		0x4f, 0x43, 0x54, 0x4f, 0x50, 0x55, 0x53, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x38, 0x51,
		0x75, 0x61, 0x64, 0x43, 0x6f, 0x72, 0x65, 0x2d, 0x52, 0x31, 0x36, 0x51, 0x55, 0x41, 0x44, 0x2d,
		0x43, 0x4f, 0x52, 0x45, 0x20, 0x52, 0x31, 0x36, 0x41, 0x6c, 0x70, 0x73, 0x41, 0x6c, 0x74, 0x69,
		0x63, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x41, 0x46, 0x54, 0x41, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x54, 0x56, 0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x31, 0x29,
		0x41, 0x46, 0x54, 0x52, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x43, 0x75, 0x62, 0x65,
		0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x41, 0x46, 0x54, 0x4e, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x54, 0x56, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x41, 0x46, 0x54, 0x42, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x31, 0x29, 0x41, 0x46,
		0x54, 0x53, 0x53, 0x53, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63,
		0x6b, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x41, 0x46, 0x54, 0x53, 0x53, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x31, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20,
		0x53, 0x74, 0x69, 0x63, 0x6b, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69,
		0x63, 0x6b, 0x20, 0x34, 0x4b, 0x41, 0x46, 0x54, 0x4b, 0x41, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54,
		0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x37, 0x22, 0x46, 0x69, 0x72, 0x65, 0x20, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48,
		0x44, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20,
		0x38, 0x2e, 0x39, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20,
		0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x2e, 0x39, 0x22, 0x20, 0x34, 0x47, 0x4b,
		0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x37, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x58, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64,
		0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x37, 0x22, 0x20, 0x34,
		0x47, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58,
		0x20, 0x38, 0x2e, 0x39, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65,
		0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39, 0x22, 0x20, 0x34,
		0x47, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x36, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48,
		0x44, 0x20, 0x37, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x37, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x37, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x35, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x36, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x37, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x38, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x30, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39, 0x20, 0x34, 0x47, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20,
		0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44,
		0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48,
		0x44, 0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x53, 0x44, 0x34, 0x39, 0x33, 0x30, 0x55, 0x52, 0x46, 0x69, 0x72, 0x65, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x4b, 0x69,
		0x6e, 0x64, 0x6c, 0x65, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65,
		0x72, 0x45, 0x63, 0x68, 0x6f, 0x45, 0x63, 0x68, 0x6f, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x38,
		0x41, 0x6c, 0x65, 0x78, 0x61, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
		0x41, 0x6c, 0x65, 0x78, 0x61, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x6f, 0x41, 0x6d, 0x69, 0x6e, 0x6f,
		0x41, 0x6d, 0x69, 0x67, 0x6f, 0x37, 0x78, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x20, 0x37, 0x78, 0x41,
		0x6d, 0x69, 0x67, 0x6f, 0x37, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x20, 0x37, 0x41, 0x6d, 0x6f, 0x69,
		0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x37, 0x41, 0x38, 0x36,
		0x32, 0x57, 0x43, 0x4c, 0x45, 0x56, 0x45, 0x52, 0x20, 0x4a, 0x4f, 0x59, 0x20, 0x53, 0x34, 0x30,
		0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20, 0x4a, 0x6f, 0x79, 0x20, 0x53, 0x34, 0x30, 0x43, 0x6c,
		0x65, 0x76, 0x65, 0x72, 0x20, 0x24, 0x31, 0x41, 0x6e, 0x64, 0x6f, 0x77, 0x6c, 0x41, 0x6e, 0x67,
		0x65, 0x6c, 0x63, 0x61, 0x72, 0x65, 0x46, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6e, 0x6b,
		0x65, 0x72, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x20, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x62, 0x61,
		0x72, 0x41, 0x6e, 0x72, 0x79, 0x41, 0x6f, 0x63, 0x6f, 0x73, 0x41, 0x6f, 0x73, 0x6f, 0x6e, 0x52,
		0x31, 0x30, 0x24, 0x31, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x53, 0x37, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x37, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x48, 0x6f, 0x6d, 0x65,
		0x50, 0x6f, 0x64, 0x41, 0x69, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x31,
		0x2c, 0x31, 0x77, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x31, 0x2c, 0x32, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x32, 0x2c, 0x36, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x31, 0x20, 0x33, 0x38, 0x6d,
		0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x32, 0x2c, 0x37, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53,
		0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x31, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x32, 0x2c, 0x33, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
		0x20, 0x32, 0x20, 0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x32, 0x2c, 0x34, 0x57,
		0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x32, 0x20, 0x34, 0x32,
		0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x33,
		0x20, 0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65,
		0x73, 0x20, 0x33, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x45,
		0x20, 0x34, 0x30, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x45, 0x20, 0x34, 0x34,
		0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x24,
		0x31, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69,
		0x65, 0x73, 0x20, 0x24, 0x31, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x37, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x37, 0x20, 0x34, 0x35, 0x6d, 0x6d,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30,
		0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37,
		0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d,
		0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x32, 0x30, 0x31, 0x32, 0x29,
		0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20,
		0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32,
		0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32,
		0x30, 0x30, 0x37, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x69,
		0x4d, 0x61, 0x63, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32,
		0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31,
		0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32,
		0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31,
		0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32,
		0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31,
		0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x2d, 0x32, 0x30, 0x31, 0x33, 0x29, 0x69,
		0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x69, 0x4d,
		0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x29, 0x69,
		0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x29, 0x69, 0x4d,
		0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x34, 0x29, 0x69,
		0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x69, 0x4d,
		0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x69,
		0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x69, 0x4d,
		0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x69, 0x4d, 0x61,
		0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x69, 0x4d,
		0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x69, 0x4d, 0x61,
		0x63, 0x20, 0x32, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x69, 0x4d, 0x61, 0x63,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x30, 0x36, 0x2d, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61,
		0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x32, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x32, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61,
		0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33,
		0x2d, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69,
		0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x35, 0x2d, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41,
		0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30,
		0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32,
		0x2d, 0x32, 0x30, 0x31, 0x33, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x2d, 0x32, 0x30, 0x31, 0x33,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x33, 0x2d, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38,
		0x2d, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x2d, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x36, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x36, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x34, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32,
		0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30,
		0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x30,
		0x39, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30,
		0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29,
		0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d,
		0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61,
		0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x61, 0x63,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x4d, 0x61, 0x63, 0x69, 0x6e, 0x74, 0x6f, 0x73, 0x68, 0x20, 0x47, 0x35, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x33, 0x29, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x63, 0x69, 0x6e,
		0x74, 0x6f, 0x73, 0x68, 0x20, 0x47, 0x35, 0x20, 0x28, 0x32, 0x30, 0x30, 0x34, 0x2d, 0x32, 0x30,
		0x30, 0x35, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x47, 0x35, 0x20, 0x28, 0x32, 0x30, 0x30, 0x35,
		0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x47, 0x34, 0x20, 0x28, 0x32, 0x30,
		0x30, 0x35, 0x29, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x34, 0x20,
		0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x69, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x34, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x35, 0x29, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x33, 0x47, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x53, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x53, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x43,
		0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x36, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x45, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x38, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58,
		0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x58, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x52, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x45, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x69, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31,
		0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x31, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33,
		0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x45, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29,
		0x69, 0x50, 0x61, 0x64, 0x69, 0x50, 0x61, 0x64, 0x20, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x33, 0x69, 0x50, 0x61, 0x64, 0x20, 0x34, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x35, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x20,
		0x31, 0x32, 0x2e, 0x39, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e,
		0x35, 0x69, 0x50, 0x61, 0x64, 0x20, 0x36, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x37, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32,
		0x20, 0x31, 0x31, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x31,
		0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x33, 0x20, 0x31, 0x31, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x20,
		0x31, 0x32, 0x2e, 0x39, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x20,
		0x31, 0x31, 0x2e, 0x30, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x31,
		0x32, 0x2e, 0x39, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x35, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x33, 0x69, 0x50, 0x61, 0x64, 0x20, 0x38, 0x20, 0x31,
		0x30, 0x2e, 0x32, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x39, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x39, 0x20, 0x31, 0x30, 0x2e, 0x32,
		0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x31, 0x32, 0x2e, 0x39,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x35,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x35, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x34, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x34, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x36, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x36, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x32, 0x41, 0x70, 0x70,
		0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x33, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20,
		0x34, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x41, 0x70, 0x70, 0x6c,
		0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x41, 0x70,
		0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x69, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x69, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x35, 0x30, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75,
		0x6d, 0x20, 0x34, 0x47, 0x34, 0x35, 0x20, 0x4e, 0x65, 0x6f, 0x6e, 0x31, 0x30, 0x31, 0x42, 0x20,
		0x48, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x34, 0x47, 0x35, 0x30, 0x42, 0x20, 0x48, 0x65, 0x6c,
		0x69, 0x75, 0x6d, 0x20, 0x34, 0x47, 0x38, 0x30, 0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x31,
		0x30, 0x31, 0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x20, 0x34, 0x47, 0x31, 0x30, 0x31, 0x73,
		0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x41, 0x72, 0x69, 0x61, 0x6e, 0x20, 0x53, 0x70, 0x61,
		0x63, 0x65, 0x31, 0x30, 0x30, 0x20, 0x53, 0x54, 0x31, 0x30, 0x30, 0x34, 0x50, 0x47, 0x31, 0x30,
		0x30, 0x38, 0x30, 0x20, 0x53, 0x53, 0x38, 0x30, 0x30, 0x33, 0x50, 0x47, 0x38, 0x30, 0x37, 0x31,
		0x20, 0x53, 0x54, 0x37, 0x30, 0x30, 0x32, 0x50, 0x47, 0x37, 0x31, 0x37, 0x30, 0x20, 0x53, 0x54,
		0x37, 0x30, 0x30, 0x31, 0x52, 0x57, 0x37, 0x30, 0x41, 0x72, 0x6b, 0x42, 0x65, 0x6e, 0x65, 0x66,
		0x69, 0x74, 0x20, 0x24, 0x31, 0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x50, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x24, 0x31, 0x45, 0x64,
		0x67, 0x65, 0x20, 0x24, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x57, 0x69, 0x7a, 0x61,
		0x72, 0x64, 0x20, 0x24, 0x31, 0x45, 0x6c, 0x66, 0x20, 0x53, 0x38, 0x55, 0x6b, 0x6f, 0x7a, 0x69,
		0x20, 0x55, 0x35, 0x41, 0x72, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x72, 0x6e, 0x6f, 0x76,
		0x61, 0x41, 0x52, 0x43, 0x48, 0x4d, 0x39, 0x30, 0x31, 0x4d, 0x39, 0x30, 0x31, 0x41, 0x4e, 0x37,
		0x43, 0x47, 0x32, 0x37, 0x63, 0x20, 0x47, 0x32, 0x37, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x37, 0x47,
		0x33, 0x37, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x42, 0x47, 0x33, 0x37, 0x62, 0x20, 0x47, 0x33,
		0x41, 0x4e, 0x37, 0x43, 0x47, 0x33, 0x37, 0x63, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x44, 0x47,
		0x33, 0x2d, 0x43, 0x50, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x70, 0x61, 0x64, 0x41, 0x4e, 0x37, 0x44,
		0x47, 0x33, 0x37, 0x64, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x46, 0x47, 0x33, 0x37, 0x66, 0x20,
		0x47, 0x33, 0x41, 0x4e, 0x37, 0x48, 0x47, 0x33, 0x37, 0x68, 0x20, 0x47, 0x33, 0x41, 0x38, 0x30,
		0x4b, 0x53, 0x43, 0x38, 0x41, 0x4e, 0x38, 0x47, 0x32, 0x38, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x38,
		0x47, 0x33, 0x38, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x38, 0x42, 0x47, 0x33, 0x38, 0x62, 0x20, 0x47,
		0x33, 0x41, 0x4e, 0x38, 0x43, 0x47, 0x33, 0x38, 0x63, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x39, 0x47,
		0x32, 0x49, 0x39, 0x69, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x39, 0x47, 0x32, 0x39, 0x20, 0x47, 0x32,
		0x41, 0x4e, 0x39, 0x47, 0x33, 0x39, 0x20, 0x47, 0x33, 0x31, 0x30, 0x20, 0x47, 0x32, 0x41, 0x31,
		0x30, 0x31, 0x42, 0x31, 0x30, 0x31, 0x30, 0x62, 0x20, 0x47, 0x32, 0x31, 0x30, 0x62, 0x20, 0x47,
		0x33, 0x41, 0x4e, 0x31, 0x30, 0x43, 0x47, 0x33, 0x31, 0x30, 0x63, 0x20, 0x47, 0x33, 0x41, 0x4e,
		0x31, 0x30, 0x44, 0x47, 0x33, 0x31, 0x30, 0x64, 0x20, 0x47, 0x33, 0x41, 0x52, 0x4e, 0x4f, 0x56,
		0x41, 0x20, 0x39, 0x30, 0x47, 0x33, 0x39, 0x30, 0x20, 0x47, 0x33, 0x41, 0x52, 0x4e, 0x4f, 0x56,
		0x41, 0x20, 0x39, 0x30, 0x20, 0x47, 0x34, 0x39, 0x30, 0x20, 0x47, 0x34, 0x41, 0x52, 0x4e, 0x4f,
		0x56, 0x41, 0x20, 0x39, 0x37, 0x47, 0x34, 0x39, 0x37, 0x20, 0x47, 0x34, 0x41, 0x52, 0x4e, 0x4f,
		0x56, 0x41, 0x20, 0x31, 0x30, 0x31, 0x20, 0x47, 0x34, 0x31, 0x30, 0x31, 0x20, 0x47, 0x34, 0x41,
		0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x41, 0x72, 0x74, 0x65, 0x6c, 0x47, 0x61, 0x70, 0x20, 0x59,
		0x6f, 0x20, 0x51, 0x55, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x55, 0x34, 0x41, 0x6c, 0x6c, 0x6f,
		0x4b, 0x6f, 0x6d, 0x69, 0x20, 0x33, 0x51, 0x32, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x72, 0x74,
		0x69, 0x7a, 0x6c, 0x65, 0x65, 0x41, 0x54, 0x4c, 0x2d, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x53, 0x39, 0x41, 0x73, 0x61, 0x6e, 0x6f, 0x24, 0x31, 0x24, 0x32, 0x20, 0x24, 0x31, 0x2e, 0x30,
		0x22, 0x41, 0x73, 0x61, 0x6e, 0x7a, 0x6f, 0x53, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x73,
		0x6b, 0x37, 0x39, 0x31, 0x53, 0x50, 0x20, 0x33, 0x47, 0x41, 0x73, 0x70, 0x65, 0x72, 0x61, 0x57,
		0x72, 0x65, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x41, 0x73, 0x70, 0x65,
		0x72, 0x41, 0x67, 0x69, 0x6f, 0x43, 0x6c, 0x75, 0x62, 0x41, 0x53, 0x2d, 0x36, 0x30, 0x31, 0x4c,
		0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x20, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
		0x53, 0x75, 0x72, 0x66, 0x55, 0x6e, 0x61, 0x6d, 0x69, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x53, 0x68,
		0x6f, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x69,
		0x64, 0x52, 0x69, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x52, 0x69, 0x74, 0x6d, 0x41, 0x53,
		0x2d, 0x35, 0x34, 0x31, 0x32, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x50, 0x2d, 0x37, 0x32, 0x31, 0x4e,
		0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x50, 0x2d, 0x39, 0x34, 0x31, 0x43, 0x65, 0x74, 0x75,
		0x73, 0x41, 0x50, 0x2d, 0x31, 0x30, 0x36, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x73, 0x74,
		0x72, 0x6f, 0x41, 0x73, 0x75, 0x73, 0x45, 0x65, 0x65, 0x20, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x65,
		0x4d, 0x4f, 0x20, 0x31, 0x37, 0x31, 0x5a, 0x39, 0x30, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x4d, 0x45, 0x31, 0x37, 0x32, 0x56, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x4d, 0x65,
		0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x48, 0x44, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x4d,
		0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45,
		0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x31,
		0x30, 0x5a, 0x31, 0x30, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x5a, 0x31, 0x30, 0x31, 0x58,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x65, 0x4d, 0x4f, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x37, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30,
		0x20, 0x4d, 0x45, 0x31, 0x30, 0x33, 0x4b, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x48, 0x44, 0x20, 0x37, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x4d, 0x65,
		0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x39, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x48, 0x44, 0x20, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d,
		0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x54, 0x72, 0x61, 0x6e, 0x73,
		0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x37, 0x30, 0x31,
		0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x54, 0x46, 0x31, 0x30, 0x33, 0x43, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
		0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x31, 0x30, 0x33, 0x43, 0x47, 0x54, 0x72,
		0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46,
		0x33, 0x30, 0x30, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x33, 0x30, 0x33, 0x4b, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72,
		0x20, 0x53, 0x4c, 0x31, 0x30, 0x31, 0x45, 0x65, 0x65, 0x20, 0x50, 0x61, 0x64, 0x20, 0x53, 0x6c,
		0x69, 0x64, 0x65, 0x72, 0x20, 0x53, 0x4c, 0x31, 0x30, 0x31, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64,
		0x20, 0x43, 0x20, 0x37, 0x2e, 0x30, 0x50, 0x30, 0x30, 0x38, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64,
		0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x5a, 0x38, 0x50, 0x30, 0x30, 0x31, 0x5a, 0x65, 0x6e,
		0x50, 0x61, 0x64, 0x20, 0x5a, 0x31, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x5a, 0x38,
		0x73, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61,
		0x64, 0x20, 0x38, 0x2e, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x53, 0x20, 0x38, 0x2e,
		0x30, 0x50, 0x30, 0x32, 0x37, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x33, 0x53, 0x20, 0x31,
		0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x33, 0x53, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54,
		0x45, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x41, 0x53, 0x55, 0x53, 0x20, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x50, 0x31, 0x38, 0x30, 0x31, 0x2d, 0x54, 0x54, 0x72, 0x61,
		0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x69, 0x4f, 0x20, 0x50, 0x31, 0x38,
		0x30, 0x31, 0x20, 0x31, 0x38, 0x2e, 0x34, 0x22, 0x41, 0x53, 0x55, 0x53, 0x20, 0x54, 0x41, 0x42,
		0x20, 0x41, 0x38, 0x54, 0x41, 0x42, 0x20, 0x41, 0x38, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64,
		0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x36, 0x46, 0x6f,
		0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x37, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x37,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64,
		0x20, 0x38, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x50, 0x61, 0x64, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x58,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x54, 0x30, 0x30,
		0x38, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x45, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x54, 0x30, 0x30, 0x34, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x41, 0x52,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x38, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x38, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x56,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x56, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x43, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x4d, 0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x4d, 0x32, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x45, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x4c, 0x69, 0x76, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x76, 0x65,
		0x20, 0x4c, 0x31, 0x47, 0x35, 0x35, 0x33, 0x4b, 0x4c, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4c, 0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x32, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x5a, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x4d, 0x61, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4d, 0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x32, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46,
		0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f,
		0x20, 0x4c, 0x69, 0x66, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x20,
		0x54, 0x56, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75,
		0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73,
		0x20, 0x35, 0x30, 0x30, 0x30, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67,
		0x61, 0x73, 0x75, 0x73, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x20, 0x33, 0x53, 0x20, 0x4d, 0x61,
		0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x44, 0x65, 0x6c, 0x75, 0x78, 0x65, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x33, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x61,
		0x73, 0x65, 0x72, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x53, 0x65, 0x6c, 0x66,
		0x69, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20,
		0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20,
		0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x4d, 0x61, 0x78,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x50,
		0x72, 0x6f, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x52, 0x4f,
		0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x32, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x52, 0x4f, 0x47,
		0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x5a, 0x4e, 0x32, 0x32, 0x30, 0x49, 0x43, 0x5a,
		0x65, 0x6e, 0x20, 0x41, 0x69, 0x4f, 0x20, 0x5a, 0x4e, 0x32, 0x32, 0x30, 0x49, 0x43, 0x5a, 0x65,
		0x6e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x24, 0x31, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
		0x6d, 0x65, 0x72, 0x20, 0x24, 0x31, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
		0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x24, 0x31, 0x41, 0x74, 0x6d, 0x61, 0x63, 0x61, 0x20, 0x45,
		0x6c, 0x65, 0x6b, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x6b, 0x41, 0x54, 0x4d, 0x41, 0x43, 0x41, 0x5f,
		0x41, 0x74, 0x6f, 0x6d, 0x41, 0x74, 0x76, 0x69, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x76, 0x6f,
		0x78, 0x43, 0x44, 0x4d, 0x2d, 0x24, 0x31, 0x41, 0x75, 0x74, 0x61, 0x6e, 0x41, 0x76, 0x65, 0x6e,
		0x7a, 0x6f, 0x4d, 0x6f, 0x62, 0x20, 0x34, 0x20, 0x34, 0x47, 0x4d, 0x6f, 0x62, 0x20, 0x34, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x41, 0x76, 0x76, 0x69, 0x6f, 0x43, 0x48, 0x49, 0x56, 0x41,
		0x53, 0x5f, 0x35, 0x35, 0x43, 0x68, 0x69, 0x76, 0x61, 0x73, 0x20, 0x35, 0x35, 0x4d, 0x69, 0x6e,
		0x74, 0x5f, 0x4d, 0x33, 0x35, 0x33, 0x4d, 0x69, 0x6e, 0x74, 0x20, 0x4d, 0x33, 0x35, 0x33, 0x43,
		0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x69, 0x61, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x43, 0x6f, 0x6c, 0x6f,
		0x6d, 0x62, 0x69, 0x61, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x50, 0x41, 0x44, 0x41, 0x77,
		0x6f, 0x77, 0x41, 0x78, 0x69, 0x6f, 0x6f, 0x50, 0x69, 0x63, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x24, 0x31, 0x50, 0x49, 0x43, 0x4f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x4d, 0x32, 0x50,
		0x69, 0x63, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x32, 0x20, 0x4d, 0x50, 0x69, 0x63,
		0x6f, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x41, 0x78, 0x78, 0x69, 0x6f, 0x6e,
		0x41, 0x54, 0x41, 0x42, 0x2d, 0x24, 0x31, 0x41, 0x7a, 0x75, 0x6d, 0x69, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x53, 0x50, 0x45, 0x45, 0x44, 0x35, 0x35, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20,
		0x35, 0x2e, 0x35, 0x22, 0x41, 0x35, 0x30, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x35, 0x30, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x42, 0x42, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20,
		0x37, 0x2e, 0x30, 0x22, 0x20, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x20, 0x4c, 0x54, 0x45,
		0x20, 0x53, 0x37, 0x30, 0x30, 0x42, 0x46, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x31, 0x30,
		0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x54, 0x51, 0x30, 0x36, 0x30, 0x58, 0x54, 0x65,
		0x63, 0x68, 0x6e, 0x6f, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72,
		0x20, 0x4c, 0x54, 0x45, 0x20, 0x54, 0x51, 0x38, 0x36, 0x33, 0x51, 0x54, 0x65, 0x63, 0x68, 0x6e,
		0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x4c, 0x54, 0x45, 0x20,
		0x49, 0x37, 0x30, 0x30, 0x41, 0x4a, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x38,
		0x35, 0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x49, 0x37, 0x38, 0x35, 0x41, 0x50, 0x54, 0x65,
		0x63, 0x68, 0x6e, 0x6f, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x58,
		0x38, 0x30, 0x30, 0x42, 0x4a, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x49, 0x31, 0x30, 0x31, 0x42, 0x49, 0x54, 0x65, 0x63,
		0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4b, 0x61, 0x6c, 0x61, 0x73, 0x68, 0x20,
		0x4c, 0x54, 0x45, 0x20, 0x54, 0x51, 0x37, 0x36, 0x33, 0x49, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f,
		0x20, 0x24, 0x31, 0x22, 0x20, 0x33, 0x47, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x33, 0x47, 0x20, 0x58, 0x35, 0x39, 0x35, 0x42, 0x54, 0x42, 0x42, 0x4b,
		0x24, 0x31, 0x4c, 0x45, 0x58, 0x2d, 0x24, 0x32, 0x2f, 0x24, 0x33, 0x42, 0x44, 0x46, 0x42, 0x4b,
		0x39, 0x36, 0x30, 0x4e, 0x20, 0x4d, 0x54, 0x24, 0x31, 0x42, 0x44, 0x51, 0x53, 0x4d, 0x41, 0x52,
		0x54, 0x5f, 0x42, 0x31, 0x39, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x42, 0x31, 0x39, 0x44, 0x65,
		0x73, 0x74, 0x69, 0x6e, 0x79, 0x42, 0x44, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x44,
		0x53, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x47, 0x48, 0x59, 0x24, 0x31, 0x59, 0x37, 0x31,
		0x30, 0x20, 0x4b, 0x49, 0x44, 0x53, 0x59, 0x37, 0x31, 0x30, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x4a,
		0x4f, 0x59, 0x20, 0x58, 0x32, 0x4a, 0x6f, 0x79, 0x20, 0x58, 0x32, 0x42, 0x49, 0x48, 0x45, 0x45,
		0x42, 0x4d, 0x41, 0x58, 0x4d, 0x61, 0x78, 0x50, 0x61, 0x64, 0x20, 0x49, 0x31, 0x30, 0x20, 0x24,
		0x31, 0x42, 0x53, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x52, 0x75, 0x6e, 0x65, 0x20, 0x24,
		0x31, 0x42, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x20, 0x26, 0x20, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x4e,
		0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x42, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x65, 0x65, 0x6c,
		0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54,
		0x61, 0x62, 0x45, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x46, 0x61, 0x73, 0x74, 0x20, 0x32, 0x46, 0x61, 0x73,
		0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x38, 0x20, 0x41, 0x32, 0x33, 0x39, 0x73, 0x42, 0x65,
		0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x47, 0x54, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x54, 0x31,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x47, 0x54, 0x20, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x54, 0x20, 0x4b, 0x69, 0x6e, 0x67, 0x42, 0x65, 0x65, 0x74, 0x65, 0x6c, 0x42,
		0x65, 0x69, 0x73, 0x74, 0x61, 0x42, 0x65, 0x6c, 0x6c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x50,
		0x20, 0x31, 0x30, 0x30, 0x20, 0x58, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x65, 0x6e, 0x51, 0x46,
		0x24, 0x31, 0x42, 0x65, 0x6e, 0x51, 0x2d, 0x53, 0x69, 0x65, 0x6d, 0x65, 0x6e, 0x73, 0x42, 0x65,
		0x6e, 0x63, 0x6f, 0x41, 0x45, 0x39, 0x39, 0x35, 0x30, 0x56, 0x36, 0x30, 0x41, 0x45, 0x39, 0x30,
		0x31, 0x30, 0x56, 0x38, 0x30, 0x42, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x65, 0x42, 0x65, 0x6e, 0x7a,
		0x6f, 0x42, 0x65, 0x79, 0x6f, 0x6e, 0x64, 0x53, 0x75, 0x72, 0x76, 0x65, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x75, 0x72, 0x76, 0x65, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x6d, 0x65, 0x39,
		0x48, 0x6f, 0x6d, 0x65, 0x20, 0x39, 0x42, 0x65, 0x7a, 0x6b, 0x61, 0x6d, 0x42, 0x69, 0x67, 0x62,
		0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x2d, 0x4f, 0x6e, 0x65, 0x42, 0x69, 0x6c,
		0x69, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x69, 0x6c, 0x69, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x70, 0x74, 0x75,
		0x72, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x69, 0x6f, 0x52, 0x75, 0x67, 0x67, 0x65, 0x64,
		0x42, 0x69, 0x6f, 0x57, 0x6f, 0x6c, 0x66, 0x20, 0x38, 0x2d, 0x46, 0x33, 0x30, 0x52, 0x75, 0x67,
		0x67, 0x62, 0x6f, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x69, 0x72, 0x64, 0x42,
		0x69, 0x74, 0x65, 0x6c, 0x42, 0x69, 0x74, 0x6d, 0x6f, 0x72, 0x65, 0x24, 0x31, 0x20, 0x24, 0x32,
		0x43, 0x20, 0x33, 0x47, 0x54, 0x61, 0x62, 0x31, 0x30, 0x31, 0x31, 0x51, 0x20, 0x49, 0x49, 0x43,
		0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x42, 0x69, 0x74, 0x74, 0x69, 0x75,
		0x6d, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x32, 0x42,
		0x6b, 0x61, 0x76, 0x42, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63,
		0x6b, 0x20, 0x42, 0x65, 0x61, 0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x46, 0x6f, 0x78, 0x42,
		0x4d, 0x4d, 0x34, 0x34, 0x33, 0x44, 0x42, 0x37, 0x20, 0x46, 0x6f, 0x78, 0x2b, 0x42, 0x38, 0x20,
		0x46, 0x6f, 0x78, 0x42, 0x38, 0x20, 0x46, 0x6f, 0x78, 0x2b, 0x42, 0x4d, 0x4d, 0x34, 0x34, 0x31,
		0x57, 0x42, 0x38, 0x4d, 0x42, 0x4d, 0x4d, 0x34, 0x34, 0x32, 0x44, 0x42, 0x37, 0x42, 0x4d, 0x4d,
		0x35, 0x33, 0x31, 0x44, 0x42, 0x36, 0x42, 0x4d, 0x4d, 0x35, 0x33, 0x31, 0x41, 0x42, 0x35, 0x42,
		0x4d, 0x4d, 0x35, 0x34, 0x31, 0x41, 0x42, 0x35, 0x2b, 0x42, 0x34, 0x42, 0x4d, 0x4d, 0x34, 0x34,
		0x31, 0x44, 0x42, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31, 0x42,
		0x42, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4e, 0x46, 0x43, 0x42, 0x4d, 0x4d, 0x35, 0x33,
		0x31, 0x42, 0x42, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x42, 0x4d, 0x4d, 0x35, 0x34, 0x32, 0x44, 0x42, 0x33, 0x2b, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31,
		0x44, 0x42, 0x33, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31, 0x57, 0x42, 0x37, 0x52, 0x20, 0x46, 0x6f,
		0x78, 0x42, 0x4d, 0x4d, 0x20, 0x35, 0x33, 0x32, 0x20, 0x53, 0x42, 0x4d, 0x4d, 0x20, 0x35, 0x33,
		0x32, 0x53, 0x42, 0x4d, 0x4d, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x76, 0x69, 0x65,
		0x77, 0x41, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x36, 0x30, 0x41, 0x38, 0x20, 0x4d, 0x61,
		0x78, 0x41, 0x38, 0x30, 0x53, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x24, 0x31, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x42, 0x56, 0x39, 0x30, 0x30, 0x30, 0x50, 0x72, 0x6f, 0x2d, 0x46, 0x42, 0x56,
		0x39, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x46, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x75, 0x70, 0x75, 0x6e,
		0x6b, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x31, 0x31, 0x31, 0x43,
		0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x41, 0x31, 0x30, 0x2e, 0x33, 0x30,
		0x32, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x31, 0x30, 0x30, 0x30, 0x43,
		0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x31, 0x30, 0x30, 0x31, 0x41, 0x44,
		0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x31, 0x30, 0x30, 0x31, 0x53, 0x6f, 0x75,
		0x6e, 0x64, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x32, 0x45, 0x6e, 0x64, 0x65, 0x61, 0x76,
		0x6f, 0x75, 0x72, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31,
		0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x73, 0x20, 0x24, 0x31, 0x53, 0x4c, 0x70, 0x6c, 0x75,
		0x73, 0x30, 0x32, 0x53, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x30, 0x32, 0x42, 0x45, 0x20,
		0x24, 0x31, 0x42, 0x4c, 0x2d, 0x39, 0x31, 0x39, 0x38, 0x34, 0x35, 0x42, 0x45, 0x20, 0x63, 0x6c,
		0x65, 0x76, 0x65, 0x72, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x42, 0x6c, 0x6c, 0x6f, 0x63, 0x42, 0x6c,
		0x6f, 0x77, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x54, 0x41, 0x42, 0x31, 0x30, 0x4c, 0x61, 0x73, 0x65,
		0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x75,
		0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x36, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x53, 0x74, 0x75, 0x64,
		0x69, 0x6f, 0x20, 0x35, 0x2e, 0x30, 0x20, 0x4b, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x53,
		0x45, 0x4c, 0x46, 0x49, 0x45, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20,
		0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f,
		0x20, 0x4f, 0x4e, 0x45, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x4f, 0x6e, 0x65, 0x53, 0x74,
		0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x24, 0x31, 0x53, 0x54,
		0x55, 0x44, 0x49, 0x4f, 0x20, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x45, 0x53, 0x74, 0x75, 0x64, 0x69,
		0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x4e, 0x65, 0x6f, 0x20, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x44, 0x49,
		0x41, 0x4d, 0x4f, 0x4e, 0x44, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x44, 0x69, 0x61, 0x6d,
		0x6f, 0x6e, 0x64, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x58, 0x4c, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x20, 0x58, 0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x20, 0x32, 0x45,
		0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x20, 0x32, 0x45, 0x6e,
		0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x45, 0x4e, 0x45,
		0x52, 0x47, 0x59, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
		0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x58, 0x4c, 0x4c, 0x69,
		0x66, 0x65, 0x20, 0x58, 0x4c, 0x44, 0x61, 0x73, 0x68, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x4c, 0x54, 0x45, 0x44, 0x41, 0x53, 0x48, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x44,
		0x61, 0x73, 0x68, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x61, 0x73, 0x68, 0x20, 0x34,
		0x2e, 0x35, 0x44, 0x61, 0x73, 0x68, 0x20, 0x58, 0x4c, 0x50, 0x75, 0x72, 0x65, 0x20, 0x24, 0x31,
		0x50, 0x55, 0x52, 0x45, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x50, 0x75, 0x72, 0x65, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x42, 0x6f, 0x6c, 0x64, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e,
		0x65, 0x20, 0x58, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e,
		0x65, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x4f, 0x4e, 0x45, 0x4c, 0x69, 0x66, 0x65,
		0x20, 0x4f, 0x6e, 0x65, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69,
		0x66, 0x65, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x4d, 0x41, 0x52,
		0x4b, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x61, 0x72, 0x6b, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x20,
		0x50, 0x4c, 0x55, 0x53, 0x4e, 0x65, 0x6f, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x65,
		0x6f, 0x20, 0x24, 0x31, 0x47, 0x35, 0x30, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x47, 0x35, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x47, 0x35, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x47, 0x39, 0x31, 0x20, 0x50, 0x52, 0x4f, 0x47, 0x39, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x48, 0x44, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x4c,
		0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x33, 0x42,
		0x31, 0x31, 0x30, 0x44, 0x4c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x42, 0x31,
		0x33, 0x30, 0x44, 0x4c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x42, 0x31, 0x34, 0x30, 0x44, 0x4c,
		0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x56, 0x49, 0x45, 0x57, 0x20, 0x31, 0x56, 0x69, 0x65, 0x77,
		0x20, 0x31, 0x52, 0x31, 0x20, 0x48, 0x44, 0x52, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x52, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x24, 0x31, 0x20, 0x28, 0x32, 0x30, 0x24, 0x32, 0x29, 0x54,
		0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x30, 0x22,
		0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x54,
		0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x56, 0x49, 0x56, 0x4f, 0x20, 0x41,
		0x49, 0x52, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x41, 0x69, 0x72, 0x20, 0x4c,
		0x54, 0x45, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x37, 0x43, 0x24,
		0x31, 0x4c, 0x20, 0x28, 0x32, 0x30, 0x24, 0x32, 0x29, 0x43, 0x35, 0x4c, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x43, 0x24, 0x31, 0x4c, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65,
		0x56, 0x69, 0x76, 0x6f, 0x20, 0x35, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x56, 0x69, 0x76, 0x6f, 0x20,
		0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x30, 0x31, 0x39, 0x56, 0x69, 0x76,
		0x6f, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x76,
		0x6f, 0x20, 0x24, 0x31, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x47, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x4d, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x69,
		0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x49, 0x49, 0x44, 0x61, 0x73, 0x68, 0x20, 0x24, 0x31,
		0x42, 0x6c, 0x75, 0x62, 0x6f, 0x6f, 0x4d, 0x61, 0x79, 0x61, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64,
		0x4d, 0x61, 0x79, 0x61, 0x58, 0x66, 0x69, 0x72, 0x65, 0x32, 0x58, 0x66, 0x69, 0x72, 0x65, 0x20,
		0x32, 0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x34, 0x47, 0x58, 0x66, 0x69, 0x72, 0x65,
		0x53, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x75, 0x65, 0x62, 0x69, 0x72, 0x64, 0x42,
		0x6c, 0x75, 0x65, 0x64, 0x6f, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x67, 0x6f, 0x6f, 0x64, 0x42, 0x4c,
		0x55, 0x45, 0x47, 0x4f, 0x4f, 0x44, 0x56, 0x36, 0x42, 0x6c, 0x75, 0x65, 0x77, 0x61, 0x76, 0x65,
		0x33, 0x33, 0x47, 0x54, 0x20, 0x48, 0x44, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x20, 0x48, 0x44,
		0x2b, 0x57, 0x56, 0x38, 0x52, 0x2d, 0x4d, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x20, 0x52, 0x65,
		0x64, 0x20, 0x4d, 0x61, 0x72, 0x73, 0x68, 0x6d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x61, 0x76,
		0x65, 0x20, 0x38, 0x20, 0x52, 0x65, 0x64, 0x20, 0x4e, 0x6f, 0x75, 0x67, 0x61, 0x74, 0x42, 0x6d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x58, 0x24, 0x31, 0x41, 0x58, 0x37, 0x4f, 0x4f, 0x41, 0x58,
		0x37, 0x30, 0x30, 0x46, 0x55, 0x4e, 0x20, 0x34, 0x20, 0x32, 0x30, 0x31, 0x38, 0x46, 0x75, 0x6e,
		0x20, 0x34, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x42, 0x36, 0x30, 0x50, 0x72, 0x6f, 0x5f,
		0x4d, 0x56, 0x30, 0x33, 0x42, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x35, 0x30, 0x50, 0x72,
		0x6f, 0x42, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x35, 0x34, 0x20, 0x50, 0x72, 0x6f,
		0x42, 0x6f, 0x62, 0x61, 0x72, 0x72, 0x79, 0x4b, 0x31, 0x30, 0x20, 0x53, 0x45, 0x42, 0x6f, 0x77,
		0x61, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x74, 0x42, 0x72, 0x61, 0x76, 0x69, 0x73, 0x41, 0x35,
		0x30, 0x31, 0x20, 0x42, 0x52, 0x49, 0x47, 0x48, 0x54, 0x41, 0x35, 0x30, 0x31, 0x20, 0x42, 0x72,
		0x69, 0x67, 0x68, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x72, 0x79,
		0x73, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x54, 0x61, 0x75,
		0x44, 0x65, 0x6c, 0x74, 0x61, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x42, 0x35, 0x30, 0x31, 0x45, 0x61,
		0x73, 0x79, 0x4e, 0x31, 0x2d, 0x35, 0x37, 0x30, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x35, 0x35,
		0x34, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x35, 0x30, 0x30, 0x20, 0x44, 0x69, 0x61, 0x6d,
		0x6f, 0x6e, 0x64, 0x41, 0x35, 0x30, 0x35, 0x20, 0x4a, 0x4f, 0x59, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x41, 0x35, 0x30, 0x35, 0x20, 0x4a, 0x6f, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35, 0x35,
		0x32, 0x20, 0x4a, 0x4f, 0x59, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x35, 0x35, 0x32, 0x20, 0x4a, 0x6f,
		0x79, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x20, 0x41, 0x35, 0x35, 0x31, 0x41,
		0x35, 0x35, 0x31, 0x20, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x41, 0x35, 0x30, 0x33, 0x20, 0x4a, 0x6f,
		0x79, 0x41, 0x35, 0x30, 0x34, 0x20, 0x54, 0x72, 0x61, 0x63, 0x65, 0x41, 0x35, 0x31, 0x32, 0x20,
		0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x35, 0x31, 0x31, 0x20,
		0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x41, 0x35, 0x31, 0x30, 0x5f, 0x4a, 0x65, 0x61, 0x6e,
		0x73, 0x5f, 0x34, 0x47, 0x41, 0x35, 0x31, 0x30, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x20, 0x34,
		0x47, 0x41, 0x35, 0x30, 0x39, 0x5f, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x41, 0x35, 0x30, 0x39, 0x20,
		0x4a, 0x65, 0x61, 0x6e, 0x73, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4e, 0x45, 0x4f, 0x41,
		0x34, 0x30, 0x31, 0x20, 0x4e, 0x65, 0x6f, 0x4e, 0x31, 0x5f, 0x35, 0x35, 0x30, 0x5f, 0x43, 0x72,
		0x75, 0x69, 0x73, 0x65, 0x72, 0x4e, 0x31, 0x2d, 0x35, 0x35, 0x30, 0x20, 0x43, 0x72, 0x75, 0x69,
		0x73, 0x65, 0x72, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4f, 0x4d, 0x45, 0x47, 0x41, 0x4f,
		0x6d, 0x65, 0x67, 0x61, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x42, 0x49, 0x5a, 0x42, 0x69,
		0x7a, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x53, 0x6c, 0x69, 0x6d, 0x20, 0x33, 0x47, 0x4e, 0x50,
		0x20, 0x31, 0x30, 0x34, 0x20, 0x33, 0x47, 0x4e, 0x50, 0x31, 0x30, 0x34, 0x20, 0x33, 0x47, 0x42,
		0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4e, 0x50, 0x20, 0x31, 0x30, 0x33, 0x4e, 0x50, 0x31, 0x30,
		0x33, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4e, 0x50, 0x20, 0x38, 0x34, 0x34, 0x4e, 0x50,
		0x38, 0x34, 0x34, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x42, 0x72, 0x6f,
		0x6e, 0x64, 0x69, 0x43, 0x45, 0x4e, 0x54, 0x55, 0x52, 0x49, 0x4f, 0x4e, 0x20, 0x24, 0x31, 0x47,
		0x4c, 0x41, 0x44, 0x49, 0x41, 0x54, 0x4f, 0x52, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x4f, 0x52, 0x59,
		0x20, 0x24, 0x31, 0x4c, 0x55, 0x58, 0x55, 0x52, 0x59, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x64, 0x6e,
		0x69, 0x67, 0x68, 0x74, 0x20, 0x53, 0x6b, 0x79, 0x53, 0x45, 0x4e, 0x53, 0x55, 0x45, 0x4c, 0x4c,
		0x45, 0x20, 0x24, 0x31, 0x56, 0x49, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x20, 0x24, 0x31, 0x41, 0x6d,
		0x69, 0x63, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34,
		0x47, 0x53, 0x55, 0x52, 0x46, 0x49, 0x4e, 0x47, 0x20, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x42,
		0x75, 0x62, 0x62, 0x6c, 0x65, 0x67, 0x75, 0x6d, 0x42, 0x75, 0x6e, 0x64, 0x79, 0x53, 0x77, 0x65,
		0x65, 0x74, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x54, 0x4f,
		0x55, 0x43, 0x48, 0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x42, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x75, 0x73, 0x68, 0x42, 0x75, 0x73, 0x68, 0x31,
		0x30, 0x4e, 0x6f, 0x75, 0x31, 0x30, 0x4e, 0x6f, 0x75, 0x24, 0x31, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x43, 0x41, 0x47, 0x49, 0x43, 0x41, 0x47, 0x49, 0x2d, 0x43, 0x41, 0x47, 0x49, 0x2d, 0x4f,
		0x4d, 0x45, 0x47, 0x41, 0x43, 0x47, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4f, 0x6d, 0x65,
		0x67, 0x61, 0x20, 0x24, 0x31, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x36, 0x45, 0x4f, 0x4e, 0x20,
		0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x4f, 0x4e, 0x20, 0x42, 0x6c, 0x61,
		0x7a, 0x65, 0x20, 0x47, 0x6f, 0x6c, 0x64, 0x43, 0x47, 0x56, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x4d,
		0x41, 0x58, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x31, 0x30, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x53, 0x31,
		0x30, 0x43, 0x4f, 0x52, 0x4e, 0x52, 0x24, 0x31, 0x30, 0x58, 0x24, 0x31, 0x43, 0x4f, 0x59, 0x4f,
		0x54, 0x45, 0x31, 0x30, 0x39, 0x30, 0x20, 0x44, 0x56, 0x52, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x6d,
		0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x55, 0x42, 0x4f, 0x54, 0x43, 0x68, 0x65, 0x65, 0x74,
		0x61, 0x68, 0x24, 0x31, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x20, 0x32, 0x52, 0x61, 0x69,
		0x6e, 0x62, 0x6f, 0x77, 0x20, 0x32, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x52, 0x61, 0x69,
		0x6e, 0x62, 0x6f, 0x77, 0x44, 0x49, 0x4e, 0x4f, 0x53, 0x41, 0x55, 0x52, 0x44, 0x69, 0x6e, 0x6f,
		0x73, 0x61, 0x75, 0x72, 0x4b, 0x49, 0x4e, 0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x4d, 0x49, 0x4e,
		0x49, 0x32, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x32, 0x4b, 0x49, 0x4e, 0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x4b,
		0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x49, 0x4e,
		0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20,
		0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b,
		0x6f, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x4b, 0x49, 0x4e, 0x47, 0x20, 0x4b, 0x4f, 0x4e, 0x47, 0x20,
		0x43, 0x53, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x43, 0x53, 0x4b, 0x49,
		0x4e, 0x47, 0x20, 0x4b, 0x4f, 0x4e, 0x47, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67,
		0x51, 0x55, 0x45, 0x53, 0x54, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x51, 0x55, 0x45, 0x53, 0x54, 0x51, 0x75, 0x65, 0x73, 0x74, 0x5a, 0x4f,
		0x52, 0x52, 0x4f, 0x20, 0x30, 0x30, 0x31, 0x5a, 0x6f, 0x72, 0x72, 0x6f, 0x20, 0x30, 0x30, 0x31,
		0x4d, 0x61, 0x6e, 0x69, 0x74, 0x6f, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4d, 0x41, 0x58, 0x20, 0x33,
		0x4d, 0x61, 0x78, 0x20, 0x33, 0x4d, 0x61, 0x78, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x37,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x32, 0x30, 0x20, 0x50, 0x52,
		0x4f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x4f, 0x54, 0x45,
		0x20, 0x32, 0x30, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x53,
		0x43, 0x55, 0x42, 0x4f, 0x54, 0x5f, 0x4e, 0x4f, 0x56, 0x41, 0x4e, 0x6f, 0x76, 0x61, 0x43, 0x55,
		0x42, 0x4f, 0x54, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x43, 0x55, 0x42, 0x4f, 0x54, 0x5f, 0x58,
		0x31, 0x38, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x31, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43,
		0x56, 0x54, 0x45, 0x43, 0x61, 0x6d, 0x66, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6e, 0x61, 0x6c, 0x20,
		0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x4f, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43,
		0x61, 0x70, 0x69, 0x74, 0x65, 0x6c, 0x43, 0x61, 0x70, 0x74, 0x69, 0x76, 0x61, 0x50, 0x61, 0x64,
		0x20, 0x24, 0x31, 0x43, 0x61, 0x72, 0x72, 0x65, 0x66, 0x6f, 0x75, 0x72, 0x43, 0x54, 0x38, 0x32,
		0x30, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4e, 0x65,
		0x6f, 0x32, 0x43, 0x54, 0x24, 0x31, 0x43, 0x61, 0x73, 0x69, 0x6f, 0x47, 0x27, 0x7a, 0x4f, 0x6e,
		0x65, 0x20, 0x52, 0x61, 0x76, 0x69, 0x6e, 0x65, 0x47, 0x27, 0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x43,
		0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x47, 0x27, 0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x43, 0x6f,
		0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x61, 0x73,
		0x70, 0x65, 0x72, 0x56, 0x49, 0x41, 0x20, 0x41, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x49,
		0x41, 0x20, 0x24, 0x31, 0x43, 0x41, 0x53, 0x50, 0x45, 0x52, 0x5f, 0x56, 0x49, 0x41, 0x5f, 0x45,
		0x31, 0x63, 0x56, 0x49, 0x41, 0x20, 0x45, 0x31, 0x43, 0x4c, 0x31, 0x30, 0x20, 0x34, 0x2e, 0x35,
		0x47, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x43, 0x61, 0x74, 0x42, 0x31, 0x35,
		0x51, 0x43, 0x41, 0x54, 0x20, 0x42, 0x33, 0x35, 0x42, 0x33, 0x35, 0x53, 0x36, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x20, 0x34, 0x2e,
		0x35, 0x22, 0x42, 0x61, 0x73, 0x65, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x43, 0x41, 0x56, 0x49, 0x4f,
		0x4e, 0x5f, 0x31, 0x30, 0x5f, 0x33, 0x47, 0x52, 0x51, 0x42, 0x61, 0x73, 0x65, 0x20, 0x31, 0x30,
		0x20, 0x33, 0x47, 0x52, 0x20, 0x51, 0x75, 0x61, 0x64, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e,
		0x31, 0x22, 0x20, 0x51, 0x75, 0x61, 0x64, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x32, 0x22,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x65,
		0x20, 0x31, 0x30, 0x42, 0x61, 0x73, 0x65, 0x20, 0x31, 0x30, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e,
		0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65,
		0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e,
		0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x20, 0x51, 0x75, 0x61, 0x64, 0x42, 0x61, 0x73, 0x65,
		0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x51, 0x75, 0x61, 0x64, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e,
		0x5f, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x37, 0x5f, 0x33, 0x47, 0x5f, 0x53, 0x69, 0x6c, 0x76, 0x65,
		0x72, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x20, 0x53, 0x69,
		0x6c, 0x76, 0x65, 0x72, 0x43, 0x65, 0x6c, 0x63, 0x75, 0x73, 0x43, 0x65, 0x6c, 0x6b, 0x6f, 0x6e,
		0x34, 0x47, 0x20, 0x54, 0x61, 0x62, 0x20, 0x38, 0x4d, 0x69, 0x6c, 0x6c, 0x65, 0x6e, 0x6e, 0x69,
		0x61, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x32, 0x47, 0x42, 0x53, 0x74, 0x61, 0x72, 0x32, 0x47, 0x42,
		0x20, 0x53, 0x74, 0x61, 0x72, 0x32, 0x47, 0x42, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x32, 0x47,
		0x42, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x51, 0x20, 0x32, 0x55, 0x6e,
		0x69, 0x51, 0x43, 0x65, 0x6c, 0x6c, 0x2d, 0x43, 0x43, 0x45, 0x4c, 0x4c, 0x43, 0x5f, 0x45, 0x76,
		0x6f, 0x6c, 0x76, 0x65, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x41, 0x6c,
		0x6c, 0x75, 0x72, 0x65, 0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x32, 0x50, 0x6c, 0x75, 0x73,
		0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x48,
		0x49, 0x43, 0x5f, 0x58, 0x31, 0x43, 0x68, 0x69, 0x63, 0x20, 0x58, 0x31, 0x43, 0x65, 0x6c, 0x6c,
		0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x73, 0x6d, 0x61, 0x73, 0x43, 0x54, 0x5f, 0x43, 0x6f,
		0x73, 0x6d, 0x61, 0x73, 0x5f, 0x56, 0x43, 0x6f, 0x73, 0x6d, 0x61, 0x73, 0x20, 0x56, 0x43, 0x65,
		0x6e, 0x74, 0x72, 0x69, 0x63, 0x50, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x33, 0x47, 0x31,
		0x43, 0x68, 0x61, 0x6e, 0x67, 0x68, 0x6f, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x48, 0x6f,
		0x6e, 0x67, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x43, 0x68, 0x65,
		0x72, 0x72, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20,
		0x48, 0x44, 0x20, 0x24, 0x31, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x5f, 0x48, 0x44, 0x5f, 0x4d, 0x41,
		0x58, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x4c, 0x41,
		0x52, 0x45, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x46, 0x6c, 0x61,
		0x72, 0x65, 0x20, 0x4a, 0x24, 0x31, 0x73, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x65,
		0x6c, 0x75, 0x78, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x6c,
		0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65,
		0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x58, 0x4c,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4a, 0x33, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x41, 0x35, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20,
		0x58, 0x20, 0x56, 0x32, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x5f, 0x4a, 0x32, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x46, 0x6c,
		0x61, 0x72, 0x65, 0x20, 0x4a, 0x32, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x46, 0x6c, 0x61,
		0x72, 0x65, 0x20, 0x53, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x6c, 0x61,
		0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x53, 0x35,
		0x4c, 0x69, 0x74, 0x65, 0x44, 0x54, 0x56, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x35, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x20, 0x44, 0x54, 0x56, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x32,
		0x20, 0x44, 0x54, 0x56, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x53,
		0x33, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x48,
		0x44, 0x20, 0x24, 0x31, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x5f, 0x48, 0x44, 0x5f, 0x44, 0x75, 0x6f,
		0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x48, 0x44, 0x20, 0x44, 0x75, 0x6f, 0x4f, 0x6d, 0x65, 0x67,
		0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x4f, 0x6d, 0x65,
		0x67, 0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x32, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x53, 0x70, 0x69, 0x6e, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32,
		0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x5f, 0x54, 0x77, 0x6f, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65,
		0x20, 0x54, 0x77, 0x6f, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x32, 0x5f,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x54, 0x56, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x56, 0x24, 0x31, 0x43, 0x68, 0x69, 0x63, 0x6f, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x42, 0x6f, 0x6d, 0x62, 0x6f, 0x41,
		0x6c, 0x74, 0x6f, 0x20, 0x42, 0x6f, 0x6d, 0x62, 0x6f, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x63, 0x6c,
		0x61, 0x73, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
		0x63, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x45, 0x73, 0x74, 0x72, 0x65, 0x6c, 0x6c, 0x61, 0x41, 0x6c,
		0x74, 0x6f, 0x20, 0x45, 0x73, 0x74, 0x72, 0x65, 0x6c, 0x6c, 0x61, 0x41, 0x4c, 0x54, 0x4f, 0x20,
		0x4a, 0x55, 0x45, 0x47, 0x4f, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x4a, 0x75, 0x65, 0x67, 0x6f, 0x41,
		0x4c, 0x54, 0x4f, 0x20, 0x53, 0x55, 0x42, 0x49, 0x52, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x53, 0x75,
		0x62, 0x69, 0x72, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x24, 0x31, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x24,
		0x31, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x4e, 0x55, 0x42, 0x45, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x4e,
		0x75, 0x62, 0x65, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x43, 0x41, 0x4d, 0x42, 0x49, 0x4f, 0x4f, 0x6a,
		0x6f, 0x73, 0x20, 0x43, 0x61, 0x6d, 0x62, 0x69, 0x6f, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x4f, 0x52,
		0x4f, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x4f, 0x72, 0x6f, 0x46, 0x55, 0x45, 0x47, 0x4f, 0x20, 0x4d,
		0x41, 0x58, 0x46, 0x75, 0x65, 0x67, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x68, 0x69, 0x6e, 0x61,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x36, 0x35, 0x31, 0x43, 0x59, 0x43, 0x4d, 0x43,
		0x43, 0x2d, 0x4d, 0x38, 0x36, 0x30, 0x4e, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x68, 0x69, 0x6e,
		0x61, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x54, 0x59, 0x48, 0x36, 0x31, 0x31, 0x4d,
		0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x31, 0x30, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47,
		0x54, 0x59, 0x48, 0x36, 0x31, 0x32, 0x4d, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x31,
		0x30, 0x20, 0x35, 0x47, 0x54, 0x59, 0x48, 0x32, 0x31, 0x31, 0x55, 0x54, 0x69, 0x61, 0x6e, 0x79,
		0x69, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x54, 0x59, 0x48, 0x32,
		0x30, 0x31, 0x48, 0x54, 0x69, 0x61, 0x6e, 0x79, 0x69, 0x20, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x75,
		0x77, 0x69, 0x48, 0x69, 0x38, 0x24, 0x31, 0x20, 0x51, 0x75, 0x61, 0x64, 0x24, 0x31, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x24, 0x31, 0x20, 0x24, 0x32, 0x48, 0x69, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x48, 0x69, 0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x58, 0x48,
		0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69,
		0x72, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x69, 0x24, 0x31, 0x20,
		0x41, 0x69, 0x72, 0x48, 0x69, 0x38, 0x20, 0x53, 0x45, 0x48, 0x69, 0x24, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x56, 0x69, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x56, 0x69, 0x31, 0x30, 0x53, 0x75, 0x72, 0x50, 0x61, 0x64, 0x48, 0x69, 0x42, 0x6f,
		0x78, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x6c, 0x61, 0x72, 0x65, 0x73, 0x74, 0x61, 0x41, 0x69,
		0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x43, 0x6c, 0x61, 0x72, 0x6d, 0x69, 0x6e,
		0x43, 0x6c, 0x65, 0x61, 0x72, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x36, 0x32, 0x30, 0x43, 0x6c, 0x65,
		0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x6e, 0x69, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x28,
		0x24, 0x31, 0x29, 0x4d, 0x46, 0x43, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x43, 0x6c, 0x65, 0x6d, 0x70,
		0x61, 0x64, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x46, 0x43, 0x5f, 0x38, 0x43, 0x6c,
		0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x38, 0x43, 0x4c, 0x45, 0x4d, 0x50, 0x41, 0x44, 0x5f, 0x37,
		0x5f, 0x53, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x37, 0x53, 0x43, 0x6c, 0x65, 0x6d,
		0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x24, 0x31, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x33, 0x53,
		0x74, 0x6f, 0x72, 0x6d, 0x20, 0x43, 0x33, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x43,
		0x35, 0x5f, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x43,
		0x35, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x6e, 0x65,
		0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20,
		0x24, 0x31, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x54, 0x68,
		0x72, 0x69, 0x6c, 0x6c, 0x20, 0x53, 0x6e, 0x61, 0x70, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x31, 0x36, 0x47, 0x42, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20,
		0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x43, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20,
		0x43, 0x4e, 0x42, 0x41, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x78, 0x74,
		0x43, 0x6c, 0x6f, 0x75, 0x64, 0x70, 0x61, 0x64, 0x2b, 0x56, 0x54, 0x24, 0x31, 0x2b, 0x56, 0x54,
		0x51, 0x24, 0x31, 0x43, 0x6c, 0x6f, 0x75, 0x74, 0x48, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x2e, 0x31,
		0x58, 0x34, 0x31, 0x37, 0x20, 0x41, 0x6d, 0x61, 0x7a, 0x65, 0x58, 0x34, 0x31, 0x38, 0x20, 0x5a,
		0x65, 0x73, 0x74, 0x58, 0x34, 0x32, 0x31, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x58, 0x34, 0x32, 0x32,
		0x20, 0x45, 0x78, 0x6f, 0x74, 0x69, 0x63, 0x58, 0x34, 0x32, 0x35, 0x20, 0x53, 0x68, 0x61, 0x76,
		0x69, 0x74, 0x58, 0x34, 0x32, 0x38, 0x20, 0x41, 0x73, 0x74, 0x75, 0x74, 0x65, 0x43, 0x6e, 0x4d,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x43, 0x6f, 0x62, 0x61, 0x6c,
		0x74, 0x53, 0x4d, 0x24, 0x31, 0x54, 0x24, 0x31, 0x20, 0x33, 0x47, 0x54, 0x24, 0x31, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x43, 0x6f, 0x62, 0x79, 0x20, 0x4b, 0x79, 0x72, 0x6f, 0x73, 0x43, 0x6f, 0x6c,
		0x6f, 0x72, 0x73, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x31, 0x41, 0x50, 0x72, 0x69, 0x64, 0x65,
		0x20, 0x35, 0x43, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x35, 0x58, 0x43, 0x6f, 0x6d, 0x54, 0x72,
		0x61, 0x64, 0x65, 0x20, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x45, 0x76, 0x6f, 0x20, 0x35, 0x2e, 0x30,
		0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4f, 0x43,
		0x54, 0x41, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36,
		0x2e, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x2e, 0x32,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x24, 0x31, 0x2e, 0x24, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x24, 0x31, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x5f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x37,
		0x38, 0x35, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x54, 0x54, 0x48, 0x37, 0x48, 0x37, 0x54, 0x54, 0x4c,
		0x37, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x37, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x5f, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x4c, 0x37, 0x5f, 0x33, 0x47, 0x4c, 0x37, 0x20, 0x33, 0x47,
		0x54, 0x54, 0x4c, 0x37, 0x31, 0x33, 0x47, 0x4c, 0x37, 0x2e, 0x31, 0x20, 0x33, 0x47, 0x54, 0x54,
		0x4c, 0x38, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x38, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x5f,
		0x54, 0x41, 0x42, 0x4c, 0x45, 0x54, 0x5f, 0x4d, 0x37, 0x4d, 0x37, 0x54, 0x65, 0x73, 0x6c, 0x61,
		0x5f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x4d, 0x38, 0x4d, 0x38, 0x43, 0x6f, 0x6d, 0x69,
		0x6f, 0x47, 0x54, 0x31, 0x30, 0x30, 0x43, 0x54, 0x37, 0x30, 0x31, 0x57, 0x43, 0x54, 0x37, 0x30,
		0x31, 0x47, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x43, 0x54, 0x37, 0x30, 0x31, 0x47, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x64, 0x65,
		0x52, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x43, 0x6f, 0x6e, 0x63, 0x6f, 0x72,
		0x64, 0x4d, 0x31, 0x30, 0x46, 0x6c, 0x79, 0x66, 0x69, 0x78, 0x20, 0x36, 0x43, 0x2d, 0x37, 0x32,
		0x31, 0x46, 0x6c, 0x79, 0x66, 0x69, 0x78, 0x20, 0x51, 0x50, 0x6c, 0x75, 0x73, 0x2d, 0x24, 0x31,
		0x20, 0x24, 0x32, 0x43, 0x6f, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31,
		0x43, 0x38, 0x43, 0x34, 0x2b, 0x20, 0x4e, 0x6f, 0x69, 0x72, 0x43, 0x37, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x34, 0x43, 0x32, 0x43, 0x35, 0x43, 0x38, 0x53,
		0x43, 0x37, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x39, 0x43, 0x36, 0x2b, 0x43, 0x36,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x39, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x34, 0x50, 0x48, 0x51, 0x35, 0x31,
		0x39, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x34, 0x53, 0x50, 0x48, 0x51, 0x35, 0x32,
		0x30, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x35, 0x50, 0x48, 0x51, 0x35, 0x32, 0x35,
		0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x36, 0x50, 0x48, 0x51, 0x35, 0x32, 0x36, 0x47,
		0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x6d,
		0x65, 0x20, 0x50, 0x37, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x34, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x35, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x36,
		0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x72,
		0x69, 0x66, 0x66, 0x65, 0x20, 0x54, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x72, 0x69, 0x66, 0x66,
		0x65, 0x20, 0x54, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65,
		0x20, 0x54, 0x24, 0x31, 0x50, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65,
		0x20, 0x50, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x36,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x38,
		0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x35, 0x35, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65,
		0x20, 0x41, 0x31, 0x30, 0x30, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x35, 0x35, 0x20,
		0x53, 0x6c, 0x69, 0x6d, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x31, 0x30, 0x30, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x38, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x38, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65,
		0x20, 0x41, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41,
		0x35, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x48, 0x31, 0x50,
		0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x6d,
		0x65, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20,
		0x4c, 0x33, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x24,
		0x31, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x4e,
		0x2d, 0x24, 0x31, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
		0x65, 0x63, 0x74, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x36, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x78,
		0x53, 0x45, 0x4e, 0x5f, 0x31, 0x30, 0x35, 0x35, 0x5f, 0x41, 0x52, 0x4d, 0x53, 0x65, 0x72, 0x65,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x31, 0x30, 0x35, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x43,
		0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x24, 0x31, 0x43, 0x6f, 0x6e, 0x71, 0x75, 0x65,
		0x73, 0x74, 0x2d, 0x46, 0x32, 0x46, 0x32, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x78, 0x6f, 0x43, 0x58,
		0x2d, 0x31, 0x30, 0x34, 0x35, 0x20, 0x33, 0x47, 0x47, 0x58, 0x2d, 0x31, 0x30, 0x33, 0x35, 0x20,
		0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x54, 0x31, 0x31, 0x36, 0x30, 0x20, 0x34,
		0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42, 0x31, 0x30, 0x35, 0x20, 0x33, 0x47, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x42, 0x31, 0x30, 0x38, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x4b, 0x54, 0x31, 0x30, 0x37, 0x20, 0x33, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b,
		0x54, 0x31, 0x30, 0x39, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54, 0x37,
		0x31, 0x35, 0x20, 0x33, 0x47, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4b, 0x54, 0x39, 0x39, 0x35, 0x20,
		0x33, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54, 0x31, 0x31, 0x30, 0x30, 0x47, 0x54,
		0x43, 0x6f, 0x6f, 0x6c, 0x70, 0x61, 0x64, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x20, 0x36, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x43, 0x37, 0x43, 0x6f,
		0x6f, 0x6c, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x37, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x50, 0x4c,
		0x55, 0x53, 0x20, 0x43, 0x33, 0x37, 0x30, 0x31, 0x41, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x43, 0x50, 0x33, 0x36, 0x36, 0x37, 0x41, 0x54, 0x54, 0x61, 0x73, 0x6b, 0x65,
		0x72, 0x38, 0x31, 0x39, 0x30, 0x51, 0x4e, 0x35, 0x43, 0x42, 0x65, 0x6c, 0x6c, 0x61, 0x7a, 0x61,
		0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x53, 0x4c, 0x65,
		0x67, 0x61, 0x63, 0x79, 0x20, 0x53, 0x20, 0x53, 0x52, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20,
		0x42, 0x72, 0x69, 0x73, 0x61, 0x53, 0x75, 0x76, 0x61, 0x4e, 0x32, 0x4d, 0x43, 0x6f, 0x6f, 0x6c,
		0x20, 0x31, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x53, 0x31, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x35, 0x43,
		0x6f, 0x6f, 0x6c, 0x20, 0x39, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x39, 0x53, 0x43, 0x6f, 0x6f, 0x6c,
		0x20, 0x32, 0x30, 0x41, 0x72, 0x69, 0x73, 0x65, 0x45, 0x35, 0x30, 0x31, 0x4d, 0x6f, 0x64, 0x65,
		0x6e, 0x61, 0x45, 0x35, 0x30, 0x32, 0x4d, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x20, 0x32, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x33, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x74,
		0x65, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x4d, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x69,
		0x5f, 0x54, 0x61, 0x62, 0x4d, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x54, 0x61, 0x62, 0x43,
		0x6f, 0x76, 0x69, 0x61, 0x43, 0x72, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x57, 0x49, 0x4e, 0x47,
		0x20, 0x35, 0x57, 0x69, 0x6e, 0x67, 0x20, 0x35, 0x57, 0x49, 0x4e, 0x47, 0x39, 0x57, 0x69, 0x6e,
		0x67, 0x20, 0x39, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x24, 0x31, 0x43, 0x72, 0x69, 0x63, 0x6b,
		0x65, 0x74, 0x45, 0x43, 0x32, 0x31, 0x31, 0x30, 0x30, 0x31, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20,
		0x35, 0x47, 0x55, 0x33, 0x30, 0x34, 0x41, 0x43, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x33, 0x32, 0x35,
		0x41, 0x43, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x32, 0x45, 0x43, 0x32, 0x31, 0x31, 0x30, 0x30, 0x32,
		0x49, 0x63, 0x6f, 0x6e, 0x20, 0x33, 0x56, 0x33, 0x35, 0x30, 0x43, 0x49, 0x6e, 0x66, 0x6c, 0x75,
		0x65, 0x6e, 0x63, 0x65, 0x45, 0x43, 0x32, 0x31, 0x31, 0x30, 0x30, 0x34, 0x49, 0x6e, 0x6e, 0x6f,
		0x76, 0x61, 0x74, 0x65, 0x20, 0x35, 0x47, 0x55, 0x37, 0x30, 0x35, 0x41, 0x43, 0x4f, 0x76, 0x61,
		0x74, 0x69, 0x6f, 0x6e, 0x45, 0x43, 0x31, 0x30, 0x30, 0x32, 0x4f, 0x76, 0x61, 0x74, 0x69, 0x6f,
		0x6e, 0x20, 0x32, 0x45, 0x43, 0x32, 0x31, 0x31, 0x30, 0x30, 0x33, 0x53, 0x70, 0x6c, 0x65, 0x6e,
		0x64, 0x6f, 0x72, 0x43, 0x72, 0x69, 0x75, 0x73, 0x20, 0x4d, 0x65, 0x61, 0x43, 0x72, 0x6f, 0x6e,
		0x79, 0x37, 0x30, 0x32, 0x31, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x41, 0x63,
		0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f,
		0x6e, 0x2d, 0x58, 0x24, 0x31, 0x43, 0x6f, 0x72, 0x65, 0x2d, 0x24, 0x31, 0x4f, 0x44, 0x59, 0x53,
		0x53, 0x45, 0x59, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x44, 0x59, 0x53, 0x53, 0x45, 0x59, 0x2b,
		0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x53, 0x31, 0x4f, 0x44, 0x59, 0x53, 0x53, 0x45,
		0x59, 0x20, 0x53, 0x31, 0x54, 0x72, 0x65, 0x6b, 0x6b, 0x65, 0x72, 0x2d, 0x24, 0x31, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x54, 0x72, 0x65, 0x6b, 0x6b, 0x65, 0x72, 0x2d, 0x24, 0x31, 0x43, 0x6f, 0x72,
		0x65, 0x2d, 0x54, 0x34, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x43, 0x75, 0x62, 0x65, 0x55, 0x32, 0x37,
		0x47, 0x54, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x38, 0x54, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d,
		0x61, 0x74, 0x65, 0x55, 0x35, 0x35, 0x47, 0x54, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x37, 0x39, 0x54,
		0x31, 0x30, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55,
		0x36, 0x35, 0x47, 0x54, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x39, 0x58, 0x69, 0x57, 0x6f, 0x72, 0x6b,
		0x20, 0x38, 0x20, 0x41, 0x69, 0x72, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x38, 0x20, 0x55, 0x6c,
		0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x55,
		0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x46, 0x6c, 0x61, 0x67,
		0x73, 0x68, 0x69, 0x70, 0x54, 0x39, 0x37, 0x30, 0x20, 0x34, 0x47, 0x43, 0x79, 0x72, 0x75, 0x73,
		0x44, 0x45, 0x58, 0x50, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x49, 0x78, 0x69, 0x6f,
		0x6e, 0x20, 0x45, 0x53, 0x32, 0x35, 0x30, 0x20, 0x52, 0x61, 0x67, 0x65, 0x49, 0x78, 0x69, 0x6f,
		0x6e, 0x20, 0x4d, 0x4c, 0x20, 0x34, 0x2e, 0x37, 0x22, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d,
		0x31, 0x35, 0x30, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d,
		0x34, 0x34, 0x35, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x32, 0x34, 0x2e, 0x35, 0x22, 0x20, 0x41,
		0x4c, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x41, 0x4c, 0x33, 0x35, 0x30, 0x35, 0x2e,
		0x34, 0x35, 0x22, 0x20, 0x41, 0x53, 0x31, 0x35, 0x35, 0x35, 0x2e, 0x38, 0x35, 0x22, 0x20, 0x41,
		0x53, 0x32, 0x36, 0x30, 0x36, 0x2e, 0x32, 0x32, 0x22, 0x20, 0x41, 0x53, 0x33, 0x36, 0x30, 0x55,
		0x72, 0x73, 0x75, 0x73, 0x20, 0x24, 0x31, 0x24, 0x31, 0x20, 0x28, 0x24, 0x32, 0x29, 0x53, 0x65,
		0x6e, 0x69, 0x6f, 0x72, 0x4c, 0x61, 0x72, 0x75, 0x73, 0x5f, 0x54, 0x56, 0x31, 0x41, 0x74, 0x6c,
		0x61, 0x73, 0x44, 0x46, 0x4a, 0x41, 0x47, 0x55, 0x41, 0x52, 0x2d, 0x30, 0x31, 0x4a, 0x61, 0x67,
		0x75, 0x61, 0x72, 0x20, 0x30, 0x31, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x24, 0x31, 0x54,
		0x49, 0x47, 0x45, 0x52, 0x2d, 0x30, 0x31, 0x54, 0x69, 0x67, 0x65, 0x72, 0x20, 0x30, 0x31, 0x50,
		0x55, 0x4d, 0x41, 0x2d, 0x30, 0x31, 0x50, 0x75, 0x6d, 0x61, 0x20, 0x30, 0x31, 0x44, 0x49, 0x47,
		0x49, 0x46, 0x4f, 0x52, 0x53, 0x44, 0x49, 0x4e, 0x47, 0x20, 0x44, 0x49, 0x4e, 0x47, 0x44, 0x49,
		0x53, 0x48, 0x57, 0x54, 0x43, 0x45, 0x4c, 0x45, 0x52, 0x4f, 0x35, 0x47, 0x43, 0x65, 0x6c, 0x65,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x44, 0x49, 0x58, 0x4f, 0x4e, 0x48, 0x4b, 0x37, 0x2d, 0x33, 0x35,
		0x30, 0x32, 0x53, 0x6f, 0x6c, 0x69, 0x73, 0x44, 0x4e, 0x36, 0x30, 0x31, 0x35, 0x41, 0x73, 0x74,
		0x72, 0x75, 0x6d, 0x58, 0x4b, 0x31, 0x20, 0x33, 0x47, 0x44, 0x4e, 0x53, 0x53, 0x34, 0x30, 0x30,
		0x33, 0x41, 0x69, 0x72, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x44, 0x4f, 0x52, 0x4c, 0x41, 0x4e,
		0x44, 0x44, 0x55, 0x4e, 0x4e, 0x53, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x65,
		0x77, 0x6f, 0x6f, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x20, 0x37, 0x50, 0x44, 0x61, 0x6e,
		0x65, 0x77, 0x4b, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x24, 0x31, 0x44, 0x53, 0x6c, 0x69,
		0x64, 0x65, 0x20, 0x24, 0x31, 0x47, 0x45, 0x4f, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5f, 0x41, 0x35,
		0x47, 0x65, 0x6f, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x41, 0x35, 0x44, 0x73, 0x6c, 0x69, 0x64,
		0x65, 0x20, 0x24, 0x31, 0x44, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x4d, 0x65, 0x6d,
		0x6f, 0x72, 0x20, 0x31, 0x30, 0x44, 0x61, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x69, 0x44, 0x61, 0x74,
		0x61, 0x6e, 0x67, 0x44, 0x41, 0x54, 0x41, 0x4e, 0x47, 0x44, 0x61, 0x74, 0x61, 0x77, 0x69, 0x6e,
		0x64, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x53, 0x75, 0x72, 0x66, 0x65, 0x72, 0x20, 0x33,
		0x47, 0x35, 0x44, 0x57, 0x2d, 0x55, 0x42, 0x54, 0x37, 0x57, 0x55, 0x62, 0x69, 0x73, 0x6c, 0x61,
		0x74, 0x65, 0x20, 0x37, 0x57, 0x44, 0x61, 0x74, 0x73, 0x75, 0x6e, 0x44, 0x41, 0x54, 0x53, 0x55,
		0x4e, 0x44, 0x41, 0x54, 0x53, 0x55, 0x4e, 0x5f, 0x44, 0x35, 0x35, 0x30, 0x30, 0x44, 0x35, 0x35,
		0x30, 0x30, 0x44, 0x61, 0x74, 0x73, 0x75, 0x6e, 0x5f, 0x44, 0x35, 0x30, 0x30, 0x31, 0x44, 0x35,
		0x30, 0x30, 0x31, 0x44, 0x61, 0x7a, 0x65, 0x6e, 0x64, 0x61, 0x7a, 0x65, 0x6e, 0x36, 0x41, 0x44,
		0x62, 0x74, 0x65, 0x6c, 0x44, 0x65, 0x57, 0x61, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x6c, 0x58, 0x43,
		0x44, 0x33, 0x35, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x20, 0x24, 0x31, 0x56, 0x65, 0x6e, 0x75, 0x65,
		0x56, 0x65, 0x6e, 0x75, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x65, 0x6e, 0x76, 0x65, 0x72, 0x54,
		0x41, 0x51, 0x2d, 0x24, 0x31, 0x53, 0x44, 0x51, 0x2d, 0x24, 0x31, 0x44, 0x65, 0x73, 0x61, 0x79,
		0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x44, 0x69, 0x63, 0x61, 0x6d, 0x44, 0x69, 0x67, 0x69, 0x44,
		0x69, 0x67, 0x69, 0x63, 0x65, 0x6c, 0x44, 0x4c, 0x33, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72, 0x6f,
		0x44, 0x4c, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x4c, 0x33, 0x44,
		0x4c, 0x37, 0x35, 0x35, 0x44, 0x4c, 0x38, 0x31, 0x30, 0x44, 0x69, 0x67, 0x69, 0x68, 0x6f, 0x6d,
		0x65, 0x44, 0x69, 0x67, 0x69, 0x6c, 0x61, 0x6e, 0x64, 0x44, 0x4c, 0x31, 0x30, 0x30, 0x38, 0x4d,
		0x44, 0x4c, 0x24, 0x31, 0x44, 0x69, 0x67, 0x6d, 0x61, 0x48, 0x49, 0x54, 0x20, 0x33, 0x47, 0x69,
		0x44, 0x78, 0x35, 0x48, 0x54, 0x35, 0x30, 0x33, 0x35, 0x50, 0x47, 0x48, 0x49, 0x54, 0x20, 0x51,
		0x35, 0x30, 0x30, 0x20, 0x33, 0x47, 0x48, 0x54, 0x34, 0x30, 0x33, 0x39, 0x50, 0x47, 0x48, 0x49,
		0x54, 0x20, 0x51, 0x34, 0x30, 0x31, 0x20, 0x33, 0x47, 0x50, 0x53, 0x36, 0x30, 0x34, 0x4d, 0x4c,
		0x69, 0x6e, 0x78, 0x20, 0x36, 0x2e, 0x30, 0x4c, 0x54, 0x34, 0x30, 0x34, 0x39, 0x50, 0x47, 0x4c,
		0x69, 0x6e, 0x78, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x33, 0x47, 0x4c, 0x54, 0x35, 0x30, 0x34,
		0x38, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x4a, 0x6f, 0x79, 0x20, 0x33, 0x47, 0x4c, 0x54,
		0x35, 0x30, 0x35, 0x32, 0x4d, 0x4c, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20,
		0x34, 0x47, 0x4c, 0x54, 0x34, 0x30, 0x34, 0x37, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x41,
		0x6c, 0x66, 0x61, 0x20, 0x33, 0x47, 0x4c, 0x53, 0x34, 0x30, 0x35, 0x30, 0x4d, 0x47, 0x4c, 0x69,
		0x6e, 0x78, 0x20, 0x58, 0x31, 0x20, 0x33, 0x47, 0x4c, 0x53, 0x34, 0x30, 0x35, 0x31, 0x4d, 0x47,
		0x4c, 0x69, 0x6e, 0x78, 0x20, 0x58, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x4c, 0x54,
		0x34, 0x30, 0x35, 0x34, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x41, 0x72, 0x67, 0x6f, 0x20,
		0x33, 0x47, 0x4c, 0x53, 0x35, 0x30, 0x34, 0x31, 0x50, 0x4c, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x54,
		0x72, 0x69, 0x78, 0x20, 0x34, 0x47, 0x4c, 0x53, 0x35, 0x30, 0x34, 0x30, 0x50, 0x4c, 0x4c, 0x69,
		0x6e, 0x78, 0x20, 0x52, 0x61, 0x67, 0x65, 0x20, 0x34, 0x47, 0x4c, 0x53, 0x35, 0x30, 0x35, 0x33,
		0x4d, 0x4c, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x50, 0x61, 0x79, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x6e,
		0x78, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x50, 0x54, 0x34, 0x35, 0x32, 0x45, 0x4c, 0x69, 0x6e,
		0x78, 0x20, 0x34, 0x2e, 0x35, 0x43, 0x49, 0x54, 0x49, 0x20, 0x41, 0x54, 0x4c, 0x20, 0x34, 0x47,
		0x20, 0x43, 0x53, 0x35, 0x30, 0x32, 0x39, 0x4d, 0x4c, 0x43, 0x49, 0x54, 0x49, 0x20, 0x41, 0x54,
		0x4c, 0x20, 0x34, 0x47, 0x54, 0x53, 0x37, 0x38, 0x35, 0x34, 0x4d, 0x50, 0x6c, 0x61, 0x6e, 0x65,
		0x20, 0x38, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x50, 0x53, 0x31, 0x30, 0x34, 0x33, 0x4d, 0x47,
		0x50, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x33, 0x22, 0x20, 0x33, 0x47, 0x54, 0x53,
		0x31, 0x30, 0x31, 0x32, 0x45, 0x20, 0x33, 0x47, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x69, 0x44, 0x78, 0x38, 0x4d, 0x56, 0x4d, 0x39, 0x30, 0x38,
		0x48, 0x43, 0x5a, 0x69, 0x44, 0x78, 0x39, 0x48, 0x49, 0x54, 0x20, 0x34, 0x47, 0x20, 0x48, 0x54,
		0x37, 0x30, 0x37, 0x34, 0x4d, 0x4c, 0x48, 0x49, 0x54, 0x20, 0x34, 0x47, 0x43, 0x49, 0x54, 0x49,
		0x20, 0x24, 0x31, 0x69, 0x44, 0x78, 0x44, 0x38, 0x20, 0x33, 0x47, 0x44, 0x2d, 0x50, 0x6c, 0x61,
		0x6e, 0x65, 0x32, 0x20, 0x38, 0x4e, 0x53, 0x36, 0x39, 0x30, 0x32, 0x51, 0x4c, 0x50, 0x6c, 0x61,
		0x74, 0x69, 0x6e, 0x61, 0x20, 0x37, 0x2e, 0x32, 0x20, 0x34, 0x47, 0x4e, 0x53, 0x39, 0x37, 0x39,
		0x37, 0x4d, 0x47, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x61, 0x20, 0x37, 0x2e, 0x32, 0x20, 0x33,
		0x47, 0x54, 0x54, 0x31, 0x30, 0x30, 0x34, 0x50, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20,
		0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x31, 0x30, 0x30, 0x32, 0x4d, 0x47,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x44, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x33,
		0x47, 0x54, 0x54, 0x37, 0x30, 0x32, 0x35, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20,
		0x37, 0x2e, 0x35, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x37, 0x30, 0x32, 0x36, 0x4d, 0x57, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e, 0x36, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x37,
		0x30, 0x32, 0x30, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e, 0x33, 0x22,
		0x20, 0x33, 0x47, 0x54, 0x54, 0x37, 0x30, 0x32, 0x34, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x61, 0x20, 0x37, 0x2e, 0x34, 0x22, 0x20, 0x33, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20,
		0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x24, 0x31, 0x20,
		0x33, 0x47, 0x56, 0x52, 0x20, 0x4c, 0x34, 0x32, 0x44, 0x4d, 0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31,
		0x44, 0x69, 0x74, 0x65, 0x63, 0x6d, 0x61, 0x44, 0x69, 0x76, 0x61, 0x44, 0x69, 0x76, 0x69, 0x73,
		0x61, 0x74, 0x58, 0x2d, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x6f, 0x43, 0x6f, 0x4d, 0x6f, 0x44,
		0x6f, 0x66, 0x66, 0x6c, 0x65, 0x72, 0x44, 0x6f, 0x6c, 0x61, 0x6d, 0x65, 0x65, 0x44, 0x6f, 0x6f,
		0x67, 0x65, 0x65, 0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x32, 0x20, 0x59, 0x31, 0x30,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x32, 0x5f,
		0x59, 0x31, 0x30, 0x30, 0x70, 0x72, 0x6f, 0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x32,
		0x20, 0x59, 0x31, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69,
		0x61, 0x32, 0x20, 0x59, 0x31, 0x30, 0x30, 0x4c, 0x65, 0x6f, 0x20, 0x24, 0x31, 0x49, 0x72, 0x6f,
		0x6e, 0x20, 0x42, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x58, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x4e, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x31, 0x32, 0x30, 0x30, 0x30, 0x20, 0x50,
		0x52, 0x4f, 0x42, 0x4c, 0x31, 0x32, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x35,
		0x35, 0x30, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x4c, 0x31, 0x32, 0x30, 0x30, 0x30, 0x53,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x24,
		0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4b, 0x49, 0x53, 0x53, 0x4d, 0x45, 0x2d, 0x44, 0x47, 0x35,
		0x38, 0x30, 0x4b, 0x69, 0x73, 0x73, 0x6d, 0x65, 0x20, 0x44, 0x47, 0x35, 0x38, 0x30, 0x48, 0x69,
		0x74, 0x6d, 0x61, 0x6e, 0x5f, 0x44, 0x47, 0x38, 0x35, 0x30, 0x48, 0x69, 0x74, 0x6d, 0x61, 0x6e,
		0x20, 0x44, 0x47, 0x35, 0x38, 0x30, 0x58, 0x39, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x78, 0x35, 0x5f,
		0x64, 0x6f, 0x6f, 0x67, 0x65, 0x65, 0x58, 0x35, 0x54, 0x35, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x54,
		0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x44, 0x6f, 0x6f, 0x67, 0x65, 0x65, 0x20, 0x58, 0x35, 0x4d,
		0x50, 0x58, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x6f, 0x74,
		0x20, 0x24, 0x31, 0x49, 0x62, 0x69, 0x7a, 0x61, 0x5f, 0x46, 0x32, 0x49, 0x62, 0x69, 0x7a, 0x61,
		0x20, 0x46, 0x32, 0x59, 0x36, 0x5f, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x5f, 0x62, 0x6c, 0x61, 0x63,
		0x6b, 0x59, 0x36, 0x20, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x59,
		0x36, 0x5f, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x59, 0x36, 0x20, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x59,
		0x36, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x33, 0x44, 0x59, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x59, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x69, 0x78, 0x20, 0x32, 0x44, 0x6f, 0x6f, 0x70, 0x72,
		0x6f, 0x50, 0x33, 0x44, 0x6f, 0x6f, 0x76, 0x44, 0x6f, 0x70, 0x6f, 0x64, 0x44, 0x6f, 0x70, 0x70,
		0x69, 0x6f, 0x44, 0x6f, 0x70, 0x70, 0x69, 0x6f, 0x20, 0x44, 0x50, 0x33, 0x35, 0x35, 0x44, 0x6f,
		0x72, 0x6f, 0x38, 0x30, 0x35, 0x30, 0x38, 0x30, 0x38, 0x30, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x67, 0x61, 0x74, 0x65, 0x53,
		0x65, 0x6e, 0x73, 0x20, 0x35, 0x44, 0x72, 0x6f, 0x78, 0x69, 0x6f, 0x44, 0x75, 0x6e, 0x65, 0x20,
		0x48, 0x44, 0x53, 0x6f, 0x6c, 0x6f, 0x20, 0x34, 0x6b, 0x45, 0x2d, 0x42, 0x6f, 0x64, 0x61, 0x52,
		0x65, 0x76, 0x6f, 0x20, 0x52, 0x37, 0x37, 0x20, 0x47, 0x50, 0x53, 0x45, 0x63, 0x6c, 0x69, 0x70,
		0x73, 0x65, 0x20, 0x24, 0x31, 0x45, 0x2d, 0x43, 0x65, 0x72, 0x6f, 0x73, 0x52, 0x65, 0x76, 0x6f,
		0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
		0x20, 0x48, 0x44, 0x45, 0x2d, 0x74, 0x65, 0x6c, 0x45, 0x2d, 0x74, 0x65, 0x6c, 0x5f, 0x69, 0x32,
		0x35, 0x30, 0x69, 0x32, 0x35, 0x30, 0x45, 0x42, 0x45, 0x53, 0x54, 0x45, 0x43, 0x53, 0x54, 0x41,
		0x31, 0x30, 0x43, 0x41, 0x33, 0x54, 0x4d, 0x31, 0x30, 0x35, 0x41, 0x54, 0x4d, 0x31, 0x30, 0x35,
		0x45, 0x45, 0x52, 0x6f, 0x63, 0x6b, 0x45, 0x47, 0x4c, 0x45, 0x47, 0x4c, 0x31, 0x31, 0x51, 0x46,
		0x36, 0x31, 0x31, 0x51, 0x46, 0x36, 0x45, 0x4b, 0x4f, 0x45, 0x4b, 0x4f, 0x20, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x32, 0x4b, 0x32, 0x4b, 0x20, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x45, 0x4b, 0x54, 0x45, 0x4b, 0x2d, 0x24, 0x31, 0x45,
		0x4c, 0x41, 0x52, 0x49, 0x4b, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x47, 0x45,
		0x56, 0x50, 0x41, 0x44, 0x45, 0x56, 0x42, 0x6f, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x57,
		0x49, 0x53, 0x4f, 0x63, 0x74, 0x61, 0x20, 0x54, 0x37, 0x32, 0x30, 0x51, 0x45, 0x58, 0x43, 0x45,
		0x45, 0x44, 0x45, 0x58, 0x4f, 0x45, 0x61, 0x67, 0x6c, 0x65, 0x45, 0x61, 0x73, 0x79, 0x70, 0x69,
		0x78, 0x45, 0x61, 0x73, 0x79, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x45, 0x63, 0x68, 0x6f, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x43, 0x48, 0x4f, 0x5f, 0x48, 0x4f, 0x52, 0x49,
		0x5a, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x4f, 0x4e, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x33, 0x47, 0x45, 0x43,
		0x48, 0x4f, 0x5f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x34, 0x47, 0x53, 0x4d, 0x41, 0x52, 0x54,
		0x20, 0x34, 0x47, 0x45, 0x69, 0x6e, 0x73, 0x74, 0x65, 0x69, 0x6e, 0x45, 0x6b, 0x73, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x35, 0x4c, 0x53, 0x58, 0x34, 0x55, 0x50, 0x6c,
		0x75, 0x73, 0x58, 0x34, 0x55, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72,
		0x6f, 0x6e, 0x65, 0x75, 0x6d, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x61, 0x24, 0x31, 0x22, 0x20, 0x46,
		0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x35,
		0x35, 0x22, 0x20, 0x55, 0x48, 0x44, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65, 0x64, 0x20, 0x4c, 0x45,
		0x44, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x24, 0x31, 0x22, 0x20, 0x55, 0x48,
		0x44, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x24, 0x31,
		0x22, 0x20, 0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54,
		0x56, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x46, 0x54, 0x52, 0x53, 0x45, 0x6c, 0x65,
		0x6d, 0x65, 0x6e, 0x74, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x45, 0x6c,
		0x65, 0x6e, 0x62, 0x65, 0x72, 0x67, 0x45, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x72,
		0x75, 0x6e, 0x6b, 0x56, 0x6f, 0x77, 0x6e, 0x65, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x6f,
		0x77, 0x6e, 0x65, 0x79, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36,
		0x30, 0x30, 0x30, 0x20, 0x30, 0x32, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x30, 0x31, 0x50, 0x36,
		0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6f, 0x6c, 0x64, 0x69, 0x65, 0x72, 0x41, 0x36,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x33, 0x48, 0x50, 0x58,
		0x45, 0x6c, 0x74, 0x65, 0x78, 0x4e, 0x56, 0x2d, 0x24, 0x31, 0x2d, 0x57, 0x61, 0x63, 0x4e, 0x56,
		0x2d, 0x35, 0x30, 0x31, 0x4e, 0x56, 0x2d, 0x35, 0x31, 0x30, 0x2d, 0x57, 0x42, 0x45, 0x6d, 0x61,
		0x74, 0x69, 0x63, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x69, 0x7a, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x24, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x24,
		0x31, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x34, 0x30, 0x30, 0x53,
		0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x34, 0x30, 0x30, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20,
		0x34, 0x30, 0x30, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x53, 0x24, 0x31, 0x45, 0x6e, 0x65,
		0x72, 0x67, 0x79, 0x20, 0x24, 0x31, 0x48, 0x61, 0x72, 0x64, 0x20, 0x43, 0x61, 0x73, 0x65, 0x20,
		0x24, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x53, 0x69, 0x73, 0x74, 0x65, 0x6d, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x33, 0x45, 0x6e, 0x67, 0x65, 0x6c, 0x45, 0x6e, 0x6f, 0x74, 0x45, 0x70, 0x69, 0x6b, 0x20, 0x4f,
		0x6e, 0x65, 0x4b, 0x35, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x65, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4b, 0x35, 0x30, 0x31, 0x4c, 0x65, 0x6f, 0x4b, 0x35, 0x30, 0x30, 0x4f, 0x6d,
		0x65, 0x67, 0x61, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4b, 0x35, 0x30, 0x32, 0x4b, 0x35, 0x30, 0x33,
		0x54, 0x4c, 0x65, 0x6f, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b, 0x35, 0x30, 0x33, 0x53, 0x4c,
		0x65, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x35, 0x30, 0x33, 0x48, 0x44, 0x4c, 0x65, 0x6f, 0x20,
		0x48, 0x44, 0x4b, 0x35, 0x30, 0x33, 0x4c, 0x65, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x35, 0x30,
		0x34, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x33, 0x47, 0x58, 0x35, 0x30, 0x37, 0x54, 0x54, 0x69,
		0x74, 0x61, 0x6e, 0x20, 0x49, 0x49, 0x4b, 0x35, 0x31, 0x30, 0x42, 0x6f, 0x6c, 0x74, 0x4b, 0x35,
		0x31, 0x31, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x35, 0x33, 0x34, 0x48, 0x61,
		0x64, 0x61, 0x4b, 0x35, 0x33, 0x35, 0x48, 0x61, 0x64, 0x61, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f,
		0x4b, 0x35, 0x34, 0x35, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4b, 0x35, 0x33, 0x36, 0x52, 0x6f,
		0x79, 0x61, 0x6c, 0x4b, 0x35, 0x34, 0x30, 0x45, 0x78, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x75, 0x72,
		0x4b, 0x35, 0x37, 0x33, 0x50, 0x61, 0x6e, 0x74, 0x68, 0x65, 0x72, 0x4b, 0x36, 0x30, 0x30, 0x4a,
		0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x4b, 0x36, 0x30, 0x31, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65,
		0x72, 0x20, 0x4f, 0x6e, 0x65, 0x4b, 0x34, 0x30, 0x36, 0x50, 0x65, 0x62, 0x62, 0x6c, 0x65, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4b, 0x34, 0x30, 0x35, 0x50, 0x65, 0x62, 0x62, 0x6c, 0x65, 0x20, 0x49,
		0x49, 0x54, 0x37, 0x30, 0x30, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x45, 0x70, 0x73, 0x6f,
		0x6e, 0x70, 0x65, 0x72, 0x69, 0x70, 0x68, 0x65, 0x72, 0x61, 0x6c, 0x48, 0x41, 0x31, 0x34, 0x41,
		0x20, 0x4c, 0x43, 0x44, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x72,
		0x67, 0x6f, 0x46, 0x35, 0x30, 0x31, 0x5f, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x46, 0x35, 0x30, 0x31,
		0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x42, 0x35, 0x30, 0x32, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63,
		0x41, 0x35, 0x30, 0x33, 0x2d, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x41, 0x35, 0x30, 0x33, 0x20,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x42, 0x35, 0x30, 0x36, 0x20, 0x49, 0x6e, 0x74, 0x72, 0x6f,
		0x56, 0x35, 0x35, 0x30, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x35, 0x30, 0x34, 0x20,
		0x55, 0x6e, 0x69, 0x74, 0x42, 0x35, 0x30, 0x35, 0x5f, 0x55, 0x6e, 0x69, 0x74, 0x5f, 0x34, 0x47,
		0x42, 0x35, 0x30, 0x35, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x20, 0x34, 0x47, 0x56, 0x35, 0x35, 0x31,
		0x20, 0x41, 0x75, 0x72, 0x61, 0x56, 0x35, 0x34, 0x30, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x56,
		0x35, 0x34, 0x30, 0x20, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x56, 0x35, 0x37, 0x30, 0x5f, 0x42, 0x49,
		0x47, 0x5f, 0x42, 0x45, 0x4e, 0x56, 0x35, 0x37, 0x30, 0x20, 0x42, 0x69, 0x67, 0x20, 0x42, 0x65,
		0x6e, 0x45, 0x72, 0x67, 0x6f, 0x20, 0x46, 0x35, 0x30, 0x32, 0x46, 0x35, 0x30, 0x32, 0x20, 0x50,
		0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x41, 0x35, 0x30, 0x30, 0x20, 0x42, 0x65, 0x73, 0x74,
		0x41, 0x35, 0x35, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x42,
		0x34, 0x30, 0x30, 0x41, 0x35, 0x30, 0x32, 0x20, 0x41, 0x75, 0x72, 0x75, 0x6d, 0x41, 0x35, 0x35,
		0x31, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x34, 0x47, 0x41, 0x35, 0x35, 0x33, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x41, 0x35, 0x35, 0x35, 0x20, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x41,
		0x35, 0x35, 0x36, 0x46, 0x35, 0x30, 0x30, 0x46, 0x35, 0x30, 0x31, 0x42, 0x35, 0x30, 0x30, 0x20,
		0x46, 0x69, 0x72, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x46, 0x35, 0x30, 0x30, 0x47,
		0x6f, 0x54, 0x61, 0x62, 0x20, 0x47, 0x42, 0x54, 0x39, 0x47, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x47,
		0x74, 0x69, 0x38, 0x47, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x47, 0x54, 0x69, 0x38, 0x54, 0x61, 0x62,
		0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x61, 0x62,
		0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x45, 0x52, 0x47, 0x4f, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x42, 0x6f, 0x78, 0x20, 0x53, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x78,
		0x20, 0x53, 0x58, 0x45, 0x72, 0x69, 0x63, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x33, 0x38, 0x30, 0x45,
		0x72, 0x69, 0x63, 0x79, 0x45, 0x72, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x45, 0x73, 0x73, 0x65, 0x6e,
		0x74, 0x69, 0x61, 0x6c, 0x50, 0x48, 0x2d, 0x31, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x65,
		0x6c, 0x62, 0x48, 0x45, 0x59, 0x6f, 0x75, 0x20, 0x24, 0x31, 0x57, 0x6f, 0x6f, 0x7a, 0x65, 0x20,
		0x24, 0x31, 0x45, 0x74, 0x6f, 0x6e, 0x45, 0x74, 0x75, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x75, 0x72,
		0x6f, 0x63, 0x61, 0x73, 0x65, 0x45, 0x55, 0x54, 0x42, 0x5f, 0x37, 0x35, 0x38, 0x47, 0x5f, 0x54,
		0x41, 0x42, 0x49, 0x5f, 0x41, 0x72, 0x67, 0x6f, 0x73, 0x5f, 0x4b, 0x49, 0x44, 0x53, 0x54, 0x41,
		0x42, 0x49, 0x20, 0x41, 0x72, 0x67, 0x6f, 0x73, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x37, 0x35,
		0x38, 0x47, 0x45, 0x75, 0x72, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x24,
		0x31, 0x65, 0x50, 0x61, 0x64, 0x20, 0x34, 0x53, 0x45, 0x76, 0x65, 0x72, 0x63, 0x6f, 0x73, 0x73,
		0x41, 0x37, 0x35, 0x41, 0x20, 0x53, 0x74, 0x61, 0x72, 0x41, 0x37, 0x35, 0x20, 0x4d, 0x61, 0x78,
		0x55, 0x35, 0x30, 0x41, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x35, 0x30, 0x20, 0x53, 0x74, 0x61,
		0x72, 0x45, 0x76, 0x65, 0x72, 0x74, 0x65, 0x6b, 0x45, 0x76, 0x65, 0x72, 0x70, 0x61, 0x64, 0x20,
		0x24, 0x31, 0x56, 0x35, 0x5f, 0x4e, 0x61, 0x6e, 0x6f, 0x56, 0x35, 0x20, 0x4e, 0x61, 0x6e, 0x6f,
		0x45, 0x76, 0x65, 0x72, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x45, 0x76, 0x6f, 0x6c, 0x69, 0x6f, 0x4d, 0x34, 0x4d, 0x41, 0x47, 0x49, 0x43, 0x4d, 0x34, 0x20,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x45, 0x76, 0x6f, 0x6c, 0x69, 0x6f, 0x5f, 0x4d, 0x35, 0x50, 0x72,
		0x6f, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x6f, 0x45, 0x56,
		0x4f, 0x4c, 0x56, 0x45, 0x4f, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x20, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x34, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56,
		0x20, 0x24, 0x31, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x47,
		0x24, 0x31, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x51, 0x24,
		0x31, 0x24, 0x32, 0x45, 0x76, 0x6f, 0x6f, 0x45, 0x56, 0x4d, 0x34, 0x47, 0x33, 0x45, 0x76, 0x72,
		0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x70, 0x61, 0x64, 0x20, 0x33, 0x47,
		0x20, 0x47, 0x4f, 0x4f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x20,
		0x47, 0x6f, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x20, 0x32,
		0x47, 0x6f, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x52, 0x4f, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x4c, 0x41, 0x59, 0x5f,
		0x50, 0x41, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x58, 0x4c, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x58, 0x4c, 0x50, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x64,
		0x20, 0x33, 0x47, 0x54, 0x61, 0x62, 0x20, 0x58, 0x4c, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x33, 0x47, 0x20, 0x54, 0x61, 0x62, 0x20, 0x58, 0x4c, 0x33, 0x47, 0x20, 0x4e, 0x4f,
		0x54, 0x45, 0x20, 0x58, 0x4c, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x58, 0x4c, 0x45, 0x78, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x45, 0x58, 0x20, 0x24, 0x31, 0x69, 0x45, 0x78, 0x6d, 0x61, 0x72, 0x74, 0x45, 0x78, 0x70, 0x6c,
		0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x20, 0x37, 0x2e, 0x34, 0x20, 0x33, 0x47,
		0x49, 0x6d, 0x70, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x41, 0x63,
		0x74, 0x69, 0x76, 0x65, 0x44, 0x20, 0x38, 0x2e, 0x32, 0x20, 0x33, 0x47, 0x43, 0x69, 0x6e, 0x65,
		0x6d, 0x61, 0x54, 0x56, 0x20, 0x33, 0x47, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x6c,
		0x6c, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x49, 0x49, 0x49, 0x6e, 0x66, 0x6f,
		0x72, 0x6d, 0x65, 0x72, 0x20, 0x24, 0x31, 0x53, 0x75, 0x72, 0x66, 0x65, 0x72, 0x20, 0x24, 0x31,
		0x73, 0x51, 0x75, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x20,
		0x24, 0x31, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x20, 0x24, 0x31, 0x41, 0x74, 0x6c, 0x61, 0x6e,
		0x74, 0x49, 0x6e, 0x64, 0x69, 0x67, 0x6f, 0x50, 0x75, 0x6c, 0x73, 0x61, 0x72, 0x54, 0x6f, 0x72,
		0x6e, 0x61, 0x64, 0x6f, 0x20, 0x33, 0x47, 0x4a, 0x6f, 0x79, 0x54, 0x56, 0x46, 0x69, 0x6e, 0x4c,
		0x61, 0x67, 0x6f, 0x6f, 0x6e, 0x52, 0x69, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x65, 0x61,
		0x64, 0x65, 0x72, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x52, 0x6f, 0x63, 0x6b, 0x20, 0x58, 0x39,
		0x2b, 0x52, 0x4f, 0x43, 0x4b, 0x5f, 0x58, 0x31, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x20, 0x58, 0x31,
		0x31, 0x45, 0x7a, 0x69, 0x6f, 0x45, 0x7a, 0x7a, 0x65, 0x45, 0x5a, 0x24, 0x31, 0x46, 0x31, 0x35,
		0x30, 0x42, 0x32, 0x30, 0x32, 0x31, 0x46, 0x32, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5a,
		0x38, 0x50, 0x4c, 0x55, 0x53, 0x5a, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x38, 0x50, 0x4f,
		0x43, 0x4b, 0x45, 0x54, 0x5a, 0x38, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x38, 0x30,
		0x73, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x46, 0x38, 0x30, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46,
		0x38, 0x30, 0x20, 0x50, 0x49, 0x41, 0x42, 0x45, 0x4c, 0x4c, 0x41, 0x46, 0x38, 0x30, 0x20, 0x50,
		0x69, 0x61, 0x62, 0x65, 0x6c, 0x6c, 0x61, 0x43, 0x38, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x43,
		0x38, 0x20, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x46, 0x45, 0x4f, 0x4e, 0x41, 0x4c, 0x46, 0x49,
		0x53, 0x45, 0x46, 0x69, 0x73, 0x65, 0x5f, 0x4d, 0x33, 0x32, 0x34, 0x33, 0x33, 0x20, 0x33, 0x47,
		0x46, 0x4c, 0x59, 0x43, 0x41, 0x54, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x24, 0x31,
		0x55, 0x6e, 0x69, 0x63, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x46, 0x4d, 0x54, 0x31, 0x36, 0x4d, 0x34,
		0x48, 0x49, 0x31, 0x30, 0x35, 0x30, 0x32, 0x34, 0x4e, 0x65, 0x74, 0x73, 0x75, 0x72, 0x66, 0x65,
		0x72, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x46, 0x4d, 0x54, 0x2d, 0x4e, 0x4d, 0x37, 0x30, 0x35,
		0x38, 0x2d, 0x30, 0x32, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x31, 0x37, 0x36, 0x48, 0x53, 0x31, 0x30,
		0x35, 0x30, 0x35, 0x33, 0x31, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x31, 0x37, 0x36, 0x48, 0x53,
		0x31, 0x30, 0x35, 0x30, 0x32, 0x33, 0x32, 0x42, 0x35, 0x32, 0x31, 0x37, 0x35, 0x57, 0x54, 0x31,
		0x30, 0x35, 0x30, 0x32, 0x33, 0x31, 0x31, 0x37, 0x35, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x32,
		0x33, 0x31, 0x54, 0x6f, 0x6d, 0x63, 0x61, 0x74, 0x31, 0x37, 0x35, 0x46, 0x54, 0x31, 0x30, 0x35,
		0x30, 0x32, 0x34, 0x31, 0x56, 0x69, 0x70, 0x65, 0x72, 0x46, 0x4e, 0x42, 0x53, 0x50, 0x35, 0x30,
		0x34, 0x35, 0x56, 0x43, 0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x41, 0x31, 0x43, 0x6f, 0x6e,
		0x65, 0x58, 0x69, 0x73, 0x20, 0x41, 0x32, 0x43, 0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x58,
		0x31, 0x43, 0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x58, 0x32, 0x46, 0x4e, 0x46, 0x69, 0x46,
		0x69, 0x76, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x24, 0x31, 0x69, 0x46, 0x69, 0x76, 0x65,
		0x20, 0x24, 0x31, 0x69, 0x66, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x33, 0x69, 0x46, 0x69,
		0x76, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x69, 0x66, 0x69, 0x76, 0x65, 0x20, 0x41,
		0x69, 0x72, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x41, 0x69, 0x72, 0x46, 0x4f, 0x52, 0x4d, 0x45,
		0x46, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x46, 0x61, 0x52, 0x61, 0x6f, 0x20, 0x50, 0x72, 0x6f,
		0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x54, 0x56,
		0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x20, 0x54, 0x56, 0x46, 0x61, 0x69, 0x72, 0x70, 0x68, 0x6f,
		0x6e, 0x65, 0x46, 0x61, 0x6d, 0x6f, 0x63, 0x6f, 0x46, 0x61, 0x6e, 0x74, 0x65, 0x63, 0x4d, 0x33,
		0x30, 0x30, 0x48, 0x46, 0x61, 0x72, 0x45, 0x61, 0x73, 0x54, 0x6f, 0x6e, 0x65, 0x46, 0x65, 0x6e,
		0x67, 0x78, 0x69, 0x61, 0x6e, 0x67, 0x46, 0x65, 0x72, 0x6f, 0x46, 0x65, 0x72, 0x6f, 0x5f, 0x59,
		0x31, 0x59, 0x31, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x65, 0x20, 0x59, 0x32, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x46, 0x45, 0x52, 0x4f, 0x20, 0x50,
		0x41, 0x43, 0x45, 0x50, 0x61, 0x63, 0x65, 0x46, 0x69, 0x47, 0x4f, 0x41, 0x54, 0x52, 0x49, 0x55,
		0x4d, 0x20, 0x49, 0x49, 0x20, 0x46, 0x35, 0x35, 0x4c, 0x32, 0x41, 0x74, 0x72, 0x69, 0x75, 0x6d,
		0x20, 0x49, 0x49, 0x54, 0x52, 0x49, 0x4f, 0x20, 0x46, 0x34, 0x30, 0x4c, 0x54, 0x54, 0x72, 0x69,
		0x6f, 0x20, 0x46, 0x34, 0x30, 0x4c, 0x54, 0x45, 0x50, 0x49, 0x43, 0x20, 0x46, 0x35, 0x30, 0x47,
		0x45, 0x70, 0x69, 0x63, 0x20, 0x46, 0x35, 0x30, 0x47, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x20, 0x4d,
		0x35, 0x30, 0x47, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4d, 0x34, 0x30, 0x35, 0x42, 0x5f, 0x38, 0x47,
		0x42, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x49, 0x49, 0x20, 0x38, 0x47, 0x42, 0x4d, 0x34,
		0x30, 0x35, 0x42, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x49, 0x49, 0x56, 0x49, 0x52, 0x54,
		0x55, 0x45, 0x33, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x49, 0x49, 0x49, 0x43, 0x45, 0x4e,
		0x54, 0x52, 0x49, 0x43, 0x20, 0x53, 0x35, 0x30, 0x47, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63,
		0x20, 0x53, 0x35, 0x30, 0x47, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4a, 0x38, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x20, 0x4a, 0x38, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x5f, 0x6c, 0x6c, 0x4f, 0x72, 0x62, 0x69,
		0x74, 0x20, 0x49, 0x49, 0x46, 0x69, 0x47, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x46, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x6c,
		0x75, 0x78, 0x46, 0x69, 0x72, 0x65, 0x46, 0x6c, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69,
		0x20, 0x44, 0x65, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x44, 0x72,
		0x65, 0x61, 0x6d, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x44, 0x72,
		0x65, 0x61, 0x6d, 0x20, 0x4f, 0x6e, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x41, 0x6d, 0x75, 0x73, 0x65, 0x20, 0x33, 0x47,
		0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x72, 0x69,
		0x69, 0x20, 0x78, 0x43, 0x69, 0x74, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x53, 0x65, 0x63,
		0x72, 0x65, 0x74, 0x20, 0x58, 0x52, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x24, 0x31, 0x49, 0x6e,
		0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x6e,
		0x73, 0x65, 0x20, 0x58, 0x54, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x4d, 0x65, 0x74,
		0x61, 0x6c, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x53, 0x77, 0x65, 0x65, 0x74, 0x53,
		0x77, 0x65, 0x65, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x6c, 0x79, 0x50, 0x61, 0x6e, 0x6f,
		0x72, 0x61, 0x6d, 0x61, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6c, 0x69, 0x6d, 0x6c,
		0x69, 0x6e, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x30,
		0x30, 0x30, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x41, 0x63, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4a, 0x65, 0x74, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x53, 0x6b, 0x79, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x47, 0x65, 0x6f, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x5a, 0x65, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x66, 0x65,
		0x20, 0x42, 0x75, 0x7a, 0x7a, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63,
		0x74, 0x20, 0x34, 0x47, 0x46, 0x53, 0x35, 0x30, 0x36, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20,
		0x33, 0x46, 0x53, 0x34, 0x30, 0x33, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x75, 0x73, 0x20, 0x31, 0x46,
		0x53, 0x35, 0x30, 0x38, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x36, 0x46, 0x53, 0x35, 0x31,
		0x31, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x37, 0x46, 0x53, 0x35, 0x30, 0x39, 0x4e, 0x69,
		0x6d, 0x62, 0x75, 0x73, 0x20, 0x39, 0x46, 0x53, 0x34, 0x30, 0x36, 0x53, 0x74, 0x72, 0x61, 0x74,
		0x75, 0x73, 0x20, 0x35, 0x46, 0x53, 0x34, 0x30, 0x34, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73,
		0x20, 0x33, 0x46, 0x53, 0x35, 0x30, 0x34, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x32, 0x46,
		0x53, 0x34, 0x30, 0x37, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x36, 0x46, 0x53, 0x34,
		0x30, 0x31, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x31, 0x46, 0x53, 0x34, 0x30, 0x32,
		0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53, 0x35, 0x30, 0x31, 0x4e, 0x69,
		0x6d, 0x62, 0x75, 0x73, 0x20, 0x33, 0x46, 0x53, 0x35, 0x30, 0x32, 0x43, 0x69, 0x72, 0x72, 0x75,
		0x73, 0x20, 0x31, 0x46, 0x53, 0x35, 0x30, 0x37, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x34,
		0x46, 0x53, 0x35, 0x30, 0x35, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x37, 0x46, 0x53, 0x35,
		0x35, 0x31, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x34, 0x46, 0x53, 0x35, 0x31, 0x34, 0x43,
		0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x38, 0x46, 0x53, 0x35, 0x35, 0x33, 0x43, 0x69, 0x72, 0x72,
		0x75, 0x73, 0x20, 0x39, 0x46, 0x53, 0x35, 0x35, 0x34, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x46, 0x48, 0x44, 0x46, 0x53, 0x35, 0x31, 0x37, 0x43, 0x69, 0x72, 0x72,
		0x75, 0x73, 0x20, 0x31, 0x31, 0x46, 0x53, 0x35, 0x31, 0x36, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73,
		0x20, 0x31, 0x32, 0x46, 0x53, 0x35, 0x31, 0x38, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31,
		0x33, 0x46, 0x53, 0x35, 0x32, 0x30, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x31, 0x46, 0x53,
		0x35, 0x32, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x31, 0x46,
		0x53, 0x35, 0x32, 0x32, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x34, 0x46, 0x53, 0x35,
		0x32, 0x33, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x36, 0x46, 0x53, 0x35, 0x32, 0x34,
		0x4b, 0x6e, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x46, 0x53, 0x35, 0x32, 0x36, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53, 0x35, 0x32, 0x37, 0x4e, 0x69,
		0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x37, 0x46, 0x53, 0x35, 0x32, 0x38, 0x4d, 0x65, 0x6d, 0x6f,
		0x72, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x53, 0x35, 0x32, 0x39, 0xd0, 0xa1, 0x68, 0x61,
		0x6d, 0x70, 0x46, 0x53, 0x35, 0x33, 0x30, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x58, 0x58, 0x4c, 0x46, 0x53, 0x34, 0x35, 0x34, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73,
		0x20, 0x38, 0x46, 0x53, 0x34, 0x35, 0x32, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x32, 0x46,
		0x53, 0x35, 0x31, 0x32, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x30, 0x46, 0x53, 0x35,
		0x31, 0x30, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x32, 0x46, 0x53, 0x34, 0x35, 0x31,
		0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x46, 0x53, 0x34, 0x30, 0x35, 0x53, 0x74, 0x72,
		0x61, 0x74, 0x75, 0x73, 0x20, 0x34, 0x46, 0x53, 0x34, 0x30, 0x38, 0x53, 0x74, 0x72, 0x61, 0x74,
		0x75, 0x73, 0x20, 0x38, 0x46, 0x53, 0x34, 0x30, 0x39, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73,
		0x20, 0x39, 0x46, 0x53, 0x34, 0x35, 0x35, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x31,
		0x46, 0x53, 0x34, 0x35, 0x36, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x34, 0x46, 0x53,
		0x34, 0x35, 0x37, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x35, 0x46, 0x53, 0x34, 0x35,
		0x39, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x36, 0x46, 0x53, 0x34, 0x35, 0x38, 0x53,
		0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x37, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4a,
		0x61, 0x7a, 0x7a, 0x57, 0x68, 0x69, 0x7a, 0x7a, 0x50, 0x72, 0x69, 0x64, 0x65, 0x46, 0x69, 0x72,
		0x65, 0x62, 0x69, 0x72, 0x64, 0x4d, 0x61, 0x72, 0x61, 0x74, 0x68, 0x6f, 0x6e, 0x54, 0x75, 0x72,
		0x62, 0x6f, 0x45, 0x76, 0x6f, 0x6b, 0x65, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x45, 0x72, 0x61, 0x20,
		0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x31, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x33,
		0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x34, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61,
		0x6e, 0x6f, 0x20, 0x35, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x36, 0x45, 0x72,
		0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x39, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x45, 0x72,
		0x61, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x32, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e,
		0x63, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x4d, 0x69, 0x72, 0x61, 0x63,
		0x6c, 0x65, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x32, 0x47, 0x65, 0x6e, 0x69, 0x75,
		0x73, 0x45, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x31, 0x45, 0x72, 0x61, 0x20, 0x4c,
		0x69, 0x66, 0x65, 0x20, 0x32, 0x45, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x34, 0x43,
		0x68, 0x69, 0x63, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f,
		0x6e, 0x20, 0x32, 0x56, 0x69, 0x73, 0x74, 0x61, 0x45, 0x67, 0x6f, 0x20, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x20, 0x31, 0x45, 0x76, 0x6f, 0x20, 0x54, 0x65, 0x63, 0x68, 0x20, 0x31, 0x45, 0x6e,
		0x65, 0x72, 0x67, 0x79, 0x20, 0x33, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x6e, 0x65,
		0x72, 0x67, 0x79, 0x20, 0x32, 0x43, 0x6f, 0x72, 0x61, 0x6c, 0x45, 0x76, 0x6f, 0x20, 0x43, 0x68,
		0x69, 0x63, 0x20, 0x33, 0x45, 0x76, 0x6f, 0x20, 0x54, 0x65, 0x63, 0x68, 0x20, 0x33, 0x45, 0x72,
		0x61, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x33, 0x45, 0x76, 0x6f, 0x20, 0x45, 0x6e, 0x65,
		0x72, 0x67, 0x79, 0x20, 0x35, 0x49, 0x51, 0x24, 0x31, 0x46, 0x6c, 0x79, 0x6c, 0x69, 0x66, 0x65,
		0x20, 0x24, 0x31, 0x46, 0x6f, 0x6e, 0x64, 0x69, 0x46, 0x6f, 0x6e, 0x6f, 0x73, 0x46, 0x6f, 0x72,
		0x6d, 0x75, 0x6c, 0x65, 0x72, 0x53, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x50, 0x72, 0x6f,
		0x46, 0x6f, 0x72, 0x73, 0x74, 0x61, 0x72, 0x41, 0x6d, 0x6f, 0x73, 0x74, 0x61, 0x20, 0x33, 0x47,
		0x35, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x53, 0x31, 0x38, 0x35, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x32, 0x53, 0x36, 0x31, 0x20,
		0x45, 0x63, 0x6f, 0x20, 0x32, 0x46, 0x6f, 0x75, 0x72, 0x65, 0x6c, 0x45, 0x61, 0x73, 0x79, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x24, 0x31, 0x46, 0x6f, 0x78, 0x63, 0x6f, 0x6e, 0x6e,
		0x49, 0x6e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x20, 0x4d, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x74,
		0x65, 0x6c, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x43, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61, 0x69,
		0x20, 0x4d, 0x69, 0x79, 0x61, 0x62, 0x69, 0x52, 0x65, 0x69, 0x20, 0x32, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x35, 0x43, 0x72, 0x69, 0x63, 0x6b, 0x65, 0x74,
		0x20, 0x57, 0x61, 0x76, 0x65, 0x46, 0x54, 0x4a, 0x31, 0x36, 0x31, 0x41, 0x4d, 0x75, 0x73, 0x61,
		0x73, 0x68, 0x69, 0x46, 0x54, 0x45, 0x31, 0x36, 0x31, 0x45, 0x49, 0x63, 0x65, 0x20, 0x32, 0x46,
		0x54, 0x45, 0x31, 0x36, 0x31, 0x47, 0x49, 0x63, 0x65, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x46, 0x54, 0x4a, 0x31, 0x36, 0x32, 0x45, 0x52, 0x61, 0x69, 0x6a, 0x69, 0x6e, 0x46, 0x54, 0x31,
		0x34, 0x31, 0x42, 0x4e, 0x69, 0x63, 0x6f, 0x58, 0x4d, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20,
		0x32, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x41, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x33,
		0x46, 0x54, 0x4a, 0x31, 0x36, 0x32, 0x44, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x34, 0x46,
		0x54, 0x4a, 0x31, 0x35, 0x32, 0x42, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x33, 0x53, 0x20,
		0x4c, 0x54, 0x45, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x44, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61,
		0x69, 0x20, 0x4b, 0x69, 0x77, 0x61, 0x6d, 0x69, 0x46, 0x54, 0x4a, 0x31, 0x36, 0x32, 0x42, 0x53,
		0x61, 0x6d, 0x75, 0x72, 0x61, 0x69, 0x20, 0x4b, 0x69, 0x77, 0x61, 0x6d, 0x69, 0x20, 0x32, 0x46,
		0x54, 0x4a, 0x31, 0x36, 0x31, 0x42, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61, 0x69, 0x20, 0x52, 0x65,
		0x69, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x45, 0x4b, 0x61, 0x74, 0x61, 0x6e, 0x61, 0x20, 0x31,
		0x46, 0x75, 0x6a, 0x69, 0x74, 0x73, 0x75, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x35, 0x47,
		0x20, 0x46, 0x2d, 0x35, 0x31, 0x41, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20,
		0x46, 0x2d, 0x30, 0x31, 0x46, 0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x24, 0x31, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x46,
		0x2d, 0x30, 0x33, 0x4c, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d,
		0x30, 0x31, 0x4a, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30,
		0x31, 0x4b, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x46, 0x69, 0x74, 0x20, 0x46, 0x2d, 0x30,
		0x31, 0x48, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x32, 0x45,
		0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x32, 0x47, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x45, 0x46, 0x20, 0x46, 0x4a, 0x4c, 0x32, 0x31, 0x41, 0x72,
		0x72, 0x6f, 0x77, 0x73, 0x20, 0x5a, 0x20, 0x46, 0x4a, 0x4c, 0x32, 0x32, 0x41, 0x72, 0x72, 0x6f,
		0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x32, 0x48, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x4e, 0x58, 0x39, 0x20, 0x46, 0x2d, 0x35, 0x32, 0x41, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x4b, 0x69, 0x73, 0x73, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x44, 0x41, 0x72, 0x72, 0x6f,
		0x77, 0x73, 0x20, 0x4b, 0x69, 0x73, 0x73, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x45, 0x44, 0x69, 0x73,
		0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x46,
		0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x53, 0x56, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x48, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4a, 0x20, 0x39, 0x30, 0x31, 0x46, 0x4a, 0x41, 0x72, 0x72,
		0x6f, 0x77, 0x73, 0x20, 0x56, 0x20, 0x46, 0x2d, 0x30, 0x34, 0x45, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x34, 0x47, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x46, 0x2d, 0x30, 0x35, 0x44, 0x41, 0x72, 0x72, 0x6f,
		0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x35, 0x46, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x42, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x35, 0x4a, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x4b, 0x2d, 0x74, 0x61, 0x69, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x65, 0x20,
		0x46, 0x2d, 0x30, 0x34, 0x4b, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x65, 0x20, 0x33,
		0x20, 0x46, 0x2d, 0x30, 0x32, 0x4c, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x65, 0x20,
		0x34, 0x20, 0x46, 0x2d, 0x34, 0x31, 0x41, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x65,
		0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x46, 0x2d, 0x34, 0x31, 0x42, 0x41, 0x72, 0x72,
		0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x36, 0x45, 0x41, 0x72, 0x72, 0x6f,
		0x77, 0x73, 0x20, 0xce, 0xbc, 0x20, 0x46, 0x2d, 0x30, 0x37, 0x44, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x57, 0x65, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x55, 0x20, 0x38, 0x30, 0x31,
		0x46, 0x4a, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20,
		0x46, 0x2d, 0x30, 0x37, 0x45, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x38, 0x44, 0x41, 0x4e, 0x54, 0x45, 0x50, 0x52, 0x49, 0x4d,
		0x41, 0x20, 0x46, 0x2d, 0x30, 0x39, 0x44, 0x52, 0x61, 0x6b, 0x75, 0x2d, 0x52, 0x61, 0x6b, 0x75,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x75, 0x6d, 0x20, 0x46, 0x2d, 0x30, 0x39, 0x45, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0x58, 0x20, 0x46, 0x2d, 0x31, 0x30, 0x44, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4d, 0x65,
		0x20, 0x46, 0x2d, 0x31, 0x31, 0x44, 0x46, 0x2d, 0x31, 0x32, 0x43, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x4d, 0x30, 0x33, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x52, 0x4d, 0x30, 0x32,
		0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x52, 0x58, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0x4d, 0x30, 0x34, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x4d, 0x24, 0x31, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x24, 0x31, 0x46, 0x41, 0x52, 0x54, 0x4d, 0x39, 0x33, 0x33, 0x4b, 0x5a, 0x41, 0x72, 0x72, 0x6f,
		0x77, 0x73, 0x20, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x35, 0x30, 0x34, 0x2f, 0x48, 0x41, 0x34, 0x53,
		0x74, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x63, 0x46, 0x75, 0x6e, 0x61, 0x69, 0x46, 0x75, 0x73,
		0x69, 0x6f, 0x6e, 0x35, 0x24, 0x31, 0x76, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x76, 0x32,
		0x47, 0x2d, 0x54, 0x69, 0x44, 0x45, 0x53, 0x68, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x37, 0x53, 0x68,
		0x69, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x37, 0x47, 0x2d, 0x54, 0x69, 0x44, 0x45, 0x20, 0x56, 0x36,
		0x47, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x20, 0x24, 0x31,
		0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x47, 0x45, 0x4f, 0x46, 0x4f, 0x58, 0x4d, 0x49, 0x44, 0x37,
		0x34, 0x33, 0x47, 0x46, 0x69, 0x76, 0x65, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74,
		0x20, 0x47, 0x6f, 0x6c, 0x64, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
		0x74, 0x20, 0x47, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64,
		0x65, 0x6e, 0x74, 0x20, 0x47, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x31, 0x47, 0x4c, 0x4f, 0x4e,
		0x59, 0x58, 0x51, 0x75, 0x61, 0x72, 0x74, 0x7a, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x58, 0x47, 0x4c,
		0x58, 0x20, 0x41, 0x53, 0x41, 0x41, 0x73, 0x61, 0x47, 0x4f, 0x43, 0x4c, 0x45, 0x56, 0x45, 0x52,
		0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x20, 0x24, 0x31, 0x49, 0x4e, 0x53, 0x49, 0x47, 0x4e,
		0x49, 0x41, 0x20, 0x24, 0x31, 0x54, 0x51, 0x37, 0x30, 0x30, 0x4e, 0x51, 0x55, 0x41, 0x4e, 0x54,
		0x55, 0x4d, 0x20, 0x37, 0x30, 0x30, 0x4e, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x5f, 0x31,
		0x30, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20,
		0x31, 0x30, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d,
		0x20, 0x32, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x51, 0x75, 0x61, 0x6e,
		0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x20, 0x52, 0x75, 0x67, 0x67, 0x65, 0x64,
		0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x52, 0x75, 0x67, 0x67, 0x65,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20,
		0x24, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x5f, 0x49,
		0x49, 0x5f, 0x35, 0x30, 0x30, 0x5f, 0x4e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x32,
		0x20, 0x35, 0x30, 0x30, 0x20, 0x4e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20,
		0x24, 0x32, 0x4e, 0x45, 0x54, 0x42, 0x4f, 0x4f, 0x4b, 0x20, 0x52, 0x31, 0x30, 0x33, 0x4e, 0x65,
		0x74, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x52, 0x31, 0x30, 0x33, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20,
		0x39, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x49, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74,
		0x69, 0x6f, 0x6e, 0x73, 0x55, 0x6e, 0x69, 0x20, 0x32, 0x47, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x2d,
		0x41, 0x73, 0x75, 0x73, 0x47, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x6e, 0x65, 0x20, 0x24,
		0x31, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x47, 0x57, 0x41, 0x54, 0x38, 0x2d, 0x31, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x38, 0x22, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x65,
		0x6e, 0x65, 0x72, 0x61, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47, 0x4d, 0x20, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x33, 0x31, 0x30, 0x47, 0x4d, 0x20, 0x32, 0x31, 0x47, 0x35,
		0x31, 0x30, 0x47, 0x4d, 0x20, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x37, 0x30, 0x30,
		0x47, 0x4d, 0x20, 0x32, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x33, 0x30, 0x31, 0x47, 0x4d, 0x20,
		0x32, 0x30, 0x47, 0x35, 0x30, 0x31, 0x47, 0x4d, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x47,
		0x4d, 0x20, 0x24, 0x31, 0x44, 0x47, 0x4d, 0x20, 0x38, 0x47, 0x4d, 0x38, 0x20, 0x67, 0x6f, 0x47,
		0x4d, 0x20, 0x38, 0x20, 0x47, 0x6f, 0x47, 0x4d, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4d,
		0x20, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x4d, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
		0x65, 0x72, 0x79, 0x20, 0x49, 0x49, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x20, 0x34, 0x47, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x34, 0x47, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x20, 0x34, 0x47, 0x34, 0x47, 0x45, 0x2d, 0x54, 0x61, 0x62, 0x20, 0x32, 0x30, 0x47, 0x65,
		0x6e, 0x65, 0x73, 0x69, 0x73, 0x47, 0x65, 0x6f, 0x74, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x65, 0x41,
		0x6d, 0x69, 0x67, 0x6f, 0x47, 0x65, 0x6f, 0x74, 0x65, 0x78, 0x47, 0x68, 0x69, 0x61, 0x53, 0x76,
		0x65, 0x67, 0x6c, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x51, 0x53, 0x37, 0x30, 0x32, 0x47, 0x48, 0x49,
		0x41, 0x5f, 0x5a, 0x45, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x5a, 0x65, 0x75, 0x73, 0x20, 0x33, 0x47,
		0x47, 0x48, 0x49, 0x41, 0x5f, 0x41, 0x58, 0x49, 0x53, 0x37, 0x41, 0x78, 0x69, 0x73, 0x20, 0x37,
		0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x54, 0x41, 0x37,
		0x57, 0x46, 0x41, 0x37, 0x20, 0x52, 0x4f, 0x4a, 0x41, 0x54, 0x52, 0x45, 0x4f, 0x5f, 0x54, 0x41,
		0x42, 0x38, 0x47, 0x54, 0x52, 0x45, 0x4f, 0x20, 0x54, 0x41, 0x42, 0x38, 0x47, 0x47, 0x54, 0x20,
		0x4b, 0x49, 0x44, 0x53, 0x20, 0x37, 0x56, 0x45, 0x4e, 0x55, 0x53, 0x37, 0x56, 0x45, 0x4e, 0x55,
		0x53, 0x20, 0x37, 0x47, 0x68, 0x6f, 0x6e, 0x67, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x30, 0x33,
		0x47, 0x69, 0x67, 0x61, 0x62, 0x79, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x62, 0x61, 0x20, 0x53, 0x58,
		0x31, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x69, 0x6d, 0x62, 0x61, 0x20, 0x53, 0x58,
		0x31, 0x47, 0x69, 0x67, 0x61, 0x73, 0x65, 0x74, 0x47, 0x69, 0x67, 0x61, 0x73, 0x65, 0x74, 0x20,
		0x51, 0x56, 0x24, 0x31, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x53, 0x24, 0x31,
		0x47, 0x53, 0x35, 0x37, 0x2d, 0x36, 0x4d, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x53, 0x35, 0x35,
		0x2d, 0x36, 0x4d, 0x45, 0x45, 0x39, 0x34, 0x30, 0x2d, 0x32, 0x37, 0x39, 0x35, 0x2d, 0x30, 0x30,
		0x47, 0x53, 0x34, 0x47, 0x53, 0x35, 0x33, 0x2d, 0x36, 0x4d, 0x45, 0x20, 0x50, 0x75, 0x72, 0x65,
		0x47, 0x69, 0x6e, 0x69, 0x57, 0x24, 0x31, 0x4e, 0x24, 0x31, 0x53, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x47, 0x69, 0x6e, 0x7a, 0x7a, 0x75, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74,
		0x65, 0x47, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x47, 0x4e, 0x38, 0x31, 0x30, 0x47, 0x4e, 0x38, 0x30,
		0x30, 0x33, 0x4c, 0x4d, 0x36, 0x4c, 0x47, 0x4e, 0x38, 0x30, 0x30, 0x33, 0x4d, 0x36, 0x47, 0x4e,
		0x24, 0x31, 0x4d, 0x37, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x31, 0x31, 0x50, 0x35, 0x20,
		0x6d, 0x69, 0x6e, 0x69, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x35, 0x20, 0x6d, 0x69, 0x6e,
		0x69, 0x50, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x37, 0x20,
		0x4d, 0x61, 0x78, 0x4d, 0x36, 0x20, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x46, 0x39, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x46, 0x31, 0x30, 0x33, 0x24, 0x31, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x44,
		0x31, 0x47, 0x6c, 0x6f, 0x62, 0x65, 0x78, 0x58, 0x38, 0x47, 0x55, 0x36, 0x30, 0x31, 0x32, 0x42,
		0x47, 0x6c, 0x6f, 0x66, 0x69, 0x69, 0x73, 0x68, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x55, 0x47,
		0x6f, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47, 0x4f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x47, 0x6f,
		0x20, 0x4f, 0x6e, 0x79, 0x78, 0x47, 0x6f, 0x24, 0x31, 0x47, 0x6f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
		0x48, 0x31, 0x2d, 0x43, 0x2d, 0x41, 0x4c, 0x41, 0x44, 0x45, 0x4e, 0x47, 0x57, 0x35, 0x47, 0x6f,
		0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x46, 0x31, 0x30, 0x5f, 0x50, 0x52, 0x49, 0x4d,
		0x45, 0x46, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x6f, 0x6c, 0x79, 0x47, 0x6f,
		0x6d, 0x65, 0x43, 0x37, 0x32, 0x43, 0x37, 0x31, 0x43, 0x35, 0x31, 0x4b, 0x31, 0x55, 0x31, 0x55,
		0x37, 0x55, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x55, 0x39, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
		0x47, 0x6c, 0x61, 0x73, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x65, 0x78, 0x75,
		0x73, 0x41, 0x4f, 0x53, 0x50, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x48,
		0x65, 0x61, 0x64, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x35, 0x41, 0x4f, 0x53, 0x50, 0x20, 0x6f,
		0x6e, 0x20, 0x4d, 0x61, 0x6e, 0x74, 0x61, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x31, 0x30, 0x50,
		0x69, 0x78, 0x65, 0x6c, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x69, 0x62, 0x65, 0x72, 0x20,
		0x24, 0x31, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x68, 0x72, 0x6f,
		0x6d, 0x65, 0x63, 0x61, 0x73, 0x74, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x47, 0x6f, 0x6f,
		0x67, 0x6c, 0x65, 0x54, 0x56, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20,
		0x58, 0x4c, 0x62, 0x6c, 0x75, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20,
		0x33, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x33, 0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c,
		0x20, 0x32, 0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x33, 0x61, 0x20, 0x58, 0x4c,
		0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x33, 0x61, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x20,
		0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x61, 0x20, 0x28, 0x35, 0x47, 0x29, 0x50,
		0x69, 0x78, 0x65, 0x6c, 0x20, 0x24, 0x31, 0x61, 0x47, 0x30, 0x31, 0x31, 0x41, 0x50, 0x69, 0x78,
		0x65, 0x6c, 0x20, 0x32, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x20, 0x32, 0x58, 0x4c, 0x50, 0x69,
		0x78, 0x65, 0x6c, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x24,
		0x31, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x43, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x36, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x49, 0x36, 0x49, 0x36, 0x53, 0x49, 0x36, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x49, 0x37, 0x49, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x34, 0x20, 0x4d, 0x65, 0x67, 0x61,
		0x47, 0x6f, 0x6f, 0x77, 0x65, 0x65, 0x6c, 0x47, 0x70, 0x6c, 0x75, 0x73, 0x47, 0x72, 0x61, 0x64,
		0x69, 0x65, 0x6e, 0x74, 0x65, 0x47, 0x52, 0x41, 0x44, 0x49, 0x45, 0x4e, 0x54, 0x45, 0x47, 0x72,
		0x61, 0x70, 0x65, 0x47, 0x54, 0x4d, 0x2d, 0x35, 0x24, 0x31, 0x47, 0x72, 0x65, 0x65, 0x47, 0x30,
		0x35, 0x31, 0x35, 0x44, 0x54, 0x6f, 0x73, 0x6f, 0x74, 0x20, 0x35, 0x47, 0x47, 0x30, 0x36, 0x31,
		0x35, 0x44, 0x54, 0x6f, 0x73, 0x6f, 0x74, 0x20, 0x37, 0x47, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x74,
		0x65, 0x6c, 0x58, 0x31, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72,
		0x65, 0x73, 0x73, 0x6f, 0x52, 0x45, 0x47, 0x41, 0x4c, 0x20, 0x52, 0x32, 0x52, 0x65, 0x67, 0x61,
		0x6c, 0x20, 0x52, 0x32, 0x52, 0x65, 0x67, 0x61, 0x6c, 0x47, 0x72, 0x65, 0x74, 0x65, 0x6c, 0x47,
		0x72, 0x75, 0x6e, 0x64, 0x69, 0x67, 0x47, 0x24, 0x31, 0x41, 0x46, 0x54, 0x45, 0x55, 0x30, 0x31,
		0x34, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x37, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x41, 0x46, 0x54, 0x45, 0x55, 0x46, 0x46, 0x30, 0x31, 0x34, 0x4f, 0x4c, 0x45,
		0x44, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x46, 0x54, 0x45, 0x55,
		0x30, 0x31, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x36, 0x20, 0x48, 0x44, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x47, 0x74, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
		0x79, 0x20, 0x38, 0x73, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x39, 0x48, 0x39,
		0x36, 0x4d, 0x61, 0x78, 0x20, 0x52, 0x4b, 0x33, 0x33, 0x31, 0x38, 0x4d, 0x61, 0x78, 0x20, 0x58,
		0x32, 0x48, 0x41, 0x4f, 0x56, 0x4d, 0x48, 0x45, 0x52, 0x4f, 0x53, 0x50, 0x2d, 0x30, 0x30, 0x31,
		0x48, 0x4b, 0x50, 0x72, 0x6f, 0x48, 0x50, 0x48, 0x50, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20,
		0x36, 0x20, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x20, 0x54, 0x61, 0x62, 0x53, 0x6c, 0x61, 0x74, 0x65,
		0x20, 0x36, 0x20, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x61, 0x62, 0x48, 0x50, 0x20, 0x31, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6c, 0x61, 0x74,
		0x65, 0x20, 0x24, 0x31, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x20, 0x24, 0x31, 0x48, 0x50, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x38, 0x50, 0x72, 0x6f, 0x20, 0x53,
		0x6c, 0x61, 0x74, 0x65, 0x20, 0x38, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x69, 0x50,
		0x41, 0x51, 0x20, 0x24, 0x31, 0x56, 0x65, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x24, 0x31, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31,
		0x48, 0x50, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x38, 0x32, 0x30,
		0x20, 0x47, 0x32, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x38, 0x32, 0x30,
		0x20, 0x47, 0x32, 0x5a, 0x32, 0x34, 0x30, 0x20, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x57, 0x6f,
		0x72, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x54, 0x43, 0x55, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x55, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x55, 0x31, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x66,
		0x65, 0x55, 0x31, 0x31, 0x20, 0x45, 0x79, 0x65, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x69, 0x6f, 0x45,
		0x76, 0x6f, 0x20, 0x33, 0x47, 0x45, 0x76, 0x6f, 0x20, 0x34, 0x47, 0x55, 0x31, 0x31, 0x4f, 0x6e,
		0x65, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32,
		0x4f, 0x6e, 0x65, 0x20, 0x58, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x31, 0x30, 0x4a, 0x4a, 0x20,
		0x4f, 0x6e, 0x65, 0x4a, 0x20, 0x42, 0x75, 0x74, 0x74, 0x65, 0x72, 0x66, 0x6c, 0x79, 0x42, 0x75,
		0x74, 0x74, 0x65, 0x72, 0x66, 0x6c, 0x79, 0x20, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39, 0x5f,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
		0x6e, 0x65, 0x20, 0x4d, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39,
		0x4f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x44,
		0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49,
		0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x37, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x38, 0x4f, 0x6e, 0x65,
		0x20, 0x45, 0x38, 0x4f, 0x6e, 0x65, 0x20, 0x45, 0x39, 0x4f, 0x6e, 0x65, 0x20, 0x45, 0x39, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x39, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x65,
		0x6d, 0x69, 0x78, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x2b, 0x4f, 0x6e, 0x65, 0x20, 0x41, 0x39, 0x41,
		0x44, 0x52, 0x36, 0x33, 0x30, 0x30, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x49, 0x6e, 0x63, 0x72,
		0x65, 0x64, 0x69, 0x62, 0x6c, 0x65, 0x48, 0x54, 0x43, 0x36, 0x34, 0x33, 0x35, 0x4c, 0x56, 0x57,
		0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x44, 0x4e, 0x41, 0x41, 0x44, 0x52, 0x36, 0x34, 0x30, 0x30,
		0x4c, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6c, 0x74, 0x41, 0x44, 0x52, 0x36,
		0x34, 0x31, 0x30, 0x4c, 0x52, 0x41, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x49, 0x6e, 0x63, 0x72,
		0x65, 0x64, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x33, 0x53, 0x50, 0x56, 0x20, 0x45, 0x36, 0x30, 0x30,
		0x53, 0x50, 0x56, 0x20, 0x45, 0x36, 0x35, 0x30, 0x56, 0x6f, 0x78, 0x32, 0x50, 0x59, 0x42, 0x32,
		0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20,
		0x36, 0x32, 0x36, 0x53, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x35, 0x31, 0x30, 0x44, 0x65,
		0x73, 0x69, 0x72, 0x65, 0x20, 0x35, 0x33, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x33,
		0x31, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x30, 0x38, 0x74, 0x44, 0x65, 0x73,
		0x69, 0x72, 0x65, 0x20, 0x36, 0x31, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x30,
		0x31, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x32, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72,
		0x65, 0x20, 0x36, 0x32, 0x36, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x38, 0x31, 0x36, 0x44,
		0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x35, 0x32, 0x36, 0x45, 0x78, 0x6f, 0x64, 0x75, 0x73, 0x20,
		0x31, 0x55, 0x31, 0x39, 0x65, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x30, 0x20, 0x43,
		0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x31, 0x30, 0x20, 0x45, 0x76, 0x6f, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x30, 0x20,
		0x4c, 0x69, 0x66, 0x65, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x48,
		0x44, 0x32, 0x48, 0x44, 0x32, 0x50, 0x37, 0x31, 0x35, 0x61, 0x46, 0x6c, 0x79, 0x65, 0x72, 0x46,
		0x6c, 0x79, 0x65, 0x72, 0x20, 0x24, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x24, 0x31,
		0x20, 0x28, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x29, 0x48, 0x61, 0x66, 0x75, 0x72, 0x79, 0x47,
		0x54, 0x32, 0x30, 0x48, 0x61, 0x69, 0x65, 0x72, 0x41, 0x32, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f,
		0x4e, 0x46, 0x43, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x41, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x4e, 0x46, 0x43, 0x41, 0x34, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61,
		0x20, 0x41, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x4d, 0x2d, 0x4e, 0x35, 0x30, 0x35, 0x2d,
		0x46, 0x4c, 0x49, 0x38, 0x53, 0x35, 0x20, 0x53, 0x69, 0x6c, 0x6b, 0x48, 0x4d, 0x2d, 0x4e, 0x37,
		0x30, 0x30, 0x2d, 0x46, 0x4c, 0x48, 0x4d, 0x2d, 0x4e, 0x37, 0x30, 0x31, 0x2d, 0x46, 0x4c, 0x48,
		0x4d, 0x2d, 0x4e, 0x35, 0x30, 0x31, 0x2d, 0x46, 0x4c, 0x4c, 0x35, 0x36, 0x48, 0x4d, 0x2d, 0x49,
		0x35, 0x35, 0x39, 0x2d, 0x46, 0x4c, 0x4c, 0x35, 0x35, 0x73, 0x48, 0x4d, 0x2d, 0x49, 0x35, 0x36,
		0x30, 0x2d, 0x46, 0x4c, 0x47, 0x37, 0x73, 0x48, 0x4d, 0x2d, 0x47, 0x35, 0x35, 0x33, 0x2d, 0x46,
		0x4c, 0x47, 0x35, 0x31, 0x68, 0x61, 0x69, 0x65, 0x72, 0x41, 0x54, 0x56, 0x6e, 0x69, 0x70, 0x70,
		0x6f, 0x72, 0x69, 0x68, 0x61, 0x69, 0x65, 0x72, 0x41, 0x54, 0x56, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x54, 0x56, 0x48, 0x61, 0x69, 0x70, 0x61, 0x69, 0x4e, 0x6f, 0x62, 0x6c, 0x65,
		0x20, 0x53, 0x36, 0x48, 0x61, 0x6d, 0x6c, 0x65, 0x74, 0x5a, 0x65, 0x6c, 0x69, 0x67, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x24, 0x31, 0x48, 0x61, 0x6e, 0x6e, 0x53, 0x70, 0x72, 0x65, 0x65, 0x53, 0x4e,
		0x31, 0x41, 0x54, 0x37, 0x31, 0x57, 0x28, 0x42, 0x29, 0x53, 0x4e, 0x37, 0x30, 0x54, 0x33, 0x31,
		0x53, 0x4e, 0x37, 0x30, 0x54, 0x33, 0x53, 0x4e, 0x37, 0x30, 0x54, 0x35, 0x31, 0x41, 0x53, 0x4e,
		0x39, 0x37, 0x54, 0x34, 0x31, 0x57, 0x54, 0x37, 0x2d, 0x51, 0x43, 0x53, 0x4e, 0x41, 0x54, 0x37,
		0x31, 0x42, 0x55, 0x45, 0x48, 0x61, 0x72, 0x64, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x4f, 0x44,
		0x52, 0x4f, 0x49, 0x44, 0x20, 0x24, 0x31, 0x48, 0x61, 0x73, 0x65, 0x65, 0x48, 0x65, 0x6c, 0x69,
		0x6f, 0x48, 0x65, 0x7a, 0x69, 0x72, 0x65, 0x48, 0x69, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x24,
		0x31, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x47, 0x6f, 0x48, 0x69, 0x20, 0x4e, 0x6f, 0x76, 0x61,
		0x48, 0x65, 0x62, 0x65, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x65,
		0x72, 0x61, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x39, 0x48, 0x69, 0x2d, 0x4c, 0x65, 0x76, 0x65, 0x6c,
		0x48, 0x4c, 0x56, 0x2d, 0x54, 0x24, 0x31, 0x48, 0x69, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x6c, 0x79,
		0x6d, 0x65, 0x72, 0x24, 0x31, 0x50, 0x75, 0x72, 0x65, 0x20, 0x33, 0x53, 0x48, 0x69, 0x67, 0x68,
		0x20, 0x51, 0x48, 0x69, 0x67, 0x68, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20,
		0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x45, 0x76, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46,
		0x69, 0x76, 0x65, 0x53, 0x70, 0x61, 0x64, 0x65, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x46,
		0x65, 0x73, 0x74, 0x20, 0x58, 0x4c, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x65, 0x73, 0x74, 0x20, 0x58,
		0x4c, 0x46, 0x65, 0x73, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x20, 0x46, 0x6f, 0x75, 0x72, 0x50, 0x75, 0x72, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x50, 0x75, 0x72, 0x65, 0x20, 0x46, 0x52, 0x61, 0x7a, 0x61, 0x72, 0x20, 0x50, 0x72, 0x6f,
		0x45, 0x61, 0x73, 0x79, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x61, 0x73, 0x79, 0x20,
		0x24, 0x31, 0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f,
		0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20,
		0x32, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x32, 0x20, 0x53, 0x45, 0x42, 0x6f, 0x6f, 0x73, 0x74,
		0x20, 0x33, 0x20, 0x53, 0x45, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x53, 0x45, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x33, 0x5a, 0x65, 0x72, 0x61, 0x20, 0x53,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x61, 0x73, 0x74, 0x79, 0x56, 0x65, 0x72, 0x67, 0x65,
		0x20, 0x4d, 0x57, 0x69, 0x6e, 0x57, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x65, 0x48,
		0x65, 0x72, 0x63, 0x75, 0x6c, 0x65, 0x73, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x52, 0x61, 0x67,
		0x65, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x24, 0x31, 0x48, 0x69, 0x70, 0x73, 0x74, 0x72, 0x65,
		0x65, 0x74, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x48, 0x69, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x45, 0x32,
		0x37, 0x30, 0x42, 0x53, 0x41, 0x53, 0x65, 0x72, 0x6f, 0x20, 0x37, 0x45, 0x32, 0x32, 0x53, 0x65,
		0x72, 0x6f, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x32, 0x32, 0x38, 0x31, 0x53, 0x65, 0x72,
		0x6f, 0x20, 0x38, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x30, 0x32, 0x4e, 0x48, 0x4c, 0x54, 0x45, 0x32,
		0x30, 0x33, 0x54, 0x41, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x43, 0x43, 0x48, 0x4c, 0x54, 0x45,
		0x37, 0x30, 0x30, 0x54, 0x41, 0x36, 0x48, 0x4c, 0x54, 0x45, 0x37, 0x33, 0x30, 0x54, 0x41, 0x36,
		0x4c, 0x48, 0x4e, 0x52, 0x33, 0x32, 0x30, 0x54, 0x4d, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x32, 0x30, 0x32, 0x31, 0x4d, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x20, 0x4d,
		0x41, 0x58, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x20, 0x4d, 0x61, 0x78,
		0x45, 0x20, 0x4d, 0x61, 0x78, 0x48, 0x4c, 0x54, 0x45, 0x35, 0x30, 0x31, 0x4e, 0x56, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4b, 0x53, 0x39, 0x30, 0x37, 0x56, 0x33, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x32,
		0x33, 0x45, 0x48, 0x33, 0x30, 0x49, 0x34, 0x36, 0x44, 0x31, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x66, 0x72, 0x65, 0x6e, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x52, 0x45,
		0x47, 0x36, 0x38, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e, 0x20, 0x41, 0x6e,
		0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x5a, 0x45, 0x47, 0x39, 0x38, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x66, 0x72, 0x65, 0x6e, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x55,
		0x32, 0x46, 0x32, 0x36, 0x46, 0x32, 0x38, 0x46, 0x32, 0x39, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b,
		0x6f, 0x6e, 0x67, 0x20, 0x34, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x34,
		0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x35, 0x4b,
		0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x36, 0x46, 0x38, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x46, 0x33, 0x30, 0x53, 0x46, 0x34, 0x30, 0x46, 0x35, 0x30, 0x46, 0x35, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x48, 0x31, 0x38, 0x48, 0x32, 0x30, 0x48, 0x4c, 0x54, 0x45, 0x31, 0x30, 0x33,
		0x45, 0x45, 0x32, 0x30, 0x48, 0x31, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x48, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x55, 0x33, 0x30, 0x55, 0x34, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x45, 0x39, 0x4e, 0x61, 0x6e, 0x61, 0x55, 0x36, 0x30, 0x31, 0x53, 0x20, 0x50,
		0x72, 0x6f, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x48, 0x35, 0x30, 0x20, 0x5a,
		0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x33, 0x30, 0x20,
		0x53, 0x45, 0x55, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x55, 0x33, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x48, 0x69, 0x74, 0x61, 0x63, 0x68, 0x69, 0x48, 0x69, 0x74, 0x65, 0x63,
		0x68, 0x48, 0x6f, 0x66, 0x66, 0x6d, 0x61, 0x6e, 0x6e, 0x58, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x6d,
		0x65, 0x74, 0x65, 0x63, 0x68, 0x41, 0x4c, 0x46, 0x41, 0x20, 0x24, 0x31, 0x49, 0x64, 0x65, 0x61,
		0x6c, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x49, 0x50, 0x53, 0x24, 0x31, 0x48, 0x54, 0x20,
		0x24, 0x31, 0x48, 0x6f, 0x6d, 0x74, 0x6f, 0x6d, 0x48, 0x54, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x48, 0x54, 0x24, 0x31, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x77, 0x65, 0x6c, 0x6c, 0x53, 0x63, 0x61,
		0x6e, 0x50, 0x61, 0x6c, 0x20, 0x24, 0x31, 0x44, 0x6f, 0x6c, 0x70, 0x68, 0x69, 0x6e, 0x20, 0x24,
		0x31, 0x48, 0x6f, 0x6f, 0x7a, 0x6f, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x48, 0x6f,
		0x73, 0x69, 0x6e, 0x48, 0x6f, 0x74, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x48, 0x50, 0x50,
		0x2d, 0x47, 0x53, 0x31, 0x56, 0x4c, 0x45, 0x35, 0x50, 0x6f, 0x62, 0x6c, 0x61, 0x6e, 0x6f, 0x48,
		0x50, 0x50, 0x2d, 0x4c, 0x35, 0x35, 0x42, 0x53, 0x65, 0x72, 0x72, 0x61, 0x6e, 0x6f, 0x48, 0x6f,
		0x74, 0x77, 0x61, 0x76, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x20, 0x56, 0x38, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x48, 0x6f, 0x74, 0x20, 0x36, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x52, 0x38, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x58, 0x31, 0x36, 0x43, 0x79, 0x62,
		0x65, 0x72, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x4d,
		0x31, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x52, 0x36, 0x30, 0x48, 0x6f, 0x77, 0x48, 0x54,
		0x2d, 0x31, 0x30, 0x30, 0x31, 0x47, 0x20, 0x47, 0x6f, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x48, 0x54,
		0x2d, 0x24, 0x31, 0x48, 0x75, 0x61, 0x64, 0x6f, 0x6f, 0x48, 0x75, 0x61, 0x67, 0x61, 0x6e, 0x48,
		0x75, 0x61, 0x76, 0x69, 0x4b, 0x48, 0x41, 0x54, 0x41, 0x52, 0x20, 0x48, 0x2d, 0x32, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x48, 0x75, 0x61, 0x77, 0x65, 0x69, 0x39, 0x53, 0x41, 0x73, 0x63, 0x65, 0x6e,
		0x64, 0x20, 0x44, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x44, 0x33, 0x41, 0x73, 0x63,
		0x65, 0x6e, 0x64, 0x20, 0x59, 0x33, 0x32, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59,
		0x33, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x43, 0x41, 0x73, 0x63,
		0x65, 0x6e, 0x64, 0x20, 0x47, 0x33, 0x30, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47,
		0x35, 0x32, 0x37, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x36, 0x32, 0x30, 0x53, 0x41,
		0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x36, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64,
		0x20, 0x47, 0x37, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x37, 0x41, 0x73, 0x63, 0x65,
		0x6e, 0x64, 0x20, 0x47, 0x37, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x31,
		0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x58, 0x54, 0x32, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64,
		0x20, 0x59, 0x32, 0x32, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x35, 0x30,
		0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x36, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e,
		0x64, 0x20, 0x47, 0x37, 0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x45, 0x6e,
		0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x31, 0x30, 0x45, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x53, 0x45, 0x6e, 0x6a,
		0x6f, 0x79, 0x20, 0x35, 0x53, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x36, 0x45, 0x6e, 0x6a, 0x6f,
		0x79, 0x20, 0x36, 0x53, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x37, 0x53, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45,
		0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x38, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x38, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x38, 0x65, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20,
		0x39, 0x65, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x6e,
		0x6a, 0x6f, 0x79, 0x20, 0x5a, 0x20, 0x35, 0x47, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30,
		0x20, 0x53, 0x45, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x35, 0x47, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x65, 0x46, 0x75, 0x73, 0x69,
		0x6f, 0x6e, 0x20, 0x32, 0x59, 0x36, 0x70, 0x47, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x36, 0x32, 0x31, 0x47, 0x52, 0x33, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x52, 0x35, 0x47, 0x52, 0x35, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x37, 0x29, 0x47, 0x58, 0x38, 0x47, 0x38, 0x50, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41,
		0x42, 0x52, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x50, 0x35, 0x30, 0x42, 0x41, 0x4c, 0x2d, 0x41, 0x4c,
		0x30, 0x30, 0x50, 0x35, 0x30, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x49, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x32, 0x30, 0x49, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33,
		0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x49,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x33, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x43, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x34, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x34, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x54, 0x20, 0x50,
		0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x35, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x41, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x35, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x43, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x58, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x35, 0x30, 0x20, 0x53, 0x45, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x4c, 0x53, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36,
		0x30, 0x47, 0x49, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36,
		0x30, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x41, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x36, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x43, 0x20, 0x50,
		0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x37, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x37, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x41, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37,
		0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37,
		0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x38, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x41, 0x20, 0x50, 0x72, 0x6f,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x53,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x58,
		0x20, 0x4d, 0x61, 0x78, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x39, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x69, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x58, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x48, 0x6f, 0x6c, 0x6c, 0x79, 0x20, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61,
		0x67, 0x69, 0x63, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x32,
		0x45, 0x4c, 0x5a, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61,
		0x67, 0x69, 0x63, 0x20, 0x33, 0x45, 0x4c, 0x5a, 0x2d, 0x41, 0x4e, 0x31, 0x30, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x4c,
		0x5a, 0x2d, 0x41, 0x4e, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69,
		0x63, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x4d, 0x47, 0x49, 0x2d, 0x41, 0x4e, 0x30,
		0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x31, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x33, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x34, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x34, 0x30, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x50, 0x34, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x45, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x34, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x20, 0x34, 0x54, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x20,
		0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x54,
		0x4e, 0x45, 0x57, 0x2d, 0x41, 0x4e, 0x39, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x35, 0x20, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x58, 0x32, 0x30, 0x20, 0x53, 0x45, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x37, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x20, 0x35, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x32, 0x30, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38, 0x41, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x39, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x56, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x56, 0x34, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x38, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x56, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x39, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x31, 0x30, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56,
		0x69, 0x65, 0x77, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x59, 0x36, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x59, 0x36, 0x20, 0x49, 0x49, 0x20, 0x43, 0x6f,
		0x6d, 0x70, 0x61, 0x63, 0x74, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x32, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x30,
		0x20, 0x4d, 0x61, 0x78, 0x4b, 0x4b, 0x47, 0x2d, 0x41, 0x4e, 0x37, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x58, 0x33, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x4e, 0x59, 0x2d, 0x41, 0x4e, 0x30,
		0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x33, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x58, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x34,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58, 0x32, 0x49, 0x64,
		0x65, 0x6f, 0x73, 0x20, 0x58, 0x33, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58, 0x35, 0x4d, 0x61,
		0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x35, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x38,
		0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x39, 0x54, 0x59, 0x48, 0x36, 0x30, 0x31, 0x4d,
		0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x39, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65,
		0x20, 0x58, 0x53, 0x54, 0x41, 0x48, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x58, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x32, 0x54, 0x45, 0x54, 0x2d, 0x41, 0x4e, 0x35, 0x30,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x32, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x31,
		0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x74,
		0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x4d,
		0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x52, 0x53,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x58, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33,
		0x30, 0x20, 0x52, 0x53, 0x20, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65, 0x20, 0x44, 0x65, 0x73,
		0x69, 0x67, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d,
		0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x45,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x34, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x45, 0x4d, 0x61, 0x74,
		0x65, 0x20, 0x38, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x39, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x52, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x52, 0x53, 0x20, 0x50, 0x6f, 0x72,
		0x73, 0x63, 0x68, 0x65, 0x20, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x53, 0x45, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32,
		0x49, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x53, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x33, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33, 0x69, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x34, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x34, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x69,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x36, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x36, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x36,
		0x20, 0x53, 0x45, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x20,
		0x53, 0x45, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x69, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x38, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x69, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20,
		0x35, 0x47, 0x4a, 0x53, 0x43, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38,
		0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x4a, 0x53, 0x43, 0x2d, 0x41, 0x4c, 0x35, 0x30, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x38, 0x20, 0x53, 0x45, 0x20, 0x34, 0x47, 0x43, 0x48, 0x4c, 0x2d, 0x41, 0x4c,
		0x36, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x53, 0x45, 0x20, 0x56, 0x69, 0x74, 0x61,
		0x6c, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34,
		0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x39, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x6f, 0x75,
		0x74, 0x68, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x59, 0x36, 0x30, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x20, 0x73, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x5a, 0x50,
		0x31, 0x30, 0x50, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x31, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x50, 0x31, 0x30, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x50, 0x32, 0x30, 0x50,
		0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x33,
		0x30, 0x50, 0x33, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x34, 0x30, 0x50, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x34, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x45, 0x50, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x45, 0x20,
		0x4e, 0x46, 0x43, 0x50, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x34, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x38, 0x50, 0x38, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69,
		0x75, 0x6d, 0x50, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29,
		0x50, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x50, 0x39,
		0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x50,
		0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x39, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x58, 0x55, 0x24, 0x31, 0x59, 0x20, 0x4d, 0x61,
		0x78, 0x59, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x33, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x38, 0x29, 0x59, 0x33, 0x49, 0x49, 0x59, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29,
		0x59, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x39, 0x29, 0x59, 0x35, 0x20, 0x6c, 0x69, 0x74, 0x65, 0x59, 0x35, 0x70, 0x59, 0x35, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x35, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x37, 0x29, 0x59, 0x35, 0x49, 0x49, 0x59, 0x36, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x36, 0x29, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x36, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x36,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x36, 0x20,
		0x50, 0x72, 0x6f, 0x59, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x59, 0x36, 0x32, 0x35, 0x59, 0x36, 0x33, 0x35, 0x59, 0x36, 0x33, 0x35, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x20, 0x53, 0x49, 0x4d, 0x59, 0x36, 0x49, 0x49, 0x59, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x37, 0x29, 0x59, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x37, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x59, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x59, 0x37, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x37, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x39, 0x59,
		0x37, 0x61, 0x59, 0x37, 0x70, 0x59, 0x38, 0x70, 0x59, 0x39, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38,
		0x29, 0x59, 0x39, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x39, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x39, 0x61, 0x53, 0x74, 0x72, 0x65,
		0x61, 0x6d, 0x20, 0x53, 0x47, 0x54, 0x33, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x36, 0x50, 0x51,
		0x75, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x30, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x42, 0x41, 0x48, 0x34, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x61, 0x74, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29,
		0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x4d, 0x61, 0x74,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d,
		0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x4d,
		0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61,
		0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x4d, 0x61, 0x74,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64,
		0x20, 0x54, 0x31, 0x30, 0x73, 0x20, 0x57, 0x69, 0x46, 0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38, 0x2e, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x32, 0x4b, 0x52, 0x4a, 0x32, 0x2d, 0x57, 0x30,
		0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x31, 0x30,
		0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x52, 0x4a, 0x32, 0x2d, 0x41, 0x4e, 0x30,
		0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x31, 0x30,
		0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x42, 0x52, 0x54, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x42, 0x52, 0x54, 0x2d, 0x41, 0x4e, 0x30, 0x39, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x31, 0x22, 0x20, 0x35, 0x47, 0x4b, 0x52, 0x4a, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20,
		0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x36, 0x20, 0x31,
		0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x4f, 0x42, 0x32, 0x2d, 0x57, 0x30,
		0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x37, 0x20,
		0x38, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47, 0x52, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x4e,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x36, 0x41, 0x47, 0x52, 0x2d,
		0x41, 0x4c, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x58, 0x36, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61,
		0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35, 0x20, 0x38, 0x43, 0x33, 0x20, 0x39, 0x2e, 0x36,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x43, 0x33, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x43, 0x33, 0x20,
		0x39, 0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x43, 0x33, 0x20, 0x39, 0x2e,
		0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4d, 0x61,
		0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x4d,
		0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30,
		0x2e, 0x38, 0x22, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x32, 0x2e, 0x36, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x36, 0x22, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e,
		0x38, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x36, 0x20, 0x31, 0x30, 0x2e,
		0x38, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x58, 0x32, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x38, 0x2e, 0x34, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x36, 0x20, 0x38, 0x2e, 0x34, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x50, 0x61, 0x64, 0x20, 0x4d, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33, 0x20, 0x38, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x31,
		0x30, 0x42, 0x54, 0x56, 0x2d, 0x44, 0x4c, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x4d, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x35, 0x41,
		0x47, 0x4d, 0x33, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41,
		0x47, 0x4d, 0x33, 0x2d, 0x41, 0x4c, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x50, 0x61, 0x64, 0x20, 0x54, 0x35, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x54, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64,
		0x20, 0x54, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x33,
		0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x33, 0x20, 0x38,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x33, 0x20, 0x37, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x37, 0x2e, 0x30, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x37, 0x2e, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x31, 0x30,
		0x2e, 0x30, 0x22, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x54, 0x31, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31,
		0x20, 0x37, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x20, 0x38, 0x41,
		0x47, 0x53, 0x33, 0x4b, 0x2d, 0x57, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64,
		0x20, 0x54, 0x31, 0x30, 0x73, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x41, 0x47, 0x53, 0x33, 0x4b, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x54, 0x31, 0x30, 0x73, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x41, 0x47, 0x52, 0x4b, 0x2d, 0x57, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64,
		0x20, 0x54, 0x31, 0x30, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47,
		0x52, 0x4b, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54,
		0x31, 0x30, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x45, 0x6e, 0x6a, 0x6f,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x4d, 0x4f, 0x4e, 0x2d, 0x41, 0x4c, 0x31, 0x39, 0x42, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35, 0x20, 0x38, 0x22, 0x42, 0x5a, 0x49, 0x2d,
		0x41, 0x4c, 0x30, 0x30, 0x43, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42, 0x5a, 0x54,
		0x33, 0x2d, 0x57, 0x30, 0x39, 0x43, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x42, 0x5a, 0x54, 0x33, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x43, 0x35, 0x20, 0x31, 0x30,
		0x2e, 0x34, 0x22, 0x42, 0x5a, 0x44, 0x2d, 0x57, 0x30, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x43, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x42,
		0x5a, 0x44, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x43, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x44, 0x20, 0x54, 0x61, 0x62, 0x20, 0x43, 0x6f, 0x6d,
		0x70, 0x61, 0x63, 0x74, 0x64, 0x74, 0x61, 0x62, 0x20, 0x64, 0x2d, 0x30, 0x31, 0x4b, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x32, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64,
		0x65, 0x6f, 0x73, 0x24, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x74, 0x65,
		0x20, 0x24, 0x31, 0x48, 0x75, 0x72, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x65, 0x49, 0x67, 0x6e, 0x69,
		0x74, 0x65, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x47, 0x69, 0x67, 0x61, 0x47, 0x6c, 0x61, 0x7a,
		0x65, 0x43, 0x6f, 0x62, 0x72, 0x61, 0x44, 0x5a, 0x49, 0x52, 0x45, 0x44, 0x7a, 0x69, 0x72, 0x65,
		0x53, 0x41, 0x47, 0x45, 0x53, 0x61, 0x67, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x56, 0x75, 0x6c, 0x63,
		0x61, 0x6e, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x6d,
		0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x69, 0x64, 0x67, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x52, 0x75, 0x73, 0x68, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x72, 0x69, 0x73, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x32, 0x30, 0x32, 0x31, 0x49, 0x72, 0x69, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x78, 0x63, 0x69,
		0x74, 0x65, 0x48, 0x75, 0x73, 0x6b, 0x65, 0x65, 0x56, 0x75, 0x6c, 0x6b, 0x61, 0x6e, 0x6f, 0x48,
		0x79, 0x75, 0x6e, 0x64, 0x61, 0x69, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x53,
		0x65, 0x6f, 0x75, 0x6c, 0x20, 0x53, 0x38, 0x47, 0x32, 0x35, 0x35, 0x32, 0x33, 0x4b, 0x45, 0x74,
		0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x47, 0x32, 0x33, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69,
		0x74, 0x79, 0x20, 0x47, 0x32, 0x35, 0x47, 0x32, 0x35, 0x35, 0x32, 0x34, 0x4b, 0x45, 0x74, 0x65,
		0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x47, 0x32, 0x34, 0x47, 0x32, 0x34, 0x30, 0x32, 0x37, 0x4b,
		0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x47, 0x32, 0x37, 0x57, 0x32, 0x35, 0x30,
		0x34, 0x32, 0x4c, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x57, 0x34, 0x32, 0x48,
		0x50, 0x35, 0x35, 0x34, 0x4f, 0x4c, 0x35, 0x30, 0x33, 0x46, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48,
		0x59, 0x4d, 0x49, 0x20, 0x35, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x79, 0x6d, 0x69, 0x20,
		0x35, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x54, 0x30, 0x37, 0x30, 0x31, 0x4c, 0x31, 0x36,
		0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x58, 0x4c, 0x48, 0x54, 0x31, 0x30, 0x30, 0x34, 0x4c,
		0x49, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x58, 0x4c, 0x4b, 0x6f, 0x72,
		0x61, 0x6c, 0x5f, 0x38, 0x57, 0x32, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x38, 0x57, 0x32, 0x48,
		0x54, 0x31, 0x30, 0x30, 0x34, 0x4c, 0x31, 0x36, 0x48, 0x54, 0x30, 0x37, 0x30, 0x34, 0x4b, 0x30,
		0x38, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x4d, 0x34, 0x48, 0x79, 0x54, 0x61, 0x62, 0x20,
		0x37, 0x47, 0x42, 0x31, 0x48, 0x79, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x37,
		0x57, 0x44, 0x31, 0x48, 0x79, 0x76, 0x65, 0x50, 0x72, 0x79, 0x6d, 0x65, 0x20, 0x30, 0x31, 0x53,
		0x54, 0x30, 0x31, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x53, 0x54, 0x30, 0x31, 0x49, 0x4b, 0x49,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47, 0x4f, 0x35, 0x5f, 0x35, 0x35, 0x47, 0x6f, 0x20,
		0x35, 0x2e, 0x35, 0x22, 0x42, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x47, 0x4f, 0x35, 0x35, 0x42, 0x6c,
		0x65, 0x73, 0x73, 0x20, 0x47, 0x6f, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x42, 0x4c, 0x45, 0x53, 0x53,
		0x50, 0x4c, 0x55, 0x53, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x4b,
		0x55, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x54, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x4d, 0x4f,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x51, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x32, 0x53, 0x32, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x41,
		0x32, 0x53, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x38, 0x30, 0x20, 0x48, 0x65,
		0x72, 0x6f, 0x53, 0x38, 0x39, 0x20, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x38, 0x38,
		0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x39, 0x39, 0x20, 0x4f, 0x63,
		0x65, 0x61, 0x6e, 0x53, 0x39, 0x38, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53,
		0x38, 0x37, 0x20, 0x52, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x53, 0x36, 0x37, 0x20, 0x42, 0x6c, 0x61,
		0x73, 0x74, 0x53, 0x37, 0x38, 0x20, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x51, 0x38, 0x20, 0x43, 0x6c,
		0x61, 0x72, 0x69, 0x74, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x49,
		0x49, 0x51, 0x54, 0x61, 0x62, 0x20, 0x58, 0x39, 0x49, 0x4e, 0x43, 0x41, 0x52, 0x49, 0x4e, 0x51,
		0x49, 0x4e, 0x53, 0x59, 0x53, 0x48, 0x4b, 0x39, 0x2d, 0x34, 0x30, 0x31, 0x30, 0x49, 0x51, 0x4d,
		0x56, 0x69, 0x76, 0x61, 0x6c, 0x64, 0x69, 0x4e, 0x65, 0x77, 0x74, 0x6f, 0x6e, 0x49, 0x52, 0x41,
		0x44, 0x75, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x54, 0x49, 0x54, 0x2d, 0x31,
		0x31, 0x30, 0x31, 0x2d, 0x51, 0x55, 0x41, 0x44, 0x31, 0x31, 0x30, 0x31, 0x20, 0x51, 0x75, 0x61,
		0x64, 0x49, 0x55, 0x4e, 0x49, 0x49, 0x63, 0x6f, 0x6e, 0x42, 0x49, 0x54, 0x4e, 0x54, 0x2d, 0x33,
		0x35, 0x30, 0x36, 0x4d, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x65, 0x72, 0x63, 0x75,
		0x72, 0x79, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x46, 0x48, 0x44, 0x4e, 0x54, 0x2d, 0x30, 0x37,
		0x30, 0x34, 0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x4c, 0x45,
		0x4e, 0x54, 0x2d, 0x30, 0x39, 0x30, 0x39, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54,
		0x68, 0x6f, 0x72, 0x20, 0x49, 0x5a, 0x4e, 0x54, 0x2d, 0x31, 0x30, 0x30, 0x39, 0x54, 0x4e, 0x65,
		0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x71, 0x75, 0x61, 0x64, 0x20, 0x49,
		0x49, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x4c, 0x45, 0x4e,
		0x54, 0x2d, 0x31, 0x30, 0x31, 0x37, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68,
		0x6f, 0x72, 0x20, 0x33, 0x47, 0x20, 0x71, 0x75, 0x61, 0x64, 0x4e, 0x54, 0x2d, 0x33, 0x36, 0x30,
		0x31, 0x50, 0x2f, 0x33, 0x36, 0x30, 0x32, 0x50, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x50,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x33, 0x36, 0x30, 0x33, 0x50,
		0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x33, 0x47,
		0x20, 0x53, 0x6c, 0x69, 0x6d, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x32, 0x53, 0x4e, 0x65, 0x74,
		0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x48, 0x44, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d,
		0x33, 0x38, 0x30, 0x35, 0x43, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x61, 0x74,
		0x20, 0x33, 0x47, 0x20, 0x71, 0x75, 0x61, 0x64, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x31, 0x53,
		0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x33, 0x47, 0x20, 0x64, 0x75,
		0x6f, 0x4e, 0x54, 0x2d, 0x33, 0x39, 0x30, 0x35, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20,
		0x54, 0x68, 0x6f, 0x72, 0x20, 0x5a, 0x58, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x30, 0x37, 0x30,
		0x31, 0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x6e, 0x65, 0x74,
		0x4e, 0x54, 0x2d, 0x30, 0x38, 0x30, 0x35, 0x43, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53,
		0x6b, 0x61, 0x74, 0x20, 0x4d, 0x58, 0x4e, 0x54, 0x2d, 0x30, 0x39, 0x30, 0x32, 0x53, 0x4e, 0x65,
		0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x71, 0x75, 0x61, 0x64, 0x20,
		0x52, 0x58, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x5f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x33,
		0x47, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x33, 0x47,
		0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x32, 0x4d, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d,
		0x61, 0x74, 0x72, 0x69, 0x78, 0x20, 0x33, 0x47, 0x20, 0x64, 0x75, 0x6f, 0x4e, 0x54, 0x2d, 0x33,
		0x37, 0x30, 0x33, 0x4d, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69,
		0x78, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x20, 0x55, 0x4c, 0x54, 0x52,
		0x41, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x4e, 0x54, 0x2d, 0x31, 0x35, 0x30, 0x31, 0x43, 0x43, 0x61, 0x6c, 0x6c,
		0x69, 0x73, 0x74, 0x6f, 0x20, 0x31, 0x30, 0x30, 0x54, 0x4f, 0x55, 0x43, 0x41, 0x4e, 0x20, 0x4e,
		0x41, 0x4e, 0x4f, 0x20, 0x34, 0x4b, 0x54, 0x6f, 0x75, 0x63, 0x61, 0x6e, 0x20, 0x4e, 0x61, 0x6e,
		0x6f, 0x20, 0x34, 0x4b, 0x54, 0x4f, 0x55, 0x43, 0x41, 0x4e, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b,
		0x20, 0x34, 0x4b, 0x54, 0x6f, 0x75, 0x63, 0x61, 0x6e, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20,
		0x34, 0x4b, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x49, 0x6d, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x49, 0x6e,
		0x46, 0x6f, 0x63, 0x75, 0x73, 0x49, 0x46, 0x39, 0x30, 0x30, 0x31, 0x54, 0x75, 0x72, 0x62, 0x6f,
		0x20, 0x35, 0x49, 0x46, 0x39, 0x30, 0x30, 0x37, 0x49, 0x46, 0x39, 0x30, 0x32, 0x31, 0x54, 0x75,
		0x72, 0x62, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x46, 0x39, 0x30, 0x33, 0x35,
		0x41, 0x32, 0x49, 0x46, 0x39, 0x30, 0x30, 0x32, 0x4d, 0x35, 0x73, 0x49, 0x46, 0x39, 0x30, 0x30,
		0x33, 0x4d, 0x36, 0x73, 0x49, 0x46, 0x39, 0x30, 0x33, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x20, 0x33, 0x49, 0x46, 0x39, 0x30, 0x32, 0x39, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x49, 0x6e, 0x63, 0x68, 0x24, 0x31, 0x22, 0x49, 0x6e, 0x63, 0x6f, 0x50,
		0x6c, 0x61, 0x69, 0x6e, 0x32, 0x20, 0x53, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x20, 0x32, 0x53, 0x4d,
		0x41, 0x54, 0x54, 0x45, 0x52, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x70, 0x68, 0x65, 0x72,
		0x65, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x78, 0x42, 0x75, 0x7a, 0x7a, 0x41, 0x6c,
		0x70, 0x68, 0x61, 0x20, 0x4d, 0x61, 0x72, 0x76, 0x65, 0x6c, 0x53, 0x75, 0x72, 0x66, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x53, 0x75, 0x72, 0x66, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33,
		0x47, 0x53, 0x75, 0x72, 0x66, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x53, 0x75, 0x72,
		0x66, 0x20, 0x53, 0x70, 0x69, 0x63, 0x65, 0x53, 0x75, 0x72, 0x66, 0x20, 0x42, 0x72, 0x61, 0x76,
		0x6f, 0x53, 0x75, 0x72, 0x66, 0x20, 0x4e, 0x6f, 0x69, 0x72, 0x52, 0x61, 0x63, 0x65, 0x52, 0x61,
		0x63, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x61, 0x63, 0x65, 0x20, 0x42, 0x6f, 0x6c, 0x74,
		0x52, 0x61, 0x63, 0x65, 0x20, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x51, 0x52, 0x61, 0x63, 0x65, 0x20,
		0x42, 0x6f, 0x6c, 0x74, 0x20, 0x32, 0x52, 0x61, 0x63, 0x65, 0x20, 0x45, 0x61, 0x67, 0x6c, 0x65,
		0x52, 0x61, 0x63, 0x65, 0x20, 0x4a, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f,
		0x20, 0x32, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x33, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x34, 0x5a, 0x65,
		0x72, 0x6f, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x5a,
		0x65, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x36, 0x5a,
		0x65, 0x72, 0x6f, 0x20, 0x38, 0x69, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x38, 0x5a, 0x65, 0x72, 0x6f,
		0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x58, 0x20, 0x4e, 0x65, 0x6f,
		0x48, 0x6f, 0x74, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x48, 0x6f, 0x74, 0x20, 0x33, 0x48, 0x6f, 0x74,
		0x20, 0x53, 0x48, 0x6f, 0x74, 0x20, 0x53, 0x32, 0x48, 0x6f, 0x74, 0x20, 0x34, 0x48, 0x6f, 0x74,
		0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x35, 0x48, 0x6f, 0x74, 0x20, 0x35,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f,
		0x74, 0x20, 0x37, 0x48, 0x6f, 0x74, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20,
		0x38, 0x48, 0x6f, 0x74, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x39, 0x48,
		0x6f, 0x74, 0x20, 0x39, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x48, 0x6f, 0x74, 0x20,
		0x31, 0x30, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x48, 0x6f, 0x74,
		0x20, 0x31, 0x30, 0x54, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x78, 0x20, 0x58, 0x36, 0x38, 0x39, 0x44, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x73, 0x20, 0x4e,
		0x46, 0x43, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x78, 0x20, 0x58, 0x36, 0x38, 0x39, 0x48, 0x6f,
		0x74, 0x20, 0x31, 0x30, 0x73, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x69, 0x48, 0x6f, 0x74, 0x20,
		0x53, 0x33, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x31, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x48,
		0x44, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x20, 0x48, 0x44, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x35, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x36, 0x53, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x34, 0x53, 0x35, 0x48, 0x6f,
		0x74, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x34, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x35, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x36, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x69, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x6f, 0x74, 0x20, 0x24, 0x31, 0x24, 0x32, 0x49, 0x6e, 0x66, 0x6f, 0x4b, 0x69, 0x74,
		0x49, 0x6e, 0x6b, 0x74, 0x69, 0x49, 0x6e, 0x6e, 0x4a, 0x6f, 0x6f, 0x58, 0x33, 0x48, 0x61, 0x6c,
		0x6f, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x58, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4c, 0x54, 0x45,
		0x48, 0x61, 0x6c, 0x6f, 0x20, 0x34, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x32, 0x20, 0x33, 0x47, 0x50,
		0x72, 0x6f, 0x20, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x46,
		0x69, 0x72, 0x65, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x75, 0x70, 0x65,
		0x72, 0x62, 0x5f, 0x50, 0x4c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x42, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x49, 0x6e, 0x6e, 0x6f, 0x73, 0x49, 0x6e, 0x6e, 0x6f, 0x73, 0x74, 0x72, 0x65, 0x61,
		0x6d, 0x49, 0x4e, 0x4e, 0x4f, 0x24, 0x31, 0x49, 0x6e, 0x6f, 0x69, 0x49, 0x4e, 0x4f, 0x49, 0x50,
		0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x2b, 0x33, 0x32, 0x50, 0x61, 0x64, 0x20,
		0x32, 0x2b, 0x33, 0x32, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x31, 0x2b, 0x31,
		0x36, 0x20, 0x57, 0x69, 0x46, 0x69, 0x49, 0x4e, 0x4f, 0x49, 0x20, 0x65, 0x61, 0x73, 0x79, 0x70,
		0x68, 0x6f, 0x6e, 0x65, 0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x24, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x24, 0x32, 0x29, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x6e,
		0x69, 0x61, 0x4e, 0x53, 0x2d, 0x50, 0x31, 0x31, 0x41, 0x38, 0x31, 0x30, 0x30, 0x31, 0x31, 0x2e,
		0x36, 0x22, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4e, 0x53, 0x2d, 0x50,
		0x31, 0x36, 0x41, 0x54, 0x30, 0x38, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x38, 0x22, 0x4e, 0x53, 0x2d,
		0x50, 0x30, 0x38, 0x41, 0x37, 0x31, 0x30, 0x30, 0x38, 0x22, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4e,
		0x53, 0x2d, 0x50, 0x31, 0x36, 0x41, 0x54, 0x37, 0x38, 0x35, 0x48, 0x44, 0x46, 0x6c, 0x65, 0x78,
		0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x41, 0x46, 0x54, 0x45,
		0x41, 0x4d, 0x52, 0x33, 0x31, 0x31, 0x48, 0x44, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x41,
		0x46, 0x54, 0x4a, 0x4d, 0x53, 0x54, 0x31, 0x32, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38,
		0x29, 0x49, 0x6e, 0x74, 0x65, 0x78, 0x49, 0x4d, 0x30, 0x33, 0x31, 0x38, 0x4e, 0x44, 0x41, 0x71,
		0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x33, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c,
		0x69, 0x6f, 0x6e, 0x73, 0x20, 0x54, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x61,
		0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x20, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x61,
		0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75,
		0x61, 0x20, 0x46, 0x75, 0x6c, 0x76, 0x75, 0x20, 0x45, 0x35, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4a,
		0x65, 0x77, 0x65, 0x6c, 0x20, 0x32, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x20, 0x54, 0x72, 0x65, 0x61,
		0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x6e, 0x4b, 0x4d, 0x35, 0x50,
		0x52, 0x4f, 0x4b, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x72, 0x62, 0x69, 0x73, 0x49, 0x72,
		0x69, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x53, 0x56, 0x6f, 0x78, 0x20, 0x46, 0x6f, 0x72,
		0x74, 0x69, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x56, 0x65, 0x72, 0x6f, 0x56, 0x4f, 0x58, 0x20, 0x41,
		0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x41, 0x6c, 0x70,
		0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x4f, 0x58, 0x20, 0x53, 0x54, 0x45, 0x45, 0x4c,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x53, 0x74, 0x65, 0x65, 0x6c, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x56, 0x4f, 0x58, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x56, 0x6f, 0x78, 0x20,
		0x41, 0x6c, 0x70, 0x68, 0x61, 0x56, 0x4f, 0x58, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x56,
		0x6f, 0x78, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x56, 0x4f, 0x58, 0x20, 0x50, 0x4f, 0x50,
		0x20, 0x70, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x4f, 0x58, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x6f, 0x78, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x5f, 0x50, 0x5f, 0x50, 0x52,
		0x4f, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x50, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x53, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x49, 0x52, 0x53, 0x30, 0x30, 0x32, 0x2d, 0x31, 0x36, 0x49, 0x2d, 0x53, 0x36,
		0x49, 0x53, 0x32, 0x53, 0x58, 0x31, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x31, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x4a, 0x41, 0x59, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x50, 0x43, 0x20, 0x24, 0x31, 0x4a, 0x46, 0x6f, 0x6e, 0x65, 0x4a, 0x4b, 0x4c, 0x4a, 0x56,
		0x43, 0x4a, 0x65, 0x64, 0x69, 0x52, 0x65, 0x6d, 0x69, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65,
		0x6d, 0x69, 0x78, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4a, 0x65, 0x6b, 0x61, 0x4a, 0x4b, 0x20, 0x24,
		0x31, 0x20, 0x33, 0x47, 0x4a, 0x4b, 0x20, 0x24, 0x31, 0x4a, 0x65, 0x73, 0x79, 0x4a, 0x39, 0x53,
		0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x39, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x69, 0x61, 0x6b, 0x65,
		0x4a, 0x4b, 0x2d, 0x24, 0x31, 0x4a, 0x69, 0x61, 0x79, 0x75, 0x47, 0x34, 0x2f, 0x47, 0x35, 0x4a,
		0x59, 0x2d, 0x24, 0x31, 0x4a, 0x69, 0x6e, 0x67, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x20, 0x34,
		0x47, 0x46, 0x72, 0x65, 0x73, 0x68, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x74, 0x7a, 0x20, 0x4d, 0x31,
		0x48, 0x69, 0x74, 0x20, 0x34, 0x47, 0x50, 0x61, 0x73, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x61, 0x73, 0x73, 0x20, 0x33, 0x47, 0x47, 0x6f, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x34, 0x47, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x33, 0x47, 0x53,
		0x74, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x69, 0x63,
		0x61, 0x73, 0x73, 0x6f, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x72, 0x6f, 0x6e, 0x46, 0x72, 0x65,
		0x73, 0x68, 0x42, 0x61, 0x73, 0x63, 0x6f, 0x20, 0x4e, 0x65, 0x6f, 0x42, 0x61, 0x73, 0x63, 0x6f,
		0x20, 0x4d, 0x35, 0x30, 0x30, 0x20, 0x33, 0x47, 0x42, 0x61, 0x73, 0x63, 0x6f, 0x20, 0x24, 0x31,
		0x54, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x20, 0x53, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x47,
		0x4f, 0x20, 0x4c, 0x32, 0x49, 0x47, 0x4f, 0x20, 0x24, 0x31, 0x4a, 0x69, 0x6f, 0x4a, 0x69, 0x6f,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x4a, 0x69, 0x76, 0x69, 0x52, 0x65,
		0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x58, 0x74, 0x72, 0x65, 0x6d,
		0x65, 0x20, 0x4b, 0x6c, 0x69, 0x63, 0x6b, 0x20, 0x24, 0x31, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65,
		0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x50, 0x6c, 0x75, 0x73,
		0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x24, 0x31, 0x4a, 0x6f, 0x6c, 0x6c, 0x61, 0x4a, 0x6f,
		0x79, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x45, 0x5a, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4a,
		0x75, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x4a, 0x75,
		0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x43, 0x65, 0x64, 0x61, 0x72, 0x23, 0x43, 0x54, 0x38,
		0x43, 0x54, 0x38, 0x4a, 0x75, 0x73, 0x74, 0x35, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x24, 0x31,
		0x46, 0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x64, 0x6f,
		0x6d, 0x53, 0x70, 0x61, 0x63, 0x65, 0x72, 0x20, 0x32, 0x53, 0x53, 0x70, 0x61, 0x63, 0x65, 0x72,
		0x20, 0x32, 0x4a, 0x55, 0x53, 0x54, 0x35, 0x53, 0x50, 0x41, 0x43, 0x45, 0x52, 0x53, 0x70, 0x61,
		0x63, 0x65, 0x72, 0x42, 0x4c, 0x41, 0x53, 0x54, 0x45, 0x52, 0x20, 0x32, 0x42, 0x6c, 0x61, 0x73,
		0x74, 0x65, 0x72, 0x20, 0x32, 0x42, 0x4c, 0x41, 0x53, 0x54, 0x45, 0x52, 0x42, 0x6c, 0x61, 0x73,
		0x74, 0x65, 0x72, 0x4b, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x63, 0x65, 0x20, 0x32,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x4b, 0x41, 0x54, 0x56, 0x31, 0x4b, 0x44, 0x44, 0x49, 0x69, 0x69,
		0x64, 0x61, 0x20, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x72, 0x20, 0x24, 0x31, 0x4b, 0x49, 0x4e,
		0x47, 0x5a, 0x4f, 0x4e, 0x45, 0x4b, 0x31, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b, 0x4f, 0x50,
		0x4f, 0x4b, 0x52, 0x45, 0x5a, 0x4b, 0x52, 0x49, 0x50, 0x4b, 0x24, 0x31, 0x4b, 0x34, 0x4b, 0x52,
		0x4f, 0x4e, 0x4f, 0x4e, 0x45, 0x54, 0x31, 0x31, 0x30, 0x30, 0x4e, 0x45, 0x54, 0x20, 0x31, 0x31,
		0x30, 0x30, 0x4e, 0x45, 0x54, 0x20, 0x24, 0x31, 0x4b, 0x54, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x4b,
		0x61, 0x61, 0x6e, 0x4b, 0x61, 0x69, 0x6f, 0x6d, 0x79, 0x4b, 0x61, 0x69, 0x43, 0x6c, 0x6f, 0x75,
		0x64, 0x20, 0x24, 0x31, 0x4b, 0x61, 0x6c, 0x6c, 0x65, 0x79, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20,
		0x47, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45,
		0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x20, 0x4d, 0x41, 0x58, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
		0x74, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x49, 0x4c, 0x56, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x58, 0x53,
		0x69, 0x6c, 0x76, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x20,
		0x4d, 0x61, 0x78, 0x20, 0x24, 0x31, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x20, 0x51, 0x45,
		0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x51, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
		0x50, 0x52, 0x4f, 0x5f, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x32, 0x4b, 0x2d, 0x42, 0x4f, 0x4f, 0x4b, 0x24, 0x31, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
		0x64, 0x20, 0x54, 0x56, 0x20, 0x24, 0x31, 0x4b, 0x61, 0x6e, 0x6a, 0x69, 0x4b, 0x4a, 0x2d, 0x4f,
		0x42, 0x30, 0x33, 0x43, 0x61, 0x74, 0x61, 0x20, 0x37, 0x4b, 0x4a, 0x2d, 0x47, 0x4f, 0x43, 0x48,
		0x49, 0x47, 0x6f, 0x63, 0x68, 0x69, 0x4b, 0x4a, 0x2d, 0x4f, 0x42, 0x30, 0x32, 0x41, 0x69, 0x6c,
		0x75, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x4a, 0x2d, 0x59, 0x55, 0x42, 0x49, 0x59, 0x75, 0x62, 0x69,
		0x20, 0x33, 0x47, 0x4b, 0x4a, 0x2d, 0x41, 0x4c, 0x46, 0x41, 0x52, 0x4b, 0x41, 0x6c, 0x66, 0x61,
		0x4b, 0x4a, 0x2d, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x34, 0x4b, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x34, 0x4b, 0x4b, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x6e, 0x4b, 0x39, 0x20, 0x4b, 0x61, 0x76, 0x61,
		0x63, 0x68, 0x20, 0x34, 0x47, 0x4b, 0x39, 0x20, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x34, 0x47,
		0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x31, 0x47, 0x42, 0x4b, 0x39, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x4b,
		0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x4b, 0x39, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x59, 0x75, 0x76, 0x61, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x39, 0x20, 0x49, 0x6e, 0x64, 0x69, 0x61, 0x6e,
		0x4b, 0x39, 0x20, 0x56, 0x69, 0x72, 0x61, 0x61, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75,
		0x72, 0x61, 0x20, 0x53, 0x6c, 0x65, 0x65, 0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72,
		0x61, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x34, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x75, 0x72, 0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x75, 0x72,
		0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x41, 0x6c, 0x66, 0x61, 0x20, 0x41, 0x31, 0x31,
		0x34, 0x20, 0x51, 0x75, 0x61, 0x64, 0x4b, 0x39, 0x20, 0x56, 0x69, 0x72, 0x61, 0x61, 0x74, 0x20,
		0x34, 0x47, 0x4d, 0x41, 0x43, 0x48, 0x46, 0x49, 0x56, 0x45, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x46,
		0x69, 0x76, 0x65, 0x4d, 0x41, 0x43, 0x48, 0x4f, 0x4e, 0x45, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x69,
		0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x4f, 0x6e, 0x65, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4d, 0x41, 0x43, 0x48, 0x4f, 0x4e, 0x45, 0x54, 0x69, 0x74, 0x61, 0x6e,
		0x69, 0x75, 0x6d, 0x20, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x4f, 0x6e, 0x65, 0x54, 0x69, 0x74, 0x61,
		0x6e, 0x69, 0x75, 0x6d, 0x20, 0x53, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x74, 0x61,
		0x6e, 0x69, 0x75, 0x6d, 0x5f, 0x53, 0x39, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x74, 0x61, 0x6e,
		0x69, 0x75, 0x6d, 0x20, 0x53, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x74, 0x61, 0x6e,
		0x69, 0x75, 0x6d, 0x20, 0x53, 0x24, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20,
		0x56, 0x69, 0x73, 0x74, 0x61, 0x20, 0x34, 0x47, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d,
		0x20, 0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x32, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d,
		0x20, 0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d,
		0x6f, 0x67, 0x68, 0x75, 0x6c, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x46, 0x72,
		0x61, 0x6d, 0x65, 0x73, 0x20, 0x53, 0x37, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20,
		0x4f, 0x63, 0x74, 0x61, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x74, 0x61, 0x6e,
		0x69, 0x75, 0x6d, 0x20, 0x33, 0x44, 0x20, 0x50, 0x6c, 0x65, 0x78, 0x53, 0x32, 0x30, 0x35, 0x32,
		0x47, 0x42, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x53, 0x32, 0x35, 0x30, 0x20,
		0x32, 0x47, 0x42, 0x4b, 0x2d, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x46, 0x33, 0x4b, 0x2d, 0x4c, 0x69,
		0x74, 0x65, 0x20, 0x46, 0x33, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x6c, 0x65, 0x20, 0x56, 0x51, 0x75,
		0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x48, 0x44, 0x51, 0x75, 0x61, 0x74,
		0x74, 0x72, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x49, 0x50, 0x53, 0x51, 0x75, 0x61, 0x74, 0x74,
		0x72, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x56, 0x52, 0x4b, 0x61, 0x74, 0x61, 0x49, 0x35, 0x54,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x42, 0x6f, 0x78, 0x20, 0x32, 0x4b, 0x61, 0x7a, 0x61,
		0x6d, 0x54, 0x6f, 0x72, 0x6e, 0x61, 0x64, 0x6f, 0x20, 0x33, 0x34, 0x38, 0x54, 0x68, 0x75, 0x6e,
		0x64, 0x65, 0x72, 0x20, 0x34, 0x35, 0x30, 0x57, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x20,
		0x58, 0x34, 0x2e, 0x30, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x20, 0x58, 0x24, 0x31, 0x2e,
		0x24, 0x32, 0x4b, 0x61, 0x7a, 0x75, 0x6e, 0x61, 0x4b, 0x41, 0x5a, 0x2d, 0x4e, 0x32, 0x30, 0x65,
		0x54, 0x61, 0x6c, 0x6b, 0x20, 0x4d, 0x59, 0x46, 0x4c, 0x49, 0x58, 0x4b, 0x65, 0x6d, 0x70, 0x6c,
		0x65, 0x72, 0x20, 0x26, 0x20, 0x53, 0x74, 0x72, 0x61, 0x75, 0x73, 0x73, 0x41, 0x6c, 0x75, 0x6d,
		0x69, 0x6e, 0x69, 0x20, 0x32, 0x41, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x41, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x69, 0x33, 0x41, 0x6c, 0x75, 0x6d, 0x69,
		0x6e, 0x69, 0x20, 0x33, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x50, 0x31, 0x4b, 0x45,
		0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x54, 0x56, 0x54, 0x56, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45,
		0x52, 0x5f, 0x58, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x38, 0x5f, 0x50, 0x4c, 0x55,
		0x53, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x39,
		0x4b, 0x65, 0x6e, 0x65, 0x6b, 0x73, 0x69, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x74, 0x79, 0x53, 0x75,
		0x6e, 0x5a, 0x65, 0x74, 0x61, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x4b, 0x65, 0x6e, 0x78, 0x69, 0x6e,
		0x64, 0x61, 0x54, 0x68, 0x72, 0x65, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x69, 0x6e, 0x67,
		0x73, 0x20, 0x57, 0x24, 0x31, 0x4b, 0x69, 0x61, 0x6e, 0x6f, 0x53, 0x6c, 0x69, 0x6d, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x24, 0x31, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x20, 0x44,
		0x55, 0x41, 0x4c, 0x20, 0x33, 0x47, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x24,
		0x31, 0x2e, 0x24, 0x32, 0x22, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63,
		0x65, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x22, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65,
		0x20, 0x36, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x36, 0x20, 0x35, 0x2e, 0x38,
		0x35, 0x22, 0x24, 0x32, 0x20, 0x24, 0x33, 0x4b, 0x69, 0x6e, 0x67, 0x62, 0x6f, 0x78, 0x4b, 0x69,
		0x6e, 0x67, 0x73, 0x75, 0x6e, 0x4b, 0x69, 0x6f, 0x77, 0x61, 0x24, 0x31, 0x20, 0x43, 0x72, 0x69,
		0x73, 0x74, 0x61, 0x6c, 0x4b, 0x69, 0x76, 0x69, 0x24, 0x31, 0x20, 0x76, 0x24, 0x32, 0x4b, 0x6c,
		0x69, 0x70, 0x61, 0x64, 0x4b, 0x6f, 0x63, 0x61, 0x73, 0x6f, 0x4d, 0x36, 0x32, 0x30, 0x30, 0x4d,
		0x37, 0x32, 0x39, 0x4d, 0x24, 0x31, 0x4d, 0x58, 0x37, 0x38, 0x30, 0x4d, 0x38, 0x35, 0x31, 0x4d,
		0x31, 0x30, 0x35, 0x30, 0x73, 0x4d, 0x31, 0x30, 0x37, 0x30, 0x4d, 0x58, 0x37, 0x33, 0x36, 0x4b,
		0x6f, 0x64, 0x61, 0x6b, 0x49, 0x4d, 0x35, 0x53, 0x65, 0x72, 0x65, 0x6e, 0x20, 0x24, 0x31, 0x45,
		0x6b, 0x74, 0x72, 0x61, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x77, 0x61, 0x79, 0x20, 0x4c, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x77, 0x61, 0x79, 0x20, 0x24, 0x31, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x4b, 0x6f, 0x67, 0x61, 0x6e, 0x4b, 0x6f, 0x6d, 0x75,
		0x4b, 0x6f, 0x6e, 0x6b, 0x61, 0x45, 0x35, 0x36, 0x36, 0x30, 0x53, 0x56, 0x69, 0x76, 0x61, 0x20,
		0x35, 0x36, 0x36, 0x30, 0x73, 0x57, 0x38, 0x33, 0x30, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x38,
		0x33, 0x30, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x20, 0x24, 0x31, 0x57, 0x39, 0x39, 0x30, 0x54,
		0x75, 0x78, 0x65, 0x64, 0x6f, 0x20, 0x39, 0x39, 0x30, 0x4b, 0x6f, 0x6e, 0x72, 0x6f, 0x77, 0x42,
		0x69, 0x67, 0x43, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6f, 0x6c, 0x2d, 0x4b, 0x43, 0x6f, 0x6f, 0x6c,
		0x20, 0x35, 0x35, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x46, 0x69, 0x76, 0x65, 0x4a, 0x75, 0x73, 0x74,
		0x20, 0x35, 0x4c, 0x69, 0x6e, 0x6b, 0x20, 0x35, 0x43, 0x69, 0x74, 0x79, 0x20, 0x35, 0x35, 0x53,
		0x6b, 0x79, 0x20, 0x35, 0x35, 0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x35, 0x4b, 0x6f, 0x6f, 0x62,
		0x65, 0x65, 0x4b, 0x6f, 0x6f, 0x6c, 0x6e, 0x65, 0x65, 0x4b, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x57, 0x35, 0x30, 0x32, 0x4b, 0x6f, 0x72, 0x69, 0x64, 0x79,
		0x4b, 0x6f, 0x73, 0x6c, 0x61, 0x6d, 0x4b, 0x72, 0xc3, 0xbc, 0x67, 0x65, 0x72, 0x26, 0x4d, 0x61,
		0x74, 0x7a, 0x4d, 0x4f, 0x56, 0x45, 0x38, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45, 0x20,
		0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x36, 0x5f, 0x6d, 0x69, 0x6e,
		0x69, 0x4d, 0x4f, 0x56, 0x45, 0x20, 0x36, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45,
		0x20, 0x24, 0x31, 0x44, 0x52, 0x49, 0x56, 0x45, 0x20, 0x34, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20,
		0x4c, 0x54, 0x45, 0x44, 0x52, 0x49, 0x56, 0x45, 0x20, 0x24, 0x31, 0x46, 0x4c, 0x4f, 0x57, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x4c, 0x4f, 0x57, 0x20, 0x36, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x46, 0x4c, 0x4f, 0x57, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x34, 0x20,
		0x24, 0x31, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x34, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x35, 0x20, 0x24,
		0x31, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x49, 0x56, 0x45,
		0x20, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x24, 0x31, 0x53, 0x4c,
		0x49, 0x56, 0x45, 0x20, 0x24, 0x31, 0x4d, 0x4f, 0x56, 0x45, 0x20, 0x39, 0x45, 0x41, 0x47, 0x4c,
		0x45, 0x20, 0x24, 0x31, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20,
		0x24, 0x31, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31,
		0x20, 0x37, 0x2e, 0x31, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4b,
		0x75, 0x6c, 0x69, 0x61, 0x6f, 0x4b, 0x75, 0x6c, 0x74, 0x4b, 0x75, 0x6d, 0x61, 0x69, 0x4b, 0x75,
		0x72, 0x69, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x43, 0x31, 0x34, 0x35, 0x30, 0x30, 0x4b,
		0x79, 0x6f, 0x63, 0x65, 0x72, 0x61, 0x4d, 0x69, 0x6c, 0x61, 0x6e, 0x6f, 0x4f, 0x6e, 0x65, 0x20,
		0x53, 0x34, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x36, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x38, 0x52, 0x69,
		0x73, 0x65, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x47, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x45,
		0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x43, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x4a, 0x44, 0x69,
		0x67, 0x6e, 0x6f, 0x20, 0x54, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x32, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x52, 0x61, 0x66, 0x72,
		0x65, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x42, 0x58, 0x4d, 0x69, 0x72, 0x61, 0x69, 0x65, 0x20,
		0x46, 0x49, 0x6e, 0x66, 0x6f, 0x62, 0x61, 0x72, 0x20, 0x58, 0x56, 0x48, 0x79, 0x64, 0x72, 0x6f,
		0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x45, 0x44, 0x47, 0x45, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20,
		0x58, 0x54, 0x52, 0x4d, 0x43, 0x36, 0x37, 0x33, 0x30, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x49,
		0x43, 0x4f, 0x4e, 0x43, 0x36, 0x37, 0x35, 0x30, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x45, 0x4c,
		0x49, 0x54, 0x45, 0x43, 0x36, 0x35, 0x33, 0x30, 0x4e, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x4c,
		0x49, 0x46, 0x45, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x57, 0x41, 0x56, 0x45, 0x43, 0x36, 0x37,
		0x34, 0x33, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x52, 0x65, 0x61, 0x63, 0x68, 0x44, 0x75, 0x72,
		0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20,
		0x50, 0x72, 0x6f, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x32, 0x45, 0x37, 0x31, 0x31, 0x30, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x4b, 0x43, 0x2d, 0x53, 0x37, 0x30, 0x31,
		0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x4b, 0x59, 0x47, 0x30, 0x31, 0x54, 0x6f, 0x72, 0x71, 0x75,
		0x65, 0x20, 0x35, 0x47, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x53, 0x4d, 0x69, 0x72, 0x61, 0x69,
		0x65, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x31, 0x45, 0x61, 0x73, 0x79, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x72, 0x76,
		0x65, 0x72, 0x61, 0x4d, 0x61, 0x6d, 0x6f, 0x72, 0x69, 0x6e, 0x6f, 0x20, 0x35, 0x47, 0x72, 0x61,
		0x74, 0x69, 0x6e, 0x61, 0x20, 0x34, 0x47, 0x47, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x61, 0x20, 0x4b,
		0x59, 0x56, 0x34, 0x38, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x58, 0x30, 0x31, 0x54, 0x6f,
		0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x32, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47,
		0x30, 0x33, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x34, 0x42, 0x61, 0x73, 0x69,
		0x6f, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x20, 0x34, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x20, 0x33, 0x4b,
		0x61, 0x6e, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f, 0x51, 0x75, 0x61, 0x20,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x51,
		0x58, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x51, 0x5a, 0x51, 0x75, 0x61,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x51, 0x5a, 0x31, 0x30, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x51, 0x5a, 0x38, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x30, 0x31, 0x52, 0x61,
		0x66, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x62, 0x61, 0x72, 0x20, 0x41, 0x30, 0x33, 0x55, 0x72,
		0x62, 0x61, 0x6e, 0x6f, 0x20, 0x4c, 0x30, 0x31, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x4c,
		0x30, 0x32, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x4c, 0x30, 0x33, 0x55, 0x72, 0x62, 0x61,
		0x6e, 0x6f, 0x20, 0x56, 0x30, 0x31, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x56, 0x30, 0x32,
		0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x56, 0x30, 0x33, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f,
		0x72, 0x63, 0x65, 0x20, 0x58, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x33, 0x42, 0x72, 0x69, 0x67,
		0x61, 0x64, 0x69, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x53, 0x63, 0x6f, 0x75, 0x74, 0x4c, 0x75,
		0x63, 0x65, 0x4b, 0x61, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f, 0x20, 0x32,
		0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x6f,
		0x53, 0x32, 0x31, 0x35, 0x31, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x4b, 0x5a, 0x20, 0x24, 0x31, 0x24,
		0x31, 0x2d, 0x24, 0x32, 0x4b, 0x79, 0x6f, 0x77, 0x6f, 0x6e, 0x4b, 0x7a, 0x65, 0x6e, 0x55, 0x72,
		0x65, 0x6b, 0x69, 0x5f, 0x55, 0x31, 0x55, 0x72, 0x65, 0x6b, 0x69, 0x20, 0x55, 0x31, 0x56, 0x69,
		0x63, 0x74, 0x6f, 0x72, 0x20, 0x56, 0x31, 0x52, 0x45, 0x58, 0x20, 0x52, 0x58, 0x52, 0x65, 0x78,
		0x20, 0x52, 0x58, 0x44, 0x41, 0x52, 0x54, 0x20, 0x4b, 0x5a, 0x30, 0x37, 0x44, 0x61, 0x72, 0x74,
		0x20, 0x4b, 0x5a, 0x30, 0x37, 0x4c, 0x2d, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x53, 0x61, 0x70, 0x70, 0x68, 0x69, 0x72, 0x65, 0x20, 0x24,
		0x31, 0x4c, 0x41, 0x49, 0x51, 0x4c, 0x43, 0x54, 0x4c, 0x45, 0x4d, 0x46, 0x4f, 0x4c, 0x47, 0x44,
		0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x44, 0x4d, 0x2d,
		0x24, 0x31, 0x4c, 0x37, 0x30, 0x46, 0x37, 0x30, 0x4c, 0x39, 0x30, 0x4c, 0x47, 0x2d, 0x44, 0x33,
		0x37, 0x33, 0x4c, 0x38, 0x30, 0x4c, 0x47, 0x2d, 0x44, 0x33, 0x34, 0x30, 0x46, 0x38, 0x4c, 0x37,
		0x30, 0x20, 0x54, 0x72, 0x69, 0x4c, 0x47, 0x2d, 0x44, 0x31, 0x32, 0x35, 0x4c, 0x33, 0x30, 0x4c,
		0x47, 0x2d, 0x58, 0x31, 0x34, 0x35, 0x4c, 0x36, 0x30, 0x4c, 0x47, 0x2d, 0x58, 0x31, 0x33, 0x35,
		0x4c, 0x36, 0x30, 0x69, 0x4c, 0x47, 0x2d, 0x44, 0x32, 0x38, 0x35, 0x4c, 0x36, 0x35, 0x4c, 0x4d,
		0x2d, 0x58, 0x32, 0x31, 0x30, 0x41, 0x50, 0x4d, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20,
		0x34, 0x4c, 0x47, 0x2d, 0x50, 0x35, 0x30, 0x35, 0x52, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30,
		0x56, 0x50, 0x50, 0x5a, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x32, 0x30,
		0x50, 0x4d, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x45, 0x6d, 0x70, 0x69, 0x72, 0x65,
		0x4c, 0x47, 0x2d, 0x53, 0x50, 0x32, 0x30, 0x30, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20,
		0x44, 0x79, 0x6e, 0x61, 0x73, 0x74, 0x79, 0x4c, 0x47, 0x4c, 0x53, 0x36, 0x37, 0x35, 0x54, 0x72,
		0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x35, 0x4c, 0x47, 0x2d, 0x46, 0x35, 0x37, 0x30, 0x42, 0x61,
		0x6e, 0x64, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x32, 0x47, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x47, 0x33, 0x4c, 0x47, 0x2d, 0x44, 0x37, 0x32, 0x32, 0x47, 0x33, 0x53, 0x47, 0x33, 0x20, 0x53,
		0x74, 0x79, 0x6c, 0x75, 0x73, 0x47, 0x33, 0x20, 0x42, 0x65, 0x61, 0x74, 0x4c, 0x47, 0x2d, 0x46,
		0x34, 0x36, 0x30, 0x47, 0x33, 0x20, 0x43, 0x61, 0x74, 0x2e, 0x20, 0x36, 0x4c, 0x47, 0x2d, 0x44,
		0x37, 0x32, 0x34, 0x47, 0x33, 0x73, 0x47, 0x34, 0x47, 0x34, 0x63, 0x47, 0x34, 0x20, 0x53, 0x74,
		0x79, 0x6c, 0x75, 0x73, 0x4c, 0x47, 0x2d, 0x48, 0x37, 0x33, 0x36, 0x47, 0x34, 0x73, 0x4c, 0x47,
		0x2d, 0x48, 0x37, 0x33, 0x35, 0x47, 0x34, 0x20, 0x42, 0x65, 0x61, 0x74, 0x47, 0x35, 0x47, 0x35,
		0x20, 0x53, 0x45, 0x47, 0x36, 0x4c, 0x4d, 0x2d, 0x51, 0x38, 0x35, 0x30, 0x47, 0x37, 0x20, 0x46,
		0x69, 0x74, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x31, 0x30, 0x47, 0x37, 0x20, 0x4f, 0x6e, 0x65, 0x47,
		0x20, 0x46, 0x6c, 0x65, 0x78, 0x4c, 0x47, 0x2d, 0x48, 0x39, 0x35, 0x30, 0x47, 0x20, 0x46, 0x6c,
		0x65, 0x78, 0x20, 0x32, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x4d,
		0x2d, 0x47, 0x38, 0x35, 0x30, 0x47, 0x38, 0x58, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d,
		0x2d, 0x47, 0x38, 0x31, 0x30, 0x47, 0x38, 0x53, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x57, 0x69,
		0x6e, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x48, 0x34, 0x31, 0x30, 0x4b, 0x32, 0x30,
		0x4c, 0x47, 0x4d, 0x53, 0x33, 0x39, 0x35, 0x46, 0x36, 0x30, 0x41, 0x4b, 0x41, 0x4c, 0x4d, 0x2d,
		0x4b, 0x39, 0x32, 0x30, 0x4b, 0x39, 0x32, 0x4c, 0x47, 0x4c, 0x34, 0x31, 0x43, 0x55, 0x6c, 0x74,
		0x69, 0x6d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x4c, 0x47, 0x4c, 0x53, 0x36, 0x36, 0x30, 0x54, 0x72,
		0x69, 0x62, 0x75, 0x74, 0x65, 0x4d, 0x61, 0x67, 0x6e, 0x61, 0x4c, 0x47, 0x4c, 0x36, 0x33, 0x42,
		0x4c, 0x46, 0x69, 0x65, 0x73, 0x74, 0x61, 0x42, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x32, 0x4c, 0x20,
		0x42, 0x65, 0x6c, 0x6c, 0x6f, 0x4c, 0x20, 0x46, 0x69, 0x6e, 0x6f, 0x52, 0x69, 0x73, 0x69, 0x6f,
		0x52, 0x69, 0x73, 0x69, 0x6f, 0x20, 0x32, 0x58, 0x33, 0x30, 0x30, 0x53, 0x70, 0x72, 0x65, 0x65,
		0x4c, 0x47, 0x4d, 0x2d, 0x58, 0x34, 0x30, 0x31, 0x53, 0x58, 0x34, 0x30, 0x30, 0x58, 0x35, 0x30,
		0x30, 0x4c, 0x47, 0x2d, 0x46, 0x36, 0x32, 0x30, 0x4b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4f, 0x6e, 0x65, 0x4c, 0x47, 0x2d, 0x45, 0x39, 0x37, 0x35,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
		0x20, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x47, 0x2d, 0x45, 0x34, 0x33, 0x35, 0x66, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x33, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x75, 0x73, 0x20, 0x4c, 0x34, 0x20, 0x49, 0x49, 0x4c, 0x47, 0x2d, 0x45, 0x34, 0x36, 0x37, 0x66,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x34, 0x20, 0x49, 0x49, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x4c, 0x47, 0x2d, 0x45, 0x34, 0x36, 0x30, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
		0x20, 0x4c, 0x35, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x31,
		0x20, 0x49, 0x49, 0x4c, 0x47, 0x2d, 0x50, 0x38, 0x37, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x46, 0x35, 0x4c, 0x47, 0x4d, 0x53, 0x35, 0x30, 0x30, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x75, 0x73, 0x20, 0x46, 0x36, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x69, 0x74, 0x20,
		0x24, 0x31, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x32, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69,
		0x6d, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x4c, 0x2d, 0x30, 0x31, 0x44, 0x50, 0x52, 0x41,
		0x44, 0x41, 0x20, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x2d, 0x30, 0x32, 0x44, 0x4c, 0x2d,
		0x30, 0x37, 0x43, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x42, 0x72, 0x69, 0x67, 0x68,
		0x74, 0x20, 0x4c, 0x2d, 0x30, 0x37, 0x43, 0x56, 0x32, 0x30, 0x51, 0x20, 0x53, 0x74, 0x79, 0x6c,
		0x75, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x38, 0x30, 0x31, 0x4c, 0x47, 0x51, 0x20, 0x53, 0x74,
		0x79, 0x6c, 0x75, 0x73, 0x4c, 0x47, 0x2d, 0x4d, 0x34, 0x30, 0x30, 0x53, 0x74, 0x79, 0x6c, 0x75,
		0x73, 0x20, 0x33, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x53, 0x74, 0x79, 0x6c, 0x75,
		0x73, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x37, 0x51, 0x37, 0x2b, 0x51, 0x38, 0x2b,
		0x51, 0x38, 0x51, 0x39, 0x51, 0x37, 0x30, 0x51, 0x35, 0x32, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x50, 0x58, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65,
		0x20, 0x32, 0x4c, 0x47, 0x4c, 0x53, 0x37, 0x37, 0x35, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32,
		0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32, 0x20, 0x56, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x33, 0x47, 0x20, 0x53, 0x74,
		0x79, 0x6c, 0x6f, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x33, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20,
		0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x34, 0x53, 0x74, 0x79,
		0x6c, 0x6f, 0x20, 0x35, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x36, 0x47, 0x37, 0x20, 0x54, 0x68,
		0x69, 0x6e, 0x51, 0x4c, 0x47, 0x2d, 0x4d, 0x31, 0x35, 0x33, 0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e,
		0x65, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30, 0x43, 0x4d, 0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e,
		0x65, 0x20, 0x32, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x72,
		0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72,
		0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x4d, 0x2d,
		0x58, 0x35, 0x32, 0x35, 0x51, 0x36, 0x30, 0x4c, 0x4d, 0x2d, 0x4b, 0x33, 0x31, 0x35, 0x49, 0x4d,
		0x57, 0x33, 0x31, 0x4b, 0x33, 0x31, 0x4c, 0x47, 0x4c, 0x34, 0x32, 0x33, 0x44, 0x4c, 0x53, 0x6f,
		0x6c, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x47, 0x2d, 0x46, 0x38, 0x32, 0x30, 0x4c, 0x55, 0x4c,
		0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30, 0x4b, 0x58, 0x32, 0x58, 0x20, 0x43, 0x61, 0x6d, 0x58, 0x20,
		0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x58, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x47, 0x2d,
		0x46, 0x37, 0x34, 0x30, 0x4c, 0x58, 0x20, 0x53, 0x6b, 0x69, 0x6e, 0x58, 0x20, 0x53, 0x63, 0x72,
		0x65, 0x65, 0x6e, 0x58, 0x20, 0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x4d, 0x2d, 0x58,
		0x35, 0x31, 0x30, 0x57, 0x4d, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x33, 0x58, 0x34,
		0x58, 0x34, 0x2b, 0x4b, 0x31, 0x31, 0x4b, 0x33, 0x30, 0x4c, 0x4d, 0x58, 0x31, 0x33, 0x30, 0x49,
		0x4d, 0x57, 0x31, 0x30, 0x4c, 0x4d, 0x2d, 0x4b, 0x33, 0x31, 0x30, 0x49, 0x4d, 0x57, 0x31, 0x31,
		0x4c, 0x4d, 0x2d, 0x58, 0x36, 0x30, 0x30, 0x49, 0x4d, 0x57, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x34, 0x30, 0x5a, 0x4d, 0x57, 0x57, 0x33, 0x30, 0x4c, 0x4d, 0x2d,
		0x4b, 0x36, 0x31, 0x30, 0x49, 0x4d, 0x57, 0x34, 0x31, 0x4c, 0x47, 0x2d, 0x48, 0x35, 0x32, 0x32,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x34, 0x47, 0x4c, 0x47, 0x4c,
		0x35, 0x38, 0x56, 0x4c, 0x52, 0x61, 0x62, 0x65, 0x6c, 0x20, 0x32, 0x4c, 0x47, 0x2d, 0x58, 0x31,
		0x39, 0x30, 0x52, 0x61, 0x79, 0x4c, 0x47, 0x4c, 0x53, 0x37, 0x34, 0x30, 0x56, 0x6f, 0x6c, 0x74,
		0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x31, 0x30, 0x4c, 0x47, 0x4d, 0x2d, 0x4b, 0x31, 0x32, 0x31, 0x4c,
		0x47, 0x4d, 0x2d, 0x58, 0x34, 0x30, 0x31, 0x4c, 0x58, 0x34, 0x30, 0x31, 0x4c, 0x4d, 0x2d, 0x58,
		0x34, 0x32, 0x30, 0x4e, 0x58, 0x34, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4b, 0x34, 0x20,
		0x4c, 0x54, 0x45, 0x4b, 0x34, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4c, 0x4d, 0x2d, 0x58,
		0x34, 0x32, 0x30, 0x4b, 0x34, 0x30, 0x4b, 0x34, 0x30, 0x53, 0x4c, 0x4d, 0x2d, 0x4b, 0x34, 0x31,
		0x30, 0x4b, 0x34, 0x31, 0x53, 0x4c, 0x47, 0x2d, 0x58, 0x32, 0x32, 0x30, 0x4b, 0x35, 0x4c, 0x4d,
		0x2d, 0x58, 0x35, 0x34, 0x30, 0x4b, 0x35, 0x30, 0x53, 0x4b, 0x35, 0x30, 0x34, 0x30, 0x32, 0x4c,
		0x47, 0x53, 0x70, 0x72, 0x61, 0x79, 0x4c, 0x2d, 0x30, 0x32, 0x4b, 0x4a, 0x6f, 0x4a, 0x6f, 0x4c,
		0x4d, 0x2d, 0x58, 0x36, 0x32, 0x35, 0x4e, 0x31, 0x58, 0x36, 0x4c, 0x4d, 0x2d, 0x58, 0x36, 0x32,
		0x35, 0x4e, 0x58, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x72, 0x69, 0x73, 0x74,
		0x6f, 0x41, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x20, 0x32, 0x41, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x20,
		0x33, 0x58, 0x32, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x56, 0x34, 0x30, 0x20, 0x54, 0x68,
		0x69, 0x6e, 0x51, 0x56, 0x35, 0x30, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d, 0x56,
		0x35, 0x31, 0x30, 0x4e, 0x56, 0x35, 0x30, 0x53, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d,
		0x2d, 0x51, 0x39, 0x32, 0x30, 0x4e, 0x51, 0x39, 0x32, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x32, 0x37,
		0x4c, 0x51, 0x39, 0x20, 0x4f, 0x6e, 0x65, 0x56, 0x31, 0x30, 0x4b, 0x38, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x37, 0x29, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x32, 0x30, 0x51, 0x4d, 0x41, 0x4b, 0x38, 0x73,
		0x4b, 0x38, 0x20, 0x34, 0x47, 0x4b, 0x38, 0x20, 0x56, 0x4b, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x38, 0x29, 0x56, 0x33, 0x30, 0x56, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x33, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x35, 0x47, 0x56, 0x65, 0x6c,
		0x76, 0x65, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x4d, 0x2d, 0x47, 0x39, 0x31, 0x30,
		0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x34, 0x47, 0x56, 0x36, 0x30, 0x20, 0x54, 0x68, 0x69,
		0x6e, 0x51, 0x20, 0x35, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x5a, 0x6f, 0x6e,
		0x65, 0x56, 0x33, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x5a, 0x6f, 0x6e, 0x65,
		0x20, 0x32, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x5a, 0x6f, 0x6e, 0x65, 0x20, 0x33,
		0x4b, 0x33, 0x4c, 0x47, 0x2d, 0x41, 0x53, 0x31, 0x31, 0x30, 0x4b, 0x33, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x37, 0x29, 0x4b, 0x37, 0x4b, 0x38, 0x56, 0x53, 0x35, 0x30, 0x30, 0x50, 0x50, 0x4b, 0x31,
		0x30, 0x4b, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4b, 0x32, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4b, 0x32, 0x32, 0x4b, 0x34, 0x32, 0x4b, 0x35, 0x31, 0x4b, 0x35, 0x31, 0x53,
		0x4b, 0x35, 0x32, 0x4b, 0x35, 0x36, 0x4b, 0x35, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x35,
		0x31, 0x51, 0x33, 0x31, 0x51, 0x36, 0x31, 0x51, 0x36, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x34, 0x30,
		0x69, 0x74, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79,
		0x20, 0x34, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x32, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x32, 0x50, 0x68, 0x6f, 0x65, 0x6e,
		0x69, 0x78, 0x20, 0x33, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x56, 0x75, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x56, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x34,
		0x58, 0x20, 0x48, 0x44, 0x4c, 0x65, 0x6f, 0x6e, 0x4c, 0x65, 0x6f, 0x6e, 0x20, 0x34, 0x47, 0x20,
		0x4c, 0x54, 0x45, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
		0x20, 0x50, 0x72, 0x6f, 0x4c, 0x47, 0x4c, 0x31, 0x35, 0x38, 0x56, 0x4c, 0x52, 0x65, 0x62, 0x65,
		0x6c, 0x20, 0x33, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x20, 0x34, 0x56, 0x53, 0x38, 0x37, 0x36, 0x4c,
		0x75, 0x63, 0x69, 0x64, 0x20, 0x33, 0x47, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x56, 0x53, 0x38,
		0x32, 0x30, 0x4c, 0x61, 0x6e, 0x63, 0x65, 0x74, 0x56, 0x53, 0x38, 0x37, 0x30, 0x20, 0x34, 0x47,
		0x4c, 0x75, 0x63, 0x69, 0x64, 0x20, 0x32, 0x56, 0x53, 0x38, 0x31, 0x30, 0x50, 0x50, 0x54, 0x72,
		0x61, 0x6e, 0x73, 0x70, 0x79, 0x72, 0x65, 0x4c, 0x47, 0x2d, 0x44, 0x38, 0x33, 0x38, 0x47, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x32, 0x57, 0x49, 0x4e, 0x47, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x35,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x46, 0x48, 0x44, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x37, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x47, 0x2d, 0x56, 0x35, 0x33, 0x33, 0x47,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x56, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x46, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4c, 0x47, 0x4c, 0x4b, 0x34, 0x33, 0x30, 0x47,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x38, 0x2e, 0x30, 0x4c, 0x47, 0x54, 0x30, 0x31, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x47, 0x2d, 0x56, 0x35, 0x30, 0x30, 0x47, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x33, 0x4c, 0x47, 0x2d, 0x56, 0x37, 0x30, 0x30, 0x47, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x4c, 0x47, 0x2d, 0x56, 0x34, 0x39, 0x37, 0x47,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4c, 0x47, 0x2d, 0x56,
		0x39, 0x33, 0x35, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x4c, 0x47, 0x54, 0x30, 0x32, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x49, 0x20, 0x38,
		0x2e, 0x30, 0x4c, 0x47, 0x2d, 0x56, 0x35, 0x32, 0x31, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58,
		0x20, 0x38, 0x2e, 0x30, 0x56, 0x4b, 0x38, 0x31, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38,
		0x2e, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x4b, 0x38, 0x31, 0x35, 0x47, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x58, 0x20, 0x38, 0x2e, 0x33, 0x4c, 0x47, 0x2d, 0x56, 0x35, 0x32, 0x30, 0x47, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x58, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4c, 0x47, 0x2d, 0x56, 0x35, 0x33, 0x30,
		0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4c, 0x47, 0x54, 0x33, 0x32, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x64, 0x20, 0x50,
		0x5a, 0x4c, 0x47, 0x54, 0x33, 0x31, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x64, 0x20, 0x50, 0x58,
		0x57, 0x65, 0x62, 0x4f, 0x53, 0x20, 0x54, 0x56, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x42, 0x50,
		0x37, 0x34, 0x30, 0x42, 0x50, 0x37, 0x34, 0x30, 0x34, 0x37, 0x4c, 0x41, 0x37, 0x39, 0x30, 0x57,
		0x2d, 0x5a, 0x41, 0x4e, 0x65, 0x74, 0x43, 0x61, 0x73, 0x74, 0x4c, 0x47, 0x20, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x20, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x55,
		0x72, 0x62, 0x61, 0x6e, 0x65, 0x47, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x24, 0x31, 0x4c, 0x4f,
		0x4b, 0x4d, 0x41, 0x54, 0x4c, 0x54, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x24, 0x31, 0x4c, 0x54, 0x20, 0x43, 0x33, 0x31, 0x30, 0x30, 0x53, 0x31, 0x30, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4c, 0x59, 0x46, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x34, 0x46, 0x6c,
		0x61, 0x6d, 0x65, 0x20, 0x32, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x31, 0x45, 0x61, 0x72, 0x74,
		0x68, 0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x32, 0x31, 0x45, 0x61, 0x72, 0x74, 0x68, 0x20,
		0x32, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x35, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x46, 0x31,
		0x4c, 0x53, 0x2d, 0x34, 0x35, 0x30, 0x33, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x4c, 0x53, 0x2d,
		0x34, 0x35, 0x30, 0x33, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x31, 0x46, 0x6c, 0x61, 0x6d, 0x65,
		0x20, 0x33, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x33, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x34,
		0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x32, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x35, 0x4c, 0x53,
		0x2d, 0x34, 0x30, 0x30, 0x35, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x36, 0x46, 0x6c, 0x61, 0x6d,
		0x65, 0x20, 0x37, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x38, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20,
		0x37, 0x53, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x38, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x32,
		0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x35, 0x57, 0x61,
		0x74, 0x65, 0x72, 0x20, 0x34, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x36, 0x57, 0x61, 0x74, 0x65,
		0x72, 0x20, 0x36, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x38, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20,
		0x32, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x39, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x36, 0x4c, 0x53,
		0x2d, 0x35, 0x30, 0x31, 0x33, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x4c, 0x53, 0x2d, 0x35, 0x30,
		0x31, 0x34, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x34, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x30, 0x57,
		0x69, 0x6e, 0x64, 0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x35, 0x57, 0x61, 0x74, 0x65,
		0x72, 0x20, 0x38, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x36, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x37,
		0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x34, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x37, 0x4c, 0x53,
		0x2d, 0x35, 0x35, 0x30, 0x37, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x37, 0x53, 0x4c, 0x53, 0x2d,
		0x35, 0x30, 0x31, 0x37, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x31, 0x4c, 0x53, 0x2d, 0x35,
		0x30, 0x31, 0x38, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x34, 0x53, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x32,
		0x30, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x30, 0x4c, 0x53, 0x2d, 0x35, 0x32, 0x30, 0x31,
		0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x46, 0x31, 0x53, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x32,
		0x57, 0x69, 0x6e, 0x64, 0x20, 0x33, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x33, 0x57, 0x61, 0x74,
		0x65, 0x72, 0x20, 0x33, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x36, 0x57, 0x61, 0x74, 0x65, 0x72,
		0x20, 0x39, 0x4c, 0x53, 0x2d, 0x36, 0x30, 0x30, 0x31, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x32, 0x4c,
		0x61, 0x6e, 0x64, 0x20, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x56, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x58, 0x33, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x33, 0x49, 0x6f, 0x75, 0x74, 0x64, 0x6f, 0x6f, 0x72,
		0x20, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x20, 0x33, 0x4c, 0x61, 0x6e, 0x64, 0x76, 0x6f, 0x53, 0x36,
		0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x36, 0x58, 0x4d, 0x24, 0x31, 0x30, 0x30, 0x24, 0x32,
		0x4c, 0x61, 0x6e, 0x69, 0x78, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x50, 0x61, 0x64, 0x20, 0x24,
		0x31, 0x58, 0x31, 0x32, 0x30, 0x43, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x58, 0x31, 0x32, 0x30,
		0x43, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x39,
		0x35, 0x30, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x39, 0x35,
		0x30, 0x4c, 0x61, 0x72, 0x6b, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x20,
		0x48, 0x44, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x32, 0x20, 0x24, 0x31, 0x20, 0x56,
		0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x32, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20,
		0x58, 0x34, 0x20, 0x37, 0x20, 0x33, 0x47, 0x20, 0x48, 0x44, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65,
		0x20, 0x58, 0x34, 0x20, 0x37, 0x48, 0x44, 0x20, 0x33, 0x47, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65,
		0x20, 0x58, 0x32, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20,
		0x37, 0x48, 0x44, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20, 0x39, 0x46, 0x72,
		0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20, 0x37, 0x46, 0x72, 0x65, 0x65, 0x42, 0x69, 0x72,
		0x64, 0x20, 0x35, 0x57, 0x69, 0x46, 0x69, 0x46, 0x72, 0x65, 0x65, 0x42, 0x69, 0x72, 0x64, 0x20,
		0x35, 0x20, 0x57, 0x69, 0x46, 0x69, 0x45, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20,
		0x24, 0x31, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x50, 0x48, 0x41,
		0x42, 0x4c, 0x45, 0x54, 0x20, 0x37, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x37, 0x50,
		0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x36, 0x2e, 0x30, 0x42, 0x6a, 0x6f, 0x72, 0x6e, 0x20,
		0x53, 0x50, 0x2d, 0x35, 0x30, 0x30, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x24, 0x31, 0x4c,
		0x61, 0x76, 0x61, 0x46, 0x6c, 0x61, 0x69, 0x72, 0x20, 0x24, 0x31, 0x42, 0x65, 0x6e, 0x63, 0x6f,
		0x20, 0x59, 0x34, 0x30, 0x41, 0x67, 0x6e, 0x69, 0x20, 0x35, 0x47, 0x5a, 0x36, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x39, 0x37, 0x20, 0x49, 0x50, 0x53, 0x52, 0x35, 0x73, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x41, 0x39, 0x37, 0x20, 0x32, 0x47, 0x42, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x37, 0x36,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x69, 0x78, 0x65,
		0x6c, 0x20, 0x56, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x56,
		0x24, 0x31, 0x49, 0x72, 0x69, 0x73, 0x20, 0x58, 0x31, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65,
		0x58, 0x34, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x41, 0x5f,
		0x52, 0x31, 0x52, 0x31, 0x5a, 0x36, 0x31, 0x5a, 0x36, 0x5a, 0x32, 0x5a, 0x33, 0x5a, 0x36, 0x30,
		0x73, 0x56, 0x37, 0x5a, 0x35, 0x33, 0x5a, 0x35, 0x32, 0x5a, 0x36, 0x32, 0x5a, 0x39, 0x33, 0x49,
		0x72, 0x69, 0x73, 0x20, 0x35, 0x32, 0x49, 0x72, 0x69, 0x73, 0x20, 0x35, 0x34, 0x49, 0x72, 0x69,
		0x73, 0x20, 0x35, 0x39, 0x49, 0x72, 0x69, 0x73, 0x20, 0x34, 0x36, 0x5a, 0x34, 0x31, 0x56, 0x38,
		0x56, 0x2b, 0x36, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x32, 0x63, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20,
		0x32, 0x43, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x31, 0x33, 0x36, 0x44, 0x69, 0x73,
		0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x31, 0x33, 0x36, 0x4b, 0x4b, 0x54, 0x20, 0x51, 0x55, 0x41,
		0x44, 0x52, 0x41, 0x4b, 0x4b, 0x54, 0x20, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x4b, 0x4b, 0x54,
		0x34, 0x30, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x76, 0x6f,
		0x72, 0x79, 0x20, 0x24, 0x31, 0x49, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x50,
		0x61, 0x6e, 0x54, 0x43, 0x38, 0x30, 0x32, 0x41, 0x4c, 0x65, 0x20, 0x50, 0x61, 0x6e, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x54, 0x43, 0x39, 0x37, 0x30, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x50, 0x61,
		0x6e, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x45, 0x63, 0x6f, 0x4c, 0x65, 0x20, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x61, 0x78, 0x20, 0x58, 0x39, 0x30, 0x30, 0x2b, 0x4c, 0x65, 0x20, 0x31, 0x53, 0x58,
		0x39, 0x30, 0x30, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x65, 0x20, 0x58, 0x39, 0x30, 0x30,
		0x4c, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x4c, 0x65, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x58, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x24, 0x31, 0x4c,
		0x65, 0x20, 0x4d, 0x61, 0x78, 0x24, 0x31, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x4e, 0x2d, 0x34, 0x35, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x2d, 0x34,
		0x35, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x56, 0x79, 0x70, 0x65, 0x72, 0x20, 0x50, 0x52, 0x4f,
		0x56, 0x79, 0x70, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x50, 0x20, 0x44, 0x41, 0x49, 0x53,
		0x59, 0x44, 0x61, 0x69, 0x73, 0x79, 0x4c, 0x50, 0x5f, 0x56, 0x45, 0x59, 0x52, 0x4f, 0x4e, 0x56,
		0x65, 0x79, 0x72, 0x6f, 0x6e, 0x4c, 0x50, 0x5f, 0x50, 0x52, 0x41, 0x44, 0x4f, 0x50, 0x72, 0x61,
		0x64, 0x6f, 0x4c, 0x50, 0x5f, 0x42, 0x2d, 0x35, 0x30, 0x42, 0x35, 0x30, 0x4c, 0x65, 0x61, 0x67,
		0x6f, 0x6f, 0x4d, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x35, 0x20, 0x45, 0x44, 0x47, 0x45,
		0x4d, 0x35, 0x20, 0x45, 0x64, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4b, 0x49,
		0x49, 0x43, 0x41, 0x41, 0x20, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x4b, 0x49, 0x43, 0x43, 0x41, 0x41,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4b, 0x49, 0x49, 0x43, 0x41, 0x41, 0x20, 0x4d, 0x49, 0x58,
		0x4b, 0x49, 0x43, 0x43, 0x41, 0x41, 0x20, 0x4d, 0x69, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20,
		0x24, 0x31, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x30, 0x30, 0x30, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x24, 0x31, 0x56,
		0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x20, 0x31, 0x41, 0x6c, 0x66, 0x61, 0x20, 0x24, 0x31, 0x58,
		0x52, 0x6f, 0x76, 0x65, 0x72, 0x24, 0x31, 0x4c, 0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31,
		0x4c, 0x65, 0x64, 0x73, 0x74, 0x61, 0x72, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x35, 0x2e,
		0x30, 0x4e, 0x6f, 0x76, 0x75, 0x73, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x36,
		0x2e, 0x30, 0x22, 0x4c, 0x65, 0x66, 0x66, 0x4c, 0x65, 0x6b, 0x65, 0x50, 0x61, 0x64, 0x2d, 0x24,
		0x31, 0x4c, 0x65, 0x6d, 0x68, 0x6f, 0x6f, 0x76, 0x4c, 0x65, 0x6e, 0x63, 0x6f, 0x4c, 0x45, 0x4e,
		0x43, 0x4f, 0x20, 0x44, 0x69, 0x76, 0x65, 0x72, 0x73, 0x6f, 0x2d, 0x37, 0x30, 0x30, 0x70, 0x6f,
		0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x20, 0x70, 0x6c, 0x61,
		0x79, 0x65, 0x72, 0x44, 0x69, 0x76, 0x65, 0x72, 0x73, 0x6f, 0x20, 0x37, 0x30, 0x30, 0x4c, 0x65,
		0x6e, 0x6f, 0x76, 0x6f, 0x47, 0x37, 0x38, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20,
		0x41, 0x37, 0x2d, 0x34, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x2d,
		0x35, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30, 0x49,
		0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x31, 0x30, 0x2d, 0x37, 0x30, 0x41, 0x32, 0x31,
		0x30, 0x37, 0x41, 0x2d, 0x48, 0x41, 0x32, 0x31, 0x30, 0x37, 0x41, 0x32, 0x31, 0x30, 0x39, 0x41,
		0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x32, 0x31, 0x30, 0x39, 0x41, 0x54, 0x61,
		0x62, 0x20, 0x32, 0x20, 0x41, 0x31, 0x30, 0x2d, 0x33, 0x30, 0x54, 0x61, 0x62, 0x20, 0x4b, 0x31,
		0x30, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x59, 0x6f, 0x67, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x31, 0x31, 0x59, 0x54, 0x2d, 0x4b, 0x36, 0x30, 0x36, 0x46, 0x59, 0x6f,
		0x67, 0x61, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x42, 0x33, 0x2d, 0x37, 0x33,
		0x30, 0x58, 0x54, 0x41, 0x42, 0x33, 0x20, 0x37, 0x54, 0x41, 0x42, 0x33, 0x20, 0x37, 0x20, 0x45,
		0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x42, 0x2d, 0x37, 0x37, 0x30, 0x33, 0x58,
		0x54, 0x41, 0x42, 0x33, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x42, 0x33, 0x2d, 0x58,
		0x37, 0x30, 0x4c, 0x54, 0x41, 0x42, 0x33, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54,
		0x42, 0x2d, 0x38, 0x37, 0x30, 0x33, 0x58, 0x54, 0x41, 0x42, 0x33, 0x20, 0x38, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30, 0x4c, 0x43, 0x54,
		0x41, 0x42, 0x32, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30, 0x4c, 0x43, 0x54, 0x41, 0x42, 0x32, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x31, 0x30, 0x54, 0x41, 0x42,
		0x33, 0x20, 0x38, 0x54, 0x41, 0x42, 0x33, 0x20, 0x38, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x54, 0x41,
		0x42, 0x34, 0x20, 0x31, 0x30, 0x54, 0x42, 0x2d, 0x38, 0x35, 0x30, 0x34, 0x58, 0x54, 0x41, 0x42,
		0x34, 0x20, 0x38, 0x54, 0x42, 0x2d, 0x38, 0x37, 0x30, 0x34, 0x58, 0x54, 0x41, 0x42, 0x34, 0x20,
		0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x41, 0x42, 0x34, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x54, 0x41, 0x42, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x41, 0x42, 0x31,
		0x30, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x54,
		0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x30, 0x54, 0x61, 0x62,
		0x20, 0x50, 0x31, 0x31, 0x54, 0x61, 0x62, 0x20, 0x4b, 0x31, 0x31, 0x54, 0x61, 0x62, 0x20, 0x51,
		0x54, 0x20, 0x4b, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x45, 0x37, 0x54, 0x61, 0x62, 0x20, 0x45,
		0x38, 0x54, 0x42, 0x2d, 0x37, 0x33, 0x30, 0x34, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x45, 0x73,
		0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x61, 0x62, 0x20, 0x37, 0x50, 0x42, 0x2d, 0x36,
		0x35, 0x30, 0x35, 0x54, 0x61, 0x62, 0x20, 0x56, 0x37, 0x41, 0x31, 0x30, 0x31, 0x4c, 0x56, 0x54,
		0x61, 0x62, 0x20, 0x36, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x20,
		0x52, 0x65, 0x6c, 0x54, 0x42, 0x2d, 0x58, 0x36, 0x30, 0x35, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31,
		0x30, 0x20, 0x46, 0x48, 0x44, 0x4c, 0x65, 0x6e, 0x6f, 0x76, 0x6f, 0x20, 0x54, 0x42, 0x2d, 0x58,
		0x33, 0x30, 0x36, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x48, 0x44, 0x4c, 0x65, 0x6e,
		0x6f, 0x76, 0x6f, 0x20, 0x54, 0x42, 0x2d, 0x58, 0x35, 0x30, 0x35, 0x54, 0x61, 0x62, 0x20, 0x4d,
		0x37, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x37, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x59,
		0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x31, 0x30, 0x59, 0x6f, 0x67,
		0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x33, 0x2e, 0x33, 0x22, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x38, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x59, 0x54, 0x33, 0x2d,
		0x38, 0x35, 0x30, 0x4d, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x31,
		0x30, 0x59, 0x54, 0x2d, 0x58, 0x37, 0x30, 0x33, 0x4c, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x54, 0x42, 0x2d, 0x4a, 0x37, 0x31, 0x36, 0x46, 0x58, 0x69,
		0x61, 0x6f, 0x58, 0x69, 0x6e, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31,
		0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x36, 0x30, 0x30, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x64, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x24, 0x31, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x64, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x24, 0x31, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x37, 0x2d, 0x33, 0x30, 0x54,
		0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x37, 0x54, 0x42, 0x2d, 0x38, 0x35, 0x30, 0x34, 0x46, 0x54,
		0x41, 0x42, 0x20, 0x34, 0x20, 0x38, 0x54, 0x42, 0x2d, 0x38, 0x37, 0x30, 0x34, 0x46, 0x54, 0x61,
		0x62, 0x20, 0x34, 0x20, 0x38, 0x22, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x42, 0x2d, 0x58, 0x33,
		0x30, 0x34, 0x58, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x42,
		0x2d, 0x58, 0x33, 0x30, 0x34, 0x46, 0x45, 0x31, 0x30, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41,
		0x24, 0x31, 0x59, 0x42, 0x2d, 0x51, 0x35, 0x30, 0x31, 0x46, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x41,
		0x31, 0x32, 0x59, 0x54, 0x2d, 0x58, 0x37, 0x30, 0x35, 0x58, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x4d, 0x38, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x20,
		0x46, 0x48, 0x44, 0x41, 0x35, 0x73, 0x41, 0x38, 0x5a, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a,
		0x32, 0x31, 0x35, 0x31, 0x5a, 0x55, 0x4b, 0x20, 0x45, 0x64, 0x67, 0x65, 0x5a, 0x55, 0x4b, 0x20,
		0x5a, 0x32, 0x5a, 0x32, 0x31, 0x32, 0x31, 0x5a, 0x55, 0x4b, 0x20, 0x5a, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x5a, 0x55, 0x4b, 0x20, 0x24, 0x31, 0x4b, 0x33, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x24,
		0x31, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x34, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x35, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x4b, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x31, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4b, 0x35, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x41, 0x36, 0x30, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x62, 0x65, 0x20, 0x4b, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x62, 0x65, 0x20, 0x4b, 0x35, 0x56, 0x69, 0x62, 0x65,
		0x20, 0x5a, 0x32, 0x56, 0x69, 0x62, 0x65, 0x20, 0x43, 0x56, 0x69, 0x62, 0x65, 0x20, 0x58, 0x32,
		0x56, 0x69, 0x62, 0x65, 0x20, 0x58, 0x33, 0x56, 0x69, 0x62, 0x65, 0x20, 0x58, 0x33, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x56, 0x69, 0x62, 0x65, 0x20, 0x56, 0x37, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53,
		0x36, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x24, 0x31, 0x69,
		0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e,
		0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x36, 0x4b, 0x39, 0x50, 0x32, 0x4b, 0x35, 0x53, 0x4b,
		0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x36, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x69,
		0x62, 0x65, 0x20, 0x50, 0x31, 0x6d, 0x56, 0x69, 0x62, 0x65, 0x20, 0x50, 0x31, 0x20, 0x54, 0x75,
		0x72, 0x62, 0x6f, 0x56, 0x69, 0x62, 0x65, 0x20, 0x50, 0x31, 0x56, 0x69, 0x62, 0x65, 0x20, 0x42,
		0x41, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x68, 0x6f, 0x74, 0x56,
		0x69, 0x62, 0x65, 0x20, 0x53, 0x31, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x31, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x5a, 0x35, 0x73, 0x5a, 0x35, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x36, 0x20,
		0x50, 0x72, 0x6f, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x47, 0x54, 0x5a, 0x36, 0x20, 0x59,
		0x6f, 0x75, 0x74, 0x68, 0x53, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x47, 0x54, 0x50, 0x68, 0x61,
		0x62, 0x20, 0x32, 0x50, 0x68, 0x61, 0x62, 0x50, 0x68, 0x61, 0x62, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x49, 0x64, 0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x64, 0x74, 0x61, 0x62, 0x20, 0x43,
		0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x20, 0x34, 0x32, 0x41, 0x4c, 0x65, 0x6e, 0x6f, 0x76, 0x6f,
		0x20, 0x4b, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x56,
		0x52, 0x2d, 0x31, 0x35, 0x34, 0x31, 0x46, 0x4d, 0x69, 0x72, 0x61, 0x67, 0x65, 0x20, 0x53, 0x6f,
		0x6c, 0x6f, 0x49, 0x64, 0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x53, 0x31, 0x34, 0x35, 0x2d, 0x31,
		0x35, 0x49, 0x49, 0x4c, 0x49, 0x64, 0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x53, 0x31, 0x34, 0x35,
		0x2d, 0x31, 0x35, 0x49, 0x57, 0x4c, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x31, 0x34, 0x41, 0x50, 0x49,
		0x20, 0x38, 0x31, 0x53, 0x53, 0x4c, 0x65, 0x6f, 0x74, 0x65, 0x63, 0x4c, 0x45, 0x53, 0x50, 0x48,
		0x35, 0x30, 0x31, 0x31, 0x41, 0x72, 0x67, 0x6f, 0x6e, 0x20, 0x65, 0x32, 0x35, 0x30, 0x4c, 0x45,
		0x53, 0x50, 0x48, 0x35, 0x30, 0x30, 0x33, 0x42, 0x41, 0x72, 0x67, 0x6f, 0x6e, 0x20, 0x41, 0x32,
		0x35, 0x30, 0x42, 0x4c, 0x45, 0x53, 0x50, 0x48, 0x35, 0x30, 0x31, 0x34, 0x4b, 0x72, 0x79, 0x70,
		0x74, 0x6f, 0x6e, 0x20, 0x4b, 0x31, 0x35, 0x30, 0x53, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x6f, 0x76,
		0x61, 0x20, 0x24, 0x31, 0x50, 0x75, 0x6c, 0x73, 0x61, 0x72, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x70,
		0x68, 0x6f, 0x6e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x57, 0x37, 0x5f, 0x70,
		0x6c, 0x75, 0x73, 0x57, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x65, 0x73, 0x69, 0x61, 0x41,
		0x6e, 0x6f, 0x76, 0x61, 0x20, 0x41, 0x35, 0x4c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x53, 0x34, 0x41,
		0x31, 0x56, 0x65, 0x67, 0x61, 0x53, 0x34, 0x41, 0x32, 0x49, 0x72, 0x69, 0x64, 0x61, 0x53, 0x34,
		0x41, 0x33, 0x50, 0x61, 0x6c, 0x6c, 0x61, 0x64, 0x61, 0x53, 0x34, 0x41, 0x35, 0x4f, 0x78, 0x79,
		0x67, 0x65, 0x6e, 0x53, 0x34, 0x41, 0x34, 0x20, 0x4e, 0x45, 0x4f, 0x4e, 0x53, 0x34, 0x41, 0x34,
		0x20, 0x4e, 0x65, 0x6f, 0x6e, 0x53, 0x35, 0x41, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x73, 0x74,
		0x6f, 0x53, 0x35, 0x41, 0x32, 0x4f, 0x76, 0x65, 0x72, 0x6f, 0x6e, 0x53, 0x35, 0x41, 0x33, 0x43,
		0x61, 0x70, 0x65, 0x6c, 0x6c, 0x61, 0x53, 0x35, 0x41, 0x34, 0x41, 0x72, 0x67, 0x6f, 0x6e, 0x53,
		0x36, 0x41, 0x31, 0x41, 0x6e, 0x74, 0x61, 0x72, 0x65, 0x73, 0x53, 0x43, 0x37, 0x20, 0x50, 0x52,
		0x4f, 0x20, 0x48, 0x44, 0x4c, 0x50, 0x48, 0x37, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79, 0x4c,
		0x50, 0x48, 0x37, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x78, 0x69, 0x62, 0x6f,
		0x6f, 0x6b, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x31, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x58, 0x4c, 0x4d, 0x46, 0x43, 0x30, 0x34,
		0x35, 0x46, 0x52, 0x54, 0x61, 0x62, 0x54, 0x61, 0x62, 0x4d, 0x46, 0x43, 0x31, 0x36, 0x33, 0x46,
		0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20, 0x33,
		0x4d, 0x46, 0x43, 0x31, 0x34, 0x32, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4b,
		0x69, 0x64, 0x73, 0x4d, 0x46, 0x43, 0x32, 0x35, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x4d, 0x46, 0x43, 0x32, 0x37, 0x30, 0x46, 0x52,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4d, 0x46, 0x43, 0x32, 0x38, 0x30, 0x46,
		0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x32,
		0x4d, 0x46, 0x43, 0x31, 0x35, 0x36, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4f,
		0x6e, 0x65, 0x4d, 0x46, 0x43, 0x31, 0x35, 0x35, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x46, 0x43, 0x31, 0x35, 0x37, 0x46, 0x52, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20, 0x32, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x46, 0x43, 0x33, 0x37, 0x35,
		0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x32,
		0x4d, 0x46, 0x43, 0x31, 0x36, 0x32, 0x46, 0x52, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x4d, 0x46, 0x43, 0x31, 0x38, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x4d, 0x46, 0x43, 0x31, 0x38,
		0x31, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63,
		0x65, 0x64, 0x20, 0x32, 0x4d, 0x46, 0x43, 0x35, 0x30, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x58, 0x4c, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x30, 0x42, 0x42, 0x46, 0x52, 0x42,
		0x61, 0x72, 0x62, 0x69, 0x65, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x46, 0x43, 0x31,
		0x39, 0x35, 0x44, 0x43, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x44, 0x69, 0x73,
		0x6e, 0x65, 0x79, 0x20, 0x43, 0x61, 0x72, 0x73, 0x20, 0x48, 0x44, 0x4d, 0x46, 0x43, 0x31, 0x39,
		0x35, 0x46, 0x55, 0x46, 0x52, 0x46, 0x75, 0x72, 0x62, 0x79, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x35, 0x44, 0x50, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x65, 0x73,
		0x73, 0x65, 0x20, 0x48, 0x44, 0x4d, 0x46, 0x43, 0x31, 0x34, 0x30, 0x46, 0x52, 0x4c, 0x61, 0x70,
		0x54, 0x61, 0x62, 0x4d, 0x46, 0x43, 0x31, 0x34, 0x31, 0x46, 0x52, 0x4c, 0x61, 0x70, 0x54, 0x61,
		0x62, 0x20, 0x32, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x74, 0x6f, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x6d,
		0x61, 0x78, 0x78, 0x4c, 0x69, 0x6e, 0x67, 0x77, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6e, 0x65, 0x78,
		0x4c, 0x69, 0x20, 0x24, 0x31, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x58, 0x36, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x4c, 0x6f, 0x67, 0x69, 0x63,
		0x20, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
		0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x31, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x6f, 0x6d, 0x4c, 0x61,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x4f, 0x4d, 0x5f, 0x4c,
		0x41, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x37, 0x31, 0x4c, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x4c, 0x69, 0x6e, 0x6b, 0x20, 0x37, 0x31, 0x4c, 0x2d, 0x69, 0x78, 0x69,
		0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x30, 0x31, 0x20, 0x33, 0x47, 0x4c, 0x49, 0x58, 0x49,
		0x52, 0x31, 0x30, 0x34, 0x31, 0x4c, 0x2d, 0x69, 0x78, 0x69, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x31, 0x30, 0x34, 0x31, 0x4c, 0x2d, 0x69, 0x78, 0x69, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x4c, 0x2d, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x2d, 0x69, 0x74, 0x65, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x2d, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x24, 0x31, 0x4c,
		0x2d, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x50, 0x4f, 0x57,
		0x45, 0x52, 0x20, 0x42, 0x4f, 0x54, 0x24, 0x31, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x24, 0x32, 0x4c,
		0x65, 0x20, 0x4c, 0x69, 0x66, 0x74, 0x4c, 0x65, 0x20, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
		0x4c, 0x65, 0x20, 0x48, 0x6f, 0x6c, 0x61, 0x20, 0x46, 0x52, 0x4c, 0x65, 0x20, 0x48, 0x6f, 0x6c,
		0x61, 0x4c, 0x65, 0x20, 0x4d, 0x6f, 0x6f, 0x76, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x4d, 0x6f, 0x6f,
		0x76, 0x4c, 0x65, 0x20, 0x46, 0x69, 0x74, 0x20, 0x46, 0x52, 0x4c, 0x65, 0x20, 0x46, 0x69, 0x74,
		0x4c, 0x65, 0x20, 0x46, 0x69, 0x7a, 0x7a, 0x4c, 0x65, 0x20, 0x48, 0x6f, 0x70, 0x4c, 0x65, 0x20,
		0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x4c, 0x65, 0x20, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x46,
		0x52, 0x4c, 0x65, 0x20, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x4c, 0x65, 0x20, 0x4d, 0x75, 0x73,
		0x74, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x4d, 0x75, 0x73, 0x74, 0x4c, 0x65, 0x20, 0x53, 0x74, 0x61,
		0x72, 0x74, 0x65, 0x72, 0x20, 0x4c, 0x4c, 0x65, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x4c, 0x65,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4c, 0x2d, 0x45, 0x47, 0x41, 0x4e, 0x54, 0x4f, 0x4e, 0x45,
		0x2d, 0x52, 0x4c, 0x2d, 0x45, 0x67, 0x61, 0x6e, 0x74, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x4c,
		0x2d, 0x45, 0x47, 0x41, 0x4e, 0x54, 0x4f, 0x4e, 0x45, 0x4c, 0x2d, 0x45, 0x67, 0x61, 0x6e, 0x74,
		0x20, 0x4f, 0x6e, 0x65, 0x4c, 0x65, 0x20, 0x55, 0x70, 0x4c, 0x75, 0x6d, 0x69, 0x67, 0x6f, 0x6e,
		0x4c, 0x75, 0x6d, 0x75, 0x73, 0x49, 0x4e, 0x4e, 0x4f, 0x20, 0x24, 0x31, 0x49, 0x6f, 0x6e, 0x41,
		0x45, 0x4f, 0x4e, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6e, 0x61, 0x4c, 0x75, 0x78, 0x6f, 0x72, 0x4d,
		0x2d, 0x48, 0x6f, 0x72, 0x73, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x31, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x31, 0x4d, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x45, 0x52, 0x4f, 0x53, 0x20, 0x34, 0x47,
		0x45, 0x72, 0x6f, 0x73, 0x20, 0x34, 0x47, 0x41, 0x43, 0x45, 0x39, 0x41, 0x63, 0x65, 0x20, 0x39,
		0x4a, 0x41, 0x5a, 0x42, 0x41, 0x41, 0x54, 0x45, 0x5a, 0x20, 0x34, 0x47, 0x54, 0x75, 0x72, 0x62,
		0x6f, 0x20, 0x4c, 0x24, 0x31, 0x4d, 0x2e, 0x54, 0x2e, 0x54, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x24, 0x31, 0x4d, 0x34, 0x74, 0x65, 0x6c, 0x53, 0x53, 0x31, 0x30, 0x35, 0x30, 0x53, 0x53,
		0x31, 0x30, 0x36, 0x30, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x53, 0x31, 0x30, 0x37, 0x30, 0x53, 0x65,
		0x6e, 0x73, 0x65, 0x53, 0x53, 0x31, 0x30, 0x38, 0x30, 0x4d, 0x61, 0x78, 0x20, 0x4f, 0x6e, 0x65,
		0x53, 0x53, 0x31, 0x30, 0x39, 0x30, 0x4d, 0x61, 0x78, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53,
		0x53, 0x34, 0x30, 0x32, 0x30, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x53, 0x34, 0x30, 0x34, 0x30, 0x49,
		0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x53, 0x34, 0x30, 0x34, 0x35, 0x53, 0x53, 0x34,
		0x33, 0x34, 0x35, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x53, 0x34, 0x33,
		0x35, 0x30, 0x53, 0x6f, 0x75, 0x6c, 0x53, 0x53, 0x34, 0x34, 0x34, 0x35, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x53, 0x34, 0x34, 0x35, 0x30, 0x53, 0x68,
		0x61, 0x72, 0x65, 0x53, 0x53, 0x34, 0x34, 0x35, 0x31, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x76, 0x65,
		0x53, 0x53, 0x34, 0x34, 0x35, 0x32, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x53, 0x34, 0x34, 0x35,
		0x33, 0x2d, 0x52, 0x52, 0x31, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x52, 0x32, 0x5f, 0x50, 0x6c, 0x75,
		0x73, 0x52, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x53, 0x34, 0x34, 0x35, 0x33, 0x49, 0x6e,
		0x73, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x53, 0x34, 0x34, 0x35, 0x35, 0x53,
		0x53, 0x34, 0x34, 0x35, 0x36, 0x45, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x53,
		0x34, 0x34, 0x35, 0x37, 0x2d, 0x52, 0x45, 0x76, 0x65, 0x72, 0x53, 0x53, 0x34, 0x34, 0x35, 0x37,
		0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x53, 0x34, 0x34, 0x35, 0x38, 0x2d, 0x52,
		0x46, 0x65, 0x65, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x53, 0x34, 0x34, 0x35, 0x38, 0x41,
		0x74, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x24, 0x31, 0x52, 0x24, 0x31, 0x4d, 0x41, 0x58,
		0x56, 0x49, 0x4d, 0x53, 0x35, 0x33, 0x31, 0x4d, 0x53, 0x35, 0x33, 0x31, 0x20, 0x56, 0x65, 0x67,
		0x61, 0x4d, 0x53, 0x35, 0x30, 0x32, 0x20, 0x4f, 0x72, 0x69, 0x6f, 0x6e, 0x4d, 0x41, 0x58, 0x58,
		0x4d, 0x42, 0x4f, 0x58, 0x4d, 0x44, 0x43, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x53, 0x24, 0x31, 0x20, 0x34, 0x47, 0x4d, 0x44, 0x54, 0x56, 0x4d, 0x45, 0x45,
		0x47, 0x4d, 0x45, 0x55, 0x4d, 0x49, 0x56, 0x4f, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x49, 0x58, 0x43, 0x4d, 0x4c, 0x4c, 0x45, 0x44, 0x4d,
		0x4c, 0x53, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x54, 0x77, 0x69, 0x73, 0x74, 0x4e, 0x6f,
		0x74, 0x63, 0x68, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30,
		0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x42, 0x72, 0x61, 0x76, 0x65, 0x20, 0x33, 0x47, 0x69, 0x51,
		0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x66,
		0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x41, 0x6c, 0x75, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x49, 0x64,
		0x65, 0x61, 0x6c, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x43, 0x61,
		0x72, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x42, 0x72, 0x61, 0x69, 0x6e, 0x20, 0x33, 0x47, 0x69,
		0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x56, 0x65, 0x72, 0x73, 0x65, 0x20, 0x34, 0x47, 0x43, 0x6f,
		0x6c, 0x6f, 0x72, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x47, 0x54, 0x4f, 0x50, 0x2d, 0x53,
		0x20, 0x34, 0x47, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61, 0x6c,
		0x6b, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x46, 0x6c, 0x61,
		0x6d, 0x65, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x53, 0x70, 0x69, 0x63, 0x79, 0x69, 0x51,
		0x54, 0x61, 0x6c, 0x6b, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x34, 0x47, 0x43, 0x6f, 0x6c,
		0x6f, 0x72, 0x20, 0x33, 0x20, 0x34, 0x47, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x34, 0x47, 0x69,
		0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x35, 0x2e, 0x35, 0x20,
		0x34, 0x47, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x52, 0x6f, 0x73, 0x65, 0x69, 0x51, 0x54, 0x61,
		0x62, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x4e, 0x6f,
		0x76, 0x65, 0x6c, 0x20, 0x33, 0x47, 0x4a, 0x65, 0x74, 0x20, 0x33, 0x47, 0x44, 0x69, 0x61, 0x6d,
		0x6f, 0x6e, 0x64, 0x20, 0x35, 0x2e, 0x32, 0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b,
		0x20, 0x41, 0x75, 0x72, 0x61, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x20, 0x34, 0x47, 0x41, 0x6e, 0x67,
		0x65, 0x6c, 0x20, 0x33, 0x47, 0x41, 0x6e, 0x67, 0x65, 0x6c, 0x20, 0x33, 0x47, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x34, 0x47, 0x46, 0x35, 0x45, 0x6e,
		0x65, 0x72, 0x67, 0x79, 0x20, 0x34, 0x47, 0x4d, 0x58, 0x20, 0x34, 0x47, 0x4d, 0x58, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x46, 0x61, 0x62, 0x20, 0x34, 0x47, 0x53, 0x74, 0x61, 0x74, 0x75,
		0x73, 0x20, 0x34, 0x47, 0x4d, 0x6f, 0x72, 0x65, 0x20, 0x34, 0x47, 0x57, 0x61, 0x76, 0x65, 0x20,
		0x34, 0x47, 0x42, 0x72, 0x61, 0x63, 0x65, 0x20, 0x32, 0x30, 0x31, 0x38, 0x20, 0x34, 0x47, 0x4c,
		0x65, 0x76, 0x65, 0x6c, 0x20, 0x34, 0x47, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x20, 0x34,
		0x47, 0x52, 0x75, 0x62, 0x79, 0x20, 0x34, 0x47, 0x44, 0x58, 0x20, 0x34, 0x47, 0x56, 0x69, 0x73,
		0x74, 0x61, 0x20, 0x34, 0x47, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x53, 0x20, 0x34, 0x47, 0x52,
		0x33, 0x20, 0x34, 0x47, 0x50, 0x68, 0x61, 0x62, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x44, 0x36, 0x20,
		0x34, 0x47, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x61, 0x6c, 0x41, 0x6c, 0x75, 0x20, 0x35, 0x2e, 0x35,
		0x22, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x47, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x34, 0x47, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x46, 0x69, 0x6e, 0x67,
		0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34, 0x47, 0x4d, 0x4d, 0x49, 0x4d, 0x53, 0x49,
		0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x54, 0x43, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x52, 0x61, 0x63, 0x65, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x61,
		0x63, 0x65, 0x20, 0x32, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x70, 0x72,
		0x69, 0x6e, 0x74, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x74, 0x61, 0x72,
		0x74, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x4c, 0x69,
		0x67, 0x68, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x42, 0x69, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x75, 0x6e,
		0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x75, 0x72, 0x66, 0x20, 0x32, 0x20,
		0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x75, 0x72, 0x66, 0x20, 0x34, 0x47, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x34, 0x47, 0x52, 0x65, 0x64,
		0x62, 0x6f, 0x78, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x35, 0x4d, 0x54, 0x53, 0x20, 0x54, 0x56,
		0x20, 0x42, 0x6f, 0x78, 0x20, 0x33, 0x31, 0x37, 0x53, 0x42, 0x2d, 0x33, 0x31, 0x37, 0x44, 0x56,
		0x38, 0x33, 0x30, 0x34, 0x2d, 0x43, 0x53, 0x75, 0x70, 0x65, 0x72, 0x57, 0x61, 0x76, 0x65, 0x20,
		0x44, 0x56, 0x38, 0x33, 0x30, 0x34, 0x2d, 0x43, 0x4d, 0x54, 0x4e, 0x4d, 0x54, 0x4e, 0x2d, 0x53,
		0x6d, 0x40, 0x72, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x24, 0x31, 0x4d, 0x54, 0x4e, 0x2d,
		0x38, 0x39, 0x37, 0x38, 0x50, 0x53, 0x74, 0x65, 0x70, 0x70, 0x61, 0x4d, 0x54, 0x4e, 0x2d, 0x24,
		0x31, 0x4d, 0x59, 0x46, 0x4f, 0x4e, 0x4d, 0x59, 0x50, 0x41, 0x44, 0x37, 0x73, 0x4d, 0x79, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x37, 0x73, 0x4d, 0x61, 0x63, 0x6f, 0x6f, 0x78, 0x4d, 0x43, 0x2d, 0x58,
		0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x61, 0x66, 0x65, 0x4d, 0x61, 0x66, 0x65, 0x5f, 0x4d,
		0x38, 0x32, 0x30, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x4d, 0x38, 0x32, 0x30, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x73, 0x65, 0x65, 0x4e, 0x35, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x4d, 0x61, 0x67, 0x6e,
		0x75, 0x73, 0x42, 0x72, 0x61, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x79, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x69, 0x63, 0x55, 0x72, 0x61,
		0x6e, 0x6f, 0x20, 0x37, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x6c, 0x75, 0x74, 0x6f, 0x20, 0x24,
		0x31, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x54, 0x41, 0x42, 0x20, 0x37, 0x31,
		0x31, 0x20, 0x34, 0x47, 0x54, 0x61, 0x62, 0x20, 0x37, 0x31, 0x31, 0x20, 0x34, 0x47, 0x54, 0x41,
		0x42, 0x2d, 0x37, 0x31, 0x34, 0x54, 0x61, 0x62, 0x20, 0x37, 0x31, 0x34, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x54, 0x61, 0x62, 0x24, 0x31, 0x43, 0x72, 0x6f, 0x6e, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x61,
		0x6c, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x6e, 0x4d, 0x61, 0x6e, 0x74, 0x61, 0x20, 0x4d, 0x75,
		0x6c, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x31, 0x32,
		0x54, 0x69, 0x74, 0x61, 0x6e, 0x6f, 0x20, 0x31, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x31, 0x34,
		0x54, 0x69, 0x74, 0x61, 0x6e, 0x6f, 0x20, 0x33, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x31, 0x35,
		0x4d, 0x65, 0x7a, 0x6f, 0x20, 0x32, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x32, 0x30, 0x52, 0x6f,
		0x63, 0x6b, 0x79, 0x20, 0x32, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x32, 0x31, 0x52, 0x6f, 0x63,
		0x6b, 0x79, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x53, 0x50, 0x39, 0x36, 0x30, 0x31, 0x37,
		0x46, 0x6f, 0x72, 0x74, 0x6f, 0x20, 0x32, 0x4d, 0x53, 0x50, 0x39, 0x36, 0x30, 0x30, 0x32, 0x46,
		0x6f, 0x72, 0x74, 0x6f, 0x20, 0x31, 0x4d, 0x53, 0x50, 0x39, 0x34, 0x35, 0x30, 0x31, 0x45, 0x61,
		0x73, 0x79, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x4d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x4d,
		0x61, 0x72, 0x61, 0x4d, 0x61, 0x73, 0x73, 0x67, 0x6f, 0x56, 0x69, 0x32, 0x20, 0x53, 0x4d, 0x61,
		0x73, 0x73, 0x74, 0x65, 0x6c, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x61,
		0x62, 0x20, 0x31, 0x30, 0x20, 0x34, 0x47, 0x54, 0x61, 0x62, 0x31, 0x30, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x73,
		0x74, 0x65, 0x72, 0x74, 0x65, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x4d, 0x41, 0x54,
		0x52, 0x49, 0x58, 0x20, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x47, 0x72, 0x61, 0x76, 0x69,
		0x74, 0x79, 0x37, 0x31, 0x31, 0x36, 0x20, 0x41, 0x35, 0x4d, 0x61, 0x78, 0x63, 0x6f, 0x6d, 0x4d,
		0x53, 0x24, 0x31, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x47, 0x31, 0x30, 0x20, 0x4d, 0x61,
		0x78, 0x4d, 0x61, 0x78, 0x74, 0x72, 0x6f, 0x6e, 0x4d, 0x61, 0x78, 0x77, 0x65, 0x73, 0x74, 0x41,
		0x73, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4e, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72,
		0x6f, 0x20, 0x58, 0x35, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x5f, 0x35,
		0x5f, 0x47, 0x4f, 0x5f, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x47,
		0x6f, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x52, 0x4f,
		0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x73, 0x74, 0x72, 0x6f,
		0x20, 0x24, 0x31, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x22, 0x56, 0x69, 0x72, 0x74,
		0x75, 0x65, 0x20, 0x5a, 0x35, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x58, 0x34, 0x4e, 0x69, 0x74,
		0x72, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x47, 0x4f, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x34, 0x73,
		0x20, 0x4c, 0x54, 0x45, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x34, 0x73, 0x4e, 0x69, 0x74, 0x72,
		0x6f, 0x20, 0x24, 0x31, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x20, 0x47,
		0x4f, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x36, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x36, 0x4e, 0x69,
		0x74, 0x72, 0x6f, 0x5f, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x39, 0x73, 0x4e, 0x69,
		0x74, 0x72, 0x6f, 0x20, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x39, 0x73, 0x41, 0x73,
		0x74, 0x72, 0x6f, 0x5f, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x39, 0x41, 0x73, 0x74,
		0x72, 0x6f, 0x20, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x39, 0x4d, 0x61, 0x7a, 0x65,
		0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x58, 0x4d, 0x61, 0x7a, 0x65, 0x20, 0x53, 0x70, 0x65, 0x65,
		0x64, 0x53, 0x53, 0x42, 0x2d, 0x24, 0x31, 0x4d, 0x65, 0x63, 0x65, 0x72, 0x58, 0x70, 0x72, 0x65,
		0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x37, 0x38,
		0x35, 0x58, 0x31, 0x30, 0x31, 0x30, 0x4d, 0x31, 0x37, 0x51, 0x46, 0x36, 0x20, 0x24, 0x31, 0x47,
		0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65,
		0x20, 0x38, 0x30, 0x30, 0x50, 0x33, 0x31, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x38, 0x30, 0x30, 0x50, 0x33, 0x32, 0x43,
		0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65,
		0x20, 0x31, 0x30, 0x31, 0x50, 0x35, 0x31, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x37, 0x24, 0x31, 0x51, 0x46, 0x36,
		0x4d, 0x65, 0x63, 0x6f, 0x6f, 0x6c, 0x4b, 0x4d, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x4d, 0x39,
		0x20, 0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x42, 0x42, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x49,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x57, 0x4d, 0x38,
		0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x56, 0x42, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x24, 0x31, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4d,
		0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x38, 0x53, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x38, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x63, 0x6f,
		0x6d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x35, 0x30, 0x20, 0x33, 0x47,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x37, 0x30, 0x20, 0x53, 0x32, 0x20,
		0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x37, 0x30, 0x20, 0x53,
		0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x2e,
		0x37, 0x22, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61,
		0x64, 0x20, 0x4d, 0x58, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x4d, 0x58, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x48, 0x58, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x48, 0x58, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x47, 0x6f, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x20, 0x53, 0x32, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x37, 0x35, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47,
		0x4d, 0x2d, 0x53, 0x50, 0x31, 0x41, 0x47, 0x4f, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x47, 0x6f, 0x20, 0x33, 0x47, 0x4d, 0x2d, 0x53, 0x50, 0x37,
		0x78, 0x47, 0x4f, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x69, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x31, 0x41, 0x45, 0x43, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70,
		0x73, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x34, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x34, 0x20, 0x48,
		0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x48, 0x44, 0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x58, 0x20, 0x48, 0x44,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4d,
		0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x4d, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x48, 0x44, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x48, 0x44, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x48, 0x44, 0x20, 0x69, 0x50, 0x72, 0x6f,
		0x24, 0x31, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30,
		0x2e, 0x30, 0x22, 0x20, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x32,
		0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x44, 0x75, 0x6f, 0x20, 0x42, 0x34, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64,
		0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x35, 0x35, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61,
		0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x42, 0x35, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x35, 0x33, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x37, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x33, 0x31, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x35, 0x30, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x36, 0x35, 0x30, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x35, 0x31,
		0x55, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x34,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x35, 0x30,
		0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35,
		0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x58,
		0x24, 0x31, 0x55, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20,
		0x47, 0x24, 0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20,
		0x53, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x65,
		0x64, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x69,
		0x66, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x65, 0x67, 0x61, 0x46, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69,
		0x6e, 0x2b, 0x4d, 0x46, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x34, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x20,
		0x34, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x20, 0x33, 0x4f, 0x70, 0x74, 0x69,
		0x6d, 0x61, 0x53, 0x50, 0x2d, 0x41, 0x32, 0x30, 0x69, 0x4d, 0x69, 0x6e, 0x74, 0x56, 0x39, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4d, 0x65, 0x69, 0x74, 0x75, 0x54, 0x38, 0x54, 0x38, 0x73, 0x54, 0x39,
		0x4d, 0x38, 0x73, 0x32, 0x4d, 0x65, 0x69, 0x7a, 0x75, 0x4d, 0x32, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x4d, 0x24, 0x31, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x31, 0x45, 0x4d, 0x32, 0x45, 0x4d, 0x32,
		0x4d, 0x33, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x35, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x36,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x33, 0x73, 0x4d, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x58,
		0x32, 0x4d, 0x58, 0x33, 0x4d, 0x58, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x58, 0x34, 0x4d, 0x58,
		0x35, 0x6d, 0x31, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x4d, 0x31, 0x20, 0x4d, 0x65, 0x74, 0x61,
		0x6c, 0x4d, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x38, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x50,
		0x52, 0x4f, 0x20, 0x37, 0x50, 0x52, 0x4f, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x52, 0x4f, 0x20, 0x24, 0x31, 0x4d, 0x58, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x31, 0x36, 0x54, 0x31, 0x36, 0x74, 0x68, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x31, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x31, 0x36, 0x74, 0x68, 0x31,
		0x36, 0x58, 0x31, 0x36, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x33, 0x4d, 0x65, 0x6c, 0x72, 0x6f,
		0x73, 0x65, 0x53, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x30, 0x31, 0x39, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x20, 0x33, 0x2e, 0x34, 0x22, 0x4d, 0x65, 0x6d,
		0x75, 0x70, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x53, 0x6c, 0x69,
		0x64, 0x65, 0x50, 0x61, 0x64, 0x20, 0x4e, 0x47, 0x24, 0x31, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x4e, 0x47, 0x24, 0x31, 0x20, 0x33, 0x47, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x37, 0x30, 0x34, 0x24, 0x31, 0x4d, 0x69, 0x58, 0x7a, 0x6f, 0x4d, 0x45, 0x24,
		0x31, 0x20, 0x24, 0x32, 0x47, 0x4d, 0x58, 0x31, 0x30, 0x32, 0x31, 0x20, 0x33, 0x47, 0x4d, 0x58,
		0x24, 0x31, 0x20, 0x34, 0x47, 0x4d, 0x45, 0x31, 0x30, 0x32, 0x35, 0x20, 0x33, 0x47, 0x4d, 0x69,
		0x63, 0x72, 0x6f, 0x4d, 0x61, 0x78, 0x41, 0x51, 0x35, 0x30, 0x30, 0x31, 0x20, 0x43, 0x61, 0x6e,
		0x76, 0x61, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x51, 0x35, 0x30, 0x30, 0x31, 0x43, 0x61, 0x6e, 0x76, 0x61,
		0x73, 0x20, 0x4a, 0x75, 0x69, 0x63, 0x65, 0x20, 0x32, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20,
		0x4a, 0x75, 0x69, 0x63, 0x65, 0x20, 0x34, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x50, 0x75,
		0x6c, 0x73, 0x65, 0x34, 0x35, 0x36, 0x30, 0x4d, 0x4d, 0x58, 0x49, 0x4e, 0x20, 0x32, 0x42, 0x43,
		0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x35, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x35, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x54, 0x61, 0x62, 0x42, 0x6f,
		0x6c, 0x74, 0x20, 0x51, 0x24, 0x31, 0x51, 0x34, 0x31, 0x37, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
		0x20, 0x4d, 0x65, 0x67, 0x61, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x50, 0x61, 0x63, 0x65, 0x59, 0x55,
		0x20, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x59, 0x55, 0x35, 0x30, 0x34, 0x30, 0x59, 0x55,
		0x20, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x53, 0x20, 0x59, 0x55, 0x35, 0x35, 0x33, 0x30,
		0x51, 0x34, 0x32, 0x34, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x42,
		0x68, 0x61, 0x72, 0x61, 0x74, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x34, 0x32, 0x36,
		0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x32, 0x4e, 0x38, 0x32,
		0x31, 0x36, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x4e, 0x31, 0x31, 0x4e, 0x38,
		0x33, 0x30, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x4e, 0x31, 0x32, 0x51,
		0x34, 0x34, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x33, 0x35, 0x33, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53,
		0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x32, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x76,
		0x61, 0x73, 0x20, 0x4d, 0x61, 0x67, 0x6e, 0x75, 0x73, 0x20, 0x48, 0x44, 0x43, 0x61, 0x6e, 0x76,
		0x61, 0x73, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x32, 0x43, 0x61, 0x6e, 0x76, 0x61,
		0x73, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x56, 0x64, 0x65, 0x6f, 0x20, 0x34, 0x43, 0x61,
		0x6e, 0x76, 0x61, 0x73, 0x20, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x43, 0x61, 0x6e,
		0x76, 0x61, 0x73, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74,
		0x20, 0x24, 0x31, 0x69, 0x4f, 0x6e, 0x65, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x4e, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x49, 0x4e, 0x20, 0x31, 0x62, 0x4b, 0x69, 0x6e, 0x20, 0x24, 0x31,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x34, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x34,
		0x33, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x33, 0x32, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x35, 0x33, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x35, 0x33, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x34, 0x30, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x35, 0x30, 0x52, 0x4d, 0x2d, 0x31, 0x30, 0x31, 0x30, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x38, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34,
		0x30, 0x20, 0x58, 0x4c, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34,
		0x30, 0x20, 0x58, 0x4c, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x4c, 0x54,
		0x45, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x36, 0x34, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36,
		0x34, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x35, 0x30, 0x52, 0x4d, 0x2d, 0x31, 0x31,
		0x35, 0x32, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x35, 0x30, 0x20, 0x53, 0x53, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x38, 0x35, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30,
		0x20, 0x58, 0x4c, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69,
		0x61, 0x20, 0x39, 0x35, 0x30, 0x20, 0x58, 0x4c, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35,
		0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x39, 0x35, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x31, 0x33, 0x32, 0x30, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x31, 0x35, 0x33, 0x30, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x33, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x50, 0x72, 0x6f,
		0x24, 0x31, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x32, 0x53,
		0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x24, 0x31, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x68, 0x45, 0x2d, 0x54, 0x61, 0x62,
		0x20, 0x4c, 0x54, 0x45, 0x4d, 0x69, 0x6e, 0x69, 0x78, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x38, 0x48,
		0x4e, 0x45, 0x4f, 0x20, 0x55, 0x32, 0x32, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x24, 0x31, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x38, 0x48, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e,
		0x45, 0x4f, 0x20, 0x58, 0x38, 0x38, 0x69, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x37, 0x4e, 0x45, 0x4f,
		0x20, 0x58, 0x35, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x24, 0x31, 0x4e, 0x45, 0x4f, 0x20, 0x55, 0x31,
		0x4e, 0x45, 0x4f, 0x20, 0x5a, 0x36, 0x34, 0x4e, 0x45, 0x4f, 0x20, 0x55, 0x39, 0x48, 0x4d, 0x69,
		0x6e, 0x74, 0x74, 0x43, 0x6f, 0x6f, 0x6c, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x20, 0x24, 0x31, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x73,
		0x68, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x6f, 0x4d, 0x6f, 0x62, 0x69,
		0x78, 0x20, 0x4d, 0x36, 0x4d, 0x69, 0x6f, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64,
		0x20, 0x37, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x4d, 0x69, 0x6f, 0x6e, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x72, 0x61,
		0x79, 0x4d, 0x49, 0x44, 0x4d, 0x20, 0x24, 0x31, 0x4d, 0x50, 0x4d, 0x20, 0x24, 0x31, 0x4d, 0x69,
		0x74, 0x6f, 0x33, 0x32, 0x35, 0x35, 0x41, 0x33, 0x37, 0x20, 0x5a, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4d, 0x69, 0x74, 0x73, 0x75, 0x62, 0x69, 0x73, 0x68, 0x69, 0x4d, 0x69, 0x74, 0x73, 0x75,
		0x69, 0x4d, 0x6f, 0x62, 0x69, 0x49, 0x6f, 0x54, 0x4d, 0x6f, 0x62, 0x69, 0x50, 0x72, 0x69, 0x6e,
		0x74, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x62, 0x69, 0x57, 0x69, 0x72, 0x65,
		0x4b, 0x41, 0x4e, 0x55, 0x4e, 0x41, 0x4b, 0x61, 0x6e, 0x75, 0x6e, 0x61, 0x4b, 0x57, 0x41, 0x4e,
		0x49, 0x54, 0x41, 0x4b, 0x77, 0x61, 0x6e, 0x69, 0x74, 0x61, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x45,
		0x31, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x45, 0x31, 0x31, 0x4d, 0x6f, 0x62, 0x69, 0x63,
		0x65, 0x6c, 0x4c, 0x45, 0x47, 0x45, 0x4e, 0x44, 0x20, 0x4d, 0x41, 0x58, 0x4c, 0x65, 0x67, 0x65,
		0x6e, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x4c, 0x49, 0x4e, 0x4b, 0x42, 0x6c, 0x69, 0x6e, 0x6b,
		0x42, 0x45, 0x52, 0x52, 0x59, 0x31, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x31, 0x42, 0x45, 0x52,
		0x52, 0x59, 0x20, 0x32, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x32, 0x54, 0x52, 0x45, 0x4e, 0x44,
		0x59, 0x20, 0x32, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x32, 0x42, 0x65, 0x72, 0x72, 0x79,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x45, 0x52, 0x52, 0x59, 0x42, 0x65, 0x72, 0x72, 0x79, 0x54,
		0x52, 0x45, 0x4e, 0x44, 0x59, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x52, 0x45, 0x4e, 0x44, 0x59, 0x5f, 0x4c, 0x49, 0x54, 0x45,
		0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x34, 0x20, 0x4c, 0x54,
		0x45, 0x48, 0x59, 0x50, 0x45, 0x5f, 0x58, 0x48, 0x79, 0x70, 0x65, 0x20, 0x58, 0x48, 0x59, 0x50,
		0x45, 0x48, 0x79, 0x70, 0x65, 0x44, 0x41, 0x4e, 0x44, 0x59, 0x5f, 0x5a, 0x41, 0x4d, 0x44, 0x61,
		0x6e, 0x64, 0x79, 0x20, 0x5a, 0x61, 0x6d, 0x44, 0x41, 0x4e, 0x44, 0x59, 0x44, 0x61, 0x6e, 0x64,
		0x79, 0x41, 0x53, 0x54, 0x52, 0x4f, 0x56, 0x45, 0x4e, 0x55, 0x53, 0x5f, 0x47, 0x56, 0x65, 0x6e,
		0x75, 0x73, 0x20, 0x47, 0x6f, 0x54, 0x41, 0x4e, 0x47, 0x4f, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x54,
		0x61, 0x6e, 0x67, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x45, 0x4e, 0x44, 0x59, 0x5f, 0x44,
		0x53, 0x46, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x44, 0x53, 0x52, 0x45, 0x42, 0x45, 0x4c, 0x52, 0x65,
		0x62, 0x65, 0x6c, 0x52, 0x37, 0x5f, 0x31, 0x52, 0x37, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x5f, 0x31,
		0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x31, 0x5a, 0x4f, 0x4f, 0x4d, 0x5f, 0x31, 0x5a, 0x6f, 0x6f,
		0x6d, 0x20, 0x31, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x44, 0x53, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x44,
		0x53, 0x46, 0x41, 0x4d, 0x45, 0x5f, 0x44, 0x53, 0x46, 0x61, 0x6d, 0x65, 0x20, 0x44, 0x53, 0x46,
		0x41, 0x4d, 0x45, 0x46, 0x61, 0x6d, 0x65, 0x42, 0x45, 0x41, 0x4d, 0x4e, 0x65, 0x6f, 0x20, 0x4c,
		0x54, 0x45, 0x4e, 0x45, 0x4f, 0x5f, 0x31, 0x4e, 0x65, 0x6f, 0x52, 0x69, 0x6f, 0x20, 0x24, 0x31,
		0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x47, 0x6f, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x31,
		0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x31, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x31, 0x52, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x6c, 0x69, 0x6b, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x43, 0x6c,
		0x69, 0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x4c, 0x49, 0x4b, 0x43, 0x6c, 0x69, 0x6b, 0x50,
		0x55, 0x4c, 0x53, 0x45, 0x5f, 0x31, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x31, 0x50, 0x55, 0x52,
		0x45, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x50, 0x75, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46,
		0x65, 0x6e, 0x64, 0x79, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x46, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x5a, 0x4f, 0x4f, 0x4d, 0x2d, 0x48, 0x5a, 0x6f, 0x6f, 0x6d, 0x20, 0x48, 0x46,
		0x65, 0x76, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x4d, 0x6f, 0x62, 0x69,
		0x69, 0x73, 0x74, 0x61, 0x72, 0x58, 0x31, 0x20, 0x24, 0x31, 0x45, 0x31, 0x20, 0x53, 0x65, 0x6c,
		0x66, 0x69, 0x65, 0x58, 0x51, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x4c,
		0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x53, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20,
		0x53, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x53, 0x32,
		0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x4a, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x37, 0x29, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x4a, 0x4d, 0x6f, 0x62,
		0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x5f, 0x4a, 0x32, 0x4c,
		0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x4a, 0x32, 0x6d, 0x6f, 0x62, 0x69, 0x69,
		0x73, 0x74, 0x61, 0x72, 0x20, 0x5a, 0x55, 0x4d, 0x42, 0x4f, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x61, 0x69, 0x20, 0x59,
		0x75, 0x6e, 0x61, 0x20, 0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20,
		0x4c, 0x41, 0x49, 0x20, 0x59, 0x75, 0x6b, 0x69, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x75, 0x6b, 0x69,
		0x4c, 0x61, 0x69, 0x20, 0x5a, 0x6f, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4c, 0x61, 0x69, 0x20, 0x5a,
		0x65, 0x6e, 0x61, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73,
		0x74, 0x61, 0x72, 0x5f, 0x5a, 0x4f, 0x52, 0x4f, 0x5f, 0x34, 0x47, 0x5a, 0x6f, 0x72, 0x6f, 0x20,
		0x34, 0x47, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x74, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x4c, 0x41, 0x49, 0x20, 0x35, 0x31, 0x32, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x4c,
		0x61, 0x69, 0x20, 0x35, 0x31, 0x32, 0x4c, 0x61, 0x69, 0x20, 0x35, 0x30, 0x34, 0x24, 0x31, 0x6d,
		0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x4c, 0x41, 0x49, 0x20, 0x59, 0x4c, 0x61,
		0x69, 0x20, 0x59, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x50, 0x52, 0x49,
		0x4d, 0x45, 0x20, 0x58, 0x20, 0x32, 0x30, 0x31, 0x37, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x58,
		0x50, 0x52, 0x49, 0x4d, 0x45, 0x20, 0x58, 0x20, 0x4d, 0x41, 0x58, 0x20, 0x32, 0x30, 0x31, 0x38,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x6f, 0x6f, 0x6c, 0x24,
		0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x4b, 0x41, 0x54, 0x20, 0x34,
		0x35, 0x32, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4b, 0x61, 0x74, 0x20, 0x34, 0x35, 0x32, 0x6d,
		0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x4c, 0x41, 0x49, 0x5f, 0x59, 0x4f, 0x4c,
		0x4c, 0x4f, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x6f, 0x6c, 0x6c,
		0x6f, 0x4d, 0x6f, 0x62, 0x69, 0x6f, 0x6c, 0x61, 0x4d, 0x53, 0x35, 0x30, 0x58, 0x36, 0x41, 0x74,
		0x6d, 0x6f, 0x73, 0x20, 0x49, 0x49, 0x50, 0x6f, 0x6c, 0x79, 0x73, 0x20, 0x4d, 0x53, 0x34, 0x35,
		0x4c, 0x31, 0x4d, 0x53, 0x35, 0x35, 0x58, 0x36, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x49, 0x49, 0x4d, 0x53, 0x35, 0x35, 0x58, 0x35, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x53, 0x35, 0x35, 0x4c, 0x31, 0x47, 0x41, 0x49, 0x41, 0x4d, 0x53, 0x35,
		0x30, 0x4c, 0x31, 0x49, 0x6e, 0x74, 0x69, 0x4d, 0x42, 0x2d, 0x32, 0x39, 0x30, 0x30, 0x20, 0x51,
		0x55, 0x41, 0x54, 0x54, 0x52, 0x4f, 0x4d, 0x42, 0x2d, 0x32, 0x39, 0x30, 0x30, 0x20, 0x51, 0x75,
		0x61, 0x74, 0x74, 0x72, 0x6f, 0x4d, 0x53, 0x34, 0x33, 0x41, 0x33, 0x30, 0x30, 0x30, 0x4d, 0x53,
		0x34, 0x35, 0x41, 0x34, 0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x34, 0x35, 0x4d, 0x53, 0x35,
		0x30, 0x41, 0x34, 0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30, 0x4d, 0x53, 0x35, 0x30,
		0x41, 0x34, 0x35, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30, 0x20, 0x45, 0x6c, 0x65, 0x67,
		0x61, 0x6e, 0x63, 0x65, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x35, 0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e,
		0x20, 0x35, 0x30, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x38, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x36,
		0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x31,
		0x36, 0x4d, 0x53, 0x35, 0x30, 0x42, 0x31, 0x31, 0x30, 0x30, 0x30, 0x57, 0x61, 0x76, 0x65, 0x35,
		0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x4d, 0x6f, 0x62, 0x69, 0x73, 0x74, 0x65, 0x6c, 0x4d, 0x6f,
		0x62, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x63, 0x6f, 0x6d, 0x58, 0x69, 0x6e, 0x6f, 0x20, 0x5a, 0x24,
		0x31, 0x20, 0x58, 0x24, 0x32, 0x46, 0x72, 0x65, 0x65, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x46,
		0x72, 0x65, 0x65, 0x57, 0x61, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4d, 0x6f, 0x66,
		0x75, 0x74, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x4d, 0x4f, 0x54, 0x2d, 0x56, 0x33,
		0x36, 0x30, 0x56, 0x33, 0x36, 0x30, 0x53, 0x70, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x73,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x45, 0x46, 0x69, 0x72, 0x65, 0x45, 0x64, 0x67, 0x65, 0x20,
		0x53, 0x45, 0x64, 0x67, 0x65, 0x20, 0x53, 0x33, 0x30, 0x45, 0x64, 0x67, 0x65, 0x20, 0x32, 0x30,
		0x45, 0x64, 0x67, 0x65, 0x20, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x65, 0x66, 0x79, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x4d, 0x6f, 0x74, 0x6f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x51, 0x75, 0x65, 0x6e,
		0x63, 0x68, 0x46, 0x69, 0x72, 0x65, 0x20, 0x58, 0x54, 0x44, 0x65, 0x66, 0x79, 0x44, 0x65, 0x66,
		0x79, 0x20, 0x58, 0x54, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x61, 0x6c, 0x44, 0x72, 0x6f, 0x69, 0x64,
		0x20, 0x50, 0x72, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x6c, 0x75, 0x78, 0x65, 0x50, 0x72, 0x69, 0x6d,
		0x75, 0x73, 0x49, 0x72, 0x6f, 0x6e, 0x52, 0x6f, 0x63, 0x6b, 0x41, 0x74, 0x72, 0x69, 0x78, 0x4d,
		0x6f, 0x74, 0x6f, 0x6c, 0x75, 0x78, 0x65, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x2d, 0x53, 0x49, 0x4d,
		0x41, 0x74, 0x72, 0x69, 0x78, 0x20, 0x54, 0x56, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e,
		0x65, 0x47, 0x6c, 0x61, 0x6d, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x20, 0x33,
		0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x66, 0x79, 0x20, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x58, 0x54, 0x38, 0x38, 0x32, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20,
		0x56, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x69, 0x44, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x34, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x51, 0x45, 0x6c, 0x65, 0x63,
		0x74, 0x72, 0x69, 0x66, 0x79, 0x20, 0x4d, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a,
		0x52, 0x20, 0x4d, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x44, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x44, 0x31, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20,
		0x52, 0x41, 0x5a, 0x52, 0x20, 0x44, 0x33, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a,
		0x52, 0x20, 0x48, 0x44, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45,
		0x20, 0x28, 0x58, 0x54, 0x32, 0x30, 0x35, 0x32, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x45, 0x33, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x32, 0x20,
		0x28, 0x34, 0x47, 0x2d, 0x4c, 0x54, 0x45, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x45, 0x36, 0x20, 0x28, 0x58, 0x54, 0x32, 0x30, 0x30, 0x35, 0x44, 0x4c, 0x29,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x35, 0x20, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x45, 0x35, 0x20, 0x53, 0x75, 0x70, 0x72, 0x61, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x45, 0x35, 0x20, 0x47, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x45, 0x24, 0x31, 0x73, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x44, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x20, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58,
		0x32, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x47, 0x34, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35,
		0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x73, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x35, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x36, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x37, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x58, 0x54, 0x32, 0x31, 0x33, 0x37, 0x2d, 0x32, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x35, 0x30, 0x58, 0x54, 0x32, 0x31, 0x37, 0x31, 0x2d, 0x33, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x35, 0x31, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20, 0x50, 0x75, 0x72, 0x65, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65,
		0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x44, 0x72, 0x6f, 0x69, 0x64,
		0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x5a, 0x34, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x33, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x5a, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x32, 0x20,
		0x46, 0x6f, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x33, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x4d, 0x50, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x50, 0x33, 0x30, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x54, 0x32, 0x32, 0x30,
		0x31, 0x2d, 0x32, 0x45, 0x64, 0x67, 0x65, 0x20, 0x58, 0x33, 0x30, 0x45, 0x64, 0x67, 0x65, 0x20,
		0x32, 0x30, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x67, 0x65, 0x20, 0x32, 0x30,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x45, 0x64, 0x67, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x45, 0x64, 0x67, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x45, 0x64, 0x67, 0x65,
		0x4f, 0x6e, 0x65, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f,
		0x6e, 0x65, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x4f, 0x6e, 0x65, 0x20, 0x48, 0x79, 0x70, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x20, 0x5a,
		0x6f, 0x6f, 0x6d, 0x4f, 0x6e, 0x65, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x74, 0x6f,
		0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
		0x6e, 0x65, 0x20, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c,
		0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x4f, 0x6e, 0x65, 0x20, 0x4d,
		0x61, 0x63, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65,
		0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x20, 0x61, 0x63, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47,
		0x20, 0x55, 0x57, 0x20, 0x41, 0x63, 0x65, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20,
		0x6f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20,
		0x55, 0x57, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x35,
		0x47, 0x20, 0x61, 0x63, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x41, 0x63, 0x65, 0x6d,
		0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x76, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20,
		0x28, 0x58, 0x54, 0x32, 0x31, 0x31, 0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x6d, 0x6f,
		0x74, 0x6f, 0x20, 0x67, 0x20, 0x73, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x6d, 0x6f,
		0x74, 0x6f, 0x20, 0x67, 0x20, 0x73, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x28, 0x58, 0x54, 0x32, 0x30, 0x39, 0x33, 0x44, 0x4c, 0x29, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x32, 0x29, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x6f,
		0x74, 0x6f, 0x20, 0x67, 0x20, 0x70, 0x72, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50,
		0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x70, 0x75, 0x72, 0x65, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x47, 0x20, 0x50, 0x75, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x66,
		0x61, 0x73, 0x74, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x46, 0x61, 0x73, 0x74, 0x6d, 0x6f,
		0x74, 0x6f, 0x20, 0x67, 0x20, 0x35, 0x47, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x20, 0x35, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67,
		0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x34, 0x30, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x24, 0x31, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x36, 0x30, 0x73, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x24, 0x31, 0x20, 0x28, 0x58, 0x54, 0x31, 0x39, 0x32, 0x35, 0x44, 0x4c, 0x29, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x6f, 0x20, 0x28, 0x58, 0x54,
		0x31, 0x39, 0x35, 0x32, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x20, 0x28, 0x58, 0x54, 0x31,
		0x39, 0x35, 0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24,
		0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20,
		0x53, 0x75, 0x70, 0x72, 0x61, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x58, 0x24, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x4d, 0x41, 0x58, 0x58, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x24, 0x31, 0x24, 0x32, 0x24, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x24,
		0x31, 0x24, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x69, 0x58, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x33, 0x36, 0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x41, 0x43, 0x54, 0x56, 0x58, 0x54, 0x32, 0x30,
		0x37, 0x31, 0x2d, 0x34, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x35, 0x47, 0x52, 0x41, 0x5a, 0x52, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x24, 0x31, 0x52, 0x49, 0x5a,
		0x52, 0x20, 0x24, 0x31, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x20, 0x24, 0x31, 0x4d, 0x6f, 0x76, 0x69,
		0x63, 0x46, 0x34, 0x35, 0x30, 0x32, 0x4d, 0x70, 0x6d, 0x61, 0x6e, 0x4d, 0x50, 0x31, 0x30, 0x30,
		0x69, 0x20, 0x4f, 0x43, 0x54, 0x41, 0x4d, 0x50, 0x51, 0x43, 0x47, 0x31, 0x30, 0x20, 0x33, 0x47,
		0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6c, 0x61, 0x73, 0x65, 0x72, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x46,
		0x20, 0x50, 0x72, 0x6f, 0x47, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x45, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4d, 0x53, 0x36, 0x30, 0x46, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4d, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x37,
		0x53, 0x51, 0x43, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x4c, 0x24, 0x31, 0x2d, 0x4d, 0x37, 0x73,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x37, 0x73, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4d, 0x4c, 0x30, 0x31, 0x2d, 0x4d, 0x37, 0x20, 0x53, 0x44, 0x4d, 0x39, 0x20, 0x33,
		0x47, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20, 0x41, 0x31, 0x30, 0x4d, 0x79, 0x47, 0x69, 0x63, 0x61,
		0x48, 0x44, 0x52, 0x20, 0x24, 0x31, 0x20, 0x42, 0x6f, 0x78, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63,
		0x6f, 0x72, 0x65, 0x20, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x74, 0x76, 0x20, 0x62, 0x6f, 0x78,
		0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20,
		0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x41, 0x54, 0x56, 0x24, 0x31, 0x4d, 0x79, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x4d, 0x79, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x20,
		0x24, 0x31, 0x6d, 0x79, 0x54, 0x61, 0x62, 0x5f, 0x31, 0x30, 0x49, 0x49, 0x49, 0x4d, 0x79, 0x54,
		0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x49, 0x6d, 0x79, 0x54, 0x61, 0x62, 0x31, 0x30,
		0x49, 0x49, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x6d, 0x79, 0x54,
		0x36, 0x20, 0x44, 0x54, 0x56, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x5f, 0x37,
		0x5f, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x37, 0x22, 0x20,
		0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x5f, 0x38, 0x5f, 0x4c, 0x54,
		0x45, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x38, 0x22, 0x20, 0x4c, 0x54,
		0x45, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x5f, 0x39, 0x5f, 0x36, 0x5f, 0x33,
		0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20,
		0x33, 0x47, 0x43, 0x75, 0x62, 0x65, 0x5f, 0x4c, 0x54, 0x45, 0x43, 0x75, 0x62, 0x65, 0x20, 0x4c,
		0x54, 0x45, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x34, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72,
		0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x24, 0x31, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72,
		0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x78,
		0x65, 0x20, 0x4d, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x54, 0x69,
		0x74, 0x61, 0x6e, 0x20, 0x32, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x46, 0x6f, 0x72, 0x63,
		0x65, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x49, 0x72, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x48,
		0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x48, 0x61,
		0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x48, 0x61, 0x6d, 0x6d, 0x65,
		0x72, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72,
		0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x61, 0x6d,
		0x6d, 0x65, 0x72, 0x20, 0x41, 0x58, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x61, 0x6d, 0x6d, 0x65,
		0x72, 0x20, 0x41, 0x78, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x32, 0x5f, 0x50, 0x52, 0x4f, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72,
		0x20, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x61, 0x6d, 0x6d,
		0x65, 0x72, 0x5f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x5f, 0x33, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72,
		0x20, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x33, 0x41, 0x58, 0x45, 0x5f, 0x4d, 0x5f, 0x4c, 0x54,
		0x45, 0x43, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x69, 0x78, 0x43, 0x2d, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x50, 0x69, 0x78, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x32, 0x6d,
		0x79, 0x41, 0x31, 0x37, 0x46, 0x55, 0x4e, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46,
		0x55, 0x4e, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x55, 0x4e, 0x20, 0x24, 0x31, 0x4d,
		0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x59, 0x32, 0x37, 0x6d, 0x79, 0x32, 0x37, 0x6d, 0x79,
		0x58, 0x31, 0x32, 0x6d, 0x79, 0x58, 0x49, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6d, 0x79, 0x58,
		0x49, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x6d, 0x79, 0x58, 0x49, 0x33, 0x51, 0x2d, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x42, 0x45, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x31, 0x38, 0x78, 0x39, 0x24,
		0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x72, 0x6f,
		0x77, 0x6e, 0x20, 0x31, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x2d,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x49, 0x49, 0x49, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x2d,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x49, 0x49, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x55,
		0x4e, 0x41, 0x5f, 0x49, 0x49, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x49, 0x49, 0x4d, 0x79, 0x54, 0x61,
		0x62, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x4d, 0x79, 0x57, 0x69, 0x67, 0x6f, 0x4d, 0x79, 0x57, 0x69, 0x67, 0x6f, 0x20, 0x43, 0x69,
		0x74, 0x79, 0x33, 0x43, 0x69, 0x74, 0x79, 0x20, 0x33, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20,
		0x47, 0x49, 0x49, 0x49, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x47, 0x33, 0x4d, 0x79, 0x6d,
		0x61, 0x67, 0x61, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x46, 0x49,
		0x56, 0x45, 0x46, 0x69, 0x76, 0x65, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x47, 0x72, 0x61, 0x6e,
		0x64, 0x5f, 0x34, 0x47, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x34, 0x47, 0x4d, 0x79, 0x72, 0x69,
		0x61, 0x5f, 0x57, 0x69, 0x64, 0x65, 0x5f, 0x34, 0x47, 0x57, 0x69, 0x64, 0x65, 0x20, 0x34, 0x47,
		0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x57, 0x69, 0x64, 0x65, 0x5f, 0x32, 0x57, 0x69, 0x64, 0x65,
		0x20, 0x32, 0x4d, 0x79, 0x72, 0x6f, 0x73, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x4d, 0x49,
		0x44, 0x2d, 0x24, 0x31, 0x4e, 0x45, 0x43, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x20, 0x41, 0x6d,
		0x61, 0x64, 0x61, 0x6e, 0x61, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x20, 0x55, 0x4c, 0x41, 0x56,
		0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49, 0x45,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x54, 0x45, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49, 0x45,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x54, 0x53, 0x24, 0x31, 0x4e, 0x45, 0x58, 0x42, 0x4f,
		0x58, 0x4d, 0x58, 0x51, 0x2d, 0x50, 0x72, 0x6f, 0x2d, 0x4e, 0x45, 0x58, 0x42, 0x4f, 0x58, 0x4d,
		0x58, 0x51, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x58, 0x51, 0x2d, 0x4e, 0x45, 0x58, 0x42, 0x4f, 0x58,
		0x4d, 0x58, 0x51, 0x4e, 0x45, 0x58, 0x4f, 0x4e, 0x4e, 0x47, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x63,
		0x73, 0x4e, 0x47, 0x4d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x35, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x32,
		0x47, 0x42, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x4f,
		0x41, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x46, 0x6f, 0x72, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x6d, 0x65,
		0x72, 0x4c, 0x45, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x4c, 0x45, 0x48, 0x75, 0x6d, 0x6d,
		0x65, 0x72, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x5f, 0x52, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x20,
		0x52, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x20, 0x53, 0x45, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x45,
		0x4e, 0x65, 0x78, 0x74, 0x20, 0x53, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x48, 0x33,
		0x53, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x48, 0x33, 0x4c, 0x6f, 0x6f, 0x70, 0x48,
		0x34, 0x53, 0x45, 0x4d, 0x47, 0x31, 0x32, 0x48, 0x34, 0x34, 0x53, 0x45, 0x48, 0x31, 0x30, 0x4c,
		0x45, 0x53, 0x50, 0x52, 0x49, 0x4e, 0x54, 0x34, 0x47, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20,
		0x34, 0x47, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x34, 0x47, 0x4e, 0x4f, 0x42, 0x55, 0x58, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x4e, 0x58, 0x35, 0x4e, 0x4f, 0x47, 0x41,
		0x4e, 0x4f, 0x47, 0x41, 0x50, 0x41, 0x44, 0x20, 0x37, 0x47, 0x4e, 0x55, 0x55, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x53, 0x36, 0x30, 0x30, 0x31, 0x4c, 0x53, 0x35, 0x35, 0x30, 0x31, 0x4c,
		0x4d, 0x31, 0x39, 0x4e, 0x35, 0x37, 0x30, 0x32, 0x4c, 0x4e, 0x35, 0x35, 0x30, 0x31, 0x4c, 0x41,
		0x35, 0x4c, 0x4e, 0x35, 0x30, 0x30, 0x32, 0x4c, 0x41, 0x37, 0x4c, 0x4e, 0x35, 0x35, 0x30, 0x32,
		0x4c, 0x41, 0x31, 0x30, 0x4c, 0x4e, 0x59, 0x58, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e,
		0x59, 0x58, 0x5f, 0x41, 0x31, 0x4e, 0x59, 0x58, 0x5f, 0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x4e, 0x59,
		0x58, 0x5f, 0x45, 0x47, 0x4f, 0x45, 0x67, 0x6f, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x45, 0x4e, 0x49,
		0x58, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c, 0x59, 0x5f, 0x49, 0x49,
		0x46, 0x6c, 0x79, 0x20, 0x49, 0x49, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c, 0x59, 0x5f, 0x4d, 0x49,
		0x4e, 0x49, 0x46, 0x6c, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c,
		0x59, 0x4e, 0x59, 0x58, 0x5f, 0x48, 0x49, 0x54, 0x48, 0x69, 0x74, 0x4e, 0x59, 0x58, 0x5f, 0x4a,
		0x41, 0x4b, 0x4a, 0x61, 0x6b, 0x4e, 0x59, 0x58, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x4a, 0x6f, 0x69,
		0x6e, 0x4e, 0x59, 0x58, 0x5f, 0x4e, 0x4f, 0x42, 0x41, 0x5f, 0x49, 0x49, 0x4e, 0x6f, 0x62, 0x61,
		0x20, 0x49, 0x49, 0x4e, 0x59, 0x58, 0x5f, 0x4e, 0x4f, 0x42, 0x41, 0x4e, 0x6f, 0x62, 0x61, 0x4e,
		0x59, 0x58, 0x5f, 0x4f, 0x52, 0x42, 0x49, 0x53, 0x4f, 0x72, 0x62, 0x69, 0x73, 0x52, 0x65, 0x78,
		0x4e, 0x59, 0x58, 0x5f, 0x53, 0x48, 0x41, 0x44, 0x45, 0x53, 0x68, 0x61, 0x64, 0x65, 0x4e, 0x59,
		0x58, 0x5f, 0x53, 0x4b, 0x59, 0x53, 0x6b, 0x79, 0x4e, 0x59, 0x58, 0x5f, 0x53, 0x50, 0x41, 0x52,
		0x4b, 0x4e, 0x59, 0x58, 0x5f, 0x56, 0x4f, 0x58, 0x4e, 0x59, 0x58, 0x5f, 0x5a, 0x45, 0x55, 0x5a,
		0x5f, 0x48, 0x44, 0x5a, 0x65, 0x75, 0x73, 0x20, 0x48, 0x44, 0x47, 0x4c, 0x41, 0x4d, 0x41, 0x52,
		0x47, 0x4f, 0x4e, 0x4e, 0x61, 0x62, 0x69, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x48, 0x44, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x42, 0x69, 0x67, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x48, 0x44, 0x20, 0x24, 0x31, 0x2e, 0x30, 0x22, 0x4e, 0x42, 0x54, 0x59, 0x30, 0x37, 0x53, 0x4d,
		0x4b, 0x47, 0x42, 0x61, 0x72, 0x62, 0x69, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x4e, 0x42, 0x46, 0x50, 0x30, 0x37, 0x50, 0x4d, 0x4b, 0x47, 0x46, 0x69, 0x73, 0x68, 0x65,
		0x72, 0x20, 0x50, 0x72, 0x69, 0x63, 0x65, 0x20, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x4e, 0x42, 0x30, 0x32, 0x2d, 0x4e,
		0x56, 0x37, 0x41, 0x32, 0x53, 0x20, 0x54, 0x61, 0x62, 0x4e, 0x41, 0x42, 0x49, 0x32, 0x2d, 0x4e,
		0x56, 0x37, 0x41, 0x32, 0x20, 0x54, 0x61, 0x62, 0x4e, 0x61, 0x6f, 0x6d, 0x69, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x41, 0x6d, 0x62, 0x61, 0x72, 0x44, 0x61, 0x6d, 0x6d, 0x61, 0x72, 0x4e, 0x61,
		0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x76, 0x52, 0x6f, 0x61, 0x64, 0x4e, 0x65, 0x78,
		0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x68, 0x61, 0x6e,
		0x64, 0x79, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x48, 0x61, 0x6e, 0x64, 0x79, 0x4e, 0x45, 0x58, 0x4f,
		0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x44, 0x55, 0x4f, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x44, 0x75, 0x6f, 0x4e, 0x45, 0x58, 0x4f, 0x20, 0x45, 0x56, 0x4f,
		0x4e, 0x65, 0x78, 0x6f, 0x20, 0x45, 0x76, 0x6f, 0x4d, 0x4f, 0x56, 0x49, 0x4f, 0x20, 0x32, 0x4d,
		0x6f, 0x76, 0x69, 0x6f, 0x20, 0x32, 0x4e, 0x61, 0x76, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x50, 0x2d,
		0x37, 0x35, 0x32, 0x47, 0x6f, 0x4e, 0x50, 0x2d, 0x37, 0x35, 0x32, 0x20, 0x47, 0x6f, 0x4e, 0x61,
		0x76, 0x69, 0x74, 0x65, 0x63, 0x68, 0x4e, 0x61, 0x76, 0x69, 0x74, 0x65, 0x6c, 0x24, 0x31, 0x20,
		0x4c, 0x54, 0x45, 0x54, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x45, 0x39, 0x30, 0x30, 0x20,
		0x46, 0x75, 0x6c, 0x6c, 0x20, 0x48, 0x44, 0x4e, 0x61, 0x76, 0x6f, 0x6e, 0x4d, 0x69, 0x7a, 0x75,
		0x20, 0x4d, 0x35, 0x30, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x69, 0x7a, 0x75, 0x20, 0x24, 0x31,
		0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x75, 0x70, 0x72, 0x65,
		0x6d, 0x65, 0x20, 0x46, 0x69, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x72,
		0x65, 0x6d, 0x65, 0x20, 0x46, 0x69, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x75,
		0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x46, 0x69, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x46, 0x69, 0x6e, 0x65, 0x53, 0x75, 0x70, 0x72, 0x65,
		0x6d, 0x65, 0x20, 0x43, 0x68, 0x69, 0x65, 0x66, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20,
		0x50, 0x75, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65,
		0x20, 0x50, 0x75, 0x72, 0x65, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x75, 0x72, 0x65, 0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x33, 0x47, 0x24, 0x31, 0x4f, 0x72, 0x70, 0x68, 0x65, 0x75, 0x73, 0x20, 0x33, 0x47, 0x50,
		0x72, 0x65, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x52, 0x61, 0x70, 0x74, 0x6f, 0x72,
		0x20, 0x33, 0x47, 0x20, 0x38, 0x47, 0x42, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x24, 0x31, 0x4e, 0x65, 0x63, 0x6e, 0x6f, 0x74, 0x4e, 0x65, 0x66, 0x66, 0x6f, 0x73,
		0x43, 0x35, 0x4c, 0x59, 0x35, 0x30, 0x4e, 0x65, 0x66, 0x66, 0x6f, 0x73, 0x20, 0x58, 0x32, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x58, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x6f, 0x6d, 0x69,
		0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x49, 0x51, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x24, 0x31, 0x47, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x20, 0x24, 0x31, 0x47, 0x4e, 0x51,
		0x54, 0x2d, 0x37, 0x57, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4e,
		0x65, 0x74, 0x67, 0x65, 0x61, 0x72, 0x47, 0x54, 0x56, 0x31, 0x30, 0x30, 0x4e, 0x65, 0x6f, 0x54,
		0x56, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4e, 0x65, 0x75, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4e,
		0x49, 0x4d, 0x2d, 0x4e, 0x65, 0x77, 0x20, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x65,
		0x77, 0x67, 0x65, 0x6e, 0x4e, 0x65, 0x77, 0x6c, 0x61, 0x6e, 0x64, 0x4d, 0x54, 0x39, 0x30, 0x20,
		0x4f, 0x72, 0x63, 0x61, 0x4e, 0x65, 0x77, 0x6d, 0x61, 0x6e, 0x4e, 0x65, 0x77, 0x73, 0x4d, 0x79,
		0x4e, 0x65, 0x77, 0x73, 0x64, 0x61, 0x79, 0x4e, 0x65, 0x78, 0x61, 0x4e, 0x65, 0x78, 0x69, 0x61,
		0x6e, 0x4e, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4e, 0x58, 0x30, 0x30, 0x38, 0x48, 0x44,
		0x38, 0x47, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x38, 0x20, 0x48, 0x44, 0x4e, 0x58,
		0x41, 0x38, 0x51, 0x43, 0x31, 0x31, 0x36, 0x41, 0x72, 0x65, 0x73, 0x20, 0x38, 0x4e, 0x58, 0x31,
		0x36, 0x41, 0x38, 0x31, 0x31, 0x36, 0x4b, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x38, 0x4e, 0x58,
		0x31, 0x36, 0x41, 0x31, 0x30, 0x31, 0x33, 0x32, 0x53, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x31,
		0x30, 0x4e, 0x58, 0x31, 0x36, 0x41, 0x31, 0x31, 0x32, 0x36, 0x34, 0x41, 0x72, 0x65, 0x73, 0x20,
		0x41, 0x31, 0x31, 0x4e, 0x45, 0x58, 0x54, 0x31, 0x30, 0x31, 0x35, 0x42, 0x41, 0x50, 0x41, 0x72,
		0x65, 0x73, 0x20, 0x31, 0x30, 0x4e, 0x58, 0x4d, 0x39, 0x30, 0x38, 0x48, 0x43, 0x50, 0x72, 0x65,
		0x6d, 0x69, 0x75, 0x6d, 0x20, 0x39, 0x4e, 0x58, 0x30, 0x31, 0x30, 0x48, 0x49, 0x38, 0x47, 0x50,
		0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x20, 0x48, 0x69, 0x4e, 0x58, 0x37, 0x38,
		0x35, 0x51, 0x43, 0x38, 0x47, 0x4e, 0x58, 0x4d, 0x39, 0x30, 0x30, 0x4d, 0x43, 0x38, 0x20, 0x48,
		0x44, 0x4e, 0x58, 0x4d, 0x37, 0x32, 0x36, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x37,
		0x4e, 0x65, 0x78, 0x74, 0x20, 0x24, 0x31, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x61, 0x62, 0x4e, 0x65,
		0x78, 0x74, 0x62, 0x69, 0x74, 0x4e, 0x6f, 0x61, 0x69, 0x6e, 0x4e, 0x4f, 0x41, 0x49, 0x4e, 0x4e,
		0x6f, 0x62, 0x62, 0x79, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x78, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x36,
		0x54, 0x41, 0x2d, 0x31, 0x30, 0x34, 0x31, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x38, 0x20, 0x53,
		0x69, 0x72, 0x6f, 0x63, 0x63, 0x6f, 0x38, 0x20, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x63, 0x6f, 0x4e,
		0x6f, 0x6b, 0x69, 0x61, 0x20, 0x37, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x37, 0x20, 0x70, 0x6c, 0x75,
		0x73, 0x36, 0x2e, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x35, 0x2e, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x33, 0x2e, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x20, 0x56, 0x20, 0x54,
		0x65, 0x6c, 0x6c, 0x61, 0x58, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x52, 0x58, 0x2d, 0x35, 0x31,
		0x20, 0x4e, 0x39, 0x30, 0x30, 0x4e, 0x39, 0x30, 0x30, 0x41, 0x73, 0x68, 0x61, 0x20, 0x35, 0x30,
		0x30, 0x35, 0x31, 0x33, 0x30, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x73, 0x69,
		0x63, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x35, 0x32, 0x33, 0x30, 0x4e, 0x75, 0x72, 0x6f, 0x6e, 0x4e,
		0x6f, 0x6b, 0x69, 0x61, 0x35, 0x32, 0x33, 0x33, 0x35, 0x32, 0x33, 0x33, 0x4e, 0x6f, 0x6b, 0x69,
		0x61, 0x35, 0x38, 0x30, 0x30, 0x64, 0x2d, 0x31, 0x35, 0x38, 0x30, 0x30, 0x20, 0x58, 0x70, 0x72,
		0x65, 0x73, 0x73, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x36, 0x32, 0x31,
		0x30, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61,
		0x74, 0x6f, 0x72, 0x53, 0x61, 0x70, 0x70, 0x68, 0x69, 0x72, 0x65, 0x20, 0x41, 0x72, 0x74, 0x65,
		0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d, 0x52, 0x48, 0x2d, 0x31, 0x37, 0x32, 0x32, 0x38, 0x30, 0x4e,
		0x4f, 0x4b, 0x49, 0x41, 0x2d, 0x52, 0x48, 0x2d, 0x32, 0x37, 0x36, 0x32, 0x32, 0x35, 0x4e, 0x4f,
		0x4b, 0x49, 0x41, 0x2d, 0x52, 0x48, 0x2d, 0x33, 0x34, 0x36, 0x35, 0x38, 0x35, 0x4e, 0x4f, 0x4b,
		0x49, 0x41, 0x2d, 0x52, 0x48, 0x2d, 0x34, 0x38, 0x33, 0x31, 0x30, 0x35, 0x4e, 0x4f, 0x4b, 0x49,
		0x41, 0x2d, 0x52, 0x4d, 0x2d, 0x31, 0x31, 0x33, 0x32, 0x30, 0x35, 0x4e, 0x6f, 0x6b, 0x69, 0x61,
		0x38, 0x30, 0x38, 0x20, 0x50, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x38, 0x30, 0x38, 0x20,
		0x50, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x24, 0x31, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73,
		0x69, 0x63, 0x24, 0x31, 0x20, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x41, 0x73, 0x68, 0x61, 0x20, 0x24,
		0x31, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x32, 0x30, 0x54, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x35, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x32, 0x36, 0x52, 0x4d, 0x2d,
		0x38, 0x34, 0x36, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69,
		0x61, 0x20, 0x36, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x35, 0x52, 0x4d,
		0x2d, 0x31, 0x30, 0x32, 0x37, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x36, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x37, 0x31, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x32, 0x30,
		0x54, 0x52, 0x4d, 0x2d, 0x38, 0x38, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x32, 0x30,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37,
		0x33, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x30, 0x30, 0x43, 0x4c, 0x75, 0x6d, 0x69,
		0x61, 0x20, 0x38, 0x30, 0x30, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x38, 0x32, 0x30, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x38, 0x32, 0x30, 0x52, 0x4d, 0x2d, 0x39, 0x38, 0x34, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x38, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x30, 0x30, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x32,
		0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x32, 0x39, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x49, 0x63, 0x6f, 0x6e, 0x52, 0x4d, 0x2d, 0x31, 0x30, 0x34, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x39, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x31, 0x30, 0x32, 0x30, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x31, 0x35, 0x32, 0x30, 0x2e, 0x31, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20,
		0x54, 0x32, 0x30, 0x54, 0x32, 0x30, 0x4d, 0x61, 0x65, 0x6d, 0x6f, 0x20, 0x52, 0x58, 0x2d, 0x33,
		0x34, 0x4e, 0x38, 0x30, 0x30, 0x4e, 0x6f, 0x6d, 0x69, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x32, 0x45,
		0x76, 0x6f, 0x20, 0x4d, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x33, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x31,
		0x69, 0x35, 0x30, 0x36, 0x20, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x69, 0x35, 0x37, 0x33, 0x30, 0x20,
		0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x2d, 0x58, 0x49, 0x72,
		0x6f, 0x6e, 0x2d, 0x58, 0x49, 0x72, 0x6f, 0x6e, 0x2d, 0x58, 0x31, 0x49, 0x72, 0x6f, 0x6e, 0x2d,
		0x4d, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x34, 0x45, 0x76, 0x6f, 0x20, 0x58, 0x32, 0x45, 0x76, 0x6f,
		0x20, 0x58, 0x45, 0x76, 0x6f, 0x20, 0x58, 0x31, 0x45, 0x76, 0x6f, 0x20, 0x5a, 0x42, 0x65, 0x61,
		0x74, 0x20, 0x4d, 0x42, 0x65, 0x61, 0x74, 0x20, 0x4d, 0x31, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20,
		0x58, 0x32, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x58,
		0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
		0x20, 0x58, 0x31, 0x69, 0x24, 0x31, 0x43, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x32, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x32, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x4c, 0x54,
		0x45, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x33, 0x47, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x34, 0x20, 0x33, 0x47, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x43,
		0x6f, 0x72, 0x73, 0x61, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x6f, 0x72,
		0x73, 0x61, 0x20, 0x32, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x43,
		0x6f, 0x72, 0x73, 0x61, 0x20, 0x33, 0x20, 0x33, 0x47, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x34,
		0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x33, 0x47, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x34,
		0x20, 0x4c, 0x54, 0x45, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x4c, 0x54, 0x45, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x33, 0x20, 0x33, 0x47, 0x4c, 0x69, 0x62,
		0x72, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x34, 0x20,
		0x33, 0x47, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x6d,
		0x75, 0x54, 0x31, 0x38, 0x53, 0x31, 0x30, 0x53, 0x33, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e,
		0x6f, 0x6f, 0x6e, 0x74, 0x65, 0x63, 0x4e, 0x6f, 0x6f, 0x6e, 0x74, 0x65, 0x63, 0x20, 0x4e, 0x6f,
		0x72, 0x74, 0x68, 0x54, 0x65, 0x63, 0x68, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x20,
		0x31, 0x30, 0x2e, 0x30, 0x22, 0x4e, 0x6f, 0x73, 0x4e, 0x6f, 0x76, 0x75, 0x20, 0x49, 0x49, 0x49,
		0x4e, 0x6f, 0x76, 0x75, 0x20, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x75, 0x4e, 0x65, 0x76, 0x61, 0x20,
		0x38, 0x30, 0x52, 0x6f, 0x79, 0x61, 0x4e, 0x6f, 0x75, 0x73, 0x4e, 0x53, 0x35, 0x35, 0x31, 0x31,
		0x4e, 0x6f, 0x76, 0x65, 0x78, 0x4e, 0x75, 0x41, 0x6e, 0x73, 0x4e, 0x45, 0x4f, 0x20, 0x52, 0x65,
		0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x4e, 0x75, 0x62, 0x69, 0x61, 0x4e, 0x58, 0x36, 0x36, 0x37,
		0x4a, 0x5a, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x36, 0x36, 0x39, 0x4a, 0x52, 0x65,
		0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x36, 0x4e, 0x58, 0x36, 0x36, 0x36, 0x4a, 0x52,
		0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x36, 0x52, 0x4e, 0x58, 0x36, 0x31, 0x39,
		0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x4d, 0x61, 0x72, 0x73, 0x4e,
		0x58, 0x36, 0x32, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x33,
		0x5a, 0x35, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x5a, 0x35, 0x53, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e,
		0x58, 0x35, 0x30, 0x33, 0x41, 0x5a, 0x35, 0x53, 0x4e, 0x58, 0x35, 0x30, 0x36, 0x4a, 0x5a, 0x37,
		0x4e, 0x58, 0x35, 0x30, 0x37, 0x4a, 0x5a, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35,
		0x30, 0x35, 0x4a, 0x5a, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x58, 0x35, 0x30, 0x38, 0x4a, 0x5a,
		0x39, 0x5a, 0x39, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x5a, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x58,
		0x35, 0x31, 0x32, 0x4a, 0x5a, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4e,
		0x58, 0x35, 0x33, 0x31, 0x4a, 0x5a, 0x31, 0x31, 0x4e, 0x58, 0x35, 0x32, 0x33, 0x4a, 0x5f, 0x56,
		0x31, 0x5a, 0x31, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x31, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x53, 0x5a, 0x31, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x36, 0x30, 0x36, 0x4a,
		0x5a, 0x31, 0x38, 0x4e, 0x58, 0x36, 0x31, 0x36, 0x4a, 0x5a, 0x31, 0x38, 0x53, 0x4e, 0x58, 0x36,
		0x31, 0x31, 0x4a, 0x5a, 0x31, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35, 0x35, 0x31,
		0x4a, 0x4e, 0x58, 0x35, 0x36, 0x33, 0x4a, 0x5a, 0x31, 0x37, 0x5a, 0x31, 0x37, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x4e, 0x58, 0x35, 0x38, 0x39, 0x4a, 0x5a, 0x31, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x53, 0x4e, 0x58, 0x35, 0x39, 0x31, 0x4a, 0x5a, 0x31, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4e, 0x58, 0x35, 0x39, 0x35, 0x4a, 0x5a, 0x31, 0x37, 0x53, 0x4e, 0x58, 0x36, 0x31, 0x32, 0x4a,
		0x56, 0x31, 0x38, 0x4e, 0x58, 0x36, 0x32, 0x37, 0x4a, 0x5a, 0x32, 0x30, 0x4e, 0x58, 0x35, 0x31,
		0x33, 0x4a, 0x4d, 0x79, 0x20, 0x50, 0x72, 0x61, 0x67, 0x75, 0x65, 0x4e, 0x58, 0x36, 0x30, 0x31,
		0x4a, 0x4e, 0x58, 0x36, 0x30, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63,
		0x4e, 0x58, 0x36, 0x35, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20,
		0x35, 0x47, 0x4e, 0x58, 0x36, 0x35, 0x31, 0x4a, 0x4e, 0x58, 0x35, 0x37, 0x33, 0x4a, 0x4d, 0x32,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x58, 0x39, 0x30, 0x37, 0x4a, 0x4d, 0x32, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x4e, 0x58, 0x35, 0x34, 0x31, 0x4a, 0x4e, 0x31, 0x4e, 0x58, 0x35, 0x39, 0x37, 0x4a,
		0x4e, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x58, 0x35, 0x37, 0x35, 0x4a, 0x4e, 0x32, 0x4e,
		0x33, 0x4e, 0x75, 0x62, 0x69, 0x61, 0x20, 0x38, 0x30, 0x31, 0x31, 0x4e, 0x38, 0x30, 0x4e, 0x75,
		0x76, 0x6f, 0x4e, 0x44, 0x34, 0x35, 0x4e, 0x76, 0x69, 0x64, 0x69, 0x61, 0x54, 0x65, 0x67, 0x72,
		0x61, 0x4e, 0x6f, 0x74, 0x65, 0x2d, 0x50, 0x31, 0x36, 0x34, 0x30, 0x54, 0x65, 0x67, 0x72, 0x61,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x31, 0x36, 0x34, 0x30, 0x53, 0x48, 0x49, 0x45, 0x4c,
		0x44, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x4e, 0x56, 0x49, 0x44,
		0x49, 0x41, 0x5f, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x32, 0x30,
		0x31, 0x39, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x54, 0x56, 0x20, 0x50, 0x72, 0x6f, 0x4e,
		0x56, 0x49, 0x44, 0x49, 0x41, 0x20, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x48, 0x49, 0x45,
		0x4c, 0x44, 0x20, 0x54, 0x56, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x53, 0x48, 0x49, 0x45, 0x4c,
		0x44, 0x20, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x2b, 0x41, 0x69, 0x72, 0x33,
		0x36, 0x30, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x2e,
		0x30, 0x4f, 0x32, 0x4f, 0x41, 0x53, 0x59, 0x53, 0x4f, 0x49, 0x4e, 0x4f, 0x4d, 0x4f, 0x4b, 0x53,
		0x49, 0x4f, 0x4b, 0x57, 0x55, 0x4f, 0x4d, 0x49, 0x58, 0x4f, 0x4e, 0x4e, 0x4f, 0x4e, 0x59, 0x58,
		0x20, 0x42, 0x4f, 0x4f, 0x58, 0x4e, 0x6f, 0x76, 0x61, 0x33, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x33, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4b, 0x6f, 0x6e, 0x20, 0x54,
		0x69, 0x6b, 0x69, 0x20, 0x24, 0x31, 0x4f, 0x50, 0x50, 0x4f, 0x41, 0x31, 0x31, 0x41, 0x31, 0x31,
		0x78, 0x41, 0x31, 0x32, 0x41, 0x31, 0x35, 0x73, 0x41, 0x31, 0x36, 0x73, 0x41, 0x31, 0x35, 0x41,
		0x31, 0x6b, 0x41, 0x31, 0x31, 0x6b, 0x41, 0x31, 0x73, 0x41, 0x31, 0x36, 0x41, 0x33, 0x37, 0x66,
		0x24, 0x31, 0x41, 0x33, 0x37, 0x66, 0x41, 0x33, 0x39, 0x41, 0x33, 0x31, 0x41, 0x33, 0x33, 0x41,
		0x33, 0x73, 0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x35, 0x33, 0x20, 0x35,
		0x47, 0x41, 0x33, 0x32, 0x41, 0x33, 0x35, 0x41, 0x35, 0x32, 0x41, 0x35, 0x33, 0x41, 0x35, 0x33,
		0x73, 0x41, 0x35, 0x33, 0x73, 0x20, 0x35, 0x47, 0x41, 0x35, 0x34, 0x20, 0x35, 0x47, 0x41, 0x35,
		0x34, 0x41, 0x35, 0x34, 0x73, 0x41, 0x35, 0x35, 0x20, 0x35, 0x47, 0x41, 0x35, 0x35, 0x41, 0x35,
		0x35, 0x73, 0x20, 0x35, 0x47, 0x50, 0x46, 0x56, 0x4d, 0x31, 0x30, 0x41, 0x35, 0x36, 0x20, 0x35,
		0x47, 0x41, 0x35, 0x37, 0x41, 0x35, 0x53, 0x41, 0x37, 0x31, 0x41, 0x37, 0x31, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x41, 0x37, 0x32, 0x41, 0x37, 0x33, 0x20, 0x35, 0x47, 0x41, 0x37, 0x34,
		0x41, 0x37, 0x34, 0x20, 0x35, 0x47, 0x41, 0x37, 0x32, 0x6e, 0x20, 0x35, 0x47, 0x41, 0x37, 0x37,
		0x41, 0x37, 0x39, 0x41, 0x37, 0x6e, 0x41, 0x37, 0x78, 0x41, 0x38, 0x33, 0x41, 0x38, 0x33, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x41, 0x39, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41,
		0x39, 0x31, 0x41, 0x39, 0x32, 0x41, 0x39, 0x32, 0x73, 0x41, 0x39, 0x33, 0x41, 0x39, 0x33, 0x73,
		0x50, 0x46, 0x55, 0x4d, 0x31, 0x30, 0x41, 0x39, 0x36, 0x20, 0x35, 0x47, 0x41, 0x39, 0x34, 0x41,
		0x39, 0x35, 0x41, 0x39, 0x78, 0x41, 0x58, 0x35, 0x41, 0x58, 0x35, 0x73, 0x41, 0x58, 0x37, 0x46,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x31, 0x31, 0x46, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x46, 0x31, 0x37, 0x46, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x73, 0x46, 0x33, 0x46,
		0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x35, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x46, 0x37,
		0x46, 0x39, 0x46, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x39, 0x73, 0x46, 0x31, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x46, 0x31, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46,
		0x69, 0x6e, 0x64, 0x20, 0x35, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x37, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x37, 0x61, 0x46, 0x69, 0x6e,
		0x64, 0x20, 0x4e, 0x20, 0x35, 0x47, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x43, 0x6c, 0x6f, 0x76, 0x65,
		0x72, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x47, 0x75, 0x69, 0x74, 0x61, 0x72, 0x46, 0x69, 0x6e, 0x64,
		0x20, 0x4d, 0x65, 0x6c, 0x6f, 0x64, 0x79, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4d, 0x75, 0x73, 0x65,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x57, 0x61, 0x79, 0x20, 0x53, 0x55, 0x6c, 0x69, 0x6b, 0x65, 0x20,
		0x32, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x4c, 0x61,
		0x6d, 0x62, 0x6f, 0x72, 0x67, 0x68, 0x69, 0x6e, 0x69, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x32,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x64,
		0x20, 0x58, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x46, 0x69,
		0x6e, 0x64, 0x20, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x6f, 0x79, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4b, 0x37, 0x78, 0x4b, 0x39, 0x78, 0x4b, 0x39, 0x73, 0x4e, 0x31, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x4e, 0x65, 0x6f, 0x20, 0x37,
		0x4e, 0x65, 0x6f, 0x20, 0x37, 0x73, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x52, 0x31, 0x31, 0x52, 0x31,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x31, 0x4b, 0x52, 0x31, 0x31, 0x73, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x52, 0x31, 0x31, 0x73, 0x52, 0x31, 0x35, 0x52, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x52, 0x31, 0x35, 0x78, 0x52, 0x31, 0x37, 0x52, 0x31, 0x37, 0x20, 0x4e, 0x65, 0x6f, 0x52, 0x31,
		0x37, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x31, 0x4c, 0x52, 0x31, 0x53, 0x52, 0x35, 0x52, 0x37, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x52, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x37, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x46, 0x52, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x39, 0x73, 0x52, 0x39,
		0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x6e, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x41,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x58, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x32, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x32, 0x46, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x32,
		0x5a, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x41, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x33, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x34, 0x20, 0x34, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x34, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x53, 0x45, 0x20,
		0x35, 0x47, 0x20, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x5a, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34,
		0x46, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x41, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x20,
		0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x4b, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x46,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x5a, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x36, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20, 0x5a, 0x20, 0x35, 0x47, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x50, 0x46, 0x4a, 0x4d, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37,
		0x50, 0x46, 0x43, 0x4d, 0x30, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x20, 0x53, 0x45, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x4b, 0x39, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x41, 0x63, 0x65, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x41, 0x63, 0x65, 0x20, 0x32, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x4b, 0x33,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x5a, 0x41, 0x35, 0x39, 0x73, 0x4e, 0x31, 0x54, 0x4f, 0x59, 0x53,
		0x49, 0x4e, 0x4f, 0x61, 0x6c, 0x65, 0x41, 0x70, 0x65, 0x78, 0x20, 0x24, 0x31, 0x4f, 0x62, 0x61,
		0x62, 0x6f, 0x78, 0x4f, 0x42, 0x41, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x33, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x33, 0x4f, 0x62, 0x69, 0x53, 0x4a, 0x32, 0x2e, 0x36, 0x53, 0x4a, 0x31, 0x2e,
		0x35, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x63, 0x6f, 0x6e, 0x50, 0x79,
		0x74, 0x68, 0x6f, 0x6e, 0x46, 0x6f, 0x78, 0x57, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x65,
		0x4c, 0x65, 0x6f, 0x70, 0x61, 0x72, 0x64, 0x42, 0x6f, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42,
		0x6f, 0x61, 0x50, 0x65, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x4f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73,
		0x43, 0x72, 0x61, 0x6e, 0x65, 0x48, 0x6f, 0x72, 0x6e, 0x62, 0x69, 0x6c, 0x6c, 0x41, 0x6c, 0x6c,
		0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x63, 0x75, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x63, 0x69,
		0x66, 0x69, 0x63, 0x47, 0x6f, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x32, 0x4f, 0x64, 0x79, 0x73,
		0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x41, 0x31, 0x30, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x50, 0x48,
		0x4f, 0x4e, 0x45, 0x54, 0x41, 0x42, 0x33, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x74, 0x61, 0x62, 0x20, 0x33, 0x54, 0x48, 0x41, 0x4e, 0x4f, 0x53, 0x5f, 0x31, 0x30,
		0x54, 0x68, 0x61, 0x6e, 0x6f, 0x73, 0x20, 0x31, 0x30, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x4e,
		0x45, 0x58, 0x54, 0x5f, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x58, 0x65,
		0x6c, 0x69, 0x6f, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x54,
		0x41, 0x42, 0x37, 0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x74, 0x61, 0x62, 0x20, 0x37, 0x20, 0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30,
		0x45, 0x58, 0x54, 0x52, 0x45, 0x4d, 0x45, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20,
		0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30, 0x5f, 0x50, 0x4c,
		0x55, 0x53, 0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x5f,
		0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20,
		0x48, 0x44, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f,
		0x31, 0x30, 0x5f, 0x48, 0x44, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44,
		0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45,
		0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45,
		0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33,
		0x47, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x33, 0x47, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x38, 0x50, 0x4c, 0x55, 0x53, 0x43,
		0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x4f, 0x4e,
		0x4e, 0x45, 0x43, 0x54, 0x37, 0x50, 0x52, 0x4f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20,
		0x37, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x41, 0x56, 0x45, 0x4e, 0x5f, 0x58, 0x31, 0x30, 0x5f, 0x48,
		0x44, 0x5f, 0x4c, 0x54, 0x45, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x20, 0x48,
		0x44, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x41, 0x56, 0x45, 0x4e, 0x5f, 0x58, 0x31, 0x30, 0x5f, 0x48,
		0x44, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x20, 0x48, 0x44, 0x4d, 0x61, 0x76,
		0x65, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33,
		0x47, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x61,
		0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20,
		0x31, 0x30, 0x20, 0x48, 0x44, 0x52, 0x61, 0x70, 0x69, 0x64, 0x20, 0x37, 0x20, 0x4c, 0x54, 0x45,
		0x52, 0x61, 0x70, 0x69, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x41, 0x4f, 0x5f,
		0x58, 0x31, 0x30, 0x54, 0x61, 0x6f, 0x20, 0x58, 0x31, 0x30, 0x53, 0x50, 0x41, 0x43, 0x45, 0x31,
		0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x53, 0x50, 0x41, 0x43, 0x45, 0x31, 0x30,
		0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x33, 0x47, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x4a, 0x75, 0x6e,
		0x69, 0x6f, 0x72, 0x54, 0x38, 0x50, 0x72, 0x6f, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x54,
		0x38, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x55, 0x4e, 0x49, 0x4f, 0x52, 0x5f, 0x38, 0x5f, 0x50, 0x52,
		0x4f, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x44, 0x4d,
		0x38, 0x31, 0x36, 0x48, 0x43, 0x4e, 0x65, 0x6f, 0x20, 0x58, 0x45, 0x4f, 0x53, 0x31, 0x30, 0x45,
		0x4f, 0x53, 0x20, 0x31, 0x30, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45,
		0x5f, 0x56, 0x32, 0x50, 0x61, 0x63, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x56,
		0x32, 0x50, 0x61, 0x63, 0x65, 0x20, 0x31, 0x30, 0x41, 0x45, 0x4f, 0x4e, 0x41, 0x65, 0x6f, 0x6e,
		0x46, 0x41, 0x4c, 0x43, 0x4f, 0x4e, 0x5f, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33,
		0x47, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x33, 0x47, 0x46, 0x55, 0x53, 0x49, 0x4f, 0x4e, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x37,
		0x55, 0x4e, 0x4f, 0x5f, 0x58, 0x38, 0x55, 0x6e, 0x6f, 0x20, 0x58, 0x38, 0x41, 0x44, 0x4d, 0x38,
		0x30, 0x30, 0x30, 0x4b, 0x50, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x5f,
		0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x4c,
		0x54, 0x45, 0x50, 0x59, 0x52, 0x4f, 0x5f, 0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47,
		0x50, 0x79, 0x72, 0x6f, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4e, 0x4f,
		0x56, 0x41, 0x5f, 0x58, 0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x58, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4f, 0x44, 0x59, 0x53,
		0x5f, 0x4e, 0x4f, 0x56, 0x41, 0x5f, 0x58, 0x37, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x58, 0x37, 0x54,
		0x68, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4e, 0x4f,
		0x54, 0x4f, 0x53, 0x70, 0x6c, 0x75, 0x73, 0x33, 0x47, 0x4e, 0x6f, 0x74, 0x6f, 0x73, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4d, 0x41, 0x56, 0x45, 0x4e, 0x5f, 0x47, 0x31, 0x30, 0x4d,
		0x61, 0x76, 0x65, 0x6e, 0x20, 0x47, 0x31, 0x30, 0x50, 0x45, 0x44, 0x49, 0x5f, 0x50, 0x4c, 0x55,
		0x53, 0x5f, 0x57, 0x50, 0x65, 0x64, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x57, 0x4e, 0x65,
		0x6f, 0x20, 0x36, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x44, 0x45, 0x5f, 0x58, 0x35, 0x35,
		0x53, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x35, 0x35, 0x49, 0x65, 0x6f, 0x73, 0x20, 0x24, 0x31,
		0x4e, 0x6f, 0x6f, 0x6e, 0x4e, 0x6f, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x6b, 0x34, 0x4b,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4f, 0x6b, 0x61, 0x70, 0x69, 0x61, 0x53, 0x69, 0x67,
		0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x24, 0x31, 0x4f, 0x6e, 0x64, 0x61, 0x54, 0x39, 0x20,
		0x53, 0x4d, 0x49, 0x44, 0x56, 0x38, 0x32, 0x30, 0x57, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f,
		0x53, 0x56, 0x38, 0x39, 0x31, 0x57, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x38,
		0x39, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x33,
		0x47, 0x20, 0x41, 0x69, 0x72, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31,
		0x39, 0x20, 0x41, 0x69, 0x72, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31,
		0x39, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x48, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4f, 0x53, 0x56,
		0x39, 0x31, 0x39, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x48, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20,
		0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x34, 0x47, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f,
		0x72, 0x65, 0x38, 0x56, 0x39, 0x31, 0x39, 0x20, 0x34, 0x47, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x20, 0x38, 0x56, 0x39, 0x37, 0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x34, 0x56,
		0x39, 0x31, 0x39, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x34, 0x56, 0x39, 0x38, 0x39, 0x20, 0x41,
		0x69, 0x72, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x38, 0x56, 0x39, 0x38, 0x39, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x38, 0x4f, 0x4e, 0x44, 0x41, 0x20, 0x56, 0x39, 0x38, 0x39,
		0x56, 0x39, 0x38, 0x39, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x38, 0x6f, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53,
		0x56, 0x31, 0x30, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x34, 0x47, 0x6f, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x32, 0x30, 0x20, 0x53, 0x45, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x20,
		0x53, 0x45, 0x4f, 0x6e, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x35, 0x47,
		0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x35, 0x47, 0x43, 0x6c, 0x6f, 0x76, 0x65, 0x72,
		0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31, 0x30, 0x30, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x32,
		0x30, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31, 0x30, 0x4e, 0x6f, 0x72,
		0x64, 0x20, 0x4e, 0x31, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31, 0x30,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x32, 0x20, 0x35, 0x47, 0x4e, 0x6f,
		0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x32, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x38, 0x54, 0x38, 0x20,
		0x35, 0x47, 0x20, 0x55, 0x57, 0x39, 0x52, 0x54, 0x20, 0x35, 0x47, 0x39, 0x52, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74,
		0x69, 0x6f, 0x6e, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x37, 0x54, 0x37, 0x54, 0x20, 0x50, 0x72, 0x6f,
		0x37, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x33, 0x54, 0x35, 0x54, 0x36, 0x54, 0x4f,
		0x6e, 0x69, 0x78, 0x38, 0x22, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x33, 0x47, 0x4f,
		0x6e, 0x6b, 0x79, 0x6f, 0x4f, 0x6f, 0x6b, 0x65, 0x65, 0x4f, 0x6f, 0x6b, 0x65, 0x65, 0x4f, 0x6e,
		0x65, 0x4f, 0x70, 0x65, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x45, 0x61, 0x73, 0x79, 0x5f,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x32, 0x45, 0x61, 0x73, 0x79, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x32, 0x4f, 0x70, 0x65, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x4a, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4a, 0x58, 0x4f, 0x70, 0x65, 0x6c,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x31, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x58, 0x31, 0x20, 0x34, 0x47, 0x4f, 0x70, 0x65, 0x6c, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x58, 0x36, 0x4f, 0x70, 0x65, 0x6e, 0x62, 0x6f, 0x78, 0x41, 0x53, 0x5f, 0x34, 0x4b, 0x5f, 0x43,
		0x49, 0x5f, 0x50, 0x52, 0x4f, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x43, 0x49, 0x20, 0x50, 0x72,
		0x6f, 0x41, 0x53, 0x5f, 0x34, 0x4b, 0x5f, 0x43, 0x49, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x43,
		0x49, 0x4f, 0x70, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x75, 0x73, 0x61, 0x69, 0x20, 0x24, 0x31, 0x4f,
		0x72, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x43, 0x2f, 0x49, 0x48, 0x44, 0x39, 0x32, 0x4c, 0x69, 0x76,
		0x65, 0x62, 0x6f, 0x78, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4e, 0x6f, 0x6c, 0x61, 0x20, 0x70, 0x6c,
		0x61, 0x79, 0x4e, 0x6f, 0x6c, 0x61, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4e, 0x75, 0x72, 0x61, 0x20,
		0x32, 0x53, 0x65, 0x67, 0x6f, 0x46, 0x75, 0x6e, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x44, 0x69,
		0x76, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x44, 0x69, 0x76, 0x65, 0x20, 0x24,
		0x31, 0x53, 0x50, 0x56, 0x20, 0x24, 0x31, 0x4f, 0x72, 0x62, 0x69, 0x63, 0x53, 0x6c, 0x69, 0x6d,
		0x4d, 0x61, 0x75, 0x69, 0x57, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x61,
		0x4f, 0x72, 0x64, 0x69, 0x73, 0x73, 0x69, 0x6d, 0x6f, 0x4f, 0x72, 0x69, 0x6f, 0x6e, 0x43, 0x52,
		0x41, 0x4e, 0x45, 0x2d, 0x45, 0x56, 0x42, 0x4f, 0x75, 0x6b, 0x69, 0x4f, 0x75, 0x6b, 0x69, 0x74,
		0x65, 0x6c, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x78, 0x4b, 0x37,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x78, 0x4f, 0x56, 0x2d,
		0x56, 0x31, 0x30, 0x56, 0x65, 0x72, 0x74, 0x69, 0x73, 0x20, 0x59, 0x61, 0x72, 0x64, 0x56, 0x65,
		0x72, 0x74, 0x69, 0x73, 0x20, 0x35, 0x30, 0x32, 0x31, 0x20, 0x41, 0x69, 0x6d, 0x56, 0x65, 0x72,
		0x74, 0x69, 0x73, 0x20, 0x34, 0x30, 0x30, 0x34, 0x20, 0x59, 0x6f, 0x75, 0x56, 0x65, 0x72, 0x74,
		0x69, 0x73, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x76, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x37, 0x30, 0x33,
		0x32, 0x4c, 0x69, 0x76, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x37, 0x30, 0x33, 0x32, 0x51, 0x75,
		0x61, 0x6c, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x31, 0x30, 0x31, 0x30, 0x51, 0x75, 0x61, 0x6c, 0x63,
		0x6f, 0x72, 0x65, 0x20, 0x31, 0x30, 0x32, 0x37, 0x20, 0x34, 0x47, 0x51, 0x75, 0x61, 0x6c, 0x63,
		0x6f, 0x72, 0x65, 0x20, 0x31, 0x30, 0x32, 0x37, 0x20, 0x24, 0x31, 0x47, 0x4f, 0x76, 0x76, 0x69,
		0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x58, 0x31, 0x4f, 0x77, 0x77, 0x6f, 0x43, 0x61, 0x72, 0x6e,
		0x69, 0x76, 0x61, 0x6c, 0x20, 0x42, 0x35, 0x4f, 0x79, 0x73, 0x74, 0x65, 0x72, 0x73, 0x50, 0x61,
		0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x38, 0x30, 0x30, 0x69, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69,
		0x63, 0x45, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x45, 0x41, 0x74, 0x6c, 0x61, 0x6e,
		0x74, 0x69, 0x63, 0x34, 0x47, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x20, 0x34, 0x47,
		0x41, 0x6e, 0x74, 0x61, 0x72, 0x63, 0x74, 0x69, 0x63, 0x45, 0x41, 0x6e, 0x74, 0x61, 0x72, 0x63,
		0x74, 0x69, 0x63, 0x20, 0x45, 0x49, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x56, 0x49, 0x6e, 0x64, 0x69,
		0x61, 0x6e, 0x20, 0x56, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x24, 0x31, 0x54, 0x37,
		0x34, 0x4d, 0x61, 0x69, 0x5f, 0x33, 0x47, 0x54, 0x37, 0x34, 0x4d, 0x41, 0x69, 0x20, 0x33, 0x47,
		0x4f, 0x79, 0x79, 0x75, 0x54, 0x31, 0x31, 0x20, 0x33, 0x47, 0x4f, 0x7a, 0x6f, 0x6e, 0x65, 0x48,
		0x44, 0x50, 0x2d, 0x55, 0x50, 0x4d, 0x6f, 0x64, 0x65, 0x20, 0x31, 0x20, 0x52, 0x52, 0x4d, 0x6f,
		0x64, 0x65, 0x20, 0x31, 0x20, 0x52, 0x53, 0x4d, 0x6f, 0x64, 0x65, 0x20, 0x31, 0x20, 0x4d, 0x44,
		0x2d, 0x30, 0x31, 0x50, 0x50, 0x43, 0x42, 0x4f, 0x58, 0x41, 0x72, 0x74, 0x2d, 0x50, 0x43, 0x42,
		0x2d, 0x56, 0x31, 0x31, 0x36, 0x41, 0x72, 0x74, 0x42, 0x65, 0x65, 0x2d, 0x50, 0x43, 0x42, 0x2d,
		0x56, 0x32, 0x31, 0x36, 0x42, 0x65, 0x65, 0x43, 0x6c, 0x61, 0x70, 0x2d, 0x50, 0x43, 0x42, 0x2d,
		0x49, 0x33, 0x31, 0x36, 0x43, 0x6c, 0x61, 0x70, 0x50, 0x43, 0x42, 0x2d, 0x54, 0x31, 0x30, 0x33,
		0x43, 0x75, 0x72, 0x69, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x43, 0x42, 0x2d, 0x54, 0x37, 0x31,
		0x35, 0x54, 0x37, 0x31, 0x35, 0x50, 0x43, 0x44, 0x50, 0x48, 0x34, 0x30, 0x30, 0x31, 0x50, 0x43,
		0x44, 0x20, 0x41, 0x72, 0x67, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x61, 0x50, 0x4f, 0x43, 0x4f, 0x4d,
		0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x32, 0x31, 0x30, 0x39, 0x31, 0x31, 0x31, 0x36,
		0x41, 0x47, 0x4d, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x32, 0x32, 0x30, 0x31, 0x31,
		0x31, 0x37, 0x50, 0x47, 0x4d, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x33, 0x20, 0x4e, 0x46, 0x43,
		0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x33, 0x20, 0x47, 0x54, 0x46, 0x33, 0x20, 0x47, 0x54,
		0x43, 0x33, 0x43, 0x33, 0x31, 0x46, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x4f, 0x50, 0x54, 0x45,
		0x4c, 0x50, 0x39, 0x30, 0x30, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x50, 0x54, 0x56, 0x50, 0x55,
		0x4c, 0x49, 0x44, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x72, 0x64, 0x20, 0x42, 0x65, 0x6c, 0x6c, 0x44,
		0x41, 0x59, 0x54, 0x4f, 0x4e, 0x41, 0x2d, 0x47, 0x31, 0x32, 0x44, 0x61, 0x79, 0x74, 0x6f, 0x6e,
		0x61, 0x20, 0x47, 0x31, 0x32, 0x4d, 0x4f, 0x4e, 0x5a, 0x41, 0x2d, 0x54, 0x37, 0x4d, 0x6f, 0x6e,
		0x7a, 0x61, 0x20, 0x54, 0x37, 0x50, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x50, 0x61, 0x6c, 0x61,
		0x64, 0x69, 0x6e, 0x20, 0x54, 0x56, 0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x50, 0x61, 0x6c, 0x6d,
		0x54, 0x72, 0x65, 0x6f, 0x20, 0x24, 0x31, 0x54, 0x75, 0x6e, 0x67, 0x73, 0x74, 0x65, 0x6e, 0x50,
		0x56, 0x47, 0x31, 0x30, 0x30, 0x50, 0x65, 0x70, 0x69, 0x74, 0x6f, 0x50, 0x61, 0x6e, 0x61, 0x63,
		0x6f, 0x6d, 0x54, 0x2d, 0x69, 0x37, 0x30, 0x38, 0x44, 0x50, 0x61, 0x6e, 0x61, 0x73, 0x6f, 0x6e,
		0x69, 0x63, 0x50, 0x2d, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69,
		0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x50, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x58, 0x45, 0x6c,
		0x75, 0x67, 0x61, 0x20, 0x49, 0x37, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x24, 0x31, 0x4c, 0x75,
		0x6d, 0x69, 0x78, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x78, 0x20, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x50, 0x2d, 0x30, 0x32, 0x44, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x61, 0x64, 0x20,
		0x24, 0x31, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x61, 0x64, 0x20, 0x46, 0x5a, 0x2d, 0x42, 0x32,
		0x44, 0x50, 0x35, 0x35, 0x20, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x34, 0x47, 0x50, 0x35, 0x35, 0x20,
		0x4d, 0x61, 0x78, 0x50, 0x39, 0x30, 0x32, 0x69, 0x50, 0x61, 0x6e, 0x61, 0x73, 0x6f, 0x6e, 0x69,
		0x63, 0x20, 0x4d, 0x49, 0x4c, 0x20, 0x44, 0x4c, 0x4e, 0x41, 0x56, 0x69, 0x65, 0x72, 0x61, 0x20,
		0x43, 0x61, 0x73, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x45, 0x6c, 0x75, 0x67,
		0x61, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x50, 0x61, 0x6e, 0x74,
		0x65, 0x63, 0x68, 0x41, 0x44, 0x52, 0x39, 0x31, 0x30, 0x4c, 0x53, 0x74, 0x61, 0x72, 0x20, 0x51,
		0x49, 0x4d, 0x2d, 0x41, 0x38, 0x37, 0x30, 0x4b, 0x56, 0x65, 0x67, 0x61, 0x20, 0x49, 0x72, 0x6f,
		0x6e, 0x50, 0x61, 0x72, 0x72, 0x6f, 0x74, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x65,
		0x6c, 0x69, 0x74, 0x74, 0x50, 0x65, 0x6c, 0x69, 0x74, 0x74, 0x20, 0x54, 0x31, 0x20, 0x4d, 0x41,
		0x58, 0x54, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x6c, 0x69, 0x74, 0x74, 0x20, 0x54, 0x31,
		0x20, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x65, 0x6e, 0x64,
		0x6f, 0x6f, 0x58, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x70, 0x65, 0x6e, 0x64, 0x6f, 0x6f, 0x20,
		0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x35, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x50,
		0x65, 0x6e, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x45, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x69, 0x78,
		0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x37, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x6c,
		0x69, 0x6d, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x20, 0x58, 0x35, 0x51, 0x75, 0x61, 0x64,
		0x72, 0x61, 0x20, 0x24, 0x31, 0x50, 0x65, 0x72, 0x66, 0x65, 0x6f, 0x50, 0x65, 0x72, 0x66, 0x65,
		0x6f, 0x5f, 0x50, 0x46, 0x5f, 0x41, 0x34, 0x35, 0x35, 0x31, 0x43, 0x48, 0x52, 0x4f, 0x4e, 0x4f,
		0x50, 0x65, 0x72, 0x66, 0x65, 0x6f, 0x5f, 0x50, 0x46, 0x5f, 0x41, 0x34, 0x35, 0x35, 0x32, 0x52,
		0x41, 0x54, 0x45, 0x50, 0x68, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x43, 0x6c, 0x75, 0x65, 0x20, 0x4c,
		0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x33,
		0x2b, 0x43, 0x6c, 0x75, 0x65, 0x20, 0x24, 0x31, 0x50, 0x68, 0x69, 0x6c, 0x63, 0x6f, 0x50, 0x54,
		0x42, 0x37, 0x50, 0x41, 0x50, 0x68, 0x69, 0x6c, 0x69, 0x70, 0x73, 0x58, 0x65, 0x6e, 0x69, 0x75,
		0x6d, 0x20, 0x24, 0x31, 0x24, 0x31, 0x2f, 0x39, 0x36, 0x20, 0x34, 0x4b, 0x20, 0x55, 0x48, 0x44,
		0x24, 0x31, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x42,
		0x6c, 0x75, 0x2d, 0x72, 0x61, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x28, 0x42,
		0x44, 0x50, 0x24, 0x31, 0x29, 0x4e, 0x65, 0x74, 0x54, 0x56, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65,
		0x73, 0x46, 0x69, 0x73, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6d, 0x61,
		0x78, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x58, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x4d,
		0x61, 0x72, 0x73, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x58, 0x50, 0x69, 0x50, 0x4f, 0x50, 0x69,
		0x70, 0x6f, 0x4d, 0x39, 0x50, 0x72, 0x6f, 0x50, 0x69, 0x63, 0x6f, 0x50, 0x69, 0x6f, 0x6e, 0x65,
		0x65, 0x72, 0x64, 0x76, 0x72, 0x37, 0x30, 0x30, 0x70, 0x69, 0x44, 0x56, 0x52, 0x37, 0x30, 0x30,
		0x50, 0x49, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x42, 0x44, 0x50, 0x2d, 0x31, 0x36, 0x30, 0x50, 0x69,
		0x78, 0x65, 0x6c, 0x61, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x65, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x50,
		0x69, 0x78, 0x65, 0x6c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x69, 0x78, 0x75, 0x73, 0x52, 0x69,
		0x64, 0x65, 0x20, 0x24, 0x31, 0x47, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x54, 0x68, 0x72, 0x65, 0x65,
		0x20, 0x76, 0x24, 0x31, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x54, 0x77, 0x6f, 0x50, 0x6c, 0x61, 0x79,
		0x20, 0x46, 0x69, 0x76, 0x65, 0x68, 0x69, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x70, 0x72, 0x69,
		0x6e, 0x74, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x37, 0x20, 0x33, 0x47, 0x48, 0x69, 0x4d, 0x61,
		0x78, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x4a, 0x6f, 0x6b, 0x65, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42, 0x6c, 0x61, 0x7a,
		0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x52, 0x61, 0x7a, 0x65, 0x50, 0x69,
		0x78, 0x75, 0x73, 0x5f, 0x4a, 0x65, 0x74, 0x4a, 0x65, 0x74, 0x70, 0x69, 0x78, 0x75, 0x73, 0x20,
		0x68, 0x69, 0x74, 0x20, 0x32, 0x48, 0x69, 0x74, 0x20, 0x32, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74,
		0x20, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x50, 0x6c, 0x6f, 0x79, 0x65, 0x72,
		0x4d, 0x4f, 0x4d, 0x4f, 0x6d, 0x69, 0x6e, 0x69, 0x53, 0x4d, 0x4f, 0x4d, 0x4f, 0x20, 0x6d, 0x69,
		0x6e, 0x69, 0x20, 0x53, 0x6d, 0x6f, 0x6d, 0x6f, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x47,
		0x53, 0x4d, 0x4f, 0x4d, 0x4f, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x47, 0x53, 0x4d, 0x4f,
		0x4d, 0x4f, 0x20, 0x24, 0x31, 0x50, 0x6c, 0x75, 0x6d, 0x5a, 0x34, 0x30, 0x35, 0x47, 0x61, 0x74,
		0x6f, 0x72, 0x20, 0x33, 0x5a, 0x34, 0x30, 0x37, 0x41, 0x78, 0x65, 0x20, 0x34, 0x5a, 0x35, 0x31,
		0x36, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73, 0x5a, 0x38, 0x31, 0x31, 0x4f, 0x70, 0x74, 0x69,
		0x6d, 0x61, 0x78, 0x20, 0x31, 0x31, 0x5a, 0x37, 0x30, 0x39, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61,
		0x78, 0x20, 0x37, 0x5a, 0x37, 0x31, 0x32, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x78, 0x20, 0x31,
		0x32, 0x50, 0x6c, 0x75, 0x7a, 0x7a, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b,
		0x41, 0x31, 0x30, 0x20, 0x33, 0x47, 0x41, 0x31, 0x30, 0x53, 0x55, 0x52, 0x46, 0x70, 0x61, 0x64,
		0x20, 0x32, 0x53, 0x55, 0x52, 0x46, 0x70, 0x61, 0x64, 0x20, 0x33, 0x20, 0x24, 0x31, 0x2e, 0x24,
		0x32, 0x22, 0x53, 0x55, 0x52, 0x46, 0x70, 0x61, 0x64, 0x20, 0x34, 0x20, 0x24, 0x31, 0x50, 0x6f,
		0x69, 0x6e, 0x74, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x4d, 0x38, 0x30, 0x50, 0x6f,
		0x69, 0x6e, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x56, 0x69, 0x65, 0x77, 0x50, 0x4f, 0x56, 0x5f, 0x54,
		0x56, 0x2d, 0x48, 0x44, 0x4d, 0x49, 0x2d, 0x4b, 0x42, 0x2d, 0x30, 0x31, 0x48, 0x44, 0x4d, 0x49,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x44, 0x6f, 0x6e, 0x67, 0x6c, 0x65,
		0x50, 0x4f, 0x56, 0x5f, 0x54, 0x56, 0x2d, 0x48, 0x44, 0x4d, 0x49, 0x2d, 0x32, 0x30, 0x30, 0x42,
		0x54, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x43, 0x20, 0x48, 0x44, 0x4d, 0x49, 0x20, 0x44, 0x6f,
		0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x4f, 0x42, 0x2d, 0x35, 0x30, 0x34, 0x35, 0x4d, 0x6f, 0x62, 0x69,
		0x69, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x30, 0x34, 0x35, 0x50, 0x4f, 0x56, 0x5f,
		0x54, 0x41, 0x42, 0x2d, 0x50, 0x35, 0x30, 0x36, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35, 0x30, 0x36,
		0x20, 0x4e, 0x61, 0x76, 0x69, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35, 0x30, 0x37, 0x20, 0x4e, 0x61,
		0x76, 0x69, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x35, 0x32, 0x37, 0x53, 0x4f,
		0x4e, 0x59, 0x58, 0x20, 0x35, 0x32, 0x37, 0x53, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d,
		0x50, 0x35, 0x34, 0x37, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35, 0x34, 0x37, 0x20, 0x4e, 0x61, 0x76,
		0x69, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x52, 0x4f, 0x54, 0x41, 0x42, 0x32,
		0x36, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x32, 0x36, 0x20, 0x58, 0x58, 0x4c, 0x20, 0x49,
		0x50, 0x53, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x32, 0x35, 0x58, 0x58, 0x4c, 0x50, 0x4f,
		0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x4c, 0x31, 0x30, 0x31, 0x35, 0x4d, 0x6f, 0x62, 0x69,
		0x69, 0x20, 0x31, 0x30, 0x31, 0x35, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4d,
		0x6f, 0x62, 0x69, 0x69, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x50, 0x6f, 0x6c, 0x61,
		0x72, 0x4c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x34, 0x30,
		0x30, 0x35, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x43, 0x34, 0x50, 0x35, 0x30, 0x30, 0x35,
		0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x43, 0x35, 0x50, 0x34, 0x30, 0x30, 0x36, 0x41, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x20, 0x44, 0x34, 0x50, 0x53, 0x50, 0x54, 0x44, 0x32, 0x31, 0x4e, 0x41,
		0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x44, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x34, 0x35,
		0x32, 0x36, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x45, 0x50, 0x53, 0x50, 0x43, 0x4c, 0x33,
		0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x43, 0x36, 0x50, 0x35, 0x30, 0x30, 0x36,
		0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x50, 0x35, 0x35, 0x32, 0x36, 0x41, 0x43, 0x6f,
		0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x53, 0x50, 0x43, 0x4b, 0x32,
		0x30, 0x4e, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x32, 0x50, 0x53, 0x50, 0x43, 0x4b,
		0x32, 0x31, 0x4e, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x35, 0x30, 0x32, 0x36, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4c, 0x50, 0x53,
		0x50, 0x43, 0x4c, 0x32, 0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4c, 0x32, 0x50,
		0x53, 0x50, 0x43, 0x4d, 0x32, 0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4d, 0x32,
		0x50, 0x35, 0x30, 0x34, 0x36, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x50, 0x35, 0x73, 0x50,
		0x35, 0x35, 0x32, 0x35, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x51, 0x35, 0x73, 0x50, 0x35,
		0x30, 0x34, 0x37, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x5a, 0x50, 0x53, 0x50, 0x43, 0x5a,
		0x32, 0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x5a, 0x32, 0x50, 0x35, 0x30, 0x32,
		0x35, 0x41, 0x4c, 0x35, 0x73, 0x50, 0x72, 0x6f, 0x34, 0x36, 0x31, 0x31, 0x50, 0x52, 0x4f, 0x35,
		0x30, 0x32, 0x33, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x35, 0x50, 0x52, 0x4f, 0x56,
		0x34, 0x30, 0x30, 0x41, 0x67, 0x61, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x56, 0x33, 0x35, 0x30, 0x50,
		0x72, 0x6f, 0x56, 0x33, 0x35, 0x30, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x20, 0x35, 0x50, 0x72, 0x6f,
		0x24, 0x31, 0x50, 0x53, 0x50, 0x54, 0x33, 0x35, 0x30, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x33,
		0x35, 0x30, 0x20, 0x47, 0x72, 0x69, 0x73, 0x50, 0x53, 0x4e, 0x2d, 0x48, 0x31, 0x31, 0x36, 0x53,
		0x6e, 0x61, 0x70, 0x4d, 0x49, 0x44, 0x53, 0x31, 0x38, 0x35, 0x50, 0x52, 0x50, 0x75, 0x72, 0x65,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x50, 0x6f, 0x6c, 0x65, 0x73, 0x74, 0x61, 0x72, 0x50, 0x6f,
		0x6c, 0x79, 0x50, 0x61, 0x64, 0x50, 0x6f, 0x6c, 0x79, 0x74, 0x72, 0x6f, 0x6e, 0x52, 0x32, 0x35,
		0x30, 0x38, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x51, 0x2d, 0x46, 0x69, 0x76, 0x65, 0x52,
		0x32, 0x34, 0x30, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x32, 0x58, 0x52, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x20, 0x52, 0x32, 0x34, 0x30, 0x32, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20,
		0x52, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x52, 0x32, 0x52, 0x6f, 0x63, 0x6b, 0x65,
		0x74, 0x20, 0x52, 0x33, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x53, 0x31, 0x52, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x20, 0x53, 0x32, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x31, 0x52,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x33, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54,
		0x36, 0x20, 0x53, 0x45, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x36, 0x52, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x20, 0x54, 0x37, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x34, 0x52,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x4a, 0x65, 0x74, 0x7a, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74,
		0x20, 0x4a, 0x65, 0x74, 0x7a, 0x20, 0x35, 0x2e, 0x30, 0x34, 0x47, 0x34, 0x35, 0x30, 0x5a, 0x61,
		0x70, 0x20, 0x35, 0x57, 0x36, 0x35, 0x30, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x52,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x57, 0x37, 0x34, 0x35, 0x32, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61,
		0x20, 0x53, 0x32, 0x57, 0x37, 0x35, 0x35, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x56,
		0x35, 0x57, 0x38, 0x35, 0x37, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x56, 0x37, 0x52,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x4c, 0x35, 0x30, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20,
		0x37, 0x53, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x34, 0x47, 0x35,
		0x30, 0x30, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x43, 0x6c, 0x65, 0x6f, 0x57, 0x38, 0x34, 0x38,
		0x30, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x34, 0x20, 0x57, 0x38, 0x34, 0x38, 0x30,
		0x57, 0x37, 0x35, 0x33, 0x31, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x20, 0x56, 0x57, 0x37, 0x34,
		0x33, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x57, 0x37,
		0x34, 0x33, 0x30, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x50, 0x6f, 0x73, 0x68, 0x5a, 0x61, 0x70,
		0x20, 0x36, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x46, 0x6c,
		0x61, 0x7a, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x5a, 0x61, 0x70, 0x20,
		0x36, 0x20, 0x50, 0x6f, 0x73, 0x68, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x57, 0x31, 0x31, 0x30,
		0x30, 0x53, 0x51, 0x32, 0x33, 0x35, 0x32, 0x43, 0x6f, 0x73, 0x6d, 0x69, 0x63, 0x61, 0x20, 0x54,
		0x37, 0x38, 0x30, 0x30, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x50, 0x61, 0x64, 0x50, 0x6f,
		0x6d, 0x70, 0x50, 0x6f, 0x70, 0x70, 0x6f, 0x78, 0x50, 0x6f, 0x70, 0x70, 0x6f, 0x78, 0x20, 0x50,
		0x33, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65, 0x20,
		0x52, 0x65, 0x61, 0x72, 0x20, 0x53, 0x65, 0x61, 0x74, 0x20, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x74,
		0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x59,
		0x50, 0x59, 0x5f, 0x53, 0x34, 0x35, 0x30, 0x59, 0x50, 0x59, 0x20, 0x53, 0x34, 0x35, 0x30, 0x54,
		0x77, 0x69, 0x73, 0x74, 0x20, 0x34, 0x20, 0x24, 0x31, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x34,
		0x54, 0x31, 0x30, 0x38, 0x35, 0x4d, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20, 0x50, 0x52, 0x4f, 0x20,
		0x58, 0x4d, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x58, 0x50, 0x6f, 0x73,
		0x69, 0x74, 0x69, 0x76, 0x6f, 0x20, 0x42, 0x47, 0x48, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x54,
		0x77, 0x69, 0x73, 0x74, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x54, 0x77, 0x69, 0x73, 0x74,
		0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x33, 0x32, 0x47, 0x42, 0x54, 0x77, 0x69, 0x73, 0x74,
		0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x54,
		0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x32,
		0x20, 0x46, 0x69, 0x74, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x32, 0x20, 0x47, 0x6f, 0x54, 0x77,
		0x69, 0x73, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x58,
		0x4c, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x53, 0x45, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x24,
		0x31, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x49, 0x54, 0x31, 0x30, 0x36, 0x30, 0x42, 0x59, 0x70, 0x79,
		0x20, 0x24, 0x31, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x54, 0x61, 0x62, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x6f, 0x31, 0x38, 0x36, 0x48, 0x53, 0x32, 0x30, 0x38, 0x30, 0x35, 0x33, 0x31, 0x58, 0x31,
		0x41, 0x58, 0x45, 0x5f, 0x49, 0x49, 0x41, 0x78, 0x65, 0x20, 0x49, 0x49, 0x31, 0x38, 0x36, 0x48,
		0x53, 0x31, 0x30, 0x35, 0x30, 0x35, 0x33, 0x31, 0x50, 0x35, 0x34, 0x31, 0x31, 0x38, 0x35, 0x46,
		0x54, 0x35, 0x30, 0x35, 0x30, 0x32, 0x33, 0x31, 0x50, 0x35, 0x31, 0x31, 0x31, 0x38, 0x36, 0x46,
		0x54, 0x31, 0x30, 0x38, 0x30, 0x32, 0x33, 0x31, 0x50, 0x35, 0x37, 0x31, 0x31, 0x38, 0x36, 0x48,
		0x53, 0x31, 0x30, 0x35, 0x30, 0x32, 0x33, 0x32, 0x50, 0x36, 0x33, 0x30, 0x50, 0x72, 0x65, 0x73,
		0x74, 0x69, 0x67, 0x69, 0x6f, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x69, 0x6f, 0x20, 0x35,
		0x35, 0x30, 0x30, 0x20, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x35, 0x35, 0x30, 0x30, 0x20, 0x44, 0x75, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x6f, 0x50, 0x53, 0x50, 0x35, 0x35,
		0x35, 0x31, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x53, 0x35, 0x50, 0x53, 0x50,
		0x37, 0x35, 0x39, 0x30, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x56, 0x37, 0x20,
		0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x35, 0x31, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61,
		0x63, 0x65, 0x20, 0x53, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x34, 0x37, 0x30,
		0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x58, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35,
		0x33, 0x30, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x5a, 0x35, 0x50, 0x53, 0x50,
		0x33, 0x35, 0x33, 0x33, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x5a, 0x33, 0x50,
		0x53, 0x50, 0x35, 0x35, 0x31, 0x35, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x50,
		0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x35, 0x32, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65,
		0x20, 0x52, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x30, 0x36, 0x44, 0x55,
		0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x51, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x31,
		0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50,
		0x53, 0x50, 0x37, 0x35, 0x30, 0x31, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x52,
		0x37, 0x50, 0x53, 0x50, 0x37, 0x35, 0x37, 0x30, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65,
		0x20, 0x50, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x37, 0x32, 0x44, 0x55,
		0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x42, 0x37, 0x50, 0x53, 0x50, 0x33, 0x35, 0x35, 0x32,
		0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x48, 0x33, 0x50, 0x53, 0x50, 0x35, 0x35, 0x32,
		0x33, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x48, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50,
		0x53, 0x50, 0x33, 0x35, 0x31, 0x35, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x4d, 0x33,
		0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x34, 0x39, 0x35, 0x44, 0x55, 0x4f, 0x4d, 0x75,
		0x7a, 0x65, 0x20, 0x56, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x33,
		0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x44, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53,
		0x50, 0x35, 0x35, 0x32, 0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x42, 0x35, 0x50,
		0x53, 0x50, 0x35, 0x35, 0x31, 0x38, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x58, 0x35,
		0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x35, 0x33, 0x44, 0x55, 0x4f, 0x4d, 0x75,
		0x7a, 0x65, 0x20, 0x46, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x30, 0x32,
		0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x41, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x34,
		0x35, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x45, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50,
		0x53, 0x50, 0x37, 0x35, 0x31, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x45, 0x37,
		0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x31, 0x44, 0x55, 0x4f, 0x4d, 0x75,
		0x7a, 0x65, 0x20, 0x47, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x32, 0x32,
		0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x47, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53,
		0x50, 0x37, 0x35, 0x35, 0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x47, 0x37, 0x20,
		0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x31, 0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a,
		0x65, 0x20, 0x43, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x43, 0x33, 0x50,
		0x53, 0x50, 0x33, 0x35, 0x31, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x42, 0x33,
		0x50, 0x53, 0x50, 0x33, 0x35, 0x33, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x46,
		0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x37, 0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20,
		0x4a, 0x33, 0x50, 0x53, 0x50, 0x35, 0x35, 0x32, 0x34, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65,
		0x20, 0x4a, 0x35, 0x50, 0x53, 0x50, 0x37, 0x35, 0x31, 0x31, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a,
		0x65, 0x20, 0x42, 0x37, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x34, 0x44, 0x55, 0x4f, 0x57, 0x69,
		0x7a, 0x65, 0x20, 0x55, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x33, 0x44, 0x55, 0x4f, 0x57,
		0x69, 0x7a, 0x65, 0x20, 0x56, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x31, 0x36, 0x44, 0x55, 0x4f,
		0x57, 0x69, 0x7a, 0x65, 0x20, 0x59, 0x41, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x30, 0x36, 0x44,
		0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x59, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x32, 0x33,
		0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x52, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x37,
		0x31, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x51, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50,
		0x53, 0x50, 0x33, 0x35, 0x31, 0x30, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x47, 0x33,
		0x50, 0x53, 0x50, 0x33, 0x35, 0x33, 0x37, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x4e,
		0x56, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x32, 0x38, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65,
		0x20, 0x50, 0x58, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x32, 0x37, 0x44, 0x55, 0x4f, 0x57, 0x69,
		0x7a, 0x65, 0x20, 0x4e, 0x4b, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x36, 0x38, 0x44, 0x55, 0x4f,
		0x57, 0x69, 0x7a, 0x65, 0x20, 0x4f, 0x4b, 0x33, 0x50, 0x4d, 0x54, 0x33, 0x32, 0x37, 0x37, 0x5f,
		0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64, 0x20, 0x52, 0x61, 0x6e, 0x67, 0x65,
		0x72, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x54, 0x34, 0x32, 0x30, 0x38,
		0x4e, 0x6f, 0x64, 0x65, 0x20, 0x41, 0x38, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x54, 0x34, 0x37, 0x37,
		0x31, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x41, 0x31, 0x30, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x50, 0x37,
		0x30, 0x37, 0x30, 0x43, 0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64, 0x20, 0x34,
		0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47,
		0x47, 0x65, 0x6f, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x72, 0x20,
		0x33, 0x47, 0x65, 0x6f, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x72,
		0x20, 0x32, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x50, 0x4d,
		0x54, 0x33, 0x32, 0x38, 0x37, 0x5f, 0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x20, 0x38, 0x2e, 0x30, 0x20, 0x33, 0x47, 0x50, 0x4d,
		0x54, 0x34, 0x32, 0x33, 0x38, 0x5f, 0x34, 0x47, 0x51, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x75, 0x6c,
		0x74, 0x69, 0x50, 0x61, 0x64, 0x20, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32,
		0x47, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x4d, 0x75, 0x7a, 0x65,
		0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x20, 0x4d, 0x61,
		0x78, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x70, 0x61, 0x64, 0x50, 0x44, 0x2d, 0x33, 0x31, 0x32, 0x37,
		0x4e, 0x43, 0x50, 0x44, 0x2d, 0x33, 0x31, 0x32, 0x37, 0x50, 0x72, 0x69, 0x6d, 0x75, 0x78, 0x49,
		0x4f, 0x58, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x20, 0x36, 0x4b,
		0x61, 0x70, 0x70, 0x61, 0x20, 0x24, 0x31, 0x4b, 0x61, 0x70, 0x70, 0x61, 0x42, 0x65, 0x74, 0x61,
		0x20, 0x32, 0x55, 0x50, 0x5a, 0x6f, 0x6e, 0x64, 0x61, 0x20, 0x34, 0x53, 0x69, 0x72, 0x6f, 0x63,
		0x6f, 0x20, 0x36, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x6f, 0x20, 0x59, 0x50, 0x72, 0x69, 0x78, 0x74,
		0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x53, 0x63, 0x61, 0x6e, 0x50, 0x4c, 0x54, 0x24, 0x31, 0x50, 0x4c,
		0x54, 0x24, 0x31, 0x47, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
		0x6c, 0x69, 0x6e, 0x65, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x20, 0x58, 0x4c, 0x50, 0x72, 0x6f,
		0x6c, 0x6f, 0x67, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x72, 0x75, 0x6c, 0x79, 0x50, 0x75, 0x72, 0x69,
		0x73, 0x6d, 0x4c, 0x69, 0x62, 0x72, 0x65, 0x6d, 0x20, 0x35, 0x51, 0x2d, 0x42, 0x6f, 0x78, 0x51,
		0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x51, 0x2e, 0x42, 0x65, 0x6c, 0x6c, 0x51, 0x54, 0x41, 0x42,
		0x31, 0x30, 0x45, 0x57, 0x51, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4a, 0x61, 0x7a, 0x7a, 0x58,
		0x20, 0x4a, 0x53, 0x37, 0x20, 0x50, 0x52, 0x4f, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x58, 0x20, 0x4a,
		0x53, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x58, 0x20, 0x4a, 0x53, 0x24,
		0x31, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x58, 0x31, 0x53, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x41, 0x36,
		0x30, 0x30, 0x5a, 0x31, 0x32, 0x20, 0x50, 0x52, 0x4f, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x5a, 0x31,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x32, 0x20, 0x4e, 0x6f, 0x69, 0x72, 0x48, 0x6f, 0x74, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x32, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x4c, 0x54, 0x24, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x4c, 0x55, 0x4e, 0x41, 0x20, 0x50, 0x52, 0x4f, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x50,
		0x72, 0x6f, 0x56, 0x49, 0x54, 0x41, 0x20, 0x53, 0x56, 0x69, 0x74, 0x61, 0x20, 0x53, 0x4e, 0x49,
		0x43, 0x45, 0x20, 0x53, 0x4e, 0x69, 0x63, 0x65, 0x20, 0x53, 0x69, 0x24, 0x31, 0x69, 0x20, 0x28,
		0x32, 0x30, 0x24, 0x32, 0x29, 0x69, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x24, 0x31, 0x29, 0x69,
		0x38, 0x69, 0x20, 0x50, 0x52, 0x4f, 0x69, 0x38, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x20, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x52, 0x4f, 0x51, 0x20, 0x49, 0x6e, 0x66,
		0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x20, 0x45, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x69, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47,
		0x4c, 0x69, 0x24, 0x31, 0x20, 0x54, 0x61, 0x62, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x79, 0x51, 0x54, 0x45, 0x43, 0x48, 0x51, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x51, 0x37, 0x53,
		0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x37, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51,
		0x37, 0x53, 0x35, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x37, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x20,
		0x34, 0x47, 0x51, 0x38, 0x53, 0x35, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x32, 0x51, 0x38, 0x20, 0x35,
		0x2e, 0x35, 0x22, 0x20, 0x34, 0x47, 0x51, 0x38, 0x53, 0x36, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x38,
		0x20, 0x36, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x38, 0x53, 0x35, 0x49, 0x4e, 0x34, 0x47,
		0x50, 0x51, 0x38, 0x20, 0x35, 0x2e, 0x31, 0x22, 0x20, 0x34, 0x47, 0x51, 0x39, 0x53, 0x35, 0x49,
		0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x39, 0x53,
		0x35, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x20, 0x34, 0x47,
		0x51, 0x31, 0x30, 0x53, 0x35, 0x33, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x31, 0x30, 0x20, 0x35, 0x2e,
		0x33, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x53, 0x35, 0x37, 0x49, 0x4e, 0x34, 0x47, 0x51,
		0x31, 0x30, 0x20, 0x35, 0x2e, 0x37, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x20, 0x35, 0x2e,
		0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x53, 0x36, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x31,
		0x30, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x36, 0x54, 0x37, 0x49, 0x4e, 0x51,
		0x37, 0x54, 0x31, 0x30, 0x49, 0x4e, 0x50, 0x51, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x51,
		0x38, 0x54, 0x31, 0x30, 0x49, 0x4e, 0x51, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x51, 0x39,
		0x54, 0x37, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47,
		0x51, 0x39, 0x54, 0x39, 0x49, 0x4e, 0x51, 0x39, 0x20, 0x39, 0x2e, 0x30, 0x22, 0x51, 0x39, 0x54,
		0x31, 0x30, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x34,
		0x47, 0x39, 0x37, 0x52, 0x2d, 0x32, 0x39, 0x37, 0x52, 0x32, 0x51, 0x6e, 0x65, 0x74, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x48,
		0x79, 0x6e, 0x65, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x6b,
		0x20, 0x4b, 0x31, 0x48, 0x79, 0x6e, 0x65, 0x78, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x48, 0x79, 0x6e, 0x65, 0x78, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x76, 0x69, 0x6e, 0x20, 0x24, 0x31,
		0x51, 0x74, 0x65, 0x6b, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x4c, 0x69, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x55, 0x56, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x55, 0x56, 0x20, 0x55, 0x70,
		0x55, 0x70, 0x51, 0x2d, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x6f, 0x20, 0x24, 0x31, 0x51, 0x2d, 0x50,
		0x75, 0x6c, 0x73, 0x65, 0x20, 0x37, 0x30, 0x4d, 0x51, 0x2d, 0x57, 0x61, 0x76, 0x65, 0x20, 0x24,
		0x31, 0x51, 0x75, 0x62, 0x6f, 0x51, 0x75, 0x65, 0x63, 0x68, 0x75, 0x61, 0x51, 0x75, 0x65, 0x63,
		0x68, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x51, 0x75, 0x6d, 0x6f, 0x56,
		0x65, 0x67, 0x61, 0x20, 0x24, 0x31, 0x59, 0x6f, 0x6f, 0x64, 0x61, 0x53, 0x69, 0x72, 0x69, 0x75,
		0x73, 0x20, 0x24, 0x31, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x24, 0x31, 0x52, 0x2d, 0x54, 0x56,
		0x42, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x52, 0x43, 0x41, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x73, 0x52, 0x43, 0x41, 0x20, 0x52, 0x4c, 0x54, 0x50, 0x34, 0x30, 0x32, 0x38, 0x52, 0x4c, 0x54,
		0x50, 0x34, 0x30, 0x32, 0x38, 0x52, 0x43, 0x54, 0x36, 0x35, 0x31, 0x33, 0x57, 0x38, 0x37, 0x47,
		0x61, 0x6c, 0x69, 0x6c, 0x65, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22,
		0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x72, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x56, 0x6f, 0x79, 0x61,
		0x67, 0x65, 0x72, 0x20, 0x49, 0x49, 0x49, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x52, 0x43, 0x54, 0x36,
		0x37, 0x37, 0x33, 0x57, 0x32, 0x32, 0x42, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x72, 0x20, 0x49,
		0x49, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x20, 0x31, 0x30, 0x2e, 0x30,
		0x22, 0x52, 0x43, 0x54, 0x36, 0x32, 0x30, 0x33, 0x57, 0x34, 0x36, 0x4c, 0x50, 0x72, 0x6f, 0x20,
		0x31, 0x30, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x49, 0x49, 0x52, 0x43, 0x54,
		0x36, 0x41, 0x30, 0x36, 0x50, 0x32, 0x32, 0x45, 0x6e, 0x64, 0x65, 0x61, 0x76, 0x6f, 0x72, 0x20,
		0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x48, 0x44, 0x56, 0x69, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x36, 0x30, 0x33, 0x57,
		0x34, 0x37, 0x4d, 0x37, 0x56, 0x69, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30,
		0x2e, 0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x36, 0x31, 0x33, 0x57, 0x32, 0x33, 0x50, 0x44, 0x65,
		0x6c, 0x74, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x2e, 0x36, 0x22, 0x52, 0x43, 0x54,
		0x24, 0x31, 0x52, 0x43, 0x24, 0x31, 0x52, 0x45, 0x44, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x67, 0x65,
		0x6e, 0x20, 0x4f, 0x6e, 0x65, 0x52, 0x49, 0x4d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72,
		0x72, 0x79, 0x20, 0x44, 0x54, 0x45, 0x4b, 0x36, 0x30, 0x4b, 0x45, 0x59, 0x6f, 0x6e, 0x65, 0x42,
		0x42, 0x43, 0x31, 0x30, 0x30, 0x2d, 0x31, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x4d, 0x6f, 0x74,
		0x69, 0x6f, 0x6e, 0x4b, 0x45, 0x59, 0x32, 0x20, 0x4c, 0x45, 0x4b, 0x45, 0x59, 0x32, 0x42, 0x42,
		0x46, 0x31, 0x30, 0x30, 0x2d, 0x38, 0x4b, 0x45, 0x59, 0x32, 0x20, 0x53, 0x69, 0x6c, 0x76, 0x65,
		0x72, 0x42, 0x42, 0x46, 0x31, 0x30, 0x30, 0x2d, 0x39, 0x4b, 0x45, 0x59, 0x32, 0x20, 0x42, 0x6c,
		0x61, 0x63, 0x6b, 0x42, 0x42, 0x47, 0x31, 0x30, 0x30, 0x2d, 0x31, 0x42, 0x42, 0x48, 0x31, 0x30,
		0x30, 0x2d, 0x31, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x20, 0x58, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x50, 0x72, 0x69, 0x76, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42,
		0x65, 0x72, 0x72, 0x79, 0x20, 0x44, 0x54, 0x45, 0x4b, 0x35, 0x30, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72,
		0x72, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x6f, 0x6f, 0x6b, 0x39, 0x33, 0x30, 0x30, 0x43,
		0x75, 0x72, 0x76, 0x65, 0x20, 0x33, 0x47, 0x20, 0x39, 0x33, 0x30, 0x30, 0x43, 0x75, 0x72, 0x76,
		0x65, 0x20, 0x24, 0x31, 0x39, 0x36, 0x33, 0x30, 0x54, 0x6f, 0x75, 0x72, 0x20, 0x39, 0x36, 0x33,
		0x30, 0x39, 0x37, 0x32, 0x30, 0x54, 0x6f, 0x72, 0x63, 0x68, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61,
		0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x52, 0x4f, 0x41, 0x44, 0x4d, 0x41, 0x58, 0x46, 0x6f,
		0x72, 0x74, 0x69, 0x75, 0x73, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x37, 0x52, 0x54, 0x20, 0x50,
		0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x63, 0x6b, 0x20, 0x24, 0x31, 0x52, 0x61,
		0x6b, 0x75, 0x74, 0x65, 0x6e, 0x5a, 0x52, 0x30, 0x31, 0x42, 0x69, 0x67, 0x33, 0x39, 0x31, 0x37,
		0x4a, 0x52, 0x42, 0x69, 0x67, 0x20, 0x53, 0x50, 0x37, 0x31, 0x30, 0x48, 0x61, 0x6e, 0x64, 0x43,
		0x33, 0x33, 0x30, 0x43, 0x33, 0x33, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x52, 0x61, 0x6d, 0x6f,
		0x73, 0x4d, 0x4f, 0x53, 0x31, 0x6d, 0x61, 0x78, 0x4d, 0x4f, 0x53, 0x31, 0x20, 0x4d, 0x61, 0x78,
		0x57, 0x32, 0x32, 0x50, 0x52, 0x4f, 0x20, 0x33, 0x47, 0x57, 0x32, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x33, 0x47, 0x52, 0x61, 0x73, 0x70, 0x62, 0x65, 0x72, 0x72, 0x79, 0x52, 0x61, 0x76, 0x6f,
		0x7a, 0x52, 0x61, 0x7a, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x52, 0x65, 0x61,
		0x63, 0x68, 0x52, 0x65, 0x61, 0x64, 0x62, 0x6f, 0x79, 0x43, 0x31, 0x38, 0x20, 0x4d, 0x61, 0x78,
		0x43, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x65, 0x51, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58,
		0x31, 0x38, 0x32, 0x37, 0x33, 0x69, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x31, 0x39,
		0x39, 0x33, 0x58, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x31, 0x37, 0x51,
		0x32, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x37, 0x33, 0x51, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x52, 0x4d, 0x58, 0x32, 0x32, 0x30, 0x35, 0x51, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x52, 0x4d, 0x58, 0x33, 0x31, 0x36, 0x31, 0x51, 0x33, 0x20, 0x35, 0x47, 0x58, 0x37, 0x20,
		0x35, 0x47, 0x58, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x58, 0x54, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x35, 0x69, 0x52, 0x4d, 0x58, 0x31, 0x39, 0x32, 0x39, 0x35, 0x73, 0x36, 0x69, 0x52,
		0x4d, 0x58, 0x32, 0x30, 0x30, 0x32, 0x36, 0x53, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58,
		0x32, 0x31, 0x30, 0x33, 0x37, 0x49, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x37, 0x30, 0x52, 0x4d, 0x58,
		0x33, 0x31, 0x31, 0x35, 0x58, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x45, 0x78, 0x74, 0x72, 0x65,
		0x6d, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x4d, 0x58, 0x33, 0x30, 0x38,
		0x31, 0x52, 0x4d, 0x58, 0x33, 0x30, 0x38, 0x35, 0x52, 0x4d, 0x58, 0x33, 0x31, 0x35, 0x31, 0x38,
		0x69, 0x52, 0x4d, 0x58, 0x33, 0x33, 0x38, 0x31, 0x38, 0x73, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x34,
		0x31, 0x38, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x34, 0x39, 0x31, 0x39, 0x69, 0x52, 0x4d,
		0x58, 0x33, 0x33, 0x39, 0x33, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x4d,
		0x58, 0x33, 0x34, 0x37, 0x32, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x35, 0x53, 0x43,
		0x31, 0x31, 0x43, 0x31, 0x32, 0x43, 0x31, 0x35, 0x43, 0x31, 0x35, 0x20, 0x51, 0x75, 0x61, 0x6c,
		0x63, 0x6f, 0x6d, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x31, 0x37, 0x43,
		0x32, 0x30, 0x43, 0x32, 0x31, 0x43, 0x32, 0x31, 0x59, 0x43, 0x32, 0x35, 0x43, 0x32, 0x35, 0x73,
		0x43, 0x32, 0x35, 0x59, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x33, 0x31, 0x43, 0x31, 0x31, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x47, 0x54, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x54, 0x20,
		0x4e, 0x65, 0x6f, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x32, 0x47, 0x54, 0x20, 0x4e, 0x65,
		0x6f, 0x20, 0x32, 0x54, 0x47, 0x54, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20, 0x45, 0x64,
		0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x46, 0x6c, 0x61, 0x73,
		0x68, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x61, 0x72,
		0x7a, 0x6f, 0x20, 0x32, 0x30, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x32, 0x30, 0x41, 0x4e, 0x61,
		0x72, 0x7a, 0x6f, 0x20, 0x33, 0x30, 0x41, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x33, 0x30, 0x52,
		0x4d, 0x58, 0x33, 0x32, 0x34, 0x32, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x33, 0x30, 0x20, 0x35,
		0x47, 0x52, 0x4d, 0x58, 0x33, 0x34, 0x33, 0x30, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30,
		0x41, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x33, 0x35, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30,
		0x69, 0x58, 0x35, 0x30, 0x20, 0x35, 0x47, 0x58, 0x35, 0x30, 0x74, 0x20, 0x35, 0x47, 0x58, 0x35,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x58,
		0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x58, 0x33, 0x20,
		0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x52, 0x4d, 0x58, 0x32, 0x30, 0x38,
		0x33, 0x51, 0x33, 0x73, 0x56, 0x35, 0x20, 0x35, 0x47, 0x56, 0x33, 0x20, 0x35, 0x47, 0x56, 0x31,
		0x31, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x31, 0x32, 0x35, 0x56, 0x31, 0x31, 0x73, 0x20,
		0x35, 0x47, 0x56, 0x31, 0x33, 0x20, 0x35, 0x47, 0x56, 0x31, 0x35, 0x20, 0x35, 0x47, 0x52, 0x4d,
		0x58, 0x32, 0x32, 0x30, 0x32, 0x47, 0x54, 0x20, 0x35, 0x47, 0x50, 0x61, 0x64, 0x52, 0x65, 0x64,
		0x66, 0x6f, 0x78, 0x57, 0x69, 0x7a, 0x70, 0x61, 0x64, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x72,
		0x20, 0x56, 0x38, 0x52, 0x65, 0x65, 0x64, 0x65, 0x72, 0x4d, 0x31, 0x30, 0x53, 0x50, 0x6c, 0x75,
		0x73, 0x4d, 0x31, 0x30, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x50, 0x6c, 0x75, 0x73,
		0x4d, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x31, 0x32, 0x43, 0x75, 0x72, 0x76, 0x65, 0x50,
		0x31, 0x32, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65, 0x50, 0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75, 0x65,
		0x5f, 0x4d, 0x61, 0x6b, 0x73, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61,
		0x6b, 0x73, 0x50, 0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x31, 0x33, 0x20,
		0x42, 0x6c, 0x75, 0x65, 0x20, 0x32, 0x30, 0x32, 0x31, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75,
		0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x30, 0x32, 0x30, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75,
		0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x50, 0x31, 0x33, 0x20,
		0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75, 0x65,
		0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x6d, 0x64, 0x75, 0x6e, 0x52, 0x44,
		0x38, 0x36, 0x45, 0x52, 0x65, 0x76, 0x6f, 0x52, 0x65, 0x76, 0x6f, 0x5f, 0x59, 0x6f, 0x75, 0x70,
		0x6c, 0x75, 0x73, 0x59, 0x6f, 0x75, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x69, 0x6b, 0x6f, 0x6d,
		0x61, 0x67, 0x69, 0x63, 0x4d, 0x4b, 0x24, 0x31, 0x52, 0x69, 0x6e, 0x6e, 0x6f, 0x52, 0x69, 0x74,
		0x6d, 0x69, 0x78, 0x52, 0x4d, 0x44, 0x2d, 0x24, 0x31, 0x52, 0x4d, 0x50, 0x2d, 0x24, 0x31, 0x52,
		0x69, 0x74, 0x7a, 0x76, 0x69, 0x76, 0x61, 0x53, 0x35, 0x30, 0x30, 0x43, 0x52, 0x69, 0x76, 0x69,
		0x65, 0x72, 0x61, 0x52, 0x69, 0x76, 0x6f, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x50,
		0x5a, 0x24, 0x31, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x52, 0x58, 0x24, 0x31, 0x52,
		0x68, 0x79, 0x74, 0x68, 0x6d, 0x20, 0x52, 0x58, 0x24, 0x31, 0x52, 0x6f, 0x61, 0x64, 0x72, 0x6f,
		0x76, 0x65, 0x72, 0x52, 0x6f, 0x61, 0x64, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x43, 0x68, 0x61,
		0x6e, 0x67, 0x41, 0x6e, 0x20, 0x53, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x41, 0x6e, 0x20, 0x53, 0x52,
		0x6f, 0x6b, 0x69, 0x74, 0x49, 0x4f, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x4f, 0x20, 0x4c, 0x69, 0x67,
		0x68, 0x74, 0x49, 0x4f, 0x20, 0x33, 0x44, 0x52, 0x6f, 0x6b, 0x75, 0x33, 0x39, 0x33, 0x30, 0x58,
		0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x20, 0x56,
		0x69, 0x64, 0x65, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6d, 0x62, 0x69,
		0x63, 0x61, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b,
		0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x20, 0x34, 0x4b, 0x20, 0x76, 0x30, 0x31, 0x52, 0x6f, 0x73,
		0x73, 0x26, 0x4d, 0x6f, 0x6f, 0x72, 0x52, 0x4d, 0x24, 0x31, 0x2d, 0x24, 0x32, 0x52, 0x6f, 0x76,
		0x65, 0x72, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x20, 0x51, 0x24,
		0x31, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x6b, 0x79, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x20, 0x33,
		0x47, 0x52, 0x6f, 0x79, 0x51, 0x75, 0x65, 0x65, 0x6e, 0x52, 0x6f, 0x79, 0x6f, 0x6c, 0x65, 0x46,
		0x6c, 0x65, 0x78, 0x50, 0x61, 0x69, 0x20, 0x32, 0x46, 0x6c, 0x65, 0x78, 0x50, 0x61, 0x69, 0x52,
		0x75, 0x67, 0x47, 0x65, 0x61, 0x72, 0x52, 0x75, 0x69, 0x6f, 0x4d, 0x36, 0x37, 0x31, 0x4d, 0x34,
		0x43, 0x6f, 0x6c, 0x61, 0x20, 0x34, 0x47, 0x52, 0x75, 0x6e, 0x62, 0x6f, 0x46, 0x31, 0x2d, 0x54,
		0x54, 0x52, 0x75, 0x6e, 0x62, 0x6f, 0x50, 0x32, 0x52, 0x79, 0x74, 0x65, 0x53, 0x2d, 0x54, 0x45,
		0x4c, 0x4c, 0x53, 0x32, 0x54, 0x65, 0x6c, 0x53, 0x45, 0x4d, 0x50, 0x20, 0x54, 0x43, 0x4c, 0x4c,
		0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x4f, 0x21, 0x20, 0x33, 0x43, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x47, 0x4f, 0x21, 0x20, 0x33, 0x43, 0x53, 0x46, 0x52, 0x53, 0x74, 0x61, 0x72, 0x58, 0x74,
		0x72, 0x65, 0x6d, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x20, 0x24,
		0x31, 0x53, 0x74, 0x61, 0x72, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72,
		0x61, 0x69, 0x6c, 0x20, 0x33, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x32,
		0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47,
		0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72,
		0x54, 0x72, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x32,
		0x53, 0x74, 0x61, 0x72, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x61, 0x64, 0x64,
		0x69, 0x63, 0x74, 0x20, 0x34, 0x53, 0x74, 0x61, 0x72, 0x61, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20,
		0x33, 0x53, 0x74, 0x61, 0x72, 0x61, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x53, 0x74, 0x61, 0x72, 0x61, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x32, 0x53, 0x74,
		0x61, 0x72, 0x61, 0x64, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x54, 0x65, 0x78, 0x74,
		0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x54, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x61,
		0x75, 0x74, 0x65, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x61, 0x75, 0x74, 0x65, 0x20, 0x24,
		0x31, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x61, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x54, 0x61,
		0x62, 0x53, 0x4b, 0x20, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6e, 0x64, 0x42, 0x48, 0x58,
		0x2d, 0x55, 0x48, 0x32, 0x30, 0x30, 0x53, 0x4b, 0x47, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x45, 0x43,
		0x53, 0x4f, 0x4c, 0x45, 0x50, 0x6f, 0x70, 0x20, 0x53, 0x24, 0x31, 0x53, 0x4f, 0x4c, 0x4f, 0x53,
		0x50, 0x43, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x4f, 0x43, 0x54, 0x41, 0x43, 0x4f,
		0x52, 0x45, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x43, 0x6f,
		0x72, 0x65, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x20, 0x34, 0x47, 0x5f, 0x32, 0x30, 0x31,
		0x39, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20,
		0x34, 0x47, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x52, 0x41,
		0x56, 0x49, 0x54, 0x59, 0x20, 0x32, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x32, 0x47,
		0x6c, 0x6f, 0x77, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x79, 0x65, 0x61,
		0x72, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d, 0x41,
		0x52, 0x54, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x4d, 0x41, 0x58, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54,
		0x53, 0x50, 0x43, 0x20, 0x47, 0x45, 0x4e, 0x20, 0x4d, 0x41, 0x58, 0x47, 0x65, 0x6e, 0x20, 0x4d,
		0x61, 0x78, 0x53, 0x50, 0x43, 0x20, 0x47, 0x45, 0x4e, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x47, 0x65,
		0x6e, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x50, 0x43, 0x20, 0x47, 0x45, 0x4e, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x47, 0x65, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x50, 0x43, 0x20, 0x47, 0x45,
		0x4e, 0x47, 0x65, 0x6e, 0x53, 0x50, 0x43, 0x5f, 0x41, 0x4c, 0x49, 0x45, 0x4e, 0x5f, 0x53, 0x54,
		0x49, 0x43, 0x4b, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x53, 0x50,
		0x43, 0x5f, 0x41, 0x4c, 0x49, 0x45, 0x4e, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x53, 0x51, 0x4f, 0x4f,
		0x4c, 0x56, 0x24, 0x31, 0x53, 0x54, 0x46, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x46, 0x72,
		0x61, 0x63, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x20, 0x50, 0x72, 0x6f,
		0x41, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x41, 0x65, 0x72, 0x69, 0x61,
		0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4d, 0x49, 0x4e, 0x49,
		0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x20,
		0x33, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x33, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x20, 0x33, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x33,
		0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x20, 0x47, 0x4f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x47, 0x6f,
		0x53, 0x4c, 0x41, 0x59, 0x20, 0x49, 0x49, 0x53, 0x6c, 0x61, 0x79, 0x20, 0x49, 0x49, 0x4a, 0x6f,
		0x79, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x54, 0x47, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d,
		0x53, 0x54, 0x4b, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x38, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x32,
		0x65, 0x20, 0x50, 0x6c, 0x75, 0x7a, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x32, 0x65, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x54, 0x52, 0x4f, 0x4e, 0x47, 0x4c, 0x45, 0x41, 0x50, 0x2d, 0x53, 0x31,
		0x53, 0x55, 0x4e, 0x57, 0x49, 0x4e, 0x44, 0x53, 0x6b, 0x79, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32,
		0x20, 0x33, 0x47, 0x53, 0x55, 0x4e, 0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31, 0x53, 0x57, 0x49, 0x53,
		0x53, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x53, 0x43, 0x48, 0x4f, 0x4e, 0x20, 0x52,
		0x39, 0x50, 0x52, 0x41, 0x24, 0x31, 0x5a, 0x55, 0x52, 0x37, 0x32, 0x32, 0x4d, 0x5a, 0x37, 0x32,
		0x20, 0x67, 0x6f, 0x5a, 0x55, 0x52, 0x24, 0x31, 0x53, 0x61, 0x66, 0x61, 0x72, 0x69, 0x63, 0x6f,
		0x6d, 0x4e, 0x45, 0x4f, 0x4e, 0x5f, 0x52, 0x41, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x4e, 0x65, 0x6f,
		0x6e, 0x20, 0x52, 0x61, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x45, 0x4f, 0x4e, 0x5f, 0x52, 0x41,
		0x59, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x52, 0x61, 0x79, 0x4e, 0x45, 0x4f, 0x4e, 0x20, 0x52, 0x41,
		0x59, 0x20, 0x32, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x52, 0x61, 0x79, 0x20, 0x32, 0x53, 0x61, 0x67,
		0x65, 0x6d, 0x44, 0x49, 0x33, 0x38, 0x34, 0x5f, 0x55, 0x48, 0x44, 0x5f, 0x54, 0x4b, 0x43, 0x44,
		0x49, 0x33, 0x38, 0x34, 0x44, 0x49, 0x57, 0x33, 0x35, 0x30, 0x5f, 0x54, 0x50, 0x44, 0x49, 0x57,
		0x33, 0x35, 0x30, 0x53, 0x61, 0x69, 0x65, 0x74, 0x53, 0x69, 0x63, 0x75, 0x72, 0x6f, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x47, 0x54, 0x2d, 0x42, 0x39, 0x31, 0x35, 0x30, 0x48,
		0x6f, 0x6d, 0x65, 0x20, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x4d, 0x54, 0x2d, 0x45, 0x35, 0x30, 0x31,
		0x35, 0x4d, 0x61, 0x70, 0x6c, 0x65, 0x20, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x31, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x31, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x37, 0x22,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x37, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x34,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x4e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x37, 0x2e, 0x37, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x76, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x32, 0x30, 0x31, 0x34, 0x20, 0x45, 0x64, 0x69, 0x74,
		0x69, 0x6f, 0x6e, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x32, 0x30, 0x31, 0x34, 0x20, 0x45,
		0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x32, 0x30, 0x31, 0x34, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x20,
		0x31, 0x32, 0x2e, 0x32, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x50, 0x52, 0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36,
		0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50,
		0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20,
		0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65,
		0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x41, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37,
		0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x20, 0x38, 0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41,
		0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x38, 0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x38, 0x20,
		0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x41, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x34, 0x20, 0x31,
		0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x53, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x77, 0x69, 0x74,
		0x68, 0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e,
		0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x34,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x53, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x35,
		0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x38, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x56,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20,
		0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x20, 0x2b, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x33,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x34, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c,
		0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52,
		0x4f, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20,
		0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x32, 0x20, 0x39, 0x2e,
		0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x32, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x33, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x33, 0x20, 0x39,
		0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x37, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x2b, 0x20, 0x31, 0x32,
		0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x37, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x31, 0x31, 0x2e,
		0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x37, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x31, 0x31, 0x2e, 0x30,
		0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x37, 0x20, 0x46, 0x45, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x46, 0x45, 0x20, 0x31,
		0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x37, 0x20, 0x46, 0x45, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x31, 0x34, 0x2e, 0x36, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x2b, 0x20, 0x31, 0x32, 0x2e,
		0x34, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x53, 0x38, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x20, 0x31, 0x31, 0x2e, 0x30,
		0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52,
		0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c,
		0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20,
		0x4c, 0x54, 0x45, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c,
		0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20,
		0x4c, 0x54, 0x45, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45,
		0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x33, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20,
		0x34, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74,
		0x69, 0x76, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63,
		0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76,
		0x65, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x51, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x32, 0x30,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74,
		0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x56, 0x37, 0x30,
		0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x53, 0x4d, 0x2d,
		0x52, 0x33, 0x35, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72,
		0x20, 0x46, 0x69, 0x74, 0x53, 0x4d, 0x2d, 0x52, 0x33, 0x38, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x32, 0x53, 0x53, 0x4d, 0x2d, 0x52, 0x33, 0x38,
		0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x32, 0x20,
		0x4e, 0x65, 0x6f, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x32, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20,
		0x34, 0x34, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x33, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69,
		0x76, 0x65, 0x20, 0x32, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x33, 0x35,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74,
		0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d,
		0x2d, 0x52, 0x38, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x20, 0x34, 0x36, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x30, 0x35, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x36, 0x6d, 0x6d, 0x20, 0x4c,
		0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x31,
		0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x32,
		0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x35, 0x30, 0x30, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
		0x53, 0x4d, 0x2d, 0x52, 0x36, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65,
		0x61, 0x72, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x34, 0x33, 0x6d, 0x6d, 0x53, 0x4d, 0x2d,
		0x52, 0x37, 0x36, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20,
		0x53, 0x33, 0x20, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x20, 0x34, 0x36, 0x6d, 0x6d,
		0x53, 0x4d, 0x2d, 0x52, 0x37, 0x35, 0x30, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x20, 0x34, 0x30,
		0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x33, 0x32, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x32,
		0x20, 0x34, 0x32, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x36, 0x35, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x33, 0x20, 0x46, 0x72, 0x6f, 0x6e, 0x74,
		0x69, 0x65, 0x72, 0x20, 0x33, 0x33, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x37, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x33, 0x20, 0x43, 0x6c,
		0x61, 0x73, 0x73, 0x69, 0x63, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x34,
		0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x20,
		0x34, 0x35, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x34, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x20, 0x34, 0x35,
		0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x35, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52,
		0x38, 0x35, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x33, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x20, 0x34, 0x47, 0x47, 0x65, 0x61, 0x72, 0x20, 0x4c, 0x69,
		0x76, 0x65, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x20, 0x48, 0x75, 0x62, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43,
		0x68, 0x61, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x59, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x70, 0x69, 0x63, 0x61, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x33, 0x4f, 0x6d, 0x6e, 0x69, 0x61, 0x20, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x57, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
		0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65,
		0x20, 0x34, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63,
		0x65, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x63, 0x65, 0x20, 0x34, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x20, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x20, 0x48,
		0x44, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49,
		0x49, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49,
		0x49, 0x49, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x45, 0x64,
		0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x4c, 0x54, 0x45, 0x48, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x42, 0x65, 0x61, 0x6d,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x42, 0x65, 0x61, 0x6d, 0x20, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x57, 0x69, 0x64, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57,
		0x69, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x69, 0x6e, 0x20, 0x50, 0x72, 0x6f,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x41, 0x64, 0x76, 0x61,
		0x6e, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x45, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x45, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x4c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x47, 0x69, 0x6f, 0x72, 0x67, 0x69,
		0x6f, 0x20, 0x41, 0x72, 0x6d, 0x61, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x20, 0x49, 0x49, 0x20, 0x57, 0x69, 0x4d, 0x41, 0x58, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x52, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x33, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x41, 0x43,
		0x54, 0x49, 0x56, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x34, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x4c, 0x54, 0x45, 0x2b, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x54, 0x41, 0x52, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x4f, 0x43, 0x4b, 0x45,
		0x54, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x4f, 0x43,
		0x4b, 0x45, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x4f,
		0x43, 0x4b, 0x45, 0x54, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x20, 0x48,
		0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x4b, 0x69, 0x74, 0x74, 0x79, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x6f, 0x75,
		0x6e, 0x67, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x6f,
		0x75, 0x6e, 0x67, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x6f, 0x75, 0x6e,
		0x67, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x41,
		0x4d, 0x45, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x4e, 0x46, 0x43,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x41, 0x4d, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x46, 0x41, 0x4d, 0x45, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x65, 0x65,
		0x6c, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x43, 0x45, 0x20, 0x33, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x43, 0x45, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20,
		0x44, 0x55, 0x4f, 0x53, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x44,
		0x55, 0x4f, 0x53, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76,
		0x65, 0x72, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65,
		0x72, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72,
		0x20, 0x33, 0x20, 0x56, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76,
		0x65, 0x72, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65,
		0x72, 0x20, 0x34, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65,
		0x72, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76,
		0x65, 0x72, 0x20, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x35, 0x57, 0x61, 0x76, 0x65, 0x20, 0x49,
		0x49, 0x57, 0x61, 0x76, 0x65, 0x20, 0x33, 0x57, 0x61, 0x76, 0x65, 0x20, 0x59, 0x57, 0x61, 0x76,
		0x65, 0x20, 0x4d, 0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x32, 0x35, 0x57, 0x61, 0x76, 0x65, 0x20,
		0x35, 0x33, 0x33, 0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x37, 0x38, 0x57, 0x61, 0x76, 0x65, 0x20,
		0x37, 0x32, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x7a, 0x6f, 0x6f,
		0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4b, 0x20, 0x7a, 0x6f, 0x6f, 0x6d, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x56, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65,
		0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x45, 0x58, 0x50, 0x52, 0x45, 0x53, 0x53, 0x20, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x35, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x2d, 0x53, 0x49, 0x4d, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x2b,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x4b, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x36,
		0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x36, 0x20, 0x45,
		0x64, 0x67, 0x65, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x37, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x37, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x37, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x38, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x38, 0x20, 0x41, 0x63, 0x74, 0x69,
		0x76, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x38, 0x2b, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x39, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x39, 0x2b, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x31, 0x30, 0x2b, 0x53, 0x43, 0x2d, 0x30, 0x35, 0x4c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x31, 0x30, 0x2b, 0x20, 0x4f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63, 0x20, 0x47, 0x61, 0x6d,
		0x65, 0x73, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x31, 0x30, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20, 0x46, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x32, 0x30, 0x20, 0x46, 0x45, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x32, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32,
		0x30, 0x2b, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x46, 0x45, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x35, 0x47, 0x20,
		0x4f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x45, 0x64,
		0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x32, 0x31, 0x2b, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x32,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x32, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a,
		0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x74, 0x79,
		0x6c, 0x65, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x44, 0x69,
		0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x65, 0x6e,
		0x74, 0x75, 0x72, 0x61, 0x56, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x56, 0x69, 0x38, 0x36, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x76, 0x61, 0x6e, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x20, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x30, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x31, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x32, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x33, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x30, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x33, 0x20, 0x43, 0x6f,
		0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x31, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x32, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x35, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x32, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x32, 0x73, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x36, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x73, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x30, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37,
		0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x37, 0x31, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x20, 0x53, 0x74, 0x61, 0x72, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x38, 0x2b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x39, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x37, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x53, 0x74, 0x61, 0x72, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x30, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x30, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x31, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x33, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x32, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x31, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x30, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x32, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x33, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x32, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x34, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x30, 0x73,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x34, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x35, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x31,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x30, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x38, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x30, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x39, 0x30, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x46, 0x31, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x32, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x46, 0x34, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x35,
		0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x36, 0x32, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4c, 0x75, 0x6e, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x20, 0x41, 0x63,
		0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x32, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x32, 0x20, 0x50, 0x75, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x4f, 0x72, 0x62, 0x69, 0x74,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x53, 0x6b, 0x79, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x33, 0x20, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x33, 0x20, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x33, 0x20, 0x41, 0x75, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x33, 0x20, 0x53, 0x74, 0x61, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33,
		0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35,
		0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36,
		0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x35, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x36, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x34, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x34, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x2b, 0x20, 0x28,
		0x43, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x4d, 0x61, 0x78,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x50, 0x72,
		0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x44, 0x75, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x37, 0x20, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x37, 0x20, 0x56, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x37, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x38, 0x53, 0x4d, 0x2d, 0x4a, 0x38, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x4d, 0x2d, 0x4a, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x38, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x39, 0x20, 0x37,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x39, 0x20,
		0x38, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x31, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x31, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x31, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4d, 0x30, 0x32, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x32, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x31, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x31, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4d, 0x32, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4d, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x30,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4d, 0x33, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x32, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4d, 0x33, 0x31, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x34,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x34, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x35, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x35, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x36, 0x32, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x30, 0x31, 0x24, 0x31, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x57, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x6f, 0x6c,
		0x64, 0x65, 0x6e, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x52, 0x6f, 0x75, 0x6e,
		0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4f, 0x6e, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4f, 0x6e, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x37,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e,
		0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x35,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x43, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x37, 0x20,
		0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x38, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x43, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x5a, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x5a, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x34, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x6f, 0x6c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x6f, 0x6c, 0x20, 0x32, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x6f, 0x6c, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x48, 0x61, 0x6c, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x6d, 0x70,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x6d, 0x70, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38,
		0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x33, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x20,
		0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f,
		0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x44, 0x75,
		0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x46, 0x61, 0x6e, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x49, 0x49, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x49, 0x49,
		0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64,
		0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d,
		0x61, 0x78, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x56, 0x45, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x54, 0x56, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x32, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4e, 0x65, 0x6f, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x44, 0x75, 0x6f,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4c,
		0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x35, 0x2e, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x36, 0x2e, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2b,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32,
		0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x41, 0x74, 0x69, 0x76, 0x20, 0x53,
		0x45, 0x47, 0x72, 0x65, 0x61, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x33, 0x45, 0x32, 0x31, 0x35, 0x32, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f,
		0x6b, 0x20, 0x33, 0x53, 0x43, 0x2d, 0x30, 0x32, 0x43, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x2d, 0x54,
		0x56, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x24, 0x31, 0x53, 0x43, 0x2d, 0x24, 0x31, 0x53,
		0x43, 0x48, 0x2d, 0x24, 0x31, 0x53, 0x61, 0x6e, 0x65, 0x69, 0x4e, 0x38, 0x33, 0x4e, 0x39, 0x31,
		0x38, 0x33, 0x31, 0x32, 0x44, 0x47, 0x31, 0x30, 0x31, 0x53, 0x61, 0x6e, 0x73, 0x75, 0x69, 0x53,
		0x61, 0x6e, 0x74, 0x69, 0x6e, 0x42, 0x69, 0x54, 0x42, 0x69, 0x5a, 0x20, 0x56, 0x35, 0x38, 0x47,
		0x41, 0x41, 0x4d, 0x49, 0x49, 0x20, 0x47, 0x31, 0x47, 0x41, 0x41, 0x4d, 0x49, 0x49, 0x43, 0x61,
		0x6e, 0x64, 0x79, 0x20, 0x55, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x30, 0x33, 0x41, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x4f, 0x72,
		0x61, 0x6e, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x4f, 0x6e, 0x65, 0x48, 0x61, 0x6c,
		0x6f, 0x76, 0x65, 0x41, 0x63, 0x74, 0x6f, 0x6d, 0x61, 0x20, 0x41, 0x63, 0x65, 0x4d, 0x6f, 0x6e,
		0x69, 0x63, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x7a, 0x4e, 0x65, 0x77, 0x64, 0x75, 0x6e, 0x53, 0x61,
		0x6e, 0x79, 0x6f, 0x4b, 0x61, 0x74, 0x61, 0x6e, 0x61, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73,
		0x65, 0x20, 0x58, 0x49, 0x6e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x49, 0x6e, 0x6e, 0x75,
		0x65, 0x6e, 0x64, 0x6f, 0x53, 0x61, 0x76, 0x69, 0x6f, 0x53, 0x63, 0x68, 0x6f, 0x6b, 0x53, 0x63,
		0x68, 0x6f, 0x6b, 0x20, 0x53, 0x63, 0x68, 0x6f, 0x6b, 0x20, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53,
		0x56, 0x35, 0x35, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x56, 0x35, 0x35, 0x53, 0x65, 0x61, 0x74,
		0x65, 0x6c, 0x53, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x6c, 0x69, 0x6e,
		0x65, 0x53, 0x34, 0x54, 0x37, 0x49, 0x4e, 0x53, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x61, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x78, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58,
		0x5f, 0x53, 0x4c, 0x41, 0x53, 0x48, 0x36, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x36, 0x56, 0x4f,
		0x59, 0x41, 0x47, 0x45, 0x52, 0x2d, 0x56, 0x34, 0x35, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x72,
		0x20, 0x56, 0x34, 0x35, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x51, 0x35, 0x5f, 0x55, 0x52,
		0x42, 0x41, 0x4e, 0x51, 0x35, 0x20, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x63, 0x6f,
		0x72, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x24, 0x31, 0x22, 0x20, 0x24, 0x32, 0x45,
		0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x37, 0x20, 0x56, 0x33, 0x45, 0x6c, 0x65, 0x6d, 0x65,
		0x6e, 0x74, 0x20, 0x37, 0x20, 0x56, 0x32, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x45, 0x6c, 0x65,
		0x6d, 0x65, 0x6e, 0x74, 0x20, 0x37, 0x20, 0x56, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
		0x20, 0x38, 0x20, 0x56, 0x33, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x38, 0x20, 0x56,
		0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x38, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
		0x74, 0x20, 0x39, 0x2e, 0x37, 0x20, 0x56, 0x33, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20,
		0x39, 0x2e, 0x37, 0x20, 0x56, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x39, 0x2e,
		0x37, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x24, 0x31, 0x2e,
		0x24, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x24, 0x31, 0x53, 0x65, 0x6e,
		0x64, 0x6f, 0x53, 0x65, 0x6e, 0x6b, 0x61, 0x74, 0x65, 0x6c, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75,
		0x73, 0x54, 0x31, 0x30, 0x30, 0x31, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x54, 0x31,
		0x30, 0x30, 0x31, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x69, 0x74, 0x53, 0x65, 0x6e, 0x77, 0x61, 0x4f,
		0x64, 0x69, 0x6e, 0x49, 0x6e, 0x69, 0x7a, 0x69, 0x6f, 0x49, 0x6e, 0x69, 0x7a, 0x69, 0x6f, 0x20,
		0x4c, 0x54, 0x45, 0x56, 0x37, 0x30, 0x35, 0x42, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x54,
		0x68, 0x6f, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x6c, 0x79, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e,
		0x64, 0x53, 0x65, 0x75, 0x69, 0x63, 0x53, 0x68, 0x61, 0x72, 0x70, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x58, 0x78, 0x33, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x58, 0x78, 0x33, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x58, 0x78, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x58, 0x78, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x65, 0x61, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e,
		0x65, 0x20, 0x53, 0x33, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20,
		0x53, 0x35, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x37,
		0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x34, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x57, 0x69, 0x73, 0x68, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x48,
		0x2d, 0x4d, 0x30, 0x34, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20,
		0x34, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e,
		0x73, 0x65, 0x20, 0x34, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20,
		0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x35, 0x47, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x44, 0x31, 0x30, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a,
		0x65, 0x74, 0x61, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a,
		0x65, 0x72, 0x6f, 0x20, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x32,
		0x20, 0x28, 0x43, 0x31, 0x30, 0x29, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x5a, 0x65, 0x74, 0x61, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x20, 0x51, 0x75, 0x65,
		0x73, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x48,
		0x2d, 0x30, 0x36, 0x44, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x24, 0x31, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x58,
		0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4c, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x52, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63,
		0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52,
		0x32, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52,
		0x35, 0x47, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x34, 0x20, 0x53, 0x49, 0x4d, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x56, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x20, 0x24, 0x31, 0x53, 0x69, 0x6d, 0x70,
		0x6c, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x45, 0x76, 0x65, 0x72, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43,
		0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43, 0x72, 0x79, 0x73,
		0x74, 0x61, 0x6c, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c,
		0x20, 0x58, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20,
		0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x33, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x32, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x20, 0x42, 0x61,
		0x73, 0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x33, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53,
		0x33, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x53, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53,
		0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x36, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x55, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x53, 0x42, 0x31, 0x30, 0x42, 0x61,
		0x73, 0x69, 0x6f, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x20, 0x57, 0x61, 0x72, 0x73, 0x53, 0x48,
		0x2d, 0x52, 0x4d, 0x30, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x48, 0x2d, 0x52, 0x4d,
		0x30, 0x32, 0x34, 0x30, 0x31, 0x53, 0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x34, 0x30, 0x31,
		0x53, 0x48, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20,
		0x24, 0x31, 0x41, 0x30, 0x30, 0x31, 0x53, 0x48, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x53,
		0x75, 0x6d, 0x61, 0x68, 0x6f, 0x20, 0x35, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69,
		0x74, 0x61, 0x69, 0x20, 0x33, 0x4e, 0x50, 0x38, 0x30, 0x37, 0x53, 0x48, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x20, 0x31, 0x30, 0x4e, 0x50, 0x35, 0x30, 0x31,
		0x53, 0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x4c, 0x65,
		0x69, 0x63, 0x61, 0x20, 0x4c, 0x65, 0x69, 0x74, 0x7a, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x31, 0x47, 0x61, 0x6c, 0x61, 0x70, 0x61, 0x67, 0x6f, 0x73, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x4b, 0x2d, 0x74, 0x61, 0x69, 0x50, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x65, 0x20,
		0x36, 0x53, 0x68, 0x61, 0x72, 0x70, 0x20, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x61, 0x64,
		0x64, 0x74, 0x61, 0x62, 0x20, 0x64, 0x2d, 0x34, 0x31, 0x41, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x4e, 0x65, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x54, 0x56,
		0x24, 0x31, 0x53, 0x68, 0x69, 0x66, 0x74, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x53, 0x68,
		0x69, 0x76, 0x61, 0x6b, 0x69, 0x53, 0x54, 0x56, 0x2d, 0x24, 0x31, 0x53, 0x68, 0x74, 0x72, 0x69,
		0x6b, 0x68, 0x2d, 0x4d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x6f, 0x73, 0x20, 0x46, 0x32, 0x53,
		0x68, 0x75, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x69, 0x63, 0x6f, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32,
		0x4d, 0x65, 0x67, 0x61, 0x32, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x32, 0x53, 0x53, 0x52, 0x33, 0x2d,
		0x31, 0x2d, 0x35, 0x31, 0x2d, 0x35, 0x4d, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x53, 0x53, 0x44, 0x2d,
		0x31, 0x2d, 0x35, 0x33, 0x2d, 0x31, 0x33, 0x4d, 0x45, 0x31, 0x30, 0x30, 0x32, 0x45, 0x78, 0x70,
		0x72, 0x65, 0x73, 0x73, 0x33, 0x2d, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
		0x20, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x33, 0x45, 0x78,
		0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x33, 0x53, 0x69, 0x65, 0x6d, 0x65, 0x6e, 0x73, 0x58, 0x2d,
		0x54, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x51, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x2d,
		0x54, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x51, 0x24, 0x31, 0x58, 0x2d, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x24, 0x31, 0x58, 0x2d, 0x53, 0x74, 0x79, 0x6c, 0x65,
		0x20, 0x53, 0x24, 0x31, 0x53, 0x69, 0x6c, 0x65, 0x6c, 0x69, 0x73, 0x53, 0x69, 0x6c, 0x65, 0x6e,
		0x74, 0x20, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x70, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x32, 0x53, 0x69, 0x6d, 0x62, 0x61, 0x6e, 0x73, 0x54, 0x61, 0x6e, 0x67, 0x6f,
		0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x54, 0x61, 0x62, 0x55, 0x6c,
		0x74, 0x69, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x6d, 0x61, 0x78, 0x50, 0x69, 0x63, 0x61,
		0x73, 0x73, 0x6f, 0x54, 0x61, 0x62, 0x5f, 0x58, 0x50, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x58, 0x50, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x53, 0x37, 0x32, 0x2d, 0x42, 0x53,
		0x58, 0x32, 0x57, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x79, 0x53, 0x69, 0x6e, 0x67, 0x74, 0x65, 0x63,
		0x68, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x49, 0x31, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x49, 0x20, 0x4d, 0x69, 0x78, 0x53, 0x69, 0x72, 0x61, 0x67, 0x6f,
		0x6e, 0x53, 0x69, 0x72, 0x69, 0x6e, 0x20, 0x6c, 0x61, 0x62, 0x73, 0x46, 0x69, 0x6e, 0x6e, 0x65,
		0x79, 0x20, 0x55, 0x31, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x35, 0x2e, 0x30,
		0x4d, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x35, 0x2e, 0x35, 0x43, 0x50, 0x6c,
		0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x5f, 0x34, 0x5f, 0x30, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x34, 0x2e, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x34, 0x2e, 0x30, 0x50, 0x6c,
		0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x61,
		0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d,
		0x20, 0x56, 0x69, 0x65, 0x77, 0x24, 0x31, 0x53, 0x4b, 0x59, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e,
		0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f, 0x63, 0x74, 0x61,
		0x45, 0x6c, 0x69, 0x74, 0x65, 0x5f, 0x35, 0x5f, 0x35, 0x5f, 0x4f, 0x63, 0x74, 0x61, 0x45, 0x6c,
		0x69, 0x74, 0x65, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x45, 0x6c, 0x69, 0x74,
		0x65, 0x20, 0x4d, 0x35, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32,
		0x46, 0x75, 0x65, 0x67, 0x6f, 0x20, 0x24, 0x31, 0x53, 0x4b, 0x59, 0x20, 0x42, 0x6c, 0x61, 0x63,
		0x6b, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x53, 0x4b, 0x59, 0x5f, 0x50, 0x72, 0x6f, 0x5f, 0x49, 0x49,
		0x49, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x49, 0x53, 0x4b, 0x59, 0x20, 0x35, 0x35, 0x4d, 0x35,
		0x35, 0x4d, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20, 0x58, 0x50, 0x72, 0x65, 0x73,
		0x74, 0x69, 0x67, 0x65, 0x53, 0x6b, 0x79, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x53, 0x6d, 0x61, 0x64,
		0x6c, 0x53, 0x61, 0x66, 0x61, 0x72, 0x69, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x20, 0x24, 0x31, 0x53,
		0x6d, 0x61, 0x69, 0x6c, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x4d,
		0x41, 0x52, 0x54, 0x42, 0x4f, 0x4f, 0x4b, 0x20, 0x53, 0x53, 0x42, 0x31, 0x33, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x61, 0x62, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e, 0x53, 0x37, 0x20,
		0x42, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x37, 0x2e, 0x30, 0x50, 0x44, 0x36, 0x44, 0x31, 0x4a, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x6d, 0x61, 0x78, 0x20, 0x56, 0x33, 0x73, 0x41, 0x44, 0x36, 0x38, 0x32, 0x4a, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x54, 0x41, 0x44, 0x36, 0x38, 0x38, 0x47, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x43, 0x32, 0x41, 0x44, 0x36, 0x38, 0x39, 0x47, 0x41, 0x6e,
		0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x69, 0x33, 0x41, 0x44, 0x36, 0x38, 0x32, 0x48, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x69, 0x33, 0x73, 0x41, 0x44, 0x36, 0x42, 0x31,
		0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x47, 0x32, 0x20, 0x48, 0x6f, 0x74,
		0x41, 0x44, 0x39, 0x41, 0x31, 0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x47,
		0x32, 0x41, 0x44, 0x36, 0x38, 0x33, 0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20,
		0x49, 0x4e, 0x65, 0x77, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x2d, 0x69, 0x4e,
		0x65, 0x77, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x49, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x69, 0x73, 0x61,
		0x6e, 0x54, 0x31, 0x53, 0x4d, 0x38, 0x30, 0x31, 0x54, 0x32, 0x53, 0x4d, 0x39, 0x30, 0x31, 0x4d,
		0x31, 0x53, 0x4d, 0x39, 0x31, 0x39, 0x4d, 0x31, 0x4c, 0x4e, 0x75, 0x74, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x32, 0x73, 0x4e, 0x75, 0x74, 0x20, 0x33, 0x4e, 0x75, 0x74, 0x20, 0x32, 0x4e, 0x75, 0x74,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x4a, 0x69, 0x61, 0x6e, 0x47, 0x75, 0x6f, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x69, 0x73, 0x61, 0x6e, 0x20, 0x55, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x55, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x31, 0x30, 0x4c, 0x53, 0x6d,
		0x6f, 0x6f, 0x74, 0x68, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x6d, 0x6f, 0x6f, 0x74,
		0x68, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x36, 0x2e, 0x32, 0x36, 0x53,
		0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x36, 0x2e, 0x32, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53,
		0x6d, 0x6f, 0x74, 0x72, 0x65, 0x73, 0x68, 0x6b, 0x61, 0x53, 0x6f, 0x66, 0x74, 0x62, 0x61, 0x6e,
		0x6b, 0x53, 0x6f, 0x68, 0x6f, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x6f, 0x6c, 0x6f, 0x6e,
		0x65, 0x45, 0x31, 0x34, 0x35, 0x37, 0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x49, 0x72, 0x6f, 0x6e,
		0x20, 0x45, 0x31, 0x34, 0x35, 0x37, 0x57, 0x31, 0x34, 0x35, 0x30, 0x57, 0x69, 0x6e, 0x64, 0x20,
		0x42, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x20, 0x57, 0x31, 0x34, 0x35, 0x30, 0x57, 0x31, 0x34, 0x35,
		0x32, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x57, 0x31, 0x34, 0x35, 0x32, 0x53,
		0x4f, 0x4c, 0x4f, 0x4e, 0x45, 0x20, 0x41, 0x34, 0x37, 0x53, 0x4c, 0x2d, 0x41, 0x34, 0x37, 0x45,
		0x6c, 0x69, 0x74, 0x65, 0x20, 0x4c, 0x35, 0x35, 0x30, 0x31, 0x53, 0x75, 0x6d, 0x6f, 0x20, 0x53,
		0x35, 0x30, 0x30, 0x31, 0x53, 0x6f, 0x6e, 0x69, 0x6d, 0x53, 0x6f, 0x6e, 0x69, 0x6d, 0x2d, 0x58,
		0x50, 0x33, 0x34, 0x30, 0x30, 0x58, 0x50, 0x33, 0x34, 0x30, 0x30, 0x58, 0x50, 0x36, 0x37, 0x30,
		0x30, 0x58, 0x50, 0x37, 0x37, 0x30, 0x30, 0x58, 0x50, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x58, 0x31, 0x30, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x58, 0x31, 0x30, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x20, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x6e, 0x65, 0x6f, 0x20, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6e, 0x65,
		0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x6f, 0x6c, 0x61, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6d, 0x69, 0x6e,
		0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x63, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x72,
		0x61, 0x79, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x70, 0x72,
		0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x31, 0x30, 0x41, 0x73, 0x70, 0x65, 0x6e,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x50, 0x4c, 0x41, 0x59, 0x4c, 0x69, 0x76, 0x65, 0x20,
		0x77, 0x69, 0x74, 0x68, 0x20, 0x57, 0x61, 0x6c, 0x6b, 0x6d, 0x61, 0x6e, 0x74, 0x78, 0x74, 0x74,
		0x78, 0x74, 0x20, 0x70, 0x72, 0x6f, 0x4a, 0x61, 0x6c, 0x6f, 0x75, 0x4e, 0x61, 0x69, 0x74, 0x65,
		0x43, 0x65, 0x64, 0x61, 0x72, 0x45, 0x6c, 0x6d, 0x48, 0x61, 0x7a, 0x65, 0x6c, 0x41, 0x69, 0x6e,
		0x6f, 0x59, 0x61, 0x72, 0x69, 0x53, 0x61, 0x74, 0x69, 0x6f, 0x56, 0x69, 0x76, 0x61, 0x7a, 0x56,
		0x69, 0x76, 0x61, 0x7a, 0x20, 0x70, 0x72, 0x6f, 0x5a, 0x79, 0x6c, 0x6f, 0x53, 0x70, 0x69, 0x72,
		0x6f, 0x59, 0x65, 0x6e, 0x64, 0x6f, 0x57, 0x39, 0x36, 0x30, 0x4d, 0x69, 0x78, 0x20, 0x57, 0x61,
		0x6c, 0x6b, 0x6d, 0x61, 0x6e, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x58, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x53, 0x4f, 0x2d, 0x30, 0x34, 0x46,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x32, 0x53, 0x4f, 0x2d, 0x30, 0x32, 0x44, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4e, 0x58, 0x47, 0x32, 0x32, 0x39, 0x39, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x52, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4f, 0x2d, 0x30, 0x34,
		0x47, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x31, 0x30, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x63, 0x65, 0x20, 0x49, 0x49,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x31, 0x30, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x31, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69,
		0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x31, 0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20,
		0x49, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x50, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35,
		0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x49, 0x49, 0x49, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x38, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x4c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x6f,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x6f, 0x20, 0x48, 0x44, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x6f, 0x20, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x69, 0x6f, 0x6e, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x58, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x20, 0x4c, 0x54, 0x45, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x54, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x74, 0x69, 0x70, 0x6f, 0x20, 0x64, 0x75,
		0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x74, 0x69, 0x70, 0x6f, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x6d, 0x69, 0x72, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x55,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x55, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x56, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4a, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x67, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x45, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45,
		0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x34, 0x47, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x4d, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x50, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x5a, 0x52, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x5a, 0x4c, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x5a, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x45, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x31, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x45, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x45, 0x34, 0x67, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c,
		0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x49,
		0x33, 0x33, 0x31, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x33, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x4c, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x4c, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x32, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x4d, 0x32, 0x20, 0x41, 0x71, 0x75, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x4d, 0x34, 0x20, 0x41, 0x71, 0x75, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x34,
		0x20, 0x41, 0x71, 0x75, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x4d, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x35, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43,
		0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x34, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x35, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x35, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x54, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x54, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x31, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a,
		0x33, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x5a, 0x32, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x57, 0x69, 0x66, 0x69, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x53, 0x47, 0x50, 0x35, 0x36, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x5a, 0x32, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x5a, 0x32, 0x44, 0x36, 0x35, 0x36, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32,
		0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x5a, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a,
		0x33, 0x2b, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x76, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x5a, 0x34, 0x45, 0x36, 0x35, 0x30, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x5a, 0x34, 0x76, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x20, 0x43, 0x6f,
		0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x41, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x58, 0x41, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x58, 0x41, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x31,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x31, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61,
		0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x58, 0x41, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58,
		0x41, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58,
		0x41, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x48, 0x34, 0x34, 0x33, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x58, 0x41, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x58, 0x5a, 0x73, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x20, 0x50, 0x72,
		0x65, 0x6d, 0x69, 0x75, 0x6d, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x48,
		0x38, 0x32, 0x36, 0x36, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x53, 0x4f, 0x2d, 0x30, 0x35, 0x4b, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x58, 0x5a, 0x32, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x58, 0x5a, 0x32, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x33, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x4c, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x31, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x47, 0x58, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x58, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x58, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61,
		0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x20, 0x50, 0x65, 0x72, 0x66, 0x6f,
		0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x20, 0x50,
		0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x34, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x32, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x33, 0x20, 0x43,
		0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x33, 0x42, 0x72, 0x61, 0x76, 0x69, 0x61, 0x20, 0x24, 0x31, 0x42, 0x72, 0x61, 0x76, 0x69, 0x61,
		0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x42, 0x72, 0x61, 0x76, 0x69, 0x61,
		0x20, 0x56, 0x48, 0x31, 0x4e, 0x57, 0x2d, 0x41, 0x31, 0x30, 0x30, 0x53, 0x65, 0x72, 0x69, 0x65,
		0x73, 0x57, 0x61, 0x6c, 0x6b, 0x6d, 0x61, 0x6e, 0x20, 0x41, 0x31, 0x30, 0x30, 0x4e, 0x57, 0x2d,
		0x5a, 0x31, 0x30, 0x30, 0x30, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x57, 0x61, 0x6c, 0x6b, 0x6d,
		0x61, 0x6e, 0x20, 0x5a, 0x31, 0x30, 0x30, 0x30, 0x42, 0x6c, 0x75, 0x2d, 0x72, 0x61, 0x79, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x44, 0x50, 0x32, 0x30, 0x31, 0x35, 0x42, 0x6c, 0x75,
		0x2d, 0x72, 0x61, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x35, 0x29, 0x61, 0x72, 0x63, 0x6f, 0x20, 0x49, 0x53, 0x31, 0x31, 0x53, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x24, 0x31, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x53, 0x6f, 0x79,
		0x65, 0x73, 0x53, 0x31, 0x30, 0x2d, 0x48, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x53, 0x70, 0x65,
		0x63, 0x74, 0x72, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d,
		0x56, 0x75, 0x6c, 0x63, 0x61, 0x6e, 0x6f, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x43, 0x61, 0x72, 0x62,
		0x6f, 0x6e, 0x6f, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x43, 0x75, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x36,
		0x2e, 0x30, 0x22, 0x44, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x65, 0x20, 0x35, 0x2e, 0x30, 0x22,
		0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x24, 0x31, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x35,
		0x51, 0x2b, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c,
		0x69, 0x66, 0x65, 0x20, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d,
		0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x35, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x56, 0x69, 0x63,
		0x74, 0x6f, 0x72, 0x20, 0x35, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x50, 0x72, 0x6f, 0x74, 0x6f,
		0x6e, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x74,
		0x6f, 0x6e, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x45, 0x6c,
		0x65, 0x63, 0x74, 0x72, 0x6f, 0x35, 0x35, 0x48, 0x44, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x45,
		0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x35, 0x20, 0x48, 0x44, 0x41, 0x51, 0x54, 0x24,
		0x31, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x39, 0x30, 0x30, 0x30, 0x53, 0x74, 0x61, 0x72, 0x6c, 0x69,
		0x67, 0x68, 0x74, 0x4d, 0x79, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x5f, 0x58, 0x4d, 0x79, 0x20, 0x53,
		0x74, 0x61, 0x72, 0x20, 0x58, 0x52, 0x49, 0x4f, 0x20, 0x53, 0x54, 0x41, 0x52, 0x52, 0x69, 0x6f,
		0x20, 0x53, 0x74, 0x61, 0x72, 0x43, 0x5f, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x43,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x5f, 0x4d, 0x69,
		0x78, 0x5f, 0x32, 0x53, 0x74, 0x61, 0x72, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x32, 0x49, 0x5f, 0x53,
		0x54, 0x41, 0x52, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x49, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x74, 0x61, 0x72, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x52, 0x4f, 0x4d,
		0x45, 0x5f, 0x58, 0x52, 0x6f, 0x6d, 0x65, 0x20, 0x58, 0x53, 0x74, 0x61, 0x72, 0x6d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x47, 0x6f, 0x41, 0x73, 0x74, 0x72, 0x61, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x55, 0x50, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x77,
		0x61, 0x79, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x61, 0x20, 0x53, 0x24, 0x31, 0x53,
		0x74, 0x61, 0x72, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x53, 0x74, 0x61,
		0x72, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x78, 0x53, 0x74, 0x6f, 0x72, 0x65,
		0x78, 0x65, 0x5a, 0x65, 0x65, 0x27, 0x54, 0x61, 0x62, 0x24, 0x31, 0x53, 0x54, 0x4f, 0x52, 0x45,
		0x58, 0x20, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x6f, 0x78, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x6f, 0x78,
		0x53, 0x74, 0x72, 0x61, 0x77, 0x42, 0x65, 0x72, 0x72, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x53,
		0x39, 0x20, 0x54, 0x6f, 0x70, 0x61, 0x7a, 0x53, 0x56, 0x36, 0x31, 0x20, 0x56, 0x65, 0x63, 0x74,
		0x6f, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x36, 0x31, 0x20, 0x4d, 0x61, 0x67, 0x69,
		0x63, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x35, 0x37, 0x5f, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x53,
		0x35, 0x37, 0x20, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x53, 0x35, 0x37, 0x5f, 0x41, 0x4c, 0x55, 0x52,
		0x45, 0x53, 0x35, 0x37, 0x20, 0x41, 0x6c, 0x75, 0x72, 0x65, 0x53, 0x35, 0x36, 0x20, 0x4d, 0x49,
		0x53, 0x54, 0x53, 0x35, 0x36, 0x20, 0x4d, 0x69, 0x73, 0x74, 0x43, 0x50, 0x45, 0x39, 0x31, 0x53,
		0x35, 0x34, 0x20, 0x5a, 0x65, 0x6e, 0x53, 0x35, 0x35, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x53, 0x34,
		0x30, 0x5f, 0x56, 0x49, 0x53, 0x54, 0x41, 0x53, 0x34, 0x30, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61,
		0x53, 0x35, 0x30, 0x5f, 0x4a, 0x41, 0x44, 0x45, 0x53, 0x35, 0x30, 0x20, 0x4a, 0x61, 0x64, 0x65,
		0x49, 0x74, 0x68, 0x65, 0x6d, 0x62, 0x61, 0x53, 0x35, 0x33, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x4b,
		0x53, 0x35, 0x33, 0x20, 0x53, 0x74, 0x61, 0x72, 0x6b, 0x53, 0x34, 0x30, 0x5f, 0x4c, 0x49, 0x46,
		0x45, 0x53, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x49, 0x46, 0x45, 0x5f, 0x32, 0x4c,
		0x69, 0x66, 0x65, 0x20, 0x32, 0x53, 0x34, 0x39, 0x20, 0x50, 0x6f, 0x69, 0x73, 0x65, 0x53, 0x34,
		0x39, 0x20, 0x4d, 0x6f, 0x6e, 0x6f, 0x53, 0x34, 0x39, 0x20, 0x45, 0x63, 0x6f, 0x53, 0x36, 0x34,
		0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x53, 0x36, 0x34, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x49,
		0x4e, 0x4b, 0x4f, 0x53, 0x49, 0x49, 0x6e, 0x6b, 0x6f, 0x73, 0x69, 0x54, 0x61, 0x72, 0x69, 0x73,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x53, 0x75, 0x67, 0x61,
		0x72, 0x59, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53,
		0x75, 0x6d, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6e, 0x56, 0x61, 0x6e, 0x53, 0x75,
		0x6e, 0x6d, 0x69, 0x54, 0x32, 0x73, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x75, 0x6e, 0x6e, 0x79,
		0x53, 0x75, 0x6e, 0x73, 0x74, 0x65, 0x63, 0x68, 0x53, 0x75, 0x6e, 0x76, 0x65, 0x6c, 0x6c, 0x54,
		0x39, 0x35, 0x5a, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x39, 0x35, 0x5a, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x53, 0x75, 0x70, 0x65, 0x72, 0x53, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x75, 0x70, 0x65, 0x72, 0x54,
		0x61, 0x62, 0x53, 0x75, 0x70, 0x72, 0x61, 0x53, 0x75, 0x7a, 0x75, 0x6b, 0x69, 0x53, 0x75, 0x6d,
		0x6f, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x45, 0x43, 0x4f, 0x50, 0x41, 0x44, 0x37, 0x45, 0x43,
		0x4f, 0x50, 0x61, 0x64, 0x20, 0x37, 0x53, 0x77, 0x69, 0x70, 0x65, 0x53, 0x6c, 0x61, 0x74, 0x65,
		0x20, 0x32, 0x53, 0x77, 0x69, 0x73, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x70, 0x68,
		0x6f, 0x6e, 0x79, 0x5a, 0x56, 0x49, 0x49, 0x49, 0x53, 0x79, 0x6d, 0x70, 0x68, 0x6f, 0x6e, 0x79,
		0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x69, 0x69, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x49, 0x49, 0x52,
		0x6f, 0x61, 0x72, 0x20, 0x24, 0x31, 0x53, 0x79, 0x72, 0x6f, 0x78, 0x54, 0x2d, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x54, 0x4d, 0x52, 0x56, 0x4c, 0x34, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20,
		0x56, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x45, 0x56,
		0x56, 0x4c, 0x20, 0x34, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x35, 0x47, 0x52, 0x45, 0x56, 0x56,
		0x4c, 0x20, 0x32, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x56, 0x2b, 0x20, 0x35, 0x47, 0x52,
		0x45, 0x56, 0x56, 0x4c, 0x52, 0x59, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x32, 0x54, 0x65, 0x6c,
		0x65, 0x6b, 0x6f, 0x6d, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x54, 0x41, 0x47, 0x20, 0x54, 0x65, 0x63,
		0x68, 0x54, 0x42, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x49, 0x67, 0x6e, 0x69, 0x73, 0x20, 0x24,
		0x31, 0x54, 0x43, 0x4c, 0x47, 0x61, 0x6c, 0x61, 0x20, 0x47, 0x36, 0x30, 0x53, 0x69, 0x67, 0x6e,
		0x61, 0x32, 0x30, 0x35, 0x32, 0x30, 0x4c, 0x32, 0x30, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x32,
		0x30, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x30, 0x45, 0x36, 0x31, 0x35, 0x36, 0x48, 0x32,
		0x30, 0x59, 0x43, 0x39, 0x41, 0x33, 0x58, 0x4c, 0x35, 0x4c, 0x39, 0x4c, 0x39, 0x53, 0x4c, 0x31,
		0x30, 0x2b, 0x4c, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x50,
		0x6c, 0x65, 0x78, 0x31, 0x30, 0x20, 0x35, 0x47, 0x4c, 0x58, 0x31, 0x30, 0x4c, 0x31, 0x30, 0x20,
		0x53, 0x45, 0x32, 0x30, 0x20, 0x53, 0x45, 0x32, 0x30, 0x52, 0x20, 0x35, 0x47, 0x32, 0x30, 0x53,
		0x32, 0x30, 0x20, 0x58, 0x45, 0x32, 0x30, 0x20, 0x35, 0x47, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x37, 0x36, 0x36, 0x48, 0x54, 0x61,
		0x62, 0x20, 0x38, 0x22, 0x20, 0x34, 0x47, 0x39, 0x32, 0x39, 0x35, 0x47, 0x31, 0x30, 0x20, 0x54,
		0x61, 0x62, 0x4d, 0x61, 0x78, 0x20, 0x34, 0x47, 0x42, 0x65, 0x79, 0x6f, 0x6e, 0x64, 0x20, 0x54,
		0x56, 0x20, 0x24, 0x31, 0x54, 0x44, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x44,
		0x20, 0x54, 0x65, 0x63, 0x68, 0x4e, 0x41, 0x54, 0x2d, 0x54, 0x4e, 0x37, 0x30, 0x4e, 0x38, 0x20,
		0x50, 0x72, 0x6f, 0x54, 0x45, 0x45, 0x4e, 0x4f, 0x54, 0x45, 0x4e, 0x50, 0x4c, 0x55, 0x53, 0x54,
		0x49, 0x41, 0x4e, 0x59, 0x55, 0x54, 0x4f, 0x53, 0x43, 0x49, 0x44, 0x4f, 0x54, 0x54, 0x45, 0x43,
		0x54, 0x56, 0x43, 0x4e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x53, 0x58, 0x2d, 0x53, 0x50,
		0x35, 0x54, 0x57, 0x4d, 0x41, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x53, 0x41,
		0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x54, 0x57, 0x5a, 0x54, 0x61, 0x62, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x54, 0x61, 0x69, 0x67, 0x61, 0x20, 0x53, 0x79, 0x73, 0x74,
		0x65, 0x6d, 0x54, 0x61, 0x69, 0x67, 0x61, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x54, 0x61,
		0x6b, 0x61, 0x72, 0x61, 0x54, 0x61, 0x6d, 0x62, 0x6f, 0x54, 0x61, 0x6e, 0x69, 0x78, 0x54, 0x58,
		0x24, 0x31, 0x73, 0x54, 0x58, 0x35, 0x20, 0x4d, 0x41, 0x58, 0x54, 0x58, 0x35, 0x20, 0x4d, 0x61,
		0x78, 0x54, 0x58, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x65, 0x63, 0x68, 0x50, 0x61, 0x64,
		0x53, 0x38, 0x31, 0x33, 0x47, 0x54, 0x65, 0x63, 0x68, 0x50, 0x61, 0x64, 0x31, 0x30, 0x51, 0x43,
		0x31, 0x30, 0x51, 0x43, 0x54, 0x65, 0x63, 0x68, 0x50, 0x61, 0x64, 0x5f, 0x31, 0x30, 0x78, 0x78,
		0x31, 0x30, 0x58, 0x58, 0x54, 0x65, 0x63, 0x68, 0x50, 0x61, 0x64, 0x37, 0x30, 0x33, 0x37, 0x30,
		0x33, 0x33, 0x47, 0x78, 0x33, 0x47, 0x5f, 0x31, 0x36, 0x33, 0x47, 0x2d, 0x31, 0x36, 0x44, 0x75,
		0x61, 0x6c, 0x20, 0x43, 0x31, 0x30, 0x38, 0x31, 0x48, 0x44, 0x58, 0x54, 0x41, 0x42, 0x20, 0x43,
		0x31, 0x30, 0x38, 0x31, 0x48, 0x44, 0x58, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x4d, 0x35, 0x20,
		0x24, 0x31, 0x4d, 0x36, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x43, 0x61, 0x6d, 0x54, 0x65, 0x63, 0x68, 0x5f, 0x50, 0x61,
		0x64, 0x5f, 0x4b, 0x61, 0x69, 0x6f, 0x73, 0x5f, 0x4f, 0x6e, 0x65, 0x5f, 0x33, 0x47, 0x4b, 0x61,
		0x69, 0x6f, 0x73, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f,
		0x70, 0x63, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x54, 0x65, 0x63,
		0x68, 0x77, 0x6f, 0x6f, 0x64, 0x54, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x62, 0x6f, 0x6f,
		0x6b, 0x20, 0x24, 0x31, 0x54, 0x31, 0x30, 0x58, 0x31, 0x30, 0x50, 0x31, 0x30, 0x53, 0x50, 0x32,
		0x30, 0x48, 0x44, 0x50, 0x31, 0x30, 0x48, 0x44, 0x50, 0x38, 0x30, 0x4d, 0x32, 0x30, 0x5f, 0x34,
		0x47, 0x4d, 0x32, 0x30, 0x20, 0x34, 0x47, 0x4d, 0x38, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x4c,
		0x41, 0x30, 0x30, 0x32, 0x4d, 0x33, 0x30, 0x20, 0x34, 0x47, 0x54, 0x4c, 0x41, 0x30, 0x31, 0x36,
		0x4d, 0x31, 0x36, 0x4d, 0x34, 0x30, 0x4d, 0x34, 0x30, 0x53, 0x45, 0x4d, 0x34, 0x30, 0x20, 0x53,
		0x45, 0x54, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x34, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x54, 0x50, 0x61, 0x64, 0x20, 0x39, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x34, 0x47,
		0x58, 0x39, 0x38, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x58, 0x39, 0x38, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x49, 0x49, 0x49, 0x58, 0x39, 0x38, 0x20, 0x41, 0x69, 0x72, 0x20, 0x49, 0x49, 0x54, 0x65,
		0x63, 0x6e, 0x6f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f,
		0x6d, 0x36, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x36,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x36, 0x50, 0x68, 0x61,
		0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x36, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x58, 0x50,
		0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x39, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20,
		0x38, 0x54, 0x45, 0x43, 0x4e, 0x4f, 0x2d, 0x57, 0x33, 0x57, 0x33, 0x46, 0x34, 0x20, 0x50, 0x72,
		0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x54,
		0x77, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x41, 0x69, 0x72, 0x20, 0x32, 0x2b,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x41, 0x63, 0x65, 0x20, 0x32, 0x43, 0x61, 0x6d, 0x6f,
		0x6e, 0x20, 0x69, 0x32, 0x58, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x32, 0x43, 0x61, 0x6d,
		0x6f, 0x6e, 0x20, 0x69, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x20, 0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e,
		0x20, 0x69, 0x53, 0x6b, 0x79, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x53, 0x6b, 0x79, 0x20,
		0x33, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x43, 0x44, 0x72, 0x6f, 0x69,
		0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x44, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20,
		0x37, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37,
		0x46, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x47, 0x44, 0x72, 0x6f, 0x69,
		0x64, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x72, 0x6f, 0x69,
		0x64, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x44, 0x20, 0x34, 0x47, 0x52, 0x37, 0x2b, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x34, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x39, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x32, 0x20, 0x41,
		0x69, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x31, 0x35, 0x20, 0x41, 0x69, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20, 0x50,
		0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x31, 0x36, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x31, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20, 0x53,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20, 0x53, 0x45, 0x43, 0x61, 0x6d, 0x6f, 0x6e,
		0x20, 0x31, 0x37, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x43,
		0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x37, 0x50, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x38,
		0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x38,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x38, 0x50, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43,
		0x4d, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x58, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x58, 0x20,
		0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x58, 0x43, 0x61, 0x6d, 0x6f, 0x6e,
		0x20, 0x43, 0x58, 0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x31, 0x50, 0x6f, 0x70, 0x20,
		0x32, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x6f, 0x70, 0x20, 0x32,
		0x46, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x53, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x53, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x70, 0x20, 0x32,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x58, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x58, 0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x32,
		0x58, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x50,
		0x6f, 0x70, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x50, 0x6f,
		0x70, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x41, 0x69, 0x72,
		0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x50, 0x6f,
		0x70, 0x20, 0x35, 0x20, 0x47, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50,
		0x6f, 0x70, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x50, 0x53, 0x41,
		0x31, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x32, 0x29, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x20, 0x59, 0x6f, 0x75,
		0x74, 0x68, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x34, 0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x35, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x36, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x36, 0x20, 0x41, 0x69,
		0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x36, 0x20, 0x47, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x37, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x37, 0x50, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x37, 0x54, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x38, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x43, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x38, 0x50, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x54, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x43, 0x4d, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x38, 0x44,
		0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x75,
		0x76, 0x6f, 0x69, 0x72, 0x20, 0x32, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x31, 0x50,
		0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x33, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20,
		0x33, 0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x33, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x34, 0x50, 0x6f, 0x75, 0x76,
		0x6f, 0x69, 0x72, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6d, 0x20, 0x4a, 0x38,
		0x52, 0x37, 0x20, 0x34, 0x47, 0x57, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x58, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x54, 0x45, 0x43, 0x4e, 0x4f, 0x20, 0x53, 0x39, 0x50, 0x6f, 0x76, 0x61, 0x50, 0x6f,
		0x76, 0x61, 0x20, 0x4e, 0x65, 0x6f, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x54, 0x65, 0x6b, 0x6e,
		0x6f, 0x73, 0x61, 0x50, 0x72, 0x65, 0x6f, 0x20, 0x54, 0x65, 0x6b, 0x6e, 0x6f, 0x73, 0x61, 0x20,
		0x50, 0x31, 0x50, 0x72, 0x65, 0x6f, 0x20, 0x50, 0x31, 0x50, 0x72, 0x65, 0x6f, 0x20, 0x50, 0x24,
		0x31, 0x54, 0x65, 0x6c, 0x65, 0x32, 0x24, 0x31, 0x20, 0x31, 0x2e, 0x31, 0x4d, 0x69, 0x64, 0x69,
		0x20, 0x32, 0x2e, 0x30, 0x54, 0x65, 0x6c, 0x65, 0x66, 0x75, 0x6e, 0x6b, 0x65, 0x6e, 0x54, 0x45,
		0x4c, 0x2d, 0x31, 0x30, 0x31, 0x33, 0x47, 0x49, 0x51, 0x41, 0x47, 0x69, 0x71, 0x61, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x20, 0x33, 0x47, 0x54, 0x45, 0x4c, 0x2d, 0x24, 0x31, 0x46, 0x6f, 0x78, 0x74,
		0x72, 0x6f, 0x74, 0x32, 0x46, 0x6f, 0x78, 0x74, 0x72, 0x6f, 0x74, 0x20, 0x32, 0x4c, 0x54, 0x45,
		0x5f, 0x4c, 0x49, 0x4d, 0x41, 0x4c, 0x69, 0x6d, 0x61, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x54, 0x45,
		0x20, 0x4d, 0x69, 0x6b, 0x65, 0x4d, 0x69, 0x6b, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x65, 0x6c,
		0x65, 0x67, 0x6f, 0x54, 0x45, 0x4c, 0x45, 0x47, 0x4f, 0x54, 0x45, 0x4c, 0x45, 0x47, 0x4f, 0x2d,
		0x57, 0x35, 0x30, 0x33, 0x57, 0x35, 0x30, 0x33, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x6f, 0x5f, 0x4a,
		0x4f, 0x59, 0x32, 0x4a, 0x6f, 0x79, 0x20, 0x32, 0x4d, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65,
		0x6e, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x69, 0x61, 0x54, 0x65, 0x6c, 0x69, 0x61, 0x20, 0x62, 0x6f,
		0x78, 0x42, 0x6f, 0x78, 0x54, 0x65, 0x6c, 0x69, 0x74, 0x54, 0x65, 0x6c, 0x70, 0x6f, 0x54, 0x50,
		0x53, 0x33, 0x32, 0x30, 0x54, 0x65, 0x73, 0x63, 0x6f, 0x48, 0x75, 0x64, 0x6c, 0x20, 0x24, 0x31,
		0x4f, 0x70, 0x33, 0x6e, 0x20, 0x44, 0x6f, 0x74, 0x74, 0x54, 0x65, 0x74, 0x72, 0x61, 0x74, 0x61,
		0x62, 0x43, 0x61, 0x73, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x33, 0x54, 0x68, 0x4c, 0x4b, 0x6e,
		0x69, 0x67, 0x68, 0x74, 0x20, 0x32, 0x54, 0x68, 0x6f, 0x6d, 0x73, 0x6f, 0x6e, 0x51, 0x4d, 0x37,
		0x33, 0x34, 0x2d, 0x32, 0x51, 0x4d, 0x37, 0x33, 0x34, 0x2d, 0x38, 0x47, 0x51, 0x4d, 0x37, 0x33,
		0x35, 0x2d, 0x38, 0x47, 0x51, 0x4d, 0x37, 0x33, 0x36, 0x2d, 0x38, 0x47, 0x20, 0x28, 0x48, 0x44,
		0x29, 0x33, 0x47, 0x20, 0x38, 0x39, 0x35, 0x30, 0x54, 0x45, 0x4f, 0x24, 0x31, 0x35, 0x30, 0x31,
		0x34, 0x47, 0x54, 0x6c, 0x69, 0x6e, 0x6b, 0x24, 0x31, 0x45, 0x76, 0x65, 0x72, 0x79, 0x24, 0x31,
		0x44, 0x65, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x54, 0x48, 0x32, 0x30, 0x31, 0x46, 0x72, 0x69,
		0x65, 0x6e, 0x64, 0x6c, 0x79, 0x5f, 0x54, 0x48, 0x31, 0x30, 0x31, 0x46, 0x72, 0x69, 0x65, 0x6e,
		0x64, 0x6c, 0x79, 0x20, 0x54, 0x48, 0x31, 0x30, 0x31, 0x54, 0x68, 0x75, 0x72, 0x61, 0x79, 0x61,
		0x54, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x69, 0x56, 0x6f, 0x53, 0x54, 0x52, 0x45, 0x41,
		0x4d, 0x20, 0x34, 0x4b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x34, 0x4b, 0x54, 0x43, 0x44,
		0x38, 0x46, 0x36, 0x30, 0x30, 0x30, 0x54, 0x69, 0x67, 0x65, 0x72, 0x73, 0x54, 0x49, 0x53, 0x30,
		0x30, 0x31, 0x20, 0x53, 0x24, 0x31, 0x54, 0x49, 0x53, 0x30, 0x30, 0x31, 0x20, 0x54, 0x32, 0x54,
		0x69, 0x6d, 0x65, 0x32, 0x24, 0x31, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x69, 0x6d, 0x6f,
		0x76, 0x69, 0x54, 0x4d, 0x4f, 0x56, 0x49, 0x5f, 0x59, 0x45, 0x41, 0x48, 0x5f, 0x42, 0x45, 0x41,
		0x54, 0x59, 0x65, 0x61, 0x68, 0x20, 0x42, 0x65, 0x61, 0x74, 0x59, 0x65, 0x61, 0x68, 0x4c, 0x49,
		0x56, 0x45, 0x59, 0x65, 0x61, 0x68, 0x20, 0x4c, 0x49, 0x56, 0x45, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x20, 0x58, 0x20, 0x43, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20,
		0x4d, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x4d, 0x58,
		0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x24, 0x31, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50,
		0x72, 0x6f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x20, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x45, 0x70, 0x69, 0x78, 0x59, 0x65,
		0x61, 0x68, 0x5f, 0x47, 0x6f, 0x59, 0x65, 0x61, 0x68, 0x20, 0x47, 0x6f, 0x54, 0x69, 0x6e, 0x61,
		0x69, 0x54, 0x69, 0x6e, 0x6d, 0x6f, 0x54, 0x6f, 0x6c, 0x69, 0x6e, 0x6f, 0x54, 0x6f, 0x6c, 0x69,
		0x6e, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x6f, 0x6e, 0x65, 0x54, 0x6f, 0x6f,
		0x6b, 0x79, 0x54, 0x4f, 0x4f, 0x4b, 0x59, 0x41, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x6f,
		0x70, 0x20, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x74, 0x6f, 0x20, 0x57, 0x34, 0x31, 0x38,
		0x43, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x31, 0x31, 0x37, 0x43, 0x6f, 0x74, 0x6f, 0x20, 0x54, 0x31,
		0x31, 0x37, 0x58, 0x31, 0x30, 0x31, 0x33, 0x43, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x34, 0x30, 0x30,
		0x31, 0x37, 0x54, 0x34, 0x30, 0x30, 0x31, 0x37, 0x54, 0x6f, 0x70, 0x65, 0x6c, 0x6f, 0x74, 0x65,
		0x6b, 0x4b, 0x49, 0x44, 0x53, 0x30, 0x39, 0x4b, 0x49, 0x44, 0x53, 0x30, 0x39, 0x20, 0x4b, 0x69,
		0x64, 0x73, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x6c, 0x75, 0x78, 0x54,
		0x6f, 0x72, 0x65, 0x78, 0x54, 0x6f, 0x73, 0x68, 0x69, 0x62, 0x61, 0x54, 0x2d, 0x30, 0x31, 0x43,
		0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x54, 0x2d, 0x30, 0x31, 0x43, 0x54, 0x2d, 0x30, 0x31, 0x44,
		0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x54, 0x2d, 0x30, 0x31, 0x44, 0x54, 0x2d, 0x30, 0x32, 0x44,
		0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x54, 0x2d, 0x30, 0x32, 0x44, 0x49, 0x53, 0x30, 0x34, 0x52,
		0x65, 0x67, 0x7a, 0x61, 0x20, 0x49, 0x53, 0x30, 0x34, 0x49, 0x53, 0x31, 0x31, 0x54, 0x52, 0x65,
		0x67, 0x7a, 0x61, 0x20, 0x49, 0x53, 0x31, 0x31, 0x54, 0x41, 0x54, 0x37, 0x2d, 0x43, 0x41, 0x54,
		0x31, 0x53, 0x30, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54, 0x31, 0x53, 0x30, 0x41, 0x54,
		0x33, 0x30, 0x30, 0x53, 0x45, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54, 0x33, 0x30, 0x30,
		0x53, 0x45, 0x41, 0x54, 0x35, 0x30, 0x30, 0x61, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54,
		0x35, 0x30, 0x30, 0x61, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54, 0x24, 0x31, 0x45, 0x78,
		0x63, 0x69, 0x74, 0x65, 0x20, 0x41, 0x54, 0x31, 0x30, 0x24, 0x31, 0x2d, 0x41, 0x41, 0x54, 0x31,
		0x30, 0x2d, 0x41, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x41, 0x54, 0x31, 0x30, 0x2d, 0x41,
		0x41, 0x46, 0x54, 0x4b, 0x4d, 0x53, 0x54, 0x31, 0x32, 0x34, 0x33, 0x4c, 0x46, 0x37, 0x31, 0x31,
		0x55, 0x32, 0x30, 0x41, 0x46, 0x54, 0x42, 0x41, 0x4d, 0x52, 0x33, 0x31, 0x31, 0x34, 0x33, 0x4c,
		0x46, 0x34, 0x32, 0x31, 0x55, 0x31, 0x39, 0x54, 0x53, 0x42, 0x4e, 0x65, 0x74, 0x54, 0x56, 0x2f,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x6d, 0x61, 0x74, 0x65, 0x54, 0x4d, 0x2d, 0x4d, 0x49, 0x44, 0x31,
		0x30, 0x35, 0x30, 0x57, 0x4b, 0x44, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69,
		0x78, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70,
		0x65, 0x65, 0x64, 0x54, 0x52, 0x39, 0x39, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x54, 0x72, 0x65, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x53, 0x54, 0x31, 0x33, 0x34, 0x31, 0x36, 0x2d, 0x31, 0x53, 0x75,
		0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x20, 0x31, 0x33,
		0x2e, 0x34, 0x22, 0x53, 0x75, 0x72, 0x66, 0x74, 0x61, 0x62, 0x20, 0x74, 0x68, 0x65, 0x61, 0x74,
		0x72, 0x65, 0x20, 0x53, 0x31, 0x31, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x54, 0x68,
		0x65, 0x61, 0x74, 0x72, 0x65, 0x20, 0x53, 0x31, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x31, 0x30, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54,
		0x46, 0x4d, 0x54, 0x4b, 0x41, 0x57, 0x30, 0x31, 0x32, 0x33, 0x32, 0x53, 0x75, 0x72, 0x66, 0x54,
		0x61, 0x62, 0x20, 0x4c, 0x31, 0x35, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x58, 0x69,
		0x6e, 0x74, 0x72, 0x6f, 0x6e, 0x20, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x72, 0x65,
		0x76, 0x69, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x20, 0x56, 0x38, 0x54, 0x41,
		0x42, 0x20, 0x39, 0x20, 0x33, 0x47, 0x20, 0x56, 0x38, 0x54, 0x41, 0x42, 0x20, 0x39, 0x20, 0x33,
		0x47, 0x54, 0x41, 0x42, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x20, 0x56, 0x31, 0x36, 0x4d, 0x49,
		0x4e, 0x49, 0x54, 0x41, 0x42, 0x20, 0x33, 0x47, 0x56, 0x4d, 0x49, 0x4e, 0x49, 0x54, 0x41, 0x42,
		0x20, 0x33, 0x47, 0x20, 0x56, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x34, 0x20, 0x43,
		0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x34, 0x20, 0x53, 0x50, 0x68, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x34, 0x2e, 0x35, 0x51, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x35,
		0x20, 0x53, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x35, 0x2e, 0x33, 0x20, 0x51, 0x50,
		0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x51, 0x20, 0x52, 0x45, 0x56,
		0x45, 0x52, 0x53, 0x45, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x36, 0x20, 0x53, 0x54,
		0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x66, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x73,
		0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x31, 0x53, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31,
		0x53, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x73,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e,
		0x5f, 0x50, 0x72, 0x6f, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x54,
		0x72, 0x69, 0x6f, 0x56, 0x35, 0x31, 0x44, 0x54, 0x54, 0x72, 0x6f, 0x6e, 0x73, 0x6d, 0x61, 0x72,
		0x74, 0x54, 0x72, 0x75, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x34,
		0x2e, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20,
		0x47, 0x65, 0x6e, 0x20, 0x43, 0x20, 0x24, 0x31, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34,
		0x47, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x79, 0x20, 0x35, 0x2e, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x79,
		0x20, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70,
		0x69, 0x6f, 0x6e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x50, 0x31, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x50, 0x31, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x4d, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54,
		0x52, 0x55, 0x45, 0x20, 0x42, 0x45, 0x59, 0x4f, 0x4e, 0x44, 0x20, 0x54, 0x41, 0x42, 0x20, 0x33,
		0x47, 0x42, 0x65, 0x79, 0x6f, 0x6e, 0x64, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x47, 0x54, 0x72,
		0x75, 0x65, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x54, 0x75, 0x43, 0x45, 0x4c, 0x54, 0x75, 0x6e, 0x69,
		0x73, 0x69, 0x65, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x54,
		0x72, 0x61, 0x69, 0x6c, 0x20, 0x62, 0x79, 0x20, 0x54, 0x54, 0x58, 0x35, 0x20, 0x53, 0x70, 0x61,
		0x63, 0x65, 0x58, 0x35, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x58, 0x20, 0x52, 0x61, 0x79, 0x58, 0x35,
		0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x58, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x36, 0x20, 0x5a,
		0x54, 0x75, 0x72, 0x62, 0x6f, 0x2d, 0x58, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x78, 0x5f, 0x53, 0x33,
		0x53, 0x33, 0x45, 0x33, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x49, 0x63, 0x65, 0x48, 0x69,
		0x76, 0x65, 0x20, 0x56, 0x20, 0x33, 0x47, 0x46, 0x69, 0x72, 0x65, 0x20, 0x49, 0x49, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b, 0x69, 0x64, 0x73, 0x54, 0x75, 0x72, 0x62,
		0x6f, 0x50, 0x61, 0x64, 0x54, 0x75, 0x72, 0x6b, 0x63, 0x65, 0x6c, 0x6c, 0x54, 0x75, 0x72, 0x62,
		0x6f, 0x20, 0x54, 0x35, 0x30, 0x54, 0x24, 0x31, 0x30, 0x54, 0x32, 0x31, 0x20, 0x4d, 0x61, 0x78,
		0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x54, 0x32, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x69,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x54, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x54, 0x77,
		0x6f, 0x65, 0x54, 0x79, 0x6d, 0x65, 0x73, 0x54, 0xc3, 0xbc, 0x72, 0x6b, 0x20, 0x54, 0x65, 0x6c,
		0x65, 0x6b, 0x6f, 0x6d, 0x54, 0x75, 0x72, 0x6b, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x6b, 0x6f, 0x6d,
		0x54, 0x54, 0x31, 0x37, 0x35, 0x55, 0x2d, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x45, 0x6e, 0x6a, 0x6f,
		0x79, 0x20, 0x33, 0x30, 0x65, 0x20, 0x35, 0x47, 0x55, 0x2e, 0x53, 0x2e, 0x20, 0x43, 0x65, 0x6c,
		0x6c, 0x75, 0x6c, 0x61, 0x72, 0x55, 0x53, 0x43, 0x43, 0x2d, 0x55, 0x53, 0x43, 0x43, 0x2d, 0x45,
		0x36, 0x37, 0x36, 0x32, 0x4b, 0x79, 0x6f, 0x63, 0x65, 0x72, 0x61, 0x20, 0x44, 0x75, 0x72, 0x61,
		0x46, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x4d, 0x49, 0x44, 0x49, 0x47, 0x49, 0x41, 0x31, 0x31, 0x20,
		0x54, 0x61, 0x62, 0x41, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x31,
		0x31, 0x53, 0x55, 0x4d, 0x49, 0x20, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x20, 0x58, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x58, 0x55, 0x4d, 0x49, 0x20, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x42, 0x49, 0x53, 0x4f, 0x4e, 0x20, 0x47, 0x54, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20,
		0x47, 0x54, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x4e, 0x31, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20,
		0x58, 0x31, 0x30, 0x42, 0x49, 0x53, 0x4f, 0x4e, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x69, 0x73, 0x6f,
		0x6e, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x49, 0x53, 0x4f, 0x4e, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x68,
		0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x53, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x53, 0x43,
		0x20, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x32, 0x43, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x53,
		0x75, 0x70, 0x65, 0x72, 0x53, 0x32, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x53, 0x32, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x33, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x35,
		0x53, 0x55, 0x4e, 0x49, 0x57, 0x41, 0x55, 0x4e, 0x4e, 0x4f, 0x55, 0x54, 0x4f, 0x4b, 0x55, 0x54,
		0x53, 0x74, 0x61, 0x72, 0x63, 0x6f, 0x6d, 0x55, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x5a, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55, 0x7a, 0x62, 0x65, 0x6b, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x55,
		0x67, 0x6f, 0x6f, 0x73, 0x55, 0x68, 0x61, 0x6e, 0x73, 0x55, 0x68, 0x61, 0x70, 0x70, 0x79, 0x55,
		0x50, 0x24, 0x31, 0x55, 0x50, 0x33, 0x35, 0x30, 0x55, 0x50, 0x35, 0x38, 0x30, 0x55, 0x35, 0x38,
		0x30, 0x55, 0x6c, 0x65, 0x66, 0x6f, 0x6e, 0x65, 0x42, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x24, 0x31, 0x42, 0x65, 0x20, 0x50, 0x75, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x65,
		0x20, 0x50, 0x75, 0x72, 0x65, 0x42, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x42, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x42, 0x65, 0x20, 0x58, 0x55, 0x24, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x36, 0x30, 0x30, 0x30, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x72, 0x69, 0x73,
		0x5f, 0x58, 0x50, 0x61, 0x72, 0x69, 0x73, 0x20, 0x58, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x41,
		0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x36, 0x53, 0x41,
		0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x45, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x24, 0x31, 0x41, 0x72,
		0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x53, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x41, 0x72,
		0x6d, 0x6f, 0x72, 0x20, 0x33, 0x57, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x33, 0x57, 0x54, 0x41,
		0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x20, 0x35, 0x47, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x41, 0x72,
		0x6d, 0x6f, 0x72, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x38, 0x50, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x54, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x24, 0x31, 0x50, 0x55, 0x6d, 0x61, 0x78, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x24, 0x31, 0x51, 0x61, 0x20, 0x33, 0x47, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x51, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x51, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x41, 0x20, 0x4c, 0x54, 0x45, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x51, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x35, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x6e, 0x69, 0x68, 0x65, 0x72, 0x74,
		0x7a, 0x4a, 0x65, 0x6c, 0x6c, 0x79, 0x20, 0x32, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x5f, 0x70, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74,
		0x55, 0x6e, 0x69, 0x6d, 0x61, 0x78, 0x55, 0x6e, 0x69, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x6e,
		0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x57, 0x65, 0x62, 0x20, 0x54, 0x56, 0x4d, 0x31, 0x30, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x46, 0x4f, 0x2d, 0x52, 0x31, 0x35, 0x4d, 0x38, 0x53, 0x2b, 0x20, 0x34,
		0x4b, 0x48, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x4d, 0x61, 0x78, 0x41, 0x75, 0x64, 0x69, 0x20, 0x4b, 0x53, 0x55, 0x6e, 0x6e, 0x65, 0x63,
		0x74, 0x6f, 0x55, 0x35, 0x31, 0x33, 0x44, 0x72, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x54, 0x55, 0x35,
		0x31, 0x35, 0x31, 0x55, 0x36, 0x31, 0x31, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x58,
		0x55, 0x36, 0x31, 0x33, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x53, 0x55, 0x36, 0x31,
		0x35, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x4d, 0x55, 0x36, 0x31, 0x36, 0x55, 0x37,
		0x31, 0x30, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x55, 0x37, 0x31, 0x30, 0x55, 0x37,
		0x32, 0x30, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x5a, 0x55, 0x2d, 0x38, 0x33, 0x30,
		0x52, 0x75, 0x73, 0x68, 0x55, 0x39, 0x30, 0x33, 0x55, 0x39, 0x30, 0x35, 0x41, 0x69, 0x72, 0x20,
		0x35, 0x2e, 0x35, 0x55, 0x6e, 0x6f, 0x6e, 0x75, 0x55, 0x6e, 0x6f, 0x77, 0x68, 0x79, 0x51, 0x4f,
		0x4f, 0x51, 0x20, 0x51, 0x4f, 0x4f, 0x51, 0x55, 0x72, 0x6f, 0x76, 0x6f, 0x56, 0x41, 0x49, 0x4f,
		0x56, 0x50, 0x41, 0x30, 0x35, 0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x41, 0x56, 0x41, 0x56,
		0x41, 0x56, 0x43, 0x43, 0x61, 0x63, 0x74, 0x75, 0x73, 0x2d, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x63,
		0x74, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x20, 0x49, 0x49, 0x56, 0x44, 0x56, 0x44,
		0x56, 0x45, 0x4f, 0x4e, 0x56, 0x47, 0x4f, 0x20, 0x54, 0x45, 0x4c, 0x56, 0x65, 0x6e, 0x74, 0x75,
		0x72, 0x65, 0x20, 0x56, 0x24, 0x31, 0x4f, 0x63, 0x65, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x56, 0x49,
		0x57, 0x41, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x4c, 0x69, 0x67, 0x68,
		0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x20, 0x50, 0x4c, 0x55, 0x53,
		0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20,
		0x41, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x4b, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x56, 0x4b, 0x24, 0x31, 0x56, 0x4b, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x54, 0x35, 0x20, 0x53, 0x45,
		0x56, 0x4f, 0x47, 0x41, 0x56, 0x4f, 0x47, 0x41, 0x20, 0x35, 0x35, 0x39, 0x30, 0x39, 0x56, 0x56,
		0x56, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x56, 0x31, 0x56, 0x61, 0x6e, 0x6b, 0x79, 0x6f, 0x4d, 0x61,
		0x74, 0x72, 0x69, 0x78, 0x50, 0x61, 0x64, 0x20, 0x53, 0x24, 0x31, 0x51, 0x54, 0x61, 0x62, 0x20,
		0x24, 0x31, 0x56, 0x61, 0x72, 0x67, 0x6f, 0x56, 0x61, 0x73, 0x74, 0x6b, 0x69, 0x6e, 0x67, 0x4b,
		0x69, 0x6e, 0x67, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x56, 0x65, 0x6e, 0x73,
		0x6f, 0x49, 0x73, 0x70, 0x72, 0x69, 0x74, 0x20, 0x55, 0x35, 0x30, 0x56, 0x65, 0x6e, 0x74, 0x75,
		0x72, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x56, 0x43, 0x54, 0x24, 0x31, 0x56, 0x65, 0x72, 0x69,
		0x63, 0x6f, 0x55, 0x6e, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x56, 0x65, 0x72, 0x69,
		0x7a, 0x6f, 0x6e, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x31, 0x30, 0x51, 0x54,
		0x41, 0x53, 0x55, 0x4e, 0x31, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x38, 0x20,
		0x48, 0x44, 0x51, 0x54, 0x41, 0x53, 0x55, 0x4e, 0x32, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69,
		0x73, 0x20, 0x38, 0x20, 0x48, 0x44, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x51, 0x54, 0x41,
		0x51, 0x5a, 0x33, 0x4b, 0x49, 0x44, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x4b,
		0x69, 0x64, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x51, 0x54, 0x41, 0x51, 0x5a, 0x33, 0x45, 0x6c, 0x6c,
		0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x38, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20,
		0x37, 0x56, 0x65, 0x72, 0x6e, 0x65, 0x65, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x58, 0x4d, 0x61, 0x72, 0x73, 0x20, 0x50,
		0x72, 0x6f, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x45, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x65, 0x72, 0x6e, 0x65, 0x65, 0x5f, 0x4d, 0x35, 0x4d, 0x37, 0x5f, 0x45, 0x45, 0x41,
		0x58, 0x32, 0x5f, 0x65, 0x75, 0x72, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x73, 0x65, 0x64, 0x4d, 0x6f,
		0x74, 0x69, 0x6f, 0x6e, 0x20, 0x45, 0x31, 0x2e, 0x31, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x49,
		0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73,
		0x73, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x24, 0x31,
		0x20, 0x34, 0x47, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x4c, 0x75, 0x63, 0x6b, 0x20,
		0x34, 0x47, 0x20, 0x4e, 0x46, 0x43, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x54, 0x61, 0x62, 0x20,
		0x58, 0x24, 0x31, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x47, 0x20, 0x24, 0x32, 0x2e, 0x24, 0x33,
		0x22, 0x56, 0x65, 0x72, 0x74, 0x75, 0x41, 0x73, 0x74, 0x65, 0x72, 0x20, 0x50, 0x43, 0x6f, 0x6e,
		0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x58, 0x56, 0x65, 0x72, 0x79,
		0x6b, 0x6f, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x79, 0x6b, 0x6f, 0x6f, 0x6c, 0x4c, 0x6f, 0x74, 0x75,
		0x73, 0x4c, 0x6f, 0x74, 0x75, 0x73, 0x20, 0x4a, 0x72, 0x4c, 0x6f, 0x74, 0x75, 0x73, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x49, 0x49, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x4c, 0x54, 0x45, 0x4c, 0x6f, 0x74, 0x75, 0x73, 0x20, 0x49, 0x49, 0x4d, 0x61, 0x76, 0x65,
		0x72, 0x69, 0x63, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x50,
		0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x48, 0x65, 0x6c, 0x69, 0x78, 0x20, 0x49, 0x49, 0x41, 0x6c,
		0x70, 0x68, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20,
		0x49, 0x49, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x49, 0x49, 0x49, 0x4d, 0x61,
		0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4a, 0x72, 0x4d, 0x61, 0x76,
		0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x4a, 0x72, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b,
		0x20, 0x4c, 0x54, 0x45, 0x53, 0x70, 0x65, 0x61, 0x72, 0x53, 0x70, 0x65, 0x61, 0x72, 0x20, 0x4a,
		0x72, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x41,
		0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x53, 0x6f, 0x6c, 0x20, 0x51, 0x75, 0x61, 0x74, 0x72, 0x6f, 0x20,
		0x4a, 0x72, 0x43, 0x79, 0x70, 0x72, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x79, 0x70, 0x72,
		0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x65, 0x6f, 0x20, 0x33, 0x47, 0x4c, 0x65, 0x6f, 0x20,
		0x49, 0x56, 0x4c, 0x65, 0x6f, 0x20, 0x56, 0x44, 0x6f, 0x72, 0x61, 0x64, 0x6f, 0x4f, 0x72, 0x69,
		0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4a, 0x72, 0x43, 0x6f,
		0x73, 0x6d, 0x6f, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x65, 0x20, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72,
		0x6f, 0x4b, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x61, 0x64, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x6f, 0x6c,
		0x6f, 0x72, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x4b, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x61, 0x64,
		0x20, 0x49, 0x56, 0x56, 0x65, 0x73, 0x74, 0x61, 0x56, 0x45, 0x53, 0x54, 0x41, 0x33, 0x32, 0x4c,
		0x44, 0x38, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x54, 0x56, 0x20, 0x33, 0x32, 0x4c, 0x44, 0x38,
		0x36, 0x53, 0x56, 0x45, 0x53, 0x54, 0x41, 0x5f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x54, 0x56,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x54, 0x56, 0x56, 0x65, 0x73, 0x74, 0x65, 0x6c, 0x56, 0x54, 0x39,
		0x37, 0x50, 0x52, 0x4f, 0x56, 0x54, 0x61, 0x62, 0x20, 0x39, 0x2e, 0x37, 0x20, 0x50, 0x72, 0x6f,
		0x56, 0x50, 0x37, 0x34, 0x56, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x49, 0x49,
		0x56, 0x54, 0x41, 0x42, 0x31, 0x30, 0x56, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x56, 0x5f, 0x54,
		0x41, 0x42, 0x5f, 0x37, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x49, 0x49, 0x49, 0x56, 0x54, 0x61, 0x62,
		0x20, 0x37, 0x20, 0x45, 0x63, 0x6f, 0x20, 0x33, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x37, 0x5f,
		0x4c, 0x49, 0x54, 0x45, 0x5f, 0x49, 0x49, 0x49, 0x56, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x33, 0x56, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x56, 0x33, 0x5f, 0x35,
		0x35, 0x38, 0x30, 0x5f, 0x44, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x56, 0x33,
		0x20, 0x35, 0x35, 0x38, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x56, 0x53, 0x50, 0x31, 0x34, 0x35,
		0x4d, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x34, 0x2e, 0x35, 0x56, 0x53, 0x50, 0x32, 0x35, 0x30,
		0x47, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x35, 0x2e, 0x30, 0x56, 0x56, 0x53, 0x50, 0x32, 0x35,
		0x30, 0x53, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x35, 0x2e, 0x30, 0x58, 0x56, 0x53, 0x50, 0x33,
		0x35, 0x35, 0x47, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x35, 0x2e, 0x35, 0x56, 0x56, 0x53, 0x50,
		0x33, 0x35, 0x35, 0x53, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x35, 0x2e, 0x35, 0x58, 0x56, 0x65,
		0x6e, 0x75, 0x73, 0x20, 0x56, 0x24, 0x31, 0x24, 0x32, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x5a,
		0x24, 0x31, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x45, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x45, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x45, 0x24, 0x31, 0x56, 0x65, 0x73, 0x74, 0x65, 0x6c,
		0x5f, 0x35, 0x30, 0x30, 0x30, 0x5f, 0x44, 0x75, 0x61, 0x6c, 0x35, 0x30, 0x30, 0x30, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x56, 0x65, 0x73, 0x74, 0x65, 0x6c, 0x5f, 0x35, 0x30, 0x30, 0x30, 0x5f, 0x32,
		0x67, 0x62, 0x35, 0x30, 0x30, 0x30, 0x20, 0x32, 0x47, 0x42, 0x56, 0x65, 0x78, 0x69, 0x61, 0x56,
		0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x5f,
		0x56, 0x31, 0x35, 0x38, 0x35, 0x56, 0x31, 0x35, 0x38, 0x35, 0x56, 0x54, 0x37, 0x35, 0x43, 0x4b,
		0x72, 0x79, 0x74, 0x6f, 0x6e, 0x20, 0x33, 0x4b, 0x72, 0x79, 0x74, 0x6f, 0x6e, 0x20, 0x32, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x31, 0x44, 0x65,
		0x6c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x31, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x32, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x53, 0x74, 0x61,
		0x72, 0x72, 0x20, 0x31, 0x30, 0x30, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x30, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x5a, 0x34, 0x35, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x66,
		0x69, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x5a, 0x34, 0x35, 0x51, 0x20, 0x53, 0x74, 0x61, 0x72, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x5a, 0x35, 0x30, 0x20, 0x4e, 0x6f, 0x76, 0x61,
		0x56, 0x69, 0x65, 0x77, 0x53, 0x6f, 0x6e, 0x69, 0x63, 0x56, 0x35, 0x30, 0x30, 0x41, 0x38, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31,
		0x56, 0x69, 0x65, 0x77, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x56, 0x69, 0x65, 0x77, 0x42, 0x6f,
		0x61, 0x72, 0x64, 0x20, 0x49, 0x46, 0x50, 0x24, 0x31, 0x35, 0x30, 0x2d, 0x33, 0x20, 0x24, 0x31,
		0x22, 0x20, 0x34, 0x4b, 0x56, 0x69, 0x6e, 0x61, 0x62, 0x6f, 0x78, 0x56, 0x69, 0x6e, 0x67, 0x61,
		0x56, 0x4d, 0x50, 0x2d, 0x30, 0x32, 0x31, 0x2d, 0x38, 0x32, 0x30, 0x32, 0x31, 0x56, 0x4d, 0x50,
		0x2d, 0x30, 0x32, 0x35, 0x2d, 0x33, 0x32, 0x34, 0x30, 0x32, 0x35, 0x56, 0x4d, 0x50, 0x2d, 0x30,
		0x31, 0x35, 0x2d, 0x31, 0x36, 0x32, 0x30, 0x31, 0x35, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x34, 0x31,
		0x2d, 0x31, 0x36, 0x32, 0x30, 0x34, 0x31, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x34, 0x35, 0x2d, 0x36,
		0x36, 0x34, 0x30, 0x34, 0x35, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x31, 0x31, 0x2d, 0x38, 0x31, 0x30,
		0x31, 0x31, 0x30, 0x32, 0x33, 0x56, 0x69, 0x6e, 0x73, 0x6f, 0x63, 0x56, 0x69, 0x6f, 0x73, 0x56,
		0x4d, 0x50, 0x30, 0x36, 0x31, 0x37, 0x56, 0x69, 0x70, 0x72, 0x6f, 0x50, 0x72, 0x6f, 0x20, 0x32,
		0x58, 0x56, 0x69, 0x72, 0x7a, 0x6f, 0x56, 0x36, 0x30, 0x38, 0x63, 0x56, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72,
		0x65, 0x56, 0x69, 0x74, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x56, 0x69, 0x75, 0x6d, 0x65, 0x65, 0x56,
		0x69, 0x76, 0x61, 0x78, 0x46, 0x6c, 0x79, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x6f,
		0x69, 0x6e, 0x74, 0x20, 0x58, 0x24, 0x31, 0x46, 0x75, 0x6e, 0x20, 0x53, 0x35, 0x30, 0x30, 0x46,
		0x75, 0x6e, 0x20, 0x53, 0x24, 0x31, 0x46, 0x6c, 0x79, 0x20, 0x24, 0x31, 0x46, 0x6c, 0x79, 0x20,
		0x56, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x58,
		0x35, 0x30, 0x31, 0x30, 0x54, 0x50, 0x43, 0x2d, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x56, 0x69,
		0x76, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x33, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x39, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x33, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x35, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x37, 0x56, 0x32, 0x31, 0x35, 0x37, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f,
		0x20, 0x35, 0x20, 0x53, 0x45, 0x56, 0x32, 0x31, 0x35, 0x34, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x4e, 0x65, 0x6f, 0x20, 0x35, 0x53, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x37, 0x20, 0x35, 0x47, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e,
		0x65, 0x6f, 0x20, 0x33, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x38, 0x35, 0x35,
		0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e,
		0x65, 0x6f, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x31,
		0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x31, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x33, 0x56,
		0x31, 0x39, 0x31, 0x39, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x35, 0x78, 0x56, 0x32, 0x31,
		0x33, 0x31, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x35, 0x78, 0x20, 0x35, 0x47, 0x56, 0x32,
		0x31, 0x34, 0x38, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x5a, 0x35, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x31, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x55, 0x31, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x33, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x55, 0x33, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x33, 0x78, 0x20, 0x35, 0x47, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x38, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32,
		0x31, 0x56, 0x32, 0x31, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x65, 0x56, 0x32, 0x31, 0x65, 0x20,
		0x35, 0x47, 0x56, 0x32, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x55, 0x32, 0x30, 0x55,
		0x31, 0x30, 0x4e, 0x65, 0x78, 0x4e, 0x65, 0x78, 0x20, 0x33, 0x4e, 0x65, 0x78, 0x20, 0x33, 0x20,
		0x35, 0x47, 0x4e, 0x65, 0x78, 0x20, 0x33, 0x53, 0x4e, 0x65, 0x78, 0x20, 0x53, 0x4e, 0x65, 0x78,
		0x20, 0x41, 0x4e, 0x65, 0x78, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x44, 0x69, 0x73, 0x70, 0x6c,
		0x61, 0x79, 0x56, 0x32, 0x31, 0x31, 0x35, 0x41, 0x54, 0x31, 0x20, 0x35, 0x47, 0x56, 0x31, 0x39,
		0x36, 0x32, 0x42, 0x41, 0x47, 0x31, 0x20, 0x35, 0x47, 0x53, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56,
		0x32, 0x31, 0x33, 0x30, 0x41, 0x53, 0x31, 0x30, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x33,
		0x30, 0x56, 0x32, 0x33, 0x20, 0x35, 0x47, 0x53, 0x36, 0x20, 0x35, 0x47, 0x53, 0x31, 0x32, 0x20,
		0x35, 0x47, 0x53, 0x37, 0x53, 0x37, 0x65, 0x53, 0x37, 0x74, 0x53, 0x39, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x53, 0x39, 0x65, 0x55, 0x33, 0x58, 0x56, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x56, 0x31, 0x31, 0x69, 0x56, 0x31, 0x35, 0x56, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x31,
		0x37, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x31, 0x37, 0x20, 0x4e, 0x65, 0x6f, 0x56, 0x31, 0x37, 0x56,
		0x31, 0x39, 0x56, 0x32, 0x30, 0x20, 0x53, 0x45, 0x56, 0x35, 0x56, 0x35, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x56, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x35, 0x73, 0x56, 0x37, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x56, 0x39, 0x56, 0x39, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x56, 0x39, 0x20, 0x50,
		0x72, 0x6f, 0x56, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x39, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x58, 0x39, 0x73, 0x58, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x55, 0x44, 0x58, 0x32, 0x30, 0x58, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58,
		0x32, 0x31, 0x69, 0x58, 0x32, 0x31, 0x20, 0x55, 0x44, 0x58, 0x32, 0x31, 0x58, 0x32, 0x31, 0x53,
		0x58, 0x32, 0x33, 0x58, 0x32, 0x37, 0x58, 0x32, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x33, 0x30,
		0x58, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x30, 0x58, 0x35, 0x30, 0x65, 0x58, 0x35,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x58, 0x36, 0x30, 0x58, 0x36, 0x30, 0x74, 0x58, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x58, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x37, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x58, 0x37, 0x30, 0x58, 0x37,
		0x30, 0x20, 0x35, 0x47, 0x58, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x36, 0x59, 0x31, 0x73, 0x59, 0x31, 0x37, 0x59, 0x31, 0x31, 0x59, 0x31, 0x32,
		0x56, 0x32, 0x31, 0x36, 0x33, 0x41, 0x59, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x31, 0x32,
		0x61, 0x59, 0x31, 0x32, 0x69, 0x59, 0x31, 0x35, 0x59, 0x31, 0x35, 0x73, 0x59, 0x31, 0x39, 0x59,
		0x32, 0x30, 0x59, 0x32, 0x35, 0x59, 0x32, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59,
		0x32, 0x30, 0x41, 0x59, 0x32, 0x30, 0x47, 0x59, 0x32, 0x30, 0x54, 0x59, 0x32, 0x30, 0x47, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x31, 0x31, 0x73, 0x59, 0x32, 0x30, 0x73, 0x59, 0x37,
		0x32, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x30, 0x32, 0x41, 0x59, 0x37, 0x32, 0x54, 0x20, 0x35,
		0x47, 0x59, 0x32, 0x30, 0x69, 0x59, 0x32, 0x31, 0x73, 0x59, 0x32, 0x31, 0x59, 0x33, 0x59, 0x33,
		0x20, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x59, 0x33, 0x30, 0x59, 0x33, 0x30, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x33, 0x30, 0x67, 0x59, 0x33, 0x31, 0x59, 0x33, 0x31,
		0x73, 0x56, 0x32, 0x31, 0x35, 0x38, 0x41, 0x59, 0x33, 0x32, 0x59, 0x33, 0x33, 0x59, 0x33, 0x33,
		0x73, 0x59, 0x35, 0x73, 0x56, 0x32, 0x30, 0x32, 0x33, 0x45, 0x41, 0x59, 0x35, 0x30, 0x74, 0x59,
		0x35, 0x31, 0x59, 0x35, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x59, 0x35, 0x31, 0x73,
		0x59, 0x35, 0x32, 0x73, 0x59, 0x35, 0x32, 0x59, 0x35, 0x33, 0x69, 0x59, 0x35, 0x33, 0x59, 0x35,
		0x33, 0x73, 0x56, 0x32, 0x30, 0x36, 0x39, 0x41, 0x59, 0x35, 0x33, 0x73, 0x20, 0x54, 0x31, 0x59,
		0x35, 0x35, 0x6c, 0x59, 0x35, 0x35, 0x73, 0x56, 0x32, 0x31, 0x36, 0x34, 0x41, 0x59, 0x35, 0x35,
		0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x56, 0x32, 0x30, 0x34, 0x35, 0x41, 0x59, 0x35,
		0x34, 0x73, 0x59, 0x36, 0x35, 0x59, 0x36, 0x39, 0x59, 0x37, 0x30, 0x73, 0x59, 0x36, 0x30, 0x73,
		0x59, 0x37, 0x31, 0x59, 0x37, 0x31, 0x69, 0x59, 0x37, 0x33, 0x59, 0x37, 0x33, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x59, 0x37, 0x33, 0x73, 0x59, 0x37, 0x36, 0x20, 0x35, 0x47, 0x56, 0x32,
		0x31, 0x35, 0x36, 0x41, 0x59, 0x37, 0x36, 0x73, 0x59, 0x37, 0x73, 0x59, 0x38, 0x31, 0x59, 0x38,
		0x31, 0x69, 0x59, 0x38, 0x31, 0x73, 0x59, 0x38, 0x33, 0x59, 0x38, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x59, 0x38, 0x39, 0x59, 0x39, 0x30, 0x59, 0x39, 0x31, 0x59, 0x39, 0x31, 0x69, 0x59, 0x39, 0x73,
		0x59, 0x31, 0x32, 0x73, 0x59, 0x31, 0x32, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59,
		0x39, 0x33, 0x59, 0x39, 0x33, 0x73, 0x59, 0x39, 0x35, 0x59, 0x39, 0x37, 0x5a, 0x31, 0x5a, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x5a, 0x31, 0x69, 0x5a, 0x31, 0x78, 0x5a, 0x33, 0x78, 0x5a, 0x35, 0x78,
		0x5a, 0x35, 0x78, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x59, 0x37, 0x35, 0x20, 0x35, 0x47,
		0x59, 0x37, 0x35, 0x73, 0x58, 0x20, 0x53, 0x68, 0x6f, 0x74, 0x58, 0x36, 0x53, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x58, 0x36, 0x53, 0x59, 0x36, 0x36, 0x69, 0x58, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20,
		0x24, 0x31, 0x53, 0x58, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x56, 0x69, 0x7a, 0x69,
		0x6f, 0x56, 0x41, 0x50, 0x34, 0x33, 0x30, 0x49, 0x53, 0x56, 0x2d, 0x42, 0x31, 0x31, 0x44, 0x35,
		0x30, 0x75, 0x2d, 0x44, 0x31, 0x56, 0x6f, 0x64, 0x61, 0x63, 0x6f, 0x6d, 0x4b, 0x69, 0x63, 0x6b,
		0x61, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x34, 0x47, 0x56, 0x6f, 0x64, 0x61, 0x66,
		0x6f, 0x6e, 0x65, 0x56, 0x46, 0x44, 0x20, 0x31, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x56, 0x46, 0x36, 0x38, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4b,
		0x69, 0x63, 0x6b, 0x61, 0x56, 0x46, 0x36, 0x39, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x46,
		0x69, 0x72, 0x73, 0x74, 0x20, 0x36, 0x56, 0x46, 0x44, 0x20, 0x32, 0x30, 0x30, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x46, 0x69, 0x72, 0x73, 0x74, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20, 0x33, 0x30,
		0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x37, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x45, 0x38, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x45, 0x39, 0x56, 0x46, 0x44, 0x20, 0x36, 0x30,
		0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x56, 0x46,
		0x44, 0x33, 0x32, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x43, 0x39, 0x56, 0x46, 0x44, 0x20,
		0x38, 0x32, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x58, 0x39, 0x56, 0x46, 0x44, 0x20, 0x36,
		0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4e, 0x38, 0x56, 0x46, 0x44, 0x20, 0x36, 0x33,
		0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4e, 0x31, 0x30, 0x56, 0x46, 0x44, 0x20, 0x36, 0x32,
		0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4e, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x75, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x36, 0x56, 0x46, 0x44, 0x20, 0x37, 0x30, 0x30, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20,
		0x37, 0x32, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4e, 0x39, 0x56, 0x46, 0x44, 0x20, 0x37,
		0x33, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x56, 0x31, 0x30, 0x56, 0x46, 0x44, 0x20, 0x39,
		0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d,
		0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x20, 0x54, 0x75,
		0x72, 0x62, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x56, 0x6f, 0x64, 0x61, 0x66, 0x6f, 0x6e, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61,
		0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x43, 0x68, 0x61, 0x74, 0x56, 0x46, 0x2d, 0x36, 0x39,
		0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x36, 0x56, 0x46,
		0x2d, 0x37, 0x39, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20,
		0x36, 0x56, 0x46, 0x2d, 0x38, 0x39, 0x35, 0x4e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x20, 0x36, 0x56, 0x46, 0x2d, 0x31, 0x33, 0x39, 0x37, 0x54, 0x61, 0x62, 0x20,
		0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x36, 0x56, 0x46, 0x2d, 0x31, 0x34, 0x39, 0x37, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x36, 0x56, 0x46, 0x44, 0x20, 0x31, 0x31, 0x30,
		0x30, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20, 0x31,
		0x33, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x4e, 0x38, 0x56,
		0x46, 0x44, 0x20, 0x31, 0x34, 0x30, 0x30, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x47, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x49, 0x49, 0x49, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x49, 0x49, 0x49, 0x20, 0x31, 0x30, 0x56, 0x46, 0x44, 0x20, 0x24, 0x31, 0x56, 0x6f,
		0x6e, 0x69, 0x6e, 0x6f, 0x5a, 0x75, 0x6e, 0x20, 0x58, 0x4f, 0x5a, 0x75, 0x6e, 0x20, 0x58, 0x53,
		0x5a, 0x75, 0x6e, 0x20, 0x58, 0x58, 0x79, 0x6c, 0x6f, 0x20, 0x24, 0x31, 0x56, 0x6f, 0x6c, 0x74,
		0x20, 0x53, 0x20, 0x41, 0x37, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x56, 0x6f, 0x6c, 0x74, 0x20,
		0x58, 0x47, 0x79, 0x67, 0x61, 0x20, 0x51, 0x53, 0x47, 0x79, 0x67, 0x61, 0x20, 0x58, 0x53, 0x47,
		0x79, 0x67, 0x61, 0x20, 0x24, 0x31, 0x4a, 0x61, 0x78, 0x20, 0x51, 0x53, 0x4a, 0x61, 0x78, 0x20,
		0x53, 0x20, 0x41, 0x37, 0x4a, 0x61, 0x78, 0x20, 0x24, 0x31, 0x4a, 0x61, 0x78, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x69, 0x4d, 0x61, 0x72, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x49, 0x4d, 0x61, 0x72, 0x74,
		0x20, 0x50, 0x72, 0x6f, 0x45, 0x70, 0x69, 0x63, 0x20, 0x24, 0x31, 0x50, 0x6c, 0x75, 0x72, 0x69,
		0x20, 0x24, 0x31, 0x37, 0x50, 0x6c, 0x75, 0x72, 0x69, 0x20, 0x24, 0x31, 0x38, 0x44, 0x72, 0x75,
		0x69, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x20, 0x24, 0x31, 0x4e, 0x61,
		0x76, 0x6f, 0x5f, 0x51, 0x53, 0x4e, 0x61, 0x76, 0x6f, 0x20, 0x51, 0x53, 0x4f, 0x72, 0x69, 0x6e,
		0x5f, 0x51, 0x53, 0x4f, 0x72, 0x69, 0x6e, 0x20, 0x51, 0x53, 0x53, 0x69, 0x72, 0x69, 0x75, 0x73,
		0x5f, 0x51, 0x53, 0x53, 0x69, 0x72, 0x69, 0x75, 0x73, 0x20, 0x51, 0x53, 0x58, 0x61, 0x76, 0x79,
		0x5f, 0x54, 0x37, 0x58, 0x61, 0x76, 0x79, 0x20, 0x54, 0x37, 0x58, 0x61, 0x76, 0x79, 0x5f, 0x4c,
		0x38, 0x58, 0x61, 0x76, 0x79, 0x20, 0x4c, 0x38, 0x56, 0x6f, 0x6e, 0x74, 0x61, 0x72, 0x48, 0x4b,
		0x31, 0x20, 0x4d, 0x61, 0x78, 0x48, 0x4b, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x48, 0x4b, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x4b, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x6f, 0x72, 0x61,
		0x67, 0x6f, 0x56, 0x4f, 0x52, 0x41, 0x47, 0x4f, 0x43, 0x45, 0x4c, 0x4c, 0x2d, 0x35, 0x30, 0x30,
		0x56, 0x6f, 0x72, 0x63, 0x6f, 0x6d, 0x53, 0x58, 0x50, 0x72, 0x6f, 0x53, 0x58, 0x20, 0x50, 0x72,
		0x6f, 0x56, 0x6f, 0x72, 0x6b, 0x65, 0x56, 0x6f, 0x74, 0x6f, 0x56, 0x6f, 0x78, 0x74, 0x65, 0x6c,
		0x56, 0x6f, 0x79, 0x6f, 0x69, 0x38, 0x20, 0x4d, 0x61, 0x78, 0x56, 0x73, 0x6d, 0x61, 0x72, 0x74,
		0x4a, 0x6f, 0x79, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4a, 0x6f, 0x79, 0x20, 0x24,
		0x31, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x65,
		0x65, 0x20, 0x33, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x33, 0x48, 0x6f, 0x62, 0x73, 0x6f,
		0x6e, 0x42, 0x65, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x73, 0x75, 0x6e, 0x49, 0x6c, 0x6c,
		0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x73, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4d,
		0x61, 0x72, 0x73, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x73, 0x20, 0x4e, 0x6f, 0x63,
		0x61, 0x6d, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x54,
		0x65, 0x6d, 0x70, 0x6f, 0x20, 0x53, 0x31, 0x33, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x20, 0x53, 0x31,
		0x31, 0x48, 0x54, 0x30, 0x37, 0x30, 0x34, 0x57, 0x30, 0x38, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20,
		0x37, 0x57, 0x34, 0x57, 0x45, 0x57, 0x49, 0x57, 0x41, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x54, 0x56, 0x57, 0x61, 0x6c, 0x74, 0x6f, 0x6e, 0x50, 0x72,
		0x69, 0x6d, 0x6f, 0x20, 0x57, 0x61, 0x6c, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x50, 0x72, 0x69,
		0x6d, 0x6f, 0x20, 0x53, 0x36, 0x20, 0x69, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x72,
		0x69, 0x6d, 0x6f, 0x20, 0x53, 0x36, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x50,
		0x72, 0x69, 0x6d, 0x6f, 0x20, 0x48, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x72, 0x69, 0x6d, 0x6f,
		0x20, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x48, 0x38,
		0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x52, 0x58, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x57, 0x65,
		0x69, 0x6d, 0x65, 0x69, 0x77, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x33, 0x57, 0x65, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x33, 0x57, 0x65, 0x6c, 0x6c, 0x63, 0x6f, 0x4d, 0x57, 0x65, 0x73, 0x74, 0x65,
		0x72, 0x6e, 0x20, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
		0x65, 0x72, 0x32, 0x30, 0x31, 0x30, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x30, 0x29, 0x57, 0x65, 0x73, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x65,
		0x78, 0x6c, 0x65, 0x72, 0x5a, 0x45, 0x4e, 0x20, 0x34, 0x2e, 0x35, 0x5a, 0x45, 0x4e, 0x20, 0x34,
		0x2e, 0x37, 0x5a, 0x45, 0x4e, 0x20, 0x35, 0x5a, 0x45, 0x4e, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x54, 0x41, 0x42, 0x20, 0x31, 0x30, 0x51, 0x54, 0x41, 0x42, 0x20, 0x31, 0x30, 0x69, 0x51,
		0x20, 0x33, 0x47, 0x57, 0x69, 0x65, 0x70, 0x70, 0x6f, 0x57, 0x69, 0x67, 0x6f, 0x72, 0x57, 0x69,
		0x6b, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x55, 0x31, 0x30, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x55, 0x32, 0x30, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x55, 0x33, 0x30, 0x43, 0x69, 0x6e,
		0x6b, 0x20, 0x50, 0x65, 0x61, 0x78, 0x20, 0x32, 0x43, 0x69, 0x6e, 0x6b, 0x24, 0x31, 0x43, 0x69,
		0x6e, 0x6b, 0x20, 0x24, 0x31, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x20, 0x50, 0x75, 0x72,
		0x65, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x20, 0x53, 0x74, 0x61, 0x72, 0x48, 0x69, 0x67,
		0x68, 0x77, 0x61, 0x79, 0x24, 0x31, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x20, 0x24, 0x31,
		0x49, 0x67, 0x67, 0x79, 0x46, 0x65, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x69, 0x72, 0x77, 0x61,
		0x79, 0x52, 0x69, 0x64, 0x67, 0x65, 0x20, 0x46, 0x61, 0x62, 0x20, 0x34, 0x47, 0x52, 0x69, 0x64,
		0x67, 0x65, 0x20, 0x34, 0x47, 0x52, 0x69, 0x64, 0x67, 0x65, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f,
		0x77, 0x20, 0x24, 0x31, 0x44, 0x61, 0x72, 0x6b, 0x73, 0x69, 0x64, 0x65, 0x44, 0x61, 0x72, 0x6b,
		0x6d, 0x6f, 0x6f, 0x6e, 0x44, 0x61, 0x72, 0x6b, 0x66, 0x75, 0x6c, 0x6c, 0x44, 0x61, 0x72, 0x6b,
		0x6e, 0x69, 0x67, 0x68, 0x74, 0x53, 0x75, 0x62, 0x6c, 0x69, 0x6d, 0x4f, 0x7a, 0x7a, 0x79, 0x42,
		0x61, 0x72, 0x72, 0x79, 0x42, 0x69, 0x72, 0x64, 0x79, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x4a, 0x69,
		0x6d, 0x6d, 0x79, 0x4a, 0x45, 0x52, 0x52, 0x59, 0x20, 0x4d, 0x41, 0x58, 0x4a, 0x65, 0x72, 0x72,
		0x79, 0x20, 0x4d, 0x61, 0x78, 0x57, 0x5f, 0x4b, 0x33, 0x30, 0x30, 0x4a, 0x65, 0x72, 0x72, 0x79,
		0x20, 0x33, 0x57, 0x2d, 0x4b, 0x34, 0x32, 0x30, 0x2d, 0x54, 0x56, 0x4d, 0x4a, 0x65, 0x72, 0x72,
		0x79, 0x20, 0x34, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x32, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x47,
		0x65, 0x74, 0x61, 0x77, 0x61, 0x79, 0x47, 0x6f, 0x61, 0x46, 0x72, 0x65, 0x64, 0x64, 0x79, 0x4b,
		0x69, 0x74, 0x65, 0x57, 0x5f, 0x4b, 0x34, 0x30, 0x30, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x35,
		0x4c, 0x69, 0x66, 0x65, 0x20, 0x33, 0x4b, 0x65, 0x6e, 0x6e, 0x79, 0x4c, 0x65, 0x6e, 0x6e, 0x79,
		0x20, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x34, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x53,
		0x6c, 0x69, 0x64, 0x65, 0x53, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x20, 0x32, 0x53, 0x75, 0x6e, 0x73,
		0x65, 0x74, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x33, 0x57, 0x2d, 0x4b, 0x32, 0x30, 0x30, 0x53,
		0x75, 0x6e, 0x6e, 0x79, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x6e, 0x6e, 0x79,
		0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x32, 0x57, 0x2d,
		0x4b, 0x33, 0x36, 0x30, 0x2d, 0x54, 0x56, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x34, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x57, 0x2d, 0x4b, 0x31, 0x33, 0x30, 0x2d, 0x54, 0x4d, 0x56, 0x53, 0x75, 0x6e,
		0x6e, 0x79, 0x20, 0x34, 0x57, 0x2d, 0x4b, 0x33, 0x38, 0x30, 0x2d, 0x54, 0x56, 0x4d, 0x53, 0x75,
		0x6e, 0x6e, 0x79, 0x20, 0x35, 0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x20, 0x33, 0x54, 0x6f, 0x6d, 0x6d,
		0x79, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x20, 0x32, 0x54,
		0x6f, 0x6d, 0x6d, 0x79, 0x57, 0x61, 0x78, 0x48, 0x61, 0x72, 0x72, 0x79, 0x57, 0x2d, 0x56, 0x36,
		0x30, 0x30, 0x48, 0x61, 0x72, 0x72, 0x79, 0x20, 0x32, 0x57, 0x49, 0x4d, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x50, 0x75, 0x6c, 0x70, 0x20, 0x46, 0x61, 0x62, 0x20, 0x34, 0x47, 0x50, 0x75, 0x6c, 0x70,
		0x20, 0x46, 0x61, 0x62, 0x50, 0x75, 0x6c, 0x70, 0x20, 0x34, 0x47, 0x50, 0x75, 0x6c, 0x70, 0x52,
		0x6f, 0x62, 0x62, 0x79, 0x24, 0x31, 0x55, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x55, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x55, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x55, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x55, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x56, 0x33, 0x39, 0x39, 0x31, 0x41, 0x4e, 0x55, 0x20, 0x46,
		0x65, 0x65, 0x6c, 0x20, 0x46, 0x61, 0x62, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x20, 0x47, 0x6f,
		0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x20,
		0x58, 0x4c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x57, 0x43, 0x33, 0x30,
		0x30, 0x56, 0x69, 0x65, 0x77, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x5f, 0x43, 0x38, 0x30, 0x30,
		0x57, 0x5f, 0x43, 0x38, 0x36, 0x30, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x57, 0x5f, 0x50, 0x32, 0x30, 0x30, 0x56, 0x69, 0x65, 0x77, 0x20, 0x4d, 0x61, 0x78, 0x57, 0x5f,
		0x50, 0x31, 0x33, 0x30, 0x56, 0x69, 0x65, 0x77, 0x20, 0x47, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x20,
		0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x2d, 0x56, 0x38, 0x35, 0x31, 0x56, 0x69, 0x65, 0x77,
		0x20, 0x35, 0x57, 0x2d, 0x56, 0x38, 0x35, 0x30, 0x2d, 0x45, 0x45, 0x41, 0x56, 0x69, 0x65, 0x77,
		0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x2d, 0x4b, 0x34, 0x32, 0x30, 0x2d, 0x45, 0x45,
		0x41, 0x57, 0x2d, 0x4b, 0x32, 0x31, 0x31, 0x59, 0x36, 0x30, 0x59, 0x36, 0x31, 0x57, 0x2d, 0x4b,
		0x36, 0x31, 0x30, 0x59, 0x36, 0x32, 0x59, 0x38, 0x30, 0x57, 0x2d, 0x56, 0x36, 0x38, 0x30, 0x57,
		0x2d, 0x4b, 0x36, 0x33, 0x30, 0x59, 0x38, 0x32, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x20, 0x34, 0x56, 0x69, 0x65, 0x77, 0x20, 0x34, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x57, 0x2d, 0x56, 0x37, 0x34, 0x35, 0x2d, 0x54, 0x56, 0x4d, 0x52, 0x69, 0x64,
		0x65, 0x52, 0x69, 0x64, 0x65, 0x20, 0x32, 0x52, 0x69, 0x64, 0x65, 0x20, 0x33, 0x57, 0x69, 0x6c,
		0x65, 0x79, 0x66, 0x6f, 0x78, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x2b, 0x57, 0x69, 0x6c, 0x65,
		0x79, 0x66, 0x6f, 0x78, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x58, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x58, 0x53, 0x77, 0x69, 0x66, 0x74, 0x20, 0x32, 0x20, 0x24, 0x31, 0x53, 0x77, 0x69,
		0x66, 0x74, 0x20, 0x32, 0x63, 0x72, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e,
		0x64, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x56, 0x57, 0x69,
		0x6e, 0x6b, 0x57, 0x69, 0x6e, 0x6d, 0x61, 0x78, 0x57, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x6f, 0x54,
		0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x57, 0x69, 0x6e, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x51, 0x39,
		0x33, 0x53, 0x57, 0x69, 0x73, 0x65, 0x61, 0x73, 0x79, 0x57, 0x49, 0x53, 0x45, 0x4e, 0x45, 0x54,
		0x35, 0x57, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x57, 0x69, 0x61, 0x6d, 0x20, 0x23, 0x32, 0x34, 0x57,
		0x4f, 0x4c, 0x44, 0x45, 0x52, 0x5f, 0x57, 0x49, 0x41, 0x4d, 0x5f, 0x36, 0x35, 0x57, 0x69, 0x61,
		0x6d, 0x20, 0x23, 0x36, 0x35, 0x6d, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x6d,
		0x69, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x57, 0x6f, 0x6c, 0x66, 0x67, 0x61, 0x6e, 0x67, 0x41,
		0x54, 0x2d, 0x41, 0x53, 0x24, 0x31, 0x57, 0x6f, 0x6c, 0x6b, 0x69, 0x57, 0x35, 0x35, 0x53, 0x45,
		0x57, 0x35, 0x2e, 0x35, 0x20, 0x53, 0x45, 0x57, 0x53, 0x30, 0x36, 0x37, 0x57, 0x36, 0x20, 0x50,
		0x72, 0x6f, 0x57, 0x6f, 0x6e, 0x75, 0x57, 0x6f, 0x6f, 0x53, 0x50, 0x35, 0x30, 0x32, 0x36, 0x69,
		0x2d, 0x53, 0x63, 0x6f, 0x72, 0x70, 0x69, 0x6f, 0x53, 0x63, 0x6f, 0x72, 0x70, 0x69, 0x6f, 0x57,
		0x6f, 0x72, 0x74, 0x6d, 0x61, 0x6e, 0x6e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x24, 0x31, 0x57, 0x6f, 0x78, 0x74, 0x65, 0x72, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20,
		0x24, 0x31, 0x69, 0x2d, 0x31, 0x30, 0x31, 0x5a, 0x69, 0x65, 0x6c, 0x6f, 0x20, 0x24, 0x31, 0x58,
		0x2d, 0x42, 0x4f, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x5f,
		0x4a, 0x4f, 0x59, 0x31, 0x30, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x4a, 0x4f, 0x59, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x79,
		0x20, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x70, 0x65, 0x20, 0x37, 0x20, 0x24,
		0x31, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x5f, 0x4a, 0x4f, 0x59, 0x37, 0x5f, 0x4d, 0x41, 0x58,
		0x4a, 0x6f, 0x79, 0x20, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x56, 0x32, 0x38, 0x20, 0x4c, 0x54, 0x45,
		0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x31, 0x31, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x50,
		0x31, 0x35, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x31, 0x35,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x48, 0x41, 0x52, 0x50, 0x5f, 0x32, 0x53, 0x68, 0x61, 0x72,
		0x70, 0x20, 0x32, 0x58, 0x2d, 0x56, 0x69, 0x65, 0x77, 0x5a, 0x45, 0x4e, 0x20, 0x55, 0x35, 0x2b,
		0x41, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4b, 0x49, 0x44, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20,
		0x4b, 0x69, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x5f, 0x41, 0x6d, 0x62, 0x65, 0x72,
		0x5f, 0x48, 0x44, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20,
		0x48, 0x44, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x4e, 0x5f, 0x4a, 0x41, 0x44, 0x45, 0x5f, 0x32, 0x5f,
		0x50, 0x52, 0x4f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x4a, 0x61, 0x64, 0x65, 0x20, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x58, 0x2d, 0x56, 0x69, 0x65, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x58, 0x47, 0x49, 0x4d, 0x49, 0x58, 0x67, 0x6f, 0x64, 0x79, 0x58, 0x39, 0x36, 0x58, 0x69, 0x61,
		0x6f, 0x6c, 0x61, 0x6a, 0x69, 0x61, 0x6f, 0x52, 0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65,
		0x72, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x52, 0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70,
		0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52,
		0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x20, 0x38, 0x58, 0x20, 0x50, 0x72, 0x6f,
		0x52, 0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x20, 0x39, 0x58, 0x58, 0x69, 0x61,
		0x6f, 0x6d, 0x69, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x41, 0x57,
		0x4d, 0x2d, 0x41, 0x30, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20,
		0x48, 0x65, 0x6c, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20,
		0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x42,
		0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f,
		0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x20, 0x35, 0x47,
		0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20,
		0x33, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b,
		0x20, 0x34, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x6e, 0x67, 0x6d,
		0x69, 0x20, 0x31, 0x53, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69,
		0x20, 0x32, 0x20, 0x33, 0x47, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x32, 0x48, 0x6f, 0x6e,
		0x67, 0x6d, 0x69, 0x20, 0x32, 0x20, 0x34, 0x47, 0x4d, 0x69, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d,
		0x69, 0x20, 0x39, 0x20, 0x53, 0x45, 0x4d, 0x49, 0x20, 0x43, 0x43, 0x20, 0x39, 0x65, 0x4d, 0x69,
		0x20, 0x43, 0x43, 0x20, 0x39, 0x65, 0x4d, 0x49, 0x20, 0x43, 0x43, 0x39, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
		0x4d, 0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x75, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x49, 0x20, 0x43, 0x43,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x4d, 0x69, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x58,
		0x4d, 0x69, 0x20, 0x31, 0x31, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x54,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x54, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x54, 0x20, 0x35, 0x47, 0x4d, 0x69,
		0x20, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31,
		0x30, 0x53, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x4d,
		0x69, 0x20, 0x31, 0x30, 0x69, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x69, 0x4d, 0x69, 0x20, 0x31, 0x31,
		0x54, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x54, 0x4d, 0x69, 0x20, 0x31, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x20, 0x35, 0x47, 0x20, 0x4e, 0x45, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x69, 0x20,
		0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x32, 0x31, 0x32,
		0x58, 0x4d, 0x69, 0x20, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x38, 0x20, 0x45,
		0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
		0x69, 0x20, 0x38, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x39, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x69, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x39, 0x20, 0x54,
		0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69,
		0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x35,
		0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x69, 0x61, 0x6f, 0x6d, 0x69, 0x5f, 0x4d, 0x44, 0x54,
		0x32, 0x4d, 0x69, 0x20, 0x35, 0x58, 0x4d, 0x69, 0x20, 0x33, 0x4d, 0x69, 0x20, 0x24, 0x31, 0x43,
		0x4d, 0x69, 0x20, 0x34, 0x57, 0x4d, 0x69, 0x20, 0x34, 0x69, 0x4d, 0x69, 0x20, 0x34, 0x20, 0x4c,
		0x54, 0x45, 0x4d, 0x69, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x4d, 0x61,
		0x78, 0x4d, 0x69, 0x20, 0x41, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x4d, 0x69,
		0x78, 0x20, 0x34, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x33, 0x20, 0x35, 0x47, 0x4d, 0x69,
		0x20, 0x4d, 0x69, 0x78, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x32, 0x53,
		0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x50,
		0x6f, 0x63, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x46, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x35, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x32, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x32, 0x41, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x53,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x38, 0x41, 0x20,
		0x24, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x58, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x39, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x41, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x69, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x41, 0x54,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x43,
		0x20, 0x4e, 0x46, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4b, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d,
		0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69,
		0x6f, 0x6e, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4b, 0x34, 0x30, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x20, 0x47, 0x61,
		0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x59, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x34, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x51, 0x69, 0x6e, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x69,
		0x6e, 0x20, 0x32, 0x43, 0x43, 0x31, 0x31, 0x43, 0x69, 0x76, 0x69, 0x4d, 0x69, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x35, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x69, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x34, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x4d, 0x69, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x32, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x4d, 0x69, 0x20, 0x42, 0x6f, 0x78, 0x20,
		0x33, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x4d, 0x69,
		0x20, 0x42, 0x6f, 0x78, 0x20, 0x31, 0x53, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x34, 0x53, 0x4d, 0x69,
		0x54, 0x56, 0x20, 0x51, 0x31, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x4d,
		0x69, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x4d, 0x69, 0x54, 0x56,
		0x20, 0x50, 0x31, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x34, 0x41, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x34,
		0x41, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x4d,
		0x69, 0x78, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x54, 0x44,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x47, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x35, 0x41, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x41, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x58, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x30, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x39, 0x54, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x39, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x4d, 0x32, 0x31, 0x30, 0x33, 0x4b, 0x31, 0x39, 0x59,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x54, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x4d, 0x32,
		0x31, 0x30, 0x33, 0x4b, 0x31, 0x39, 0x49, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x30, 0x54, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4a, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x2b,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x34, 0x47,
		0x32, 0x32, 0x30, 0x31, 0x31, 0x31, 0x37, 0x53, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x31, 0x54, 0x20, 0x35, 0x47, 0x32, 0x32, 0x30, 0x31, 0x31, 0x31, 0x37, 0x53,
		0x59, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37,
		0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x24, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x24, 0x31, 0x4d, 0x49, 0x5f, 0x4e,
		0x4f, 0x54, 0x45, 0x5f, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x24, 0x31, 0x51, 0x69, 0x6e, 0x20, 0x31, 0x73, 0x2b, 0x4d, 0x69, 0x20, 0x4f, 0x6e, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x69, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x69,
		0x20, 0x24, 0x31, 0x48, 0x4d, 0x20, 0x24, 0x31, 0x58, 0x69, 0x6f, 0x6e, 0x43, 0x45, 0x24, 0x31,
		0x58, 0x6f, 0x6c, 0x6f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x2d, 0x31, 0x58, 0x4d, 0x42, 0x6c, 0x61,
		0x63, 0x6b, 0x20, 0x31, 0x58, 0x45, 0x72, 0x61, 0x20, 0x24, 0x31, 0x58, 0x45, 0x72, 0x61, 0x20,
		0x34, 0x58, 0x20, 0x32, 0x47, 0x42, 0x45, 0x72, 0x61, 0x20, 0x32, 0x56, 0x58, 0x6f, 0x72, 0x6f,
		0x54, 0x65, 0x6c, 0x65, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x20, 0x41, 0x33, 0x20, 0x34, 0x47,
		0x54, 0x65, 0x6c, 0x65, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x48, 0x4d, 0x54, 0x20, 0x24, 0x31,
		0x48, 0x53, 0x54, 0x20, 0x32, 0x36, 0x30, 0x58, 0x73, 0x68, 0x69, 0x74, 0x6f, 0x75, 0x58, 0x74,
		0x6f, 0x75, 0x63, 0x68, 0x58, 0x39, 0x58, 0x42, 0x6f, 0x74, 0x20, 0x24, 0x31, 0x58, 0x74, 0x72,
		0x61, 0x74, 0x65, 0x63, 0x68, 0x59, 0x41, 0x53, 0x49, 0x4e, 0x59, 0x4f, 0x54, 0x4f, 0x50, 0x54,
		0x59, 0x55, 0x20, 0x46, 0x6c, 0x79, 0x59, 0x55, 0x48, 0x4f, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x56,
		0x61, 0x73, 0x74, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x61, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x59, 0x31, 0x5f, 0x41, 0x43, 0x45, 0x59, 0x31, 0x20, 0x41,
		0x63, 0x65, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x59, 0x31, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x59, 0x31,
		0x20, 0x53, 0x74, 0x61, 0x72, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x4f, 0x31, 0x5f, 0x4c, 0x49, 0x54,
		0x45, 0x4f, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x59, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x59, 0x4e,
		0x44, 0x58, 0x2d, 0x30, 0x30, 0x30, 0x53, 0x42, 0x59, 0x61, 0x72, 0x76, 0x69, 0x6b, 0x4c, 0x75,
		0x6e, 0x61, 0x20, 0x54, 0x41, 0x42, 0x30, 0x37, 0x2d, 0x39, 0x32, 0x30, 0x4e, 0x4c, 0x75, 0x6e,
		0x61, 0x20, 0x37, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x37, 0x63, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54,
		0x41, 0x42, 0x32, 0x37, 0x34, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42, 0x34, 0x37, 0x34,
		0x4c, 0x75, 0x6e, 0x61, 0x20, 0x31, 0x30, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42, 0x31,
		0x30, 0x2d, 0x31, 0x35, 0x30, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x31, 0x30, 0x63, 0x54, 0x41, 0x42,
		0x30, 0x39, 0x2d, 0x34, 0x31, 0x30, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x39, 0x2e, 0x37, 0x54,
		0x41, 0x42, 0x31, 0x30, 0x2d, 0x34, 0x31, 0x30, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x54, 0x41, 0x42, 0x30, 0x37, 0x2d, 0x34, 0x38, 0x35, 0x4e, 0x6f, 0x62, 0x6c, 0x65,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x37, 0x63, 0x54, 0x41, 0x42,
		0x30, 0x37, 0x2d, 0x32, 0x30, 0x30, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x37, 0x69, 0x63, 0x54,
		0x41, 0x42, 0x30, 0x38, 0x2d, 0x32, 0x30, 0x30, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x38, 0x69,
		0x63, 0x54, 0x41, 0x42, 0x30, 0x38, 0x2d, 0x32, 0x30, 0x31, 0x2d, 0x33, 0x47, 0x58, 0x65, 0x6e,
		0x74, 0x61, 0x20, 0x38, 0x63, 0x54, 0x41, 0x42, 0x39, 0x2d, 0x32, 0x30, 0x30, 0x58, 0x65, 0x6e,
		0x74, 0x61, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x63, 0x54, 0x41, 0x42, 0x30, 0x39, 0x2d, 0x32, 0x31,
		0x31, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x63, 0x2b, 0x58, 0x65, 0x6e,
		0x74, 0x61, 0x20, 0x31, 0x30, 0x69, 0x63, 0x54, 0x41, 0x42, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31,
		0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x31, 0x33, 0x63, 0x59, 0x65, 0x73, 0x4d, 0x36, 0x33, 0x31,
		0x59, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x4d, 0x36, 0x35, 0x31, 0x47, 0x5f, 0x4d,
		0x59, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x32, 0x4d, 0x36, 0x38, 0x35, 0x59,
		0x34, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x33, 0x59, 0x65, 0x7a, 0x7a, 0x34,
		0x45, 0x34, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x34, 0x45, 0x34, 0x59, 0x65, 0x7a, 0x7a, 0x2d, 0x41,
		0x43, 0x34, 0x45, 0x49, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x34, 0x45, 0x49, 0x59, 0x45, 0x5a, 0x5a,
		0x2d, 0x41, 0x34, 0x4d, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x41, 0x34, 0x4d, 0x41, 0x35, 0x45, 0x49,
		0x41, 0x6e, 0x64, 0x79, 0x20, 0x41, 0x35, 0x45, 0x49, 0x41, 0x52, 0x54, 0x32, 0x50, 0x52, 0x4f,
		0x41, 0x72, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x49, 0x56, 0x31, 0x4c, 0x49, 0x56,
		0x32, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x41,
		0x6e, 0x64, 0x79, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x20, 0x24, 0x33, 0x59, 0x6f, 0x6b, 0x61,
		0x20, 0x54, 0x56, 0x4b, 0x42, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x6f, 0x74, 0x61, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x74, 0x6f, 0x6e, 0x65, 0x59,
		0x75, 0x59, 0x75, 0x70, 0x68, 0x6f, 0x72, 0x69, 0x61, 0x59, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
		0x20, 0x32, 0x59, 0x75, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x59,
		0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x32, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x59, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x59, 0x75, 0x61, 0x6e, 0x64, 0x61, 0x6f,
		0x4e, 0x31, 0x30, 0x31, 0x59, 0x75, 0x73, 0x75, 0x6e, 0x4c, 0x41, 0x32, 0x2d, 0x54, 0x59, 0x78,
		0x74, 0x65, 0x6c, 0x5a, 0x48, 0x26, 0x4b, 0x4f, 0x44, 0x59, 0x53, 0x53, 0x45, 0x59, 0x20, 0x4f,
		0x32, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x4f, 0x32, 0x4f, 0x44, 0x59, 0x53, 0x53,
		0x45, 0x59, 0x20, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20,
		0x52, 0x61, 0x6e, 0x67, 0x65, 0x5a, 0x49, 0x46, 0x52, 0x4f, 0x5a, 0x54, 0x45, 0x50, 0x36, 0x35,
		0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x20, 0x31,
		0x30, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x33,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x32,
		0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x33, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x20, 0x49, 0x49, 0x4c, 0x69, 0x62,
		0x65, 0x72, 0x6f, 0x20, 0x53, 0x31, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x46, 0x33,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37,
		0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x37, 0x30, 0x33, 0x30, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x41, 0x37, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x20, 0x56, 0x69,
		0x74, 0x61, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x31, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x32, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x41, 0x78, 0x6f,
		0x6e, 0x20, 0x37, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x78, 0x6f,
		0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20,
		0x31, 0x30, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31,
		0x31, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x41, 0x78, 0x6f, 0x6e, 0x20,
		0x31, 0x31, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x41, 0x32, 0x30, 0x32, 0x32, 0x48, 0x41, 0x78,
		0x6f, 0x6e, 0x20, 0x33, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x32, 0x30, 0x32,
		0x32, 0x50, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x41, 0x32, 0x30, 0x32, 0x32, 0x50, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x41, 0x32, 0x30, 0x32, 0x32, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x32, 0x33, 0x32, 0x32, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33,
		0x30, 0x20, 0x35, 0x47, 0x41, 0x32, 0x33, 0x32, 0x32, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x45, 0x67, 0x41, 0x6c, 0x6c, 0x73, 0x74, 0x61, 0x72, 0x51,
		0x75, 0x65, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x35,
		0x43, 0x74, 0x79, 0x6f, 0x6e, 0x20, 0x41, 0x39, 0x56, 0x35, 0x47, 0x56, 0x35, 0x53, 0x56, 0x35,
		0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6d, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x6c, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x76, 0x69, 0x64, 0x41, 0x76, 0x69, 0x64,
		0x20, 0x35, 0x37, 0x39, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20, 0x32, 0x54, 0x65,
		0x6d, 0x70, 0x6f, 0x20, 0x58, 0x57, 0x61, 0x72, 0x70, 0x20, 0x34, 0x47, 0x56, 0x69, 0x73, 0x69,
		0x62, 0x6c, 0x65, 0x20, 0x52, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x46, 0x6f, 0x72, 0x63,
		0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x54, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x51,
		0x2b, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x51, 0x20, 0x4c, 0x75, 0x78, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x47, 0x46, 0x33, 0x57, 0x61, 0x72, 0x70, 0x20, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x61,
		0x72, 0x70, 0x20, 0x37, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6f, 0x6f,
		0x73, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x2b, 0x4d, 0x61, 0x78, 0x20, 0x58, 0x4c, 0x56, 0x69, 0x74,
		0x61, 0x6c, 0x56, 0x35, 0x20, 0x52, 0x65, 0x64, 0x20, 0x42, 0x75, 0x6c, 0x6c, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x4d, 0x65, 0x6d, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x37, 0x37, 0x39, 0x4d,
		0x4a, 0x6f, 0x65, 0x79, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x20, 0x32, 0x56, 0x38, 0x30, 0x37, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x43, 0x56, 0x38, 0x30, 0x39, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x43, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x54, 0x45, 0x5f, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x5f, 0x49, 0x49, 0x49, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x49, 0x49,
		0x49, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x38, 0x38, 0x32,
		0x4c, 0x6f, 0x72, 0x64, 0x56, 0x39, 0x36, 0x37, 0x53, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58,
		0x32, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x33,
		0x56, 0x38, 0x30, 0x30, 0x30, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x34, 0x5a, 0x39, 0x38,
		0x37, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x2b, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x45, 0x72, 0x61, 0x55, 0x5a, 0x54, 0x45, 0x20, 0x47, 0x52, 0x41, 0x4e, 0x44,
		0x20, 0x56, 0x37, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x56, 0x37, 0x56, 0x37, 0x38, 0x38, 0x44,
		0x4b, 0x69, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x33, 0x33, 0x31, 0x4e, 0x38, 0x31, 0x38,
		0x53, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x20,
		0x32, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x32,
		0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x57, 0x61, 0x76, 0x65, 0x4f, 0x70, 0x74, 0x75,
		0x73, 0x20, 0x58, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41,
		0x35, 0x32, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x33,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x33, 0x20, 0x41, 0x70,
		0x65, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x4c, 0x34, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x4c, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x4c, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x37, 0x41, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x4c, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x28,
		0x24, 0x32, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x41, 0x24, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x41, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41,
		0x36, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x41, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x37, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x44, 0x20, 0x4c, 0x75, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c,
		0x32, 0x31, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x56, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56,
		0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x37, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x56, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x31, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x24,
		0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c,
		0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x51, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x56, 0x38, 0x20, 0x53, 0x45, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x42, 0x4c, 0x41, 0x44, 0x45, 0x20, 0x56, 0x30, 0x39, 0x32, 0x30, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x39, 0x20, 0x56, 0x69, 0x74, 0x61, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30,
		0x33, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x33, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61,
		0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x33, 0x30, 0x4e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53,
		0x33, 0x30, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x33, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x56, 0x33, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x24, 0x31, 0x20, 0x56, 0x69, 0x74,
		0x61, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5a, 0x38,
		0x32, 0x30, 0x4f, 0x62, 0x73, 0x69, 0x64, 0x69, 0x61, 0x6e, 0x5a, 0x39, 0x38, 0x36, 0x55, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x33, 0x5a, 0x36, 0x34, 0x31, 0x30, 0x53,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x73, 0x5a, 0x36, 0x31, 0x30,
		0x44, 0x4c, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x56, 0x69, 0x65, 0x77,
		0x5a, 0x39, 0x37, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x5a,
		0x39, 0x37, 0x38, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x5a,
		0x38, 0x33, 0x39, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65,
		0x5a, 0x33, 0x31, 0x35, 0x33, 0x56, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x61, 0x6e, 0x74,
		0x61, 0x67, 0x65, 0x20, 0x32, 0x5a, 0x39, 0x33, 0x30, 0x4c, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x20,
		0x4c, 0x54, 0x45, 0x5a, 0x39, 0x36, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x5a, 0x36,
		0x34, 0x30, 0x30, 0x43, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x32, 0x20, 0x4d, 0x61, 0x78,
		0x5a, 0x39, 0x38, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x5a, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x50, 0x72, 0x6f, 0x5a, 0x39, 0x38, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x5a, 0x20, 0x4d,
		0x61, 0x78, 0x5a, 0x39, 0x38, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x20, 0x4d, 0x61,
		0x78, 0x43, 0x69, 0x74, 0x72, 0x69, 0x6e, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x79, 0x6d, 0x62,
		0x61, 0x6c, 0x2d, 0x43, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x32, 0x33, 0x33, 0x56, 0x43, 0x79, 0x6d,
		0x62, 0x61, 0x6c, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x32, 0x33, 0x32, 0x54, 0x4c, 0x43, 0x79, 0x6d,
		0x62, 0x61, 0x6c, 0x2d, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x33, 0x35, 0x33, 0x56, 0x4c, 0x43,
		0x79, 0x6d, 0x62, 0x61, 0x6c, 0x2d, 0x54, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x37, 0x31, 0x38, 0x54,
		0x4c, 0x4a, 0x61, 0x73, 0x70, 0x65, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x49, 0x53, 0x20, 0x49,
		0x49, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x69, 0x73, 0x20, 0x49, 0x49, 0x20, 0x4d, 0x61, 0x78, 0x4b,
		0x69, 0x73, 0x20, 0x33, 0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x4c, 0x54, 0x45, 0x5a, 0x38, 0x39, 0x39, 0x56, 0x4c, 0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x79,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x38, 0x32,
		0x38, 0x54, 0x4c, 0x4d, 0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x4c, 0x54, 0x45, 0x46, 0x61, 0x6e, 0x66, 0x61, 0x72, 0x65, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x5a,
		0x38, 0x31, 0x35, 0x46, 0x61, 0x6e, 0x66, 0x61, 0x72, 0x65, 0x20, 0x32, 0x5a, 0x38, 0x33, 0x31,
		0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x32, 0x5a, 0x38, 0x33, 0x32, 0x53, 0x6f, 0x6e, 0x61, 0x74,
		0x61, 0x20, 0x33, 0x5a, 0x38, 0x33, 0x35, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x33, 0x50, 0x72,
		0x65, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x38, 0x35, 0x31, 0x4d, 0x4f,
		0x76, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x20, 0x33, 0x5a, 0x38, 0x35, 0x32, 0x46, 0x61, 0x6e,
		0x66, 0x61, 0x72, 0x65, 0x20, 0x33, 0x5a, 0x38, 0x32, 0x38, 0x41, 0x76, 0x69, 0x64, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x5a, 0x38, 0x35, 0x35, 0x41, 0x76, 0x69, 0x64, 0x20, 0x34, 0x5a, 0x38, 0x33,
		0x33, 0x41, 0x76, 0x69, 0x64, 0x20, 0x54, 0x52, 0x49, 0x4f, 0x5a, 0x46, 0x69, 0x76, 0x65, 0x20,
		0x32, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x35, 0x35, 0x38, 0x56, 0x4c, 0x5a, 0x46, 0x69, 0x76, 0x65,
		0x20, 0x43, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x35, 0x35, 0x37, 0x42, 0x4c, 0x5a, 0x46, 0x69, 0x76,
		0x65, 0x20, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4c, 0x20, 0x4c,
		0x54, 0x45, 0x5a, 0x39, 0x31, 0x36, 0x42, 0x4c, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x39, 0x31, 0x37, 0x56, 0x4c, 0x5a, 0x4d, 0x61, 0x78,
		0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x32,
		0x5a, 0x4d, 0x61, 0x78, 0x20, 0x33, 0x5a, 0x39, 0x36, 0x33, 0x56, 0x4c, 0x4d, 0x61, 0x78, 0x20,
		0x44, 0x75, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x39, 0x37, 0x30, 0x5a, 0x4d, 0x61, 0x78, 0x20,
		0x5a, 0x39, 0x37, 0x30, 0x5a, 0x39, 0x38, 0x36, 0x44, 0x4c, 0x4d, 0x41, 0x58, 0x20, 0x42, 0x6c,
		0x75, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x20, 0x32, 0x41, 0x78, 0x6f,
		0x6e, 0x20, 0x4d, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x32, 0x30, 0x31,
		0x35, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x54, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x41, 0x32, 0x30, 0x31,
		0x38, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x37, 0x73, 0x42, 0x32, 0x30, 0x31, 0x37, 0x47, 0x41, 0x78,
		0x6f, 0x6e, 0x20, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x5a, 0x36, 0x36, 0x37, 0x54, 0x5a, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x47,
		0x65, 0x65, 0x6b, 0x5a, 0x37, 0x31, 0x36, 0x42, 0x4c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x58, 0x35,
		0x30, 0x31, 0x47, 0x72, 0x6f, 0x6f, 0x76, 0x65, 0x46, 0x2d, 0x34, 0x35, 0x30, 0x41, 0x64, 0x61,
		0x6d, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x6f, 0x56, 0x38, 0x36,
		0x35, 0x4d, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x4f,
		0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x65,
		0x6f, 0x20, 0x51, 0x32, 0x56, 0x65, 0x72, 0x67, 0x61, 0x74, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x35,
		0x56, 0x65, 0x72, 0x67, 0x61, 0x74, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x31, 0x32, 0x4e,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32, 0x31, 0x20, 0x35, 0x47, 0x5a, 0x54,
		0x45, 0x20, 0x39, 0x30, 0x30, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32,
		0x30, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x30, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56,
		0x32, 0x30, 0x32, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61, 0x4b, 0x49, 0x53, 0x20, 0x43, 0x33, 0x34,
		0x31, 0x4b, 0x69, 0x73, 0x20, 0x43, 0x33, 0x34, 0x31, 0x4d, 0x45, 0x4f, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x41, 0x38, 0x30, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47,
		0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x31, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32,
		0x30, 0x32, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5a, 0x58, 0x56, 0x31, 0x30, 0x20, 0x42,
		0x38, 0x36, 0x37, 0x52, 0x45, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x56, 0x69, 0x65,
		0x77, 0x20, 0x33, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20,
		0x34, 0x41, 0x78, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x41, 0x36, 0x31, 0x30, 0x5a, 0x59, 0x51, 0x51, 0x36, 0x33, 0x38, 0x51, 0x32,
		0x36, 0x32, 0x34, 0x43, 0x68, 0x65, 0x65, 0x72, 0x20, 0x33, 0x47, 0x51, 0x32, 0x36, 0x30, 0x32,
		0x54, 0x56, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x51, 0x32, 0x37, 0x32, 0x38, 0x5a, 0x6f, 0x6e, 0x65,
		0x20, 0x33, 0x47, 0x51, 0x32, 0x37, 0x32, 0x39, 0x51, 0x32, 0x36, 0x38, 0x38, 0x51, 0x32, 0x36,
		0x32, 0x33, 0x57, 0x69, 0x6e, 0x20, 0x33, 0x47, 0x51, 0x32, 0x36, 0x32, 0x36, 0x43, 0x61, 0x72,
		0x65, 0x20, 0x33, 0x47, 0x51, 0x33, 0x36, 0x32, 0x33, 0x42, 0x72, 0x61, 0x77, 0x20, 0x33, 0x47,
		0x51, 0x33, 0x30, 0x32, 0x32, 0x51, 0x33, 0x32, 0x38, 0x20, 0x6d, 0x39, 0x51, 0x33, 0x32, 0x38,
		0x20, 0x4d, 0x39, 0x51, 0x33, 0x32, 0x38, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x33, 0x47, 0x51,
		0x36, 0x36, 0x38, 0x54, 0x56, 0x20, 0x49, 0x34, 0x4a, 0x37, 0x37, 0x51, 0x2e, 0x44, 0x65, 0x65,
		0x51, 0x2e, 0x55, 0x70, 0x20, 0x43, 0x35, 0x51, 0x2e, 0x55, 0x70, 0x51, 0x2e, 0x42, 0x6f, 0x73,
		0x73, 0x20, 0x50, 0x39, 0x39, 0x51, 0x2e, 0x44, 0x65, 0x65, 0x20, 0x52, 0x30, 0x39, 0x51, 0x2e,
		0x47, 0x6f, 0x6f, 0x64, 0x20, 0x4d, 0x39, 0x51, 0x2e, 0x48, 0x69, 0x20, 0x53, 0x31, 0x51, 0x2e,
		0x48, 0x69, 0x51, 0x2e, 0x48, 0x6f, 0x74, 0x20, 0x50, 0x37, 0x20, 0x33, 0x47, 0x51, 0x2e, 0x48,
		0x6f, 0x74, 0x51, 0x2e, 0x4d, 0x65, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x33,
		0x47, 0x51, 0x2e, 0x4d, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x37, 0x51, 0x2e, 0x4d, 0x65,
		0x51, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x52, 0x39, 0x39, 0x51, 0x2e, 0x4e, 0x65, 0x78, 0x74,
		0x20, 0x42, 0x37, 0x51, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x4a, 0x32, 0x51, 0x2e, 0x54, 0x6f,
		0x70, 0x20, 0x58, 0x38, 0x51, 0x2e, 0x59, 0x6f, 0x75, 0x51, 0x54, 0x41, 0x42, 0x20, 0x54, 0x61,
		0x62, 0x34, 0x51, 0x54, 0x61, 0x62, 0x20, 0x54, 0x61, 0x62, 0x34, 0x5a, 0x59, 0x51, 0x2d, 0x51,
		0x38, 0x38, 0x51, 0x38, 0x38, 0x5a, 0x61, 0x69, 0x74, 0x68, 0x5a, 0x61, 0x74, 0x65, 0x63, 0x57,
		0x69, 0x6e, 0x64, 0x5a, 0x50, 0x4c, 0x41, 0x59, 0x31, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x5a, 0x70,
		0x6c, 0x61, 0x79, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72,
		0x5f, 0x32, 0x30, 0x31, 0x38, 0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x38, 0x29, 0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x70, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x62, 0x72, 0x61, 0x5a, 0x65, 0x65,
		0x6d, 0x69, 0x5a, 0x65, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x47, 0x6c, 0x61, 0x6d, 0x41,
		0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x47, 0x6c, 0x61, 0x6d, 0x5a, 0x65, 0x6e, 0x65, 0x6b, 0x5a,
		0x35, 0x35, 0x31, 0x37, 0x4c, 0x65, 0x6f, 0x70, 0x61, 0x72, 0x64, 0x6f, 0x5a, 0x36, 0x30, 0x30,
		0x31, 0x4c, 0x69, 0x62, 0x65, 0x6c, 0x75, 0x6c, 0x61, 0x5a, 0x35, 0x30, 0x30, 0x37, 0x4f, 0x73,
		0x6f, 0x5a, 0x35, 0x35, 0x31, 0x39, 0x50, 0x69, 0x6e, 0x67, 0xc3, 0xbb, 0x69, 0x6e, 0x6f, 0x5a,
		0x35, 0x35, 0x31, 0x36, 0x5a, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x2d, 0x37,
		0x32, 0x33, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x5a, 0x66, 0x69, 0x6e, 0x65, 0x72, 0x59, 0x39,
		0x30, 0x30, 0x5a, 0x69, 0x64, 0x6f, 0x6f, 0x5a, 0x69, 0x6f, 0x78, 0x41, 0x73, 0x74, 0x72, 0x61,
		0x20, 0x24, 0x31, 0x20, 0x34, 0x47, 0x41, 0x73, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x41, 0x73,
		0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x75, 0x6f, 0x70, 0x69, 0x78,
		0x20, 0x24, 0x31, 0x5a, 0x6f, 0x6e, 0x64, 0x61, 0x5a, 0x41, 0x34, 0x30, 0x39, 0x4d, 0x75, 0x7a,
		0x69, 0x63, 0x5a, 0x6f, 0x70, 0x6f, 0x43, 0x32, 0x20, 0x49, 0x49, 0x39, 0x58, 0x58, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x5a, 0x50, 0x39, 0x38, 0x30, 0x2b, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x37,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x37, 0x53, 0x70, 0x65, 0x65,
		0x64, 0x20, 0x38, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x62,
		0x65, 0x72, 0x6f, 0x20, 0x48, 0x44, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x6c, 0x6f,
		0x72, 0x20, 0x43, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x53, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20,
		0x46, 0x32, 0x46, 0x35, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x4d, 0x35, 0x43, 0x6f, 0x6c,
		0x6f, 0x72, 0x20, 0x58, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x43, 0x35, 0x69, 0x46, 0x69, 0x65,
		0x6c, 0x64, 0x53, 0x68, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x6c, 0x6f, 0x74, 0x46, 0x6c,
		0x61, 0x73, 0x68, 0x20, 0x58, 0x32, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x47, 0x35, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x5a, 0x75, 0x75, 0x6d, 0x41, 0x4b, 0x55,
		0x53, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x6b, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x4b, 0x55,
		0x53, 0x20, 0x5a, 0x31, 0x41, 0x6b, 0x75, 0x73, 0x20, 0x5a, 0x31, 0x41, 0x6b, 0x75, 0x73, 0x20,
		0x5a, 0x43, 0x4f, 0x56, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x43,
		0x6f, 0x76, 0x65, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43, 0x4f, 0x56,
		0x45, 0x54, 0x20, 0x50, 0x52, 0x4f, 0x43, 0x6f, 0x76, 0x65, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x43,
		0x4f, 0x56, 0x45, 0x54, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x43, 0x6f, 0x76, 0x65, 0x74, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x43, 0x6f, 0x76, 0x65, 0x74, 0x24, 0x31, 0x4d, 0x41, 0x47, 0x4e, 0x4f, 0x20,
		0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61, 0x67, 0x6e, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x41,
		0x47, 0x4e, 0x4f, 0x2d, 0x53, 0x4d, 0x61, 0x67, 0x6e, 0x6f, 0x20, 0x53, 0x4d, 0x61, 0x67, 0x6e,
		0x6f, 0x24, 0x31, 0x4f, 0x4e, 0x49, 0x58, 0x20, 0x53, 0x4f, 0x6e, 0x69, 0x78, 0x20, 0x53, 0x4f,
		0x4e, 0x49, 0x58, 0x53, 0x54, 0x45, 0x44, 0x49, 0x53, 0x74, 0x65, 0x64, 0x69, 0x53, 0x54, 0x45,
		0x4c, 0x4c, 0x41, 0x52, 0x20, 0x50, 0x52, 0x4f, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x53,
		0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x65, 0x6c, 0x6c,
		0x61, 0x72, 0x20, 0x24, 0x31, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x4d, 0x49, 0x4e,
		0x49, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x54, 0x45,
		0x4c, 0x4c, 0x41, 0x52, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20,
		0x4d, 0x61, 0x78, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61,
		0x72, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x41, 0x55, 0x52, 0x41, 0x20,
		0x58, 0x41, 0x75, 0x72, 0x61, 0x20, 0x58, 0x52, 0x4f, 0x4e, 0x49, 0x52, 0x6f, 0x6e, 0x69, 0x52,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x24, 0x31, 0x55, 0x6e, 0x69, 0x71, 0x4c, 0x69, 0x6d, 0x69,
		0x74, 0x5a, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x20, 0x24, 0x31, 0x5a, 0x79, 0x72,
		0x65, 0x78, 0x5a, 0x54, 0x32, 0x31, 0x36, 0x61, 0x6c, 0x74, 0x72, 0x6f, 0x6e, 0x41, 0x4c, 0x2d,
		0x35, 0x35, 0x35, 0x4f, 0x42, 0x2d, 0x24, 0x31, 0x47, 0x49, 0x2d, 0x36, 0x32, 0x36, 0x62, 0x32,
		0x6d, 0x44, 0x65, 0x63, 0x61, 0x64, 0x65, 0x20, 0x35, 0x33, 0x62, 0x6f, 0x67, 0x6f, 0x42, 0x4f,
		0x2d, 0x4c, 0x46, 0x53, 0x50, 0x34, 0x4c, 0x69, 0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20,
		0x34, 0x44, 0x43, 0x42, 0x4f, 0x2d, 0x4c, 0x46, 0x53, 0x50, 0x53, 0x4c, 0x34, 0x4c, 0x69, 0x66,
		0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x34, 0x53, 0x4c, 0x42, 0x4f, 0x2d, 0x4c, 0x46, 0x53,
		0x50, 0x42, 0x53, 0x35, 0x4c, 0x69, 0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x35, 0x42,
		0x53, 0x42, 0x4f, 0x2d, 0x4c, 0x46, 0x53, 0x50, 0x53, 0x4c, 0x36, 0x51, 0x43, 0x49, 0x4c, 0x69,
		0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x36, 0x51, 0x43, 0x62, 0x71, 0x53, 0x74, 0x72,
		0x69, 0x6b, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x4f, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x20, 0x43, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x53, 0x43, 0x6c, 0x65,
		0x76, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x20, 0x53, 0x45, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x20, 0x4c, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x51, 0x2d, 0x38, 0x30, 0x36, 0x37, 0x4c, 0x48, 0x6f, 0x72,
		0x6e, 0x65, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x51, 0x2d, 0x38, 0x30, 0x35, 0x32, 0x47,
		0x42, 0x51, 0x2d, 0x38, 0x30, 0x34, 0x31, 0x4c, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x38, 0x34, 0x47,
		0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x36, 0x31, 0x47, 0x41, 0x6e,
		0x64, 0x72, 0x6f, 0x73, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x35, 0x31, 0x47, 0x45, 0x6c, 0x62, 0x61,
		0x42, 0x51, 0x2d, 0x37, 0x30, 0x33, 0x36, 0x4c, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x43, 0x61,
		0x6e, 0x69, 0x6f, 0x6e, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x32, 0x31, 0x47, 0x42, 0x51, 0x2d, 0x37,
		0x30, 0x31, 0x30, 0x47, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x30, 0x36, 0x47, 0x55, 0x6e, 0x69, 0x6f,
		0x6e, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x30, 0x33, 0x4a, 0x61, 0x6d, 0x61, 0x69, 0x63, 0x61, 0x42,
		0x51, 0x2d, 0x36, 0x36, 0x33, 0x31, 0x47, 0x42, 0x51, 0x2d, 0x36, 0x30, 0x32, 0x32, 0x47, 0x41,
		0x75, 0x72, 0x61, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x50, 0x72, 0x61, 0x63, 0x74,
		0x69, 0x63, 0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x4d, 0x75, 0x73, 0x69,
		0x63, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x67, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x42, 0x51, 0x2d, 0x35,
		0x35, 0x32, 0x32, 0x53, 0x69, 0x6c, 0x6b, 0x46, 0x61, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x46, 0x61, 0x73, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x77, 0x69, 0x6e, 0x20, 0x50, 0x72, 0x6f,
		0x54, 0x77, 0x69, 0x6e, 0x57, 0x69, 0x64, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x46,
		0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x42, 0x6c, 0x69, 0x73, 0x73, 0x41, 0x6d, 0x73, 0x74, 0x65,
		0x72, 0x64, 0x61, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x34, 0x47, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x49,
		0x72, 0x6f, 0x6e, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x69, 0x63, 0x65, 0x20, 0x32, 0x4e, 0x69,
		0x63, 0x65, 0x4e, 0x69, 0x63, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x48, 0x61, 0x6d, 0x6d, 0x65,
		0x72, 0x4b, 0x61, 0x77, 0x61, 0x73, 0x61, 0x6b, 0x69, 0x56, 0x61, 0x6e, 0x63, 0x6f, 0x75, 0x76,
		0x65, 0x72, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x32, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65,
		0x20, 0x56, 0x69, 0x65, 0x77, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x56, 0x69, 0x65, 0x77,
		0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x72,
		0x69, 0x6b, 0x65, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x32, 0x57, 0x61, 0x6c, 0x6c, 0x65,
		0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x43, 0x68, 0x6f, 0x69, 0x63,
		0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x74, 0x72, 0x69, 0x6b,
		0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x45, 0x61, 0x73, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x32,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x45, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x42, 0x51, 0x2d, 0x35, 0x30, 0x36, 0x30, 0x4c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x53, 0x74,
		0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x34, 0x47, 0x56, 0x65, 0x6c,
		0x76, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x52, 0x75,
		0x73, 0x68, 0x48, 0x69, 0x67, 0x68, 0x20, 0x57, 0x61, 0x79, 0x42, 0x6f, 0x6e, 0x64, 0x46, 0x69,
		0x72, 0x73, 0x74, 0x52, 0x69, 0x63, 0x68, 0x52, 0x69, 0x63, 0x68, 0x20, 0x4d, 0x61, 0x78, 0x4d,
		0x6f, 0x6e, 0x74, 0x65, 0x20, 0x43, 0x61, 0x72, 0x6c, 0x6f, 0x53, 0x70, 0x6f, 0x74, 0x56, 0x65,
		0x6c, 0x76, 0x65, 0x74, 0x20, 0x45, 0x61, 0x73, 0x79, 0x50, 0x72, 0x61, 0x67, 0x75, 0x65, 0x42,
		0x51, 0x2d, 0x35, 0x35, 0x36, 0x30, 0x4c, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x42, 0x51, 0x2d, 0x35, 0x35, 0x36, 0x35, 0x4c, 0x53, 0x79, 0x64, 0x6e, 0x65,
		0x79, 0x42, 0x72, 0x61, 0x76, 0x65, 0x4c, 0x6f, 0x73, 0x20, 0x41, 0x6e, 0x67, 0x65, 0x6c, 0x65,
		0x73, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x69, 0x73, 0x53, 0x68, 0x61,
		0x72, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x6f, 0x43, 0x6f, 0x6c,
		0x6f, 0x6d, 0x62, 0x6f, 0x20, 0x49, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x69,
		0x6c, 0x61, 0x6e, 0x54, 0x6f, 0x6b, 0x79, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x6e,
		0x74, 0x72, 0x65, 0x61, 0x6c, 0xd0, 0x9e, 0x73, 0x61, 0x6b, 0x61, 0x56, 0x65, 0x6e, 0x69, 0x63,
		0x65, 0x46, 0x6f, 0x78, 0x20, 0x56, 0x69, 0x65, 0x77, 0x46, 0x6f, 0x78, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x44, 0x72, 0x69, 0x76, 0x65, 0x47, 0x6f, 0x6c, 0x66, 0x52, 0x69, 0x63, 0x68, 0x6d,
		0x6f, 0x6e, 0x64, 0x56, 0x69, 0x65, 0x6e, 0x6e, 0x61, 0x53, 0x69, 0x6e, 0x67, 0x61, 0x70, 0x6f,
		0x72, 0x65, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77, 0x46, 0x6c, 0x6f, 0x72, 0x65, 0x6e, 0x63, 0x65,
		0x53, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x67, 0x6f, 0x44, 0x75, 0x62, 0x61, 0x69, 0x4b, 0x69, 0x6e,
		0x67, 0x73, 0x74, 0x6f, 0x6e, 0x42, 0x51, 0x53, 0x2d, 0x34, 0x35, 0x30, 0x31, 0x20, 0x42, 0x72,
		0x69, 0x73, 0x74, 0x6f, 0x6c, 0x42, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x6c, 0x46, 0x6f, 0x78, 0x20,
		0x45, 0x61, 0x73, 0x79, 0x46, 0x6f, 0x78, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x68, 0x61, 0x72, 0x6b,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x55, 0x70, 0x21, 0x4f, 0x72, 0x6c, 0x65, 0x61, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x6e, 0x67, 0x68,
		0x61, 0x69, 0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x44,
		0x75, 0x73, 0x73, 0x65, 0x6c, 0x64, 0x6f, 0x72, 0x66, 0x56, 0x65, 0x72, 0x6f, 0x6e, 0x61, 0x43,
		0x6f, 0x6f, 0x6c, 0x4f, 0x78, 0x66, 0x6f, 0x72, 0x64, 0x41, 0x73, 0x70, 0x65, 0x6e, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x42, 0x6f, 0x6d, 0x62, 0x61, 0x79, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20,
		0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x4d, 0x61,
		0x78, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x73,
		0x69, 0x6b, 0x61, 0x48, 0x61, 0x77, 0x61, 0x69, 0x69, 0x47, 0x72, 0x61, 0x63, 0x65, 0x41, 0x71,
		0x75, 0x61, 0x72, 0x69, 0x73, 0x20, 0x4d, 0x38, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x73, 0x20,
		0x24, 0x31, 0x34, 0x2e, 0x35, 0x4a, 0x61, 0x76, 0x61, 0x42, 0x51, 0x2d, 0x39, 0x30, 0x35, 0x35,
		0x4c, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46,
		0x69, 0x6a, 0x69, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x33, 0x47, 0x4c, 0x75, 0x7a, 0x6f, 0x6e,
		0x43, 0x6c, 0x61, 0x72, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6c,
		0x74, 0x61, 0xd0, 0xa1, 0x68, 0x61, 0x72, 0x6d, 0xd0, 0xa1, 0x68, 0x61, 0x72, 0x6d, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x65,
		0x63, 0x6b, 0x65, 0x72, 0x4e, 0x65, 0x78, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45,
		0x78, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x37, 0x30, 0x38, 0x33, 0x31, 0x30, 0x35,
		0x36, 0x4c, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x2b,
		0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4f,
		0x6e, 0x65, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x68, 0x61, 0x72, 0x6d,
		0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x65, 0x53, 0x54, 0x41, 0x52, 0x24,
		0x31, 0x20, 0x24, 0x32, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33,
		0x47, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x24, 0x31, 0x65, 0x53, 0x54, 0x41, 0x52, 0x20, 0x47, 0x52, 0x41, 0x4e, 0x44,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x65, 0x53, 0x54, 0x41, 0x52, 0x20, 0x42, 0x45, 0x41, 0x55, 0x54,
		0x59, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x65,
		0x61, 0x75, 0x74, 0x79, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x65, 0x53, 0x54, 0x41, 0x52, 0x20, 0x4d, 0x4f, 0x4f, 0x4e, 0x20, 0x48, 0x44, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x20, 0x48, 0x44, 0x20,
		0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x47, 0x65, 0x53, 0x54, 0x41,
		0x52, 0x20, 0x42, 0x45, 0x41, 0x55, 0x54, 0x59, 0x20, 0x32, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x65, 0x61, 0x75, 0x74, 0x79, 0x20, 0x32, 0x20,
		0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x33, 0x47, 0x65, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x63, 0x6f, 0x6d, 0x69, 0x2d, 0x43,
		0x68, 0x65, 0x72, 0x72, 0x79, 0x69, 0x43, 0x68, 0x65, 0x72, 0x72, 0x79, 0x2d, 0x43, 0x32, 0x35,
		0x36, 0x43, 0x32, 0x35, 0x36, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x33, 0x47, 0x69, 0x2d, 0x4a,
		0x6f, 0x79, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x61, 0x20, 0x4d, 0x45, 0x6c, 0x65, 0x6b, 0x74,
		0x72, 0x61, 0x20, 0x4c, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x61, 0x20, 0x58, 0x4c, 0x45, 0x6c,
		0x65, 0x6b, 0x74, 0x72, 0x61, 0x20, 0x58, 0x58, 0x4c, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x24, 0x31,
		0x53, 0x79, 0x67, 0x6e, 0x75, 0x73, 0x44, 0x65, 0x6f, 0x78, 0x69, 0x2d, 0x43, 0x61, 0x6c, 0x6c,
		0x20, 0x24, 0x31, 0x69, 0x2d, 0x6d, 0x61, 0x74, 0x65, 0x69, 0x2d, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x69, 0x2d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x49, 0x51, 0x20, 0x24, 0x31,
		0x69, 0x42, 0x61, 0x6c, 0x6c, 0x41, 0x6e, 0x64, 0x69, 0x20, 0x57, 0x69, 0x6e, 0x6b, 0x20, 0x34,
		0x47, 0x41, 0x6e, 0x64, 0x69, 0x20, 0x35, 0x47, 0x20, 0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x34,
		0x47, 0x69, 0x54, 0x41, 0x42, 0x20, 0x42, 0x69, 0x7a, 0x6e, 0x69, 0x5a, 0x69, 0x54, 0x41, 0x42,
		0x20, 0x42, 0x69, 0x7a, 0x6e, 0x69, 0x5a, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x54, 0x41, 0x42,
		0x20, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x7a, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x42, 0x65, 0x72, 0x72,
		0x79, 0x69, 0x42, 0x72, 0x69, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x36, 0x53, 0x70, 0x65,
		0x65, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x69, 0x44, 0x61, 0x74, 0x61, 0x69, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70, 0x61, 0x63, 0x68,
		0x65, 0x20, 0x47, 0x36, 0x69, 0x47, 0x65, 0x74, 0x69, 0x48, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6b,
		0x65, 0x5f, 0x48, 0x69, 0x31, 0x30, 0x5f, 0x32, 0x30, 0x32, 0x31, 0x4c, 0x69, 0x6b, 0x65, 0x20,
		0x48, 0x69, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x31, 0x30, 0x5f, 0x54,
		0x61, 0x6e, 0x6b, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20,
		0x50, 0x52, 0x4f, 0x20, 0x32, 0x30, 0x32, 0x30, 0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4f, 0x6e, 0x65, 0x5f, 0x20,
		0x4c, 0x6f, 0x76, 0x65, 0x5f, 0x4f, 0x6e, 0x65, 0x20, 0x4c, 0x6f, 0x76, 0x65, 0x54, 0x49, 0x54,
		0x41, 0x4e, 0x5f, 0x50, 0x31, 0x31, 0x30, 0x30, 0x30, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x20, 0x50, 0x31, 0x31, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x49, 0x54,
		0x41, 0x4e, 0x20, 0x50, 0x34, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32,
		0x31, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x34, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x38, 0x30,
		0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x32, 0x30, 0x32, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e,
		0x20, 0x50, 0x38, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x4c, 0x69, 0x6b, 0x65, 0x5f, 0x33, 0x5f, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x20,
		0x33, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x48, 0x69, 0x35, 0x4c, 0x69, 0x6b,
		0x65, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x6b, 0x65, 0x5f, 0x34, 0x55, 0x4c, 0x69, 0x6b, 0x65, 0x20,
		0x34, 0x55, 0x69, 0x48, 0x75, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x6b, 0x65, 0x58, 0x33, 0x30, 0x30,
		0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x53, 0x36, 0x30, 0x5f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
		0x65, 0x72, 0x79, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x53, 0x36, 0x30, 0x20, 0x44, 0x69, 0x73, 0x63,
		0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x53, 0x36, 0x30, 0x20,
		0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30,
		0x32, 0x32, 0x53, 0x36, 0x30, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x58,
		0x4c, 0x69, 0x74, 0x65, 0x32, 0x30, 0x32, 0x30, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e,
		0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x6c, 0x69, 0x65, 0x6e,
		0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x69, 0x65, 0x6e,
		0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x5f, 0x58, 0x5f, 0x41,
		0x70, 0x65, 0x58, 0x5f, 0x32, 0x30, 0x32, 0x30, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20,
		0x41, 0x70, 0x65, 0x58, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e,
		0x5f, 0x58, 0x5f, 0x41, 0x70, 0x65, 0x58, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x41,
		0x70, 0x65, 0x58, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x5f, 0x58, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20,
		0x58, 0x53, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x30, 0x32, 0x31, 0x53, 0x32,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x24, 0x31,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x41, 0x70, 0x65, 0x58, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x53, 0x32, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x47, 0x20, 0x32,
		0x30, 0x32, 0x31, 0x53, 0x32, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x47, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x61,
		0x6e, 0x64, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x32, 0x4c, 0x69, 0x6b, 0x65,
		0x20, 0x31, 0x31, 0x20, 0x50, 0x61, 0x6e, 0x64, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x32, 0x29, 0x69, 0x4b, 0x6f, 0x4d, 0x6f, 0x69, 0x4b, 0x6f, 0x6e, 0x69, 0x4c, 0x41,
		0x69, 0x4c, 0x69, 0x66, 0x65, 0x69, 0x4d, 0x61, 0x6e, 0x69, 0x4d, 0x61, 0x72, 0x73, 0x49, 0x4d,
		0x41, 0x52, 0x53, 0x20, 0x56, 0x45, 0x47, 0x41, 0x20, 0x58, 0x37, 0x56, 0x65, 0x67, 0x61, 0x20,
		0x58, 0x37, 0x56, 0x49, 0x56, 0x49, 0x5f, 0x38, 0x56, 0x49, 0x56, 0x49, 0x20, 0x38, 0x4d, 0x49,
		0x4c, 0x4b, 0x59, 0x5f, 0x57, 0x41, 0x59, 0x5f, 0x4d, 0x32, 0x4d, 0x69, 0x6c, 0x6b, 0x79, 0x20,
		0x57, 0x61, 0x79, 0x20, 0x4d, 0x32, 0x69, 0x4e, 0x65, 0x77, 0x56, 0x33, 0x43, 0x56, 0x33, 0x2d,
		0x45, 0x56, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x37, 0x41, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x36, 0x69, 0x4f, 0x63, 0x65, 0x61, 0x6e, 0x58, 0x37, 0x53, 0x2d, 0x54,
		0x58, 0x38, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x38, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x38, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x38, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x58, 0x37, 0x53, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x69, 0x4f, 0x75,
		0x74, 0x64, 0x6f, 0x6f, 0x72, 0x69, 0x50, 0x45, 0x47, 0x54, 0x4f, 0x50, 0x49, 0x50, 0x45, 0x47,
		0x54, 0x4f, 0x50, 0x69, 0x50, 0x72, 0x6f, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x35, 0x2e, 0x30,
		0x53, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x4b, 0x59, 0x4c, 0x49, 0x4e, 0x34, 0x30,
		0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x34, 0x30, 0x4f, 0x70, 0x61, 0x6c, 0x20, 0x34, 0x53, 0x4a,
		0x61, 0x64, 0x65, 0x20, 0x24, 0x31, 0x73, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x35, 0x53, 0x5f, 0x50,
		0x72, 0x6f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x35, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6d,
		0x62, 0x65, 0x72, 0x36, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x36, 0x41, 0x6d, 0x62, 0x65, 0x72,
		0x37, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x37, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x38,
		0x73, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x38, 0x53, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6e, 0x69, 0x78, 0x35, 0x30, 0x53, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x6e, 0x69, 0x78, 0x20, 0x35, 0x30, 0x53, 0x52, 0x75, 0x62, 0x79, 0x35, 0x53, 0x52, 0x75,
		0x62, 0x79, 0x20, 0x35, 0x53, 0x5a, 0x61, 0x66, 0x69, 0x72, 0x6f, 0x69, 0x51, 0x26, 0x54, 0x69,
		0x52, 0x6f, 0x6c, 0x61, 0x44, 0x58, 0x37, 0x35, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x52, 0x75,
		0x6c, 0x75, 0x69, 0x53, 0x57, 0x41, 0x47, 0x4b, 0x72, 0x6f, 0x6e, 0x6f, 0x73, 0x4c, 0x79, 0x6e,
		0x78, 0x4d, 0x65, 0x67, 0x61, 0x4e, 0x65, 0x6d, 0x65, 0x73, 0x69, 0x73, 0x69, 0x53, 0x61, 0x66,
		0x65, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x24, 0x31, 0x2e, 0x52, 0x47, 0x69, 0x54, 0x65,
		0x6c, 0x57, 0x36, 0x35, 0x30, 0x32, 0x53, 0x31, 0x36, 0x4c, 0x36, 0x35, 0x30, 0x33, 0x53, 0x31,
		0x36, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x35, 0x35, 0x30, 0x35, 0x41, 0x33, 0x36, 0x41, 0x35, 0x37,
		0x31, 0x57, 0x41, 0x33, 0x37, 0x53, 0x31, 0x35, 0x57, 0x35, 0x30, 0x30, 0x35, 0x50, 0x31, 0x35,
		0x4c, 0x35, 0x35, 0x30, 0x32, 0x41, 0x34, 0x34, 0x20, 0x41, 0x69, 0x72, 0x4c, 0x35, 0x35, 0x30,
		0x35, 0x41, 0x34, 0x37, 0x57, 0x35, 0x30, 0x30, 0x36, 0x58, 0x41, 0x31, 0x37, 0x4c, 0x36, 0x30,
		0x30, 0x36, 0x41, 0x34, 0x38, 0x50, 0x36, 0x35, 0x31, 0x57, 0x50, 0x33, 0x37, 0x50, 0x36, 0x38,
		0x31, 0x4c, 0x50, 0x33, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x35, 0x30, 0x30, 0x37, 0x41, 0x32,
		0x34, 0x4c, 0x36, 0x30, 0x30, 0x33, 0x50, 0x41, 0x35, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x36,
		0x30, 0x30, 0x32, 0x50, 0x53, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x35, 0x30, 0x30, 0x36,
		0x43, 0x41, 0x32, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x35, 0x30, 0x30, 0x32, 0x50, 0x41, 0x32,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x35, 0x30, 0x30, 0x32, 0x41, 0x32, 0x35, 0x4c, 0x35, 0x35,
		0x30, 0x33, 0x41, 0x34, 0x36, 0x57, 0x36, 0x30, 0x30, 0x34, 0x50, 0x41, 0x35, 0x36, 0x20, 0x50,
		0x72, 0x6f, 0x4c, 0x36, 0x30, 0x30, 0x34, 0x4c, 0x41, 0x43, 0x36, 0x30, 0x57, 0x34, 0x30, 0x30,
		0x31, 0x41, 0x43, 0x31, 0x33, 0x41, 0x35, 0x36, 0x20, 0x4c, 0x54, 0x45, 0x57, 0x36, 0x30, 0x30,
		0x31, 0x50, 0x33, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x35, 0x30, 0x30, 0x31, 0x50, 0x57,
		0x36, 0x30, 0x30, 0x33, 0x41, 0x36, 0x31, 0x31, 0x57, 0x4c, 0x36, 0x30, 0x30, 0x35, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x50, 0x36, 0x35, 0x31, 0x4c, 0x56, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x20, 0x32, 0x53, 0x4c, 0x36, 0x35, 0x30, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x36, 0x35, 0x30, 0x32, 0x56, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x50, 0x31, 0x30, 0x58, 0x32, 0x30, 0x31, 0x39,
		0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x69, 0x74, 0x24, 0x31, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x74, 0x65, 0x6c, 0x20, 0x69, 0x74, 0x31, 0x37, 0x30, 0x31,
		0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x69, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x24, 0x31, 0x69, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x37,
		0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x69, 0x56, 0x41, 0x4c, 0x61, 0x6d, 0x63, 0x79, 0x20, 0x24,
		0x31, 0x69, 0x56, 0x69, 0x65, 0x77, 0x37, 0x34, 0x34, 0x54, 0x50, 0x43, 0x20, 0x70, 0x6c, 0x75,
		0x73, 0x37, 0x34, 0x34, 0x54, 0x50, 0x43, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x56, 0x6f, 0x6f,
		0x4d, 0x69, 0x49, 0x6e, 0x6e, 0x65, 0x6c, 0x6f, 0x5f, 0x31, 0x49, 0x6e, 0x6e, 0x65, 0x6c, 0x6f,
		0x20, 0x31, 0x69, 0x56, 0x20, 0x35, 0x30, 0x35, 0x4d, 0x65, 0x20, 0x31, 0x4d, 0x65, 0x20, 0x31,
		0x2b, 0x69, 0x57, 0x61, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x5a, 0x6f, 0x74, 0x72, 0x6f, 0x6e,
		0x4d, 0x49, 0x37, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x42, 0x65, 0x74, 0x61, 0x4d, 0x49, 0x37,
		0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x69, 0x76, 0x76, 0x69, 0x6d, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x61, 0x6e, 0x49, 0x54, 0x51, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4f, 0x6e, 0x65, 0x74, 0x65, 0x58, 0x65, 0x74, 0x54, 0x4d, 0x2d,
		0x39, 0x37, 0x34, 0x39, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x37,
		0x2e, 0x31, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x39, 0x37, 0x34, 0x36, 0x58, 0x2d, 0x70, 0x61,
		0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x37, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x38, 0x30,
		0x35, 0x31, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x38, 0x69,
		0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x31, 0x30, 0x35, 0x38, 0x58, 0x2d, 0x46, 0x6f, 0x72, 0x63,
		0x65, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x38, 0x30, 0x34, 0x38, 0x58, 0x2d,
		0x70, 0x61, 0x64, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x38, 0x20, 0x33, 0x47, 0x54, 0x4d,
		0x2d, 0x37, 0x30, 0x35, 0x35, 0x48, 0x44, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x61, 0x64, 0x20, 0x33,
		0x47, 0x54, 0x4d, 0x2d, 0x39, 0x37, 0x35, 0x38, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74,
		0x79, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53,
		0x68, 0x69, 0x6e, 0x65, 0x20, 0x38, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61,
		0x64, 0x20, 0x51, 0x55, 0x41, 0x44, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61,
		0x64, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x58,
		0x2d, 0x70, 0x61, 0x64, 0x20, 0x51, 0x55, 0x41, 0x44, 0x20, 0x37, 0x20, 0x33, 0x47, 0x58, 0x2d,
		0x70, 0x61, 0x64, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47,
		0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x32, 0x22, 0x20,
		0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x20, 0x38, 0x20,
		0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x48, 0x49, 0x54, 0x20, 0x33,
		0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x48, 0x69, 0x74, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70,
		0x61, 0x64, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x22, 0x54, 0x4d, 0x2d, 0x39, 0x37,
		0x36, 0x37, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x31, 0x30,
		0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20,
		0x4e, 0x41, 0x56, 0x49, 0x20, 0x37, 0x2e, 0x33, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37,
		0x30, 0x39, 0x39, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x37, 0x2e,
		0x34, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20,
		0x37, 0x2e, 0x35, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x6b, 0x79,
		0x20, 0x38, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41,
		0x56, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x38,
		0x35, 0x39, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x38, 0x2e, 0x32,
		0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x30, 0x34, 0x39, 0x4e, 0x61, 0x76, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x54, 0x4d, 0x2d, 0x37, 0x30, 0x34, 0x39, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d,
		0x37, 0x38, 0x38, 0x37, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x61, 0x64, 0x20, 0x54, 0x4d, 0x2d, 0x37,
		0x38, 0x38, 0x37, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x38, 0x30, 0x36, 0x36, 0x58, 0x2d, 0x70,
		0x61, 0x64, 0x20, 0x52, 0x61, 0x70, 0x69, 0x64, 0x20, 0x38, 0x2e, 0x32, 0x22, 0x20, 0x34, 0x47,
		0x54, 0x4d, 0x2d, 0x34, 0x35, 0x30, 0x33, 0x58, 0x2d, 0x51, 0x75, 0x61, 0x64, 0x54, 0x4d, 0x2d,
		0x35, 0x30, 0x30, 0x36, 0x58, 0x2d, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x4d, 0x2d, 0x35, 0x30, 0x30,
		0x37, 0x58, 0x2d, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x4d, 0x5f, 0x35, 0x30, 0x31, 0x31, 0x58,
		0x2d, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x50, 0x61, 0x79, 0x20, 0x24, 0x31, 0x47, 0x50, 0x61, 0x79,
		0x20, 0x35, 0x2e, 0x35, 0x22, 0x20, 0x24, 0x31, 0x47, 0x54, 0x4d, 0x2d, 0x35, 0x37, 0x30, 0x32,
		0x50, 0x61, 0x79, 0x20, 0x35, 0x2e, 0x37, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x35, 0x37,
		0x30, 0x33, 0x50, 0x61, 0x79, 0x20, 0x35, 0x2e, 0x37, 0x22, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x4d,
		0x2d, 0x35, 0x32, 0x30, 0x31, 0x54, 0x4d, 0x2d, 0x34, 0x35, 0x31, 0x35, 0x58, 0x2d, 0x53, 0x74,
		0x79, 0x6c, 0x65, 0x58, 0x2d, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x32, 0x54, 0x4d, 0x2d, 0x34, 0x30,
		0x37, 0x31, 0x58, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x54, 0x4d, 0x2d, 0x34, 0x39, 0x38, 0x32,
		0x69, 0x58, 0x2d, 0x4d, 0x61, 0x78, 0x69, 0x69, 0x58, 0x2d, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x4d,
		0x2d, 0x35, 0x30, 0x31, 0x30, 0x58, 0x2d, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x54, 0x4d, 0x2d,
		0x34, 0x30, 0x38, 0x32, 0x52, 0x58, 0x2d, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x54, 0x4d, 0x2d, 0x35, 0x35, 0x30, 0x33, 0x58, 0x2d, 0x4d, 0x61, 0x67, 0x65, 0x54,
		0x4d, 0x2d, 0x35, 0x35, 0x30, 0x38, 0x58, 0x2d, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x58, 0x2d, 0x46,
		0x6f, 0x72, 0x63, 0x65, 0x58, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x2d, 0x4d, 0x65, 0x64, 0x69,
		0x75, 0x6d, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x76, 0x2d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x58,
		0x53, 0x20, 0x50, 0x72, 0x6f, 0xc3, 0xb6, 0x77, 0x6e, 0x46, 0x75, 0x6e, 0x20, 0x24, 0x31, 0x46,
		0x75, 0x6e, 0x20, 0x35, 0x20, 0x34, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x4d, 0x41, 0x52, 0x54, 0x20, 0x39, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x39, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x38, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c,
		0x54, 0x45, 0x41, 0x73, 0x70, 0x69, 0x72, 0x65, 0x20, 0x45, 0x35, 0x2d, 0x34, 0x32, 0x31, 0x47,
		0x41, 0x73, 0x70, 0x69, 0x72, 0x65, 0x20, 0x45, 0x35, 0x2d, 0x35, 0x31, 0x31, 0x4f, 0x6e, 0x65,
		0x20, 0x31, 0x30, 0x4b, 0x35, 0x30, 0x49, 0x4e, 0x4b, 0x35, 0x34, 0x4c, 0x54, 0x72, 0x61, 0x6e,
		0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x72, 0x61, 0x6e,
		0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x5a, 0x65, 0x6e, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x58, 0x35, 0x35, 0x30, 0x4c, 0x42, 0x58, 0x35,
		0x35, 0x33, 0x4d, 0x41, 0x58, 0x35, 0x35, 0x35, 0x4c, 0x4e, 0x58, 0x35, 0x35, 0x36, 0x55, 0x51,
		0x4b, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x45, 0x34, 0x33, 0x30, 0x30, 0x49,
		0x6e, 0x73, 0x70, 0x69, 0x72, 0x6f, 0x6e, 0x20, 0x33, 0x35, 0x34, 0x31, 0x58, 0x50, 0x53, 0x20,
		0x31, 0x35, 0x20, 0x39, 0x35, 0x33, 0x30, 0x58, 0x50, 0x53, 0x20, 0x31, 0x35, 0x20, 0x39, 0x35,
		0x35, 0x30, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x20, 0x50, 0x72, 0x65, 0x73, 0x61, 0x72, 0x69,
		0x6f, 0x20, 0x43, 0x51, 0x36, 0x31, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20,
		0x50, 0x43, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x20, 0x50, 0x72, 0x65, 0x73, 0x61, 0x72, 0x69,
		0x6f, 0x20, 0x43, 0x51, 0x36, 0x31, 0x48, 0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f,
		0x6e, 0x20, 0x78, 0x32, 0x20, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x50,
		0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x78, 0x32, 0x48, 0x50, 0x20, 0x4c, 0x61, 0x70,
		0x74, 0x6f, 0x70, 0x20, 0x31, 0x35, 0x2d, 0x62, 0x73, 0x30, 0x78, 0x78, 0x31, 0x35, 0x20, 0x4c,
		0x61, 0x70, 0x74, 0x6f, 0x70, 0x20, 0x50, 0x43, 0x48, 0x50, 0x20, 0x45, 0x4e, 0x56, 0x59, 0x20,
		0x78, 0x33, 0x36, 0x30, 0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x62, 0x6c, 0x65,
		0x20, 0x31, 0x35, 0x2d, 0x62, 0x70, 0x30, 0x78, 0x78, 0x45, 0x4e, 0x56, 0x59, 0x20, 0x78, 0x33,
		0x36, 0x30, 0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x50,
		0x43, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x48, 0x50, 0x20,
		0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x64, 0x76, 0x36, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x43, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e,
		0x20, 0x64, 0x76, 0x36, 0x48, 0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e,
		0x48, 0x50, 0x20, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x65, 0x20, 0x78, 0x33, 0x36, 0x30, 0x20,
		0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x74,
		0x72, 0x65, 0x20, 0x78, 0x33, 0x36, 0x30, 0x48, 0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69,
		0x6f, 0x6e, 0x20, 0x41, 0x6c, 0x6c, 0x2d, 0x69, 0x6e, 0x2d, 0x4f, 0x6e, 0x65, 0x20, 0x32, 0x34,
		0x2d, 0x72, 0x30, 0x78, 0x78, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x34,
		0x2d, 0x72, 0x30, 0x78, 0x78, 0x20, 0x41, 0x6c, 0x6c, 0x2d, 0x69, 0x6e, 0x2d, 0x4f, 0x6e, 0x65,
		0x20, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x20, 0x50, 0x43, 0x32, 0x33, 0x2d, 0x66, 0x33,
		0x36, 0x34, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x33, 0x2d, 0x66, 0x33, 0x36, 0x34, 0x20, 0x41, 0x6c,
		0x6c, 0x2d, 0x69, 0x6e, 0x2d, 0x4f, 0x6e, 0x65, 0x20, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70,
		0x20, 0x50, 0x43, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x64, 0x20, 0x48, 0x65, 0x6c, 0x69,
		0x78, 0x20, 0x33, 0x37, 0x30, 0x32, 0x47, 0x35, 0x30, 0x2d, 0x38, 0x30, 0x49, 0x64, 0x65, 0x61,
		0x70, 0x61, 0x64, 0x20, 0x33, 0x31, 0x30, 0x2d, 0x31, 0x35, 0x49, 0x53, 0x4b, 0x4c, 0x65, 0x67,
		0x69, 0x6f, 0x6e, 0x20, 0x59, 0x37, 0x32, 0x30, 0x53, 0x63, 0x68, 0x6e, 0x65, 0x69, 0x64, 0x65,
		0x72, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x34, 0x22, 0x20, 0x43, 0x68,
		0x65, 0x72, 0x72, 0x79, 0x20, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69,
		0x67, 0x65, 0x20, 0x54, 0x48, 0x2d, 0x33, 0x36, 0x30, 0x52, 0x31, 0x32, 0x2e, 0x33, 0x32, 0x43,
		0x54, 0x57, 0x46, 0x42, 0x4d, 0x44, 0x2f, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65,
		0x20, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x69, 0x50, 0x6f,
		0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x31, 0x47, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x32, 0x47, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x33, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x34, 0x69,
		0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x35, 0x69, 0x50, 0x6f, 0x64, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x36, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x37, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x43, 0x6f, 0x77,
		0x6f, 0x6e, 0x46, 0x69, 0x69, 0x4f, 0x4d, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c,
		0x54, 0x44, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x5a, 0x75, 0x6e, 0x65,
		0x48, 0x44, 0x5a, 0x75, 0x6e, 0x65, 0x20, 0x48, 0x44, 0x53, 0x4f, 0x4e, 0x4f, 0x53, 0x50, 0x6c,
		0x61, 0x79, 0x3a, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65,
		0x72, 0x20, 0x34, 0x2e, 0x30, 0x59, 0x50, 0x2d, 0x47, 0x37, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x35, 0x2e, 0x30, 0x59, 0x50, 0x2d, 0x47,
		0x53, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20,
		0x33, 0x2e, 0x36, 0x59, 0x50, 0x2d, 0x47, 0x49, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x34, 0x2e, 0x32, 0x59, 0x50, 0x2d, 0x47, 0x50, 0x31,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x35, 0x2e,
		0x38, 0x59, 0x50, 0x2d, 0x47, 0x35, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x65, 0x72, 0x20, 0x35, 0x30, 0x59, 0x50, 0x2d, 0x47, 0x42, 0x37, 0x30, 0x44, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x37, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x68, 0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x68, 0x61, 0x6e,
		0x6c, 0x69, 0x6e, 0x67, 0x20, 0x4d, 0x36, 0x57, 0x69, 0x7a, 0x7a, 0x41, 0x4b, 0x49, 0x52, 0x41,
		0x41, 0x4b, 0x49, 0x52, 0x41, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x41, 0x4d, 0x43, 0x56, 0x41,
		0x4d, 0x43, 0x56, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x42, 0x42, 0x4b, 0x20, 0x73, 0x68, 0x65,
		0x6c, 0x6c, 0x44, 0x69, 0x67, 0x6d, 0x61, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x45, 0x43, 0x4f,
		0x4e, 0x45, 0x43, 0x4f, 0x4e, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x48, 0x69, 0x20, 0x53, 0x68,
		0x65, 0x6c, 0x6c, 0x4a, 0x56, 0x43, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4b, 0x76, 0x61, 0x6e,
		0x74, 0x4b, 0x76, 0x61, 0x6e, 0x74, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x62, 0x65,
		0x6e, 0x4c, 0x65, 0x62, 0x65, 0x6e, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x66, 0x66,
		0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x6f, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x6f, 0x76, 0x69,
		0x65, 0x77, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x55, 0x4d, 0x55, 0x53, 0x20, 0x53, 0x68,
		0x65, 0x6c, 0x6c, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c,
		0x4e, 0x6f, 0x76, 0x65, 0x78, 0x20, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x77,
		0x69, 0x6e, 0x64, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x54, 0x65, 0x6c, 0x65, 0x66, 0x75, 0x6e,
		0x6b, 0x65, 0x6e, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x59, 0x75, 0x6e, 0x6f, 0x59, 0x75, 0x6e,
		0x6f, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x46, 0x53, 0x2d, 0x41, 0x52, 0x53, 0x2d, 0x30, 0x31,
		0x42, 0x41, 0x69, 0x72, 0x74, 0x69, 0x65, 0x73, 0x41, 0x6c, 0x74, 0x65, 0x63, 0x68, 0x20, 0x55,
		0x45, 0x43, 0x41, 0x54, 0x56, 0x49, 0x4f, 0x35, 0x35, 0x44, 0x31, 0x36, 0x32, 0x30, 0x42, 0x61,
		0x6e, 0x67, 0x4f, 0x6c, 0x75, 0x66, 0x73, 0x65, 0x6e, 0x42, 0x61, 0x6e, 0x67, 0x6f, 0x6c, 0x75,
		0x66, 0x73, 0x65, 0x6e, 0x42, 0x65, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x43, 0x2d,
		0x36, 0x35, 0x43, 0x55, 0x47, 0x38, 0x30, 0x35, 0x32, 0x45, 0x43, 0x72, 0x65, 0x4e, 0x6f, 0x76,
		0x61, 0x43, 0x4e, 0x56, 0x30, 0x30, 0x31, 0x44, 0x4d, 0x4d, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x62,
		0x6f, 0x78, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x52, 0x4f, 0x4e, 0x49, 0x41, 0x46, 0x26, 0x55, 0x47,
		0x6f, 0x47, 0x45, 0x4e, 0x47, 0x37, 0x4c, 0x45, 0x35, 0x35, 0x58, 0x37, 0x30, 0x30, 0x30, 0x55,
		0x35, 0x30, 0x41, 0x44, 0x45, 0x56, 0x54, 0x4f, 0x4f, 0x4c, 0x35, 0x30, 0x41, 0x36, 0x38, 0x33,
		0x46, 0x45, 0x56, 0x53, 0x35, 0x35, 0x41, 0x36, 0x31, 0x30, 0x30, 0x45, 0x45, 0x35, 0x35, 0x55,
		0x36, 0x32, 0x51, 0x47, 0x41, 0x56, 0x54, 0x35, 0x30, 0x41, 0x36, 0x35, 0x30, 0x32, 0x45, 0x41,
		0x4d, 0x49, 0x43, 0x41, 0x4c, 0x49, 0x44, 0x56, 0x42, 0x36, 0x38, 0x38, 0x36, 0x34, 0x39, 0x44,
		0x32, 0x39, 0x30, 0x30, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x48, 0x75, 0x6d, 0x61, 0x78, 0x48, 0x4d,
		0x53, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x4d, 0x53, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x53, 0x46,
		0x56, 0x50, 0x34, 0x30, 0x30, 0x30, 0x54, 0x46, 0x56, 0x50, 0x2d, 0x34, 0x30, 0x30, 0x30, 0x54,
		0x48, 0x47, 0x53, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x47, 0x53, 0x2d, 0x31, 0x30, 0x30, 0x30,
		0x53, 0x48, 0x44, 0x52, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x44, 0x52, 0x2d, 0x31, 0x30, 0x30,
		0x30, 0x53, 0x48, 0x44, 0x52, 0x34, 0x30, 0x30, 0x30, 0x54, 0x48, 0x44, 0x52, 0x2d, 0x34, 0x30,
		0x30, 0x30, 0x54, 0x49, 0x6b, 0x65, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x6b, 0x49, 0x6e, 0x76, 0x65,
		0x72, 0x74, 0x6f, 0x41, 0x46, 0x54, 0x53, 0x4f, 0x30, 0x30, 0x31, 0x34, 0x4b, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x4b, 0x55, 0x42, 0x4f, 0x33, 0x32, 0x44, 0x31, 0x36, 0x32, 0x30, 0x4c,
		0x47, 0x45, 0x58, 0x55, 0x34, 0x33, 0x57, 0x54, 0x31, 0x38, 0x30, 0x4e, 0x34, 0x33, 0x4c, 0x4a,
		0x36, 0x31, 0x34, 0x56, 0x2d, 0x5a, 0x41, 0x35, 0x35, 0x53, 0x4b, 0x38, 0x35, 0x30, 0x56, 0x2d,
		0x5a, 0x41, 0x4b, 0x45, 0x59, 0x30, 0x30, 0x30, 0x30, 0x32, 0x31, 0x33, 0x46, 0x31, 0x7a, 0x4b,
		0x45, 0x59, 0x30, 0x30, 0x30, 0x30, 0x32, 0x31, 0x33, 0x46, 0x4b, 0x45, 0x59, 0x30, 0x30, 0x30,
		0x30, 0x30, 0x30, 0x24, 0x31, 0x4c, 0x4d, 0x32, 0x31, 0x55, 0x33, 0x32, 0x4c, 0x4d, 0x4c, 0x61,
		0x75, 0x72, 0x75, 0x73, 0x4c, 0x69, 0x6e, 0x73, 0x61, 0x72, 0x4c, 0x6f, 0x65, 0x77, 0x65, 0x4d,
		0x53, 0x74, 0x61, 0x72, 0x24, 0x31, 0x4b, 0x54, 0x56, 0x31, 0x38, 0x24, 0x31, 0x4b, 0x20, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x4d, 0x61, 0x6e, 0x68, 0x61, 0x74, 0x74,
		0x61, 0x6e, 0x54, 0x33, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x65, 0x6b, 0x4d, 0x65, 0x74, 0x7a,
		0x4d, 0x49, 0x52, 0x41, 0x59, 0x4c, 0x45, 0x44, 0x4d, 0x2d, 0x33, 0x32, 0x32, 0x4e, 0x49, 0x50,
		0x4e, 0x6f, 0x72, 0x64, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x50, 0x45, 0x41, 0x51, 0x50, 0x52, 0x4f,
		0x46, 0x69, 0x4c, 0x4f, 0x56, 0x49, 0x45, 0x52, 0x41, 0x20, 0x28, 0x24, 0x31, 0x29, 0x44, 0x49,
		0x47, 0x41, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x28, 0x24,
		0x31, 0x29, 0x52, 0x45, 0x47, 0x41, 0x4c, 0x53, 0x43, 0x42, 0x43, 0x53, 0x43, 0x42, 0x43, 0x35,
		0x38, 0x36, 0x34, 0x33, 0x44, 0x31, 0x38, 0x35, 0x30, 0x53, 0x45, 0x47, 0x53, 0x57, 0x54, 0x56,
		0x53, 0x4b, 0x57, 0x45, 0x32, 0x30, 0x45, 0x32, 0x31, 0x53, 0x61, 0x62, 0x61, 0x53, 0x61, 0x6c,
		0x6f, 0x72, 0x61, 0x24, 0x32, 0x4d, 0x61, 0x70, 0x6c, 0x65, 0x5f, 0x32, 0x30, 0x31, 0x31, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x53, 0x65,
		0x6c, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x43, 0x2d, 0x24, 0x31, 0x42, 0x4c, 0x41,
		0x2d, 0x34, 0x33, 0x53, 0x6b, 0x79, 0x5f, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x4b, 0x44, 0x4c, 0x2d,
		0x47, 0x52, 0x31, 0x4b, 0x44, 0x4c, 0x2d, 0x47, 0x4e, 0x24, 0x31, 0x42, 0x52, 0x41, 0x56, 0x49,
		0x41, 0x20, 0x24, 0x31, 0x54, 0x4f, 0x4b, 0x59, 0x4f, 0x54, 0x4f, 0x4b, 0x54, 0x43, 0x4c, 0x45,
		0x44, 0x33, 0x32, 0x53, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x53, 0x61, 0x74, 0x54, 0x65, 0x63,
		0x68, 0x6e, 0x69, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x75, 0x7a, 0x77, 0x34, 0x30, 0x35, 0x34, 0x74,
		0x74, 0x67, 0x55, 0x5a, 0x57, 0x34, 0x30, 0x35, 0x34, 0x54, 0x54, 0x47, 0x54, 0x65, 0x63, 0x68,
		0x6e, 0x69, 0x6b, 0x61, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x24,
		0x31, 0x20, 0x32, 0x38, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x33, 0x32, 0x2e, 0x30, 0x22, 0x24,
		0x31, 0x20, 0x34, 0x33, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x34, 0x30, 0x2e, 0x30, 0x22, 0x24,
		0x31, 0x20, 0x34, 0x39, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x35, 0x35, 0x2e, 0x30, 0x22, 0x34,
		0x30, 0x46, 0x42, 0x35, 0x34, 0x32, 0x36, 0x34, 0x30, 0x4c, 0x32, 0x36, 0x30, 0x30, 0x56, 0x4f,
		0x58, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x77, 0x65, 0x62, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x57, 0x65,
		0x62, 0x20, 0x54, 0x56, 0x57, 0x45, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x54, 0x4f, 0x4e, 0x58, 0x2e,
		0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	}
)
